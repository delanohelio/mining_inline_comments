{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNjA4NDU1", "number": 2828, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozMjo1NVrODdYCrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNDowMDozMFrODkBiTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI5MTk4OnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTozMjo1NVrOFl8O1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMzowNDo1MVrOFmxE1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ==", "bodyText": "I don't think the temporary partition should be a metadata copy of an existing partition. How do I accomplish the following things? How to split a particularly large partition into multiple small partitions? Or how to merge multiple partitions into one large partition?\nSo my point is that temporary partitions should not be bound to existing partitions, they should exist independently. Including the temporary partition should have a separate partition name, and this name has nothing to do with the existing visible partition.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375328471", "createdAt": "2020-02-05T15:32:55Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM0NDA0Nw==", "bodyText": "Tmp partition is mainly for overwrite load, and it should alive very short time.\nFor the partition merge and split, we could disable partition merge and split if there is tmp partition, like Alter operation.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375344047", "createdAt": "2020-02-05T15:56:24Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxOTE5OQ==", "bodyText": "@kangkaisen\nI think you may have misunderstood what I meant. What I want to emphasize is not how to deal with temporary partitions during split and merge. I want to emphasize that we can also complete the functions of partition split and merge through temporary partitions. So what I mean is that we should not assume that it is related to an existing partition when doing temporary partitioning.\nCurrently we can just generate from other partitions, but this premise should not be made.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375619199", "createdAt": "2020-02-06T02:59:56Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MzUwNw==", "bodyText": "we can also complete the functions of partition split and merge through temporary partitions.\n\nWhat you mean is temp partitions need to support split and merge ?", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375643507", "createdAt": "2020-02-06T05:13:24Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3NDg2OQ==", "bodyText": "What you mean is temp partitions need to support split and merge ?\n\nNo.\nI think we can complete the partition split and merge functions through temporary partitions. For example, we create a temporary partition and import the partition data that needs to be merged into this new temporary partition. When the data is imported, replace the previous partitions with this partition. In the same way, partition split can also be achieved through this mechanism.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375674869", "createdAt": "2020-02-06T07:29:03Z", "author": {"login": "imay"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3NjcwMg==", "bodyText": "Oh. My misunderstood...\nI see and I agree with you \uff01", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375676702", "createdAt": "2020-02-06T07:35:07Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NDI2MA==", "bodyText": "Let me think.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r376194260", "createdAt": "2020-02-07T03:04:51Z", "author": {"login": "morningman"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,117 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\u4e34\u65f6\u5206\u533a\u662f\u5bf9 Doris \u4e2d**\u5df2\u5b58\u5728\u7684\u6570\u636e\u8868\u5206\u533a**\u7684\u4e00\u4e2a\u590d\u5236\u3002\u8fd9\u4e2a\u590d\u5236\u64cd\u4f5c\u4ec5\u590d\u5236\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u5982\u5206\u533a\u503c\u8303\u56f4\uff0c\u5206\u6876\u6570\uff0c\u526f\u672c\u6570\u7b49\u7b49\uff0c\u800c**\u4e0d\u590d\u5236\u6570\u636e**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyODQ3MQ=="}, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTM0NDYwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTo0NTo1MFrOFl8vdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTo0NTo1MFrOFl8vdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMzNjgyMw==", "bodyText": "This check is strange. we could add a existTempPartition method to olapTable, and  add a isEmpty method to\nTempPartitions.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r375336823", "createdAt": "2020-02-05T15:45:50Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "diffHunk": "@@ -99,6 +99,11 @@ public MaterializedViewHandler() {\n      */\n     public void processCreateMaterializedView(CreateMaterializedViewStmt addMVClause, Database db, OlapTable olapTable)\n             throws DdlException, AnalysisException {\n+\n+        if (olapTable.hasTempPartition(null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18c24dc35152aca6756db5910b19e49c1a1cb27a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk4Njg1OnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoxNjo0NFrOFwJRFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoxNjo0NFrOFwJRFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyNzc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u662f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002\n          \n          \n            \n            * \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u5f0f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386027797", "createdAt": "2020-02-29T13:16:44Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,200 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\n+\n+\u4e34\u65f6\u5206\u533a\u662f\u5f52\u5c5e\u4e8e\u67d0\u4e00\u5206\u533a\u8868\u7684\u3002\u53ea\u6709\u5206\u533a\u8868\u53ef\u4ee5\u521b\u5efa\u4e34\u65f6\u5206\u533a\u3002\n+\n+## \u89c4\u5219\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u5217\u548c\u6b63\u5f0f\u5206\u533a\u76f8\u540c\uff0c\u4e14\u4e0d\u53ef\u4fee\u6539\u3002\n+* \u4e00\u5f20\u8868\u6240\u6709\u4e34\u65f6\u5206\u533a\u4e4b\u95f4\u7684\u5206\u533a\u8303\u56f4\u4e0d\u53ef\u91cd\u53e0\uff0c\u4f46\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u548c\u6b63\u5f0f\u5206\u533a\u8303\u56f4\u53ef\u4ee5\u91cd\u53e0\u3002\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u540d\u79f0\u4e0d\u80fd\u548c\u6b63\u5f0f\u5206\u533a\u4ee5\u53ca\u5176\u4ed6\u4e34\u65f6\u5206\u533a\u91cd\u590d\u3002\n+\n+## \u652f\u6301\u7684\u64cd\u4f5c\n+\n+\u4e34\u65f6\u5206\u533a\u652f\u6301\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66ff\u6362\u64cd\u4f5c\u3002\n+\n+### \u6dfb\u52a0\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE ADD TEMPORARY PARTITION` \u8bed\u53e5\u5bf9\u4e00\u4e2a\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\");\n+\n+ALTER TABLE tbl2 ADD TEMPORARY PARTITION tp1 VALUES [(\"2020-01-01\"), (\"2020-02-01\"));\n+\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\")\n+(\"in_memory\" = \"true\", \"replication_num\" = \"1\")\n+DISTRIBUTED BY HASH(k1) BUCKETS 5;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u6dfb\u52a0\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u6dfb\u52a0\u548c\u6b63\u5f0f\u5206\u533a\u7684\u6dfb\u52a0\u64cd\u4f5c\u76f8\u4f3c\u3002\u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u8303\u56f4\u72ec\u7acb\u4e8e\u6b63\u5f0f\u5206\u533a\u3002\n+* \u4e34\u65f6\u5206\u533a\u53ef\u4ee5\u72ec\u7acb\u6307\u5b9a\u4e00\u4e9b\u5c5e\u6027\u3002\u5305\u62ec\u5206\u6876\u6570\u3001\u526f\u672c\u6570\u3001\u662f\u5426\u662f\u5185\u5b58\u8868\u3001\u5b58\u50a8\u4ecb\u8d28\u7b49\u4fe1\u606f\u3002\n+\n+### \u5220\u9664\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE DROP TEMPORARY PARTITION` \u8bed\u53e5\u5220\u9664\u4e00\u4e2a\u8868\u7684\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 DROP TEMPORARY PARTITION tp1;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u5220\u9664\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5220\u9664\u4e34\u65f6\u5206\u533a\uff0c\u4e0d\u5f71\u54cd\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u3002\n+\n+### \u66ff\u6362\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE REPLACE PARTITION` \u8bed\u53e5\u5c06\u4e00\u4e2a\u8868\u7684\u6b63\u5f0f\u5206\u533a\u66ff\u6362\u4e3a\u4e34\u65f6\u5206\u533a\u3002\n+\n+```\n+ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2, tp3);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2)\n+PROPERTIES (\n+    \"strict_range\" = \"false\",\n+    \"use_temp_partition_name\" = \"true\"\n+);\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u66ff\u6362\u64cd\u4f5c\u6709\u4e24\u4e2a\u7279\u6b8a\u7684\u53ef\u9009\u53c2\u6570\uff1a\n+\n+1. `strict_range`\n+\n+    \u9ed8\u8ba4\u4e3a true\u3002\u5f53\u8be5\u53c2\u6570\u4e3a true \u65f6\uff0c\u8868\u793a\u8981\u88ab\u66ff\u6362\u7684\u6240\u6709\u6b63\u5f0f\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u9700\u8981\u548c\u66ff\u6362\u7684\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u5b8c\u5168\u76f8\u540c\u3002\u5f53\u7f6e\u4e3a false \u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u66ff\u6362\u540e\uff0c\u65b0\u7684\u6b63\u5f0f\u5206\u533a\u95f4\u7684\u8303\u56f4\u4e0d\u91cd\u53e0\u5373\u53ef\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1, p2, p3 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 20), [20, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 45), [45, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1, p2, p3\u3002\n+    \n+    * \u793a\u4f8b2\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 50) => [10, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u4e0d\u76f8\u540c\uff0c\u5982\u679c `strict_range` \u4e3a true\uff0c\u5219\u4e0d\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1\u3002\u5982\u679c\u4e3a false\uff0c\u4e14\u66ff\u6362\u540e\u7684\u4e24\u4e2a\u5206\u533a\u8303\u56f4 `[10, 30), [40, 50)` \u548c\u5176\u4ed6\u6b63\u5f0f\u5206\u533a\u4e0d\u91cd\u53e0\uff0c\u5219\u53ef\u4ee5\u66ff\u6362\u3002\n+\n+2. `use_temp_partition_name`\n+\n+    \u9ed8\u8ba4\u4e3a false\u3002\u5f53\u8be5\u53c2\u6570\u4e3a false\uff0c\u5e76\u4e14\u5f85\u66ff\u6362\u7684\u5206\u533a\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u5219\u66ff\u6362\u540e\u7684\u6b63\u5f0f\u5206\u533a\u540d\u79f0\u7ef4\u6301\u4e0d\u53d8\u3002\u5982\u679c\u4e3a true\uff0c\u5219\u66ff\u6362\u540e\uff0c\u6b63\u5f0f\u5206\u533a\u7684\u540d\u79f0\u4e3a\u66ff\u6362\u5206\u533a\u7684\u540d\u79f0\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+        \n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4f9d\u7136\u4e3a p1\uff0c\u4f46\u662f\u76f8\u5173\u7684\u6570\u636e\u548c\u5c5e\u6027\u90fd\u66ff\u6362\u4e3a tp1 \u7684\u3002\n+        \n+        \u5982\u679c `use_temp_partition_name` \u9ed8\u8ba4\u4e3a true\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4e3a tp1\u3002p1 \u5206\u533a\u4e0d\u518d\u5b58\u5728\u3002\n+        \n+    * \u793a\u4f8b2\n+\n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+\n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u4f46\u56e0\u4e3a\u5f85\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u4e0d\u540c\uff0c\u5219\u8be5\u53c2\u6570\u65e0\u6548\u3002\u66ff\u6362\u540e\uff0c\u5206\u533a\u540d\u79f0\u4e3a tp1\uff0cp1 \u548c p2 \u4e0d\u518d\u5b58\u5728\u3002\n+        \n+\u66ff\u6362\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5206\u533a\u66ff\u6362\u6210\u529f\u540e\uff0c\u88ab\u66ff\u6362\u7684\u5206\u533a\u5c06\u88ab\u5220\u9664\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+\n+## \u4e34\u65f6\u5206\u533a\u7684\u5bfc\u5165\n+\n+\uff08TODO\uff09\n+\n+## \u548c\u5176\u4ed6\u64cd\u4f5c\u7684\u5173\u7cfb\n+\n+### DROP\n+\n+* \u4f7f\u7528 Drop \u64cd\u4f5c\u76f4\u63a5\u5220\u9664\u6570\u636e\u5e93\u6216\u8868\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u6570\u636e\u5e93\u6216\u8868\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\uff0c\u540c\u65f6\uff0c\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\u4e5f\u4f1a\u88ab\u4e00\u540c\u6062\u590d\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u6b63\u5f0f\u5206\u533a\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u5206\u533a\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\u3002\u64cd\u4f5c\u6b63\u5f0f\u5206\u533a\u548c\u4e34\u65f6\u5206\u533a\u65e0\u5173\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u4e34\u65f6\u5206\u533a\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u4e34\u65f6\u5206\u533a\u3002\n+\n+### TRUNCATE\n+\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u8868\uff0c\u8868\u7684\u4e34\u65f6\u5206\u533a\u4f1a\u88ab\u5220\u9664\uff0c\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u662f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk4NzM1OnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoxODoxMlrOFwJRWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoxODoxMlrOFwJRWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyNzg2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u80fd\u591f\u91cd\u5199\u67d0\u4e00\u5206\u533a\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u91c7\u7528\u5148\u5220\u9664\u5728\u5bfc\u5165\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5728\u4e2d\u95f4\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u67e5\u770b\u6570\u636e\u3002\u8fd9\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5c06\u65b0\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u540e\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n          \n          \n            \n                \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u80fd\u591f\u91cd\u5199\u67d0\u4e00\u5206\u533a\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u91c7\u7528\u5148\u5220\u9664\u518d\u5bfc\u5165\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5728\u4e2d\u95f4\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u67e5\u770b\u6570\u636e\u3002\u8fd9\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5c06\u65b0\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u540e\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386027864", "createdAt": "2020-02-29T13:18:12Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,200 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\n+\n+\u4e34\u65f6\u5206\u533a\u662f\u5f52\u5c5e\u4e8e\u67d0\u4e00\u5206\u533a\u8868\u7684\u3002\u53ea\u6709\u5206\u533a\u8868\u53ef\u4ee5\u521b\u5efa\u4e34\u65f6\u5206\u533a\u3002\n+\n+## \u89c4\u5219\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u5217\u548c\u6b63\u5f0f\u5206\u533a\u76f8\u540c\uff0c\u4e14\u4e0d\u53ef\u4fee\u6539\u3002\n+* \u4e00\u5f20\u8868\u6240\u6709\u4e34\u65f6\u5206\u533a\u4e4b\u95f4\u7684\u5206\u533a\u8303\u56f4\u4e0d\u53ef\u91cd\u53e0\uff0c\u4f46\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u548c\u6b63\u5f0f\u5206\u533a\u8303\u56f4\u53ef\u4ee5\u91cd\u53e0\u3002\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u540d\u79f0\u4e0d\u80fd\u548c\u6b63\u5f0f\u5206\u533a\u4ee5\u53ca\u5176\u4ed6\u4e34\u65f6\u5206\u533a\u91cd\u590d\u3002\n+\n+## \u652f\u6301\u7684\u64cd\u4f5c\n+\n+\u4e34\u65f6\u5206\u533a\u652f\u6301\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66ff\u6362\u64cd\u4f5c\u3002\n+\n+### \u6dfb\u52a0\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE ADD TEMPORARY PARTITION` \u8bed\u53e5\u5bf9\u4e00\u4e2a\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\");\n+\n+ALTER TABLE tbl2 ADD TEMPORARY PARTITION tp1 VALUES [(\"2020-01-01\"), (\"2020-02-01\"));\n+\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\")\n+(\"in_memory\" = \"true\", \"replication_num\" = \"1\")\n+DISTRIBUTED BY HASH(k1) BUCKETS 5;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u6dfb\u52a0\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u6dfb\u52a0\u548c\u6b63\u5f0f\u5206\u533a\u7684\u6dfb\u52a0\u64cd\u4f5c\u76f8\u4f3c\u3002\u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u8303\u56f4\u72ec\u7acb\u4e8e\u6b63\u5f0f\u5206\u533a\u3002\n+* \u4e34\u65f6\u5206\u533a\u53ef\u4ee5\u72ec\u7acb\u6307\u5b9a\u4e00\u4e9b\u5c5e\u6027\u3002\u5305\u62ec\u5206\u6876\u6570\u3001\u526f\u672c\u6570\u3001\u662f\u5426\u662f\u5185\u5b58\u8868\u3001\u5b58\u50a8\u4ecb\u8d28\u7b49\u4fe1\u606f\u3002\n+\n+### \u5220\u9664\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE DROP TEMPORARY PARTITION` \u8bed\u53e5\u5220\u9664\u4e00\u4e2a\u8868\u7684\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 DROP TEMPORARY PARTITION tp1;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u5220\u9664\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5220\u9664\u4e34\u65f6\u5206\u533a\uff0c\u4e0d\u5f71\u54cd\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u3002\n+\n+### \u66ff\u6362\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE REPLACE PARTITION` \u8bed\u53e5\u5c06\u4e00\u4e2a\u8868\u7684\u6b63\u5f0f\u5206\u533a\u66ff\u6362\u4e3a\u4e34\u65f6\u5206\u533a\u3002\n+\n+```\n+ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2, tp3);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2)\n+PROPERTIES (\n+    \"strict_range\" = \"false\",\n+    \"use_temp_partition_name\" = \"true\"\n+);\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u66ff\u6362\u64cd\u4f5c\u6709\u4e24\u4e2a\u7279\u6b8a\u7684\u53ef\u9009\u53c2\u6570\uff1a\n+\n+1. `strict_range`\n+\n+    \u9ed8\u8ba4\u4e3a true\u3002\u5f53\u8be5\u53c2\u6570\u4e3a true \u65f6\uff0c\u8868\u793a\u8981\u88ab\u66ff\u6362\u7684\u6240\u6709\u6b63\u5f0f\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u9700\u8981\u548c\u66ff\u6362\u7684\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u5b8c\u5168\u76f8\u540c\u3002\u5f53\u7f6e\u4e3a false \u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u66ff\u6362\u540e\uff0c\u65b0\u7684\u6b63\u5f0f\u5206\u533a\u95f4\u7684\u8303\u56f4\u4e0d\u91cd\u53e0\u5373\u53ef\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1, p2, p3 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 20), [20, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 45), [45, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1, p2, p3\u3002\n+    \n+    * \u793a\u4f8b2\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 50) => [10, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u4e0d\u76f8\u540c\uff0c\u5982\u679c `strict_range` \u4e3a true\uff0c\u5219\u4e0d\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1\u3002\u5982\u679c\u4e3a false\uff0c\u4e14\u66ff\u6362\u540e\u7684\u4e24\u4e2a\u5206\u533a\u8303\u56f4 `[10, 30), [40, 50)` \u548c\u5176\u4ed6\u6b63\u5f0f\u5206\u533a\u4e0d\u91cd\u53e0\uff0c\u5219\u53ef\u4ee5\u66ff\u6362\u3002\n+\n+2. `use_temp_partition_name`\n+\n+    \u9ed8\u8ba4\u4e3a false\u3002\u5f53\u8be5\u53c2\u6570\u4e3a false\uff0c\u5e76\u4e14\u5f85\u66ff\u6362\u7684\u5206\u533a\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u5219\u66ff\u6362\u540e\u7684\u6b63\u5f0f\u5206\u533a\u540d\u79f0\u7ef4\u6301\u4e0d\u53d8\u3002\u5982\u679c\u4e3a true\uff0c\u5219\u66ff\u6362\u540e\uff0c\u6b63\u5f0f\u5206\u533a\u7684\u540d\u79f0\u4e3a\u66ff\u6362\u5206\u533a\u7684\u540d\u79f0\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+        \n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4f9d\u7136\u4e3a p1\uff0c\u4f46\u662f\u76f8\u5173\u7684\u6570\u636e\u548c\u5c5e\u6027\u90fd\u66ff\u6362\u4e3a tp1 \u7684\u3002\n+        \n+        \u5982\u679c `use_temp_partition_name` \u9ed8\u8ba4\u4e3a true\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4e3a tp1\u3002p1 \u5206\u533a\u4e0d\u518d\u5b58\u5728\u3002\n+        \n+    * \u793a\u4f8b2\n+\n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+\n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u4f46\u56e0\u4e3a\u5f85\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u4e0d\u540c\uff0c\u5219\u8be5\u53c2\u6570\u65e0\u6548\u3002\u66ff\u6362\u540e\uff0c\u5206\u533a\u540d\u79f0\u4e3a tp1\uff0cp1 \u548c p2 \u4e0d\u518d\u5b58\u5728\u3002\n+        \n+\u66ff\u6362\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5206\u533a\u66ff\u6362\u6210\u529f\u540e\uff0c\u88ab\u66ff\u6362\u7684\u5206\u533a\u5c06\u88ab\u5220\u9664\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+\n+## \u4e34\u65f6\u5206\u533a\u7684\u5bfc\u5165\n+\n+\uff08TODO\uff09\n+\n+## \u548c\u5176\u4ed6\u64cd\u4f5c\u7684\u5173\u7cfb\n+\n+### DROP\n+\n+* \u4f7f\u7528 Drop \u64cd\u4f5c\u76f4\u63a5\u5220\u9664\u6570\u636e\u5e93\u6216\u8868\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u6570\u636e\u5e93\u6216\u8868\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\uff0c\u540c\u65f6\uff0c\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\u4e5f\u4f1a\u88ab\u4e00\u540c\u6062\u590d\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u6b63\u5f0f\u5206\u533a\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u5206\u533a\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\u3002\u64cd\u4f5c\u6b63\u5f0f\u5206\u533a\u548c\u4e34\u65f6\u5206\u533a\u65e0\u5173\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u4e34\u65f6\u5206\u533a\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u4e34\u65f6\u5206\u533a\u3002\n+\n+### TRUNCATE\n+\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u8868\uff0c\u8868\u7684\u4e34\u65f6\u5206\u533a\u4f1a\u88ab\u5220\u9664\uff0c\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u662f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002\n+* \u4e0d\u53ef\u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u4e34\u65f6\u5206\u533a\u3002\n+\n+### ALTER\n+\n+* \u5f53\u8868\u5b58\u5728\u4e34\u65f6\u5206\u533a\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528 Alter \u547d\u4ee4\u5bf9\u8868\u8fdb\u884c Schema Change\u3001Rollup \u7b49\u53d8\u66f4\u64cd\u4f5c\u3002\n+* \u5f53\u8868\u5728\u8fdb\u884c\u53d8\u66f4\u64cd\u4f5c\u65f6\uff0c\u65e0\u6cd5\u5bf9\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\u3002\n+\n+\n+## \u6700\u4f73\u5b9e\u8df5\n+\n+1. \u539f\u5b50\u7684\u8986\u76d6\u5199\u64cd\u4f5c\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u80fd\u591f\u91cd\u5199\u67d0\u4e00\u5206\u533a\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u91c7\u7528\u5148\u5220\u9664\u5728\u5bfc\u5165\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5728\u4e2d\u95f4\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u67e5\u770b\u6570\u636e\u3002\u8fd9\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5c06\u65b0\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u540e\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk4OTEyOnYy", "diffSide": "RIGHT", "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoyMjozMlrOFwJSNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNToxMDoyM1rOFwJp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODA4Ng==", "bodyText": "\u7136\u540e\u901a\u8fc7 INSERT INTO \u547d\u4ee4\u5c06\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u4e2d\n\u6211\u7406\u89e3\u6211\u4eec\u4e4b\u540e\u5e94\u8be5\u662f\u8981\u652f\u6301auto merge \u548csplit \u7684\u3002", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386028086", "createdAt": "2020-02-29T13:22:32Z", "author": {"login": "kangkaisen"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,200 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\n+\n+\u4e34\u65f6\u5206\u533a\u662f\u5f52\u5c5e\u4e8e\u67d0\u4e00\u5206\u533a\u8868\u7684\u3002\u53ea\u6709\u5206\u533a\u8868\u53ef\u4ee5\u521b\u5efa\u4e34\u65f6\u5206\u533a\u3002\n+\n+## \u89c4\u5219\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u5217\u548c\u6b63\u5f0f\u5206\u533a\u76f8\u540c\uff0c\u4e14\u4e0d\u53ef\u4fee\u6539\u3002\n+* \u4e00\u5f20\u8868\u6240\u6709\u4e34\u65f6\u5206\u533a\u4e4b\u95f4\u7684\u5206\u533a\u8303\u56f4\u4e0d\u53ef\u91cd\u53e0\uff0c\u4f46\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u548c\u6b63\u5f0f\u5206\u533a\u8303\u56f4\u53ef\u4ee5\u91cd\u53e0\u3002\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u540d\u79f0\u4e0d\u80fd\u548c\u6b63\u5f0f\u5206\u533a\u4ee5\u53ca\u5176\u4ed6\u4e34\u65f6\u5206\u533a\u91cd\u590d\u3002\n+\n+## \u652f\u6301\u7684\u64cd\u4f5c\n+\n+\u4e34\u65f6\u5206\u533a\u652f\u6301\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66ff\u6362\u64cd\u4f5c\u3002\n+\n+### \u6dfb\u52a0\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE ADD TEMPORARY PARTITION` \u8bed\u53e5\u5bf9\u4e00\u4e2a\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\");\n+\n+ALTER TABLE tbl2 ADD TEMPORARY PARTITION tp1 VALUES [(\"2020-01-01\"), (\"2020-02-01\"));\n+\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\")\n+(\"in_memory\" = \"true\", \"replication_num\" = \"1\")\n+DISTRIBUTED BY HASH(k1) BUCKETS 5;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u6dfb\u52a0\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u6dfb\u52a0\u548c\u6b63\u5f0f\u5206\u533a\u7684\u6dfb\u52a0\u64cd\u4f5c\u76f8\u4f3c\u3002\u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u8303\u56f4\u72ec\u7acb\u4e8e\u6b63\u5f0f\u5206\u533a\u3002\n+* \u4e34\u65f6\u5206\u533a\u53ef\u4ee5\u72ec\u7acb\u6307\u5b9a\u4e00\u4e9b\u5c5e\u6027\u3002\u5305\u62ec\u5206\u6876\u6570\u3001\u526f\u672c\u6570\u3001\u662f\u5426\u662f\u5185\u5b58\u8868\u3001\u5b58\u50a8\u4ecb\u8d28\u7b49\u4fe1\u606f\u3002\n+\n+### \u5220\u9664\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE DROP TEMPORARY PARTITION` \u8bed\u53e5\u5220\u9664\u4e00\u4e2a\u8868\u7684\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 DROP TEMPORARY PARTITION tp1;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u5220\u9664\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5220\u9664\u4e34\u65f6\u5206\u533a\uff0c\u4e0d\u5f71\u54cd\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u3002\n+\n+### \u66ff\u6362\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE REPLACE PARTITION` \u8bed\u53e5\u5c06\u4e00\u4e2a\u8868\u7684\u6b63\u5f0f\u5206\u533a\u66ff\u6362\u4e3a\u4e34\u65f6\u5206\u533a\u3002\n+\n+```\n+ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2, tp3);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2)\n+PROPERTIES (\n+    \"strict_range\" = \"false\",\n+    \"use_temp_partition_name\" = \"true\"\n+);\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u66ff\u6362\u64cd\u4f5c\u6709\u4e24\u4e2a\u7279\u6b8a\u7684\u53ef\u9009\u53c2\u6570\uff1a\n+\n+1. `strict_range`\n+\n+    \u9ed8\u8ba4\u4e3a true\u3002\u5f53\u8be5\u53c2\u6570\u4e3a true \u65f6\uff0c\u8868\u793a\u8981\u88ab\u66ff\u6362\u7684\u6240\u6709\u6b63\u5f0f\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u9700\u8981\u548c\u66ff\u6362\u7684\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u5b8c\u5168\u76f8\u540c\u3002\u5f53\u7f6e\u4e3a false \u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u66ff\u6362\u540e\uff0c\u65b0\u7684\u6b63\u5f0f\u5206\u533a\u95f4\u7684\u8303\u56f4\u4e0d\u91cd\u53e0\u5373\u53ef\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1, p2, p3 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 20), [20, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 45), [45, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1, p2, p3\u3002\n+    \n+    * \u793a\u4f8b2\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 50) => [10, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u4e0d\u76f8\u540c\uff0c\u5982\u679c `strict_range` \u4e3a true\uff0c\u5219\u4e0d\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1\u3002\u5982\u679c\u4e3a false\uff0c\u4e14\u66ff\u6362\u540e\u7684\u4e24\u4e2a\u5206\u533a\u8303\u56f4 `[10, 30), [40, 50)` \u548c\u5176\u4ed6\u6b63\u5f0f\u5206\u533a\u4e0d\u91cd\u53e0\uff0c\u5219\u53ef\u4ee5\u66ff\u6362\u3002\n+\n+2. `use_temp_partition_name`\n+\n+    \u9ed8\u8ba4\u4e3a false\u3002\u5f53\u8be5\u53c2\u6570\u4e3a false\uff0c\u5e76\u4e14\u5f85\u66ff\u6362\u7684\u5206\u533a\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u5219\u66ff\u6362\u540e\u7684\u6b63\u5f0f\u5206\u533a\u540d\u79f0\u7ef4\u6301\u4e0d\u53d8\u3002\u5982\u679c\u4e3a true\uff0c\u5219\u66ff\u6362\u540e\uff0c\u6b63\u5f0f\u5206\u533a\u7684\u540d\u79f0\u4e3a\u66ff\u6362\u5206\u533a\u7684\u540d\u79f0\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+        \n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4f9d\u7136\u4e3a p1\uff0c\u4f46\u662f\u76f8\u5173\u7684\u6570\u636e\u548c\u5c5e\u6027\u90fd\u66ff\u6362\u4e3a tp1 \u7684\u3002\n+        \n+        \u5982\u679c `use_temp_partition_name` \u9ed8\u8ba4\u4e3a true\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4e3a tp1\u3002p1 \u5206\u533a\u4e0d\u518d\u5b58\u5728\u3002\n+        \n+    * \u793a\u4f8b2\n+\n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+\n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u4f46\u56e0\u4e3a\u5f85\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u4e0d\u540c\uff0c\u5219\u8be5\u53c2\u6570\u65e0\u6548\u3002\u66ff\u6362\u540e\uff0c\u5206\u533a\u540d\u79f0\u4e3a tp1\uff0cp1 \u548c p2 \u4e0d\u518d\u5b58\u5728\u3002\n+        \n+\u66ff\u6362\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5206\u533a\u66ff\u6362\u6210\u529f\u540e\uff0c\u88ab\u66ff\u6362\u7684\u5206\u533a\u5c06\u88ab\u5220\u9664\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+\n+## \u4e34\u65f6\u5206\u533a\u7684\u5bfc\u5165\n+\n+\uff08TODO\uff09\n+\n+## \u548c\u5176\u4ed6\u64cd\u4f5c\u7684\u5173\u7cfb\n+\n+### DROP\n+\n+* \u4f7f\u7528 Drop \u64cd\u4f5c\u76f4\u63a5\u5220\u9664\u6570\u636e\u5e93\u6216\u8868\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u6570\u636e\u5e93\u6216\u8868\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\uff0c\u540c\u65f6\uff0c\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\u4e5f\u4f1a\u88ab\u4e00\u540c\u6062\u590d\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u6b63\u5f0f\u5206\u533a\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u5206\u533a\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\u3002\u64cd\u4f5c\u6b63\u5f0f\u5206\u533a\u548c\u4e34\u65f6\u5206\u533a\u65e0\u5173\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u4e34\u65f6\u5206\u533a\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u4e34\u65f6\u5206\u533a\u3002\n+\n+### TRUNCATE\n+\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u8868\uff0c\u8868\u7684\u4e34\u65f6\u5206\u533a\u4f1a\u88ab\u5220\u9664\uff0c\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u662f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002\n+* \u4e0d\u53ef\u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u4e34\u65f6\u5206\u533a\u3002\n+\n+### ALTER\n+\n+* \u5f53\u8868\u5b58\u5728\u4e34\u65f6\u5206\u533a\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528 Alter \u547d\u4ee4\u5bf9\u8868\u8fdb\u884c Schema Change\u3001Rollup \u7b49\u53d8\u66f4\u64cd\u4f5c\u3002\n+* \u5f53\u8868\u5728\u8fdb\u884c\u53d8\u66f4\u64cd\u4f5c\u65f6\uff0c\u65e0\u6cd5\u5bf9\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\u3002\n+\n+\n+## \u6700\u4f73\u5b9e\u8df5\n+\n+1. \u539f\u5b50\u7684\u8986\u76d6\u5199\u64cd\u4f5c\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u80fd\u591f\u91cd\u5199\u67d0\u4e00\u5206\u533a\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u91c7\u7528\u5148\u5220\u9664\u5728\u5bfc\u5165\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5728\u4e2d\u95f4\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u67e5\u770b\u6570\u636e\u3002\u8fd9\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5c06\u65b0\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u540e\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n+    \n+2. \u4fee\u6539\u5206\u6876\u6570\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5728\u521b\u5efa\u5206\u533a\u65f6\u4f7f\u7528\u4e86\u4e0d\u5408\u9002\u7684\u5206\u6876\u6570\u3002\u5219\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u5206\u533a\u8303\u56f4\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5e76\u6307\u5b9a\u65b0\u7684\u5206\u6876\u6570\u3002\u7136\u540e\u901a\u8fc7 `INSERT INTO` \u547d\u4ee4\u5c06\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u4e2d\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n+    \n+3. \u5408\u5e76\u6216\u5206\u5272\u5206\u533a\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u5bf9\u5206\u533a\u7684\u8303\u56f4\u8fdb\u884c\u4fee\u6539\uff0c\u6bd4\u5982\u5408\u5e76\u4e24\u4e2a\u5206\u533a\uff0c\u6216\u5c06\u4e00\u4e2a\u5927\u5206\u533a\u5206\u5272\u6210\u591a\u4e2a\u5c0f\u5206\u533a\u3002\u5219\u7528\u6237\u53ef\u4ee5\u5148\u5efa\u7acb\u5bf9\u5e94\u5408\u5e76\u6216\u5206\u5272\u540e\u8303\u56f4\u7684\u4e34\u65f6\u5206\u533a\uff0c\u7136\u540e\u901a\u8fc7 `INSERT INTO` \u547d\u4ee4\u5c06\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u4e2d\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzNDE0NA==", "bodyText": "\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u4e0d\u51b2\u7a81\u3002\u540e\u9762\u53ef\u4ee5\u8003\u8651\u4e0b\uff0cinsert into\u8fd9\u79cd\u53ea\u662f\u4e2a\u4e34\u65f6\u7684\u65b9\u6848\u3002", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386034144", "createdAt": "2020-02-29T15:10:23Z", "author": {"login": "morningman"}, "path": "docs/documentation/cn/administrator-guide/alter-table/alter-table-temp-partition.md", "diffHunk": "@@ -0,0 +1,200 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# \u4e34\u65f6\u5206\u533a\n+\n+\u5728 0.12 \u7248\u672c\u4e2d\uff0cDoris \u652f\u6301\u4e86\u4e34\u65f6\u5206\u533a\u529f\u80fd\u3002\n+\n+\u4e34\u65f6\u5206\u533a\u662f\u5f52\u5c5e\u4e8e\u67d0\u4e00\u5206\u533a\u8868\u7684\u3002\u53ea\u6709\u5206\u533a\u8868\u53ef\u4ee5\u521b\u5efa\u4e34\u65f6\u5206\u533a\u3002\n+\n+## \u89c4\u5219\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u5217\u548c\u6b63\u5f0f\u5206\u533a\u76f8\u540c\uff0c\u4e14\u4e0d\u53ef\u4fee\u6539\u3002\n+* \u4e00\u5f20\u8868\u6240\u6709\u4e34\u65f6\u5206\u533a\u4e4b\u95f4\u7684\u5206\u533a\u8303\u56f4\u4e0d\u53ef\u91cd\u53e0\uff0c\u4f46\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u548c\u6b63\u5f0f\u5206\u533a\u8303\u56f4\u53ef\u4ee5\u91cd\u53e0\u3002\n+* \u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u540d\u79f0\u4e0d\u80fd\u548c\u6b63\u5f0f\u5206\u533a\u4ee5\u53ca\u5176\u4ed6\u4e34\u65f6\u5206\u533a\u91cd\u590d\u3002\n+\n+## \u652f\u6301\u7684\u64cd\u4f5c\n+\n+\u4e34\u65f6\u5206\u533a\u652f\u6301\u6dfb\u52a0\u3001\u5220\u9664\u3001\u66ff\u6362\u64cd\u4f5c\u3002\n+\n+### \u6dfb\u52a0\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE ADD TEMPORARY PARTITION` \u8bed\u53e5\u5bf9\u4e00\u4e2a\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\");\n+\n+ALTER TABLE tbl2 ADD TEMPORARY PARTITION tp1 VALUES [(\"2020-01-01\"), (\"2020-02-01\"));\n+\n+ALTER TABLE tbl1 ADD TEMPORARY PARTITION tp1 VALUES LESS THAN(\"2020-02-01\")\n+(\"in_memory\" = \"true\", \"replication_num\" = \"1\")\n+DISTRIBUTED BY HASH(k1) BUCKETS 5;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u6dfb\u52a0\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u4e34\u65f6\u5206\u533a\u7684\u6dfb\u52a0\u548c\u6b63\u5f0f\u5206\u533a\u7684\u6dfb\u52a0\u64cd\u4f5c\u76f8\u4f3c\u3002\u4e34\u65f6\u5206\u533a\u7684\u5206\u533a\u8303\u56f4\u72ec\u7acb\u4e8e\u6b63\u5f0f\u5206\u533a\u3002\n+* \u4e34\u65f6\u5206\u533a\u53ef\u4ee5\u72ec\u7acb\u6307\u5b9a\u4e00\u4e9b\u5c5e\u6027\u3002\u5305\u62ec\u5206\u6876\u6570\u3001\u526f\u672c\u6570\u3001\u662f\u5426\u662f\u5185\u5b58\u8868\u3001\u5b58\u50a8\u4ecb\u8d28\u7b49\u4fe1\u606f\u3002\n+\n+### \u5220\u9664\u4e34\u65f6\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE DROP TEMPORARY PARTITION` \u8bed\u53e5\u5220\u9664\u4e00\u4e2a\u8868\u7684\u4e34\u65f6\u5206\u533a\uff1a\n+\n+```\n+ALTER TABLE tbl1 DROP TEMPORARY PARTITION tp1;\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u5220\u9664\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5220\u9664\u4e34\u65f6\u5206\u533a\uff0c\u4e0d\u5f71\u54cd\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u3002\n+\n+### \u66ff\u6362\u5206\u533a\n+\n+\u53ef\u4ee5\u901a\u8fc7 `ALTER TABLE REPLACE PARTITION` \u8bed\u53e5\u5c06\u4e00\u4e2a\u8868\u7684\u6b63\u5f0f\u5206\u533a\u66ff\u6362\u4e3a\u4e34\u65f6\u5206\u533a\u3002\n+\n+```\n+ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2, tp3);\n+\n+ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1, tp2)\n+PROPERTIES (\n+    \"strict_range\" = \"false\",\n+    \"use_temp_partition_name\" = \"true\"\n+);\n+```\n+\n+\u901a\u8fc7 `HELP ALTER TABLE;` \u67e5\u770b\u66f4\u591a\u5e2e\u52a9\u548c\u793a\u4f8b\u3002\n+\n+\u66ff\u6362\u64cd\u4f5c\u6709\u4e24\u4e2a\u7279\u6b8a\u7684\u53ef\u9009\u53c2\u6570\uff1a\n+\n+1. `strict_range`\n+\n+    \u9ed8\u8ba4\u4e3a true\u3002\u5f53\u8be5\u53c2\u6570\u4e3a true \u65f6\uff0c\u8868\u793a\u8981\u88ab\u66ff\u6362\u7684\u6240\u6709\u6b63\u5f0f\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u9700\u8981\u548c\u66ff\u6362\u7684\u4e34\u65f6\u5206\u533a\u7684\u8303\u56f4\u5e76\u96c6\u5b8c\u5168\u76f8\u540c\u3002\u5f53\u7f6e\u4e3a false \u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u66ff\u6362\u540e\uff0c\u65b0\u7684\u6b63\u5f0f\u5206\u533a\u95f4\u7684\u8303\u56f4\u4e0d\u91cd\u53e0\u5373\u53ef\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1, p2, p3 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 20), [20, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 45), [45, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1, p2, p3\u3002\n+    \n+    * \u793a\u4f8b2\n+    \n+        \u5f85\u66ff\u6362\u7684\u5206\u533a p1 \u7684\u8303\u56f4 (=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 50) => [10, 50)\n+        ```\n+    \n+        \u66ff\u6362\u5206\u533a tp1, tp2 \u7684\u8303\u56f4(=> \u5e76\u96c6)\uff1a\n+        \n+        ```\n+        [10, 30), [40, 50) => [10, 30), [40, 50)\n+        ```\n+        \n+        \u8303\u56f4\u5e76\u96c6\u4e0d\u76f8\u540c\uff0c\u5982\u679c `strict_range` \u4e3a true\uff0c\u5219\u4e0d\u53ef\u4ee5\u4f7f\u7528 tp1 \u548c tp2 \u66ff\u6362 p1\u3002\u5982\u679c\u4e3a false\uff0c\u4e14\u66ff\u6362\u540e\u7684\u4e24\u4e2a\u5206\u533a\u8303\u56f4 `[10, 30), [40, 50)` \u548c\u5176\u4ed6\u6b63\u5f0f\u5206\u533a\u4e0d\u91cd\u53e0\uff0c\u5219\u53ef\u4ee5\u66ff\u6362\u3002\n+\n+2. `use_temp_partition_name`\n+\n+    \u9ed8\u8ba4\u4e3a false\u3002\u5f53\u8be5\u53c2\u6570\u4e3a false\uff0c\u5e76\u4e14\u5f85\u66ff\u6362\u7684\u5206\u533a\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u5219\u66ff\u6362\u540e\u7684\u6b63\u5f0f\u5206\u533a\u540d\u79f0\u7ef4\u6301\u4e0d\u53d8\u3002\u5982\u679c\u4e3a true\uff0c\u5219\u66ff\u6362\u540e\uff0c\u6b63\u5f0f\u5206\u533a\u7684\u540d\u79f0\u4e3a\u66ff\u6362\u5206\u533a\u7684\u540d\u79f0\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff1a\n+    \n+    * \u793a\u4f8b1\n+    \n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+        \n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4f9d\u7136\u4e3a p1\uff0c\u4f46\u662f\u76f8\u5173\u7684\u6570\u636e\u548c\u5c5e\u6027\u90fd\u66ff\u6362\u4e3a tp1 \u7684\u3002\n+        \n+        \u5982\u679c `use_temp_partition_name` \u9ed8\u8ba4\u4e3a true\uff0c\u5219\u5728\u66ff\u6362\u540e\uff0c\u5206\u533a\u7684\u540d\u79f0\u4e3a tp1\u3002p1 \u5206\u533a\u4e0d\u518d\u5b58\u5728\u3002\n+        \n+    * \u793a\u4f8b2\n+\n+        ```\n+        ALTER TABLE tbl1 REPLACE PARTITION (p1, p2) WITH TEMPORARY PARTITION (tp1);\n+        ```\n+\n+        `use_temp_partition_name` \u9ed8\u8ba4\u4e3a false\uff0c\u4f46\u56e0\u4e3a\u5f85\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u548c\u66ff\u6362\u5206\u533a\u7684\u4e2a\u6570\u4e0d\u540c\uff0c\u5219\u8be5\u53c2\u6570\u65e0\u6548\u3002\u66ff\u6362\u540e\uff0c\u5206\u533a\u540d\u79f0\u4e3a tp1\uff0cp1 \u548c p2 \u4e0d\u518d\u5b58\u5728\u3002\n+        \n+\u66ff\u6362\u64cd\u4f5c\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a\n+\n+* \u5206\u533a\u66ff\u6362\u6210\u529f\u540e\uff0c\u88ab\u66ff\u6362\u7684\u5206\u533a\u5c06\u88ab\u5220\u9664\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+\n+## \u4e34\u65f6\u5206\u533a\u7684\u5bfc\u5165\n+\n+\uff08TODO\uff09\n+\n+## \u548c\u5176\u4ed6\u64cd\u4f5c\u7684\u5173\u7cfb\n+\n+### DROP\n+\n+* \u4f7f\u7528 Drop \u64cd\u4f5c\u76f4\u63a5\u5220\u9664\u6570\u636e\u5e93\u6216\u8868\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u6570\u636e\u5e93\u6216\u8868\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\uff0c\u540c\u65f6\uff0c\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\u4e5f\u4f1a\u88ab\u4e00\u540c\u6062\u590d\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u6b63\u5f0f\u5206\u533a\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u5206\u533a\uff08\u9650\u5b9a\u65f6\u95f4\u5185\uff09\u3002\u64cd\u4f5c\u6b63\u5f0f\u5206\u533a\u548c\u4e34\u65f6\u5206\u533a\u65e0\u5173\u3002\n+* \u4f7f\u7528 Alter \u547d\u4ee4\u5220\u9664\u4e34\u65f6\u5206\u533a\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7 Recover \u547d\u4ee4\u6062\u590d\u4e34\u65f6\u5206\u533a\u3002\n+\n+### TRUNCATE\n+\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u8868\uff0c\u8868\u7684\u4e34\u65f6\u5206\u533a\u4f1a\u88ab\u5220\u9664\uff0c\u4e14\u4e0d\u53ef\u6062\u590d\u3002\n+* \u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u6b63\u662f\u5206\u533a\u65f6\uff0c\u4e0d\u5f71\u54cd\u4e34\u65f6\u5206\u533a\u3002\n+* \u4e0d\u53ef\u4f7f\u7528 Truncate \u547d\u4ee4\u6e05\u7a7a\u4e34\u65f6\u5206\u533a\u3002\n+\n+### ALTER\n+\n+* \u5f53\u8868\u5b58\u5728\u4e34\u65f6\u5206\u533a\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528 Alter \u547d\u4ee4\u5bf9\u8868\u8fdb\u884c Schema Change\u3001Rollup \u7b49\u53d8\u66f4\u64cd\u4f5c\u3002\n+* \u5f53\u8868\u5728\u8fdb\u884c\u53d8\u66f4\u64cd\u4f5c\u65f6\uff0c\u65e0\u6cd5\u5bf9\u8868\u6dfb\u52a0\u4e34\u65f6\u5206\u533a\u3002\n+\n+\n+## \u6700\u4f73\u5b9e\u8df5\n+\n+1. \u539f\u5b50\u7684\u8986\u76d6\u5199\u64cd\u4f5c\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u80fd\u591f\u91cd\u5199\u67d0\u4e00\u5206\u533a\u7684\u6570\u636e\uff0c\u4f46\u5982\u679c\u91c7\u7528\u5148\u5220\u9664\u5728\u5bfc\u5165\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5728\u4e2d\u95f4\u4f1a\u6709\u4e00\u6bb5\u65f6\u95f4\u65e0\u6cd5\u67e5\u770b\u6570\u636e\u3002\u8fd9\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5c06\u65b0\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u540e\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n+    \n+2. \u4fee\u6539\u5206\u6876\u6570\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5728\u521b\u5efa\u5206\u533a\u65f6\u4f7f\u7528\u4e86\u4e0d\u5408\u9002\u7684\u5206\u6876\u6570\u3002\u5219\u7528\u6237\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u5206\u533a\u8303\u56f4\u7684\u4e34\u65f6\u5206\u533a\uff0c\u5e76\u6307\u5b9a\u65b0\u7684\u5206\u6876\u6570\u3002\u7136\u540e\u901a\u8fc7 `INSERT INTO` \u547d\u4ee4\u5c06\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u4e2d\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n+    \n+3. \u5408\u5e76\u6216\u5206\u5272\u5206\u533a\n+\n+    \u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5e0c\u671b\u5bf9\u5206\u533a\u7684\u8303\u56f4\u8fdb\u884c\u4fee\u6539\uff0c\u6bd4\u5982\u5408\u5e76\u4e24\u4e2a\u5206\u533a\uff0c\u6216\u5c06\u4e00\u4e2a\u5927\u5206\u533a\u5206\u5272\u6210\u591a\u4e2a\u5c0f\u5206\u533a\u3002\u5219\u7528\u6237\u53ef\u4ee5\u5148\u5efa\u7acb\u5bf9\u5e94\u5408\u5e76\u6216\u5206\u5272\u540e\u8303\u56f4\u7684\u4e34\u65f6\u5206\u533a\uff0c\u7136\u540e\u901a\u8fc7 `INSERT INTO` \u547d\u4ee4\u5c06\u6b63\u5f0f\u5206\u533a\u7684\u6570\u636e\u5bfc\u5165\u5230\u4e34\u65f6\u5206\u533a\u4e2d\uff0c\u901a\u8fc7\u66ff\u6362\u64cd\u4f5c\uff0c\u539f\u5b50\u7684\u66ff\u6362\u539f\u6709\u5206\u533a\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODA4Ng=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 189}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk5MDE4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoyNTowMFrOFwJSuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzoyNTowMFrOFwJSuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODIxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new DdlException(\"Can not alter table when there is temp partitions in table\");\n          \n          \n            \n                        throw new DdlException(\"Can not alter table when there are temp partitions in table\");", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386028217", "createdAt": "2020-02-29T13:25:00Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "diffHunk": "@@ -1019,6 +1024,11 @@ private void getOldAlterJobInfos(Database db, List<List<Comparable>> rollupJobIn\n     @Override\n     public void process(List<AlterClause> alterClauses, String clusterName, Database db, OlapTable olapTable)\n             throws DdlException, AnalysisException {\n+\n+        if (olapTable.existTempPartitions()) {\n+            throw new DdlException(\"Can not alter table when there is temp partitions in table\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk5NTAzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzozNTo0OFrOFwJVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzo1NzoxMVrOFwMH5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODgyMQ==", "bodyText": "Split getPartition  method to getPartition and getTempPartition?", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386028821", "createdAt": "2020-02-29T13:35:48Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -624,6 +632,14 @@ public Partition getPartition(String partitionName) {\n         return nameToPartition.get(partitionName);\n     }\n \n+    public Partition getPartition(String partitionName, boolean isTempPartition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2ODkyMw==", "bodyText": "If split into 2 methods, we have to write if .. else .. every time we call getPartition(), which is not convenient.\nBut maybe I will change it when implementing loading into temp partition. It depends on how convenient it is to use in the loading process.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386068923", "createdAt": "2020-03-01T01:41:16Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -624,6 +632,14 @@ public Partition getPartition(String partitionName) {\n         return nameToPartition.get(partitionName);\n     }\n \n+    public Partition getPartition(String partitionName, boolean isTempPartition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODgyMQ=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3NDU5Nw==", "bodyText": "If split into 2 methods, we have to write if .. else .. every time we call getPartition(), which is not convenient.\n\nsplit to two methods is in order to avoid if .. else ...\n\nBut maybe I will change it when implementing loading into temp partition. It depends on how convenient it is to use in the loading process.\n\nOK", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386074597", "createdAt": "2020-03-01T03:57:11Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -624,6 +632,14 @@ public Partition getPartition(String partitionName) {\n         return nameToPartition.get(partitionName);\n     }\n \n+    public Partition getPartition(String partitionName, boolean isTempPartition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyODgyMQ=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk5NjU1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzozOTozNVrOFwJVyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMTo0NDoxOFrOFwLyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTAwMg==", "bodyText": "Split this method to checkNormalPartitionExist and checkTempPartitionExist, then, we don't need the long comment.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029002", "createdAt": "2020-02-29T13:39:35Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -1241,4 +1264,141 @@ public void setIsInMemory(boolean isInMemory) {\n         tableProperty.modifyTableProperties(PropertyAnalyzer.PROPERTIES_INMEMORY, Boolean.valueOf(isInMemory).toString());\n         tableProperty.buildInMemory();\n     }\n+\n+    // return true if partition with given name already exist, both in partitions and temp partitions.\n+    // return false otherwise\n+    public boolean checkPartitionNameExist(String partitionName) {\n+        if (nameToPartition.containsKey(partitionName)) {\n+            return true;\n+        }\n+        return tempPartitions.hasPartition(partitionName);\n+    }\n+\n+    // if includeTempPartition is true, check if temp partition with given name exist,\n+    // if includeTempPartition is false, check if temp partition with given name exist.\n+    // return true if exist, otherwise, return false;\n+    public boolean checkPartitionNameExist(String partitionName, boolean isTempPartition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTA0Nw==", "bodyText": "Same reason as getPartition.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069047", "createdAt": "2020-03-01T01:44:18Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -1241,4 +1264,141 @@ public void setIsInMemory(boolean isInMemory) {\n         tableProperty.modifyTableProperties(PropertyAnalyzer.PROPERTIES_INMEMORY, Boolean.valueOf(isInMemory).toString());\n         tableProperty.buildInMemory();\n     }\n+\n+    // return true if partition with given name already exist, both in partitions and temp partitions.\n+    // return false otherwise\n+    public boolean checkPartitionNameExist(String partitionName) {\n+        if (nameToPartition.containsKey(partitionName)) {\n+            return true;\n+        }\n+        return tempPartitions.hasPartition(partitionName);\n+    }\n+\n+    // if includeTempPartition is true, check if temp partition with given name exist,\n+    // if includeTempPartition is false, check if temp partition with given name exist.\n+    // return true if exist, otherwise, return false;\n+    public boolean checkPartitionNameExist(String partitionName, boolean isTempPartition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTAwMg=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk5OTMzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/TempPartitions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo0NjoxM1rOFwJXKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMTo0NzowN1rOFwLysw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTM1NA==", "bodyText": "return idToPartition.isEmpty(); ?", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029354", "createdAt": "2020-02-29T13:46:13Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/catalog/TempPartitions.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.catalog;\n+\n+import org.apache.doris.catalog.MaterializedIndex.IndexExtState;\n+import org.apache.doris.common.io.Writable;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+// This class saved all temp partitions of a table.\n+// temp partition is used to implement the overwrite load.\n+// user can load data into some of the temp partitions,\n+// and then replace the formal partitions with these temp partitions\n+// to make a overwrite load.\n+public class TempPartitions implements Writable {\n+    private Map<Long, Partition> idToPartition = Maps.newHashMap();\n+    private Map<String, Partition> nameToPartition = Maps.newHashMap();\n+    private RangePartitionInfo partitionInfo;\n+\n+    public TempPartitions() {\n+    }\n+\n+    public TempPartitions(List<Column> partCols) {\n+        partitionInfo = new RangePartitionInfo(partCols);\n+    }\n+\n+    public RangePartitionInfo getPartitionInfo() {\n+        return partitionInfo;\n+    }\n+\n+    public void addPartition(Partition partition) {\n+        idToPartition.put(partition.getId(), partition);\n+        nameToPartition.put(partition.getName(), partition);\n+    }\n+\n+    /*\n+     * Drop temp partitions.\n+     * If needDropTablet is true, also drop the tablet from tablet inverted index.\n+     */\n+    public void dropPartition(String partitionName, boolean needDropTablet) {\n+        Partition partition = nameToPartition.get(partitionName);\n+        if (partition != null) {\n+            idToPartition.remove(partition.getId());\n+            nameToPartition.remove(partitionName);\n+\n+            Preconditions.checkState(partitionInfo.getType() == PartitionType.RANGE);\n+            RangePartitionInfo rangePartitionInfo = (RangePartitionInfo) partitionInfo;\n+            // drop partition info\n+            rangePartitionInfo.dropPartition(partition.getId());\n+\n+            if (!Catalog.isCheckpointThread() && needDropTablet) {\n+                TabletInvertedIndex invertedIndex = Catalog.getCurrentInvertedIndex();\n+                for (MaterializedIndex index : partition.getMaterializedIndices(IndexExtState.ALL)) {\n+                    for (Tablet tablet : index.getTablets()) {\n+                        invertedIndex.deleteTablet(tablet.getId());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    public Partition getPartition(long partitionId) {\n+        return idToPartition.get(partitionId);\n+    }\n+\n+    public Partition getPartition(String partitionName) {\n+        return nameToPartition.get(partitionName);\n+    }\n+\n+    public List<Partition> getAllPartitions() {\n+        return Lists.newArrayList(idToPartition.values());\n+    }\n+\n+    public boolean hasPartition(String partName) {\n+        if (partName == null) {\n+            return !idToPartition.isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTE3MQ==", "bodyText": "if (partName == null) is removed", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069171", "createdAt": "2020-03-01T01:47:07Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/TempPartitions.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.catalog;\n+\n+import org.apache.doris.catalog.MaterializedIndex.IndexExtState;\n+import org.apache.doris.common.io.Writable;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+// This class saved all temp partitions of a table.\n+// temp partition is used to implement the overwrite load.\n+// user can load data into some of the temp partitions,\n+// and then replace the formal partitions with these temp partitions\n+// to make a overwrite load.\n+public class TempPartitions implements Writable {\n+    private Map<Long, Partition> idToPartition = Maps.newHashMap();\n+    private Map<String, Partition> nameToPartition = Maps.newHashMap();\n+    private RangePartitionInfo partitionInfo;\n+\n+    public TempPartitions() {\n+    }\n+\n+    public TempPartitions(List<Column> partCols) {\n+        partitionInfo = new RangePartitionInfo(partCols);\n+    }\n+\n+    public RangePartitionInfo getPartitionInfo() {\n+        return partitionInfo;\n+    }\n+\n+    public void addPartition(Partition partition) {\n+        idToPartition.put(partition.getId(), partition);\n+        nameToPartition.put(partition.getName(), partition);\n+    }\n+\n+    /*\n+     * Drop temp partitions.\n+     * If needDropTablet is true, also drop the tablet from tablet inverted index.\n+     */\n+    public void dropPartition(String partitionName, boolean needDropTablet) {\n+        Partition partition = nameToPartition.get(partitionName);\n+        if (partition != null) {\n+            idToPartition.remove(partition.getId());\n+            nameToPartition.remove(partitionName);\n+\n+            Preconditions.checkState(partitionInfo.getType() == PartitionType.RANGE);\n+            RangePartitionInfo rangePartitionInfo = (RangePartitionInfo) partitionInfo;\n+            // drop partition info\n+            rangePartitionInfo.dropPartition(partition.getId());\n+\n+            if (!Catalog.isCheckpointThread() && needDropTablet) {\n+                TabletInvertedIndex invertedIndex = Catalog.getCurrentInvertedIndex();\n+                for (MaterializedIndex index : partition.getMaterializedIndices(IndexExtState.ALL)) {\n+                    for (Tablet tablet : index.getTablets()) {\n+                        invertedIndex.deleteTablet(tablet.getId());\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    public Partition getPartition(long partitionId) {\n+        return idToPartition.get(partitionId);\n+    }\n+\n+    public Partition getPartition(String partitionName) {\n+        return nameToPartition.get(partitionName);\n+    }\n+\n+    public List<Partition> getAllPartitions() {\n+        return Lists.newArrayList(idToPartition.values());\n+    }\n+\n+    public boolean hasPartition(String partName) {\n+        if (partName == null) {\n+            return !idToPartition.isEmpty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTM1NA=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTAwMDUzOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo0ODo1MlrOFwJXuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzo1NDoxOVrOFwMHYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTQ5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String inMemory = properties.get(PROPERTIES_STRICT_RANGE);\n          \n          \n            \n                        String isStrictRange = properties.get(PROPERTIES_STRICT_RANGE);", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029497", "createdAt": "2020-02-29T13:48:52Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "diffHunk": "@@ -407,4 +410,22 @@ public static boolean analyzeInMemory(Map<String, String> properties, boolean de\n         }\n         return defaultInMemory;\n     }\n+\n+    public static boolean analyzeStrictRange(Map<String, String> properties, boolean defaultVal) {\n+        if (properties != null && properties.containsKey(PROPERTIES_STRICT_RANGE)) {\n+            String inMemory = properties.get(PROPERTIES_STRICT_RANGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTI1Mg==", "bodyText": "I will merge analyze of inMemory, strictRange, useTempPartitionName into one common method analyzeBooleanProp. Because they looks just same.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069252", "createdAt": "2020-03-01T01:50:10Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "diffHunk": "@@ -407,4 +410,22 @@ public static boolean analyzeInMemory(Map<String, String> properties, boolean de\n         }\n         return defaultInMemory;\n     }\n+\n+    public static boolean analyzeStrictRange(Map<String, String> properties, boolean defaultVal) {\n+        if (properties != null && properties.containsKey(PROPERTIES_STRICT_RANGE)) {\n+            String inMemory = properties.get(PROPERTIES_STRICT_RANGE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTQ5Nw=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3NDQ2Ng==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386074466", "createdAt": "2020-03-01T03:54:19Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "diffHunk": "@@ -407,4 +410,22 @@ public static boolean analyzeInMemory(Map<String, String> properties, boolean de\n         }\n         return defaultInMemory;\n     }\n+\n+    public static boolean analyzeStrictRange(Map<String, String> properties, boolean defaultVal) {\n+        if (properties != null && properties.containsKey(PROPERTIES_STRICT_RANGE)) {\n+            String inMemory = properties.get(PROPERTIES_STRICT_RANGE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTQ5Nw=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTAwMDcyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo0OTozNVrOFwJX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo0OTozNVrOFwJX0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTUyMg==", "bodyText": "idem", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029522", "createdAt": "2020-02-29T13:49:35Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/common/util/PropertyAnalyzer.java", "diffHunk": "@@ -407,4 +410,22 @@ public static boolean analyzeInMemory(Map<String, String> properties, boolean de\n         }\n         return defaultInMemory;\n     }\n+\n+    public static boolean analyzeStrictRange(Map<String, String> properties, boolean defaultVal) {\n+        if (properties != null && properties.containsKey(PROPERTIES_STRICT_RANGE)) {\n+            String inMemory = properties.get(PROPERTIES_STRICT_RANGE);\n+            properties.remove(PROPERTIES_STRICT_RANGE);\n+            return Boolean.parseBoolean(inMemory);\n+        }\n+        return defaultVal;\n+    }\n+\n+    public static boolean analyzeUseTempPartitionName(Map<String, String> properties, boolean defaultVal) {\n+        if (properties != null && properties.containsKey(PROPERTIES_USE_TEMP_PARTITION_NAME)) {\n+            String inMemory = properties.get(PROPERTIES_USE_TEMP_PARTITION_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTAwMjEyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo1Mjo1OVrOFwJYeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMTo1NzozNVrOFwL0Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTY4OQ==", "bodyText": "Return bool instead of void. I think we shouldn't throw DdlException for util class.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029689", "createdAt": "2020-02-29T13:52:59Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "diffHunk": "@@ -0,0 +1,210 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common.util;\n+\n+import org.apache.doris.catalog.PartitionKey;\n+import org.apache.doris.common.DdlException;\n+\n+import com.google.common.collect.BoundType;\n+import com.google.common.collect.Range;\n+import com.google.common.collect.RangeMap;\n+import com.google.common.collect.TreeRangeMap;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class RangeUtils {\n+    \n+    public static final Comparator<Map.Entry<Long, Range<PartitionKey>>> RANGE_MAP_ENTRY_COMPARATOR =\n+            Comparator.comparing(o -> o.getValue().lowerEndpoint());\n+\n+    public static final Comparator<Range<PartitionKey>> RANGE_COMPARATOR = \n+            Comparator.comparing(o -> o.lowerEndpoint());\n+\n+    public static void checkRangeIntersect(Range<PartitionKey> range1, Range<PartitionKey> range2) throws DdlException {\n+        if (range2.isConnected(range1)) {\n+            if (!range2.intersection(range1).isEmpty()) {\n+                throw new DdlException(\"Range \" + range1 + \" is intersected with range: \" + range2);\n+            }\n+        }\n+    }\n+\n+    /*\n+     * Pass only if the 2 range lists are exactly same\n+     * What is \"exactly same\"?\n+     *      1. {[0, 10), [10, 20)} exactly same as {[0, 20)}\n+     *      2. {[0, 10), [15, 20)} exactly same as {[0, 10), [15, 18), [18, 20)}\n+     *      3. {[0, 10), [15, 20)} exactly same as {[0, 10), [15, 20)}\n+     *      4. {[0, 10), [15, 20)} NOT exactly same as {[0, 20)}\n+     *      \n+     *  Here I will use an example to explain the algorithm:\n+     *      list1: {[0, 10), [15, 20)}\n+     *      list2: {[0, 10), [15, 18), [18, 20)}\n+     *  \n+     *  1. sort 2 lists first (the above 2 lists are already sorted)\n+     *  2. Begin to compare ranges from index 0: [0, 10) and [0, 10)\n+     *      2.1 lower bounds (0 and 0) are equal.\n+     *      2.2 upper bounds (10 and 10) are equal. \n+     *  3. Begin to compare next 2 ranges [15, 20) and [15, 18)\n+     *      3.1 lower bounds (15 and 15) are equal.\n+     *      3.2 upper bounds (20 and 18) are not equal. and 20 > 18\n+     *      3.3 Split range [15, 20) to [15, 18) and [18, 20)\n+     *  4. Begin to compare next 2 ranges [18, 20) and [18, 20), the first [18, 20) is the splitted range\n+     *      4.1 lower bounds (18 and 18) are equal.\n+     *      4.2 upper bounds (20 and 20) are equal.\n+     *  5. Not more next ranges, so 2 lists are equal.\n+     */\n+    public static void checkRangeListsMatch(List<Range<PartitionKey>> list1, List<Range<PartitionKey>> list2) throws DdlException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTU2Nw==", "bodyText": "An exception can bring some detail error msgs.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069567", "createdAt": "2020-03-01T01:57:35Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "diffHunk": "@@ -0,0 +1,210 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common.util;\n+\n+import org.apache.doris.catalog.PartitionKey;\n+import org.apache.doris.common.DdlException;\n+\n+import com.google.common.collect.BoundType;\n+import com.google.common.collect.Range;\n+import com.google.common.collect.RangeMap;\n+import com.google.common.collect.TreeRangeMap;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class RangeUtils {\n+    \n+    public static final Comparator<Map.Entry<Long, Range<PartitionKey>>> RANGE_MAP_ENTRY_COMPARATOR =\n+            Comparator.comparing(o -> o.getValue().lowerEndpoint());\n+\n+    public static final Comparator<Range<PartitionKey>> RANGE_COMPARATOR = \n+            Comparator.comparing(o -> o.lowerEndpoint());\n+\n+    public static void checkRangeIntersect(Range<PartitionKey> range1, Range<PartitionKey> range2) throws DdlException {\n+        if (range2.isConnected(range1)) {\n+            if (!range2.intersection(range1).isEmpty()) {\n+                throw new DdlException(\"Range \" + range1 + \" is intersected with range: \" + range2);\n+            }\n+        }\n+    }\n+\n+    /*\n+     * Pass only if the 2 range lists are exactly same\n+     * What is \"exactly same\"?\n+     *      1. {[0, 10), [10, 20)} exactly same as {[0, 20)}\n+     *      2. {[0, 10), [15, 20)} exactly same as {[0, 10), [15, 18), [18, 20)}\n+     *      3. {[0, 10), [15, 20)} exactly same as {[0, 10), [15, 20)}\n+     *      4. {[0, 10), [15, 20)} NOT exactly same as {[0, 20)}\n+     *      \n+     *  Here I will use an example to explain the algorithm:\n+     *      list1: {[0, 10), [15, 20)}\n+     *      list2: {[0, 10), [15, 18), [18, 20)}\n+     *  \n+     *  1. sort 2 lists first (the above 2 lists are already sorted)\n+     *  2. Begin to compare ranges from index 0: [0, 10) and [0, 10)\n+     *      2.1 lower bounds (0 and 0) are equal.\n+     *      2.2 upper bounds (10 and 10) are equal. \n+     *  3. Begin to compare next 2 ranges [15, 20) and [15, 18)\n+     *      3.1 lower bounds (15 and 15) are equal.\n+     *      3.2 upper bounds (20 and 18) are not equal. and 20 > 18\n+     *      3.3 Split range [15, 20) to [15, 18) and [18, 20)\n+     *  4. Begin to compare next 2 ranges [18, 20) and [18, 20), the first [18, 20) is the splitted range\n+     *      4.1 lower bounds (18 and 18) are equal.\n+     *      4.2 upper bounds (20 and 20) are equal.\n+     *  5. Not more next ranges, so 2 lists are equal.\n+     */\n+    public static void checkRangeListsMatch(List<Range<PartitionKey>> list1, List<Range<PartitionKey>> list2) throws DdlException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTY4OQ=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTAwNDIxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMzo1ODowNVrOFwJZgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzo1Nzo0NlrOFwMH-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTk1Mg==", "bodyText": "As comment above, I think we should split getPartition method, otherwise\uff0cthis logic is strange.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386029952", "createdAt": "2020-02-29T13:58:05Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "diffHunk": "@@ -1215,12 +1215,17 @@ private void handleShowTablet() throws AnalysisException {\n                 }\n                 boolean stop = false;\n                 Collection<Partition> partitions = new ArrayList<Partition>();\n-                List<String> partitionNames = showStmt.getPartitionNames();\n                 if (showStmt.hasPartition()) {\n-                    for (Partition partition : olapTable.getPartitions()) {\n-                        if (partitionNames.contains(partition.getName())) {\n-                            partitions.add(partition);\n+                    List<String> partitionNames = showStmt.getPartitionNames();\n+                    for (String partName : partitionNames) {\n+                        Partition partition = olapTable.getPartition(partName);\n+                        if (partition == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTYyNQ==", "bodyText": "I will reconsider this when implementing loading process of temp partition.\nIf I change the origin getPartition method, it may change lots of codes in this PR.", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069625", "createdAt": "2020-03-01T01:59:20Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "diffHunk": "@@ -1215,12 +1215,17 @@ private void handleShowTablet() throws AnalysisException {\n                 }\n                 boolean stop = false;\n                 Collection<Partition> partitions = new ArrayList<Partition>();\n-                List<String> partitionNames = showStmt.getPartitionNames();\n                 if (showStmt.hasPartition()) {\n-                    for (Partition partition : olapTable.getPartitions()) {\n-                        if (partitionNames.contains(partition.getName())) {\n-                            partitions.add(partition);\n+                    List<String> partitionNames = showStmt.getPartitionNames();\n+                    for (String partName : partitionNames) {\n+                        Partition partition = olapTable.getPartition(partName);\n+                        if (partition == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTk1Mg=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3NDYxNw==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386074617", "createdAt": "2020-03-01T03:57:46Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/qe/ShowExecutor.java", "diffHunk": "@@ -1215,12 +1215,17 @@ private void handleShowTablet() throws AnalysisException {\n                 }\n                 boolean stop = false;\n                 Collection<Partition> partitions = new ArrayList<Partition>();\n-                List<String> partitionNames = showStmt.getPartitionNames();\n                 if (showStmt.hasPartition()) {\n-                    for (Partition partition : olapTable.getPartitions()) {\n-                        if (partitionNames.contains(partition.getName())) {\n-                            partitions.add(partition);\n+                    List<String> partitionNames = showStmt.getPartitionNames();\n+                    for (String partName : partitionNames) {\n+                        Partition partition = olapTable.getPartition(partName);\n+                        if (partition == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyOTk1Mg=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTAwNDk0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxNDowMDozMFrOFwJZ5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjowMDozN1rOFwL0nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzMDA1Mg==", "bodyText": "Add a UT?", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386030052", "createdAt": "2020-02-29T14:00:30Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "diffHunk": "@@ -0,0 +1,210 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common.util;\n+\n+import org.apache.doris.catalog.PartitionKey;\n+import org.apache.doris.common.DdlException;\n+\n+import com.google.common.collect.BoundType;\n+import com.google.common.collect.Range;\n+import com.google.common.collect.RangeMap;\n+import com.google.common.collect.TreeRangeMap;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class RangeUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2OTY2MA==", "bodyText": "Actually, this utils has been test in TempPartitionsTest, both in testForStrictRangeCheck() and testForMultiPartitionTable().", "url": "https://github.com/apache/incubator-doris/pull/2828#discussion_r386069660", "createdAt": "2020-03-01T02:00:37Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/util/RangeUtils.java", "diffHunk": "@@ -0,0 +1,210 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common.util;\n+\n+import org.apache.doris.catalog.PartitionKey;\n+import org.apache.doris.common.DdlException;\n+\n+import com.google.common.collect.BoundType;\n+import com.google.common.collect.Range;\n+import com.google.common.collect.RangeMap;\n+import com.google.common.collect.TreeRangeMap;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class RangeUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzMDA1Mg=="}, "originalCommit": {"oid": "9483825f522b469d4544465fbfb251fe0df9bf3f"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2180, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}