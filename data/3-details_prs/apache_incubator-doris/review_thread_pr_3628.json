{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDk0MzMz", "number": 3628, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyMTozNFrOD9ZDew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyNDoxMlrOD9ZHmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzAwMjE5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/alpha_rowset.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyMTozNFrOGW24gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyMTozNFrOGW24gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMTA1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG(WARNING) << \"expect zone map size is \" << expect_zone_maps_num << \", actrual num is \" << zone_maps_size\n          \n          \n            \n                            LOG(WARNING) << \"expect zone map size is \" << expect_zone_maps_num << \", actual num is \" << zone_maps_size", "url": "https://github.com/apache/incubator-doris/pull/3628#discussion_r426621059", "createdAt": "2020-05-18T13:21:34Z", "author": {"login": "morningman"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -300,16 +300,23 @@ OLAPStatus AlphaRowset::init() {\n \n         if (segment_group_meta.zone_maps_size() != 0) {\n             size_t zone_maps_size = segment_group_meta.zone_maps_size();\n-            size_t num_key_columns = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n-            if (num_key_columns != zone_maps_size) {\n+            size_t expect_zone_maps_num = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n+            if ((_schema->keys_type() != KeysType::DUP_KEYS && expect_zone_maps_num != zone_maps_size) \n+            || (_schema->keys_type() == KeysType::DUP_KEYS && expect_zone_maps_num < zone_maps_size)) {\n                 LOG(ERROR) << \"column pruning size is error.\"\n+                        << \"KeysType=\" << KeysType_Name(_schema->keys_type()) << \", \"\n                         << \"zone_maps_size=\" << zone_maps_size << \", \"\n-                        << \"num_key_columns=\" << _schema->num_key_columns();\n+                        << \"num_key_columns=\" << _schema->num_key_columns() << \", \"\n+                        << \"num_columns=\" << _schema->num_columns();\n                 return OLAP_ERR_TABLE_INDEX_VALIDATE_ERROR;\n             }\n-            std::vector<std::pair<std::string, std::string>> zone_map_strings(num_key_columns);\n-            std::vector<bool> null_vec(num_key_columns);\n-            for (size_t j = 0; j < num_key_columns; ++j) {\n+            if (expect_zone_maps_num > zone_maps_size) {\n+                LOG(WARNING) << \"expect zone map size is \" << expect_zone_maps_num << \", actrual num is \" << zone_maps_size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3031748d5a165d120eb37db6d36f280587ea6bfd"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzAwNjA5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/alpha_rowset.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyMjozNFrOGW27Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDo1MjoyN1rOGXPxpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMTY5OQ==", "bodyText": "Better add comment to explain the logic here.", "url": "https://github.com/apache/incubator-doris/pull/3628#discussion_r426621699", "createdAt": "2020-05-18T13:22:34Z", "author": {"login": "morningman"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -300,16 +300,23 @@ OLAPStatus AlphaRowset::init() {\n \n         if (segment_group_meta.zone_maps_size() != 0) {\n             size_t zone_maps_size = segment_group_meta.zone_maps_size();\n-            size_t num_key_columns = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n-            if (num_key_columns != zone_maps_size) {\n+            size_t expect_zone_maps_num = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3031748d5a165d120eb37db6d36f280587ea6bfd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyODkwMA==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3628#discussion_r427028900", "createdAt": "2020-05-19T04:52:27Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -300,16 +300,23 @@ OLAPStatus AlphaRowset::init() {\n \n         if (segment_group_meta.zone_maps_size() != 0) {\n             size_t zone_maps_size = segment_group_meta.zone_maps_size();\n-            size_t num_key_columns = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n-            if (num_key_columns != zone_maps_size) {\n+            size_t expect_zone_maps_num = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMTY5OQ=="}, "originalCommit": {"oid": "3031748d5a165d120eb37db6d36f280587ea6bfd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzAxMjc0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/alpha_rowset.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyNDoxMlrOGW2_NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyNDoxMlrOGW2_NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMjc3Mw==", "bodyText": "Better to add tablet id in log, or we can not know what tablet is wrong", "url": "https://github.com/apache/incubator-doris/pull/3628#discussion_r426622773", "createdAt": "2020-05-18T13:24:12Z", "author": {"login": "morningman"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -300,16 +300,23 @@ OLAPStatus AlphaRowset::init() {\n \n         if (segment_group_meta.zone_maps_size() != 0) {\n             size_t zone_maps_size = segment_group_meta.zone_maps_size();\n-            size_t num_key_columns = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n-            if (num_key_columns != zone_maps_size) {\n+            size_t expect_zone_maps_num = _schema->keys_type() == KeysType::DUP_KEYS ? _schema->num_columns() : _schema->num_key_columns();\n+            if ((_schema->keys_type() != KeysType::DUP_KEYS && expect_zone_maps_num != zone_maps_size) \n+            || (_schema->keys_type() == KeysType::DUP_KEYS && expect_zone_maps_num < zone_maps_size)) {\n                 LOG(ERROR) << \"column pruning size is error.\"\n+                        << \"KeysType=\" << KeysType_Name(_schema->keys_type()) << \", \"\n                         << \"zone_maps_size=\" << zone_maps_size << \", \"\n-                        << \"num_key_columns=\" << _schema->num_key_columns();\n+                        << \"num_key_columns=\" << _schema->num_key_columns() << \", \"\n+                        << \"num_columns=\" << _schema->num_columns();\n                 return OLAP_ERR_TABLE_INDEX_VALIDATE_ERROR;\n             }\n-            std::vector<std::pair<std::string, std::string>> zone_map_strings(num_key_columns);\n-            std::vector<bool> null_vec(num_key_columns);\n-            for (size_t j = 0; j < num_key_columns; ++j) {\n+            if (expect_zone_maps_num > zone_maps_size) {\n+                LOG(WARNING) << \"expect zone map size is \" << expect_zone_maps_num << \", actrual num is \" << zone_maps_size", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3031748d5a165d120eb37db6d36f280587ea6bfd"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}