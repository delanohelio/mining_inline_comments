{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjYwNTYy", "number": 3934, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTo0Njo1NVrOEIMIVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTo0Njo1NVrOEIMIVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDIyODA3OnYy", "diffSide": "RIGHT", "path": "be/src/exec/olap_scan_node.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTo0Njo1NVrOGoAJxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo1MDoxMFrOGpVpaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5ODcyNg==", "bodyText": "You can use util/condition_variable.h.\nIt comes from kudu, it's use is simple than std::", "url": "https://github.com/apache/incubator-doris/pull/3934#discussion_r444598726", "createdAt": "2020-06-24T01:46:55Z", "author": {"login": "chaoyli"}, "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -186,9 +185,9 @@ Status OlapScanNode::get_next(RuntimeState* state, RowBatch* row_batch, bool* eo\n \n     // check if Canceled.\n     if (state->is_cancelled()) {\n-        boost::unique_lock<boost::mutex> l(_row_batches_lock);\n+        std::unique_lock<std::mutex> l(_row_batches_lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "300c666304e2b85dbcdd1c6332facaf2942d1137"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5OTQ2NQ==", "bodyText": "This PR is only try to solve the BE crash problem and I don't want to introduce any new potential problems.\nI can't see any necessary to replace the std::condition_variable with ConditionVariable. If it is,\nmaybe we can replace all std::condition_variable in another PR.", "url": "https://github.com/apache/incubator-doris/pull/3934#discussion_r445999465", "createdAt": "2020-06-26T06:50:10Z", "author": {"login": "morningman"}, "path": "be/src/exec/olap_scan_node.cpp", "diffHunk": "@@ -186,9 +185,9 @@ Status OlapScanNode::get_next(RuntimeState* state, RowBatch* row_batch, bool* eo\n \n     // check if Canceled.\n     if (state->is_cancelled()) {\n-        boost::unique_lock<boost::mutex> l(_row_batches_lock);\n+        std::unique_lock<std::mutex> l(_row_batches_lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5ODcyNg=="}, "originalCommit": {"oid": "300c666304e2b85dbcdd1c6332facaf2942d1137"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1302, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}