{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODk0MDQw", "number": 3186, "title": "Support convert  Arrow data to RowBatch asynchronously in Spark-Doris-Connector", "bodyText": "Currently, in the Spark-Doris-Connector, when Spark iteratively obtains each row of data, it needs to synchronously convert the Arrow format data into the row format required by Spark. In order to speed up the conversion process, we can add an asynchronous thread in the Connector, which is responsible for obtaining the Arrow format data from BE and converting it into the row format required by Spark calculation\nIn our test environment, Doris cluster used 1 fe and 7 be (32C+128G). When using Spark-Doris-Connector to query a table containing 67 columns, the original query returned 69 million rows of data took about 2.5min, but after improvement, it reduced to about 1.6min, which reduced the time by about 30%", "createdAt": "2020-03-24T10:08:01Z", "url": "https://github.com/apache/incubator-doris/pull/3186", "merged": true, "mergeCommit": {"oid": "16b61b62f5bb80c060b8b83f0294835e9c0fe823"}, "closed": true, "closedAt": "2020-03-26T13:34:37Z", "author": {"login": "Youngwb"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQvZx5AH2gAyMzkyODk0MDQwOmM4NTUxZWViY2UzNGM3ODdkNDkxOTFkNmE4OTE2ODY5ZThjNmE1MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRcMZwgFqTM4MjAxMTE1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c8551eebce34c787d49191d6a8916869e8c6a52e", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/c8551eebce34c787d49191d6a8916869e8c6a52e", "committedDate": "2020-03-24T09:22:34Z", "message": "support convert arrow to rowbatch async"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/90aed3643bca7c0331e59573a46c9768f0294cdc", "committedDate": "2020-03-24T10:29:58Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzc4MDk0", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-380378094", "createdAt": "2020-03-24T14:42:33Z", "commit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MjozM1rOF6ziWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MjozM1rOF6ziWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNjEwNQ==", "bodyText": "whether we can use a fixed array which size = rowCount or batch_size with a size flag?", "url": "https://github.com/apache/incubator-doris/pull/3186#discussion_r397206105", "createdAt": "2020-03-24T14:42:33Z", "author": {"login": "wuyunfeng"}, "path": "extension/spark-doris-connector/src/main/java/org/apache/doris/spark/serialization/RowBatch.java", "diffHunk": "@@ -70,7 +70,8 @@ public void put(Object o) {\n         }\n     }\n \n-    private int offsetInOneBatch = 0;\n+    // offset for iterate the rowBatch\n+    private int offsetInRowBatch = 0;\n     private int rowCountInOneBatch = 0;\n     private int readRowCount = 0;\n     private List<Row> rowBatch = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODM4MTEw", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-380838110", "createdAt": "2020-03-25T03:29:40Z", "commit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyOTo0MFrOF7K_YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoyOTo0MFrOF7K_YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5MDM2OA==", "bodyText": "function close could be removed and move its content to finally, since read all data from arrow here.", "url": "https://github.com/apache/incubator-doris/pull/3186#discussion_r397590368", "createdAt": "2020-03-25T03:29:40Z", "author": {"login": "vinson0526"}, "path": "extension/spark-doris-connector/src/main/java/org/apache/doris/spark/serialization/RowBatch.java", "diffHunk": "@@ -87,50 +88,39 @@ public RowBatch(TScanBatchResult nextResult, Schema schema) throws DorisExceptio\n                 new ByteArrayInputStream(nextResult.getRows()),\n                 rootAllocator\n                 );\n+        this.offsetInRowBatch = 0;\n         try {\n             this.root = arrowStreamReader.getVectorSchemaRoot();\n+            while (arrowStreamReader.loadNextBatch()) {\n+                fieldVectors = root.getFieldVectors();\n+                if (fieldVectors.size() != schema.size()) {\n+                    logger.error(\"Schema size '{}' is not equal to arrow field size '{}'.\",\n+                            fieldVectors.size(), schema.size());\n+                    throw new DorisException(\"Load Doris data failed, schema size of fetch data is wrong.\");\n+                }\n+                if (fieldVectors.size() == 0 || root.getRowCount() == 0) {\n+                    logger.debug(\"One batch in arrow has no data.\");\n+                    continue;\n+                }\n+                rowCountInOneBatch = root.getRowCount();\n+                // init the rowBatch\n+                for (int i = 0; i < rowCountInOneBatch; ++i) {\n+                    rowBatch.add(new Row(fieldVectors.size()));\n+                }\n+                convertArrowToRowBatch();\n+                readRowCount += root.getRowCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODQwMTk0", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-380840194", "createdAt": "2020-03-25T03:37:56Z", "commit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzozNzo1NlrOF7LG3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzozNzo1NlrOF7LG3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5MjI4NA==", "bodyText": "rowCountInOneBatch could be a local variable\uff1f", "url": "https://github.com/apache/incubator-doris/pull/3186#discussion_r397592284", "createdAt": "2020-03-25T03:37:56Z", "author": {"login": "vinson0526"}, "path": "extension/spark-doris-connector/src/main/java/org/apache/doris/spark/serialization/RowBatch.java", "diffHunk": "@@ -70,7 +70,8 @@ public void put(Object o) {\n         }\n     }\n \n-    private int offsetInOneBatch = 0;\n+    // offset for iterate the rowBatch\n+    private int offsetInRowBatch = 0;\n     private int rowCountInOneBatch = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90aed3643bca7c0331e59573a46c9768f0294cdc"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11d4441d671bbd405f2419c5908fb8893022ea7", "author": {"user": {"login": "Youngwb", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/c11d4441d671bbd405f2419c5908fb8893022ea7", "committedDate": "2020-03-25T09:35:09Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjIwNzc4", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-381220778", "createdAt": "2020-03-25T14:47:46Z", "commit": {"oid": "c11d4441d671bbd405f2419c5908fb8893022ea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODQ3NjQy", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-381847642", "createdAt": "2020-03-26T09:50:49Z", "commit": {"oid": "c11d4441d671bbd405f2419c5908fb8893022ea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDExMTU4", "url": "https://github.com/apache/incubator-doris/pull/3186#pullrequestreview-382011158", "createdAt": "2020-03-26T13:33:41Z", "commit": {"oid": "c11d4441d671bbd405f2419c5908fb8893022ea7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3368, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}