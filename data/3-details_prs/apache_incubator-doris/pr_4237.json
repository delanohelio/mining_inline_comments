{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTE4Njcy", "number": 4237, "title": "[BUG] Using attachement strategy of brpc to send packet with big size.", "bodyText": "BRPC send packet should serialize it first and then send it.\nIf we send one batch with big size, it will encounter a connection failed.\nSo we can use attachment strategy to bypass the problem and eliminate\nthe serialization cost.", "createdAt": "2020-08-03T11:22:16Z", "url": "https://github.com/apache/incubator-doris/pull/4237", "merged": true, "mergeCommit": {"oid": "120f30bcaec5ba8318ba1849b513b5d06d8df281"}, "closed": true, "closedAt": "2020-08-05T02:29:42Z", "author": {"login": "chaoyli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7QlmjAH2gAyNDYyMTE4NjcyOjAwZjRkMzVmMTRiZDZkOGZmMzcyNThiZGRmMGMyOTcwYzdhN2NlN2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7hEQmAFqTQ2MDU0Mzk0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e", "author": {"user": {"login": "chaoyli", "name": "lichaoyong"}}, "url": "https://github.com/apache/incubator-doris/commit/00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e", "committedDate": "2020-08-03T11:47:10Z", "message": "[BUG] Using attachement strategy of brpc to send packet with big size.\nBRPC send packet should serialize it first and then send it.\nIf we send one batch with big size, it will encounter a connection failed.\nSo we can use attachment strategy to bypass the problem and eliminate\nthe serialization cost."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTk3NjIy", "url": "https://github.com/apache/incubator-doris/pull/4237#pullrequestreview-459997622", "createdAt": "2020-08-03T12:48:48Z", "commit": {"oid": "00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo0ODo0OFrOG64L4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo1Mjo1M1rOG64T2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5MTEzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // If batch size large than brpc_attachment_threashold, use attachment instead\n          \n          \n            \n                // If batch size is larger than brpc_attachment_threshold, use attachment instead\n          \n      \n    \n    \n  \n\nI have a question, why not use threshold directly for all the packets?", "url": "https://github.com/apache/incubator-doris/pull/4237#discussion_r464391138", "createdAt": "2020-08-03T12:48:48Z", "author": {"login": "imay"}, "path": "be/src/common/config.h", "diffHunk": "@@ -519,6 +519,8 @@ namespace config {\n     CONF_Int64(brpc_max_body_size, \"209715200\");\n     // Max unwritten bytes in each socket, if the limit is reached, Socket.Write fails with EOVERCROWDED\n     CONF_Int64(brpc_socket_max_unwritten_bytes, \"67108864\");\n+    // If batch size large than brpc_attachment_threashold, use attachment instead", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5MjMxOA==", "bodyText": "why delete origin timer and counter?", "url": "https://github.com/apache/incubator-doris/pull/4237#discussion_r464392318", "createdAt": "2020-08-03T12:51:10Z", "author": {"login": "imay"}, "path": "be/src/runtime/data_stream_sender.cpp", "diffHunk": "@@ -270,12 +277,7 @@ Status DataStreamSender::Channel::add_row(TupleRow* row) {\n }\n \n Status DataStreamSender::Channel::send_current_batch(bool eos) {\n-    {\n-        SCOPED_TIMER(_parent->_serialize_batch_timer);\n-        int uncompressed_bytes = _batch->serialize(&_pb_batch);\n-        COUNTER_UPDATE(_parent->_bytes_sent_counter, RowBatch::get_batch_size(_pb_batch));\n-        COUNTER_UPDATE(_parent->_uncompressed_bytes_counter, uncompressed_bytes);\n-    }\n+    _parent->serialize_batch(_batch.get(), &_pb_batch, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5MzE3OA==", "bodyText": "Will this variable will cause memory leak?", "url": "https://github.com/apache/incubator-doris/pull/4237#discussion_r464393178", "createdAt": "2020-08-03T12:52:53Z", "author": {"login": "imay"}, "path": "be/src/runtime/data_stream_sender.cpp", "diffHunk": "@@ -227,7 +227,14 @@ Status DataStreamSender::Channel::send_batch(PRowBatch* batch, bool eos) {\n     }\n \n     _brpc_request.set_eos(eos);\n-    if (batch != nullptr) {\n+    if (batch != nullptr && RowBatch::get_batch_size(*batch) > config::brpc_socket_max_unwritten_bytes) {\n+        std::string* tuple_data_to_attachment = batch->release_tuple_data();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00f4d35f14bd6d8ff37258bddf0c2970c7a7ce7e"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432aa46b8e22bfd9c9acfb5d79fff19be17a4e8d", "author": {"user": {"login": "chaoyli", "name": "lichaoyong"}}, "url": "https://github.com/apache/incubator-doris/commit/432aa46b8e22bfd9c9acfb5d79fff19be17a4e8d", "committedDate": "2020-08-04T06:08:21Z", "message": "Fix memory leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d0a27a108a7573c2b3ed09b3113bfccd9bb98d", "author": {"user": {"login": "chaoyli", "name": "lichaoyong"}}, "url": "https://github.com/apache/incubator-doris/commit/f7d0a27a108a7573c2b3ed09b3113bfccd9bb98d", "committedDate": "2020-08-04T06:27:51Z", "message": "Add clear tuple_data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTQzOTQ5", "url": "https://github.com/apache/incubator-doris/pull/4237#pullrequestreview-460543949", "createdAt": "2020-08-04T06:59:08Z", "commit": {"oid": "f7d0a27a108a7573c2b3ed09b3113bfccd9bb98d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2117, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}