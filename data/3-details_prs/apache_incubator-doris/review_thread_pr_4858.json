{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjEyMDYz", "number": 4858, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo1ODoyN1rOE2GK4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo1ODo1MVrOE2GLew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTU5NjUwOnYy", "diffSide": "RIGHT", "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo1ODoyN1rOHuvEKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODowNjoxN1rOHxCcag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2NzY1Ng==", "bodyText": "Why 4?", "url": "https://github.com/apache/incubator-doris/pull/4858#discussion_r518767656", "createdAt": "2020-11-06T13:58:27Z", "author": {"login": "morningman"}, "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "diffHunk": "@@ -250,20 +265,33 @@ Status SchemaColumnsScanner::fill_one_row(Tuple *tuple, MemPool *pool) {\n         memcpy(str_slot->ptr, buffer.c_str(), str_slot->len);\n     }\n     // CHARACTER_MAXIMUM_LENGTH\n+    // For string columns, the maximum length in characters.\n     {\n-        tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+        int data_type = _desc_result.columns[_column_index].columnDesc.columnType;\n+        if (data_type == TPrimitiveType::VARCHAR || data_type == TPrimitiveType::CHAR) {\n+            void *slot = tuple->get_slot(_tuple_desc->slots()[8]->tuple_offset());\n+            int64_t* str_slot = reinterpret_cast<int64_t*>(slot);\n+            if (_desc_result.columns[_column_index].columnDesc.__isset.columnLength) {\n+                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength;\n+            } else {\n+                tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+            }\n+        } else {\n+            tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+        }\n     }\n     // CHARACTER_OCTET_LENGTH\n+    // For string columns, the maximum length in bytes.\n     {\n         int data_type = _desc_result.columns[_column_index].columnDesc.columnType;\n         if (data_type == TPrimitiveType::VARCHAR || data_type == TPrimitiveType::CHAR) {\n             void *slot = tuple->get_slot(_tuple_desc->slots()[9]->tuple_offset());\n             int64_t* str_slot = reinterpret_cast<int64_t*>(slot);\n             if (_desc_result.columns[_column_index].columnDesc.__isset.columnLength) {\n-                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength;\n+                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength * 4;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99579dc840a847baebb1bf5dfa3c6eb91f36e7a2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4MjMxNA==", "bodyText": "For mysql-compatible purposes, we need to multiply this by 4.\nAccording to https://dev.mysql.com/doc/refman/8.0/en/information-schema-columns-table.html. CHARACTER_OCTET_LENGTH stands for maximum length in bytes, while CHARACTER_MAXIMUM_LENGTH stands for maximum length in characters", "url": "https://github.com/apache/incubator-doris/pull/4858#discussion_r521182314", "createdAt": "2020-11-11T08:06:17Z", "author": {"login": "HangyuanLiu"}, "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "diffHunk": "@@ -250,20 +265,33 @@ Status SchemaColumnsScanner::fill_one_row(Tuple *tuple, MemPool *pool) {\n         memcpy(str_slot->ptr, buffer.c_str(), str_slot->len);\n     }\n     // CHARACTER_MAXIMUM_LENGTH\n+    // For string columns, the maximum length in characters.\n     {\n-        tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+        int data_type = _desc_result.columns[_column_index].columnDesc.columnType;\n+        if (data_type == TPrimitiveType::VARCHAR || data_type == TPrimitiveType::CHAR) {\n+            void *slot = tuple->get_slot(_tuple_desc->slots()[8]->tuple_offset());\n+            int64_t* str_slot = reinterpret_cast<int64_t*>(slot);\n+            if (_desc_result.columns[_column_index].columnDesc.__isset.columnLength) {\n+                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength;\n+            } else {\n+                tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+            }\n+        } else {\n+            tuple->set_null(_tuple_desc->slots()[8]->null_indicator_offset());\n+        }\n     }\n     // CHARACTER_OCTET_LENGTH\n+    // For string columns, the maximum length in bytes.\n     {\n         int data_type = _desc_result.columns[_column_index].columnDesc.columnType;\n         if (data_type == TPrimitiveType::VARCHAR || data_type == TPrimitiveType::CHAR) {\n             void *slot = tuple->get_slot(_tuple_desc->slots()[9]->tuple_offset());\n             int64_t* str_slot = reinterpret_cast<int64_t*>(slot);\n             if (_desc_result.columns[_column_index].columnDesc.__isset.columnLength) {\n-                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength;\n+                *str_slot = _desc_result.columns[_column_index].columnDesc.columnLength * 4;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2NzY1Ng=="}, "originalCommit": {"oid": "99579dc840a847baebb1bf5dfa3c6eb91f36e7a2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTU5ODAzOnYy", "diffSide": "RIGHT", "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo1ODo1MVrOHuvFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODowODowOVrOHxCflg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2Nzg4OA==", "bodyText": "No need to plus 1?", "url": "https://github.com/apache/incubator-doris/pull/4858#discussion_r518767888", "createdAt": "2020-11-06T13:58:51Z", "author": {"login": "morningman"}, "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "diffHunk": "@@ -236,9 +238,22 @@ Status SchemaColumnsScanner::fill_one_row(Tuple *tuple, MemPool *pool) {\n     {\n         void *slot = tuple->get_slot(_tuple_desc->slots()[6]->tuple_offset());\n         StringValue* str_slot = reinterpret_cast<StringValue*>(slot);\n-        str_slot->len = strlen(\"NO\") + 1;\n-        str_slot->ptr = (char *)pool->allocate(str_slot->len);\n-        memcpy(str_slot->ptr, \"NO\", str_slot->len);\n+\n+        if (_desc_result.columns[_column_index].columnDesc.__isset.isAllowNull) {\n+            if (_desc_result.columns[_column_index].columnDesc.isAllowNull) {\n+                str_slot->len = strlen(\"YES\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99579dc840a847baebb1bf5dfa3c6eb91f36e7a2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4MzEyNg==", "bodyText": "I don't think +1 is necessary here, and +1 will cause the character matching of the SQL result to fail. Such as IS_NULLABLE = \"YES\" is false", "url": "https://github.com/apache/incubator-doris/pull/4858#discussion_r521183126", "createdAt": "2020-11-11T08:08:09Z", "author": {"login": "HangyuanLiu"}, "path": "be/src/exec/schema_scanner/schema_columns_scanner.cpp", "diffHunk": "@@ -236,9 +238,22 @@ Status SchemaColumnsScanner::fill_one_row(Tuple *tuple, MemPool *pool) {\n     {\n         void *slot = tuple->get_slot(_tuple_desc->slots()[6]->tuple_offset());\n         StringValue* str_slot = reinterpret_cast<StringValue*>(slot);\n-        str_slot->len = strlen(\"NO\") + 1;\n-        str_slot->ptr = (char *)pool->allocate(str_slot->len);\n-        memcpy(str_slot->ptr, \"NO\", str_slot->len);\n+\n+        if (_desc_result.columns[_column_index].columnDesc.__isset.isAllowNull) {\n+            if (_desc_result.columns[_column_index].columnDesc.isAllowNull) {\n+                str_slot->len = strlen(\"YES\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2Nzg4OA=="}, "originalCommit": {"oid": "99579dc840a847baebb1bf5dfa3c6eb91f36e7a2"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 864, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}