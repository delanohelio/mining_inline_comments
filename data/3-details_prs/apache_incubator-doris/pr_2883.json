{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjQ2Nzcx", "number": 2883, "title": "add column type check when create bitmap index using create index clause", "bodyText": "add column AggregateType check when create bitmap index using create index clause\nsupport more data type  in bitmap index", "createdAt": "2020-02-11T13:03:25Z", "url": "https://github.com/apache/incubator-doris/pull/2883", "merged": true, "mergeCommit": {"oid": "f2875ceb737c31f776c4f8bcb5ca9dba73845380"}, "closed": true, "closedAt": "2020-02-12T15:05:17Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDRkhcABqjMwMjY0OTQxOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDntCqgFqTM1NzUyNDQxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91c526279d8577d6417ee42ddeb057dd2e5dce14", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/91c526279d8577d6417ee42ddeb057dd2e5dce14", "committedDate": "2020-02-11T13:01:44Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/1e27f0c177c0380168549d929a0ee3439c424ec8", "committedDate": "2020-02-11T13:15:50Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjUwMjQw", "url": "https://github.com/apache/incubator-doris/pull/2883#pullrequestreview-356650240", "createdAt": "2020-02-11T13:23:04Z", "commit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoyMzowNFrOFoIsxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoyMzowNFrOFoIsxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYyOTg5Mw==", "bodyText": "change many lines to on line.", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377629893", "createdAt": "2020-02-11T13:23:04Z", "author": {"login": "wutiangan"}, "path": "docs/documentation/en/administrator-guide/alter-table/alter-table-bitmap-index_EN.md", "diffHunk": "@@ -56,7 +56,10 @@ Please refer to [Scheam Change](alter-table-schema-change_EN.md#Cancel Job)\n ## Notice\n * Currently only index of bitmap type is supported.\n * The bitmap index is only created on a single column.\n-* Bitmap indexes can be applied to all columns of the `Duplicate` data model and key columns of the `Aggregate` and `Uniq` models.\n+* Bitmap indexes can be applied to all columns of the `Duplicate` data model and key columns or `REPLACE` value columns\n+ of the\n+ `Aggregate` and\n+ `Uniq` models.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjU0MTEz", "url": "https://github.com/apache/incubator-doris/pull/2883#pullrequestreview-356654113", "createdAt": "2020-02-11T13:28:49Z", "commit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoyODo0OVrOFoI4pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzoyODo0OVrOFoI4pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzMjkzMw==", "bodyText": "use isNumericType(), not list all type", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377632933", "createdAt": "2020-02-11T13:28:49Z", "author": {"login": "wutiangan"}, "path": "fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java", "diffHunk": "@@ -412,9 +412,13 @@ public void analyze(Analyzer analyzer) throws UserException {\n \n                             // key columns and none/replace aggregate non-key columns support\n                             if (indexDef.getIndexType() == IndexDef.IndexType.BITMAP) {\n-                                    if (!(colType == PrimitiveType.TINYINT || colType == PrimitiveType.SMALLINT\n-                                                  || colType == PrimitiveType.INT || colType == PrimitiveType.BIGINT ||\n-                                                  colType == PrimitiveType.CHAR || colType == PrimitiveType.VARCHAR)) {\n+                                    if (!(colType == PrimitiveType.TINYINT || colType == PrimitiveType.SMALLINT ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjY0Mjkz", "url": "https://github.com/apache/incubator-doris/pull/2883#pullrequestreview-356664293", "createdAt": "2020-02-11T13:43:25Z", "commit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzo0MzoyNlrOFoJYJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzo0NToyN1rOFoJcdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ==", "bodyText": "You can just use olapTable.getColumn() to get the column, no need to iterate all columns", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377640999", "createdAt": "2020-02-11T13:43:26Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -200,12 +202,39 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                         }\n                         Set<String> idxSet = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n                         idxSet.addAll(idx.getColumns());\n-                            if (newColset.equals(idxSet)) {\n-                                throw new AnalysisException(\"index for columns (\" + String\n-                                        .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        if (newColset.equals(idxSet)) {\n+                            throw new AnalysisException(\"index for columns (\" + String\n+                                    .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        }\n+                    }\n+                    OlapTable olapTable = (OlapTable) table;\n+                    for (String col : indexDef.getColumns()) {\n+                        for (Column c : olapTable.getFullSchema()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MjEwMQ==", "bodyText": "And the following type checking logic looks same as in CreateTableStmt.\nSo I think they can be extract to a method?", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377642101", "createdAt": "2020-02-11T13:45:27Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -200,12 +202,39 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                         }\n                         Set<String> idxSet = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n                         idxSet.addAll(idx.getColumns());\n-                            if (newColset.equals(idxSet)) {\n-                                throw new AnalysisException(\"index for columns (\" + String\n-                                        .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        if (newColset.equals(idxSet)) {\n+                            throw new AnalysisException(\"index for columns (\" + String\n+                                    .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        }\n+                    }\n+                    OlapTable olapTable = (OlapTable) table;\n+                    for (String col : indexDef.getColumns()) {\n+                        for (Column c : olapTable.getFullSchema()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ=="}, "originalCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/1e27f0c177c0380168549d929a0ee3439c424ec8", "committedDate": "2020-02-11T13:15:50Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "af551a7af62757f74283fc357a6e17293ec4e939", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/af551a7af62757f74283fc357a6e17293ec4e939", "committedDate": "2020-02-11T14:42:32Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af551a7af62757f74283fc357a6e17293ec4e939", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/af551a7af62757f74283fc357a6e17293ec4e939", "committedDate": "2020-02-11T14:42:32Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "committedDate": "2020-02-11T15:01:09Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "committedDate": "2020-02-11T15:01:09Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "79f619002c7bdef79ecfbea97d57ad529f246095", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/79f619002c7bdef79ecfbea97d57ad529f246095", "committedDate": "2020-02-11T15:03:19Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTYzNjg5", "url": "https://github.com/apache/incubator-doris/pull/2883#pullrequestreview-357163689", "createdAt": "2020-02-12T03:09:12Z", "commit": {"oid": "79f619002c7bdef79ecfbea97d57ad529f246095"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowOToxMlrOFoge4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowOToxMlrOFoge4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxOTU1Mw==", "bodyText": "althrough the implemention supports bf for replace non-key column\nWhat's meaning of bf?  This comment seems conflict with bitmap \u7d22\u5f15\u80fd\u591f\u5e94\u7528\u5728 Duplicate\u6570\u636e\u6a21\u578b\u7684\u6240\u6709\u5217\u548cAggregate, Uniq\u6a21\u578b\u7684key\u5217\u4e0a\u548cREPLACE \u7684value\u5217\u4e0a\u3002", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r378019553", "createdAt": "2020-02-12T03:09:12Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/IndexDef.java", "diffHunk": "@@ -118,4 +121,32 @@ public String getComment() {\n     public enum IndexType {\n         BITMAP,\n     }\n+    public void checkColumn(Column column) throws AnalysisException {\n+        if (indexType == IndexType.BITMAP) {\n+            String indexColName = column.getName();\n+            PrimitiveType colType = column.getDataType();\n+            if (!(colType.isDateType() || colType.isDecimalType() || colType.isFixedPointType() ||\n+                          colType.isStringType() || colType == PrimitiveType.BOOLEAN)) {\n+                throw new AnalysisException(colType + \" is not supported in bitmap index. \"\n+                        + \"invalid column: \" + indexColName);\n+            } else if (!(column.isKey()\n+                                 || column.getAggregationType() == AggregateType.NONE\n+                                 || column.getAggregationType() == AggregateType.REPLACE\n+                                 || column.getAggregationType() == AggregateType.REPLACE_IF_NOT_NULL)){\n+                // althrough the implemention supports bf for replace non-key column,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f619002c7bdef79ecfbea97d57ad529f246095"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79f619002c7bdef79ecfbea97d57ad529f246095", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/79f619002c7bdef79ecfbea97d57ad529f246095", "committedDate": "2020-02-11T15:03:19Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "committedDate": "2020-02-12T03:50:33Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "committedDate": "2020-02-12T03:50:33Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "bee44df89bdebc59c4d5f027bef94ddc2888fed4", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/bee44df89bdebc59c4d5f027bef94ddc2888fed4", "committedDate": "2020-02-12T03:57:38Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f9ce1cda51e698d4772020c38fd648e0f82278", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/39f9ce1cda51e698d4772020c38fd648e0f82278", "committedDate": "2020-02-12T15:01:32Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bee44df89bdebc59c4d5f027bef94ddc2888fed4", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/bee44df89bdebc59c4d5f027bef94ddc2888fed4", "committedDate": "2020-02-12T03:57:38Z", "message": "add column type check when create bitmap index using create index clause"}, "afterCommit": {"oid": "39f9ce1cda51e698d4772020c38fd648e0f82278", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/39f9ce1cda51e698d4772020c38fd648e0f82278", "committedDate": "2020-02-12T15:01:32Z", "message": "add column type check when create bitmap index using create index clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NTI0NDE4", "url": "https://github.com/apache/incubator-doris/pull/2883#pullrequestreview-357524418", "createdAt": "2020-02-12T15:03:21Z", "commit": {"oid": "39f9ce1cda51e698d4772020c38fd648e0f82278"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3748, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}