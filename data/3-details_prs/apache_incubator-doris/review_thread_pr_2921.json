{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1OTQ2NzU0", "number": 2921, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNTo1MDo0NVrODgRlTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NTo1OFrODgXT6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTY5MTAxOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNTo1MDo0NVrOFqZEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNTo1MDo0NVrOFqZEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5NTIyMw==", "bodyText": "Please Add a UT. Currently we have a FE UT frame, which could handle SQL analyze bug. you could refer to DemoTest.", "url": "https://github.com/apache/incubator-doris/pull/2921#discussion_r379995223", "createdAt": "2020-02-17T05:50:45Z", "author": {"login": "kangkaisen"}, "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -349,6 +350,19 @@ public void analyze(Analyzer analyzer) throws AnalysisException, UserException {\n             }\n         }\n         if (groupByClause != null && groupByClause.isGroupByExtension()) {\n+            for (SelectListItem item : selectList.getItems()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccf1f4bea673db844baa3c71afb42311ec1a4088"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjYyOTU1OnYy", "diffSide": "RIGHT", "path": "fe/src/test/java/org/apache/doris/utframe/AnotherDemoTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1NTo1OFrOFqh52g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMzoxOTowMlrOFq0C5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTk5NA==", "bodyText": "We could move this method to UtFrameUtils ?", "url": "https://github.com/apache/incubator-doris/pull/2921#discussion_r380139994", "createdAt": "2020-02-17T11:55:58Z", "author": {"login": "kangkaisen"}, "path": "fe/src/test/java/org/apache/doris/utframe/AnotherDemoTest.java", "diffHunk": "@@ -111,19 +114,25 @@ public static void beforeClass() throws EnvVarNotSetException, IOException,\n         Thread.sleep(5000);\n     }\n \n-    // generate all port from between 20000 ~ 30000\n-    private static void getRandomPort() {\n-        Random r = new Random(System.currentTimeMillis());\n-        int basePort = 20000 + r.nextInt(9000);\n-        fe_http_port = basePort + 1;\n-        fe_rpc_port = basePort + 2;\n-        fe_query_port = basePort + 3;\n-        fe_edit_log_port = basePort + 4;\n-\n-        be_heartbeat_port = basePort + 5;\n-        be_thrift_port = basePort + 6;\n-        be_brpc_port = basePort + 7;\n-        be_http_port = basePort + 8;\n+    @AfterClass\n+    public static void TearDown() {\n+        try {\n+            FileUtils.deleteDirectory(new File(runningDirBase));\n+        } catch (IOException e) {\n+        }\n+    }\n+\n+    // generate all port from valid ports\n+    private static void getPorts() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15aeabe435890d7bd7d6b3a700760db754ed28b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQzNzIyMA==", "bodyText": "those ports are class member of DemoTest, and getValidport method already in UtFrameUtils", "url": "https://github.com/apache/incubator-doris/pull/2921#discussion_r380437220", "createdAt": "2020-02-18T03:19:02Z", "author": {"login": "yangzhg"}, "path": "fe/src/test/java/org/apache/doris/utframe/AnotherDemoTest.java", "diffHunk": "@@ -111,19 +114,25 @@ public static void beforeClass() throws EnvVarNotSetException, IOException,\n         Thread.sleep(5000);\n     }\n \n-    // generate all port from between 20000 ~ 30000\n-    private static void getRandomPort() {\n-        Random r = new Random(System.currentTimeMillis());\n-        int basePort = 20000 + r.nextInt(9000);\n-        fe_http_port = basePort + 1;\n-        fe_rpc_port = basePort + 2;\n-        fe_query_port = basePort + 3;\n-        fe_edit_log_port = basePort + 4;\n-\n-        be_heartbeat_port = basePort + 5;\n-        be_thrift_port = basePort + 6;\n-        be_brpc_port = basePort + 7;\n-        be_http_port = basePort + 8;\n+    @AfterClass\n+    public static void TearDown() {\n+        try {\n+            FileUtils.deleteDirectory(new File(runningDirBase));\n+        } catch (IOException e) {\n+        }\n+    }\n+\n+    // generate all port from valid ports\n+    private static void getPorts() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzOTk5NA=="}, "originalCommit": {"oid": "d15aeabe435890d7bd7d6b3a700760db754ed28b"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2245, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}