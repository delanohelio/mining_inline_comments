{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTk5MDAy", "number": 3044, "title": "Write delete predicate into RowsetMeta upon upgrade from Doris-0.10 to Doris-0.11", "bodyText": "If delete predicate exists in meta in Doris-0.10, all of this predicates should\nbe remained. There is an confused place in Doris-0.10. The delete predicate\nonly exists in OLAPHeaderMessage and PPendingDelta, not in PDelta.\nThis trick results this bug.", "createdAt": "2020-03-06T02:14:52Z", "url": "https://github.com/apache/incubator-doris/pull/3044", "merged": true, "mergeCommit": {"oid": "c83729435f45aa6d2d93c644ba80aa10189dd962"}, "closed": true, "closedAt": "2020-03-07T03:16:48Z", "author": {"login": "chaoyli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK3CeAAFqTM3MDA1MzE3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK71PygFqTM3MDE1MDY5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMDUzMTcy", "url": "https://github.com/apache/incubator-doris/pull/3044#pullrequestreview-370053172", "createdAt": "2020-03-06T02:50:33Z", "commit": {"oid": "6699221c9bf8f9166a338c8dd6fe628e276830ee"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMjo1MDozM1rOFyrp1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMjo1Mjo0M1rOFyrryQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4ODM0MA==", "bodyText": "This function name indicates filling content from olap_header. It is not a good idea to change olap_header's content.\nAnd comment about what will be done in this function is needed.", "url": "https://github.com/apache/incubator-doris/pull/3044#discussion_r388688340", "createdAt": "2020-03-06T02:50:33Z", "author": {"login": "imay"}, "path": "be/src/olap/olap_snapshot_converter.cpp", "diffHunk": "@@ -89,27 +93,27 @@ OLAPStatus OlapSnapshotConverter::to_olap_header(const TabletMetaPB& tablet_meta\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus OlapSnapshotConverter::to_tablet_meta_pb(const OLAPHeaderMessage& olap_header,\n+OLAPStatus OlapSnapshotConverter::to_tablet_meta_pb(OLAPHeaderMessage* olap_header,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6699221c9bf8f9166a338c8dd6fe628e276830ee"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4ODg0MQ==", "bodyText": "Originally, this function only converts the header to meta.\nCan you implement another function to finish new added operation to make it less complicate?", "url": "https://github.com/apache/incubator-doris/pull/3044#discussion_r388688841", "createdAt": "2020-03-06T02:52:43Z", "author": {"login": "imay"}, "path": "be/src/olap/olap_snapshot_converter.h", "diffHunk": "@@ -47,7 +47,7 @@ class OlapSnapshotConverter {\n     // convert olap header to tablet meta pb, convert delta to rowsetmetapb\n     // pending delta is not in tablet meta any more, so that convert pending delta to rowset and add it to pending rowsets\n     // as a return value\n-    OLAPStatus to_tablet_meta_pb(const OLAPHeaderMessage& olap_header, TabletMetaPB* tablet_meta_pb, \n+    OLAPStatus to_tablet_meta_pb(OLAPHeaderMessage* olap_header, TabletMetaPB* tablet_meta_pb,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6699221c9bf8f9166a338c8dd6fe628e276830ee"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a", "committedDate": "2020-03-06T04:06:12Z", "message": "Write delete predicate into RowsetMeta upon upgrade from Doris-0.10 to Doris-0.11\n\nIf delete predicate exists in meta in Doris-0.10, all of this predicates should\nbe remained. There is an confused place in Doris-0.10. The delete predicate\nonly exists in OLAPHeaderMessage and PPendingDelta, not in PDelta.\nThis trick results this bug."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTAzMjQw", "url": "https://github.com/apache/incubator-doris/pull/3044#pullrequestreview-370103240", "createdAt": "2020-03-06T06:21:08Z", "commit": {"oid": "da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNjoyMTowOFrOFyuOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNjoyNjowMVrOFyuTeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODczMDU1MQ==", "bodyText": "align", "url": "https://github.com/apache/incubator-doris/pull/3044#discussion_r388730551", "createdAt": "2020-03-06T06:21:08Z", "author": {"login": "imay"}, "path": "be/src/olap/olap_snapshot_converter.cpp", "diffHunk": "@@ -131,11 +136,23 @@ OLAPStatus OlapSnapshotConverter::to_tablet_meta_pb(const OLAPHeaderMessage& ola\n     }\n \n     std::unordered_map<Version, RowsetMetaPB*, HashOfVersion> _rs_version_map;\n+    const DelPredicateArray& delete_conditions = olap_header.delete_data_conditions();\n     for (auto& delta : olap_header.delta()) {\n         RowsetId next_id = StorageEngine::instance()->next_rowset_id();\n         RowsetMetaPB* rowset_meta = tablet_meta_pb->add_rs_metas();\n-        convert_to_rowset_meta(delta, next_id, olap_header.tablet_id(), olap_header.schema_hash(), rowset_meta);\n-        Version rowset_version = { delta.start_version(), delta.end_version() };\n+        PDelta temp_delta = delta;\n+        // PDelta is not corresponding with RowsetMeta in DeletePredicate\n+        // Add delete predicate to PDelta from OLAPHeaderMessage.\n+        // Only after this, convert from PDelta to RowsetMeta is valid.\n+        for (auto& del_pred : delete_conditions) {\n+            if (temp_delta.start_version() == temp_delta.end_version()\n+                && temp_delta.start_version() == del_pred.version()) {\n+                    DeletePredicatePB* delete_condition = temp_delta.mutable_delete_condition();\n+                    *delete_condition = del_pred;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODczMTIyOQ==", "bodyText": "align", "url": "https://github.com/apache/incubator-doris/pull/3044#discussion_r388731229", "createdAt": "2020-03-06T06:23:49Z", "author": {"login": "imay"}, "path": "be/src/olap/olap_snapshot_converter.cpp", "diffHunk": "@@ -150,7 +167,15 @@ OLAPStatus OlapSnapshotConverter::to_tablet_meta_pb(const OLAPHeaderMessage& ola\n         }\n         RowsetId next_id = StorageEngine::instance()->next_rowset_id();\n         RowsetMetaPB* rowset_meta = tablet_meta_pb->add_inc_rs_metas();\n-        convert_to_rowset_meta(inc_delta, next_id, olap_header.tablet_id(), olap_header.schema_hash(), rowset_meta);\n+        PDelta temp_inc_delta = inc_delta;\n+        for (auto& del_pred : delete_conditions) {\n+            if (temp_inc_delta.start_version() == temp_inc_delta.end_version()\n+                && temp_inc_delta.start_version() == del_pred.version()) {\n+                    DeletePredicatePB* delete_condition = temp_inc_delta.mutable_delete_condition();\n+                    *delete_condition = del_pred;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODczMTc2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (auto& del_pred : delete_conditions) {\n          \n          \n            \n                        if (temp_delta.start_version() == temp_delta.end_version()\n          \n          \n            \n                            && temp_delta.start_version() == del_pred.version()) {\n          \n          \n            \n                                DeletePredicatePB* delete_condition = temp_delta.mutable_delete_condition();\n          \n          \n            \n                                *delete_condition = del_pred;\n          \n          \n            \n                            }\n          \n          \n            \n                    if (temp_delta.start_version() == temp_delta.end_version()) {\n          \n          \n            \n                        for (auto& del_pred : delete_conditions) {\n          \n          \n            \n                            if (temp_delta.start_version() == del_pred.version()) {\n          \n          \n            \n                                DeletePredicatePB* delete_condition = temp_delta.mutable_delete_condition();\n          \n          \n            \n                                *delete_condition = del_pred;\n          \n          \n            \n                            }", "url": "https://github.com/apache/incubator-doris/pull/3044#discussion_r388731769", "createdAt": "2020-03-06T06:26:01Z", "author": {"login": "imay"}, "path": "be/src/olap/olap_snapshot_converter.cpp", "diffHunk": "@@ -131,11 +136,23 @@ OLAPStatus OlapSnapshotConverter::to_tablet_meta_pb(const OLAPHeaderMessage& ola\n     }\n \n     std::unordered_map<Version, RowsetMetaPB*, HashOfVersion> _rs_version_map;\n+    const DelPredicateArray& delete_conditions = olap_header.delete_data_conditions();\n     for (auto& delta : olap_header.delta()) {\n         RowsetId next_id = StorageEngine::instance()->next_rowset_id();\n         RowsetMetaPB* rowset_meta = tablet_meta_pb->add_rs_metas();\n-        convert_to_rowset_meta(delta, next_id, olap_header.tablet_id(), olap_header.schema_hash(), rowset_meta);\n-        Version rowset_version = { delta.start_version(), delta.end_version() };\n+        PDelta temp_delta = delta;\n+        // PDelta is not corresponding with RowsetMeta in DeletePredicate\n+        // Add delete predicate to PDelta from OLAPHeaderMessage.\n+        // Only after this, convert from PDelta to RowsetMeta is valid.\n+        for (auto& del_pred : delete_conditions) {\n+            if (temp_delta.start_version() == temp_delta.end_version()\n+                && temp_delta.start_version() == del_pred.version()) {\n+                    DeletePredicatePB* delete_condition = temp_delta.mutable_delete_condition();\n+                    *delete_condition = del_pred;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da90067cedce8eaf6a3c0e7f419ce2d3d4e94b3a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89eaef84c1ddf114ee4c723bdf0d97ddf9f1b648", "author": {"user": null}, "url": "https://github.com/apache/incubator-doris/commit/89eaef84c1ddf114ee4c723bdf0d97ddf9f1b648", "committedDate": "2020-03-06T06:51:50Z", "message": "Write delete predicate into RowsetMeta upon upgrade from Doris-0.10 to Doris-0.11\n\nIf delete predicate exists in meta in Doris-0.10, all of this predicates should\nbe remained. There is an confused place in Doris-0.10. The delete predicate\nonly exists in OLAPHeaderMessage and PPendingDelta, not in PDelta.\nThis trick results this bug."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTUwNjk1", "url": "https://github.com/apache/incubator-doris/pull/3044#pullrequestreview-370150695", "createdAt": "2020-03-06T08:27:53Z", "commit": {"oid": "89eaef84c1ddf114ee4c723bdf0d97ddf9f1b648"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3511, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}