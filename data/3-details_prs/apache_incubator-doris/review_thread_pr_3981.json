{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjY1MDY2", "number": 3981, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToyOTozMlrOEKDegg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxOTo0OVrOEMIFaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTc4MTc4OnYy", "diffSide": "RIGHT", "path": "docs/zh-CN/sql-reference/sql-statements/Data Definition/ALTER TABLE.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToyOTozMlrOGq4DYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMToyOTozMlrOGq4DYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxMTc0Nw==", "bodyText": "\u4fdd\u7559 MODIFY PARTITION partition_name  \u8fd9\u79cd\u5199\u6cd5", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r447611747", "createdAt": "2020-06-30T11:29:32Z", "author": {"login": "morningman"}, "path": "docs/zh-CN/sql-reference/sql-statements/Data Definition/ALTER TABLE.md", "diffHunk": "@@ -64,7 +64,7 @@ under the License.\n             \n     3. \u4fee\u6539\u5206\u533a\u5c5e\u6027\n         \u8bed\u6cd5\uff1a\n-            MODIFY PARTITION partition_name SET (\"key\" = \"value\", ...)\n+            MODIFY PARTITION (p1[, p2, ...]) SET (\"key\" = \"value\", ...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e885cd21e9c01673fe2d99920299f54efe574e68"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDc0MjIyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxMTowMVrOGrnnew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxMTowMVrOGrnnew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM5MTAzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static public ModifyPartitionClause createStarClause(Map<String, String> properties) {\n          \n          \n            \n                public static ModifyPartitionClause createStarClause(Map<String, String> properties) {", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r448391035", "createdAt": "2020-07-01T14:11:01Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -48,10 +56,27 @@ public ModifyPartitionClause(String partitionName, Map<String, String> propertie\n         this.needTableStable = false;\n     }\n \n+    // c'tor for 'Modify Partition(*)' clause\n+    private ModifyPartitionClause(Map<String, String> properties) {\n+        super(AlterOpType.MODIFY_PARTITION);\n+        this.partitionNames = Lists.newArrayList();\n+        this.properties = properties;\n+        this.needExpand = true;\n+        this.needTableStable = false;\n+    }\n+\n+    static public ModifyPartitionClause createStarClause(Map<String, String> properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e885cd21e9c01673fe2d99920299f54efe574e68"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDc0NjgyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxMjowN1rOGrnqZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxMjowN1rOGrnqZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM5MTc4MQ==", "bodyText": "better to write meta in one edit log", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r448391781", "createdAt": "2020-07-01T14:12:07Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -3334,6 +3334,45 @@ public void replayRecoverPartition(RecoverInfo info) {\n         }\n     }\n \n+    /**\n+     * Batch update partitions' properties\n+     * caller should hold the db lock\n+     */\n+    public void modifyPartitionsProperty(Database db,\n+                                         OlapTable olapTable,\n+                                         List<String> partitionNames,\n+                                         Map<String, String> properties)\n+            throws DdlException {\n+        Preconditions.checkArgument(db.isWriteLockHeldByCurrentThread());\n+        if (olapTable.getState() != OlapTableState.NORMAL) {\n+            throw new DdlException(\"Table[\" + olapTable.getName() + \"]'s state is not NORMAL\");\n+        }\n+\n+        for (String partitionName : partitionNames) {\n+            Partition partition = olapTable.getPartition(partitionName);\n+            if (partition == null) {\n+                throw new DdlException(\n+                        \"Partition[\" + partitionName + \"] does not exist in table[\" + olapTable.getName() + \"]\");\n+            }\n+        }\n+\n+        // If error occurs tell user which partition is wrong.\n+        for (String partitionName : partitionNames) {\n+            try {\n+                Map<String, String> partitionProperties = Maps.newHashMap(properties);\n+                modifyPartitionProperty(db, olapTable, partitionName, partitionProperties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e885cd21e9c01673fe2d99920299f54efe574e68"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDM0OTM0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwODozMzo1M1rOGtAtXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo0ODo0N1rOGtDMdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDcxOQ==", "bodyText": "Wrong import.", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r449850719", "createdAt": "2020-07-05T08:33:53Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -17,28 +17,36 @@\n \n package org.apache.doris.analysis;\n \n+import com.clearspring.analytics.util.Lists;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd49f51567c75c3d6e32d15781af76710bd06c08"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTQ0Ng==", "bodyText": "fix", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r449891446", "createdAt": "2020-07-05T15:48:47Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -17,28 +17,36 @@\n \n package org.apache.doris.analysis;\n \n+import com.clearspring.analytics.util.Lists;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDcxOQ=="}, "originalCommit": {"oid": "dd49f51567c75c3d6e32d15781af76710bd06c08"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDM1MDM0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwODozNToxMlrOGtAt2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNTo0OTowM1rOGtDMkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDg0MA==", "bodyText": "Should print \"*\" if needExpand is true", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r449850840", "createdAt": "2020-07-05T08:35:12Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -64,11 +89,17 @@ public void analyze(Analyzer analyzer) throws AnalysisException {\n         return this.properties;\n     }\n \n+    public boolean isNeedExpand() {\n+        return this.needExpand;\n+    }\n+\n     @Override\n     public String toSql() {\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"MODIFY PARTITION \");\n-        sb.append(partitionName);\n+        sb.append(\"(\");\n+        sb.append(Joiner.on(\", \").join(partitionNames));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd49f51567c75c3d6e32d15781af76710bd06c08"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5MTQ3Mw==", "bodyText": "fixed", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r449891473", "createdAt": "2020-07-05T15:49:03Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -64,11 +89,17 @@ public void analyze(Analyzer analyzer) throws AnalysisException {\n         return this.properties;\n     }\n \n+    public boolean isNeedExpand() {\n+        return this.needExpand;\n+    }\n+\n     @Override\n     public String toSql() {\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"MODIFY PARTITION \");\n-        sb.append(partitionName);\n+        sb.append(\"(\");\n+        sb.append(Joiner.on(\", \").join(partitionNames));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDg0MA=="}, "originalCommit": {"oid": "dd49f51567c75c3d6e32d15781af76710bd06c08"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTQ5NzgyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxNzoxOVrOGuDfoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxNzoxOVrOGuDfoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0NDkyOA==", "bodyText": "Import order", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r450944928", "createdAt": "2020-07-07T15:17:19Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -17,28 +17,41 @@\n \n package org.apache.doris.analysis;\n \n+import com.google.common.base.Joiner;\n+import com.google.common.base.Preconditions;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4c3c210cd9bff03c43928335fef85fcaac51c7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTQ5OTcwOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxNzo0NVrOGuDg5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDoxOTowMVrOGuXikg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0NTI1Mg==", "bodyText": "private, and no need to be static. And method name can be changed to checkProperties.", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r450945252", "createdAt": "2020-07-07T15:17:45Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -48,27 +61,80 @@ public ModifyPartitionClause(String partitionName, Map<String, String> propertie\n         this.needTableStable = false;\n     }\n \n+    // c'tor for 'Modify Partition(*)' clause\n+    private ModifyPartitionClause(Map<String, String> properties) {\n+        super(AlterOpType.MODIFY_PARTITION);\n+        this.partitionNames = Lists.newArrayList();\n+        this.properties = properties;\n+        this.needExpand = true;\n+        this.needTableStable = false;\n+    }\n+\n+    public static ModifyPartitionClause createStarClause(Map<String, String> properties) {\n+        return new ModifyPartitionClause(properties);\n+    }\n+\n     @Override\n     public void analyze(Analyzer analyzer) throws AnalysisException {\n-        if (Strings.isNullOrEmpty(partitionName)) {\n-            throw new AnalysisException(\"Partition name is not set\");\n+        if (partitionNames == null || (!needExpand && partitionNames.isEmpty())) {\n+            throw new AnalysisException(\"Partition names is not set or empty\");\n+        }\n+\n+        if (partitionNames.stream().anyMatch(entity -> Strings.isNullOrEmpty(entity))) {\n+            throw new AnalysisException(\"there are empty partition name\");\n         }\n \n         if (properties == null || properties.isEmpty()) {\n             throw new AnalysisException(\"Properties is not set\");\n         }\n+\n+        // check properties here\n+        preCheck(Maps.newHashMap(properties));\n+    }\n+\n+    // pre check the following properties' legality before modifying partition.\n+    // 1. replication_num\n+    // 2. storage_medium && storage_cooldown_time\n+    // 3. in_memory\n+    // 4. tablet type\n+    public static void preCheck(Map<String, String> properties) throws AnalysisException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4c3c210cd9bff03c43928335fef85fcaac51c7"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3MzM2Mg==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r451273362", "createdAt": "2020-07-08T04:19:01Z", "author": {"login": "xy720"}, "path": "fe/src/main/java/org/apache/doris/analysis/ModifyPartitionClause.java", "diffHunk": "@@ -48,27 +61,80 @@ public ModifyPartitionClause(String partitionName, Map<String, String> propertie\n         this.needTableStable = false;\n     }\n \n+    // c'tor for 'Modify Partition(*)' clause\n+    private ModifyPartitionClause(Map<String, String> properties) {\n+        super(AlterOpType.MODIFY_PARTITION);\n+        this.partitionNames = Lists.newArrayList();\n+        this.properties = properties;\n+        this.needExpand = true;\n+        this.needTableStable = false;\n+    }\n+\n+    public static ModifyPartitionClause createStarClause(Map<String, String> properties) {\n+        return new ModifyPartitionClause(properties);\n+    }\n+\n     @Override\n     public void analyze(Analyzer analyzer) throws AnalysisException {\n-        if (Strings.isNullOrEmpty(partitionName)) {\n-            throw new AnalysisException(\"Partition name is not set\");\n+        if (partitionNames == null || (!needExpand && partitionNames.isEmpty())) {\n+            throw new AnalysisException(\"Partition names is not set or empty\");\n+        }\n+\n+        if (partitionNames.stream().anyMatch(entity -> Strings.isNullOrEmpty(entity))) {\n+            throw new AnalysisException(\"there are empty partition name\");\n         }\n \n         if (properties == null || properties.isEmpty()) {\n             throw new AnalysisException(\"Properties is not set\");\n         }\n+\n+        // check properties here\n+        preCheck(Maps.newHashMap(properties));\n+    }\n+\n+    // pre check the following properties' legality before modifying partition.\n+    // 1. replication_num\n+    // 2. storage_medium && storage_cooldown_time\n+    // 3. in_memory\n+    // 4. tablet type\n+    public static void preCheck(Map<String, String> properties) throws AnalysisException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0NTI1Mg=="}, "originalCommit": {"oid": "0b4c3c210cd9bff03c43928335fef85fcaac51c7"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTUwODI3OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/persist/BatchModifyPartitionsInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxOTo0OVrOGuDmXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxOTo0OVrOGuDmXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0NjY1NA==", "bodyText": "Add UT to test the read/write method of this class", "url": "https://github.com/apache/incubator-doris/pull/3981#discussion_r450946654", "createdAt": "2020-07-07T15:19:49Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/persist/BatchModifyPartitionsInfo.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.persist;\n+\n+import com.google.gson.annotations.SerializedName;\n+import org.apache.doris.common.io.Text;\n+import org.apache.doris.common.io.Writable;\n+import org.apache.doris.persist.gson.GsonUtils;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.List;\n+\n+/**\n+ * used for batch modify multi partitions in one atomic operation\n+ */\n+\n+public class BatchModifyPartitionsInfo implements Writable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b4c3c210cd9bff03c43928335fef85fcaac51c7"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1334, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}