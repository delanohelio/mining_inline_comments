{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5ODUwMzMz", "number": 3947, "title": "[Enhance] Add prepare phase for some timestamp functions", "bodyText": "Fix: #3946\nCL:\n\nAdd prepare phase for from_unixtime(), date_format() and convert_tz() functions, to handle the format string once for all.\nFind the cctz timezone when init runtime state, so that don't need to find timezone for each rows.\nAdd constant rewrite rule for utc_timestamp()\nAdd doc for to_date()\nComment out the push_handler_test, it can not run in DEBUG mode, will be fixed later.\nRemove timezone_db.h/cpp and add timezone_utils.h/cpp\n\nThe performance shows bellow:\n11,000,000 rows\nSQL1: select count(from_unixtime(k1)) from tbl1;\nBefore: 8.85s\nAfter: 2.85s\nSQL2: select count(from_unixtime(k1, '%Y-%m-%d %H:%i:%s')) from tbl1 limit 1;\nBefore: 10.73s\nAfter: 4.85s\nThe date string format seems still slow, we may need a further enhancement about it.", "createdAt": "2020-06-25T08:56:11Z", "url": "https://github.com/apache/incubator-doris/pull/3947", "merged": true, "mergeCommit": {"oid": "af1beb6ce418e613e36e98fb960086ee5cef0425"}, "closed": true, "closedAt": "2020-06-29T11:15:10Z", "author": {"login": "morningman"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuq4Q6AH2gAyNDM5ODUwMzMzOjI5NTk1YmVlMjlmOWNmYzZkMjk4ZTc1MjdiZWVjNzM0NmExYTk4MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvq1eugFqTQzODc3MTg0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "29595bee29f9cfc6d298e7527beec7346a1a9823", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/29595bee29f9cfc6d298e7527beec7346a1a9823", "committedDate": "2020-06-25T09:04:04Z", "message": "first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fed9d90c17523c2362966cc726097216641c155", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/9fed9d90c17523c2362966cc726097216641c155", "committedDate": "2020-06-25T09:04:04Z", "message": "add doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cba3a588ce997f5f52009caf5ed650def0f4b235", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/cba3a588ce997f5f52009caf5ed650def0f4b235", "committedDate": "2020-06-25T09:56:31Z", "message": "fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4", "committedDate": "2020-06-25T10:16:25Z", "message": "fix ut"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3b3f865e02781ef468b8459d8d8c9e6adfddd1a", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/c3b3f865e02781ef468b8459d8d8c9e6adfddd1a", "committedDate": "2020-06-25T08:21:41Z", "message": "add doc"}, "afterCommit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4", "committedDate": "2020-06-25T10:16:25Z", "message": "fix ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTk0MjI0", "url": "https://github.com/apache/incubator-doris/pull/3947#pullrequestreview-438194224", "createdAt": "2020-06-26T10:41:37Z", "commit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0MTozOFrOGpcRuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0MTozOFrOGpcRuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwODA5MQ==", "bodyText": "why \"+00:00\" modify to \"+0:00\"", "url": "https://github.com/apache/incubator-doris/pull/3947#discussion_r446108091", "createdAt": "2020-06-26T10:41:38Z", "author": {"login": "wutiangan"}, "path": "be/src/exprs/timestamp_functions.cpp", "diffHunk": "@@ -599,7 +673,7 @@ IntVal TimestampFunctions::to_unix(\n \n DateTimeVal TimestampFunctions::utc_timestamp(FunctionContext* context) {\n     DateTimeValue dtv;\n-    if (!dtv.from_unixtime(context->impl()->state()->timestamp_ms() / 1000, \"+00:00\")) {\n+    if (!dtv.from_unixtime(context->impl()->state()->timestamp_ms() / 1000, \"+0:00\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "originalPosition": 156}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTk1MTc4", "url": "https://github.com/apache/incubator-doris/pull/3947#pullrequestreview-438195178", "createdAt": "2020-06-26T10:43:26Z", "commit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0MzoyN1rOGpcUeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0MzoyN1rOGpcUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwODc5NA==", "bodyText": "in old code, first invoke function \"compute_format_len\" , then invoke function \"convert_format\", but your call sequence is the opposite , is it matter?", "url": "https://github.com/apache/incubator-doris/pull/3947#discussion_r446108794", "createdAt": "2020-06-26T10:43:27Z", "author": {"login": "wutiangan"}, "path": "be/src/exprs/timestamp_functions.cpp", "diffHunk": "@@ -451,20 +451,79 @@ BigIntVal TimestampFunctions::timestamp_diff(FunctionContext* ctx, const DateTim\n     }\n }\n \n+void TimestampFunctions::format_prepare(\n+        doris_udf::FunctionContext* context,\n+        doris_udf::FunctionContext::FunctionStateScope scope) {\n+\n+    if (scope != FunctionContext::FRAGMENT_LOCAL\n+            || context->get_num_args() < 2\n+            || context->get_arg_type(1)->type != doris_udf::FunctionContext::Type::TYPE_VARCHAR\n+            || !context->is_arg_constant(1)) {\n+        VLOG(10) << \"format_prepare returned\";\n+        return;\n+    }\n+\n+    FormatCtx* fc = new FormatCtx();\n+    context->set_function_state(scope, fc);\n+\n+    StringVal* format = reinterpret_cast<StringVal*>(context->get_constant_arg(1));\n+    if (UNLIKELY(format->is_null)) {\n+        fc->is_valid = false;\n+        return;\n+    }\n+\n+    fc->fmt = convert_format(context, *format);\n+    int format_len = DateTimeValue::compute_format_len((const char*) fc->fmt.ptr, fc->fmt.len);\n+    if (UNLIKELY(format_len >= 128)) {\n+        fc->is_valid = false;\n+        return;\n+    }\n+\n+    fc->is_valid = true;\n+    return;\n+}\n+\n+void TimestampFunctions::format_close(\n+        doris_udf::FunctionContext* context,\n+        doris_udf::FunctionContext::FunctionStateScope scope) {\n+    if (scope != FunctionContext::FRAGMENT_LOCAL) {\n+        return;\n+    }\n+\n+    FormatCtx* fc = reinterpret_cast<FormatCtx*>(context->get_function_state(FunctionContext::FRAGMENT_LOCAL));\n+    if (fc != nullptr) {\n+        delete fc;\n+    }\n+}\n+\n StringVal TimestampFunctions::date_format(\n         FunctionContext* ctx, const DateTimeVal& ts_val, const StringVal& format) {\n     if (ts_val.is_null || format.is_null) {\n         return StringVal::null();\n     }\n+\n     DateTimeValue ts_value = DateTimeValue::from_datetime_val(ts_val);\n-    if (ts_value.compute_format_len((const char*)format.ptr, format.len) >= 128) {\n-        return StringVal::null();\n+    FormatCtx* fc = reinterpret_cast<FormatCtx*>(ctx->get_function_state(FunctionContext::FRAGMENT_LOCAL));\n+    if (UNLIKELY(fc == nullptr)) {\n+        // prepare phase failed, calculate at runtime\n+        StringVal new_fmt = convert_format(ctx, format);\n+        if (DateTimeValue::compute_format_len((const char*) new_fmt.ptr, new_fmt.len) >= 128) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTk2MjYy", "url": "https://github.com/apache/incubator-doris/pull/3947#pullrequestreview-438196262", "createdAt": "2020-06-26T10:45:36Z", "commit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0NTozN1rOGpcXpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMDo0NTozN1rOGpcXpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEwOTYwNQ==", "bodyText": "can ctz put it into cache like 'data foramt' function?", "url": "https://github.com/apache/incubator-doris/pull/3947#discussion_r446109605", "createdAt": "2020-06-26T10:45:37Z", "author": {"login": "wutiangan"}, "path": "be/src/runtime/datetime_value.cpp", "diffHunk": "@@ -1535,7 +1521,10 @@ bool DateTimeValue::unix_timestamp(int64_t* timestamp, const std::string& timezo\n     if (!find_cctz_time_zone(timezone, ctz)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b0d4674a80053d2e27dd2e95dc6c44eaccd7d4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ced269a015e30533d332eff1846c3c4d8060dd1", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/9ced269a015e30533d332eff1846c3c4d8060dd1", "committedDate": "2020-06-26T16:12:31Z", "message": "add convert_tz"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d411242c7a44f3d0d7f071ac5d8256ca039fbae4", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/d411242c7a44f3d0d7f071ac5d8256ca039fbae4", "committedDate": "2020-06-27T01:29:26Z", "message": "add script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1101414fbba2f9da533f824878264eadbda3aa8e", "author": {"user": {"login": "morningman-cmy", "name": null}}, "url": "https://github.com/apache/incubator-doris/commit/1101414fbba2f9da533f824878264eadbda3aa8e", "committedDate": "2020-06-28T11:31:16Z", "message": "remove code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzcxNjg1", "url": "https://github.com/apache/incubator-doris/pull/3947#pullrequestreview-438771685", "createdAt": "2020-06-28T11:32:45Z", "commit": {"oid": "1101414fbba2f9da533f824878264eadbda3aa8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzcxODQ5", "url": "https://github.com/apache/incubator-doris/pull/3947#pullrequestreview-438771849", "createdAt": "2020-06-28T11:34:57Z", "commit": {"oid": "1101414fbba2f9da533f824878264eadbda3aa8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2197, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}