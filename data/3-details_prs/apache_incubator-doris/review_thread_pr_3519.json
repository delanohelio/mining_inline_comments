{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDIxMTIx", "number": 3519, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTozMjoyNFrOD69d5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo0NjowMFrOEHk-5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUxMDc4OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTozMjoyNFrOGTChnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTozMjoyNFrOGTChnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxNzUwMQ==", "bodyText": "We can just remove the if (table.getType() == TableType.OLAP). The argument is already OlapTable", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422617501", "createdAt": "2020-05-10T09:32:24Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -4894,8 +4894,7 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n \n         // check if rollup has same name\n         if (table.getType() == TableType.OLAP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 235}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUxMDk0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTozMjozMFrOGTChrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTozMjozMFrOGTChrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxNzUxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (String idxName: table.getIndexNameToId().keySet()) {\n          \n          \n            \n                        for (String idxName : table.getIndexNameToId().keySet()) {", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422617519", "createdAt": "2020-05-10T09:32:30Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -4894,8 +4894,7 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n \n         // check if rollup has same name\n         if (table.getType() == TableType.OLAP) {\n-            OlapTable olapTable = (OlapTable) table;\n-            for (String idxName: olapTable.getIndexNameToId().keySet()) {\n+            for (String idxName: table.getIndexNameToId().keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 238}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUxODk1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTo0MDozN1rOGTClkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDo1NTozNlrOGTDHwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxODUxNQ==", "bodyText": "Add comment to explain the return value of this method.\nthe name checkDiskExceedLimitByStorageMedium is a little bit confused.", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422618515", "createdAt": "2020-05-10T09:40:37Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "diffHunk": "@@ -346,6 +347,23 @@ public double getMaxDiskUsedPct() {\n         return maxPct;\n     }\n \n+    public boolean checkDiskExceedLimitByStorageMedium(TStorageMedium storageMedium) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNzI2Ng==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422627266", "createdAt": "2020-05-10T10:55:36Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "diffHunk": "@@ -346,6 +347,23 @@ public double getMaxDiskUsedPct() {\n         return maxPct;\n     }\n \n+    public boolean checkDiskExceedLimitByStorageMedium(TStorageMedium storageMedium) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxODUxNQ=="}, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUyMDAyOnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTo0MTo0NlrOGTCmGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDo1NToyNlrOGTDHow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxODY1MA==", "bodyText": "Is this logic correct? If all disks are offline or is not with specified storage medium, then this method will return false?", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422618650", "createdAt": "2020-05-10T09:41:46Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "diffHunk": "@@ -346,6 +347,23 @@ public double getMaxDiskUsedPct() {\n         return maxPct;\n     }\n \n+    public boolean checkDiskExceedLimitByStorageMedium(TStorageMedium storageMedium) {\n+        // no available disk with storage medium\n+        if (getDiskNumByStorageMedium(storageMedium) <= 0) {\n+            return true;\n+        }\n+        ImmutableMap<String, DiskInfo> disks = disksRef.get();\n+        boolean exceedLimit = false;\n+        for (DiskInfo diskInfo : disks.values()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNzIzNQ==", "bodyText": "yes, you are right, I fixed it, and should we change the logic in be, just remove the judgement _available_storage_medium_type_count == 1?\nfor (auto& it : _store_map) {\n            if (it.second->is_used()) {\n                if (_available_storage_medium_type_count == 1\n                    || it.second->storage_medium() == storage_medium) {\n                    stores.push_back(it.second);\n                }\n            }\n        }", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422627235", "createdAt": "2020-05-10T10:55:26Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/Backend.java", "diffHunk": "@@ -346,6 +347,23 @@ public double getMaxDiskUsedPct() {\n         return maxPct;\n     }\n \n+    public boolean checkDiskExceedLimitByStorageMedium(TStorageMedium storageMedium) {\n+        // no available disk with storage medium\n+        if (getDiskNumByStorageMedium(storageMedium) <= 0) {\n+            return true;\n+        }\n+        ImmutableMap<String, DiskInfo> disks = disksRef.get();\n+        boolean exceedLimit = false;\n+        for (DiskInfo diskInfo : disks.values()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxODY1MA=="}, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUyMzQ1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTo0NTozMFrOGTCn5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDo1MjozM1rOGTDGXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxOTEwOA==", "bodyText": "Actually, the method calculateDecommissionBackends() is deprecated.\nSo could you please add @Derepcated to this method?", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422619108", "createdAt": "2020-05-10T09:45:30Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "diffHunk": "@@ -443,7 +390,7 @@ public void releaseBackends(String clusterName, boolean isReplay) {\n         }\n \n         List<List<Backend>> hostList = Lists.newArrayList(hostBackendsMapInCluster.values());\n-        Collections.sort(hostList, hostBackendsListComparator);\n+        hostList.sort(hostBackendsListComparator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNjkxMA==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422626910", "createdAt": "2020-05-10T10:52:33Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "diffHunk": "@@ -443,7 +390,7 @@ public void releaseBackends(String clusterName, boolean isReplay) {\n         }\n \n         List<List<Backend>> hostList = Lists.newArrayList(hostBackendsMapInCluster.values());\n-        Collections.sort(hostList, hostBackendsListComparator);\n+        hostList.sort(hostBackendsListComparator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxOTEwOA=="}, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTUyNjg1OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwOTo0OToxNlrOGTCpng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDo1MTo1MlrOGTDFxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxOTU1MA==", "bodyText": "This is not user friendly. For example, if all backends not meet the checkDiskExceedLimitByStorageMedium(), the user will only get the msg: \"Not enough backends\", but he will not know why there is no enough backend.\nSo could you please find a way to return the detail msg to user about the reason of failure?", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422619550", "createdAt": "2020-05-10T09:49:16Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "diffHunk": "@@ -729,8 +639,18 @@ public void releaseBackends(String clusterName, boolean isReplay) {\n     // return null if not enough backend\n     // use synchronized to run serially\n     public synchronized List<Long> seqChooseBackendIds(int backendNum, boolean needAlive, boolean isCreate,\n-            String clusterName) {\n-        long lastBackendId = -1L;\n+                                                       String clusterName) {\n+        return seqChooseBackendIds(backendNum, needAlive, isCreate, clusterName, getClusterBackends(clusterName));\n+    }\n+    public synchronized List<Long> seqChooseBackendIdsByStorageMedium(int backendNum, boolean needAlive, boolean isCreate,\n+                                                                      String clusterName, TStorageMedium storageMedium) {\n+        final List<Backend> backends = getClusterBackends(clusterName).stream().filter(v -> !v.checkDiskExceedLimitByStorageMedium(storageMedium)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 292}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNjc1Nw==", "bodyText": "actually, I change the detail msg to throw new DdlException(\"Failed to find enough host in all backends with storage medium is \" + storageMedium + \". need: \" + replicationNum", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r422626757", "createdAt": "2020-05-10T10:51:52Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/system/SystemInfoService.java", "diffHunk": "@@ -729,8 +639,18 @@ public void releaseBackends(String clusterName, boolean isReplay) {\n     // return null if not enough backend\n     // use synchronized to run serially\n     public synchronized List<Long> seqChooseBackendIds(int backendNum, boolean needAlive, boolean isCreate,\n-            String clusterName) {\n-        long lastBackendId = -1L;\n+                                                       String clusterName) {\n+        return seqChooseBackendIds(backendNum, needAlive, isCreate, clusterName, getClusterBackends(clusterName));\n+    }\n+    public synchronized List<Long> seqChooseBackendIdsByStorageMedium(int backendNum, boolean needAlive, boolean isCreate,\n+                                                                      String clusterName, TStorageMedium storageMedium) {\n+        final List<Backend> backends = getClusterBackends(clusterName).stream().filter(v -> !v.checkDiskExceedLimitByStorageMedium(storageMedium)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYxOTU1MA=="}, "originalCommit": {"oid": "9cffe922792506d4732909606fa4994c81c0cf2c"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzgxNDE0OnYy", "diffSide": "RIGHT", "path": "fe/src/main/java/org/apache/doris/common/Config.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo0NjowMFrOGnBTsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDozMjo1OVrOGnDZUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2OTA3Mw==", "bodyText": "missing coment?", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r443569073", "createdAt": "2020-06-22T13:46:00Z", "author": {"login": "morningman"}, "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1082,5 +1082,11 @@\n      */\n     @ConfField(mutable = true, masterOnly = true)\n     public static boolean drop_backend_after_decommission = true;\n+\n+    /**\n+     *\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2a8b42a14bc8facbf6f56dd4b20a6562db6a0d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwMzI4MA==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/3519#discussion_r443603280", "createdAt": "2020-06-22T14:32:59Z", "author": {"login": "WingsGo"}, "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -1082,5 +1082,11 @@\n      */\n     @ConfField(mutable = true, masterOnly = true)\n     public static boolean drop_backend_after_decommission = true;\n+\n+    /**\n+     *\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2OTA3Mw=="}, "originalCommit": {"oid": "cd2a8b42a14bc8facbf6f56dd4b20a6562db6a0d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}