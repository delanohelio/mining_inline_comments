{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMDkzMzU3", "number": 2747, "title": "Add path util", "bodyText": "Note that the methods in path_util are only related to path processing,\nand do not involve any file and IO operations\nThe upcoming patch will use these util methods, used to extract operations\nsuch as concatenation of directory strings from processing logic.", "createdAt": "2020-01-13T12:31:42Z", "url": "https://github.com/apache/incubator-doris/pull/2747", "merged": true, "mergeCommit": {"oid": "c71eefa2acdaf4770055cc7b329019e26b81da49"}, "closed": true, "closedAt": "2020-01-17T16:05:01Z", "author": {"login": "lingbin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb57dQZAH2gAyMzYyMDkzMzU3OjQyZGFkYjQ0NTUyNDkxYjljM2JjZjk1NjJjMmNlNGQxMDhkMzAyZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7Q_9QAFqTM0NDY3OTY1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc", "author": {"user": {"login": "lingbin", "name": "LingBin"}}, "url": "https://github.com/apache/incubator-doris/commit/42dadb44552491b9c3bcf9562c2ce4d108d302dc", "committedDate": "2020-01-13T12:24:58Z", "message": "Add path util\n\nNote that the methods in path_util are only related to path processing,\nand do not involve any file and IO operations\n\nThe upcoming patch will use these util methods, used to extract operations\nsuch as concatenation of directory strings from processing logic."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTA3MDAz", "url": "https://github.com/apache/incubator-doris/pull/2747#pullrequestreview-341907003", "createdAt": "2020-01-13T15:03:24Z", "commit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTowMzoyNFrOFc5zxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNToxNzo1N1rOFc6SbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1MTU4OA==", "bodyText": "can you remove these codes to make it run without conf?", "url": "https://github.com/apache/incubator-doris/pull/2747#discussion_r365851588", "createdAt": "2020-01-13T15:03:24Z", "author": {"login": "imay"}, "path": "be/test/util/path_util_test.cpp", "diffHunk": "@@ -0,0 +1,85 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"util/path_util.h\"\n+\n+#include <string>\n+#include <vector>\n+\n+#include <gtest/gtest.h>\n+\n+#include \"common/config.h\"\n+#include \"util/logging.h\"\n+\n+\n+using std::string;\n+using std::vector;\n+\n+namespace doris {\n+\n+TEST(TestPathUtil, BaseNameTest) {\n+    ASSERT_EQ(\".\", path_util::base_name(\"\"));\n+    ASSERT_EQ(\".\", path_util::base_name(\".\"));\n+    ASSERT_EQ(\"..\", path_util::base_name(\"..\"));\n+    ASSERT_EQ(\"/\", path_util::base_name(\"/\"));\n+    ASSERT_EQ(\"/\", path_util::base_name(\"//\"));\n+    ASSERT_EQ(\"a\", path_util::base_name(\"a\"));\n+    ASSERT_EQ(\"ab\", path_util::base_name(\"ab\"));\n+    ASSERT_EQ(\"ab\", path_util::base_name(\"ab/\"));\n+    ASSERT_EQ(\"cd\", path_util::base_name(\"ab/cd\"));\n+    ASSERT_EQ(\"ab\", path_util::base_name(\"/ab\"));\n+    ASSERT_EQ(\"ab\", path_util::base_name(\"/ab///\"));\n+    ASSERT_EQ(\"cd\", path_util::base_name(\"/ab/cd\"));\n+}\n+\n+TEST(TestPathUtil, DirNameTest) {\n+    ASSERT_EQ(\".\", path_util::dir_name(\"\"));\n+    ASSERT_EQ(\".\", path_util::dir_name(\".\"));\n+    ASSERT_EQ(\".\", path_util::dir_name(\"..\"));\n+    ASSERT_EQ(\"/\", path_util::dir_name(\"/\"));\n+    ASSERT_EQ(\"//\", path_util::dir_name(\"//\"));\n+    ASSERT_EQ(\".\", path_util::dir_name(\"a\"));\n+    ASSERT_EQ(\".\", path_util::dir_name(\"ab\"));\n+    ASSERT_EQ(\".\", path_util::dir_name(\"ab/\"));\n+    ASSERT_EQ(\"ab\", path_util::dir_name(\"ab/cd\"));\n+    ASSERT_EQ(\"/\", path_util::dir_name(\"/ab\"));\n+    ASSERT_EQ(\"/\", path_util::dir_name(\"/ab///\"));\n+    ASSERT_EQ(\"/ab\", path_util::dir_name(\"/ab/cd\"));\n+}\n+\n+TEST(TestPathUtil, SplitPathTest) {\n+    using Vec = vector<string>;\n+    ASSERT_EQ(Vec({\"/\"}), path_util::split_path(\"/\"));\n+    ASSERT_EQ(Vec({\"/\", \"a\", \"b\"}), path_util::split_path(\"/a/b\"));\n+    ASSERT_EQ(Vec({\"/\", \"a\", \"b\"}), path_util::split_path(\"/a/b/\"));\n+    ASSERT_EQ(Vec({\"a\", \"b\"}), path_util::split_path(\"a/b\"));\n+    ASSERT_EQ(Vec({\".\"}), path_util::split_path(\".\"));\n+    ASSERT_EQ(Vec(), path_util::split_path(\"\"));\n+}\n+\n+} // namespace doris\n+\n+int main(int argc, char* argv[]) {\n+    std::string conffile = std::string(getenv(\"DORIS_HOME\")) + \"/conf/be.conf\";\n+    if (!doris::config::init(conffile.c_str(), false)) {\n+        fprintf(stderr, \"error read config file. \\n\");\n+        return -1;\n+    }\n+    doris::init_glog(\"be-test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1MTk1OA==", "bodyText": "should be STREQ?", "url": "https://github.com/apache/incubator-doris/pull/2747#discussion_r365851958", "createdAt": "2020-01-13T15:04:09Z", "author": {"login": "imay"}, "path": "be/test/util/path_util_test.cpp", "diffHunk": "@@ -0,0 +1,85 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"util/path_util.h\"\n+\n+#include <string>\n+#include <vector>\n+\n+#include <gtest/gtest.h>\n+\n+#include \"common/config.h\"\n+#include \"util/logging.h\"\n+\n+\n+using std::string;\n+using std::vector;\n+\n+namespace doris {\n+\n+TEST(TestPathUtil, BaseNameTest) {\n+    ASSERT_EQ(\".\", path_util::base_name(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg1OTQzNg==", "bodyText": "I don't think it's a good idea to CHECK common function's input arguments", "url": "https://github.com/apache/incubator-doris/pull/2747#discussion_r365859436", "createdAt": "2020-01-13T15:17:57Z", "author": {"login": "imay"}, "path": "be/src/util/path_util.cpp", "diffHunk": "@@ -0,0 +1,88 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"util/path_util.h\"\n+\n+// Use the POSIX version of dirname(3). See `man 3 dirname`\n+#include <libgen.h>\n+\n+#include <cstring>\n+\n+#include <common/logging.h>\n+#include \"gutil/strings/split.h\"\n+#include \"gutil/strings/stringpiece.h\"\n+#include \"gutil/strings/strip.h\"\n+#include \"env/env.h\"\n+#include \"common/status.h\"\n+\n+using std::string;\n+using std::vector;\n+using strings::SkipEmpty;\n+using strings::Split;\n+\n+namespace doris {\n+namespace path_util {\n+\n+const string kTmpInfix = \".doristmp\";\n+\n+string join_path_segments(const string& a, const string& b) {\n+    CHECK(!a.empty()) << \"empty first component: \" << a;\n+    CHECK(!b.empty() && b[0] != '/')\n+            << \"second path component must be non-empty and relative: \"\n+            << b;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4344a53798c74f2258bfa14d0dd31227790956b", "author": {"user": {"login": "lingbin", "name": "LingBin"}}, "url": "https://github.com/apache/incubator-doris/commit/b4344a53798c74f2258bfa14d0dd31227790956b", "committedDate": "2020-01-14T04:22:36Z", "message": "Modify according by comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee93f3655c3be9cded4cacde69510f85241fedee", "author": {"user": {"login": "lingbin", "name": "LingBin"}}, "url": "https://github.com/apache/incubator-doris/commit/ee93f3655c3be9cded4cacde69510f85241fedee", "committedDate": "2020-01-15T04:58:55Z", "message": "Modify according by comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzOTQ3OTQz", "url": "https://github.com/apache/incubator-doris/pull/2747#pullrequestreview-343947943", "createdAt": "2020-01-16T14:24:20Z", "commit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyNDoyMVrOFebCRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyNDoyMVrOFebCRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0NDU1MQ==", "bodyText": "What if i pass \"/a//b///c\" ? Is it valid?", "url": "https://github.com/apache/incubator-doris/pull/2747#discussion_r367444551", "createdAt": "2020-01-16T14:24:21Z", "author": {"login": "morningman"}, "path": "be/src/util/path_util.cpp", "diffHunk": "@@ -0,0 +1,88 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"util/path_util.h\"\n+\n+// Use the POSIX version of dirname(3). See `man 3 dirname`\n+#include <libgen.h>\n+\n+#include <cstring>\n+\n+#include <common/logging.h>\n+#include \"gutil/strings/split.h\"\n+#include \"gutil/strings/stringpiece.h\"\n+#include \"gutil/strings/strip.h\"\n+#include \"env/env.h\"\n+#include \"common/status.h\"\n+\n+using std::string;\n+using std::vector;\n+using strings::SkipEmpty;\n+using strings::Split;\n+\n+namespace doris {\n+namespace path_util {\n+\n+const string kTmpInfix = \".doristmp\";\n+\n+string join_path_segments(const string& a, const string& b) {\n+    CHECK(!a.empty()) << \"empty first component: \" << a;\n+    CHECK(!b.empty() && b[0] != '/')\n+            << \"second path component must be non-empty and relative: \"\n+            << b;\n+    if (a.back() == '/') {\n+        return a + b;\n+    } else {\n+        return a + \"/\" + b;\n+    }\n+}\n+\n+vector<string> join_path_segments_v(const vector<string>& v, const string& s) {\n+    vector<string> out;\n+    for (const string& path : v) {\n+        out.emplace_back(join_path_segments(path, s));\n+    }\n+    return out;\n+}\n+\n+vector<string> split_path(const string& path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42dadb44552491b9c3bcf9562c2ce4d108d302dc"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ff96e17f09b1c249d57a615bdca4619cb995e3d", "author": {"user": {"login": "lingbin", "name": "LingBin"}}, "url": "https://github.com/apache/incubator-doris/commit/9ff96e17f09b1c249d57a615bdca4619cb995e3d", "committedDate": "2020-01-17T03:36:56Z", "message": "Add a test case for split_path()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Njc5NjUz", "url": "https://github.com/apache/incubator-doris/pull/2747#pullrequestreview-344679653", "createdAt": "2020-01-17T16:04:48Z", "commit": {"oid": "9ff96e17f09b1c249d57a615bdca4619cb995e3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3939, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}