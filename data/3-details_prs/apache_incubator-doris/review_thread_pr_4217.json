{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MDI3MzQ1", "number": 4217, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzo0NTowNVrOET62dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzo1MDowNlrOET65JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzIyNjEzOnYy", "diffSide": "RIGHT", "path": "be/src/common/config.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzo0NTowNVrOG57FAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxMDoxNDozMFrOG6dGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4OTk1NA==", "bodyText": "a stream load can process 10G by default?", "url": "https://github.com/apache/incubator-doris/pull/4217#discussion_r463389954", "createdAt": "2020-07-31T03:45:05Z", "author": {"login": "wuyunfeng"}, "path": "be/src/common/config.h", "diffHunk": "@@ -303,11 +303,14 @@ namespace config {\n     CONF_Int64(load_data_reserve_hours, \"4\");\n     // log error log will be removed after this time\n     CONF_mInt64(load_error_log_reserve_hours, \"48\");\n-    // Deprecated, use streaming_load_max_mb instead\n-    // CONF_Int64(mini_load_max_mb, \"2048\");\n     CONF_Int32(number_tablet_writer_threads, \"16\");\n \n+    // The maximum amount of data that can be processed by a stream load", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74d170985d55940cfdd32fb3a68727993406bf4e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0NzM4MQ==", "bodyText": "Actually, this default value is too big for a stream load.\nBut I am not going to modify this to avoid some user troubles.", "url": "https://github.com/apache/incubator-doris/pull/4217#discussion_r463947381", "createdAt": "2020-08-01T10:14:30Z", "author": {"login": "morningman"}, "path": "be/src/common/config.h", "diffHunk": "@@ -303,11 +303,14 @@ namespace config {\n     CONF_Int64(load_data_reserve_hours, \"4\");\n     // log error log will be removed after this time\n     CONF_mInt64(load_error_log_reserve_hours, \"48\");\n-    // Deprecated, use streaming_load_max_mb instead\n-    // CONF_Int64(mini_load_max_mb, \"2048\");\n     CONF_Int32(number_tablet_writer_threads, \"16\");\n \n+    // The maximum amount of data that can be processed by a stream load", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4OTk1NA=="}, "originalCommit": {"oid": "74d170985d55940cfdd32fb3a68727993406bf4e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzIzMzAxOnYy", "diffSide": "RIGHT", "path": "be/src/http/action/stream_load.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzo1MDowNlrOG57JBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQwNzoyNDo1OVrOG6i9bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MDk4Mg==", "bodyText": "the size of this batch exceed the max size of json type data\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ss << \"body exceed max size of json format: \" << ctx->body_bytes << \", limit: \" << max_body_bytes;\n          \n          \n            \n                            ss << \"the size of this batch exceed the max size [\" << max_body_bytes << \"]  of json type data \" << \" data [ \" << ctx->body_bytes << \" ] \"\n          \n      \n    \n    \n  \n\nAnd I suggest you should truncate the logged body_bytes such as just show 1024 byte", "url": "https://github.com/apache/incubator-doris/pull/4217#discussion_r463390982", "createdAt": "2020-07-31T03:50:06Z", "author": {"login": "wuyunfeng"}, "path": "be/src/http/action/stream_load.cpp", "diffHunk": "@@ -234,11 +234,19 @@ Status StreamLoadAction::_on_header(HttpRequest* http_req, StreamLoadContext* ct\n     } else {\n         ctx->format = parse_format(http_req->header(HTTP_FORMAT_KEY));\n         if (ctx->format == TFileFormatType::FORMAT_UNKNOWN) {\n-            LOG(WARNING) << \"unknown data format.\" << ctx->brief();\n             std::stringstream ss;\n             ss << \"unknown data format, format=\" << http_req->header(HTTP_FORMAT_KEY);\n             return Status::InternalError(ss.str());\n         }\n+\n+        size_t max_body_bytes = config::streaming_load_max_batch_size_mb * 1024 * 1024;\n+        if (ctx->format == TFileFormatType::FORMAT_JSON) {\n+            if (ctx->body_bytes > max_body_bytes) {\n+                std::stringstream ss;\n+                ss << \"body exceed max size of json format: \" << ctx->body_bytes << \", limit: \" << max_body_bytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74d170985d55940cfdd32fb3a68727993406bf4e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA0MzM3Mg==", "bodyText": "OK", "url": "https://github.com/apache/incubator-doris/pull/4217#discussion_r464043372", "createdAt": "2020-08-02T07:24:59Z", "author": {"login": "morningman"}, "path": "be/src/http/action/stream_load.cpp", "diffHunk": "@@ -234,11 +234,19 @@ Status StreamLoadAction::_on_header(HttpRequest* http_req, StreamLoadContext* ct\n     } else {\n         ctx->format = parse_format(http_req->header(HTTP_FORMAT_KEY));\n         if (ctx->format == TFileFormatType::FORMAT_UNKNOWN) {\n-            LOG(WARNING) << \"unknown data format.\" << ctx->brief();\n             std::stringstream ss;\n             ss << \"unknown data format, format=\" << http_req->header(HTTP_FORMAT_KEY);\n             return Status::InternalError(ss.str());\n         }\n+\n+        size_t max_body_bytes = config::streaming_load_max_batch_size_mb * 1024 * 1024;\n+        if (ctx->format == TFileFormatType::FORMAT_JSON) {\n+            if (ctx->body_bytes > max_body_bytes) {\n+                std::stringstream ss;\n+                ss << \"body exceed max size of json format: \" << ctx->body_bytes << \", limit: \" << max_body_bytes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM5MDk4Mg=="}, "originalCommit": {"oid": "74d170985d55940cfdd32fb3a68727993406bf4e"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1261, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}