{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5OTU1ODI4", "number": 2691, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDozNzo1MFrODWj6XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDo1NDowMVrODWz94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTgzNjQ0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDozNzo1MFrOFbYzKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzoxODozMlrOFbp-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjE4Nw==", "bodyText": "give comment for the usage of these two lock", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364262187", "createdAt": "2020-01-08T14:37:50Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -152,8 +268,13 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     bool _is_pending;    // rowset is pending iff it's not in visible state\n     bool _is_cumulative; // rowset is cumulative iff it's visible and start version < end version\n \n-    DorisCallOnce<OLAPStatus> _load_once;\n+    SpinLock _lock;\n+    Mutex _load_lock;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0MzcyMQ==", "bodyText": "done", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364543721", "createdAt": "2020-01-09T03:18:32Z", "author": {"login": "kangpinghuang"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -152,8 +268,13 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     bool _is_pending;    // rowset is pending iff it's not in visible state\n     bool _is_cumulative; // rowset is cumulative iff it's visible and start version < end version\n \n-    DorisCallOnce<OLAPStatus> _load_once;\n+    SpinLock _lock;\n+    Mutex _load_lock;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjE4Nw=="}, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTgzODQ3OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDozODoyN1rOFbY0Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDozODoyN1rOFbY0Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2MjQ4Nw==", "bodyText": "should be given a default value", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364262487", "createdAt": "2020-01-08T14:38:27Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -152,8 +268,13 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     bool _is_pending;    // rowset is pending iff it's not in visible state\n     bool _is_cumulative; // rowset is cumulative iff it's visible and start version < end version\n \n-    DorisCallOnce<OLAPStatus> _load_once;\n+    SpinLock _lock;\n+    Mutex _load_lock;\n     bool _need_delete_file = false;\n+    // variable to indicate how many rowset readers owned this rowset\n+    std::atomic<uint64_t> _refs_by_reader;\n+    // rowset state machine\n+    RowsetStateMachine _rowset_state_machine;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg1MDI2OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0MTo0M1rOFbY7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0MTo0M1rOFbY7Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDE5NA==", "bodyText": "better to call this out of lock block", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364264194", "createdAt": "2020-01-08T14:41:43Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {\n+            return;\n+        }\n+        OLAPStatus st = OLAP_SUCCESS;\n+        {\n+            std::lock_guard<SpinLock> l(_lock);\n+            old_state = _rowset_state_machine.rowset_state();\n+            if (old_state == ROWSET_UNLOADED) {\n+                return;\n+            }\n+            uint64_t current_refs = _refs_by_reader;\n+            st = _rowset_state_machine.on_close(current_refs);\n+            if (current_refs == 0) {\n+                do_close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg1NTA0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0MzowM1rOFbY94Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0MzowM1rOFbY94Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDkyOQ==", "bodyText": "seems no usage, just leave a DCHECK(state == UNLOADED)", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364264929", "createdAt": "2020-01-08T14:43:03Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -127,6 +214,30 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n         return left->end_version() < right->end_version();\n     }\n \n+    // this function is called by reader to increase reference of rowset\n+    void aquire() {\n+        ++_refs_by_reader;\n+    }\n+\n+    void release() {\n+        // if the refs by reader is 0 and the rowset is closed, should release the resouce\n+        uint64_t current_refs = --_refs_by_reader;\n+        if (current_refs == 0 && _rowset_state_machine.rowset_state() == ROWSET_UNLOADING) {\n+            auto st = _rowset_state_machine.on_close(current_refs);\n+            if (st != OLAP_SUCCESS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg2MTQ0OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0NDo0OFrOFbZBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzoyODo1NVrOFbqFuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NTg3Nw==", "bodyText": "When the state is unloading, seems OK to return", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364265877", "createdAt": "2020-01-08T14:44:48Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NTQ2NQ==", "bodyText": "yes, u are right.", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364545465", "createdAt": "2020-01-09T03:28:55Z", "author": {"login": "kangpinghuang"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NTg3Nw=="}, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg2MzcxOnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0NToyOVrOFbZDDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0NToyOVrOFbZDDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NjI1NQ==", "bodyText": "UNLOADING", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364266255", "createdAt": "2020-01-08T14:45:29Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.h", "diffHunk": "@@ -95,6 +151,37 @@ class Rowset : public std::enable_shared_from_this<Rowset> {\n     // TODO should we rename the method to remove_files() to be more specific?\n     virtual OLAPStatus remove() = 0;\n \n+    // close to clear the resource owned by rowset\n+    // including: open files, indexes and so on\n+    // NOTICE: can not call this function in multithreads\n+    void close() {\n+        RowsetState old_state = _rowset_state_machine.rowset_state();\n+        if (old_state == ROWSET_UNLOADED) {\n+            return;\n+        }\n+        OLAPStatus st = OLAP_SUCCESS;\n+        {\n+            std::lock_guard<SpinLock> l(_lock);\n+            old_state = _rowset_state_machine.rowset_state();\n+            if (old_state == ROWSET_UNLOADED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg3MTk5OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/rowset.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0Nzo0NFrOFbZH7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzoyOToxMFrOFbqF4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NzUwMw==", "bodyText": "Is this lock needed?", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364267503", "createdAt": "2020-01-08T14:47:44Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/rowset.cpp", "diffHunk": "@@ -36,7 +37,34 @@ Rowset::Rowset(const TabletSchema *schema,\n }\n \n OLAPStatus Rowset::load(bool use_cache) {\n-    return _load_once.call([this, use_cache] { return do_load_once(use_cache); });\n+    // if the state is ROWSET_UNLOADING it means close() is called\n+    // and the rowset is already loaded, and the resource is not closed yet.\n+    if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+        return OLAP_SUCCESS;\n+    }\n+    std::string load_log = \"\";\n+    {\n+        MutexLock load_lock(&_load_lock);\n+        if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+            return OLAP_SUCCESS;\n+        }\n+        RETURN_NOT_OK(_rowset_state_machine.on_load());\n+        RETURN_NOT_OK(do_load(use_cache));\n+        std::stringstream ss;\n+        ss << \"rowset is loaded. rowset version:\" << start_version() << \"-\" << end_version()\n+            << \", state from ROWSET_UNLOADED to ROWSET_LOADED. tabletid:\"\n+            << _rowset_meta->tablet_id();\n+        load_log = ss.str();\n+    }\n+    if (load_log != \"\") {\n+        LOG(INFO) << load_log;\n+    }\n+    return OLAP_SUCCESS;\n+}\n+\n+OLAPStatus Rowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    std::lock_guard<SpinLock> l(_lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0NTUwNw==", "bodyText": "useless", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364545507", "createdAt": "2020-01-09T03:29:10Z", "author": {"login": "kangpinghuang"}, "path": "be/src/olap/rowset/rowset.cpp", "diffHunk": "@@ -36,7 +37,34 @@ Rowset::Rowset(const TabletSchema *schema,\n }\n \n OLAPStatus Rowset::load(bool use_cache) {\n-    return _load_once.call([this, use_cache] { return do_load_once(use_cache); });\n+    // if the state is ROWSET_UNLOADING it means close() is called\n+    // and the rowset is already loaded, and the resource is not closed yet.\n+    if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+        return OLAP_SUCCESS;\n+    }\n+    std::string load_log = \"\";\n+    {\n+        MutexLock load_lock(&_load_lock);\n+        if (_rowset_state_machine.rowset_state() != ROWSET_UNLOADED) {\n+            return OLAP_SUCCESS;\n+        }\n+        RETURN_NOT_OK(_rowset_state_machine.on_load());\n+        RETURN_NOT_OK(do_load(use_cache));\n+        std::stringstream ss;\n+        ss << \"rowset is loaded. rowset version:\" << start_version() << \"-\" << end_version()\n+            << \", state from ROWSET_UNLOADED to ROWSET_LOADED. tabletid:\"\n+            << _rowset_meta->tablet_id();\n+        load_log = ss.str();\n+    }\n+    if (load_log != \"\") {\n+        LOG(INFO) << load_log;\n+    }\n+    return OLAP_SUCCESS;\n+}\n+\n+OLAPStatus Rowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    std::lock_guard<SpinLock> l(_lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NzUwMw=="}, "originalCommit": {"oid": "3661b6f129bf86b750b1248bafec944c9608f935"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjQ2NjkxOnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/alpha_rowset.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDo1NDowMVrOFbyCLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMTowNTo0MFrOFbyVpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3NTYyOA==", "bodyText": "why lock? I think you should call load to make sure rowset is loaded?", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364675628", "createdAt": "2020-01-09T10:54:01Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -51,7 +51,8 @@ OLAPStatus AlphaRowset::do_load(bool use_cache) {\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus AlphaRowset::do_create_reader(std::shared_ptr<RowsetReader>* result) {\n+OLAPStatus AlphaRowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    MutexLock release_lock(&_lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e7cd47c84e72ae2bdbbe6f4a5137af65c2b86fa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MDYxMg==", "bodyText": "yes, there should be no lock here, I will remove it.\nload is called in init()", "url": "https://github.com/apache/incubator-doris/pull/2691#discussion_r364680612", "createdAt": "2020-01-09T11:05:40Z", "author": {"login": "kangpinghuang"}, "path": "be/src/olap/rowset/alpha_rowset.cpp", "diffHunk": "@@ -51,7 +51,8 @@ OLAPStatus AlphaRowset::do_load(bool use_cache) {\n     return OLAP_SUCCESS;\n }\n \n-OLAPStatus AlphaRowset::do_create_reader(std::shared_ptr<RowsetReader>* result) {\n+OLAPStatus AlphaRowset::create_reader(std::shared_ptr<RowsetReader>* result) {\n+    MutexLock release_lock(&_lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY3NTYyOA=="}, "originalCommit": {"oid": "8e7cd47c84e72ae2bdbbe6f4a5137af65c2b86fa"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2301, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}