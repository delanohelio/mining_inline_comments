{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NTIxNTg4", "number": 4199, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoxNToyNlrOESqrZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjozNzoxM1rOESynLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDA5MDYwOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoxNToyNlrOG3-GSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoxMzoxMVrOG4GCfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MjI4Mw==", "bodyText": "plz import the jar package according following sequence\uff1a\n4=javax\n3=java\n2=org\n1=com\n0=org.apache.doris", "url": "https://github.com/apache/incubator-doris/pull/4199#discussion_r461342283", "createdAt": "2020-07-28T06:15:26Z", "author": {"login": "wutiangan"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -30,11 +34,6 @@\n import org.apache.doris.common.FeNameFormat;\n import org.apache.doris.common.UserException;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d94f36748c47a529b6a3c9e21f0df2e125d22ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1MzM4OQ==", "bodyText": "Hi, you could update the checkstyle.xml.", "url": "https://github.com/apache/incubator-doris/pull/4199#discussion_r461353389", "createdAt": "2020-07-28T06:43:43Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -30,11 +34,6 @@\n import org.apache.doris.common.FeNameFormat;\n import org.apache.doris.common.UserException;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MjI4Mw=="}, "originalCommit": {"oid": "4d94f36748c47a529b6a3c9e21f0df2e125d22ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3MjM4Mg==", "bodyText": "Changed", "url": "https://github.com/apache/incubator-doris/pull/4199#discussion_r461472382", "createdAt": "2020-07-28T10:13:11Z", "author": {"login": "EmmyMiao87"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -30,11 +34,6 @@\n import org.apache.doris.common.FeNameFormat;\n import org.apache.doris.common.UserException;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0MjI4Mw=="}, "originalCommit": {"oid": "4d94f36748c47a529b6a3c9e21f0df2e125d22ab"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTM5MDUyOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjozNzoxM1rOG4KgLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjozNzoxM1rOG4KgLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0NTUxNg==", "bodyText": "Sum float result type should be double.", "url": "https://github.com/apache/incubator-doris/pull/4199#discussion_r461545516", "createdAt": "2020-07-28T12:37:13Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -353,11 +353,21 @@ public MVColumnItem buildMVColumnItem(FunctionCallExpr functionCallExpr) throws\n         Type type;\n         switch (functionName.toLowerCase()) {\n             case \"sum\":\n+                mvColumnName = baseColumnName;\n+                mvAggregateType = AggregateType.valueOf(functionName.toUpperCase());\n+                PrimitiveType baseColumnType = baseColumnRef.getType().getPrimitiveType();\n+                if (baseColumnType == PrimitiveType.TINYINT || baseColumnType == PrimitiveType.SMALLINT\n+                        || baseColumnType == PrimitiveType.INT) {\n+                    type = Type.BIGINT;\n+                } else {\n+                    type = Type.fromPrimitiveType(baseColumnRef.getType().getPrimitiveType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f107770f4a4e7f5c1205cbbc43bb843cd78b4cf1"}, "originalPosition": 151}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1252, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}