{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NjQwNTY2", "number": 5133, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToxODozMVrOFJGqOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozODo1MFrOFK4NKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MDkwNjE3OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToxODozMVrOILYWHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToxODozMVrOILYWHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNDEyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                buckendIdToBucketCountMap.put(backendIdRef.getRef(), buckendIdToBucketCountMap.get(backendIdRef.getRef())+1);\n          \n          \n            \n                                buckendIdToBucketCountMap.put(backendIdRef.getRef(), buckendIdToBucketCountMap.get(backendIdRef.getRef()) + 1);", "url": "https://github.com/apache/incubator-doris/pull/5133#discussion_r548804127", "createdAt": "2020-12-25T05:18:31Z", "author": {"login": "caiconghui"}, "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -1560,14 +1560,20 @@ private void getExecHostPortForFragmentIDAndBucketSeq(TScanRangeLocations seqLoc\n                     break;\n                 }\n             }\n-\n-            buckendIdToBucketCountMap.put(buckendId, buckendIdToBucketCountMap.get(buckendId) + 1);\n             Reference<Long> backendIdRef = new Reference<Long>();\n             TNetworkAddress execHostPort = SimpleScheduler.getHost(buckendId, seqLocation.locations, idToBackend, backendIdRef);\n             if (execHostPort == null) {\n                 throw new UserException(\"there is no scanNode Backend\");\n             }\n-\n+            if (backendIdRef.getRef() != buckendId) {\n+                if (!buckendIdToBucketCountMap.containsKey(backendIdRef.getRef())) {\n+                    buckendIdToBucketCountMap.put(backendIdRef.getRef(), 1);\n+                } else {\n+                    buckendIdToBucketCountMap.put(backendIdRef.getRef(), buckendIdToBucketCountMap.get(backendIdRef.getRef())+1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a812808973853d14516eca79a8ffb45eaf1e8c1b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTUwOTUyOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMjozODo1MFrOINwRBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNjoxNTozOFrOIOLTpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5MzE5MQ==", "bodyText": "This logic isn't very simple. would better add comments here for each if-else branch meaning", "url": "https://github.com/apache/incubator-doris/pull/5133#discussion_r551293191", "createdAt": "2021-01-04T12:38:50Z", "author": {"login": "kangkaisen"}, "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -1560,14 +1560,20 @@ private void getExecHostPortForFragmentIDAndBucketSeq(TScanRangeLocations seqLoc\n                     break;\n                 }\n             }\n-\n-            buckendIdToBucketCountMap.put(buckendId, buckendIdToBucketCountMap.get(buckendId) + 1);\n             Reference<Long> backendIdRef = new Reference<Long>();\n             TNetworkAddress execHostPort = SimpleScheduler.getHost(buckendId, seqLocation.locations, idToBackend, backendIdRef);\n             if (execHostPort == null) {\n                 throw new UserException(\"there is no scanNode Backend\");\n             }\n-\n+            if (backendIdRef.getRef() != buckendId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c3421186966ef0335c6cbf835cc83f72370cea"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTczNjIyOA==", "bodyText": "Thanks for your code review. The comments has been added.", "url": "https://github.com/apache/incubator-doris/pull/5133#discussion_r551736228", "createdAt": "2021-01-05T06:15:38Z", "author": {"login": "xinghuayu007"}, "path": "fe/fe-core/src/main/java/org/apache/doris/qe/Coordinator.java", "diffHunk": "@@ -1560,14 +1560,20 @@ private void getExecHostPortForFragmentIDAndBucketSeq(TScanRangeLocations seqLoc\n                     break;\n                 }\n             }\n-\n-            buckendIdToBucketCountMap.put(buckendId, buckendIdToBucketCountMap.get(buckendId) + 1);\n             Reference<Long> backendIdRef = new Reference<Long>();\n             TNetworkAddress execHostPort = SimpleScheduler.getHost(buckendId, seqLocation.locations, idToBackend, backendIdRef);\n             if (execHostPort == null) {\n                 throw new UserException(\"there is no scanNode Backend\");\n             }\n-\n+            if (backendIdRef.getRef() != buckendId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5MzE5MQ=="}, "originalCommit": {"oid": "95c3421186966ef0335c6cbf835cc83f72370cea"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 847, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}