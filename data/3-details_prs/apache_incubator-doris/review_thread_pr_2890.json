{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTkyNTI3", "number": 2890, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNToyMjoxM1rODfOCYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNToyMjoxM1rODfOCYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDYyNDM1OnYy", "diffSide": "RIGHT", "path": "be/src/olap/rowset/segment_v2/column_reader.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNToyMjoxM1rOFoyz9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzo0ODowOFrOFpGPEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMxOTg2Mg==", "bodyText": "It is better to use an argument for this function.\nBesides the configuration, some operation don't need cache either, such as compaction.\nSo the good way is that let the caller judge whether the cache is used.", "url": "https://github.com/apache/incubator-doris/pull/2890#discussion_r378319862", "createdAt": "2020-02-12T15:22:13Z", "author": {"login": "imay"}, "path": "be/src/olap/rowset/segment_v2/column_reader.cpp", "diffHunk": "@@ -97,7 +97,7 @@ Status ColumnReader::read_page(RandomAccessFile* file, const PagePointer& pp,\n     auto cache = StoragePageCache::instance();\n     PageCacheHandle cache_handle;\n     StoragePageCache::CacheKey cache_key(file->file_name(), pp.offset);\n-    if (cache->lookup(cache_key, &cache_handle)) {\n+    if (!config::disable_storage_page_cache && cache->lookup(cache_key, &cache_handle)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3c4eafe44e6ccb07d9f02b423c0242de8c4df0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzODA5Ng==", "bodyText": "OK, I agree with you.", "url": "https://github.com/apache/incubator-doris/pull/2890#discussion_r378638096", "createdAt": "2020-02-13T03:48:08Z", "author": {"login": "kangkaisen"}, "path": "be/src/olap/rowset/segment_v2/column_reader.cpp", "diffHunk": "@@ -97,7 +97,7 @@ Status ColumnReader::read_page(RandomAccessFile* file, const PagePointer& pp,\n     auto cache = StoragePageCache::instance();\n     PageCacheHandle cache_handle;\n     StoragePageCache::CacheKey cache_key(file->file_name(), pp.offset);\n-    if (cache->lookup(cache_key, &cache_handle)) {\n+    if (!config::disable_storage_page_cache && cache->lookup(cache_key, &cache_handle)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMxOTg2Mg=="}, "originalCommit": {"oid": "6d3c4eafe44e6ccb07d9f02b423c0242de8c4df0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2232, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}