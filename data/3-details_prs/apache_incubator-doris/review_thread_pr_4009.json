{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTQ0MDA4", "number": 4009, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwMToxODozN1rOELWEsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwMToxODozN1rOELWEsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzMxNDQyOnYy", "diffSide": "RIGHT", "path": "be/src/olap/schema_change.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwMToxODozN1rOGs5IoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwMTo0MjowMFrOGs5OWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyNjYyNA==", "bodyText": "is VARCHAR to DOUBLE and DATETIME support?", "url": "https://github.com/apache/incubator-doris/pull/4009#discussion_r449726624", "createdAt": "2020-07-04T01:18:37Z", "author": {"login": "morningman"}, "path": "be/src/olap/schema_change.cpp", "diffHunk": "@@ -194,6 +194,64 @@ ColumnMapping* RowBlockChanger::get_mutable_column_mapping(size_t column_index)\n         break; \\\n     }\n \n+struct ConvertTypeMapHash {\n+    size_t operator()(const std::pair<FieldType, FieldType>& pair) const {\n+        return (pair.first + 31) ^ pair.second;\n+    }\n+};\n+\n+class ConvertTypeResolver {\n+DECLARE_SINGLETON(ConvertTypeResolver);\n+public:\n+    bool get_convert_type_info(const FieldType from_type, const FieldType to_type) const {\n+        return _convert_type_set.find(std::make_pair(from_type, to_type)) != _convert_type_set.end();\n+    }\n+\n+    template<FieldType from_type, FieldType to_type>\n+    void add_convert_type_mapping() {\n+        _convert_type_set.emplace(std::make_pair(from_type, to_type));\n+    }\n+\n+private:\n+    typedef std::pair<FieldType, FieldType> convert_type_pair;\n+    std::unordered_set<convert_type_pair, ConvertTypeMapHash> _convert_type_set;\n+\n+    DISALLOW_COPY_AND_ASSIGN(ConvertTypeResolver);\n+};\n+\n+ConvertTypeResolver::ConvertTypeResolver() {\n+    // supported type convert should annotate in doc:\n+    // http://doris.incubator.apache.org/master/zh-CN/sql-reference/sql-statements/Data%20Definition/ALTER%20TABLE.html#description\n+    // from varchar type\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_TINYINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_SMALLINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_INT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_BIGINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_LARGEINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_FLOAT>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "883bf90f88a5698091ea5d29f94bddbe6abd1050"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyODA4OA==", "bodyText": "VAHRCHAR->DOUBLE is supported add I added it. VARCHAR->DATETIME maybe supported in next PR.", "url": "https://github.com/apache/incubator-doris/pull/4009#discussion_r449728088", "createdAt": "2020-07-04T01:42:00Z", "author": {"login": "WingsGo"}, "path": "be/src/olap/schema_change.cpp", "diffHunk": "@@ -194,6 +194,64 @@ ColumnMapping* RowBlockChanger::get_mutable_column_mapping(size_t column_index)\n         break; \\\n     }\n \n+struct ConvertTypeMapHash {\n+    size_t operator()(const std::pair<FieldType, FieldType>& pair) const {\n+        return (pair.first + 31) ^ pair.second;\n+    }\n+};\n+\n+class ConvertTypeResolver {\n+DECLARE_SINGLETON(ConvertTypeResolver);\n+public:\n+    bool get_convert_type_info(const FieldType from_type, const FieldType to_type) const {\n+        return _convert_type_set.find(std::make_pair(from_type, to_type)) != _convert_type_set.end();\n+    }\n+\n+    template<FieldType from_type, FieldType to_type>\n+    void add_convert_type_mapping() {\n+        _convert_type_set.emplace(std::make_pair(from_type, to_type));\n+    }\n+\n+private:\n+    typedef std::pair<FieldType, FieldType> convert_type_pair;\n+    std::unordered_set<convert_type_pair, ConvertTypeMapHash> _convert_type_set;\n+\n+    DISALLOW_COPY_AND_ASSIGN(ConvertTypeResolver);\n+};\n+\n+ConvertTypeResolver::ConvertTypeResolver() {\n+    // supported type convert should annotate in doc:\n+    // http://doris.incubator.apache.org/master/zh-CN/sql-reference/sql-statements/Data%20Definition/ALTER%20TABLE.html#description\n+    // from varchar type\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_TINYINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_SMALLINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_INT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_BIGINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_LARGEINT>();\n+    add_convert_type_mapping<OLAP_FIELD_TYPE_VARCHAR, OLAP_FIELD_TYPE_FLOAT>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyNjYyNA=="}, "originalCommit": {"oid": "883bf90f88a5698091ea5d29f94bddbe6abd1050"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1360, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}