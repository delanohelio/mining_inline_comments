{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMjA2NTk4", "number": 4256, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjoyNjo0MlrOEWo1ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyMzowN1rOEddcsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTczMTYyOnYy", "diffSide": "RIGHT", "path": "be/src/olap/tablet_schema.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjoyNjo0MlrOG9_5vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNDo1M1rOG-HmGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2MzI5NA==", "bodyText": "how about checking sequence_col_idx != -1 instead of _has_sequence_col", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467663294", "createdAt": "2020-08-10T02:26:42Z", "author": {"login": "yangzhg"}, "path": "be/src/olap/tablet_schema.h", "diffHunk": "@@ -111,6 +111,8 @@ class TabletSchema {\n     inline double bloom_filter_fpp() const { return _bf_fpp; }\n     inline bool is_in_memory() const { return _is_in_memory; }\n     inline void set_is_in_memory(bool is_in_memory) { _is_in_memory = is_in_memory; }\n+    inline bool has_sequence_col() const { return  _has_sequence_col; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4OTMzNg==", "bodyText": "modified", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467789336", "createdAt": "2020-08-10T09:34:53Z", "author": {"login": "Youngwb"}, "path": "be/src/olap/tablet_schema.h", "diffHunk": "@@ -111,6 +111,8 @@ class TabletSchema {\n     inline double bloom_filter_fpp() const { return _bf_fpp; }\n     inline bool is_in_memory() const { return _is_in_memory; }\n     inline void set_is_in_memory(bool is_in_memory) { _is_in_memory = is_in_memory; }\n+    inline bool has_sequence_col() const { return  _has_sequence_col; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2MzI5NA=="}, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTc5MzY2OnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzoxNzowMlrOG-AZlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMzo1N1rOG-HkRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MTQ0NA==", "bodyText": "why do not check if sequenceColName ia alread exist in rollupSchema", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467671444", "createdAt": "2020-08-10T03:17:02Z", "author": {"login": "yangzhg"}, "path": "fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "diffHunk": "@@ -537,6 +538,13 @@ private RollupJobV2 createMaterializedViewJob(String mvName, String baseIndexNam\n                     }\n                 }\n             }\n+            if (KeysType.UNIQUE_KEYS == keysType && olapTable.hasSequence()) {\n+                if (meetValue) {\n+                    // add the sequence column\n+                    rollupSchema.add(keysNumOfRollup, new Column(olapTable.sequenceColName, olapTable.getSequenceType(),\n+                            false, AggregateType.MAX, null, \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4ODg2OQ==", "bodyText": "add check Done", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467788869", "createdAt": "2020-08-10T09:33:57Z", "author": {"login": "Youngwb"}, "path": "fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java", "diffHunk": "@@ -537,6 +538,13 @@ private RollupJobV2 createMaterializedViewJob(String mvName, String baseIndexNam\n                     }\n                 }\n             }\n+            if (KeysType.UNIQUE_KEYS == keysType && olapTable.hasSequence()) {\n+                if (meetValue) {\n+                    // add the sequence column\n+                    rollupSchema.add(keysNumOfRollup, new Column(olapTable.sequenceColName, olapTable.getSequenceType(),\n+                            false, AggregateType.MAX, null, \"\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MTQ0NA=="}, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjQ1NTExOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/common/FeMetaVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODo1MDoyOFrOG-GOWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozMDo0OVrOG-HeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2Njg3Mg==", "bodyText": "not using \uff1f", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467766872", "createdAt": "2020-08-10T08:50:28Z", "author": {"login": "yangzhg"}, "path": "fe/fe-core/src/main/java/org/apache/doris/common/FeMetaVersion.java", "diffHunk": "@@ -190,6 +190,8 @@\n     // force drop db, force drop table, force drop partition\n     // make force drop operation do not recycle meta\n     public static final int VERSION_89 = 89;\n+    // sequence column for unique_keys\n+    public static final int VERSION_90 = 90;\n     // note: when increment meta version, should assign the latest version to VERSION_CURRENT\n-    public static final int VERSION_CURRENT = VERSION_89;\n+    public static final int VERSION_CURRENT = VERSION_90;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc4NzMwOQ==", "bodyText": "mistake, I have already correct it", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r467787309", "createdAt": "2020-08-10T09:30:49Z", "author": {"login": "Youngwb"}, "path": "fe/fe-core/src/main/java/org/apache/doris/common/FeMetaVersion.java", "diffHunk": "@@ -190,6 +190,8 @@\n     // force drop db, force drop table, force drop partition\n     // make force drop operation do not recycle meta\n     public static final int VERSION_89 = 89;\n+    // sequence column for unique_keys\n+    public static final int VERSION_90 = 90;\n     // note: when increment meta version, should assign the latest version to VERSION_CURRENT\n-    public static final int VERSION_CURRENT = VERSION_89;\n+    public static final int VERSION_CURRENT = VERSION_90;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2Njg3Mg=="}, "originalCommit": {"oid": "3f083204347daf3d8024d4a571c2240354f2d01b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzIwNDkyOnYy", "diffSide": "RIGHT", "path": "be/test/olap/test_data/header.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMjo0NDo0MFrOHInoMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMjo1MTo0NlrOHInu-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc5OTkyMQ==", "bodyText": "indent\uff1f", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r478799921", "createdAt": "2020-08-28T02:44:40Z", "author": {"login": "yangzhg"}, "path": "be/test/olap/test_data/header.txt", "diffHunk": "@@ -50,7 +50,8 @@\n         \"compress_kind\": \"COMPRESS_LZ4\",\n         \"next_column_unique_id\": 3,\n         \"is_in_memory\": false,\n-        \"delete_sign_idx\": -1\n+        \"delete_sign_idx\": -1,\n+\t    \"has_sequence_col\": false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f278fd9f73a1eeab0cde6b3577ab8ab9eff492a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwMTY1Nw==", "bodyText": "fix", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r478801657", "createdAt": "2020-08-28T02:51:46Z", "author": {"login": "Youngwb"}, "path": "be/test/olap/test_data/header.txt", "diffHunk": "@@ -50,7 +50,8 @@\n         \"compress_kind\": \"COMPRESS_LZ4\",\n         \"next_column_unique_id\": 3,\n         \"is_in_memory\": false,\n-        \"delete_sign_idx\": -1\n+        \"delete_sign_idx\": -1,\n+\t    \"has_sequence_col\": false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc5OTkyMQ=="}, "originalCommit": {"oid": "7f278fd9f73a1eeab0cde6b3577ab8ab9eff492a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzI2NjQwOnYy", "diffSide": "RIGHT", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/OlapTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyMzowN1rOHIoLlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNzo0NDowOFrOHItj1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODk4MA==", "bodyText": "add AggregateType.MAX to unique table ??", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r478808980", "createdAt": "2020-08-28T03:23:07Z", "author": {"login": "yangzhg"}, "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -796,6 +801,43 @@ public void setBloomFilterInfo(Set<String> bfColumns, double bfFpp) {\n         this.bfFpp = bfFpp;\n     }\n \n+    public void setSequenceInfo(Type type) {\n+        this.hasSequenceCol = true;\n+        this.sequenceType = type;\n+\n+        // sequence column is value column with MAX aggregate type\n+        // this makes it easy to compare and update the sequence column\n+        Column sequenceCol = new Column(Column.SEQUENCE_COL, type, false, AggregateType.MAX, false, null, \"\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdaaccf62a07cff02801b7b17700bc7fbca8c7b3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg5NzExMA==", "bodyText": "I  have updated, sequence column use REPLACE", "url": "https://github.com/apache/incubator-doris/pull/4256#discussion_r478897110", "createdAt": "2020-08-28T07:44:08Z", "author": {"login": "Youngwb"}, "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/OlapTable.java", "diffHunk": "@@ -796,6 +801,43 @@ public void setBloomFilterInfo(Set<String> bfColumns, double bfFpp) {\n         this.bfFpp = bfFpp;\n     }\n \n+    public void setSequenceInfo(Type type) {\n+        this.hasSequenceCol = true;\n+        this.sequenceType = type;\n+\n+        // sequence column is value column with MAX aggregate type\n+        // this makes it easy to compare and update the sequence column\n+        Column sequenceCol = new Column(Column.SEQUENCE_COL, type, false, AggregateType.MAX, false, null, \"\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODk4MA=="}, "originalCommit": {"oid": "fdaaccf62a07cff02801b7b17700bc7fbca8c7b3"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1289, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}