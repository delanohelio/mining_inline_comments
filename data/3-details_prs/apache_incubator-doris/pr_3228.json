{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDc1MDUz", "number": 3228, "title": "Fix output results may  incorrect  when using intersect and except statements", "bodyText": "fix the bug desctibed in #3227\nadd class SetOperationNode and move common funtions from intersect and except to it", "createdAt": "2020-03-30T08:02:44Z", "url": "https://github.com/apache/incubator-doris/pull/3228", "merged": true, "mergeCommit": {"oid": "63cee94c5cfd8bf755b09c5847b746b2373805f8"}, "closed": true, "closedAt": "2020-04-01T12:58:44Z", "author": {"login": "yangzhg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSp4MGABqjMxNzczNzc3MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTXSMeAFqTM4NTU1NzkzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aab14fc622bbb3809178ff26a492a193140cc23f", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/aab14fc622bbb3809178ff26a492a193140cc23f", "committedDate": "2020-03-30T07:59:48Z", "message": "output results may  incorrect  when using intersect and except statements"}, "afterCommit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/e529249af6f0d929344bb887b2d127fab3a0c521", "committedDate": "2020-03-30T08:03:50Z", "message": "output results may  incorrect  when using intersect and except statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzc0NjUx", "url": "https://github.com/apache/incubator-doris/pull/3228#pullrequestreview-383774651", "createdAt": "2020-03-30T11:47:53Z", "commit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo0Nzo1M1rOF9l7Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo0Nzo1M1rOF9l7Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyODg2Mg==", "bodyText": "why does hashtable has the same value\uff1fWhen you create a hash table, will duplicate values are inserted into the hash table\uff1f", "url": "https://github.com/apache/incubator-doris/pull/3228#discussion_r400128862", "createdAt": "2020-03-30T11:47:53Z", "author": {"login": "wutiangan"}, "path": "be/src/exec/except_node.cpp", "diffHunk": "@@ -179,17 +137,21 @@ Status ExceptNode::get_next(RuntimeState* state, RowBatch* out_batch, bool* eos)\n     if (reached_limit()) {\n         return Status::OK();\n     }\n+    int64_t tuple_buf_size;\n+    uint8_t* tuple_buf;\n+    RETURN_IF_ERROR(\n+            out_batch->resize_and_allocate_tuple_buffer(state, &tuple_buf_size, &tuple_buf));\n     uint32_t previous_hash = -1;\n     TupleRow* previous_row = nullptr;\n     while (_hash_tbl_iterator.has_next()) {\n+        VLOG_ROW << \"find row: \"\n+                 << get_row_output_string(_hash_tbl_iterator.get_row(), child(0)->row_desc())\n+                 << \" matched: \" << _hash_tbl_iterator.matched();\n         if (!_hash_tbl_iterator.matched()) {\n             if (previous_hash != _hash_tbl_iterator.get_hash() ||\n                 !equals(previous_row, _hash_tbl_iterator.get_row())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTQyMTM5", "url": "https://github.com/apache/incubator-doris/pull/3228#pullrequestreview-383942139", "createdAt": "2020-03-30T14:58:08Z", "commit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDo1ODowOFrOF9t6kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDo1OTozNVrOF9t_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1OTcyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // build hash table and remvoe duplicate items\n          \n          \n            \n                    // build hash table and remove duplicate items", "url": "https://github.com/apache/incubator-doris/pull/3228#discussion_r400259728", "createdAt": "2020-03-30T14:58:08Z", "author": {"login": "morningman"}, "path": "be/src/exec/except_node.cpp", "diffHunk": "@@ -112,6 +63,8 @@ Status ExceptNode::open(RuntimeState* state) {\n         RETURN_IF_LIMIT_EXCEEDED(state, \" Except, while constructing the hash table.\");\n         // build hash table and remvoe duplicate items", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2MDg4Mg==", "bodyText": "As I know, this hash table will store all rows with same hash key.", "url": "https://github.com/apache/incubator-doris/pull/3228#discussion_r400260882", "createdAt": "2020-03-30T14:59:35Z", "author": {"login": "morningman"}, "path": "be/src/exec/except_node.cpp", "diffHunk": "@@ -179,17 +137,21 @@ Status ExceptNode::get_next(RuntimeState* state, RowBatch* out_batch, bool* eos)\n     if (reached_limit()) {\n         return Status::OK();\n     }\n+    int64_t tuple_buf_size;\n+    uint8_t* tuple_buf;\n+    RETURN_IF_ERROR(\n+            out_batch->resize_and_allocate_tuple_buffer(state, &tuple_buf_size, &tuple_buf));\n     uint32_t previous_hash = -1;\n     TupleRow* previous_row = nullptr;\n     while (_hash_tbl_iterator.has_next()) {\n+        VLOG_ROW << \"find row: \"\n+                 << get_row_output_string(_hash_tbl_iterator.get_row(), child(0)->row_desc())\n+                 << \" matched: \" << _hash_tbl_iterator.matched();\n         if (!_hash_tbl_iterator.matched()) {\n             if (previous_hash != _hash_tbl_iterator.get_hash() ||\n                 !equals(previous_row, _hash_tbl_iterator.get_row())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyODg2Mg=="}, "originalCommit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa4a51d1005e9291805fcb06eacb6a605906575e", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/aa4a51d1005e9291805fcb06eacb6a605906575e", "committedDate": "2020-04-01T01:40:00Z", "message": "output results may  incorrect  when using intersect and except statements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e529249af6f0d929344bb887b2d127fab3a0c521", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/e529249af6f0d929344bb887b2d127fab3a0c521", "committedDate": "2020-03-30T08:03:50Z", "message": "output results may  incorrect  when using intersect and except statements"}, "afterCommit": {"oid": "aa4a51d1005e9291805fcb06eacb6a605906575e", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/aa4a51d1005e9291805fcb06eacb6a605906575e", "committedDate": "2020-04-01T01:40:00Z", "message": "output results may  incorrect  when using intersect and except statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0b5571c6fb90f8de2449ac74a55fd5b4e0d25fb", "author": {"user": {"login": "yangzhg", "name": "Zhengguo Yang"}}, "url": "https://github.com/apache/incubator-doris/commit/b0b5571c6fb90f8de2449ac74a55fd5b4e0d25fb", "committedDate": "2020-04-01T02:45:43Z", "message": "remove deduplicted code from get next"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTU3OTM5", "url": "https://github.com/apache/incubator-doris/pull/3228#pullrequestreview-385557939", "createdAt": "2020-04-01T12:58:20Z", "commit": {"oid": "b0b5571c6fb90f8de2449ac74a55fd5b4e0d25fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}