{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTQ5MjU1", "number": 824, "title": "PARQUET-1920: Fix Parquet writer's memory check interval calculation", "bodyText": "Fix Parquet writer's memory check interval calculation and throw helpful message while dealing with too large column chunks.\nMake sure you have checked all steps below.\nJira\n\n My PR addresses PARQUET-1920.\n\nhttps://issues.apache.org/jira/browse/PARQUET-1920\n\n\n\nTests\n\n My PR does not necessarily needs any specific test as it is removing hard coded values in favor of configs. However, I can think of ways to test if insisted.", "createdAt": "2020-10-07T22:24:05Z", "url": "https://github.com/apache/parquet-mr/pull/824", "merged": true, "mergeCommit": {"oid": "0d09be68c289a56e9e547949a3d1ee6df10ef794"}, "closed": true, "closedAt": "2020-10-12T08:22:33Z", "author": {"login": "SinghAsDev"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQUZYhgH2gAyNDk5NTQ5MjU1OmY3YmNjNGE2NGZiYjRhMjNlNmY2YzViOTdkZDMxZjExZjE1YjRjMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQjLWhAFqTUwNDg5Njg1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f7bcc4a64fbb4a23e6f6c5b97dd31f11f15b4c05", "author": {"user": {"login": "SinghAsDev", "name": "Ashish Singh"}}, "url": "https://github.com/apache/parquet-mr/commit/f7bcc4a64fbb4a23e6f6c5b97dd31f11f15b4c05", "committedDate": "2020-10-07T22:05:51Z", "message": "Fix Parquet writer's memory check interval calculation, and throw helpful message while dealing with too large column chunks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODU0MDg3", "url": "https://github.com/apache/parquet-mr/pull/824#pullrequestreview-504854087", "createdAt": "2020-10-08T14:37:50Z", "commit": {"oid": "f7bcc4a64fbb4a23e6f6c5b97dd31f11f15b4c05"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOHeh2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOHeh2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3MzkyMQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE +\".\" +\n          \n          \n            \n                    \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n          \n          \n            \n                    \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n          \n          \n            \n                    \" You can try setting it to \" + (10000 / (size/ Integer.MAX_VALUE)) + \" or lower.\");\n          \n          \n            \n                  throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE + \".\" +\n          \n          \n            \n                    \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n          \n          \n            \n                    \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n          \n          \n            \n                    \" You can try setting it to \" + (10000 / (size / Integer.MAX_VALUE)) + \" or lower.\");", "url": "https://github.com/apache/parquet-mr/pull/824#discussion_r501773921", "createdAt": "2020-10-08T14:37:51Z", "author": {"login": "gszadovszky"}, "path": "parquet-common/src/main/java/org/apache/parquet/bytes/BytesInput.java", "diffHunk": "@@ -215,6 +215,13 @@ public static BytesInput copy(BytesInput bytesInput) throws IOException {\n    * @throws IOException if there is an exception reading\n    */\n   public byte[] toByteArray() throws IOException {\n+    long size = size();\n+    if (size > Integer.MAX_VALUE) {\n+      throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE +\".\" +\n+        \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n+        \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n+        \" You can try setting it to \" + (10000 / (size/ Integer.MAX_VALUE)) + \" or lower.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bcc4a64fbb4a23e6f6c5b97dd31f11f15b4c05"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4806f5df9f20f7b60c8ba6d25b15c38277bfe6db", "author": {"user": {"login": "SinghAsDev", "name": "Ashish Singh"}}, "url": "https://github.com/apache/parquet-mr/commit/4806f5df9f20f7b60c8ba6d25b15c38277bfe6db", "committedDate": "2020-10-08T14:56:04Z", "message": "Update parquet-common/src/main/java/org/apache/parquet/bytes/BytesInput.java\n\nCo-authored-by: Gabor Szadovszky <gabor@apache.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODk2ODUy", "url": "https://github.com/apache/parquet-mr/pull/824#pullrequestreview-504896852", "createdAt": "2020-10-08T15:19:07Z", "commit": {"oid": "4806f5df9f20f7b60c8ba6d25b15c38277bfe6db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2235, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}