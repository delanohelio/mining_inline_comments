{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDUxNjA1", "number": 800, "title": "PARQUET-1884: Encryption branch merge in master", "bodyText": "Merges encryption feature", "createdAt": "2020-07-13T05:55:29Z", "url": "https://github.com/apache/parquet-mr/pull/800", "merged": true, "mergeCommit": {"oid": "65b95fb72be8f5a8a193a6f7bc4560fdcd742fc7"}, "closed": true, "closedAt": "2020-07-29T07:52:55Z", "author": {"login": "ggershinsky"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5T7MYgH2gAyNDQ4MDUxNjA1OjQ1MTZlOTdiZTYxMzA5YWQ3Y2RhOTU4ZDE0ZDYwY2RjZDY2NTBkZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5mNGaAFqTQ1NzI3NjIxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4516e97be61309ad7cda958d14d60cdcd6650de1", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/4516e97be61309ad7cda958d14d60cdcd6650de1", "committedDate": "2020-07-28T10:32:37Z", "message": "PARQUET-1228: Format Structures encryption (#613)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f85a96280cfd98d5f3eb09f846f76ee1eb1634f5", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/f85a96280cfd98d5f3eb09f846f76ee1eb1634f5", "committedDate": "2020-07-28T10:32:37Z", "message": "PARQUET-1286: Crypto package (#614)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42dfc343807f16563b2265ccb4ada49a86d86dd7", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/42dfc343807f16563b2265ccb4ada49a86d86dd7", "committedDate": "2020-07-28T10:32:37Z", "message": "PARQUET-1818: Fix bloom/encryption collision in format-structures (#771)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71ad811a8ea7938869ea36eac3e2ee381efdd774", "author": {"user": {"login": "shangxinli", "name": "Xinli Shang"}}, "url": "https://github.com/apache/parquet-mr/commit/71ad811a8ea7938869ea36eac3e2ee381efdd774", "committedDate": "2020-07-28T10:32:37Z", "message": "PARQUET-1817: Crypto Properties Factory (#769)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b60f4a4880e1d6b20638eec3e20db06cb171bdc8", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/b60f4a4880e1d6b20638eec3e20db06cb171bdc8", "committedDate": "2020-07-28T10:41:17Z", "message": "PARQUET-1229: Parquet MR encryption (#776)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf7d7edacb8dc7c41903dca94d20ff0809235b9", "author": {"user": {"login": "andersonm-ibm", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/dcf7d7edacb8dc7c41903dca94d20ff0809235b9", "committedDate": "2020-07-28T10:41:17Z", "message": "PARQUET-1807: Encryption: Interop and Function test suite for Java version (#782)\n\nAdd a test for writing and reading parquet in a number of encryption\r\nand decryption configurations.\r\nAdd interop test that reads files from parquet-testing GitHub\r\nrepository, that were written by parquet-cpp.\r\nThis adds parquet-testing repo as a submodule."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf", "committedDate": "2020-07-28T10:52:22Z", "message": "PARQUET-1373: Encryption key tools (#615)\n\n* comments\r\n* update key tools\r\n* double wrap for minimizing KMS calls\r\n* Add information about KMS instance ID to footer metadata. Then on file reading, KMS instance ID doesn't have to be provided in properties, but can be read from the metadata.\r\nAdd RemoteKmsClient abstract class to assist implementing KMSClients for remote KMSs, that are accessed using URL.\r\nMake DoubleWrappedKeyManager inherit from WrappedKeyManager and make FileKeyManager an abstract class. Add a static factory method to FileKeyManager to initialize an appropriate KSMClient and Key manager.\r\nKMS URL should be specified in properties either directly or in a list. KMS instance ID is either default, or should be specified in properties or read from footer metadata.\r\n* major update - key rotation, crypto factory, etc\r\n* Change caches of EnvelopeKeyManager and EnvelopeKeyRetriever to be per token.\r\nKmsClient is per token and read/write KEK caches too.\r\nAdd default token value for InMemoryKMS, which has no tokens.\r\nUse concurrentHashMap for caches with computeIfAbsent.\r\nAdd expiration using to the caches - both time-based and on-demand.\r\nOn expiration delete the per-token entries from caches.\r\nAdd method for cache invalidation per token.\r\nAdd abstract methods to be implemented by RemoteKmsClients.\r\n* add in-memory KMS\r\n* Change RemoteKmsClient exceptions to IOException\r\ninstead of the higher-level ParquetCryptoRuntimeException.\r\nChange to constant names to uppercase.\r\n* Add sample VaultClient.\r\n* interface changes\r\n* Add okHttp3 dependency for VaultClient sample.\r\n* wrapping changes\r\n* Use JSON serialization for key material.\r\n* separate write and read path, update caching\r\n* improved refactoring\r\n* key rotation improvements\r\n* Add TestPropertiesDrivenEncryption\r\n* get and resfresh token for all KMS clients\r\n* minor changes\r\n* Use ConcurrentHashMap for caches\r\n* caching and store updates\r\n* Rename some encryption/decryption configurations and make the test parameterized\r\nto test combinations of isKeyMaterialExternalStorage, isDoubleWrapping, isWrapLocally.\r\nAdd RemoteKmsClient mock for remote wrapping.\r\n* add removeCacheEntriesForAllTokens\r\n* Make common method setCommonKMSProperties and extract classname strings from classes\r\n* Change TestPropertiesDrivenEncryption to accomodate latest API changes.\r\n* Remove StringUtils\r\n* address review comments\r\n* key material documentation\r\n* Boolean objects\r\n\r\nCo-authored-by: Maya Anderson <mayaa@il.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b7099fadf98d2c208967cd825af90d7d4953cb3", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/7b7099fadf98d2c208967cd825af90d7d4953cb3", "committedDate": "2020-07-06T08:01:36Z", "message": "PARQUET-1373: Encryption key tools (#615)\n\n* comments\r\n* update key tools\r\n* double wrap for minimizing KMS calls\r\n* Add information about KMS instance ID to footer metadata. Then on file reading, KMS instance ID doesn't have to be provided in properties, but can be read from the metadata.\r\nAdd RemoteKmsClient abstract class to assist implementing KMSClients for remote KMSs, that are accessed using URL.\r\nMake DoubleWrappedKeyManager inherit from WrappedKeyManager and make FileKeyManager an abstract class. Add a static factory method to FileKeyManager to initialize an appropriate KSMClient and Key manager.\r\nKMS URL should be specified in properties either directly or in a list. KMS instance ID is either default, or should be specified in properties or read from footer metadata.\r\n* major update - key rotation, crypto factory, etc\r\n* Change caches of EnvelopeKeyManager and EnvelopeKeyRetriever to be per token.\r\nKmsClient is per token and read/write KEK caches too.\r\nAdd default token value for InMemoryKMS, which has no tokens.\r\nUse concurrentHashMap for caches with computeIfAbsent.\r\nAdd expiration using to the caches - both time-based and on-demand.\r\nOn expiration delete the per-token entries from caches.\r\nAdd method for cache invalidation per token.\r\nAdd abstract methods to be implemented by RemoteKmsClients.\r\n* add in-memory KMS\r\n* Change RemoteKmsClient exceptions to IOException\r\ninstead of the higher-level ParquetCryptoRuntimeException.\r\nChange to constant names to uppercase.\r\n* Add sample VaultClient.\r\n* interface changes\r\n* Add okHttp3 dependency for VaultClient sample.\r\n* wrapping changes\r\n* Use JSON serialization for key material.\r\n* separate write and read path, update caching\r\n* improved refactoring\r\n* key rotation improvements\r\n* Add TestPropertiesDrivenEncryption\r\n* get and resfresh token for all KMS clients\r\n* minor changes\r\n* Use ConcurrentHashMap for caches\r\n* caching and store updates\r\n* Rename some encryption/decryption configurations and make the test parameterized\r\nto test combinations of isKeyMaterialExternalStorage, isDoubleWrapping, isWrapLocally.\r\nAdd RemoteKmsClient mock for remote wrapping.\r\n* add removeCacheEntriesForAllTokens\r\n* Make common method setCommonKMSProperties and extract classname strings from classes\r\n* Change TestPropertiesDrivenEncryption to accomodate latest API changes.\r\n* Remove StringUtils\r\n* address review comments\r\n* key material documentation\r\n* Boolean objects\r\n\r\nCo-authored-by: Maya Anderson <mayaa@il.ibm.com>"}, "afterCommit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf", "author": {"user": {"login": "ggershinsky", "name": null}}, "url": "https://github.com/apache/parquet-mr/commit/22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf", "committedDate": "2020-07-28T10:52:22Z", "message": "PARQUET-1373: Encryption key tools (#615)\n\n* comments\r\n* update key tools\r\n* double wrap for minimizing KMS calls\r\n* Add information about KMS instance ID to footer metadata. Then on file reading, KMS instance ID doesn't have to be provided in properties, but can be read from the metadata.\r\nAdd RemoteKmsClient abstract class to assist implementing KMSClients for remote KMSs, that are accessed using URL.\r\nMake DoubleWrappedKeyManager inherit from WrappedKeyManager and make FileKeyManager an abstract class. Add a static factory method to FileKeyManager to initialize an appropriate KSMClient and Key manager.\r\nKMS URL should be specified in properties either directly or in a list. KMS instance ID is either default, or should be specified in properties or read from footer metadata.\r\n* major update - key rotation, crypto factory, etc\r\n* Change caches of EnvelopeKeyManager and EnvelopeKeyRetriever to be per token.\r\nKmsClient is per token and read/write KEK caches too.\r\nAdd default token value for InMemoryKMS, which has no tokens.\r\nUse concurrentHashMap for caches with computeIfAbsent.\r\nAdd expiration using to the caches - both time-based and on-demand.\r\nOn expiration delete the per-token entries from caches.\r\nAdd method for cache invalidation per token.\r\nAdd abstract methods to be implemented by RemoteKmsClients.\r\n* add in-memory KMS\r\n* Change RemoteKmsClient exceptions to IOException\r\ninstead of the higher-level ParquetCryptoRuntimeException.\r\nChange to constant names to uppercase.\r\n* Add sample VaultClient.\r\n* interface changes\r\n* Add okHttp3 dependency for VaultClient sample.\r\n* wrapping changes\r\n* Use JSON serialization for key material.\r\n* separate write and read path, update caching\r\n* improved refactoring\r\n* key rotation improvements\r\n* Add TestPropertiesDrivenEncryption\r\n* get and resfresh token for all KMS clients\r\n* minor changes\r\n* Use ConcurrentHashMap for caches\r\n* caching and store updates\r\n* Rename some encryption/decryption configurations and make the test parameterized\r\nto test combinations of isKeyMaterialExternalStorage, isDoubleWrapping, isWrapLocally.\r\nAdd RemoteKmsClient mock for remote wrapping.\r\n* add removeCacheEntriesForAllTokens\r\n* Make common method setCommonKMSProperties and extract classname strings from classes\r\n* Change TestPropertiesDrivenEncryption to accomodate latest API changes.\r\n* Remove StringUtils\r\n* address review comments\r\n* key material documentation\r\n* Boolean objects\r\n\r\nCo-authored-by: Maya Anderson <mayaa@il.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NTg2NTEz", "url": "https://github.com/apache/parquet-mr/pull/800#pullrequestreview-456586513", "createdAt": "2020-07-28T12:37:02Z", "commit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjozNzowMlrOG4KftA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo0OToyOVrOG4K9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0NTM5Ng==", "bodyText": "jdk is already listed, this one is not required", "url": "https://github.com/apache/parquet-mr/pull/800#discussion_r461545396", "createdAt": "2020-07-28T12:37:02Z", "author": {"login": "gszadovszky"}, "path": ".travis.yml", "diffHunk": "@@ -1,4 +1,5 @@\n language: java\n+jdk: openjdk8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1MzA4MA==", "bodyText": "Please, add double spaces to the end of the lines to enforce newlines. (Maybe it was my mistake during the rebase that they were removed.)\n(You may check the result by reviewing the rendering of the file on the github UI.)", "url": "https://github.com/apache/parquet-mr/pull/800#discussion_r461553080", "createdAt": "2020-07-28T12:49:29Z", "author": {"login": "gszadovszky"}, "path": "parquet-hadoop/README.md", "diffHunk": "@@ -239,6 +239,12 @@ conf.set(\"parquet.bloom.filter.expected.ndv#column.path\", 200)\n **Description:** Whether to write out page level checksums.  \n **Default value:** `true`\n \n+---\n+\n+**Property:** `parquet.crypto.factory.class`  \n+**Description:** Class implementing EncryptionPropertiesFactory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Mjc2MjEx", "url": "https://github.com/apache/parquet-mr/pull/800#pullrequestreview-457276211", "createdAt": "2020-07-29T07:50:28Z", "commit": {"oid": "22a5ae1ea8d7ef3b93d037932c3de4a14a1e41cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2212, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}