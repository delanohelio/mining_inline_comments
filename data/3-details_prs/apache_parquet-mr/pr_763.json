{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODEzNTY1", "number": 763, "title": "PARQUET-1805: Refactor the configuration for bloom filters", "bodyText": "Make sure you have checked all steps below.\nJira\n\n My PR addresses the following Parquet Jira issues and references them in the PR title. For example, \"PARQUET-1234: My Parquet PR\"\n\nhttps://issues.apache.org/jira/browse/PARQUET-XXX\nIn case you are adding a dependency, check if the license complies with the ASF 3rd Party License Policy.\n\n\n\nTests\n\n My PR adds the following unit tests OR does not need testing for this extremely good reason:\n\nCommits\n\n My commits all reference Jira issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation\n\n In case of new functionality, my PR adds documentation that describes how to use it.\n\nAll the public functions and the classes in the PR contain Javadoc that explain what it does", "createdAt": "2020-02-27T12:09:54Z", "url": "https://github.com/apache/parquet-mr/pull/763", "merged": true, "mergeCommit": {"oid": "7ddfb4d9d89fc7ae1d9ea0ef86aaa6dd5e81aa59"}, "closed": true, "closedAt": "2020-03-30T08:51:25Z", "author": {"login": "gszadovszky"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIaM_kAH2gAyMzgwODEzNTY1OjNjYzRjYThmYzZkOTFhYjMyYzE0ZDM3YWRmMjlmNWUwMjY5ZGIwYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRyRTigFqTM4Mjk1MjI2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "author": {"user": {"login": "gszadovszky", "name": "Gabor Szadovszky"}}, "url": "https://github.com/apache/parquet-mr/commit/3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3", "committedDate": "2020-02-27T12:09:12Z", "message": "PARQUET-1805: Refactor the configuration for bloom filters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Njg4Mjcw", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-365688270", "createdAt": "2020-02-27T13:42:27Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzo0MjoyOFrOFvSnqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzo0MjoyOFrOFvSnqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzMjQ1OQ==", "bodyText": "Why we set the default to false?", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385132459", "createdAt": "2020-02-27T13:42:28Z", "author": {"login": "chenjunjiedada"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -61,6 +56,7 @@\n   public static final int DEFAULT_STATISTICS_TRUNCATE_LENGTH = Integer.MAX_VALUE;\n   public static final int DEFAULT_PAGE_ROW_COUNT_LIMIT = 20_000;\n   public static final int DEFAULT_MAX_BLOOM_FILTER_BYTES = 1024 * 1024;\n+  public static final boolean DEFAULT_BLOOM_FILTER_ENABLED = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDMyMTU4", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-366032158", "createdAt": "2020-02-27T22:03:29Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjowMzoyOVrOFvi0gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMzoxNFrOFvjErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5Nzg4OQ==", "bodyText": "Typo: and to a", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385397889", "createdAt": "2020-02-27T22:03:29Z", "author": {"login": "garawalid"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5OTEwOQ==", "bodyText": "I'd write\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param enabled whether bloom filter shall be enabled\n          \n          \n            \n                 * @param enabled whether bloom filter shall be enabled for all columns", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385399109", "createdAt": "2020-02-27T22:06:18Z", "author": {"login": "garawalid"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter\n+      this.bloomFilterEnabled.withValue(columnPath, true);\n+      return this;\n+    }\n+\n+    /**\n+     * Enable or disable the bloom filter for the columns not specified by\n+     * {@link #withBloomFilterEnabled(String, boolean)}.\n      *\n-     * @param columnToNDVMap the columns which has bloom filter enabled.\n+     * @param enabled whether bloom filter shall be enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMDEyNw==", "bodyText": "I'd keep it parquet.bloom.filter.expected.ndv because it's clear and the NDV still an estimation.", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385400127", "createdAt": "2020-02-27T22:08:43Z", "author": {"login": "garawalid"}, "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java", "diffHunk": "@@ -150,8 +146,8 @@\n   public static final String ESTIMATE_PAGE_SIZE_CHECK = \"parquet.page.size.check.estimate\";\n   public static final String COLUMN_INDEX_TRUNCATE_LENGTH = \"parquet.columnindex.truncate.length\";\n   public static final String STATISTICS_TRUNCATE_LENGTH = \"parquet.statistics.truncate.length\";\n-  public static final String BLOOM_FILTER_COLUMN_NAMES = \"parquet.bloom.filter.column.names\";\n-  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.expected.ndv\";\n+  public static final String BLOOM_FILTER_ENABLED = \"parquet.bloom.filter.enabled\";\n+  public static final String BLOOM_FILTER_EXPECTED_NDV = \"parquet.bloom.filter.ndv\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjAyOQ==", "bodyText": "Wouldn't it be better to say that the result of this method will be combined with withBloomFilterEnabled(boolean enabled)?", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r385402029", "createdAt": "2020-02-27T22:13:14Z", "author": {"login": "garawalid"}, "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java", "diffHunk": "@@ -558,30 +556,38 @@ public SELF withPageWriteChecksumEnabled(boolean enablePageWriteChecksum) {\n     }\n \n     /**\n-     * Specified the column and the NDV map for the bloom filter.\n+     * Sets the NDV (number of distinct values) for the specified column.\n      *\n-     * @param columnNDVMap the column to NDV map\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv        the NDV of the column\n      *\n      * @return this builder for method chaining.\n      */\n-    public SELF withBloomFilterColumnToNDVMap(Map<String, Long> columnNDVMap) {\n-      if (columnNDVMap != null) {\n-        encodingPropsBuilder.withBloomFilterColumnToNDVMap(columnNDVMap);\n-      }\n-\n+    public SELF withBloomFilterNDV(String columnPath, long ndv) {\n+      encodingPropsBuilder.withBloomFilterNDV(columnPath, ndv);\n       return self();\n     }\n \n     /**\n-     * Specified the column names for the bloom filter.\n+     * Sets the bloom filter enabled/disabled\n      *\n-     * @return this builder for method chaining.\n+     * @param enabled whether to write bloom filters\n+     * @return this builder for method chaining\n      */\n-    public SELF withBloomFilterColumnNames(String...columns) {\n-      if (columns != null) {\n-        encodingPropsBuilder.withBloomFilterColumnNames(Arrays.asList(columns));\n-      }\n+    public SELF withBloomFilterEnabled(boolean enabled) {\n+      encodingPropsBuilder.withBloomFilterEnabled(enabled);\n+      return self();\n+    }\n \n+    /**\n+     * Sets the bloom filter enabled/disabled for the specified column", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MjAzODEw", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-366203810", "createdAt": "2020-02-28T07:33:24Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "author": {"user": {"login": "gszadovszky", "name": "Gabor Szadovszky"}}, "url": "https://github.com/apache/parquet-mr/commit/0e36a984cc4185bc53a2c7fa8d3d821ca5d135cf", "committedDate": "2020-02-28T08:50:42Z", "message": "PARQUET-1805: Fix review findings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTQ5NjMw", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-377149630", "createdAt": "2020-03-18T18:55:49Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NTo0OVrOF4Svhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NTo0OVrOF4Svhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTY1NQ==", "bodyText": "Is it max value?", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394571655", "createdAt": "2020-03-18T18:55:49Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -102,10 +98,10 @@ public static WriterVersion fromString(String name) {\n   private final int columnIndexTruncateLength;\n   private final int statisticsTruncateLength;\n \n-  // The key-value pair represents the column name and its expected distinct number of values in a row group.\n-  private final Map<String, Long> bloomFilterExpectedDistinctNumbers;\n+  // The expected NDV (number of distinct values) for each columns\n+  private final ColumnProperty<Long> bloomFilterNDVs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTUxMTcz", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-377151173", "createdAt": "2020-03-18T18:58:01Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1ODowMVrOF4S0jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1ODowMVrOF4S0jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3Mjk0MA==", "bodyText": "are -> is", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394572940", "createdAt": "2020-03-18T18:58:01Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -292,9 +285,9 @@ public String toString() {\n         + \"Max row count for page size check is: \" + getMaxRowCountForPageSizeCheck() + '\\n'\n         + \"Truncate length for column indexes is: \" + getColumnIndexTruncateLength() + '\\n'\n         + \"Truncate length for statistics min/max  is: \" + getStatisticsTruncateLength() + '\\n'\n-        + \"Bloom filter enabled column names are: \" + getBloomFilterColumns() + '\\n'\n+        + \"Bloom filter enabled: \" + bloomFilterEnabled + '\\n'\n         + \"Max Bloom filter size for a column is \" + getMaxBloomFilterBytes() + '\\n'\n-        + \"Bloom filter enabled column expected number of distinct values are: \" + getBloomFilterColumnExpectedNDVs().values() + '\\n'\n+        + \"Bloom filter expected number of distinct values are: \" + bloomFilterNDVs + '\\n'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTY5ODQx", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-377169841", "createdAt": "2020-03-18T19:25:49Z", "commit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNTo0OVrOF4TuLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNTo0OVrOF4TuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzY5Mw==", "bodyText": "Can we document the settings of their relations? Here are my understandings.\n\n'withBloomFilterEnabled(boolean enabled)' would set it globally, which can be overridden by column specific setting of 'withBloomFilterEnabled(String columnPath, boolean enabled)' or 'withBloomFilterNDV(String columnPath, long ndv)'. 2. Now 'withBloomFilterNDV(String columnPath, long ndv)' will override 'withBloomFilterEnabled(String columnPath, boolean enabled)' implicitly or vice versa explicitly.\n\nI feel it is a bit complicated to use given the above relations. It is also my understanding that NDV should only present when bloomFitler is enabled. If that is the case, can we just use NDV null or not to indicate enabling/disabling to simplify the settings.", "url": "https://github.com/apache/parquet-mr/pull/763#discussion_r394587693", "createdAt": "2020-03-18T19:25:49Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java", "diffHunk": "@@ -459,26 +454,44 @@ public Builder withMaxBloomFilterBytes(int maxBloomFilterBytes) {\n     }\n \n     /**\n-     * Set Bloom filter column names and expected NDVs.\n+     * Set Bloom filter NDV (number of distinct values) for the specified column.\n+     *\n+     * @param columnPath the path of the column (dot-string)\n+     * @param ndv the NDV of the column\n+     *\n+     * @return this builder for method chaining\n+     */\n+    public Builder withBloomFilterNDV(String columnPath, long ndv) {\n+      Preconditions.checkArgument(ndv > 0, \"Invalid NDV for column \\\"%s\\\": %d\", columnPath, ndv);\n+      this.bloomFilterNDVs.withValue(columnPath, ndv);\n+      // Setting and NDV for a column implies writing a bloom filter\n+      this.bloomFilterEnabled.withValue(columnPath, true);\n+      return this;\n+    }\n+\n+    /**\n+     * Enable or disable the bloom filter for the columns not specified by\n+     * {@link #withBloomFilterEnabled(String, boolean)}.\n      *\n-     * @param columnToNDVMap the columns which has bloom filter enabled.\n+     * @param enabled whether bloom filter shall be enabled\n      *\n      * @return this builder for method chaining\n      */\n-    public Builder withBloomFilterColumnToNDVMap(Map<String, Long> columnToNDVMap) {\n-      this.bloomFilterColumnExpectedNDVs = columnToNDVMap;\n+    public Builder withBloomFilterEnabled(boolean enabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc4ca8fc6d91ab32c14d37adf29f5e0269db0a3"}, "originalPosition": 144}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff8fc7f557b015c21a57acafc70c6d47c83e650c", "author": {"user": {"login": "gszadovszky", "name": "Gabor Szadovszky"}}, "url": "https://github.com/apache/parquet-mr/commit/ff8fc7f557b015c21a57acafc70c6d47c83e650c", "committedDate": "2020-03-23T14:31:29Z", "message": "PARQUET-1805: Add more descriptive comments in ParquetProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTUyMjY3", "url": "https://github.com/apache/parquet-mr/pull/763#pullrequestreview-382952267", "createdAt": "2020-03-27T15:16:57Z", "commit": {"oid": "ff8fc7f557b015c21a57acafc70c6d47c83e650c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2169, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}