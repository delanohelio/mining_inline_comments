{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMjk5OTQ3", "number": 849, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjoxODoxMFrOFFrd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjoxODoxMFrOFFrd-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDk5Mzg2OnYy", "diffSide": "RIGHT", "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjoxODoxMFrOIGTvrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzowMjo0NFrOIMIdvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ==", "bodyText": "If an I/O exception occurs in the ParquetFileReader constructor then you might try to close the previous reader object. I would guess there is no problem with invoking close multiple times on the same object but who knows? It might be a good idea to reset the reference so you would not close the same object again. Another idea would be to use try-with-resources for the code part where the reader is really needed.", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r543485871", "createdAt": "2020-12-15T16:18:10Z", "author": {"login": "gszadovszky"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg3NTY4Nw==", "bodyText": "This is the memory used before and after fix this bug:", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r543875687", "createdAt": "2020-12-16T03:14:44Z", "author": {"login": "StefanXiepj"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1MjA5MA==", "bodyText": "I did not say your fix is not working. What I suggest is to avoid closing a reader twice if an issue happens in the ParquetFileReader constructor.", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r544152090", "createdAt": "2020-12-16T09:41:39Z", "author": {"login": "gszadovszky"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4MjczNg==", "bodyText": "yeah yeah,  thx for your review, i am sorry, please forgive me. Do you mean we can fix it like this:\n            ...\n            } finally {\n              if (freader != null) {\n                freader.close();\n                // reset current reader is null, avoid closing a reader twice\n                freader = null;\n              }\n            }\n\nor\ntry(ParquetFileReader freader = \n    new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns)){\n    // do something where the freader is really needed.\n}\n\nis right ?", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r544782736", "createdAt": "2020-12-17T03:21:35Z", "author": {"login": "StefanXiepj"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3OTc3MA==", "bodyText": "hi, @gszadovszky Could you help me to review this PR ? thanks.", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r549279770", "createdAt": "2020-12-28T09:33:57Z", "author": {"login": "StefanXiepj"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5NTY0NA==", "bodyText": "The ParquetFileReader is Closeable, I would suggest using the try-with-resource pattern: https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\nAs @gszadovszky already suggested.", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r549295644", "createdAt": "2020-12-28T10:25:42Z", "author": {"login": "Fokko"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5MjUxMA==", "bodyText": "@Fokko thanks for your suggestion, can you review it again?", "url": "https://github.com/apache/parquet-mr/pull/849#discussion_r549592510", "createdAt": "2020-12-29T07:02:44Z", "author": {"login": "StefanXiepj"}, "path": "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java", "diffHunk": "@@ -165,48 +165,47 @@ public static void dump(PrettyPrintWriter out, ParquetMetadata meta, MessageType\n \n         ParquetFileReader freader = null;\n         if (showmd) {\n+          long group = 0;\n+          for (BlockMetaData block : blocks) {\n             try {\n-                long group = 0;\n-                for (BlockMetaData block : blocks) {\n-                    if (group != 0) out.println();\n-                    out.format(\"row group %d%n\", group++);\n-                    out.rule('-');\n-\n-\n-                    List<ColumnChunkMetaData> ccmds = block.getColumns();\n-                    if (showColumns != null) {\n-                        ccmds = new ArrayList<ColumnChunkMetaData>();\n-                        for (ColumnChunkMetaData ccmd : block.getColumns()) {\n-                            String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n-                            if (showColumns.contains(path)) {\n-                                ccmds.add(ccmd);\n-                            }\n-                        }\n-                    }\n-\n-                    MetadataUtils.showDetails(out, ccmds);\n+              if (group != 0)\n+                out.println();\n+              out.format(\"row group %d%n\", group++);\n+              out.rule('-');\n+\n+              List<ColumnChunkMetaData> ccmds = block.getColumns();\n+              if (showColumns != null) {\n+                ccmds = new ArrayList<ColumnChunkMetaData>();\n+                for (ColumnChunkMetaData ccmd : block.getColumns()) {\n+                  String path = Joiner.on('.').skipNulls().join(ccmd.getPath().toArray());\n+                  if (showColumns.contains(path)) {\n+                    ccmds.add(ccmd);\n+                  }\n+                }\n+              }\n \n-                    List<BlockMetaData> rblocks = Collections.singletonList(block);\n-                    freader = new ParquetFileReader(\n-                        conf, meta.getFileMetaData(), inpath, rblocks, columns);\n-                    PageReadStore store = freader.readNextRowGroup();\n-                    while (store != null) {\n-                        out.incrementTabLevel();\n-                        for (ColumnDescriptor column : columns) {\n-                            out.println();\n-                            dump(out, store, column);\n-                        }\n-                        out.decrementTabLevel();\n+              MetadataUtils.showDetails(out, ccmds);\n \n-                        store = freader.readNextRowGroup();\n-                    }\n-                    out.flushColumns();\n+              List<BlockMetaData> rblocks = Collections.singletonList(block);\n+              freader = new ParquetFileReader(conf, meta.getFileMetaData(), inpath, rblocks, columns);\n+              PageReadStore store = freader.readNextRowGroup();\n+              while (store != null) {\n+                out.incrementTabLevel();\n+                for (ColumnDescriptor column : columns) {\n+                  out.println();\n+                  dump(out, store, column);\n                 }\n+                out.decrementTabLevel();\n+\n+                store = freader.readNextRowGroup();\n+              }\n+              out.flushColumns();\n             } finally {\n-                if (freader != null) {\n-                    freader.close();\n-                }\n+              if (freader != null) {\n+                freader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ4NTg3MQ=="}, "originalCommit": {"oid": "029ae9a7799bdb7f755a7a177d750733c2ec7271"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4703, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}