{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTY4MjMw", "number": 778, "title": "PARQUET-1827: UUID type currently not supported by parquet-mr", "bodyText": "Make sure you have checked all steps below.\nJira\n\n My PR addresses the following Parquet Jira issues and references them in the PR title. For example, \"PARQUET-1234: My Parquet PR\"\n\nhttps://issues.apache.org/jira/browse/PARQUET-XXX\nIn case you are adding a dependency, check if the license complies with the ASF 3rd Party License Policy.\n\n\n\nTests\n\n My PR adds the following unit tests OR does not need testing for this extremely good reason:\n\nCommits\n\n My commits all reference Jira issues in their subject lines. In addition, my commits follow the guidelines from \"How to write a good git commit message\":\n\nSubject is separated from body by a blank line\nSubject is limited to 50 characters (not including Jira issue reference)\nSubject does not end with a period\nSubject uses the imperative mood (\"add\", not \"adding\")\nBody wraps at 72 characters\nBody explains \"what\" and \"why\", not \"how\"\n\n\n\nDocumentation\n\n In case of new functionality, my PR adds documentation that describes how to use it.\n\nAll the public functions and the classes in the PR contain Javadoc that explain what it does", "createdAt": "2020-04-03T13:17:52Z", "url": "https://github.com/apache/parquet-mr/pull/778", "merged": true, "mergeCommit": {"oid": "84c954d8a4feef2d9bdad7a236a7268ef71a1c25"}, "closed": true, "closedAt": "2020-06-04T06:56:32Z", "author": {"login": "gszadovszky"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUAumYAH2gAyMzk4MTY4MjMwOmI3ZGMzZjk0ZDFmMmUzODJhZTVmMjYzY2JhZmY3YmY5MzVkMjY5NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnqwi9AFqTQyMzY0MTU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959", "author": {"user": {"login": "gszadovszky", "name": "Gabor Szadovszky"}}, "url": "https://github.com/apache/parquet-mr/commit/b7dc3f94d1f2e382ae5f263cbaff7bf935d26959", "committedDate": "2020-04-03T13:15:28Z", "message": "PARQUET-1827: UUID type currently not supported by parquet-mr"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQyNTc0", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-404542574", "createdAt": "2020-05-02T16:45:36Z", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNjo0NTozNlrOGPkhCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNjo0NTozNlrOGPkhCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MDEwNw==", "bodyText": "Why there is no implementation for hasCode() and equal()?", "url": "https://github.com/apache/parquet-mr/pull/778#discussion_r418980107", "createdAt": "2020-05-02T16:45:36Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/main/java/org/apache/parquet/schema/LogicalTypeAnnotation.java", "diffHunk": "@@ -861,6 +871,36 @@ PrimitiveStringifier valueStringifier(PrimitiveType primitiveType) {\n     }\n   }\n \n+  public static class UUIDLogicalTypeAnnotation extends LogicalTypeAnnotation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQzNjcw", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-404543670", "createdAt": "2020-05-02T17:00:50Z", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzowMDo1MFrOGPkn1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzowMDo1MFrOGPkn1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4MTg0NQ==", "bodyText": "Do you want to make 'bytes' final since you are calling getBytesUnsafe()?", "url": "https://github.com/apache/parquet-mr/pull/778#discussion_r418981845", "createdAt": "2020-05-02T17:00:50Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/main/java/org/apache/parquet/schema/PrimitiveStringifier.java", "diffHunk": "@@ -421,4 +422,30 @@ private String stringifyWithScale(BigInteger i) {\n       }\n     };\n   }\n+\n+  static final PrimitiveStringifier UUID_STRINGIFIER = new PrimitiveStringifier(\"UUID_STRINGIFIER\") {\n+    private final char[] digit = \"0123456789abcdef\".toCharArray();\n+    @Override\n+    public String stringify(Binary value) {\n+      byte[] bytes = value.getBytesUnsafe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQ1MjIw", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-404545220", "createdAt": "2020-05-02T17:21:22Z", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzoyMToyM1rOGPkw-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzoyMToyM1rOGPkw-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4NDE4NA==", "bodyText": "Are the 3 test data are randomly chosen? It seems duplicate coverage.\nCould you add some negative tests like incorrect length uuids, invalid characters etc.", "url": "https://github.com/apache/parquet-mr/pull/778#discussion_r418984184", "createdAt": "2020-05-02T17:21:23Z", "author": {"login": "shangxinli"}, "path": "parquet-column/src/test/java/org/apache/parquet/schema/TestPrimitiveStringifier.java", "diffHunk": "@@ -309,6 +308,35 @@ public void testDecimalStringifier() {\n     checkThrowingUnsupportedException(stringifier, Integer.TYPE, Long.TYPE, Binary.class);\n   }\n \n+  @Test\n+  public void testUUIDStringifier() {\n+    PrimitiveStringifier stringifier = PrimitiveStringifier.UUID_STRINGIFIER;\n+\n+    assertEquals(\"00112233-4455-6677-8899-aabbccddeeff\", stringifier.stringify(\n+        toBinary(0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff)));\n+    assertEquals(\"00000000-0000-0000-0000-000000000000\", stringifier.stringify(\n+        toBinary(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)));\n+    assertEquals(\"ffffffff-ffff-ffff-ffff-ffffffffffff\", stringifier.stringify(\n+        toBinary(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff)));\n+\n+    assertEquals(\"0eb1497c-19b6-42bc-b028-b4b612bed141\", stringifier.stringify(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQ1Nzkz", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-404545793", "createdAt": "2020-05-02T17:29:13Z", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzoyOToxNFrOGPk0Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzoyOToxNFrOGPk0Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4NTA1OA==", "bodyText": "Should we add it using separate jira?", "url": "https://github.com/apache/parquet-mr/pull/778#discussion_r418985058", "createdAt": "2020-05-02T17:29:14Z", "author": {"login": "shangxinli"}, "path": "parquet-avro/README.md", "diffHunk": "@@ -0,0 +1,44 @@\n+<!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQ3NDc5", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-404547479", "createdAt": "2020-05-02T17:51:27Z", "commit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzo1MToyOFrOGPk-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNzo1MToyOFrOGPk-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk4NzU1MA==", "bodyText": "Can we have checkReaderWriterCompatibility() to verify if the parquet and avro schema are compatible for UUID?\nThere are issues like PARQUET-1681 for avro schema and parquet schema conversion for other types.", "url": "https://github.com/apache/parquet-mr/pull/778#discussion_r418987550", "createdAt": "2020-05-02T17:51:28Z", "author": {"login": "shangxinli"}, "path": "parquet-avro/src/test/java/org/apache/parquet/avro/TestAvroSchemaConverter.java", "diffHunk": "@@ -766,6 +768,33 @@ public void testReuseNameInNestedStructureAtSameLevel() throws Exception {\n     testParquetToAvroConversion(NEW_BEHAVIOR, schema, parquetSchema);\n   }\n \n+  @Test\n+  public void testUUIDType() throws Exception {\n+    Schema fromAvro = Schema.createRecord(\"myrecord\", null, null, false,\n+        Arrays.asList(new Schema.Field(\"uuid\", LogicalTypes.uuid().addToSchema(Schema.create(STRING)), null, null)));\n+    String parquet = \"message myrecord {\\n\" +\n+        \"  required binary uuid (STRING);\\n\" +\n+        \"}\\n\";\n+    Schema toAvro = Schema.createRecord(\"myrecord\", null, null, false,\n+        Arrays.asList(new Schema.Field(\"uuid\", Schema.create(STRING), null, null)));\n+\n+    testAvroToParquetConversion(fromAvro, parquet);\n+    testParquetToAvroConversion(toAvro, parquet);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dc3f94d1f2e382ae5f263cbaff7bf935d26959"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b0b97975c6d8ce1cf85dd85b21585c7546e7223", "author": {"user": {"login": "gszadovszky", "name": "Gabor Szadovszky"}}, "url": "https://github.com/apache/parquet-mr/commit/9b0b97975c6d8ce1cf85dd85b21585c7546e7223", "committedDate": "2020-06-03T13:05:51Z", "message": "PARQUET-1827: Addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjQxNTcx", "url": "https://github.com/apache/parquet-mr/pull/778#pullrequestreview-423641571", "createdAt": "2020-06-03T14:58:10Z", "commit": {"oid": "9b0b97975c6d8ce1cf85dd85b21585c7546e7223"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2196, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}