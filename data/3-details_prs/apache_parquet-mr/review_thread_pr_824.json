{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTQ5MjU1", "number": 824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOErpWug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOErpWug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjAxNzg2OnYy", "diffSide": "RIGHT", "path": "parquet-common/src/main/java/org/apache/parquet/bytes/BytesInput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOHeh2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozNzo1MVrOHeh2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3MzkyMQ==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE +\".\" +\n          \n          \n            \n                    \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n          \n          \n            \n                    \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n          \n          \n            \n                    \" You can try setting it to \" + (10000 / (size/ Integer.MAX_VALUE)) + \" or lower.\");\n          \n          \n            \n                  throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE + \".\" +\n          \n          \n            \n                    \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n          \n          \n            \n                    \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n          \n          \n            \n                    \" You can try setting it to \" + (10000 / (size / Integer.MAX_VALUE)) + \" or lower.\");", "url": "https://github.com/apache/parquet-mr/pull/824#discussion_r501773921", "createdAt": "2020-10-08T14:37:51Z", "author": {"login": "gszadovszky"}, "path": "parquet-common/src/main/java/org/apache/parquet/bytes/BytesInput.java", "diffHunk": "@@ -215,6 +215,13 @@ public static BytesInput copy(BytesInput bytesInput) throws IOException {\n    * @throws IOException if there is an exception reading\n    */\n   public byte[] toByteArray() throws IOException {\n+    long size = size();\n+    if (size > Integer.MAX_VALUE) {\n+      throw new IOException(\"Page size, \" + size + \", is larger than allowed \" + Integer.MAX_VALUE +\".\" +\n+        \" Usually caused by a Parquet writer writing too big column chunks on encountering highly skewed dataset.\" +\n+        \" Please set page.size.row.check.max to a lower value on the writer, default value is 10000.\" +\n+        \" You can try setting it to \" + (10000 / (size/ Integer.MAX_VALUE)) + \" or lower.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bcc4a64fbb4a23e6f6c5b97dd31f11f15b4c05"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4799, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}