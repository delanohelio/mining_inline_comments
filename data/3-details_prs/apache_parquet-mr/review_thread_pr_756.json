{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODgwNTA0", "number": 756, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowOToxMVrODeZTaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowOToxMVrODeZTaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTk4NDQzOnYy", "diffSide": "RIGHT", "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowOToxMVrOFngU2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDowNTowNFrOFoDE8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2ODQwOA==", "bodyText": "In other places we use java.util.Math.toIntExact(long).", "url": "https://github.com/apache/parquet-mr/pull/756#discussion_r376968408", "createdAt": "2020-02-10T10:09:11Z", "author": {"login": "gszadovszky"}, "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java", "diffHunk": "@@ -886,6 +951,15 @@ private static void serializeColumnIndexes(\n     }\n   }\n \n+  private int toIntWithCheck(long size) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "513eccdc0cbc546d5183cb51dfa0af36d0f9ca67"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA0MjgyMA==", "bodyText": "Yes you are right, I was thinking of keeping it this way here(like in ColumnChunkPageWriteStore ) so the message can be clearer to the caller of what failed", "url": "https://github.com/apache/parquet-mr/pull/756#discussion_r377042820", "createdAt": "2020-02-10T12:50:22Z", "author": {"login": "brimzi"}, "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java", "diffHunk": "@@ -886,6 +951,15 @@ private static void serializeColumnIndexes(\n     }\n   }\n \n+  private int toIntWithCheck(long size) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2ODQwOA=="}, "originalCommit": {"oid": "513eccdc0cbc546d5183cb51dfa0af36d0f9ca67"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUzNzc3Nw==", "bodyText": "It's fine for me.\nThen, I would suggest using a similar approach of implementation then they have it in toIntExact(long). The one you used is not universal (think of negative numbers out of int).", "url": "https://github.com/apache/parquet-mr/pull/756#discussion_r377537777", "createdAt": "2020-02-11T10:05:04Z", "author": {"login": "gszadovszky"}, "path": "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java", "diffHunk": "@@ -886,6 +951,15 @@ private static void serializeColumnIndexes(\n     }\n   }\n \n+  private int toIntWithCheck(long size) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2ODQwOA=="}, "originalCommit": {"oid": "513eccdc0cbc546d5183cb51dfa0af36d0f9ca67"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}