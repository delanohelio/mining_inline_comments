{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzYwNDcw", "number": 910, "title": "Closes #747 aggregateBy for MapIterable should have a variant to aggr\u2026", "bodyText": "\u2026egate on key and value\nSigned-off-by: Alxander Goldberg alexander.goldberg@bnymellon.com", "createdAt": "2020-06-08T19:49:30Z", "url": "https://github.com/eclipse/eclipse-collections/pull/910", "merged": true, "mergeCommit": {"oid": "08f93e3a5465fe35b16be3947279565fd10b3301"}, "closed": true, "closedAt": "2020-07-24T20:44:31Z", "author": {"login": "goldbal330"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwMjykAFqTQzOTYzMDY3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4JEorgFqTQ1NTEyOTYzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjMwNjc3", "url": "https://github.com/eclipse/eclipse-collections/pull/910#pullrequestreview-439630677", "createdAt": "2020-06-30T02:44:05Z", "commit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NDowNVrOGqpmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NjozNFrOGqpouQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NDg1NA==", "bodyText": "Missing a since tag", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447374854", "createdAt": "2020-06-30T02:44:05Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,23 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).\n+     *\n+     */\n+    default <K1, V1, V2> MapIterable<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NTA0Ng==", "bodyText": "In the Javadoc it would be good to show an example.", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447375046", "createdAt": "2020-06-30T02:44:50Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,23 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).\n+     *\n+     */\n+    default <K1, V1, V2> MapIterable<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NDg1NA=="}, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NTU0NQ==", "bodyText": "this needs to be a default method, else you break API", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447375545", "createdAt": "2020-06-30T02:46:34Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/ImmutableOrderedMap.java", "diffHunk": "@@ -168,4 +168,11 @@\n \n     @Override\n     <KK, VV> ImmutableOrderedMap<KK, VV> aggregateBy(Function<? super V, ? extends KK> groupBy, Function0<? extends VV> zeroValueFactory, Function2<? super VV, ? super V, ? extends VV> nonMutatingAggregator);\n+\n+    @Override\n+    <K1, V1, V2> ImmutableOrderedMap<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTE3MzQ5", "url": "https://github.com/eclipse/eclipse-collections/pull/910#pullrequestreview-455117349", "createdAt": "2020-07-24T18:58:31Z", "commit": {"oid": "0d027b36390cafae8e5dc37256a28117d6ada1da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODozMVrOG26bxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODozMVrOG26bxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzY3MA==", "bodyText": "you dont need (i.e. Integer.valueOf(0)) it is a bit confusing.", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r460233670", "createdAt": "2020-07-24T18:58:31Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,42 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     *\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d027b36390cafae8e5dc37256a28117d6ada1da"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTIwNDU1", "url": "https://github.com/eclipse/eclipse-collections/pull/910#pullrequestreview-455120455", "createdAt": "2020-07-24T19:03:53Z", "commit": {"oid": "0d027b36390cafae8e5dc37256a28117d6ada1da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b6d327dffbd7d3a93950d01ef2d2e8cfce5bb43", "author": {"user": {"login": "goldbal330", "name": "Alex Goldberg"}}, "url": "https://github.com/eclipse/eclipse-collections/commit/1b6d327dffbd7d3a93950d01ef2d2e8cfce5bb43", "committedDate": "2020-07-24T19:16:43Z", "message": "Closes #747 aggregateBy for MapIterable should have a variant to aggregate on key and value\n\nSigned-off-by: Alxander Goldberg <alexander.goldberg@bnymellon.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTI5NjMz", "url": "https://github.com/eclipse/eclipse-collections/pull/910#pullrequestreview-455129633", "createdAt": "2020-07-24T19:20:03Z", "commit": {"oid": "1b6d327dffbd7d3a93950d01ef2d2e8cfce5bb43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}