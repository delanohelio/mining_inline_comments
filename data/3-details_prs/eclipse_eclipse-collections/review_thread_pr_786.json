{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzkxNDU1", "number": 786, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwNDowMDowNFrODXW09Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNjoyNjoyNlrODXYnWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODE3ODQ1OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwNDowMDowNFrOFcnyIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNjoyMDozNlrOFcqGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng==", "bodyText": "there is a subtle bug here. It would be good to have a test for it. The bug is this: chIndex is incremented unconditionally, even if the predicate matches. So if we have 3 elements, a, b, and c, if a matches, the chain look likes c, b, but c is no longer put through the predicate because the index will move on.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556256", "createdAt": "2020-01-12T04:00:04Z", "author": {"login": "mohrezaei"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjQ5MQ==", "bodyText": "Ah, got it. Let me add a test case for it and fix it.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556491", "createdAt": "2020-01-12T04:07:28Z", "author": {"login": "digsb"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5MjYxNw==", "bodyText": "Thanks for Pointing this out. Fixed it.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365592617", "createdAt": "2020-01-12T15:57:49Z", "author": {"login": "digsb"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDEyMA==", "bodyText": "Style nitpick... now with the refactoring of the for-loop, I think you could move the condition chain[chIndex] != null into the loop condition.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365594120", "createdAt": "2020-01-12T16:20:36Z", "author": {"login": "motlin"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODE4MjY4OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwNDoxOToyM1rOFcn0MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNTo1Nzo1NFrOFcqAMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Njc4NQ==", "bodyText": "also, if chain[chIndex] == null, break the loop immediately.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556785", "createdAt": "2020-01-12T04:19:23Z", "author": {"login": "mohrezaei"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5MjYyNg==", "bodyText": "Thanks for Pointing this out. Fixed it.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365592626", "createdAt": "2020-01-12T15:57:54Z", "author": {"login": "digsb"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Njc4NQ=="}, "originalCommit": {"oid": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODQ3MTI4OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxNjoyNjoyNlrOFcqHfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjoxOToxNFrOFc1GsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDQ5Mw==", "bodyText": "I'm curious about occupied vs size(). Is there an advantage to one over the other?", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365594493", "createdAt": "2020-01-12T16:26:26Z", "author": {"login": "motlin"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,48 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2804b8dcbb7ee496cb6880dd65048d273d8dc2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3NDUxMw==", "bodyText": "size() is just a wrapper around occupied, so though of using the field directly.", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365774513", "createdAt": "2020-01-13T12:19:14Z", "author": {"login": "digsb"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,48 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDQ5Mw=="}, "originalCommit": {"oid": "8a2804b8dcbb7ee496cb6880dd65048d273d8dc2"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3746, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}