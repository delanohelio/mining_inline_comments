{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzYwNDcw", "number": 910, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NDowNVrOEJ6IVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODozMVrOER7sZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODI1MDQ0OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NDowNVrOGqpmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NDo1MFrOGqpmxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NDg1NA==", "bodyText": "Missing a since tag", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447374854", "createdAt": "2020-06-30T02:44:05Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,23 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).\n+     *\n+     */\n+    default <K1, V1, V2> MapIterable<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NTA0Ng==", "bodyText": "In the Javadoc it would be good to show an example.", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447375046", "createdAt": "2020-06-30T02:44:50Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,23 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).\n+     *\n+     */\n+    default <K1, V1, V2> MapIterable<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NDg1NA=="}, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODI1NDkzOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/ImmutableOrderedMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NjozNFrOGqpouQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo0NjozNFrOGqpouQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NTU0NQ==", "bodyText": "this needs to be a default method, else you break API", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r447375545", "createdAt": "2020-06-30T02:46:34Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/ImmutableOrderedMap.java", "diffHunk": "@@ -168,4 +168,11 @@\n \n     @Override\n     <KK, VV> ImmutableOrderedMap<KK, VV> aggregateBy(Function<? super V, ? extends KK> groupBy, Function0<? extends VV> zeroValueFactory, Function2<? super VV, ? super V, ? extends VV> nonMutatingAggregator);\n+\n+    @Override\n+    <K1, V1, V2> ImmutableOrderedMap<K1, V2> aggregateBy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c12533426ca834f785e8bb5bd68ca7f821b7656"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjM5MjY5OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODozMVrOG26bxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1ODozMVrOG26bxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMzY3MA==", "bodyText": "you dont need (i.e. Integer.valueOf(0)) it is a bit confusing.", "url": "https://github.com/eclipse/eclipse-collections/pull/910#discussion_r460233670", "createdAt": "2020-07-24T18:58:31Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java", "diffHunk": "@@ -284,4 +285,42 @@\n     {\n         return Spliterators.spliterator(this.iterator(), (long) this.size(), 0);\n     }\n+\n+    /**\n+     *\n+     * Applies an aggregate function over the map grouping results into a map based on the specific key and value groupBy functions.\n+     * Aggregate results are allowed to be immutable as they will be replaced in place in the map. A second function\n+     * specifies the initial \"zero\" aggregate value to work with (i.e. Integer.valueOf(0)).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d027b36390cafae8e5dc37256a28117d6ada1da"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3678, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}