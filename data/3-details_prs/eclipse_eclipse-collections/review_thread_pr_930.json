{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjU2MjM4", "number": 930, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowMzoyMFrOEKRqGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxNjozMFrOEKVpWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjEwNTIzOnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowMzoyMFrOGrOX9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowMToyN1rOGrSaug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3NzQ2Mw==", "bodyText": "Hi @prathasirisha, you could move this for loop into a method on the NonMutatingAggregationProcedure class.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r447977463", "createdAt": "2020-06-30T21:03:20Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,14 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2038e7ff5ec57d90b5cc92936035af591205ee15"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MzcwNg==", "bodyText": "Moved it to NonMutatingAggregationProcedure", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448043706", "createdAt": "2020-07-01T00:01:27Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,14 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3NzQ2Mw=="}, "originalCommit": {"oid": "2038e7ff5ec57d90b5cc92936035af591205ee15"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjEwOTM2OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowNDoyOFrOGrOaWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowMTo0N1rOGrSbHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3ODA3NA==", "bodyText": "You could reuse the method you move to NonMutatingAggregationProcedure.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r447978074", "createdAt": "2020-06-30T21:04:28Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +304,14 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        Procedure<T> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2038e7ff5ec57d90b5cc92936035af591205ee15"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MzgwNQ==", "bodyText": "Reused the method from NonMutatingAggregationProcedure", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448043805", "createdAt": "2020-07-01T00:01:47Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +304,14 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        Procedure<T> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);\n+        this.forEachWithOccurrences((each, occurrences) ->\n+        {\n+            for (int i = 0; i < occurrences; i++)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3ODA3NA=="}, "originalCommit": {"oid": "2038e7ff5ec57d90b5cc92936035af591205ee15"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjY0OTg5OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMTowOTozMVrOGrTgOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMTo1OToxNlrOGrUPuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2MTQ5Nw==", "bodyText": "Hi @prathasirisha, if you switch the parameters you can use a method reference to call this.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448061497", "createdAt": "2020-07-01T01:09:31Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(int occurrences, T each)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f82d4fe8ce46e4b23d7531e5446d3766382fc28"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3MzY1OQ==", "bodyText": "Yup, done!", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448073659", "createdAt": "2020-07-01T01:59:16Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(int occurrences, T each)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2MTQ5Nw=="}, "originalCommit": {"oid": "6f82d4fe8ce46e4b23d7531e5446d3766382fc28"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc1NzA5OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxNTozOFrOGrUf3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoyMjoxNlrOGr7M5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ==", "bodyText": "Hi @prathasirisha, I'm struggling on this name as well. On the one hand this name matches the parameters exactly. But I wonder if it would be better to name this repeatForOccurrences. @nikhilnanivadekar @motlin opinions?", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448077791", "createdAt": "2020-07-01T02:15:38Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(T each, int occurrences)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMTkxMQ==", "bodyText": "if @nikhilnanivadekar and @motlin are not in disagreement then let's go with repeatForOccurrences", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448711911", "createdAt": "2020-07-02T02:22:16Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/block/procedure/NonMutatingAggregationProcedure.java", "diffHunk": "@@ -47,4 +47,12 @@ public void value(T each)\n         K key = this.groupBy.valueOf(each);\n         this.map.updateValueWith(key, this.zeroValueFactory, this.nonMutatingAggregator, each);\n     }\n+\n+    public void forEachWithOccurrences(T each, int occurrences)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ=="}, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc1Nzc4OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxNjowMlrOGrUgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjozMDo0OVrOGr7VTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzg5NQ==", "bodyText": "I would shorten the variable name to procedure.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448077895", "createdAt": "2020-07-01T02:16:02Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +303,8 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxNDA2MQ==", "bodyText": "Done", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448714061", "createdAt": "2020-07-02T02:30:49Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/AbstractMutableBagIterable.java", "diffHunk": "@@ -303,7 +303,8 @@ public T max(Comparator<? super T> comparator)\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzg5NQ=="}, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc1ODY0OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxNjozMFrOGrUgvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjozMDo0MVrOGr7VLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3ODAxMg==", "bodyText": "I would shorten the variable name to procedure.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448078012", "createdAt": "2020-07-01T02:16:30Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,8 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxNDAyOA==", "bodyText": "Done.", "url": "https://github.com/eclipse/eclipse-collections/pull/930#discussion_r448714028", "createdAt": "2020-07-02T02:30:41Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/immutable/AbstractImmutableBagIterable.java", "diffHunk": "@@ -67,7 +67,8 @@\n             Function2<? super V, ? super T, ? extends V> nonMutatingAggregator)\n     {\n         MutableMap<K, V> map = UnifiedMap.newMap();\n-        this.forEach(new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator));\n+        NonMutatingAggregationProcedure<T, K, V> nonMutatingAggregationProcedure = new NonMutatingAggregationProcedure<>(map, groupBy, zeroValueFactory, nonMutatingAggregator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3ODAxMg=="}, "originalCommit": {"oid": "36a04361dc022868767de532a037f8f36aefe144"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3686, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}