{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjgzOTgy", "number": 899, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOD_u2yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo1OTowNlrOD_3Hcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU0NTY5OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-code-generator/src/main/resources/impl/list/mutable/primitiveArrayList.stg", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOGakWDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozOTo0OFrOGakWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMTYyOA==", "bodyText": "Why not have a shuffleThis(Random) and have this method call that one? Both methods should have default method implementations though so this can be introduced safely in a minor release.", "url": "https://github.com/eclipse/eclipse-collections/pull/899#discussion_r430511628", "createdAt": "2020-05-26T15:39:48Z", "author": {"login": "donraab"}, "path": "eclipse-collections-code-generator/src/main/resources/impl/list/mutable/primitiveArrayList.stg", "diffHunk": "@@ -1003,6 +1004,25 @@ public class <name>ArrayList extends Abstract<name>Iterable\n         return this;\n     }\n \n+    /**\n+     * Randomly permutes this list in place and returns the same list (this).\n+     *\n+     * Implements the Fisher-Yates shuffle algorithm using {@code java.util.Random} as the source of randomness.\n+     */\n+    @Override\n+    public <name>ArrayList shuffleThis()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d018e4fac7529319ab071978ed5f4328b2b9e57f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU1MTEwOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-code-generator/src/main/resources/api/list/mutablePrimitiveList.stg", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MDozMVrOGakZQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0ODo0MlrOGakwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMjQ1MA==", "bodyText": "This should have a default implementation unless you want this PR to wait for a major release.", "url": "https://github.com/eclipse/eclipse-collections/pull/899#discussion_r430512450", "createdAt": "2020-05-26T15:40:31Z", "author": {"login": "donraab"}, "path": "eclipse-collections-code-generator/src/main/resources/api/list/mutablePrimitiveList.stg", "diffHunk": "@@ -151,6 +151,11 @@ allMethods(type) ::= <<\n  */\n Mutable<name>List sortThis();\n \n+/**\n+ * Randomly permutes this list mutating its contents and returns the same list (this).\n+ */\n+Mutable<name>List shuffleThis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d018e4fac7529319ab071978ed5f4328b2b9e57f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxODQ2NQ==", "bodyText": "Will pull the implementation up to MutablePrimitveList interface as default", "url": "https://github.com/eclipse/eclipse-collections/pull/899#discussion_r430518465", "createdAt": "2020-05-26T15:48:42Z", "author": {"login": "vmzakharov"}, "path": "eclipse-collections-code-generator/src/main/resources/api/list/mutablePrimitiveList.stg", "diffHunk": "@@ -151,6 +151,11 @@ allMethods(type) ::= <<\n  */\n Mutable<name>List sortThis();\n \n+/**\n+ * Randomly permutes this list mutating its contents and returns the same list (this).\n+ */\n+Mutable<name>List shuffleThis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMjQ1MA=="}, "originalCommit": {"oid": "d018e4fac7529319ab071978ed5f4328b2b9e57f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjg4NjgxOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-code-generator/src/main/resources/test/list/mutable/abstractPrimitiveListTestCase.stg", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo1NDoxN1rOGaxoPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo1NDoxN1rOGaxoPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyOTI3Nw==", "bodyText": "This could be replaced with:\n<name>List shuffleOne = list.shuffleThis().toImmutable();\n<name>List shuffleTwo = list.shuffleThis().toImmutable();", "url": "https://github.com/eclipse/eclipse-collections/pull/899#discussion_r430729277", "createdAt": "2020-05-26T21:54:17Z", "author": {"login": "donraab"}, "path": "eclipse-collections-code-generator/src/main/resources/test/list/mutable/abstractPrimitiveListTestCase.stg", "diffHunk": "@@ -320,6 +320,24 @@ public abstract class Abstract<name>ListTestCase extends AbstractMutable<name>Co\n         Assert.assertEquals(<(literal.(type))(\"1\")>, list.get(0)<(wideDelta.(type))>);\n     }\n \n+    @Test\n+    public void shuffleThis()\n+    {\n+        Mutable<name>List list = this.newWith(<[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"]:(literal.(type))(); separator=\", \">);\n+\n+        Mutable<name>List checkList = this.newWith(<[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"]:(literal.(type))(); separator=\", \">);\n+\n+        Mutable<name>List shuffleOne = this.newWith(list.shuffleThis().toArray());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "992aed8c42620099801a99b7f76ef9acb09e77a3"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjg5OTA2OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-code-generator/src/main/resources/test/list/mutable/abstractPrimitiveListTestCase.stg", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo1OTowNlrOGaxv7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo1OTowNlrOGaxv7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczMTI0NQ==", "bodyText": "These would be replaced by:\nAssert.assertEquals(checkList.toBag(), shuffleOne.toBag());\nAssert.assertEquals(checkList.toBag(), shuffleTwo.toBag());", "url": "https://github.com/eclipse/eclipse-collections/pull/899#discussion_r430731245", "createdAt": "2020-05-26T21:59:06Z", "author": {"login": "donraab"}, "path": "eclipse-collections-code-generator/src/main/resources/test/list/mutable/abstractPrimitiveListTestCase.stg", "diffHunk": "@@ -320,6 +320,24 @@ public abstract class Abstract<name>ListTestCase extends AbstractMutable<name>Co\n         Assert.assertEquals(<(literal.(type))(\"1\")>, list.get(0)<(wideDelta.(type))>);\n     }\n \n+    @Test\n+    public void shuffleThis()\n+    {\n+        Mutable<name>List list = this.newWith(<[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"]:(literal.(type))(); separator=\", \">);\n+\n+        Mutable<name>List checkList = this.newWith(<[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"]:(literal.(type))(); separator=\", \">);\n+\n+        Mutable<name>List shuffleOne = this.newWith(list.shuffleThis().toArray());\n+        Mutable<name>List shuffleTwo = this.newWith(list.shuffleThis().toArray());\n+\n+        Assert.assertNotEquals(checkList, shuffleOne);\n+        Assert.assertNotEquals(checkList, shuffleTwo);\n+        Assert.assertNotEquals(shuffleOne, shuffleTwo);\n+\n+        Assert.assertEquals(checkList, shuffleOne.sortThis());\n+        Assert.assertEquals(checkList, shuffleTwo.sortThis());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "992aed8c42620099801a99b7f76ef9acb09e77a3"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3672, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}