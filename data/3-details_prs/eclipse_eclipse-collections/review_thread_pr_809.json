{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjAyOTAx", "number": 809, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowMzo0M1rODldRyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNjowMFrODliVlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjAzNTk0OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/tuple/Triple.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowMzo0M1rOFyXFFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowMzo0M1rOFyXFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1MTI1Mw==", "bodyText": "Remove blank line as this will cause a checkstyle failure.", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388351253", "createdAt": "2020-03-05T15:03:43Z", "author": {"login": "donraab"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/tuple/Triple.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright (c) 2020 Goldman Sachs and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n+ * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */\n+\n+package org.eclipse.collections.api.tuple;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface Triple<T1,T2,T3>\n+        extends Serializable, Comparable<Triple<T1, T2, T3>>\n+{\n+    T1 getOne();\n+\n+    T2 getTwo();\n+\n+    T3 getThree();\n+\n+    Triple<T3,T2,T1> reverse();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjAzNzkwOnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/TripletImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowNDowN1rOFyXGPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowNDowN1rOFyXGPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1MTU0OQ==", "bodyText": "Remove blank line", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388351549", "createdAt": "2020-03-05T15:04:07Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/TripletImpl.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2020 Goldman Sachs and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n+ * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */\n+\n+package org.eclipse.collections.impl.tuple;\n+\n+import java.util.List;\n+\n+import org.eclipse.collections.api.factory.list.ImmutableListFactory;\n+import org.eclipse.collections.api.list.ImmutableList;\n+import org.eclipse.collections.api.tuple.Triple;\n+import org.eclipse.collections.api.tuple.Triplet;\n+import org.eclipse.collections.impl.list.immutable.ImmutableListFactoryImpl;\n+\n+class TripletImpl<T> extends TripleImpl<T, T, T> implements Triplet<T>\n+{\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    TripletImpl(T newOne, T newTwo, T newThree)\n+    {\n+        super(newOne, newTwo, newThree);\n+    }\n+\n+    @Override\n+    public TripletImpl<T> reverse() {\n+        return new TripletImpl<>(getThree(), getTwo(), getOne());\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjA1NjIxOnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/Tuples.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowODozN1rOFyXReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowODozN1rOFyXReg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1NDQyNg==", "bodyText": "Formatting issue", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388354426", "createdAt": "2020-03-05T15:08:37Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/Tuples.java", "diffHunk": "@@ -42,4 +47,13 @@ private Tuples()\n     {\n         return new TwinImpl<>(one, two);\n     }\n+\n+\n+    public static <T1, T2, T3> Triple<T1, T2, T3> triple(T1 one, T2 two, T3 three) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjA1Njc5OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/Tuples.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowODo0NVrOFyXRzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowODo0NVrOFyXRzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1NDUwOQ==", "bodyText": "Formatting issue", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388354509", "createdAt": "2020-03-05T15:08:45Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/tuple/Tuples.java", "diffHunk": "@@ -42,4 +47,13 @@ private Tuples()\n     {\n         return new TwinImpl<>(one, two);\n     }\n+\n+\n+    public static <T1, T2, T3> Triple<T1, T2, T3> triple(T1 one, T2 two, T3 three) {\n+        return new TripleImpl<>(one, two, three);\n+    }\n+\n+    public static <T> Triplet<T> triplet(T one, T two, T three) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjg2MjQyOnYy", "diffSide": "RIGHT", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/tuple/TuplesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNToyM1rOFyfKFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNToyM1rOFyfKFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4MzYwNA==", "bodyText": "nit: spacing is not consistent here", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388483604", "createdAt": "2020-03-05T18:35:23Z", "author": {"login": "sendilkumarn"}, "path": "unit-tests/src/test/java/org/eclipse/collections/impl/tuple/TuplesTest.java", "diffHunk": "@@ -75,8 +108,10 @@ public void putToMap()\n     public void testToString()\n     {\n         Pair<String, String> pair1 = Tuples.pair(\"1\", \"1\");\n-\n         Assert.assertEquals(\"1:1\", pair1.toString());\n+\n+        Triple<String, String, String> triple =Tuples.triple(\"1\",\"2\", \"3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjg2NDg3OnYy", "diffSide": "RIGHT", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/tuple/TuplesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNjowMFrOFyfLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxNDoyNVrOFy6FVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4Mzk3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Triplet<String> triple1 = Tuples.triplet(\"1\", \"1\", \"1\");\n          \n          \n            \n                    Triple<String, String, String> triple1a = Tuples.triple(\"1\", \"1\", \"1\");\n          \n          \n            \n                    Triple<String, String, String> triple2 = Tuples.triple(\"2\", \"2\", \"2\");\n          \n          \n            \n                    Triplet<String> triplet = Tuples.triplet(\"1\", \"1\", \"1\");\n          \n          \n            \n                    Triple<String, String, String> triple1 = Tuples.triple(\"1\", \"1\", \"1\");\n          \n          \n            \n                    Triple<String, String, String> triple2 = Tuples.triple(\"2\", \"2\", \"2\");", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388483975", "createdAt": "2020-03-05T18:36:00Z", "author": {"login": "sendilkumarn"}, "path": "unit-tests/src/test/java/org/eclipse/collections/impl/tuple/TuplesTest.java", "diffHunk": "@@ -61,6 +81,19 @@ public void equalsHashCode()\n         Assert.assertNotEquals(pair1, new Object());\n     }\n \n+    @Test\n+    public void equalsHashCodeTriple()\n+    {\n+        Triplet<String> triple1 = Tuples.triplet(\"1\", \"1\", \"1\");\n+        Triple<String, String, String> triple1a = Tuples.triple(\"1\", \"1\", \"1\");\n+        Triple<String, String, String> triple2 = Tuples.triple(\"2\", \"2\", \"2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNDc1OQ==", "bodyText": "I made the test similar to the test for tuples (pair/twin) so it is consistent", "url": "https://github.com/eclipse/eclipse-collections/pull/809#discussion_r388924759", "createdAt": "2020-03-06T14:14:25Z", "author": {"login": "bmvermeer"}, "path": "unit-tests/src/test/java/org/eclipse/collections/impl/tuple/TuplesTest.java", "diffHunk": "@@ -61,6 +81,19 @@ public void equalsHashCode()\n         Assert.assertNotEquals(pair1, new Object());\n     }\n \n+    @Test\n+    public void equalsHashCodeTriple()\n+    {\n+        Triplet<String> triple1 = Tuples.triplet(\"1\", \"1\", \"1\");\n+        Triple<String, String, String> triple1a = Tuples.triple(\"1\", \"1\", \"1\");\n+        Triple<String, String, String> triple2 = Tuples.triple(\"2\", \"2\", \"2\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4Mzk3NQ=="}, "originalCommit": {"oid": "aeb4f44dcade7bb3a2a063a46c283d5592391002"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3766, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}