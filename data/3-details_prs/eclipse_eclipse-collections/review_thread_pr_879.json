{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzA5MTI4", "number": 879, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTowOVrOD41nSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTozNlrOD41ndQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTI1MjU3OnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTowOVrOGPxfeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTowOVrOGPxfeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE5MjY5Ng==", "bodyText": "This needs to be protected by a call to withWriteLockAndDelegate.", "url": "https://github.com/eclipse/eclipse-collections/pull/879#discussion_r419192696", "createdAt": "2020-05-04T02:25:09Z", "author": {"login": "donraab"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "diffHunk": "@@ -23,4 +36,65 @@\n     void withReadLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n \n     void withWriteLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n+\n+    @Override\n+    default MultiReaderList<T> sortThis(Comparator<? super T> comparator)\n+    {\n+        this.sort(comparator);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> sortThis()\n+    {\n+        return this.sortThis(null);\n+    }\n+\n+    @Override\n+    <V extends Comparable<? super V>> MultiReaderList<T> sortThisBy(Function<? super T, ? extends V> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByInt(IntFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByBoolean(BooleanFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByChar(CharFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByByte(ByteFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByShort(ShortFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByFloat(FloatFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByLong(LongFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByDouble(DoubleFunction<? super T> function);\n+\n+    @Override\n+    default MultiReaderList<T> reverseThis()\n+    {\n+        Collections.reverse(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89744b2f7b03967e815cbada2ccbb2b987659084"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTI1MjgyOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNToyNlrOGPxfng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNToyNlrOGPxfng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE5MjczNA==", "bodyText": "Same as above.", "url": "https://github.com/eclipse/eclipse-collections/pull/879#discussion_r419192734", "createdAt": "2020-05-04T02:25:26Z", "author": {"login": "donraab"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "diffHunk": "@@ -23,4 +36,65 @@\n     void withReadLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n \n     void withWriteLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n+\n+    @Override\n+    default MultiReaderList<T> sortThis(Comparator<? super T> comparator)\n+    {\n+        this.sort(comparator);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> sortThis()\n+    {\n+        return this.sortThis(null);\n+    }\n+\n+    @Override\n+    <V extends Comparable<? super V>> MultiReaderList<T> sortThisBy(Function<? super T, ? extends V> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByInt(IntFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByBoolean(BooleanFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByChar(CharFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByByte(ByteFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByShort(ShortFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByFloat(FloatFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByLong(LongFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByDouble(DoubleFunction<? super T> function);\n+\n+    @Override\n+    default MultiReaderList<T> reverseThis()\n+    {\n+        Collections.reverse(this);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> shuffleThis()\n+    {\n+        Collections.shuffle(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89744b2f7b03967e815cbada2ccbb2b987659084"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTI1MzAxOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTozNlrOGPxfwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMjoyNTozNlrOGPxfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE5Mjc2OA==", "bodyText": "Same as above.", "url": "https://github.com/eclipse/eclipse-collections/pull/879#discussion_r419192768", "createdAt": "2020-05-04T02:25:36Z", "author": {"login": "donraab"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/MultiReaderList.java", "diffHunk": "@@ -23,4 +36,65 @@\n     void withReadLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n \n     void withWriteLockAndDelegate(Procedure<? super MutableList<T>> procedure);\n+\n+    @Override\n+    default MultiReaderList<T> sortThis(Comparator<? super T> comparator)\n+    {\n+        this.sort(comparator);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> sortThis()\n+    {\n+        return this.sortThis(null);\n+    }\n+\n+    @Override\n+    <V extends Comparable<? super V>> MultiReaderList<T> sortThisBy(Function<? super T, ? extends V> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByInt(IntFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByBoolean(BooleanFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByChar(CharFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByByte(ByteFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByShort(ShortFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByFloat(FloatFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByLong(LongFunction<? super T> function);\n+\n+    @Override\n+    MultiReaderList<T> sortThisByDouble(DoubleFunction<? super T> function);\n+\n+    @Override\n+    default MultiReaderList<T> reverseThis()\n+    {\n+        Collections.reverse(this);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> shuffleThis()\n+    {\n+        Collections.shuffle(this);\n+        return this;\n+    }\n+\n+    @Override\n+    default MultiReaderList<T> shuffleThis(Random random)\n+    {\n+        Collections.shuffle(this, random);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89744b2f7b03967e815cbada2ccbb2b987659084"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3657, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}