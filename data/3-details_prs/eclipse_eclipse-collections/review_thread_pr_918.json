{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NjY3Njcz", "number": 918, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1MTo1NlrOEKO8-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1MTo1NlrOEKO8-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTY2MjAyOnYy", "diffSide": "RIGHT", "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/ListIterable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODo1MTo1NlrOGrKGvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTowNDoyNFrOGrKlCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkwNzUxNg==", "bodyText": "The null check is uncovered by tests. Isn't it a bug? I can pass in forEachInBoth(null, procedure) and it silently does nothing?", "url": "https://github.com/eclipse/eclipse-collections/pull/918#discussion_r447907516", "createdAt": "2020-06-30T18:51:56Z", "author": {"login": "motlin"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/ListIterable.java", "diffHunk": "@@ -303,4 +304,22 @@ default int binarySearch(T key)\n      * @since 6.0\n      */\n     ListIterable<T> subList(int fromIndex, int toIndex);\n+\n+    default <T2> void forEachInBoth(ListIterable<T2> other, Procedure2<? super T, ? super T2> procedure)\n+    {\n+        if (other != null)\n+        {\n+            if (this.size() == other.size())\n+            {\n+                this.forEachWithIndex((each, index) -> procedure.value(each, other.get(index)));\n+            }\n+            else\n+            {\n+                throw new IllegalArgumentException(\"Attempt to call forEachInBoth with two Lists of different sizes :\"\n+                        + this.size()\n+                        + ':'\n+                        + other.size());\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "280dbb20e7452b56627bbe6bd884e83d60a0c0dd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkxNTI3NQ==", "bodyText": "Yes, I'll add Objects.requireNonNull(other).", "url": "https://github.com/eclipse/eclipse-collections/pull/918#discussion_r447915275", "createdAt": "2020-06-30T19:04:24Z", "author": {"login": "donraab"}, "path": "eclipse-collections-api/src/main/java/org/eclipse/collections/api/list/ListIterable.java", "diffHunk": "@@ -303,4 +304,22 @@ default int binarySearch(T key)\n      * @since 6.0\n      */\n     ListIterable<T> subList(int fromIndex, int toIndex);\n+\n+    default <T2> void forEachInBoth(ListIterable<T2> other, Procedure2<? super T, ? super T2> procedure)\n+    {\n+        if (other != null)\n+        {\n+            if (this.size() == other.size())\n+            {\n+                this.forEachWithIndex((each, index) -> procedure.value(each, other.get(index)));\n+            }\n+            else\n+            {\n+                throw new IllegalArgumentException(\"Attempt to call forEachInBoth with two Lists of different sizes :\"\n+                        + this.size()\n+                        + ':'\n+                        + other.size());\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkwNzUxNg=="}, "originalCommit": {"oid": "280dbb20e7452b56627bbe6bd884e83d60a0c0dd"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3683, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}