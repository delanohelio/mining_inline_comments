{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NjM2Mzgw", "number": 1000, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo0MToyOVrOEjaEWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo0MTo1NVrOEjaEnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTYyNzE1OnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo0MTozMFrOHRvX7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMDozNToyNVrOHa0RDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDAxMw==", "bodyText": "Is this a new implementation on UnmodifiableBag? If it is then why are we adding it in the same PR? If it is not a new implementation, then why is it needed?", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r488364013", "createdAt": "2020-09-15T03:41:30Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "diffHunk": "@@ -463,4 +467,56 @@ protected Object readResolve()\n     {\n         return this.getMutableBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxMjA4MQ==", "bodyText": "I think this is because the specialization of these methods requires concrete implementations and UnmodifiableBag does not extend the AbstractMutableBagIterable class. Please confirm @prathasirisha. Thanks!", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r495512081", "createdAt": "2020-09-27T01:03:26Z", "author": {"login": "donraab"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "diffHunk": "@@ -463,4 +467,56 @@ protected Object readResolve()\n     {\n         return this.getMutableBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDAxMw=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyMzMyNw==", "bodyText": "That is right @donraab.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r496023327", "createdAt": "2020-09-28T15:11:42Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "diffHunk": "@@ -463,4 +467,56 @@ protected Object readResolve()\n     {\n         return this.getMutableBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDAxMw=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNzQ3OA==", "bodyText": "@prathasirisha can you please check if this and other new implementations are covered by test coverage. If not we should have new unit tests to cover it.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r497817478", "createdAt": "2020-09-30T21:42:14Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "diffHunk": "@@ -463,4 +467,56 @@ protected Object readResolve()\n     {\n         return this.getMutableBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDAxMw=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg4MTM1OQ==", "bodyText": "Hi @nikhilnanivadekar, thank you for reviewing this code again. I was able to confirm that these new methods are covered by running the tests with coverage in my IDE.\nThat said, I am wondering if we should turn back the coverage action build for individual forks. I see a benefit of it in cases like these, where we could simply download the coverage report (from our personal forks) to ensure the new methods are covered before merging them to upstream repo. Let me know your thoughts on this. Happy to make the changes if you too think it is a good idea.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r497881359", "createdAt": "2020-10-01T00:35:25Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/mutable/UnmodifiableBag.java", "diffHunk": "@@ -463,4 +467,56 @@ protected Object readResolve()\n     {\n         return this.getMutableBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDAxMw=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTYyNzgwOnYy", "diffSide": "RIGHT", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/sorted/mutable/UnmodifiableSortedBag.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo0MTo1NVrOHRvYTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMDozNTo0N1rOHa0R0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDEwOQ==", "bodyText": "Same question as UnmodifiableBag.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r488364109", "createdAt": "2020-09-15T03:41:55Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/sorted/mutable/UnmodifiableSortedBag.java", "diffHunk": "@@ -560,4 +564,54 @@ protected Object writeReplace()\n     {\n         return this.getSortedBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyNjM0Mw==", "bodyText": "Same reason as above. In order to optimize these methods, I had to add concrete implementations for these classes as they do not extend from AbstractMutableBagIterable.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r496026343", "createdAt": "2020-09-28T15:14:20Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/sorted/mutable/UnmodifiableSortedBag.java", "diffHunk": "@@ -560,4 +564,54 @@ protected Object writeReplace()\n     {\n         return this.getSortedBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDEwOQ=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxNzA2Ng==", "bodyText": "Same question regarding test coverage", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r497817066", "createdAt": "2020-09-30T21:41:20Z", "author": {"login": "nikhilnanivadekar"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/sorted/mutable/UnmodifiableSortedBag.java", "diffHunk": "@@ -560,4 +564,54 @@ protected Object writeReplace()\n     {\n         return this.getSortedBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDEwOQ=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg4MTU1NA==", "bodyText": "Same response as above.", "url": "https://github.com/eclipse/eclipse-collections/pull/1000#discussion_r497881554", "createdAt": "2020-10-01T00:35:47Z", "author": {"login": "prathasirisha"}, "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/bag/sorted/mutable/UnmodifiableSortedBag.java", "diffHunk": "@@ -560,4 +564,54 @@ protected Object writeReplace()\n     {\n         return this.getSortedBag().selectUnique();\n     }\n+\n+    @Override\n+    public <V> MutableObjectLongMap<V> sumByInt(Function<? super T, ? extends V> groupBy, IntFunction<? super T> function)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDEwOQ=="}, "originalCommit": {"oid": "e0b8baa290e092dc3aae9086656fea149891da0e"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3718, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}