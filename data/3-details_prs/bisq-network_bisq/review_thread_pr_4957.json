{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzI5MDI0", "number": 4957, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowNDoyNlrOFFuxpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODoxMjozMlrOFFu_zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTUzNTcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowNDoyNlrOIGYwoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODozMTowMFrOIGZ2yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODAzMw==", "bodyText": "Is that a debug util or is the \",\" concatenation used in normal cases?", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543568033", "createdAt": "2020-12-15T18:04:26Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -880,4 +880,10 @@ public boolean isSignWitnessTrade(Trade trade) {\n                 !peerHasSignedWitness(trade) &&\n                 tradeAmountIsSufficient(trade.getTradeAmount());\n     }\n+\n+    public String signInfoFromAccount(PaymentAccount paymentAccount) {\n+        var pubKey = keyRing.getSignatureKeyPair().getPublic();\n+        var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n+        return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODI5Ng==", "bodyText": "If debug tool better to rename method to make it more clear and add a comment...", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543568296", "createdAt": "2020-12-15T18:04:49Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -880,4 +880,10 @@ public boolean isSignWitnessTrade(Trade trade) {\n                 !peerHasSignedWitness(trade) &&\n                 tradeAmountIsSufficient(trade.getTradeAmount());\n     }\n+\n+    public String signInfoFromAccount(PaymentAccount paymentAccount) {\n+        var pubKey = keyRing.getSignatureKeyPair().getPublic();\n+        var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n+        return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODAzMw=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NTg3MQ==", "bodyText": "After reviewing the rest I understand now better... I stil would recommend to rename the method so it is more clear its not a normal user method but a special tool... also i am old-school and prefer get prefix... here it could read as intent as well: sign infoFromAccount.... instead of: get signInfo from account", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543575871", "createdAt": "2020-12-15T18:15:57Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -880,4 +880,10 @@ public boolean isSignWitnessTrade(Trade trade) {\n                 !peerHasSignedWitness(trade) &&\n                 tradeAmountIsSufficient(trade.getTradeAmount());\n     }\n+\n+    public String signInfoFromAccount(PaymentAccount paymentAccount) {\n+        var pubKey = keyRing.getSignatureKeyPair().getPublic();\n+        var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n+        return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODAzMw=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NTk5Mg==", "bodyText": "Yes, the naming was not good, changed to getSignInfo...", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543585992", "createdAt": "2020-12-15T18:31:00Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -880,4 +880,10 @@ public boolean isSignWitnessTrade(Trade trade) {\n                 !peerHasSignedWitness(trade) &&\n                 tradeAmountIsSufficient(trade.getTradeAmount());\n     }\n+\n+    public String signInfoFromAccount(PaymentAccount paymentAccount) {\n+        var pubKey = keyRing.getSignatureKeyPair().getPublic();\n+        var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n+        return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2ODAzMw=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTU0MjUxOnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowNjowMlrOIGY0wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTozOTowN1rOIGhIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ==", "bodyText": "Cmd+c is a very common key command, not sure if its better to use a more exotic one so that user do not trigger that accidentally. Prob. no harm by doing that, but confusing...", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543569089", "createdAt": "2020-12-15T18:06:02Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTQ5MQ==", "bodyText": "As its only used for fiat, better move it to fiat class instead of base class", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543569491", "createdAt": "2020-12-15T18:06:35Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NTE1Mg==", "bodyText": "I like adding it here, and I like ctrl+c since it's the common copy key and that's what we're doing here, copying the account info to clipboard.", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543585152", "createdAt": "2020-12-15T18:29:43Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODM2Mg==", "bodyText": "it opens a popup window right?", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543588362", "createdAt": "2020-12-15T18:34:35Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODYyNg==", "bodyText": "or just copy to clipboard?", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543588626", "createdAt": "2020-12-15T18:35:00Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODc2NA==", "bodyText": "sorry have not looked too close to the code base....", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543588764", "createdAt": "2020-12-15T18:35:15Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwNTE0NQ==", "bodyText": "Just copy to clipboard, no need for popup window.", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543705145", "createdAt": "2020-12-15T21:39:07Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/account/content/PaymentAccountsView.java", "diffHunk": "@@ -62,6 +62,8 @@ public void initialize() {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logSigners();\n             } else if (Utilities.isCtrlShiftPressed(KeyCode.U, event)) {\n                 accountAgeWitnessService.getAccountAgeWitnessUtils().logUnsignedSignerPubKeys();\n+            } else if (Utilities.isAltOrCtrlPressed(KeyCode.C, event)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTA4OQ=="}, "originalCommit": {"oid": "de25105fa81f7acc1468cecb1a35f763e9989224"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTU1NjU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowOToxMVrOIGY9Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODozNDowM1rOIGZ-Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MTIxOQ==", "bodyText": "Why not move return into the try block?\nreturn getWitnessByHash(accountAgeWitnessHash)\n                .map(ageWitness -> new Tuple2<>(ageWitness, pubKeyHash))\n                .orElse(null);", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543571219", "createdAt": "2020-12-15T18:09:11Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -886,4 +887,24 @@ public String signInfoFromAccount(PaymentAccount paymentAccount) {\n         var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n         return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());\n     }\n+\n+    public Tuple2<AccountAgeWitness, byte[]> signInfoFromString(String signInfo) {\n+        var parts = signInfo.split(\",\");\n+        if (parts.length != 2){\n+            return null;\n+        }\n+        byte[] pubKeyHash;\n+        Optional<AccountAgeWitness> accountAgeWitness;\n+        try {\n+            var accountAgeWitnessHash = Utilities.decodeFromHex(parts[0]);\n+            pubKeyHash = Utilities.decodeFromHex(parts[1]);\n+            accountAgeWitness = getWitnessByHash(accountAgeWitnessHash);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+\n+        return accountAgeWitness", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NzkxOA==", "bodyText": "Yes, done.", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543587918", "createdAt": "2020-12-15T18:34:03Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -886,4 +887,24 @@ public String signInfoFromAccount(PaymentAccount paymentAccount) {\n         var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n         return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());\n     }\n+\n+    public Tuple2<AccountAgeWitness, byte[]> signInfoFromString(String signInfo) {\n+        var parts = signInfo.split(\",\");\n+        if (parts.length != 2){\n+            return null;\n+        }\n+        byte[] pubKeyHash;\n+        Optional<AccountAgeWitness> accountAgeWitness;\n+        try {\n+            var accountAgeWitnessHash = Utilities.decodeFromHex(parts[0]);\n+            pubKeyHash = Utilities.decodeFromHex(parts[1]);\n+            accountAgeWitness = getWitnessByHash(accountAgeWitnessHash);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+\n+        return accountAgeWitness", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MTIxOQ=="}, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTU2NjI3OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/SignSpecificWitnessWindow.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODoxMToyNFrOIGZC-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyMDoxMFrOIGgcnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MjcyOQ==", "bodyText": "So that use old arbitrators, right? there are none registered anymore. Wouldn't it be better to use mediators or refund agents?", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543572729", "createdAt": "2020-12-15T18:11:24Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/SignSpecificWitnessWindow.java", "diffHunk": "@@ -194,15 +161,24 @@ private void addSuccessContent() {\n \n     @Override\n     protected void addButtons() {\n-        var buttonTuple = add2ButtonsAfterGroup(gridPane, ++rowIndex + 1,\n+        var buttonTuple = add2ButtonsAfterGroup(gridPane, ++rowIndex + 2,\n                 Res.get(\"popup.accountSigning.singleAccountSelect.headline\"), Res.get(\"shared.cancel\"));\n \n         actionButton = buttonTuple.first;\n         actionButton.setDisable(true);\n-        actionButton.setOnAction(e -> selectAccountAgeWitness());\n+        actionButton.setOnAction(e -> importAccountAgeWitness());\n \n         closeButton = (AutoTooltipButton) buttonTuple.second;\n         closeButton.setOnAction(e -> hide());\n+    }\n \n+    private ECKey checkedArbitratorKey() {\n+        var arbitratorKey = arbitratorManager.getRegistrationKey(privateKey.getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5Mzk4MQ==", "bodyText": "It might be but that's a bigger change and I'm not convinced. I think that would add another complication to adding more mediators.", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543693981", "createdAt": "2020-12-15T21:20:10Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/SignSpecificWitnessWindow.java", "diffHunk": "@@ -194,15 +161,24 @@ private void addSuccessContent() {\n \n     @Override\n     protected void addButtons() {\n-        var buttonTuple = add2ButtonsAfterGroup(gridPane, ++rowIndex + 1,\n+        var buttonTuple = add2ButtonsAfterGroup(gridPane, ++rowIndex + 2,\n                 Res.get(\"popup.accountSigning.singleAccountSelect.headline\"), Res.get(\"shared.cancel\"));\n \n         actionButton = buttonTuple.first;\n         actionButton.setDisable(true);\n-        actionButton.setOnAction(e -> selectAccountAgeWitness());\n+        actionButton.setOnAction(e -> importAccountAgeWitness());\n \n         closeButton = (AutoTooltipButton) buttonTuple.second;\n         closeButton.setOnAction(e -> hide());\n+    }\n \n+    private ECKey checkedArbitratorKey() {\n+        var arbitratorKey = arbitratorManager.getRegistrationKey(privateKey.getText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MjcyOQ=="}, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 202}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTU3MTk3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODoxMjozMlrOIGZGNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODozNDo1NVrOIGaA6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MzU1Nw==", "bodyText": "Ah now I see why u use \",\" for concatination....\nA pipe or a static field for it would make it a bit more intuitive... but no worry... being picky ;-)", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543573557", "createdAt": "2020-12-15T18:12:32Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -886,4 +887,24 @@ public String signInfoFromAccount(PaymentAccount paymentAccount) {\n         var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n         return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());\n     }\n+\n+    public Tuple2<AccountAgeWitness, byte[]> signInfoFromString(String signInfo) {\n+        var parts = signInfo.split(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4ODU4Nw==", "bodyText": "Won't change, just easier to read with , as separator.", "url": "https://github.com/bisq-network/bisq/pull/4957#discussion_r543588587", "createdAt": "2020-12-15T18:34:55Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/account/witness/AccountAgeWitnessService.java", "diffHunk": "@@ -886,4 +887,24 @@ public String signInfoFromAccount(PaymentAccount paymentAccount) {\n         var witness = getMyWitness(paymentAccount.getPaymentAccountPayload());\n         return Utilities.bytesAsHexString(witness.getHash()) + \",\" + Utilities.bytesAsHexString(pubKey.getEncoded());\n     }\n+\n+    public Tuple2<AccountAgeWitness, byte[]> signInfoFromString(String signInfo) {\n+        var parts = signInfo.split(\",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MzU1Nw=="}, "originalCommit": {"oid": "4c33f9c9992b308276055de420741bd45a5a4118"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2662, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}