{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzY2MjEx", "number": 4733, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQwMDowNjo0NFrOE0F6oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTo1MTo0NVrOE0Tfpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDU4MzM2OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQwMDowNjo0NFrOHrrCKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQwMDowNjo0NFrOHrrCKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1NTg4MQ==", "bodyText": "I think you forgot here to use a resource string. I guess its: Res.get(\"shared.save\")", "url": "https://github.com/bisq-network/bisq/pull/4733#discussion_r515555881", "createdAt": "2020-11-01T00:06:44Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java", "diffHunk": "@@ -937,6 +906,34 @@ private void activateDisplayPreferences() {\n \n         resetDontShowAgainButton.setOnAction(e -> preferences.resetDontShowAgain());\n \n+        editCustomBtcExplorer.setOnAction(e -> {\n+            EditCustomExplorerWindow urlWindow = new EditCustomExplorerWindow(\"BTC\",\n+                    preferences.getBlockChainExplorer(), preferences.getBlockChainExplorers());\n+            urlWindow\n+                    .actionButtonText(\"Save\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1848305efb539d72fc46138d12004197c8c6c9b7"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDU4MzUzOnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQwMDowNjo1OFrOHrrCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQwMDowNjo1OFrOHrrCPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTU1NTkwMQ==", "bodyText": "I think you forgot here to use a resource string. I guess its: Res.get(\"shared.save\")", "url": "https://github.com/bisq-network/bisq/pull/4733#discussion_r515555901", "createdAt": "2020-11-01T00:06:58Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/main/settings/preferences/PreferencesView.java", "diffHunk": "@@ -937,6 +906,34 @@ private void activateDisplayPreferences() {\n \n         resetDontShowAgainButton.setOnAction(e -> preferences.resetDontShowAgain());\n \n+        editCustomBtcExplorer.setOnAction(e -> {\n+            EditCustomExplorerWindow urlWindow = new EditCustomExplorerWindow(\"BTC\",\n+                    preferences.getBlockChainExplorer(), preferences.getBlockChainExplorers());\n+            urlWindow\n+                    .actionButtonText(\"Save\")\n+                    .onAction(() -> {\n+                        preferences.setBlockChainExplorer(urlWindow.getEditedBlockChainExplorer());\n+                        btcExplorerTextField.setText(preferences.getBlockChainExplorer().name);\n+                    })\n+                    .closeButtonText(Res.get(\"shared.cancel\"))\n+                    .onClose(urlWindow::hide)\n+                    .show();\n+        });\n+\n+        editCustomBsqExplorer.setOnAction(e -> {\n+            EditCustomExplorerWindow urlWindow = new EditCustomExplorerWindow(\"BSQ\",\n+                    preferences.getBsqBlockChainExplorer(), preferences.getBsqBlockChainExplorers());\n+            urlWindow\n+                    .actionButtonText(\"Save\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1848305efb539d72fc46138d12004197c8c6c9b7"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjgwODA3OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/EditCustomExplorerWindow.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTo1MTo0NlrOHr9N4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1Nzo0NVrOHsFZ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1Mzc5Mw==", "bodyText": "Please use our AutoTooltipButton or JFXButton to match the design of all other buttons.", "url": "https://github.com/bisq-network/bisq/pull/4733#discussion_r515853793", "createdAt": "2020-11-02T09:51:46Z", "author": {"login": "ripcurlx"}, "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/EditCustomExplorerWindow.java", "diffHunk": "@@ -0,0 +1,198 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.desktop.main.overlays.windows;\n+\n+import bisq.desktop.components.AutoTooltipLabel;\n+import bisq.desktop.components.InputTextField;\n+import bisq.desktop.main.overlays.Overlay;\n+import bisq.desktop.util.Layout;\n+import bisq.desktop.util.validation.LengthValidator;\n+\n+import bisq.core.locale.Res;\n+import bisq.core.util.validation.UrlInputValidator;\n+\n+import bisq.common.util.Tuple2;\n+\n+import bisq.core.user.BlockChainExplorer;\n+\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.ListView;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.AnchorPane;\n+import javafx.scene.layout.ColumnConstraints;\n+import javafx.scene.layout.GridPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.geometry.VPos;\n+\n+import javafx.event.EventHandler;\n+\n+import javafx.collections.FXCollections;\n+\n+import javafx.util.Callback;\n+\n+import java.util.ArrayList;\n+\n+import static bisq.desktop.util.FormBuilder.*;\n+import static javafx.beans.binding.Bindings.createBooleanBinding;\n+\n+public class EditCustomExplorerWindow extends Overlay<EditCustomExplorerWindow> {\n+\n+    private InputTextField nameInputTextField, txUrlInputTextField, addressUrlInputTextField;\n+    private UrlInputValidator urlInputValidator;\n+    private BlockChainExplorer currentExplorer;\n+    private ListView<BlockChainExplorer> listView;\n+\n+    public EditCustomExplorerWindow(String coin,\n+                                    BlockChainExplorer currentExplorer,\n+                                    ArrayList<BlockChainExplorer> availableExplorers) {\n+        this.currentExplorer = currentExplorer;\n+        listView = new ListView<>();\n+        listView.setItems(FXCollections.observableArrayList(availableExplorers));\n+        headLine = coin + \" \" + Res.get(\"settings.preferences.editCustomExplorer.headline\");\n+    }\n+\n+    public BlockChainExplorer getEditedBlockChainExplorer() {\n+        return new BlockChainExplorer(nameInputTextField.getText(),\n+                txUrlInputTextField.getText(), addressUrlInputTextField.getText());\n+    }\n+\n+    public void show() {\n+\n+        width = 1000;\n+        createGridPane();\n+        addHeadLine();\n+        addContent();\n+        addButtons();\n+\n+        urlInputValidator = new UrlInputValidator();\n+        txUrlInputTextField.setValidator(urlInputValidator);\n+        addressUrlInputTextField.setValidator(urlInputValidator);\n+        nameInputTextField.setValidator(new LengthValidator(1, 50));\n+\n+        actionButton.disableProperty().bind(createBooleanBinding(() -> {\n+                    String name = nameInputTextField.getText();\n+                    String txUrl = txUrlInputTextField.getText();\n+                    String addressUrl = addressUrlInputTextField.getText();\n+\n+                    // Otherwise we require that input is valid\n+                    return !nameInputTextField.getValidator().validate(name).isValid ||\n+                            !txUrlInputTextField.getValidator().validate(txUrl).isValid ||\n+                            !addressUrlInputTextField.getValidator().validate(addressUrl).isValid;\n+                },\n+                nameInputTextField.textProperty(), txUrlInputTextField.textProperty(), addressUrlInputTextField.textProperty()));\n+\n+        applyStyles();\n+        display();\n+    }\n+\n+    @Override\n+    protected void createGridPane() {\n+        gridPane = new GridPane();\n+        gridPane.setHgap(15);\n+        gridPane.setVgap(15);\n+        gridPane.setPadding(new Insets(64, 64, 64, 64));\n+        gridPane.setPrefWidth(width);\n+        ColumnConstraints columnConstraints1 = new ColumnConstraints();\n+        ColumnConstraints columnConstraints2 = new ColumnConstraints();\n+        columnConstraints1.setPercentWidth(45);\n+        columnConstraints2.setPercentWidth(55);\n+        gridPane.getColumnConstraints().addAll(columnConstraints1, columnConstraints2);\n+    }\n+\n+    private void addContent() {\n+        Label mlm = addMultilineLabel(gridPane, rowIndex++, Res.get(\"settings.preferences.editCustomExplorer.description\"), 0);\n+        GridPane.setColumnSpan(mlm, 2);\n+        GridPane.setMargin(mlm, new Insets(40, 0, 0, 0));\n+\n+        Button button = new Button(\">>\");\n+        button.setOnAction(e -> {\n+            BlockChainExplorer blockChainExplorer = listView.getSelectionModel().getSelectedItem();\n+            if (blockChainExplorer != null) {\n+                nameInputTextField.setText(blockChainExplorer.name);\n+                txUrlInputTextField.setText(blockChainExplorer.txUrl);\n+                addressUrlInputTextField.setText(blockChainExplorer.addressUrl);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f5cc99b7f3176dad199e68399c128e3c6ed894f"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzkyNw==", "bodyText": "\ud83d\udc4d Done!", "url": "https://github.com/bisq-network/bisq/pull/4733#discussion_r515987927", "createdAt": "2020-11-02T13:57:45Z", "author": {"login": "jmacxx"}, "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/EditCustomExplorerWindow.java", "diffHunk": "@@ -0,0 +1,198 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.desktop.main.overlays.windows;\n+\n+import bisq.desktop.components.AutoTooltipLabel;\n+import bisq.desktop.components.InputTextField;\n+import bisq.desktop.main.overlays.Overlay;\n+import bisq.desktop.util.Layout;\n+import bisq.desktop.util.validation.LengthValidator;\n+\n+import bisq.core.locale.Res;\n+import bisq.core.util.validation.UrlInputValidator;\n+\n+import bisq.common.util.Tuple2;\n+\n+import bisq.core.user.BlockChainExplorer;\n+\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.ListView;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.AnchorPane;\n+import javafx.scene.layout.ColumnConstraints;\n+import javafx.scene.layout.GridPane;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.geometry.VPos;\n+\n+import javafx.event.EventHandler;\n+\n+import javafx.collections.FXCollections;\n+\n+import javafx.util.Callback;\n+\n+import java.util.ArrayList;\n+\n+import static bisq.desktop.util.FormBuilder.*;\n+import static javafx.beans.binding.Bindings.createBooleanBinding;\n+\n+public class EditCustomExplorerWindow extends Overlay<EditCustomExplorerWindow> {\n+\n+    private InputTextField nameInputTextField, txUrlInputTextField, addressUrlInputTextField;\n+    private UrlInputValidator urlInputValidator;\n+    private BlockChainExplorer currentExplorer;\n+    private ListView<BlockChainExplorer> listView;\n+\n+    public EditCustomExplorerWindow(String coin,\n+                                    BlockChainExplorer currentExplorer,\n+                                    ArrayList<BlockChainExplorer> availableExplorers) {\n+        this.currentExplorer = currentExplorer;\n+        listView = new ListView<>();\n+        listView.setItems(FXCollections.observableArrayList(availableExplorers));\n+        headLine = coin + \" \" + Res.get(\"settings.preferences.editCustomExplorer.headline\");\n+    }\n+\n+    public BlockChainExplorer getEditedBlockChainExplorer() {\n+        return new BlockChainExplorer(nameInputTextField.getText(),\n+                txUrlInputTextField.getText(), addressUrlInputTextField.getText());\n+    }\n+\n+    public void show() {\n+\n+        width = 1000;\n+        createGridPane();\n+        addHeadLine();\n+        addContent();\n+        addButtons();\n+\n+        urlInputValidator = new UrlInputValidator();\n+        txUrlInputTextField.setValidator(urlInputValidator);\n+        addressUrlInputTextField.setValidator(urlInputValidator);\n+        nameInputTextField.setValidator(new LengthValidator(1, 50));\n+\n+        actionButton.disableProperty().bind(createBooleanBinding(() -> {\n+                    String name = nameInputTextField.getText();\n+                    String txUrl = txUrlInputTextField.getText();\n+                    String addressUrl = addressUrlInputTextField.getText();\n+\n+                    // Otherwise we require that input is valid\n+                    return !nameInputTextField.getValidator().validate(name).isValid ||\n+                            !txUrlInputTextField.getValidator().validate(txUrl).isValid ||\n+                            !addressUrlInputTextField.getValidator().validate(addressUrl).isValid;\n+                },\n+                nameInputTextField.textProperty(), txUrlInputTextField.textProperty(), addressUrlInputTextField.textProperty()));\n+\n+        applyStyles();\n+        display();\n+    }\n+\n+    @Override\n+    protected void createGridPane() {\n+        gridPane = new GridPane();\n+        gridPane.setHgap(15);\n+        gridPane.setVgap(15);\n+        gridPane.setPadding(new Insets(64, 64, 64, 64));\n+        gridPane.setPrefWidth(width);\n+        ColumnConstraints columnConstraints1 = new ColumnConstraints();\n+        ColumnConstraints columnConstraints2 = new ColumnConstraints();\n+        columnConstraints1.setPercentWidth(45);\n+        columnConstraints2.setPercentWidth(55);\n+        gridPane.getColumnConstraints().addAll(columnConstraints1, columnConstraints2);\n+    }\n+\n+    private void addContent() {\n+        Label mlm = addMultilineLabel(gridPane, rowIndex++, Res.get(\"settings.preferences.editCustomExplorer.description\"), 0);\n+        GridPane.setColumnSpan(mlm, 2);\n+        GridPane.setMargin(mlm, new Insets(40, 0, 0, 0));\n+\n+        Button button = new Button(\">>\");\n+        button.setOnAction(e -> {\n+            BlockChainExplorer blockChainExplorer = listView.getSelectionModel().getSelectedItem();\n+            if (blockChainExplorer != null) {\n+                nameInputTextField.setText(blockChainExplorer.name);\n+                txUrlInputTextField.setText(blockChainExplorer.txUrl);\n+                addressUrlInputTextField.setText(blockChainExplorer.addressUrl);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1Mzc5Mw=="}, "originalCommit": {"oid": "2f5cc99b7f3176dad199e68399c128e3c6ed894f"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2686, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}