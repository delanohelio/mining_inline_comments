{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDY1NDgz", "number": 4406, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMDowNToyN1rOEWgmqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODoxMjoyM1rOEWmXZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDM4MzE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/provider/price/PriceFeedService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQyMDowNToyN1rOG916Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxMjowMTozMVrOG96hxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5OTU4Ng==", "bodyText": "Hold on a second, this isn't just changing labels, you're actually changing code here. It looks like you're replacing the timestamp of the actual price data, with the timestamp Bisq updated it from the Pricenode, which is incorrect. This behavior needs to be preserved, for example if a pricenode has an issue and doesn't get data updates, the local Bisq node needs to be able to detect that it's old data and switch to a different Pricenode with recently updated data.", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467499586", "createdAt": "2020-08-08T20:05:27Z", "author": {"login": "wiz"}, "path": "core/src/main/java/bisq/core/provider/price/PriceFeedService.java", "diffHunk": "@@ -400,7 +384,12 @@ public void onSuccess(@Nullable Tuple2<Map<String, Long>, Map<String, MarketPric\n                 UserThread.execute(() -> {\n                     checkNotNull(result, \"Result must not be null at requestAllPrices\");\n                     timeStampMap = result.first;\n-                    epochInSecondAtLastRequest = timeStampMap.get(\"btcAverageTs\");\n+\n+                    // Each currency rate has a different timestamp, depending on when\n+                    // the pricenode aggregate rate was calculated\n+                    // However, the request timestamp is when the pricenode was queried\n+                    epochInMillisAtLastRequest = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "584e516fc445ca920be14cb5aaa696daea2af32c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwMTUyNA==", "bodyText": "Since there is no more BA provider, the btcAverageTs field is basically useless.\nIt is however used here to populate the epochInMillisAtLastRequest timestamp -- which is used in the UI to show when the fiat rates were retrieved.\nBefore, when using BA: this made sense, cause BA was the \"single source of truth\" for all fiat rates, and Poloniex was the source of alt rates.\nNow, when using multiple providers: basically the pricenode itself is the \"provider\", because it aggregates rates from multiple sources for both fiat and alts.\nSo, the closest \"timestamp\" that shows the last time the \"provider\" (pricenode) was polled, is the one in the code snippet above.\nAlternative would be to extract and index every timestamp per exchange rate, then selectively show the right one depending on what currency pair the user selected in the UI. That seems like overkill for what this change tries to achieve. Especially since those \"per exchange rate\" timestamps are very likely the same, cause they all show the point in time when the avg rate was calculated, and they're all calculated when the pricenode is polled (the avg is freshly calculated based on newest data).\nSo I would say, this is the simplest and most pragmatic approach (epochInMillisAtLastRequest = timestamp_when_pricenode_last_successfully_queried).", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467501524", "createdAt": "2020-08-08T20:30:24Z", "author": {"login": "cd2357"}, "path": "core/src/main/java/bisq/core/provider/price/PriceFeedService.java", "diffHunk": "@@ -400,7 +384,12 @@ public void onSuccess(@Nullable Tuple2<Map<String, Long>, Map<String, MarketPric\n                 UserThread.execute(() -> {\n                     checkNotNull(result, \"Result must not be null at requestAllPrices\");\n                     timeStampMap = result.first;\n-                    epochInSecondAtLastRequest = timeStampMap.get(\"btcAverageTs\");\n+\n+                    // Each currency rate has a different timestamp, depending on when\n+                    // the pricenode aggregate rate was calculated\n+                    // However, the request timestamp is when the pricenode was queried\n+                    epochInMillisAtLastRequest = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5OTU4Ng=="}, "originalCommit": {"oid": "584e516fc445ca920be14cb5aaa696daea2af32c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUwMzgzMg==", "bodyText": "The timestamp is not for when the data was updated from the pricenode, that's irrelevant. The timestamp is for the price itself, i.e. when the price was obtained from the provider, or in the case of a weighted average aka index, the time when the index was last updated. Can you please use the timestampSec field for each asset's index?", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467503832", "createdAt": "2020-08-08T21:00:28Z", "author": {"login": "wiz"}, "path": "core/src/main/java/bisq/core/provider/price/PriceFeedService.java", "diffHunk": "@@ -400,7 +384,12 @@ public void onSuccess(@Nullable Tuple2<Map<String, Long>, Map<String, MarketPric\n                 UserThread.execute(() -> {\n                     checkNotNull(result, \"Result must not be null at requestAllPrices\");\n                     timeStampMap = result.first;\n-                    epochInSecondAtLastRequest = timeStampMap.get(\"btcAverageTs\");\n+\n+                    // Each currency rate has a different timestamp, depending on when\n+                    // the pricenode aggregate rate was calculated\n+                    // However, the request timestamp is when the pricenode was queried\n+                    epochInMillisAtLastRequest = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5OTU4Ng=="}, "originalCommit": {"oid": "584e516fc445ca920be14cb5aaa696daea2af32c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU3NTIzNg==", "bodyText": "Done. This field now just stores the \"pricenode query timestamp\", but the timestampSec of each asset is shown in the tooltip (see PR screenshots).", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467575236", "createdAt": "2020-08-09T12:01:31Z", "author": {"login": "cd2357"}, "path": "core/src/main/java/bisq/core/provider/price/PriceFeedService.java", "diffHunk": "@@ -400,7 +384,12 @@ public void onSuccess(@Nullable Tuple2<Map<String, Long>, Map<String, MarketPric\n                 UserThread.execute(() -> {\n                     checkNotNull(result, \"Result must not be null at requestAllPrices\");\n                     timeStampMap = result.first;\n-                    epochInSecondAtLastRequest = timeStampMap.get(\"btcAverageTs\");\n+\n+                    // Each currency rate has a different timestamp, depending on when\n+                    // the pricenode aggregate rate was calculated\n+                    // However, the request timestamp is when the pricenode was queried\n+                    epochInMillisAtLastRequest = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ5OTU4Ng=="}, "originalCommit": {"oid": "584e516fc445ca920be14cb5aaa696daea2af32c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTMyNzExOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/i18n/displayStrings.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODoxMjoyM1rOG98zSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODoxMzoyM1rOG98zow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxMjQ5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            setting.about.apisWithFee=Bisq uses 3rd party APIs for Fiat and Altcoin market prices as well as for mining fee estimation.\n          \n          \n            \n            setting.about.apis=Bisq uses 3rd party APIs for Fiat and Altcoin market prices.\n          \n          \n            \n            +setting.about.apisWithFee=Bisq uses Bisq Price Indices for Fiat and Altcoin market prices, and Bisq Mempool Nodes for mining fee estimation.\n          \n          \n            \n            +setting.about.apis=Bisq uses Bisq Price Indices for Fiat and Altcoin market prices.", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467612490", "createdAt": "2020-08-09T18:12:23Z", "author": {"login": "wiz"}, "path": "core/src/main/resources/i18n/displayStrings.properties", "diffHunk": "@@ -1166,7 +1165,6 @@ setting.about.providers=Data providers\n setting.about.apisWithFee=Bisq uses 3rd party APIs for Fiat and Altcoin market prices as well as for mining fee estimation.\n setting.about.apis=Bisq uses 3rd party APIs for Fiat and Altcoin market prices.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef5b80440cda2eee7de2f5c155eedfaf042cb3dd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxMjU3OQ==", "bodyText": "Trusted Third Parties are security holes \ud83d\ude09", "url": "https://github.com/bisq-network/bisq/pull/4406#discussion_r467612579", "createdAt": "2020-08-09T18:13:23Z", "author": {"login": "wiz"}, "path": "core/src/main/resources/i18n/displayStrings.properties", "diffHunk": "@@ -1166,7 +1165,6 @@ setting.about.providers=Data providers\n setting.about.apisWithFee=Bisq uses 3rd party APIs for Fiat and Altcoin market prices as well as for mining fee estimation.\n setting.about.apis=Bisq uses 3rd party APIs for Fiat and Altcoin market prices.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxMjQ5MA=="}, "originalCommit": {"oid": "ef5b80440cda2eee7de2f5c155eedfaf042cb3dd"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2493, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}