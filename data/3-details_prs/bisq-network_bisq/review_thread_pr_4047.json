{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NjcxODc1", "number": 4047, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowNzozN1rODnHdCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTo1MDoyOVrODr_mHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQzMTc2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/app/BisqExecutable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowNzozN1rOF07OAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowOTowMVrOF07SOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDUxNQ==", "bodyText": "Is there a reason why you labeled it Monitor Shutdown Hook ?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            }, \"Monitor Shutdown Hook \")\n          \n          \n            \n                            }, \"BisqExecutable Shutdown Hook\")", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r391040515", "createdAt": "2020-03-11T15:07:37Z", "author": {"login": "ripcurlx"}, "path": "core/src/main/java/bisq/core/app/BisqExecutable.java", "diffHunk": "@@ -100,6 +101,12 @@ protected void doExecute() {\n         CoreSetup.setup(config);\n         addCapabilities();\n \n+        // exit gracefully on shutdown\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+                    gracefulShutDown(() -> log.info(\"gracefulShutDown complete\"));\n+                }, \"Monitor Shutdown Hook \")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d1f266debe7c07636e816ba206f2d7aeb6105de"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MTU5NA==", "bodyText": "copy and paste... my bad", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r391041594", "createdAt": "2020-03-11T15:09:01Z", "author": {"login": "freimair"}, "path": "core/src/main/java/bisq/core/app/BisqExecutable.java", "diffHunk": "@@ -100,6 +101,12 @@ protected void doExecute() {\n         CoreSetup.setup(config);\n         addCapabilities();\n \n+        // exit gracefully on shutdown\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+                    gracefulShutDown(() -> log.info(\"gracefulShutDown complete\"));\n+                }, \"Monitor Shutdown Hook \")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MDUxNQ=="}, "originalCommit": {"oid": "6d1f266debe7c07636e816ba206f2d7aeb6105de"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDU0Mjk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTo0MjoxNVrOF8pujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMzozNzoxNVrOF9Epkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MjU0Mg==", "bodyText": "Is there a specific reason why you used 10 milliseconds before triggering the complete handler?", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399142542", "createdAt": "2020-03-27T09:42:15Z", "author": {"login": "ripcurlx"}, "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "diffHunk": "@@ -221,8 +224,25 @@ public void shutDown(@Nullable Runnable completeHandler) {\n         log.info(\"Remove open offers at shutDown. Number of open offers: {}\", size);\n         if (offerBookService.isBootstrapped() && size > 0) {\n             openOffers.forEach(openOffer -> offerBookService.removeOfferAtShutDown(openOffer.getOffer().getOfferPayload()));\n+\n+            // wait for offers to be removed, offerBookService::removeOfferAtShutdown may create threads to remove offers...\n+            LocalTime timeout = LocalTime.now().plus(Duration.ofSeconds(15));\n+            while (!openOffers.getList().isEmpty()) {\n+                // check timeout\n+                if (timeout.isBefore(LocalTime.now())) {\n+                    log.error(\"Could not remove all offers within timeout (\" + openOffers.size() + \" offers remaining). Moving on.\");\n+                    break;\n+                }\n+                try {\n+                    // reduce system load\n+                    Thread.sleep(10);\n+                } catch (InterruptedException e) {\n+                    // ignore\n+                }\n+            }\n+\n             if (completeHandler != null)\n-                UserThread.runAfter(completeHandler, size * 200 + 500, TimeUnit.MILLISECONDS);\n+                UserThread.runAfter(completeHandler, 10, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0678fc9c62c4f0abdf544da019c0a09422c5b92"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU4MzYzNQ==", "bodyText": "In fact after digging into this again, I believe it is best to actually revert this change. We do not have any means of checking whether offers have been taken down already. Syncing that up would mean that we need to alter a whole lot of \"stopping\" business logic in the code. Although, exactly that is due someday, it is imho not necessary now.", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399583635", "createdAt": "2020-03-27T23:37:15Z", "author": {"login": "freimair"}, "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "diffHunk": "@@ -221,8 +224,25 @@ public void shutDown(@Nullable Runnable completeHandler) {\n         log.info(\"Remove open offers at shutDown. Number of open offers: {}\", size);\n         if (offerBookService.isBootstrapped() && size > 0) {\n             openOffers.forEach(openOffer -> offerBookService.removeOfferAtShutDown(openOffer.getOffer().getOfferPayload()));\n+\n+            // wait for offers to be removed, offerBookService::removeOfferAtShutdown may create threads to remove offers...\n+            LocalTime timeout = LocalTime.now().plus(Duration.ofSeconds(15));\n+            while (!openOffers.getList().isEmpty()) {\n+                // check timeout\n+                if (timeout.isBefore(LocalTime.now())) {\n+                    log.error(\"Could not remove all offers within timeout (\" + openOffers.size() + \" offers remaining). Moving on.\");\n+                    break;\n+                }\n+                try {\n+                    // reduce system load\n+                    Thread.sleep(10);\n+                } catch (InterruptedException e) {\n+                    // ignore\n+                }\n+            }\n+\n             if (completeHandler != null)\n-                UserThread.runAfter(completeHandler, size * 200 + 500, TimeUnit.MILLISECONDS);\n+                UserThread.runAfter(completeHandler, 10, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MjU0Mg=="}, "originalCommit": {"oid": "f0678fc9c62c4f0abdf544da019c0a09422c5b92"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDU0Njg5OnYy", "diffSide": "RIGHT", "path": "p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTo0MzoyN1rOF8pxHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTo0MzoyN1rOF8pxHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0MzE5OQ==", "bodyText": "NIT: I think we decided at some point not to use conditionals within one line anymore", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399143199", "createdAt": "2020-03-27T09:43:27Z", "author": {"login": "ripcurlx"}, "path": "p2p/src/main/java/bisq/network/p2p/network/TorNetworkNode.java", "diffHunk": "@@ -187,6 +187,7 @@ private BooleanProperty torNetworkNodeShutDown() {\n                 long ts = System.currentTimeMillis();\n                 log.debug(\"Shutdown torNetworkNode\");\n                 try {\n+                    if (tor == null) tor = Tor.getDefault();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e4af51a1bd1514aeb5b6af3fe51f2c883f21e56"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDU3MzEwOnYy", "diffSide": "RIGHT", "path": "p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTo1MDoyOVrOF8qBNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxMDozNzowN1rOF9IhcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0NzMxNg==", "bodyText": "Is there a specific reason why we don't want to have this in our logs anymore?", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399147316", "createdAt": "2020-03-27T09:50:29Z", "author": {"login": "ripcurlx"}, "path": "p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java", "diffHunk": "@@ -225,7 +225,7 @@ public void onSuccess(Connection connection) {\n                 }\n \n                 public void onFailure(@NotNull Throwable throwable) {\n-                    log.info(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());\n+                    log.debug(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "546719deadc658775761a98f50fac75647d27aa4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY0NzA4OQ==", "bodyText": "this logline is only triggered in a very limited and rare set of situations. One of them being after tor has been shutdown already (but not if tor is gone without a trigger from Bisq). Plus, this log line does not help support. Iff the info is necessary, --logLevel=DEBUG is there.\nGenerally, log outputs are scattered throughout the p2p package. I am currently working on a battle plan to refactor the message handling in order to get more reliability and control over what happens (we do have a lost message every now and then, and I found hints on why that is).", "url": "https://github.com/bisq-network/bisq/pull/4047#discussion_r399647089", "createdAt": "2020-03-28T10:37:07Z", "author": {"login": "freimair"}, "path": "p2p/src/main/java/bisq/network/p2p/network/NetworkNode.java", "diffHunk": "@@ -225,7 +225,7 @@ public void onSuccess(Connection connection) {\n                 }\n \n                 public void onFailure(@NotNull Throwable throwable) {\n-                    log.info(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());\n+                    log.debug(\"onFailure at sendMessage: peersNodeAddress={}\\n\\tmessage={}\\n\\tthrowable={}\", peersNodeAddress, networkEnvelope.getClass().getSimpleName(), throwable.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE0NzMxNg=="}, "originalCommit": {"oid": "546719deadc658775761a98f50fac75647d27aa4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2556, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}