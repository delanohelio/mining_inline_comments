{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MDI1NDEy", "number": 4997, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNTowNTo0M1rOFI8utg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMzo1OTozNlrOFJTGRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI3OTI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/model/RawTransactionInput.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNTowNTo0M1rOILJEOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNjozMDoxNVrOILL6fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1Mzc4NQ==", "bodyText": "I would reformat the method javadoc with some minor grammar changes:\n    /**\n     * Holds the relevant data for the connected output for a tx input.\n     * @param index  the index of the parentTransaction\n     * @param parentTransaction  the spending output tx, not the parent tx of the input\n     * @param value  the number of satoshis being spent\n     */", "url": "https://github.com/bisq-network/bisq/pull/4997#discussion_r548553785", "createdAt": "2020-12-24T15:05:43Z", "author": {"login": "ghubstan"}, "path": "core/src/main/java/bisq/core/btc/model/RawTransactionInput.java", "diffHunk": "@@ -27,12 +27,16 @@\n \n import javax.annotation.concurrent.Immutable;\n \n+/**\n+ * Holds the relevant data for the connected output for a tx input.\n+ * ParentTransaction means here the spending tx, the tx of the output not the parentTransaction of the input itself.\n+ * Also index refers to the index of the spending output\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c792a2916c2186b48502cc008956300ef2b9727"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODYwMDQ0NA==", "bodyText": "Thanks, will do a commit a bit later (in the middle of some other works atm...)", "url": "https://github.com/bisq-network/bisq/pull/4997#discussion_r548600444", "createdAt": "2020-12-24T16:30:15Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/btc/model/RawTransactionInput.java", "diffHunk": "@@ -27,12 +27,16 @@\n \n import javax.annotation.concurrent.Immutable;\n \n+/**\n+ * Holds the relevant data for the connected output for a tx input.\n+ * ParentTransaction means here the spending tx, the tx of the output not the parentTransaction of the input itself.\n+ * Also index refers to the index of the spending output\n+ */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1Mzc4NQ=="}, "originalCommit": {"oid": "0c792a2916c2186b48502cc008956300ef2b9727"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1Mjk0NDA2OnYy", "diffSide": "LEFT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMzo1OTozNlrOILnA4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMzo1OTozNlrOILnA4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0NDQ0OA==", "bodyText": "\ud83d\udc4d @chimp1984 thanks for finding this!  \ud83d\ude05", "url": "https://github.com/bisq-network/bisq/pull/4997#discussion_r549044448", "createdAt": "2020-12-26T23:59:36Z", "author": {"login": "jmacxx"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1111,15 +1111,7 @@ public Transaction traderSignAndFinalizeDisputedPayoutTx(byte[] depositTxSeriali\n         byte[] buyerPubKey = ECKey.fromPublicOnly(Utils.HEX.decode(buyerPubKeyAsHex)).getPubKey();\n         byte[] sellerPubKey = ECKey.fromPublicOnly(Utils.HEX.decode(sellerPubKeyAsHex)).getPubKey();\n         Script redeemScript = get2of2MultiSigRedeemScript(buyerPubKey, sellerPubKey);\n-\n-        Script hashedMultiSigOutputScript = get2of2MultiSigOutputScript(buyerPubKey, sellerPubKey,\n-                hashedMultiSigOutputIsLegacy);\n-\n         Coin msOutputValue = buyerPayoutAmount.add(sellerPayoutAmount).add(txFee);\n-        TransactionOutput hashedMultiSigOutput = new TransactionOutput(params, null, msOutputValue, hashedMultiSigOutputScript.getProgram());\n-        Transaction depositTx = new Transaction(params);\n-        depositTx.addOutput(hashedMultiSigOutput);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c792a2916c2186b48502cc008956300ef2b9727"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2617, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}