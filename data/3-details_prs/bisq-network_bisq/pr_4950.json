{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5OTMxMTQy", "number": 4950, "title": "Improve offer publishing", "bodyText": "Change handling of delay at republishing\nThe delay was too long. Some users have 100 - 200\noffers and with the 700 ms delay it takes 70-140 sec.\nThis causes more stress for the network and UI due\npermanent adding of offers. We decreased delay to 30 ms per offer.\nSo with 200 offers it would be about 6 sec. Maybe we could reduce\nit even further but as it is hard to test in the live network with\nso many offers it is better to not be too radical with the change.", "createdAt": "2020-12-15T02:33:05Z", "url": "https://github.com/bisq-network/bisq/pull/4950", "merged": true, "mergeCommit": {"oid": "94cf02303eda0642e0369a0213f84d2f29055e23"}, "closed": true, "closedAt": "2020-12-29T18:51:22Z", "author": {"login": "chimp1984"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmQ62TgH2gAyNTM5OTMxMTQyOmI1NTMxMzA1NGE1OTUyZTA1NGE2OTVhMThkOWY2NmI3NmMzODYxOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdo-UqEgFqTU1NzgzOTU3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b55313054a5952e054a695a18d9f66b76c38619a", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/b55313054a5952e054a695a18d9f66b76c38619a", "committedDate": "2020-12-15T02:29:07Z", "message": "Cleanup\n\nRemove debug and trace logs\nAdd curly brackets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bfbd0fd797e03ef5261fe82e7c5572018518608", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/7bfbd0fd797e03ef5261fe82e7c5572018518608", "committedDate": "2020-12-15T02:32:35Z", "message": "Change handling of delay at republishing\n\nThe delay was too long. Some users have 100 - 200\noffers and with the 700 ms delay it takes 70-140 sec.\nThis causes more stress for the network and UI due\npermanent adding of offers. We decreased delay to 30 ms per offer.\nSo with 200 offers it would be about 6 sec. Maybe we could reduce\nit even further but as it is hard to test in the live network with\nso many offers it is better to not be too radical with the change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTk0ODMx", "url": "https://github.com/bisq-network/bisq/pull/4950#pullrequestreview-553594831", "createdAt": "2020-12-16T11:26:52Z", "commit": {"oid": "7bfbd0fd797e03ef5261fe82e7c5572018518608"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyNjo1M1rOIHAqVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTozNzoyMVrOIHBCRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMTc4Mw==", "bodyText": "Shouldn't this be !openOffer.isDeactivated() since it's being republished. That was the check before this change.", "url": "https://github.com/bisq-network/bisq/pull/4950#discussion_r544221783", "createdAt": "2020-12-16T11:26:53Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "diffHunk": "@@ -871,39 +871,46 @@ private void maybeUpdatePersistedOffers() {\n     ///////////////////////////////////////////////////////////////////////////////////////////\n \n     private void republishOffers() {\n-        int size = openOffers.size();\n-        final ArrayList<OpenOffer> openOffersList = new ArrayList<>(openOffers.getList());\n-        if (!stopped) {\n-            stopPeriodicRefreshOffersTimer();\n-            for (int i = 0; i < size; i++) {\n-                // we delay to avoid reaching throttle limits\n-\n-                long delay = 700;\n-                final long minDelay = (i + 1) * delay;\n-                final long maxDelay = (i + 2) * delay;\n-                final OpenOffer openOffer = openOffersList.get(i);\n-                UserThread.runAfterRandomDelay(() -> {\n-                    if (openOffers.contains(openOffer)) {\n-                        String id = openOffer.getId();\n-                        if (id != null && !openOffer.isDeactivated())\n-                            republishOffer(openOffer);\n-                    }\n+        if (stopped) {\n+            return;\n+        }\n \n-                }, minDelay, maxDelay, TimeUnit.MILLISECONDS);\n-            }\n-        } else {\n-            log.debug(\"We have stopped already. We ignore that republishOffers call.\");\n+        List<OpenOffer> openOffersList = new ArrayList<>(openOffers.getList());\n+        republishOffers(openOffersList);\n+\n+        stopPeriodicRefreshOffersTimer();\n+    }\n+\n+    private void republishOffers(List<OpenOffer> list) {\n+        if (list.isEmpty()) {\n+            return;\n         }\n+\n+        OpenOffer openOffer = list.remove(0);\n+        if (!openOffers.contains(openOffer) || openOffer.isDeactivated()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfbd0fd797e03ef5261fe82e7c5572018518608"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyNzkxMA==", "bodyText": "I don't understand the reason for the delay, all offers will be prepared to republish recursively, then during the recursion unwind they will all get this call so they delay is likely less than 1ms between each offer republish, but all the calls to republish will happen 30ms later. I think this is not much different to republishing without delay.\nThe previous version had a random delay, but it was a multiple of the number of orders and 700, so 200 orders ran into 140 seconds republish time and each offer would be spaced out in that time.", "url": "https://github.com/bisq-network/bisq/pull/4950#discussion_r544227910", "createdAt": "2020-12-16T11:37:21Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/offer/OpenOfferManager.java", "diffHunk": "@@ -871,39 +871,46 @@ private void maybeUpdatePersistedOffers() {\n     ///////////////////////////////////////////////////////////////////////////////////////////\n \n     private void republishOffers() {\n-        int size = openOffers.size();\n-        final ArrayList<OpenOffer> openOffersList = new ArrayList<>(openOffers.getList());\n-        if (!stopped) {\n-            stopPeriodicRefreshOffersTimer();\n-            for (int i = 0; i < size; i++) {\n-                // we delay to avoid reaching throttle limits\n-\n-                long delay = 700;\n-                final long minDelay = (i + 1) * delay;\n-                final long maxDelay = (i + 2) * delay;\n-                final OpenOffer openOffer = openOffersList.get(i);\n-                UserThread.runAfterRandomDelay(() -> {\n-                    if (openOffers.contains(openOffer)) {\n-                        String id = openOffer.getId();\n-                        if (id != null && !openOffer.isDeactivated())\n-                            republishOffer(openOffer);\n-                    }\n+        if (stopped) {\n+            return;\n+        }\n \n-                }, minDelay, maxDelay, TimeUnit.MILLISECONDS);\n-            }\n-        } else {\n-            log.debug(\"We have stopped already. We ignore that republishOffers call.\");\n+        List<OpenOffer> openOffersList = new ArrayList<>(openOffers.getList());\n+        republishOffers(openOffersList);\n+\n+        stopPeriodicRefreshOffersTimer();\n+    }\n+\n+    private void republishOffers(List<OpenOffer> list) {\n+        if (list.isEmpty()) {\n+            return;\n         }\n+\n+        OpenOffer openOffer = list.remove(0);\n+        if (!openOffers.contains(openOffer) || openOffer.isDeactivated()) {\n+            republishOffers(list);\n+        }\n+\n+        republishOffer(openOffer,\n+                () -> UserThread.runAfter(() -> republishOffers(list),\n+                        30, TimeUnit.MILLISECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bfbd0fd797e03ef5261fe82e7c5572018518608"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e71575afd0d823357753a11e7250ce490e1e2f5", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/8e71575afd0d823357753a11e7250ce490e1e2f5", "committedDate": "2020-12-16T13:24:48Z", "message": "Add else case for check for offer is in source list and deActivate state\nInvert the if branch so the normal case is first\nAdd comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f53e0c0126efa994bf0e5c72e6534821e2892e", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/24f53e0c0126efa994bf0e5c72e6534821e2892e", "committedDate": "2020-12-16T14:01:12Z", "message": "Add flush method.\nCall flush at openOfferManager shutdown.\nRemove unused method.\n\nForce broadcaster to send out immediately, otherwise we could\nhave a 2 sec delay until the bundled messages sent out."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1049b7da7714bd1768115fdb9c7057d6b2982d43", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/1049b7da7714bd1768115fdb9c7057d6b2982d43", "committedDate": "2020-12-16T14:04:36Z", "message": "Remove delay for publishing\n\nThis version is intended to be deployed to a power user to actually\ntry it out live as testing it with real conditions is very difficult."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83e620d462b30700079f9d23d4985983070eade6", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/83e620d462b30700079f9d23d4985983070eade6", "committedDate": "2020-12-16T15:08:55Z", "message": "Fix missing param in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NDg1MzA2", "url": "https://github.com/bisq-network/bisq/pull/4950#pullrequestreview-554485306", "createdAt": "2020-12-17T10:48:35Z", "commit": {"oid": "83e620d462b30700079f9d23d4985983070eade6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d0fa789bad527e7eb645cc73df7f9662ce5551", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/c5d0fa789bad527e7eb645cc73df7f9662ce5551", "committedDate": "2020-12-23T02:08:42Z", "message": "Move stopPeriodicRefreshOffersTimer before processListForRepublishOffers\n\nThe periodicRefreshOffersTimer gets started at offer publishing.\nBefore the stopPeriodicRefreshOffersTimer got overwritten by the start in offer\npublishing so it did not had any effect beside that we restarted it. Now we\nprocess offer publishing without delay and a stop after the call would stop\nthe refresh timer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODM5NTcz", "url": "https://github.com/bisq-network/bisq/pull/4950#pullrequestreview-557839573", "createdAt": "2020-12-23T12:30:53Z", "commit": {"oid": "c5d0fa789bad527e7eb645cc73df7f9662ce5551"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3468, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}