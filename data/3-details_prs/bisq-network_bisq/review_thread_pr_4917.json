{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzEyNzk5", "number": 4917, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozMzowMVrOFCzBeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozMzowMVrOFCzBeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDc3NDM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/offer/OfferUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozMzowMlrOICIcNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODozMzowMlrOICIcNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwNjM1OQ==", "bodyText": "Maybe it would be easier to read if that is used as the else branch for line 421, as this is the only case where errorMsg can be null.", "url": "https://github.com/bisq-network/bisq/pull/4917#discussion_r539106359", "createdAt": "2020-12-09T08:33:02Z", "author": {"login": "ripcurlx"}, "path": "core/src/main/java/bisq/core/offer/OfferUtil.java", "diffHunk": "@@ -383,4 +387,53 @@ public void validateOfferData(double buyerSecurityDeposit,\n             return Optional.empty();\n         }\n     }\n+\n+    public static Optional<String> getInvalidMakerFeeTxErrorMessage(Offer offer, BtcWalletService btcWalletService) {\n+        Transaction makerFeeTx = btcWalletService.getTransaction(offer.getOfferFeePaymentTxId());\n+        if (makerFeeTx == null) {\n+            return Optional.empty();\n+        }\n+\n+        String errorMsg = null;\n+        String header = \"The offer with offer ID '\" + offer.getShortId() +\n+                \"' has an invalid maker fee transaction.\\n\\n\";\n+        String spendingTransaction = null;\n+        String extraString = \"\\nYou have to remove that offer to avoid failed trades.\\n\" +\n+                \"If this happened because of a bug please contact the Bisq developers \" +\n+                \"and you can request reimbursement for the lost maker fee.\";\n+        if (makerFeeTx.getOutputs().size() > 1) {\n+            // Our output to fund the deposit tx is at index 1\n+            TransactionOutput output = makerFeeTx.getOutput(1);\n+            TransactionInput spentByTransactionInput = output.getSpentBy();\n+            if (spentByTransactionInput != null) {\n+                spendingTransaction = spentByTransactionInput.getConnectedTransaction() != null ?\n+                        spentByTransactionInput.getConnectedTransaction().toString() :\n+                        \"null\";\n+                // We this is an exceptional case we do not translate that error msg.\n+                errorMsg = \"The output of the maker fee tx is already spent.\\n\" +\n+                        extraString +\n+                        \"\\n\\nTransaction input which spent the reserved funds for that offer: '\" +\n+                        spentByTransactionInput.getConnectedTransaction().getTxId().toString() + \":\" +\n+                        (spentByTransactionInput.getConnectedOutput() != null ?\n+                                spentByTransactionInput.getConnectedOutput().getIndex() + \"'\" :\n+                                \"null'\");\n+                log.error(\"spentByTransactionInput {}\", spentByTransactionInput);\n+            }\n+        } else {\n+            errorMsg = \"The maker fee tx is invalid as it does not has at least 2 outputs.\" + extraString +\n+                    \"\\nMakerFeeTx=\" + makerFeeTx.toString();\n+        }\n+\n+        if (errorMsg == null) {\n+            return Optional.empty();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "960b835f3fbf08e672e636cfe0cf157e84b623c6"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2649, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}