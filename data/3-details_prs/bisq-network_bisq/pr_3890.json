{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzY0NzU5", "number": 3890, "title": "Improve readability of the daily burnt BSQ chart", "bodyText": "Relevant issue: #3753\nThese commits are about improving readability of the daily burnt BSQ chart. It is done by introducing a 'Zoom to inliers' toggle, which when active zooms in on inliers, and by introducing a moving average. The zooming feature is automatic and should be at least somewhat robust to new trends. The moving average contextualizes the large peaks and gullies and generally improves interpretability of this noisy series. Also, the charts' Y axes are set to include 0, most notably in the monthly issued BSQ chart.\nI have provided details in the commit messages.\nThe numerous changes to the SupplyView class are contained in a single commit, which I realise is not comfortable to review. Ideally I would have refactored in a separate commit, but I wasn't sure how I want to refactor until many of the changes were already implemented.\nBelow are screenshots illustrating changes to the daily burnt BSQ chart:\nThis is before changes:\n\nThis is a GIF slideshow (2 frames) of the zoom toggle being toggled in the new chart:\n\nThis took much longer to implement than expected. There were quite a few nuances I didn't anticipate.\nFurthermore, some of the more minute cosmetic choices I made (or didn't make) might not be great, because since the holidays (and for a few weeks more) I'm using a pretty old machine, which makes the ROI of iterating less significant GUI changes prohibitvely low.", "createdAt": "2020-01-11T21:04:37Z", "url": "https://github.com/bisq-network/bisq/pull/3890", "merged": true, "mergeCommit": {"oid": "a29d4903a62ae1f5d9302bb31877d53dcf8da54c"}, "closed": true, "closedAt": "2020-01-23T14:18:47Z", "author": {"login": "dmos62"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb678rqgFqTM0Mzk5MjU0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9LE4mAFqTM0NzMyOTM5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzOTkyNTQw", "url": "https://github.com/bisq-network/bisq/pull/3890#pullrequestreview-343992540", "createdAt": "2020-01-16T15:21:37Z", "commit": {"oid": "884c8cbdab4aef73942858e3e18a375acc291c86"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNToyMTozN1rOFedHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNToyNDoyMVrOFedNbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3ODU4Nw==", "bodyText": "Not used in code", "url": "https://github.com/bisq-network/bisq/pull/3890#discussion_r367478587", "createdAt": "2020-01-16T15:21:37Z", "author": {"login": "ripcurlx"}, "path": "common/src/main/java/bisq/common/util/DoubleSummaryStatisticsWithStdDev.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.common.util;\n+\n+import bisq.common.util.Tuple2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "884c8cbdab4aef73942858e3e18a375acc291c86"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ3ODY4Ng==", "bodyText": "Not used in code", "url": "https://github.com/bisq-network/bisq/pull/3890#discussion_r367478686", "createdAt": "2020-01-16T15:21:50Z", "author": {"login": "ripcurlx"}, "path": "common/src/main/java/bisq/common/util/DoubleSummaryStatisticsWithStdDev.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.common.util;\n+\n+import bisq.common.util.Tuple2;\n+\n+import java.util.DoubleSummaryStatistics;\n+import bisq.common.util.DoubleSummaryStatisticsWithStdDev;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "884c8cbdab4aef73942858e3e18a375acc291c86"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4MDE3NQ==", "bodyText": "Do you use IntelliJ for development? If yes, please use the formatting functionality that auto sorts and groups the different imports.", "url": "https://github.com/bisq-network/bisq/pull/3890#discussion_r367480175", "createdAt": "2020-01-16T15:24:21Z", "author": {"login": "ripcurlx"}, "path": "desktop/src/main/java/bisq/desktop/main/dao/economy/supply/SupplyView.java", "diffHunk": "@@ -63,16 +70,26 @@\n import java.time.temporal.TemporalAdjusters;\n \n import java.util.Comparator;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n+import java.util.Spliterators.AbstractSpliterator;\n+\n+import java.util.function.BiFunction;\n+import java.util.function.Supplier;\n+import java.util.function.Consumer;\n+\n+import javafx.collections.ListChangeListener;\n \n import static bisq.desktop.util.FormBuilder.addTitledGroupBg;\n import static bisq.desktop.util.FormBuilder.addTopLabelReadOnlyTextField;\n+import static bisq.desktop.util.FormBuilder.addSlideToggleButton;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "884c8cbdab4aef73942858e3e18a375acc291c86"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edec6985734f709500732a46f2d7efe9c7622a48", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/edec6985734f709500732a46f2d7efe9c7622a48", "committedDate": "2020-01-18T13:22:03Z", "message": "Provide an online standard deviation algorithm\n\nThis provides an efficient way to calculate the standard deviation from\na DoubleStream, and is to be used in measuring whether or not a data\npoint on a chart axis is an inlier.\n\nThe Kahan summation algorithm is in a slightly different style, because\nit's a faithful copy of its implementation in JDK 11's\nDoubleSummaryStatistics."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0775aee6cb04eb850f4ee5bf93d61e598791b682", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/0775aee6cb04eb850f4ee5bf93d61e598791b682", "committedDate": "2020-01-18T13:22:55Z", "message": "Provide a way to zoom a chart axis to inliers\n\nThis utility provides ways to zoom in a chart (more specifically its\naxes) on inlier data points. The principal use-case is to restore\nreadability to charts that were distorted by outliers. The first (and\nmaybe the last) chart to use this is the daily burnt BSQ chart under\n'DAO -> Facts and Figures'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6941cf412b0fddd298d685f0d4c9fd6bb32766a", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/c6941cf412b0fddd298d685f0d4c9fd6bb32766a", "committedDate": "2020-01-18T13:24:26Z", "message": "Provide an online moving average algorithm\n\nAllows computing a simple moving average lazily from a Stream, to be\nused in plotting noisy data. Will be used in the daily burnt BSQ chart\nunder 'DAO -> Facts and Figures'. Can be easily modified to compute\nother moving averages, like exponential."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "884c8cbdab4aef73942858e3e18a375acc291c86", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/884c8cbdab4aef73942858e3e18a375acc291c86", "committedDate": "2020-01-11T20:20:13Z", "message": "Improve readability of the daily burnt BSQ chart\n\nRelevant issue thread: #3753\n\nCurrently the daily burnt BSQ chart under 'DAO -> Facts and Figures' is\ndistorted by outliers. This introduces a 'Zoom to inliers' toggle (off\nby default), which, when toggled on, effectively zooms the chart to\ninliers, thus removing the distortion. Also, a moving average is\nplotted, to further improve the chart's readibility.\n\nThe chart is also changed from an area chart to a line chart, on the\npresumption that it was an area chart for cosmetic reasons, but now that\nthere are two series in it (the moving average was added) an area chart\nmakes less sense.\n\nAnother noteworthy change is that the other chart in the screen, monthly\nissued BSQ, has its Y axis set to start at zero, so as to improve\nreadability. This might seem outside the scope of this commit, but the\nother changes involved some refactoring, which involved cleaning up some\nduplicated logic, which involved configuring both of these charts\ntogether, which involved forcing zero to be on the axis.\n\nThis implementation mixes some plotting logic (responsible for zooming\nin on inliers) into the view logic, because I opted to implement said\nzooming as an external manipulation of a chart's axis. I chose this in\nfavor of implementing a new Chart, because it would have required\nincluding multiple large classes (relevant JavaFX's classes can't be\nergonomically extended) to the code base. I presumed that my chosen\nsolution will be easier to maintain.\n\nI am not entirely happy with this choice and can see myself introducing\nsome plotting-related classes to encapsulate creating charts like these,\nthus unmixing plotting logic from view logic. In the meantime this is a\nworking solution, and I plan to continue working on these charts in the\nnear future."}, "afterCommit": {"oid": "1901501a6ba7fd38fc0906aae7a19462c3e21a94", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/1901501a6ba7fd38fc0906aae7a19462c3e21a94", "committedDate": "2020-01-18T13:25:10Z", "message": "Improve readability of the daily burnt BSQ chart\n\nRelevant issue thread: #3753\n\nCurrently the daily burnt BSQ chart under 'DAO -> Facts and Figures' is\ndistorted by outliers. This introduces a 'Zoom to inliers' toggle (off\nby default), which, when toggled on, effectively zooms the chart to\ninliers, thus removing the distortion. Also, a moving average is\nplotted, to further improve the chart's readibility.\n\nThe chart is also changed from an area chart to a line chart, on the\npresumption that it was an area chart for cosmetic reasons, but now that\nthere are two series in it (the moving average was added) an area chart\nmakes less sense.\n\nAnother noteworthy change is that the other chart in the screen, monthly\nissued BSQ, has its Y axis set to start at zero, so as to improve\nreadability. This might seem outside the scope of this commit, but the\nother changes involved some refactoring, which involved cleaning up some\nduplicated logic, which involved configuring both of these charts\ntogether, which involved forcing zero to be on the axis.\n\nThis implementation mixes some plotting logic (responsible for zooming\nin on inliers) into the view logic, because I opted to implement said\nzooming as an external manipulation of a chart's axis. I chose this in\nfavor of implementing a new Chart, because it would have required\nincluding multiple large classes (relevant JavaFX's classes can't be\nergonomically extended) to the code base. I presumed that my chosen\nsolution will be easier to maintain.\n\nI am not entirely happy with this choice and can see myself introducing\nsome plotting-related classes to encapsulate creating charts like these,\nthus unmixing plotting logic from view logic. In the meantime this is a\nworking solution, and I plan to continue working on these charts in the\nnear future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86489e0d7434c44c6e492a46dd1e727c23c6f91f", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/86489e0d7434c44c6e492a46dd1e727c23c6f91f", "committedDate": "2020-01-18T13:35:56Z", "message": "Improve readability of the daily burnt BSQ chart\n\nRelevant issue thread: #3753\n\nCurrently the daily burnt BSQ chart under 'DAO -> Facts and Figures' is\ndistorted by outliers. This introduces a 'Zoom to inliers' toggle (off\nby default), which, when toggled on, effectively zooms the chart to\ninliers, thus removing the distortion. Also, a moving average is\nplotted, to further improve the chart's readibility.\n\nThe chart is also changed from an area chart to a line chart, on the\npresumption that it was an area chart for cosmetic reasons, but now that\nthere are two series in it (the moving average was added) an area chart\nmakes less sense.\n\nAnother noteworthy change is that the other chart in the screen, monthly\nissued BSQ, has its Y axis set to start at zero, so as to improve\nreadability. This might seem outside the scope of this commit, but the\nother changes involved some refactoring, which involved cleaning up some\nduplicated logic, which involved configuring both of these charts\ntogether, which involved forcing zero to be on the axis.\n\nThis implementation mixes some plotting logic (responsible for zooming\nin on inliers) into the view logic, because I opted to implement said\nzooming as an external manipulation of a chart's axis. I chose this in\nfavor of implementing a new Chart, because it would have required\nincluding multiple large classes (relevant JavaFX's classes can't be\nergonomically extended) to the code base. I presumed that my chosen\nsolution will be easier to maintain.\n\nI am not entirely happy with this choice and can see myself introducing\nsome plotting-related classes to encapsulate creating charts like these,\nthus unmixing plotting logic from view logic. In the meantime this is a\nworking solution, and I plan to continue working on these charts in the\nnear future."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1901501a6ba7fd38fc0906aae7a19462c3e21a94", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/1901501a6ba7fd38fc0906aae7a19462c3e21a94", "committedDate": "2020-01-18T13:25:10Z", "message": "Improve readability of the daily burnt BSQ chart\n\nRelevant issue thread: #3753\n\nCurrently the daily burnt BSQ chart under 'DAO -> Facts and Figures' is\ndistorted by outliers. This introduces a 'Zoom to inliers' toggle (off\nby default), which, when toggled on, effectively zooms the chart to\ninliers, thus removing the distortion. Also, a moving average is\nplotted, to further improve the chart's readibility.\n\nThe chart is also changed from an area chart to a line chart, on the\npresumption that it was an area chart for cosmetic reasons, but now that\nthere are two series in it (the moving average was added) an area chart\nmakes less sense.\n\nAnother noteworthy change is that the other chart in the screen, monthly\nissued BSQ, has its Y axis set to start at zero, so as to improve\nreadability. This might seem outside the scope of this commit, but the\nother changes involved some refactoring, which involved cleaning up some\nduplicated logic, which involved configuring both of these charts\ntogether, which involved forcing zero to be on the axis.\n\nThis implementation mixes some plotting logic (responsible for zooming\nin on inliers) into the view logic, because I opted to implement said\nzooming as an external manipulation of a chart's axis. I chose this in\nfavor of implementing a new Chart, because it would have required\nincluding multiple large classes (relevant JavaFX's classes can't be\nergonomically extended) to the code base. I presumed that my chosen\nsolution will be easier to maintain.\n\nI am not entirely happy with this choice and can see myself introducing\nsome plotting-related classes to encapsulate creating charts like these,\nthus unmixing plotting logic from view logic. In the meantime this is a\nworking solution, and I plan to continue working on these charts in the\nnear future."}, "afterCommit": {"oid": "86489e0d7434c44c6e492a46dd1e727c23c6f91f", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/86489e0d7434c44c6e492a46dd1e727c23c6f91f", "committedDate": "2020-01-18T13:35:56Z", "message": "Improve readability of the daily burnt BSQ chart\n\nRelevant issue thread: #3753\n\nCurrently the daily burnt BSQ chart under 'DAO -> Facts and Figures' is\ndistorted by outliers. This introduces a 'Zoom to inliers' toggle (off\nby default), which, when toggled on, effectively zooms the chart to\ninliers, thus removing the distortion. Also, a moving average is\nplotted, to further improve the chart's readibility.\n\nThe chart is also changed from an area chart to a line chart, on the\npresumption that it was an area chart for cosmetic reasons, but now that\nthere are two series in it (the moving average was added) an area chart\nmakes less sense.\n\nAnother noteworthy change is that the other chart in the screen, monthly\nissued BSQ, has its Y axis set to start at zero, so as to improve\nreadability. This might seem outside the scope of this commit, but the\nother changes involved some refactoring, which involved cleaning up some\nduplicated logic, which involved configuring both of these charts\ntogether, which involved forcing zero to be on the axis.\n\nThis implementation mixes some plotting logic (responsible for zooming\nin on inliers) into the view logic, because I opted to implement said\nzooming as an external manipulation of a chart's axis. I chose this in\nfavor of implementing a new Chart, because it would have required\nincluding multiple large classes (relevant JavaFX's classes can't be\nergonomically extended) to the code base. I presumed that my chosen\nsolution will be easier to maintain.\n\nI am not entirely happy with this choice and can see myself introducing\nsome plotting-related classes to encapsulate creating charts like these,\nthus unmixing plotting logic from view logic. In the meantime this is a\nworking solution, and I plan to continue working on these charts in the\nnear future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c403ee7723d1b8303066b6fa23f88dadffa01ced", "author": {"user": {"login": "ripcurlx", "name": "Christoph Atteneder"}}, "url": "https://github.com/bisq-network/bisq/commit/c403ee7723d1b8303066b6fa23f88dadffa01ced", "committedDate": "2020-01-22T10:34:15Z", "message": "Minor code cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzI5Mzk3", "url": "https://github.com/bisq-network/bisq/pull/3890#pullrequestreview-347329397", "createdAt": "2020-01-23T14:18:36Z", "commit": {"oid": "c403ee7723d1b8303066b6fa23f88dadffa01ced"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}