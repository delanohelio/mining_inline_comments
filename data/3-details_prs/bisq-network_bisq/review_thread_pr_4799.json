{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNzE5NjQw", "number": 4799, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo0Mzo0MVrOE9MNbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowNjo0M1rOE9MuQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTk4NjM5OnYy", "diffSide": "RIGHT", "path": "apitest/src/test/java/bisq/apitest/method/MethodTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo0Mzo0MVrOH5vqug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNzoyNzo0NlrOH6jiPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxMTg2Ng==", "bodyText": "Let's remove this. As the API hasn't been officially released we can just remove it unceremoniously.", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r530311866", "createdAt": "2020-11-25T11:43:41Z", "author": {"login": "sqrrm"}, "path": "apitest/src/test/java/bisq/apitest/method/MethodTest.java", "diffHunk": "@@ -104,12 +113,25 @@ public static void startSupportingApps(boolean registerDisputeAgents,\n \n     // Convenience methods for building gRPC request objects\n \n+    @Deprecated\n     protected final GetBalanceRequest createBalanceRequest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MTY2Mg==", "bodyText": "This has already been replaced in one of the next PRs.  Commit 9d863e5 removed the deprecated core api method.", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r531161662", "createdAt": "2020-11-26T17:27:46Z", "author": {"login": "ghubstan"}, "path": "apitest/src/test/java/bisq/apitest/method/MethodTest.java", "diffHunk": "@@ -104,12 +113,25 @@ public static void startSupportingApps(boolean registerDisputeAgents,\n \n     // Convenience methods for building gRPC request objects\n \n+    @Deprecated\n     protected final GetBalanceRequest createBalanceRequest() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxMTg2Ng=="}, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjA1MzgzOnYy", "diffSide": "RIGHT", "path": "apitest/src/test/java/bisq/apitest/method/wallet/BsqWalletTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowMTo1N1rOH5wSzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNzo1MzoxOFrOH6kG4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyMjEyNw==", "bodyText": "Persistence has had some changes to increase the persist frequency, might not need to wait this long", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r530322127", "createdAt": "2020-11-25T12:01:57Z", "author": {"login": "sqrrm"}, "path": "apitest/src/test/java/bisq/apitest/method/wallet/BsqWalletTest.java", "diffHunk": "@@ -52,13 +83,164 @@ public void testGetUnusedBsqAddress() {\n         NetworkParameters networkParameters = LegacyAddress.getParametersFromAddress(address.substring(1));\n         String addressNetwork = networkParameters.getPaymentProtocolId();\n         assertNotEquals(PAYMENT_PROTOCOL_ID_MAINNET, addressNetwork);\n-        // TODO Fix bug(?) causing the regtest bsq address network to be evaluated as 'testnet' here.\n+        // TODO Fix bug causing the regtest bsq address network to be evaluated as 'testnet' here.\n         assertTrue(addressNetwork.equals(PAYMENT_PROTOCOL_ID_TESTNET)\n                 || addressNetwork.equals(PAYMENT_PROTOCOL_ID_REGTEST));\n     }\n \n+    @Test\n+    @Order(2)\n+    public void testInitialBsqBalances(final TestInfo testInfo) {\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        log.info(\"{} -> Alice's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(alicesBsqBalances));\n+        verifyBsqBalances(ALICES_INITIAL_BSQ_BALANCES, alicesBsqBalances);\n+\n+        BsqBalanceInfo bobsBsqBalances = getBsqBalances(bobdaemon);\n+        log.info(\"{} -> Bob's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(bobsBsqBalances));\n+        verifyBsqBalances(BOBS_INITIAL_BSQ_BALANCES, bobsBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(3)\n+    public void testSendBsqAndCheckBalancesBeforeGeneratingBtcBlock(final TestInfo testInfo) {\n+        String bobsBsqAddress = getUnusedBsqAddress(bobdaemon);\n+        sendBsq(alicedaemon, bobsBsqAddress, SEND_BSQ_AMOUNT);\n+        sleep(2000);\n+\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        BsqBalanceInfo bobsBsqBalances = waitForNonZeroUnverifiedBalance(bobdaemon);\n+\n+        log.info(\"BSQ Balances Before BTC Block Gen...\");\n+        printBobAndAliceBsqBalances(testInfo,\n+                bobsBsqBalances,\n+                alicesBsqBalances,\n+                alicedaemon);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(150000000,\n+                2500050,\n+                0,\n+                0,\n+                0,\n+                0),\n+                bobsBsqBalances);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(97499950,\n+                97499950,\n+                97499950,\n+                0,\n+                0,\n+                0),\n+                alicesBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(4)\n+    public void testBalancesAfterSendingBsqAndGeneratingBtcBlock(final TestInfo testInfo) {\n+        // There is a wallet persist delay;  we have to\n+        // wait for both wallets to be saved to disk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM4NTg5NQ==", "bodyText": "I've noticed significant improvement while testing the api on top of v1.5.0.   I'll be checking what wait times I can reduce in apitest.", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r530385895", "createdAt": "2020-11-25T13:48:03Z", "author": {"login": "ghubstan"}, "path": "apitest/src/test/java/bisq/apitest/method/wallet/BsqWalletTest.java", "diffHunk": "@@ -52,13 +83,164 @@ public void testGetUnusedBsqAddress() {\n         NetworkParameters networkParameters = LegacyAddress.getParametersFromAddress(address.substring(1));\n         String addressNetwork = networkParameters.getPaymentProtocolId();\n         assertNotEquals(PAYMENT_PROTOCOL_ID_MAINNET, addressNetwork);\n-        // TODO Fix bug(?) causing the regtest bsq address network to be evaluated as 'testnet' here.\n+        // TODO Fix bug causing the regtest bsq address network to be evaluated as 'testnet' here.\n         assertTrue(addressNetwork.equals(PAYMENT_PROTOCOL_ID_TESTNET)\n                 || addressNetwork.equals(PAYMENT_PROTOCOL_ID_REGTEST));\n     }\n \n+    @Test\n+    @Order(2)\n+    public void testInitialBsqBalances(final TestInfo testInfo) {\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        log.info(\"{} -> Alice's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(alicesBsqBalances));\n+        verifyBsqBalances(ALICES_INITIAL_BSQ_BALANCES, alicesBsqBalances);\n+\n+        BsqBalanceInfo bobsBsqBalances = getBsqBalances(bobdaemon);\n+        log.info(\"{} -> Bob's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(bobsBsqBalances));\n+        verifyBsqBalances(BOBS_INITIAL_BSQ_BALANCES, bobsBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(3)\n+    public void testSendBsqAndCheckBalancesBeforeGeneratingBtcBlock(final TestInfo testInfo) {\n+        String bobsBsqAddress = getUnusedBsqAddress(bobdaemon);\n+        sendBsq(alicedaemon, bobsBsqAddress, SEND_BSQ_AMOUNT);\n+        sleep(2000);\n+\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        BsqBalanceInfo bobsBsqBalances = waitForNonZeroUnverifiedBalance(bobdaemon);\n+\n+        log.info(\"BSQ Balances Before BTC Block Gen...\");\n+        printBobAndAliceBsqBalances(testInfo,\n+                bobsBsqBalances,\n+                alicesBsqBalances,\n+                alicedaemon);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(150000000,\n+                2500050,\n+                0,\n+                0,\n+                0,\n+                0),\n+                bobsBsqBalances);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(97499950,\n+                97499950,\n+                97499950,\n+                0,\n+                0,\n+                0),\n+                alicesBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(4)\n+    public void testBalancesAfterSendingBsqAndGeneratingBtcBlock(final TestInfo testInfo) {\n+        // There is a wallet persist delay;  we have to\n+        // wait for both wallets to be saved to disk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyMjEyNw=="}, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3MTA0Mg==", "bodyText": "But I could not reduce that wait time without the test failing.  There may be other wait times that can be reduced, like waiting for app startup & shutdown, but not this one.", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r531171042", "createdAt": "2020-11-26T17:53:18Z", "author": {"login": "ghubstan"}, "path": "apitest/src/test/java/bisq/apitest/method/wallet/BsqWalletTest.java", "diffHunk": "@@ -52,13 +83,164 @@ public void testGetUnusedBsqAddress() {\n         NetworkParameters networkParameters = LegacyAddress.getParametersFromAddress(address.substring(1));\n         String addressNetwork = networkParameters.getPaymentProtocolId();\n         assertNotEquals(PAYMENT_PROTOCOL_ID_MAINNET, addressNetwork);\n-        // TODO Fix bug(?) causing the regtest bsq address network to be evaluated as 'testnet' here.\n+        // TODO Fix bug causing the regtest bsq address network to be evaluated as 'testnet' here.\n         assertTrue(addressNetwork.equals(PAYMENT_PROTOCOL_ID_TESTNET)\n                 || addressNetwork.equals(PAYMENT_PROTOCOL_ID_REGTEST));\n     }\n \n+    @Test\n+    @Order(2)\n+    public void testInitialBsqBalances(final TestInfo testInfo) {\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        log.info(\"{} -> Alice's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(alicesBsqBalances));\n+        verifyBsqBalances(ALICES_INITIAL_BSQ_BALANCES, alicesBsqBalances);\n+\n+        BsqBalanceInfo bobsBsqBalances = getBsqBalances(bobdaemon);\n+        log.info(\"{} -> Bob's BSQ Initial Balances -> \\n{}\",\n+                testName(testInfo),\n+                formatBsqBalanceInfoTbl(bobsBsqBalances));\n+        verifyBsqBalances(BOBS_INITIAL_BSQ_BALANCES, bobsBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(3)\n+    public void testSendBsqAndCheckBalancesBeforeGeneratingBtcBlock(final TestInfo testInfo) {\n+        String bobsBsqAddress = getUnusedBsqAddress(bobdaemon);\n+        sendBsq(alicedaemon, bobsBsqAddress, SEND_BSQ_AMOUNT);\n+        sleep(2000);\n+\n+        BsqBalanceInfo alicesBsqBalances = getBsqBalances(alicedaemon);\n+        BsqBalanceInfo bobsBsqBalances = waitForNonZeroUnverifiedBalance(bobdaemon);\n+\n+        log.info(\"BSQ Balances Before BTC Block Gen...\");\n+        printBobAndAliceBsqBalances(testInfo,\n+                bobsBsqBalances,\n+                alicesBsqBalances,\n+                alicedaemon);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(150000000,\n+                2500050,\n+                0,\n+                0,\n+                0,\n+                0),\n+                bobsBsqBalances);\n+\n+        verifyBsqBalances(expectedBsqBalanceModel(97499950,\n+                97499950,\n+                97499950,\n+                0,\n+                0,\n+                0),\n+                alicesBsqBalances);\n+    }\n+\n+    @Disabled // TODO\n+    @Test\n+    @Order(4)\n+    public void testBalancesAfterSendingBsqAndGeneratingBtcBlock(final TestInfo testInfo) {\n+        // There is a wallet persist delay;  we have to\n+        // wait for both wallets to be saved to disk.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyMjEyNw=="}, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjA3MDQyOnYy", "diffSide": "RIGHT", "path": "cli/src/main/java/bisq/cli/CliMain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMjowNjo0M1rOH5wc9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNzoyODoyMlrOH6jjBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyNDcyNg==", "bodyText": "Let's remove it", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r530324726", "createdAt": "2020-11-25T12:06:43Z", "author": {"login": "sqrrm"}, "path": "cli/src/main/java/bisq/cli/CliMain.java", "diffHunk": "@@ -88,7 +92,10 @@\n         createpaymentacct,\n         getpaymentaccts,\n         getversion,\n-        getbalance,\n+        @Deprecated getbalance, // Use getbalances, return bsq and btc balance info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MTg2Mg==", "bodyText": "Let's remove it\n\nThis has already been repurposed in one of the next PRs. Commit 9d863e5 removed the deprecated core api method.", "url": "https://github.com/bisq-network/bisq/pull/4799#discussion_r531161862", "createdAt": "2020-11-26T17:28:22Z", "author": {"login": "ghubstan"}, "path": "cli/src/main/java/bisq/cli/CliMain.java", "diffHunk": "@@ -88,7 +92,10 @@\n         createpaymentacct,\n         getpaymentaccts,\n         getversion,\n-        getbalance,\n+        @Deprecated getbalance, // Use getbalances, return bsq and btc balance info", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMyNDcyNg=="}, "originalCommit": {"oid": "208a37b339378d28cf06de2c2b7232b37527b14f"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2714, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}