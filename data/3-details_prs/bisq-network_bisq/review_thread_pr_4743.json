{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzgyOTM0", "number": 4743, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDowM1rOE047vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDowM1rOE047vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODk0MjA2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/payment/AustraliaPayid.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0MDowM1rOHs3SRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozMjoxM1rOHs7h-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTE4OA==", "bodyText": "Our naming convention would be: setPayId  and payId\nWould require also changes in the protobuf", "url": "https://github.com/bisq-network/bisq/pull/4743#discussion_r516805188", "createdAt": "2020-11-03T16:40:03Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/payment/AustraliaPayid.java", "diffHunk": "@@ -17,53 +17,37 @@\n \n package bisq.core.payment;\n \n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n+import bisq.core.locale.FiatCurrency;\n+import bisq.core.payment.payload.AustraliaPayidPayload;\n import bisq.core.payment.payload.PaymentAccountPayload;\n import bisq.core.payment.payload.PaymentMethod;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-import org.jetbrains.annotations.NotNull;\n \n-import lombok.Getter;\n-import lombok.Setter;\n-\n-import bisq.core.locale.Country;\n-import bisq.core.locale.FiatCurrency;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-public final class AustraliaPayID extends PaymentAccount\n-{\n-    public AustraliaPayID()\n-    {\n+public final class AustraliaPayid extends PaymentAccount {\n+    public AustraliaPayid() {\n         super(PaymentMethod.AUSTRALIA_PAYID);\n         setSingleTradeCurrency(new FiatCurrency(\"AUD\"));\n     }\n \n     @Override\n-    protected PaymentAccountPayload createPayload()\n-    {\n-        return new AustraliaPayIDPayload(paymentMethod.getId(), id);\n+    protected PaymentAccountPayload createPayload() {\n+        return new AustraliaPayidPayload(paymentMethod.getId(), id);\n     }\n \n-    // payid\n-    public String getPayID()\n-    {\n-        return ((AustraliaPayIDPayload) paymentAccountPayload).getPayid();\n+    public String getPayid() {\n+        return ((AustraliaPayidPayload) paymentAccountPayload).getPayid();\n     }\n-    public void setPayID(String payid)\n-    {\n+\n+    public void setPayid(String payid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe8261a1ed6e644583a73cc23f15481a79cbcb4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyMDg4MA==", "bodyText": "I think payid is one word in this case. It's not an id as part of bisq, just the name of the payment method.", "url": "https://github.com/bisq-network/bisq/pull/4743#discussion_r516820880", "createdAt": "2020-11-03T17:02:12Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/payment/AustraliaPayid.java", "diffHunk": "@@ -17,53 +17,37 @@\n \n package bisq.core.payment;\n \n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n+import bisq.core.locale.FiatCurrency;\n+import bisq.core.payment.payload.AustraliaPayidPayload;\n import bisq.core.payment.payload.PaymentAccountPayload;\n import bisq.core.payment.payload.PaymentMethod;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-import org.jetbrains.annotations.NotNull;\n \n-import lombok.Getter;\n-import lombok.Setter;\n-\n-import bisq.core.locale.Country;\n-import bisq.core.locale.FiatCurrency;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-public final class AustraliaPayID extends PaymentAccount\n-{\n-    public AustraliaPayID()\n-    {\n+public final class AustraliaPayid extends PaymentAccount {\n+    public AustraliaPayid() {\n         super(PaymentMethod.AUSTRALIA_PAYID);\n         setSingleTradeCurrency(new FiatCurrency(\"AUD\"));\n     }\n \n     @Override\n-    protected PaymentAccountPayload createPayload()\n-    {\n-        return new AustraliaPayIDPayload(paymentMethod.getId(), id);\n+    protected PaymentAccountPayload createPayload() {\n+        return new AustraliaPayidPayload(paymentMethod.getId(), id);\n     }\n \n-    // payid\n-    public String getPayID()\n-    {\n-        return ((AustraliaPayIDPayload) paymentAccountPayload).getPayid();\n+    public String getPayid() {\n+        return ((AustraliaPayidPayload) paymentAccountPayload).getPayid();\n     }\n-    public void setPayID(String payid)\n-    {\n+\n+    public void setPayid(String payid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTE4OA=="}, "originalCommit": {"oid": "8fe8261a1ed6e644583a73cc23f15481a79cbcb4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzODA4NA==", "bodyText": "True. They use PayID... anyway not sure whats best here, but also not really important...", "url": "https://github.com/bisq-network/bisq/pull/4743#discussion_r516838084", "createdAt": "2020-11-03T17:29:06Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/payment/AustraliaPayid.java", "diffHunk": "@@ -17,53 +17,37 @@\n \n package bisq.core.payment;\n \n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n+import bisq.core.locale.FiatCurrency;\n+import bisq.core.payment.payload.AustraliaPayidPayload;\n import bisq.core.payment.payload.PaymentAccountPayload;\n import bisq.core.payment.payload.PaymentMethod;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-import org.jetbrains.annotations.NotNull;\n \n-import lombok.Getter;\n-import lombok.Setter;\n-\n-import bisq.core.locale.Country;\n-import bisq.core.locale.FiatCurrency;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-public final class AustraliaPayID extends PaymentAccount\n-{\n-    public AustraliaPayID()\n-    {\n+public final class AustraliaPayid extends PaymentAccount {\n+    public AustraliaPayid() {\n         super(PaymentMethod.AUSTRALIA_PAYID);\n         setSingleTradeCurrency(new FiatCurrency(\"AUD\"));\n     }\n \n     @Override\n-    protected PaymentAccountPayload createPayload()\n-    {\n-        return new AustraliaPayIDPayload(paymentMethod.getId(), id);\n+    protected PaymentAccountPayload createPayload() {\n+        return new AustraliaPayidPayload(paymentMethod.getId(), id);\n     }\n \n-    // payid\n-    public String getPayID()\n-    {\n-        return ((AustraliaPayIDPayload) paymentAccountPayload).getPayid();\n+    public String getPayid() {\n+        return ((AustraliaPayidPayload) paymentAccountPayload).getPayid();\n     }\n-    public void setPayID(String payid)\n-    {\n+\n+    public void setPayid(String payid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTE4OA=="}, "originalCommit": {"oid": "8fe8261a1ed6e644583a73cc23f15481a79cbcb4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NDc0NA==", "bodyText": "I had it like that before, but I agree with @sqrrm that it is actually a brand name and should be without camelcase in that case.", "url": "https://github.com/bisq-network/bisq/pull/4743#discussion_r516874744", "createdAt": "2020-11-03T18:32:13Z", "author": {"login": "ripcurlx"}, "path": "core/src/main/java/bisq/core/payment/AustraliaPayid.java", "diffHunk": "@@ -17,53 +17,37 @@\n \n package bisq.core.payment;\n \n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n+import bisq.core.locale.FiatCurrency;\n+import bisq.core.payment.payload.AustraliaPayidPayload;\n import bisq.core.payment.payload.PaymentAccountPayload;\n import bisq.core.payment.payload.PaymentMethod;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-import org.jetbrains.annotations.NotNull;\n \n-import lombok.Getter;\n-import lombok.Setter;\n-\n-import bisq.core.locale.Country;\n-import bisq.core.locale.FiatCurrency;\n-import bisq.core.payment.payload.AustraliaPayIDPayload;\n-\n-public final class AustraliaPayID extends PaymentAccount\n-{\n-    public AustraliaPayID()\n-    {\n+public final class AustraliaPayid extends PaymentAccount {\n+    public AustraliaPayid() {\n         super(PaymentMethod.AUSTRALIA_PAYID);\n         setSingleTradeCurrency(new FiatCurrency(\"AUD\"));\n     }\n \n     @Override\n-    protected PaymentAccountPayload createPayload()\n-    {\n-        return new AustraliaPayIDPayload(paymentMethod.getId(), id);\n+    protected PaymentAccountPayload createPayload() {\n+        return new AustraliaPayidPayload(paymentMethod.getId(), id);\n     }\n \n-    // payid\n-    public String getPayID()\n-    {\n-        return ((AustraliaPayIDPayload) paymentAccountPayload).getPayid();\n+    public String getPayid() {\n+        return ((AustraliaPayidPayload) paymentAccountPayload).getPayid();\n     }\n-    public void setPayID(String payid)\n-    {\n+\n+    public void setPayid(String payid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNTE4OA=="}, "originalCommit": {"oid": "8fe8261a1ed6e644583a73cc23f15481a79cbcb4"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2693, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}