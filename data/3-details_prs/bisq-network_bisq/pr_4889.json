{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMDYxNDMy", "number": 4889, "title": "Avoid case of multi trades with same offer", "bodyText": "Fixes #4879\nWe had removed the offer after the first trade task. If it failed there the offer stayed online and could be taken by another user. This caused the issue that one failed trade was in the trade list and then later a valid trade entered as well. As we used the offerId as key for a map which was used for the processModel lookup, that caused a bug with a Nullpointer exception.\nThis PR fixes that problem by using a uid instead of the offerId to make the map lookup more solid.\nIt also moves the task to remove the offer as the very first task so it cannot happen anymore that a offer stays online and leads later to 2 trades with the same offer id.\nIt also increased the realtively short timeout of 30 seconds in the some trade protocol task runners. We saw some cases where those timeouts triggered errorMessages but the trade could complete without problem, so that should help to reduce such cases. We do not fail on those timeouts, they only trigger an error message. The general trade protocol timeout would cause a failure of the trade.", "createdAt": "2020-12-03T19:51:07Z", "url": "https://github.com/bisq-network/bisq/pull/4889", "merged": true, "mergeCommit": {"oid": "57681245ffaa44f542bf08e5bb991afe86221d3a"}, "closed": true, "closedAt": "2020-12-03T23:48:45Z", "author": {"login": "chimp1984"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdimF-pgH2gAyNTMyMDYxNDMyOjFmZGM0M2U0ZDAzMTU4MTdmYWU0NmU2YmRhMDcyOTNjNjI5MDA2ZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiqbSsgFqTU0NDQ4MDc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1fdc43e4d0315817fae46e6bda07293c629006f1", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/1fdc43e4d0315817fae46e6bda07293c629006f1", "committedDate": "2020-12-03T16:53:35Z", "message": "Increase timeout for trade protocol task runners from 30 to 60 sec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d5fc33ba48e48add4db494558511703785d5d3a", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/2d5fc33ba48e48add4db494558511703785d5d3a", "committedDate": "2020-12-03T19:19:24Z", "message": "Move MakerRemovesOpenOffer to first task to avoid that if take offer\nfails early that we get another trade with same id at maker in case another use takes the offer afterwards."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f99ca0b6355405eb83d54ea604b4edf61013975", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/8f99ca0b6355405eb83d54ea604b4edf61013975", "committedDate": "2020-12-03T19:43:35Z", "message": "Add uid to trade to make sure that look up for process model cannot\nfail in case of multiple trades with the same offer id.\nUse uid instead of the weaker offerId as key for the tradeProtocolByTradeId map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDgwNzc0", "url": "https://github.com/bisq-network/bisq/pull/4889#pullrequestreview-544480774", "createdAt": "2020-12-03T21:48:02Z", "commit": {"oid": "2d5fc33ba48e48add4db494558511703785d5d3a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo0ODowMlrOH-2HsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTo1NDoxMVrOH-2gZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2MDQ2NQ==", "bodyText": "Could this be abused by sending a bad request, causing offers to be removed but guaranteed failed trade?", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535660465", "createdAt": "2020-12-03T21:48:02Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/trade/protocol/BuyerAsMakerProtocol.java", "diffHunk": "@@ -100,8 +100,8 @@ protected void handle(DelayedPayoutTxSignatureRequest message, NodeAddress peer)\n                 .with(message)\n                 .from(peer))\n                 .setup(tasks(\n-                        BuyerProcessDelayedPayoutTxSignatureRequest.class,\n                         MakerRemovesOpenOffer.class,\n+                        BuyerProcessDelayedPayoutTxSignatureRequest.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5fc33ba48e48add4db494558511703785d5d3a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY2Njc5MA==", "bodyText": "How would this happen? Collision of randomUUID?", "url": "https://github.com/bisq-network/bisq/pull/4889#discussion_r535666790", "createdAt": "2020-12-03T21:54:11Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/trade/TradeManager.java", "diffHunk": "@@ -269,10 +271,15 @@ private void handleTakeOfferRequest(NodeAddress peer, InputsForDepositTxRequest\n                     openOffer.getMediatorNodeAddress(),\n                     openOffer.getRefundAgentNodeAddress(),\n                     btcWalletService,\n-                    getNewProcessModel(offer));\n+                    getNewProcessModel(offer),\n+                    UUID.randomUUID().toString());\n         }\n         TradeProtocol tradeProtocol = TradeProtocolFactory.getNewTradeProtocol(trade);\n-        tradeProtocolByTradeId.put(trade.getId(), tradeProtocol);\n+        TradeProtocol prev = tradeProtocolByTradeId.put(trade.getUid(), tradeProtocol);\n+        if (prev != null) {\n+            log.error(\"We had already an entry with uid {}\", trade.getUid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f99ca0b6355405eb83d54ea604b4edf61013975"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3451, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}