{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDkyMDM5", "number": 4329, "title": "Add rpc method 'getoffers'", "bodyText": "The new method returns current buy or sell offers for a fiat ccy.\nThis PR should be reviewed/merged after PR 4324.\nChanges include:\n\n\nNew core.grpc classes\nCoreOffersService\nGrpcOffersService\nmodel.OfferInfo\n\n\nCoreApi -- The new CoreOffersService is injected into CoreApi and\nthe old getOffers() and placeOffer() impls were moved into the\nnew CoreOffersService.  The getOffers implementation was re-done.\nOther changes are just rearranging location of core method calls.\n\n\nGrpcServer -- The new GrpcOffersService replaced the old\nGetOffersService and PlaceOfferService.\n\n\ngrpc.proto -- The old GetOffers and PlaceOffer services were combined\ninto a single Offers service, and the PlaceOffer rpc was renamed\nas CreateOffer.  These are the only substantive changes; the rest\nis just rearranging location of the service defs in the file.\nAlso created a lighterweight OfferInfo proto message wrapper to\nbe passed between server & client (client has no access to core's\nOffer and OfferPayload).\n\n\nOfferInfo -- A new wrapper around the OfferInfo proto message.\n\n\nCliMain -- The new GetOffers service stub was added.\nSome (maybe too much) number and ccy formatting logic was\ncopied & modified from core.  Some tedius string formatting\nwas added too (needs to be tidied up).\n\n\nLicense comments were also copied to several classes, and I\nmade a mistake in reverting changes to the wrong file.\n\n\nAdded unit tests to cli/test.sh.", "createdAt": "2020-06-22T17:50:45Z", "url": "https://github.com/bisq-network/bisq/pull/4329", "merged": true, "mergeCommit": {"oid": "a54eeeabccd1c48bdfc03dc3313ffb983a921325"}, "closed": true, "closedAt": "2020-06-25T18:41:35Z", "author": {"login": "ghubstan"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqnGPegH2gAyNDM4MDkyMDM5OmIxMTQ2ZmRkMTJhZDg5ZTk0ZTM4YTg4NTNlMzE2Zjk2NDgyNGQ2N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuzIuMgFqTQzNzc2MjY0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b1146fdd12ad89e94e38a8853e316f964824d67c", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/b1146fdd12ad89e94e38a8853e316f964824d67c", "committedDate": "2020-06-12T18:24:01Z", "message": "Rename CoreWalletService -> CoreWalletsService\n\nThis change fixes the ambiguity in the original class name, which\nimplied it was a btc wallet service, not a bsq and btc wallets service."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec66b14986bb0a9f3369009aafc541add4e65f03", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/ec66b14986bb0a9f3369009aafc541add4e65f03", "committedDate": "2020-06-12T18:56:19Z", "message": "Add rpc wallet(s) protection tests\n\nThis commit includes the following changes:\n\n * New tests for methods `lockwallet`, `unlockwallet`,\n   `removewalletpassword`, and `setwalletpassword`.\n\n * New `getbalance` method error handing tests to verify\n   error message correctness when wallet is locked.\n\n * Update to `getversion` method test -- now expects `1.3.4`.\n\n * Check for new `[params]` column header in help text."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85c96764fb3adaa25e8366d547be9d05e635f1bc", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/85c96764fb3adaa25e8366d547be9d05e635f1bc", "committedDate": "2020-06-13T22:59:45Z", "message": "Add rpc method 'getfundingaddresses'\n\nThis addresses task #1 in issue https://github.com/bisq-network/bisq/issues/4257.\n\nThis new gRPC WalletService method displays the BTC wallet's list of\nreceiving addresses.  The balance and number of confirmations\nfor the most recent transaction is displayed to the right of each\naddress.  Instead of returning a gRPC data structure to the client,\nthe service method returns a formatted String.\n\nIf the BTC wallet has no unused addresses, one will be created and\nincluded in the returned list, and it can be used to fund the wallet.\n\nThe new method required injection of the BtcWalletService into CoreWalletsService,\nand the usual boilerplate changes to grpc.proto, CliMain, and GrpcWalletService.\n\nSome of the next PRs (for #4257) will require some common functionality within\nCoreWalletsService, so these additional changes were included:\n\n  * a private, class level formatSatoshis function\n  * a public getNumConfirmationsForMostRecentTransaction method\n  * a public getAddressBalance method\n  * a private getAddressEntry method\n\nA unit test that verifies a successful return status was added to cli/test.sh."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e415de4adaf54a9f9c926fa4557af95e6fdfbe4", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/2e415de4adaf54a9f9c926fa4557af95e6fdfbe4", "committedDate": "2020-06-14T16:05:37Z", "message": "Replace duplicate code in getFundingAddresses\n\nCleaned up the method body and improved the returned string's\nformatting.  Also added a line for this method in the CLI help text."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1228e5ea72211c9010943db1aa8bf46675417a6", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/b1228e5ea72211c9010943db1aa8bf46675417a6", "committedDate": "2020-06-14T17:23:47Z", "message": "Add rpc method 'getaddressbalance'\n\nThis addresses task 2 in issue 4257\n\thttps://github.com/bisq-network/bisq/issues/4257\n\nThis new gRPC Wallet service method displays the balance and number\nof confimirmations of the most recent transaction for the given BTC\nwallet address.\n\nThe new method required the usual boilerplate changes to grpc.proto,\nCliMain, and GrpcWalletService.\n\nTwo unit tests to check error msgs was added to cli/test.sh."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/a7542e98bf62d86bc3486e1d4d925a9a0a64d8c6", "committedDate": "2020-06-15T17:32:14Z", "message": "Add rpc method 'createpaymentacct'\n\nThis addresses task 4 in issue 4257.\n    https://github.com/bisq-network/bisq/issues/4257\n\nThis PR should be reviewed/merged after PR 4304.\n    https://github.com/bisq-network/bisq/pull/4304\n\nThis new gRPC PaymentAccounts service method creates a dummy\nPerfectMoney payment account for the given name, number and fiat\ncurrency code, as part of the required \"simplest possible trading\nAPI\" (for demo).   An implementation supporting all payment\nmethods is not in the scope.\n\nChanges specific to the new rpc method implementation follow:\n\n* New createpaymentacct method + help text was added to CliMain.\n  Help text formatting was also changed to make room for larger\n  method names and argument lists.\n\n* The PaymentAccount proto service def was renamed PaymentAccounts\n  to avoid a name collision, and the new rpc CreatePaymentAccount\n  was made part of the newly named PaymentAccounts service def.\n\n* New GrpcPaymentAccountsService (gRPC boilerplate) and\n  CorePaymentAccountsService (method implementations) classes were\n  added.\n\n* The gRPC GetPaymentAccountsService stub was moved from GrpcServer\n  to the new GrpcPaymentAccountsService class, and\n  GrpcPaymentAccountsService is injected into GrpcServer.\n\n* A new createpaymentacct unit test was added to the bats test\n  suite (checks for successful return status code).\n\nMaybe bit out of scope, some small changes were made towards making\nsure the entire API is defined in CoreApi, which is used as a\npass-through object to the new CorePaymentAccountsService.  In the\nnext PR, similar refactoring will be done to make CoreApi the\npass-through object for all of the existing CoreWalletsService\nmethods.  (CoreWalletsService will be injected into CoreApi.)\nIn the future, all Grpc*Service implementations will call core\nservices through CoreApi, for the sake of consistency."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac3ed5697b4b854bb6c12128cee5aca1f64d09f", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/bac3ed5697b4b854bb6c12128cee5aca1f64d09f", "committedDate": "2020-06-15T19:43:26Z", "message": "Call core wallets service methods from CoreApi\n\nThis change is a refactoring of the gRPC Wallets service\nfor the purpose of making CoreApi the entry point to\nall core implementations.  These changes should have been\nmade in PR 4295.\nSee https://github.com/bisq-network/bisq/pull/4295\n\nThe gRPC Wallet proto def name was changed to Wallets because\nthis service manages BSQ and BTC wallets, and GrpcWalletService\nwas changed to GrpcWalletsService for the same reason.\n\nThis PR should be reviewed/merged after PR 4308.\nSee https://github.com/bisq-network/bisq/pull/4308\n\nThis PR's branch was created from the PR 4308 branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258d1801d2d5cecd06c60e60e31fa8b2ede744e0", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/258d1801d2d5cecd06c60e60e31fa8b2ede744e0", "committedDate": "2020-06-16T15:48:41Z", "message": "Factor duplicate unlocked wallet checks into new method\n\nResponse to comment in PR 4299:\nhttps://github.com/bisq-network/bisq/pull/4299#discussion_r440769032\n\nThis PR should be reviewed/merged after PR 4309.\nhttps://github.com/bisq-network/bisq/pull/4309"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5134e14c28663e16b07a1eaf1ab63e4428f1f5a", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/c5134e14c28663e16b07a1eaf1ab63e4428f1f5a", "committedDate": "2020-06-18T13:57:26Z", "message": "Replace Tuple3 with memoization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db9ee2906ab96a937c87e331fd00adbd0fb59b0", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/9db9ee2906ab96a937c87e331fd00adbd0fb59b0", "committedDate": "2020-06-18T14:08:39Z", "message": "Merge pull request #2 from dmos62/Z-getfundingaddresses-patch\n\nRefactor getFundingAddresses to use memoization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e278f32e97b788c22de8131f073ab0567407a5", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/b0e278f32e97b788c22de8131f073ab0567407a5", "committedDate": "2020-06-18T15:52:29Z", "message": "Refactor getFundingAddresses to use memoization\n\nAlso reordered some import statements according to Bisq style rules."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1930411e61febf8e2b83ddd1b9c756626e93aaf8", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/1930411e61febf8e2b83ddd1b9c756626e93aaf8", "committedDate": "2020-06-18T15:55:31Z", "message": "Rmove blank line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "435672a5ee71b4988b22d41f7762303b59bc3a22", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/435672a5ee71b4988b22d41f7762303b59bc3a22", "committedDate": "2020-06-19T15:45:04Z", "message": "Add rpc method 'getpaymentaccts'\n\nThis addresses task 5 in issue 4257\n\thttps://github.com/bisq-network/bisq/issues/4257\n\nThis new gRPC PaymentAccounts service method displays the user's\nsaved payment accounts.\n\nA unit test to check a successful return status code was added\nto cli/test.sh.\n\nThis PR should be reviewed/merged after PR 4322.\n\thttps://github.com/bisq-network/bisq/pull/4322"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331f488057ff0939d485d66da4394012514879e4", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/331f488057ff0939d485d66da4394012514879e4", "committedDate": "2020-06-19T23:00:28Z", "message": "Return protos from funding address methods\n\nThe 'getaddressbalance' and 'getfundingaddresses' methods now send\nnew AddressBalanceInfo proto messages instead of a formatted String\nto the client.  The AddressBalanceInfo message contains addressString,\nbalance, and # of confirmations (transaction confidence) fields.\n\nChanges include:\n* A new AddressBalanceInfo proto message\n* A wrapper class for the new AddressBalanceInfo proto\n* New 'getaddressbalance' and 'getfundingaddresses' signatures in server\n* AddressBalanceInfo display logic in client\n* Removal of balance formatting logic in server\n* Refactoring of balance formatting logic in client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "612bafe59a8bdb2da7b27d5f723174274302a617", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/612bafe59a8bdb2da7b27d5f723174274302a617", "committedDate": "2020-06-20T11:42:58Z", "message": "Refactor AddressBalanceInfo display logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37fb60672f56e7b7f5e19b061ce7d959058eb0bc", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/37fb60672f56e7b7f5e19b061ce7d959058eb0bc", "committedDate": "2020-06-20T12:59:06Z", "message": "Add license comment\n\nThis is not in scope of current PR, but easy enough to review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855ac0f250e5375dd89692fb7d0df8dc0b0c6a4e", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/855ac0f250e5375dd89692fb7d0df8dc0b0c6a4e", "committedDate": "2020-06-20T13:02:04Z", "message": "Add license comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfcc693f69d06ba1d2ebb33caa1a71a7f4d83542", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/bfcc693f69d06ba1d2ebb33caa1a71a7f4d83542", "committedDate": "2020-06-20T13:03:10Z", "message": "Add license comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d06807b0e53c2c3054c90e7268b92f4fe1740041", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/d06807b0e53c2c3054c90e7268b92f4fe1740041", "committedDate": "2020-06-20T13:10:39Z", "message": "Wrap Exception from core in gRPC StatusRuntimeException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c073c65f5bf4849bcee1c2ab92acf9136827556", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/7c073c65f5bf4849bcee1c2ab92acf9136827556", "committedDate": "2020-06-20T13:14:36Z", "message": "Revert \"Add license comment\"\n\nThis reverts commit bfcc693f69d06ba1d2ebb33caa1a71a7f4d83542.\n\nThis change was reverted because we want unexpected Exceptions\nto bubble up for now, until CorePaymentAccountsService.java\nthrows specific IllegalStateExceptions with user friendly\nerror messages.  (See CoreWalletsService.java for example.)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ea0ea23692f37508acb56d2dc3d8f7333ebad0", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/d6ea0ea23692f37508acb56d2dc3d8f7333ebad0", "committedDate": "2020-06-20T13:21:57Z", "message": "Re-add license comment\n\nThe previous revert was a mistake.  It applied to\nGrpcPaymentAccountsService, not CorePaymentAccountsService."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41f1add76b4faf66c2baf3c2c6633809365b41b4", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/41f1add76b4faf66c2baf3c2c6633809365b41b4", "committedDate": "2020-06-20T13:24:14Z", "message": "Remove try catch block\n\nRemove the recently added gRPC StatusRuntimeException wrapping\nlogic because we want unexpected Exceptions to bubble up for now,\nuntil CorePaymentAccountsService.java throws specific\nIllegalStateExceptions with user friendly error messages.\n(See CoreWalletsService.java for example.)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88cb90e2093e3563de1eb1e30cad46083245c172", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/88cb90e2093e3563de1eb1e30cad46083245c172", "committedDate": "2020-06-20T22:56:28Z", "message": "Add rpc method 'getoffers'\n\nThe new method returns current buy or sell offers for a fiat ccy.\n\nThese changes need refactoring and polishing before merging, but they're\ncommitted in this state to be safe (don't lose work).  Changes include:\n\n* New core.grpc classes\n    CoreOffersService\n    GrpcOffersService\n    model.OfferInfo\n\n* CoreApi -- The new CoreOffersService is injected into CoreApi and\n  the old getOffers() and placeOffer() impls were moved into the\n  new CoreOffersService.  The getOffers implementation was re-done.\n  Other changes are just rearranging location of core method calls.\n\n* GrpcServer -- The new GrpcOffersService replaced the old\n  GetOffersService and PlaceOfferService.\n\n* grpc.proto -- The old GetOffers and PlaceOffer services were combined\n  into a single Offers service, and the PlaceOffer rpc was renamed\n  as CreateOffer.  These are the only substantive changes; the rest\n  is just rearranging location of the service defs in the file.\n  Also created a lighterweight OfferInfo proto message wrapper to\n  be passed between server & client (client has no access to core's\n  Offer and OfferPayload).\n\n* OfferInfo -- A new wrapper around the OfferInfo proto message.\n\n* CliMain -- The new GetOffers service stub was added.\n  Some (maybe too much) number and ccy formatting logic was\n  copied & modified from core.  Some tedius string formatting\n  was added too (needs to be tidied up).\n\n* License comments were also copied to several classes, and I\n  made a mistake in reverting changes to the wrong file.\n\nTODO add unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1756258e818ec819dffc511ec71c554ab404fc0b", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/1756258e818ec819dffc511ec71c554ab404fc0b", "committedDate": "2020-06-20T23:09:18Z", "message": "Do not use protobuf.OfferPayload.Direction in client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4778976b6bb78b73537571b2ce8089fe6f427dbf", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/4778976b6bb78b73537571b2ce8089fe6f427dbf", "committedDate": "2020-06-20T23:24:49Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b25abf1b6bf14aa3332fccb8e7b312ba43425673", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/b25abf1b6bf14aa3332fccb8e7b312ba43425673", "committedDate": "2020-06-21T22:46:37Z", "message": "Refactor CLI output table formatting\n\nThis change moves logic for formatting BTC balances, dates and\ntables out of CliMain.  Two new output formatting classes were\nadded:  CurrencyFormat and TableFormat."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a48af7c05276f8a219994a776d9c4f4a30b97fb9", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/a48af7c05276f8a219994a776d9c4f4a30b97fb9", "committedDate": "2020-06-22T17:43:59Z", "message": "Add 'getoffers' unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61285a760280eb42d00ef703f019a97ce806b0f9", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/61285a760280eb42d00ef703f019a97ce806b0f9", "committedDate": "2020-06-22T18:08:46Z", "message": "Do not change case of input params in client\n\nThis commit is for a change requested in PR 4308:\nhttps://github.com/bisq-network/bisq/pull/4308#pullrequestreview-435055483\n\n  \".toUpperCase() seems misplaced here. It would soon get repetive.\n  Whether the underlying logic differentiates between capitalizations\n  is a low-level implementation detail and would do better at the\n  lowest practical level.\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9bdefa006843fb1f8b555672377ad0d85f493c", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/0d9bdefa006843fb1f8b555672377ad0d85f493c", "committedDate": "2020-06-22T18:23:27Z", "message": "Add 'getoffers' smoke test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dcfa50bde222b01b78bcc88e685109f1657d63d", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/8dcfa50bde222b01b78bcc88e685109f1657d63d", "committedDate": "2020-06-22T20:49:46Z", "message": "Define reusable headers from balance-info tbl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52529a912eeae18c78dae9ed00e8c73d6357917f", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/52529a912eeae18c78dae9ed00e8c73d6357917f", "committedDate": "2020-06-22T21:20:09Z", "message": "Move getpaymentaccts tbl formatting to TableFormat\n\nCreated a new TableFormat.formatPaymentAcctTbl method.\n\nAlso:\n\n * Defined new \"Currency\" and \"Name\" column headers in TableFormat.\n\n * Changed syntax of stream().map() calls in some TableFormat methods.\n\n * Fixed verbose return statement in TableFormat.getLengthOfLongestColumn.\n\nThis commit is out of scope for the getoffers PR (4329), but is\nincluded as part of the migration of all console tbl formatting\nfrom the client into TableFormat."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9691f350825cbe33e2a4ab17b51d1032f4e9efc1", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/9691f350825cbe33e2a4ab17b51d1032f4e9efc1", "committedDate": "2020-06-23T15:42:56Z", "message": "Check param count only, not param order correctness\n\nThis change simplifies client 'createpaymentacct' method parameter\nvalidation.  It no longer assumes parameter ordering is correct, and\nonly verifies the string parameter count is correct.\n\nA unit test was also added to cli/test.sh\n\nThis commit is in response to the requested change in PR 4308.\nhttps://github.com/bisq-network/bisq/pull/4308#pullrequestreview-435052357"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/e1fddfacf8867ed139f0e594f2fb4adafe27e8c4", "committedDate": "2020-06-23T16:11:36Z", "message": "Remove duplication in wallets availability checks\n\nThis change adds a new 'verifyWalletsAreAvailable' method to the client,\nwhich eliminates this duplicated statement:\n    throw new IllegalStateException(\"wallet is not yet available\");\n\nThe commit is in response to a requested change in PR 4312:\nhttps://github.com/bisq-network/bisq/pull/4312#pullrequestreview-435659314"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDE2Nzk0", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436016794", "createdAt": "2020-06-23T17:47:00Z", "commit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0NzowMFrOGn0E4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0NzowMFrOGn0E4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMDg2Nw==", "bodyText": "It took me a minute to realise that the difference between these methods is that one of them takes primitives and the other takes higher level abstractions. I'm leaving this comment as an annotation for myself.", "url": "https://github.com/bisq-network/bisq/pull/4329#discussion_r444400867", "createdAt": "2020-06-23T17:47:00Z", "author": {"login": "dmos62"}, "path": "core/src/main/java/bisq/core/grpc/CoreApi.java", "diffHunk": "@@ -48,35 +44,95 @@\n  */\n @Slf4j\n public class CoreApi {\n+\n+    private final CoreOffersService coreOffersService;\n     private final CorePaymentAccountsService paymentAccountsService;\n     private final CoreWalletsService walletsService;\n-    private final OfferBookService offerBookService;\n     private final TradeStatisticsManager tradeStatisticsManager;\n-    private final CreateOfferService createOfferService;\n-    private final OpenOfferManager openOfferManager;\n-    private final User user;\n \n     @Inject\n-    public CoreApi(CorePaymentAccountsService paymentAccountsService,\n+    public CoreApi(CoreOffersService coreOffersService,\n+                   CorePaymentAccountsService paymentAccountsService,\n                    CoreWalletsService walletsService,\n-                   OfferBookService offerBookService,\n-                   TradeStatisticsManager tradeStatisticsManager,\n-                   CreateOfferService createOfferService,\n-                   OpenOfferManager openOfferManager,\n-                   User user) {\n+                   TradeStatisticsManager tradeStatisticsManager) {\n+        this.coreOffersService = coreOffersService;\n         this.paymentAccountsService = paymentAccountsService;\n         this.walletsService = walletsService;\n-        this.offerBookService = offerBookService;\n         this.tradeStatisticsManager = tradeStatisticsManager;\n-        this.createOfferService = createOfferService;\n-        this.openOfferManager = openOfferManager;\n-        this.user = user;\n     }\n \n     public String getVersion() {\n         return Version.VERSION;\n     }\n \n+    ///////////////////////////////////////////////////////////////////////////////////////////\n+    // Offers\n+    ///////////////////////////////////////////////////////////////////////////////////////////\n+\n+    public List<Offer> getOffers(String direction, String fiatCurrencyCode) {\n+        return coreOffersService.getOffers(direction, fiatCurrencyCode);\n+    }\n+\n+    public void createOffer(String currencyCode,\n+                            String directionAsString,\n+                            long priceAsLong,\n+                            boolean useMarketBasedPrice,\n+                            double marketPriceMargin,\n+                            long amountAsLong,\n+                            long minAmountAsLong,\n+                            double buyerSecurityDeposit,\n+                            String paymentAccountId,\n+                            TransactionResultHandler resultHandler) {\n+        coreOffersService.createOffer(currencyCode,\n+                directionAsString,\n+                priceAsLong,\n+                useMarketBasedPrice,\n+                marketPriceMargin,\n+                amountAsLong,\n+                minAmountAsLong,\n+                buyerSecurityDeposit,\n+                paymentAccountId,\n+                resultHandler);\n+    }\n+\n+    public void createOffer(String offerId,\n+                            String currencyCode,\n+                            OfferPayload.Direction direction,\n+                            Price price,\n+                            boolean useMarketBasedPrice,\n+                            double marketPriceMargin,\n+                            Coin amount,\n+                            Coin minAmount,\n+                            double buyerSecurityDeposit,\n+                            PaymentAccount paymentAccount,\n+                            boolean useSavingsWallet,\n+                            TransactionResultHandler resultHandler) {\n+        coreOffersService.createOffer(offerId,\n+                currencyCode,\n+                direction,\n+                price,\n+                useMarketBasedPrice,\n+                marketPriceMargin,\n+                amount,\n+                minAmount,\n+                buyerSecurityDeposit,\n+                paymentAccount,\n+                useSavingsWallet,\n+                resultHandler);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDMzNTAy", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436033502", "createdAt": "2020-06-23T18:08:51Z", "commit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxODowODo1MVrOGn01-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxODoxNjo0MVrOGn1GxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxMzQzNQ==", "bodyText": "Would like to see these predicates moved into descriptive intermediate variables for the sake of readability.\no -> {\n  var offerOfWantedDirection = !o.getDirection().name().equalsIgnoreCase(direction);\n  var offerInWantedCurrency = o.getOfferPayload().getCounterCurrencyCode().equalsIgnoreCase(fiatCurrencyCode);\n  return offerOfWantedDirection && offerInWantedCurrency;\n}", "url": "https://github.com/bisq-network/bisq/pull/4329#discussion_r444413435", "createdAt": "2020-06-23T18:08:51Z", "author": {"login": "dmos62"}, "path": "core/src/main/java/bisq/core/grpc/CoreOffersService.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.core.grpc;\n+\n+import bisq.core.monetary.Price;\n+import bisq.core.offer.CreateOfferService;\n+import bisq.core.offer.Offer;\n+import bisq.core.offer.OfferBookService;\n+import bisq.core.offer.OfferPayload;\n+import bisq.core.offer.OpenOfferManager;\n+import bisq.core.payment.PaymentAccount;\n+import bisq.core.trade.handlers.TransactionResultHandler;\n+import bisq.core.user.User;\n+\n+import org.bitcoinj.core.Coin;\n+\n+import javax.inject.Inject;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import static bisq.core.offer.OfferPayload.Direction.BUY;\n+\n+@Slf4j\n+public class CoreOffersService {\n+\n+    private final CreateOfferService createOfferService;\n+    private final OfferBookService offerBookService;\n+    private final OpenOfferManager openOfferManager;\n+    private final User user;\n+\n+    @Inject\n+    public CoreOffersService(CreateOfferService createOfferService,\n+                             OfferBookService offerBookService,\n+                             OpenOfferManager openOfferManager,\n+                             User user) {\n+        this.createOfferService = createOfferService;\n+        this.offerBookService = offerBookService;\n+        this.openOfferManager = openOfferManager;\n+        this.user = user;\n+    }\n+\n+    public List<Offer> getOffers(String direction, String fiatCurrencyCode) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> !o.getDirection().name().equalsIgnoreCase(direction)\n+                        && o.getOfferPayload().getCounterCurrencyCode().equalsIgnoreCase(fiatCurrencyCode))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxNzczMg==", "bodyText": "There is an inconsistency here. If we call with direction = sell, this will return offers with direction = buy. Not yet sure how to fix it.", "url": "https://github.com/bisq-network/bisq/pull/4329#discussion_r444417732", "createdAt": "2020-06-23T18:16:41Z", "author": {"login": "dmos62"}, "path": "core/src/main/java/bisq/core/grpc/CoreOffersService.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.core.grpc;\n+\n+import bisq.core.monetary.Price;\n+import bisq.core.offer.CreateOfferService;\n+import bisq.core.offer.Offer;\n+import bisq.core.offer.OfferBookService;\n+import bisq.core.offer.OfferPayload;\n+import bisq.core.offer.OpenOfferManager;\n+import bisq.core.payment.PaymentAccount;\n+import bisq.core.trade.handlers.TransactionResultHandler;\n+import bisq.core.user.User;\n+\n+import org.bitcoinj.core.Coin;\n+\n+import javax.inject.Inject;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import static bisq.core.offer.OfferPayload.Direction.BUY;\n+\n+@Slf4j\n+public class CoreOffersService {\n+\n+    private final CreateOfferService createOfferService;\n+    private final OfferBookService offerBookService;\n+    private final OpenOfferManager openOfferManager;\n+    private final User user;\n+\n+    @Inject\n+    public CoreOffersService(CreateOfferService createOfferService,\n+                             OfferBookService offerBookService,\n+                             OpenOfferManager openOfferManager,\n+                             User user) {\n+        this.createOfferService = createOfferService;\n+        this.offerBookService = offerBookService;\n+        this.openOfferManager = openOfferManager;\n+        this.user = user;\n+    }\n+\n+    public List<Offer> getOffers(String direction, String fiatCurrencyCode) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> !o.getDirection().name().equalsIgnoreCase(direction)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1fddfacf8867ed139f0e594f2fb4adafe27e8c4"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69792098c63093bf80926dbcf2355fecfdfa4b5a", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/69792098c63093bf80926dbcf2355fecfdfa4b5a", "committedDate": "2020-06-23T18:29:32Z", "message": "Check param count only, not param order correctness\n\nThis change simplifies client 'getoffers' method parameter\nvalidation.  It no longer assumes parameter ordering is correct, nor\nvalidates the direction parameter value.  The client only verifies\nthe correct number of string parameters are present."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51d82b1dff4764bf136a6a9049ebdd054ad63095", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/51d82b1dff4764bf136a6a9049ebdd054ad63095", "committedDate": "2020-06-23T20:15:39Z", "message": "Fix offer list filter bug due to direction flip\n\nRespect the direction parmeter;  do not give it meaning it does not\nhave.  If the user passes a 'buy' parameter, return buy offers.  Do\nnot misinterpret the param's intent.  The direction parameter's value\ndoes not imply \"buy=I'm a buyer, show me sell offers\" or\n\"sell=I'm a seller, show me buy offers\".\n\nI got mixed up by looking at the UI.  If I want to sell BTC, I click\nthe SELL tab to view buy offers (maker as buyer).  If I want to buy\nBTC, I click the BUY tab to view sell offers (maker as seller).\n\nThis change also fixes an offer list sorting bug.\n\nThe commit is in response to a requested changes in PR 4329:\nhttps://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436033502"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDY1MTUx", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436465151", "createdAt": "2020-06-24T09:11:03Z", "commit": {"oid": "51d82b1dff4764bf136a6a9049ebdd054ad63095"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NDY1Nzg2", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436465786", "createdAt": "2020-06-24T09:11:56Z", "commit": {"oid": "51d82b1dff4764bf136a6a9049ebdd054ad63095"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f820897e5bc45dbb8bb824f84f024d3f4fcb5ad0", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/f820897e5bc45dbb8bb824f84f024d3f4fcb5ad0", "committedDate": "2020-06-24T16:27:43Z", "message": "Format dates ISO 8601 in UTC\n\nWe display all dates in UTC, using the \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODY1MjM4", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-436865238", "createdAt": "2020-06-24T17:37:41Z", "commit": {"oid": "f820897e5bc45dbb8bb824f84f024d3f4fcb5ad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzYyNjQy", "url": "https://github.com/bisq-network/bisq/pull/4329#pullrequestreview-437762642", "createdAt": "2020-06-25T18:41:17Z", "commit": {"oid": "f820897e5bc45dbb8bb824f84f024d3f4fcb5ad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}