{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNDQyMzA2", "number": 4789, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjoxN1rOE41pPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjoxN1rOE41pPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDM0NjIzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjoxN1rOHy_0cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzozNToyN1rOHzCz2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjQ2NA==", "bodyText": "The Transaction.bitcoinSerializeToStream method does use that flag not only for adding segwit data but also for writing a flag:\n // marker, flag\n        if (useSegwit) {\n            stream.write(0);\n            stream.write(1);\n        }\n\nI don't know which function this flag has, but maybe its more safe to remove the segwit data in a different way. Maybe @oscarguindzberg can add his input here...", "url": "https://github.com/bisq-network/bisq/pull/4789#discussion_r523236464", "createdAt": "2020-11-13T21:16:17Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java", "diffHunk": "@@ -32,6 +34,9 @@ public BuyerAsMakerSendsInputsForDepositTxResponse(TaskRunner<Trade> taskHandler\n \n     @Override\n     protected byte[] getPreparedDepositTx() {\n-        return processModel.getPreparedDepositTx();\n+        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());\n+        // Remove witnesses from preparedDepositTx, so that the seller can still compute the final\n+        // tx id, but cannot publish it before providing the buyer with a signed delayed payout tx.\n+        return preparedDepositTx.bitcoinSerialize(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5762701f99b3f5f499aa04f5a7945a237062977e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NTQ2NQ==", "bodyText": "the function of the flag is \"tx serialzed using the new segwit format\".\nbitcoinSerialize(false) seems fine if you want to avoid sending the signatures.", "url": "https://github.com/bisq-network/bisq/pull/4789#discussion_r523285465", "createdAt": "2020-11-13T23:35:27Z", "author": {"login": "oscarguindzberg"}, "path": "core/src/main/java/bisq/core/trade/protocol/tasks/buyer_as_maker/BuyerAsMakerSendsInputsForDepositTxResponse.java", "diffHunk": "@@ -32,6 +34,9 @@ public BuyerAsMakerSendsInputsForDepositTxResponse(TaskRunner<Trade> taskHandler\n \n     @Override\n     protected byte[] getPreparedDepositTx() {\n-        return processModel.getPreparedDepositTx();\n+        Transaction preparedDepositTx = processModel.getBtcWalletService().getTxFromSerializedTx(processModel.getPreparedDepositTx());\n+        // Remove witnesses from preparedDepositTx, so that the seller can still compute the final\n+        // tx id, but cannot publish it before providing the buyer with a signed delayed payout tx.\n+        return preparedDepositTx.bitcoinSerialize(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjQ2NA=="}, "originalCommit": {"oid": "5762701f99b3f5f499aa04f5a7945a237062977e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2711, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}