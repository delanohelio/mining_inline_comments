{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTA3MTgw", "number": 4212, "title": "Bugfix and typofix", "bodyText": "Two omitted breaks in switch statements and one typo. One of the omitted breaks is serious-ish, info in commit messages.", "createdAt": "2020-04-29T19:26:42Z", "url": "https://github.com/bisq-network/bisq/pull/4212", "merged": true, "mergeCommit": {"oid": "5e9bbfc3ad8b24262f75d2d6c2004f41615af3d1"}, "closed": true, "closedAt": "2020-05-05T15:18:56Z", "author": {"login": "dmos62"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccdUDrgH2gAyNDEwOTA3MTgwOmRhMWExMjIwNmU3YTQwNjRmZGRlMjZjYTRiYTgzNDA5NTdjMGJiMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceXIRsAFqTQwNTk4MjcwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da1a12206e7a4064fdde26ca4ba8340957c0bb37", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/da1a12206e7a4064fdde26ca4ba8340957c0bb37", "committedDate": "2020-04-29T19:05:07Z", "message": "Typo short-circuit boolean operator\n\nNon-bug; only effect that the other instanceof is always evaluated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b", "committedDate": "2020-04-29T19:19:29Z", "message": "Fix forgotten break in switch statement\n\nThis omission is currently not disruptive, since the next case clause only contains a break. Also converted a few `return false` to breaks, to align with the rest of the switch statement."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb76fd65481e882ae0e232c3d8c1814e29a9e878", "author": {"user": {"login": "dmos62", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/fb76fd65481e882ae0e232c3d8c1814e29a9e878", "committedDate": "2020-04-29T19:20:59Z", "message": "Fix forgotten break in switch statement\n\nWithout the break statement, the execution would continue through the subsequent case clauses until it encountered a break, executing `checkArgument` calls meant for `REIMBURSEMENT_MAX_AMOUNT`. More specifically, the bug would cause a failed check in the case where `inputValueAsCoin.value <= 200000000` is false."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODkyOTMw", "url": "https://github.com/bisq-network/bisq/pull/4212#pullrequestreview-405892930", "createdAt": "2020-05-05T15:18:45Z", "commit": {"oid": "fb76fd65481e882ae0e232c3d8c1814e29a9e878"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTY1MTY4", "url": "https://github.com/bisq-network/bisq/pull/4212#pullrequestreview-405965168", "createdAt": "2020-05-05T16:39:41Z", "commit": {"oid": "fb76fd65481e882ae0e232c3d8c1814e29a9e878"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozOTo0MVrOGQyBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo0NTozM1rOGQyQHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0OTk2Mg==", "bodyText": "I think the correct version would be:\n            case REIMBURSEMENT_MIN_AMOUNT:\n            case COMPENSATION_REQUEST_MAX_AMOUNT:\n            case REIMBURSEMENT_MAX_AMOUNT:\n                checkArgument(inputValueAsCoin.value >= Restrictions.getMinNonDustOutput().value,\n                        Res.get(\"validation.amountBelowDust\", Restrictions.getMinNonDustOutput().value));\n                checkArgument(inputValueAsCoin.value <= 200000000,\n                        Res.get(\"validation.inputTooLarge\", \"200 000 BSQ\"));\n                break;\n\nAlso MinAmount must not exceed the 200 000 BSQ.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420249962", "createdAt": "2020-05-05T16:39:41Z", "author": {"login": "ManfredKarrer"}, "path": "core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java", "diffHunk": "@@ -144,6 +144,7 @@ private void validateBsqValue(Coin currentParamValueAsCoin, Coin inputValueAsCoi\n             case REIMBURSEMENT_MIN_AMOUNT:\n                 checkArgument(inputValueAsCoin.value >= Restrictions.getMinNonDustOutput().value,\n                         Res.get(\"validation.amountBelowDust\", Restrictions.getMinNonDustOutput().value));\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb76fd65481e882ae0e232c3d8c1814e29a9e878"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MzcyNA==", "bodyText": "I don't see any problem with that change but as it is a pure \"cosmetic\" change I prefer to not touch the code. Some could argue the early return is more readable. I don't have a strong opinion and the break is more consistent but evaluating benefit / risk just does not justify the change IMO even it seems a trivial and very low risk change.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420253724", "createdAt": "2020-05-05T16:45:33Z", "author": {"login": "ManfredKarrer"}, "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "diffHunk": "@@ -285,14 +285,15 @@ private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {\n                         // We always have the BSQ change before the burned BSQ output if both are present.\n                         checkArgument(optionalOpReturnIndex.isPresent());\n                         if (index != optionalOpReturnIndex.get() - 1) {\n-                            return false;\n+                            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTgyNzAw", "url": "https://github.com/bisq-network/bisq/pull/4212#pullrequestreview-405982700", "createdAt": "2020-05-05T17:00:40Z", "commit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowMDo0MFrOGQy8vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowMDo0MFrOGQy8vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NTE0OA==", "bodyText": "If the semantic changes in this file are reverted, take care not to revert adding this break.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420265148", "createdAt": "2020-05-05T17:00:40Z", "author": {"login": "dmos62"}, "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "diffHunk": "@@ -285,14 +285,15 @@ private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {\n                         // We always have the BSQ change before the burned BSQ output if both are present.\n                         checkArgument(optionalOpReturnIndex.isPresent());\n                         if (index != optionalOpReturnIndex.get() - 1) {\n-                            return false;\n+                            break;\n                         }\n \n                         // Without checking the fee we would not be able to distinguish between 2 structurally same transactions, one\n                         // where the output is burned BSQ and one where it is a BSQ change output.\n                         long blindVoteFee = daoStateService.getParamValueAsCoin(Param.BLIND_VOTE_FEE, tempTxOutput.getBlockHeight()).value;\n                         return availableInputValue == blindVoteFee;\n                     }\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3272, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}