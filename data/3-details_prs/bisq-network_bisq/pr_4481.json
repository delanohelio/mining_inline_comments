{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMjc2MTM5", "number": 4481, "title": "Add backward compatibility for revolut change", "bodyText": "Fixes #4476\nNew appraoch:\nWe apply userName to accountId if it is not set (e.g. new account created with new version). We do not use that for display or for account signing in case both fields are the same but we need to use accountId in case the user trades with a not updated user who expects accountId as only field.\nI improved a bit the display of account data in the trade screens.\nIn case accountId was set with the phone number (updated account with phone nr used for account signing) we show both userName and phone nr.\n\nShow phone number if accountId was set by old account. Otherwise show only userName\nFor old users they will see the user name as phone number displayed if they trade with new users if the new user has created a new account. If he has updated an existing account the accountId (phone number) is used, so it displays the phone number.\nAt step 2 changed display of own account data to show account name\nAdd 'Recipients' prefix to account data of peer at step 2\n\nStep 3: Buyers account data can be\n\nPhone number if peer is using old version\nUser name if peer is updated user with new account (we apply userName to accountId)\nPhone number if user is on old version and peer is updated user with updated account (we keep accountId as phone number)\nUser name/Phone number if peer is updated user with updated account\n\nUsers/testers who have used master with the new username set, may face unexpected issues. Best is to remove such accounts (if testers). If it happens to traders they can copy salt and create a new account with same phone number with old release version. So the same witness is created for account signing. And then update to master again to set the new user name.", "createdAt": "2020-09-04T23:32:25Z", "url": "https://github.com/bisq-network/bisq/pull/4481", "merged": true, "mergeCommit": {"oid": "682cc402e739384815bb7354ceb0e9b5a359bf37"}, "closed": true, "closedAt": "2020-09-06T17:13:10Z", "author": {"login": "chimp1984"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFqr9UgH2gAyNDgwMjc2MTM5OjYxYzA3MTE4NGVhYWNlOTMwNmVlMTM4NTdkM2Q5ZGEzNTU0MjM3MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHNCWJAFqTQ4NTA2NjM0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61c071184eaace9306ee13857d3d9da355423726", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/61c071184eaace9306ee13857d3d9da355423726", "committedDate": "2020-09-04T19:50:53Z", "message": "Add JsonExclude to userName\n\nFor backward compatibility we need to exclude the new field for\nthe contract json.\nWe can remove that after a while when risk that users with\npre 1.3.8 version trade with updated\nusers is very low."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c87899c662fff2e678229c32fda3793645e9a7f7", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/c87899c662fff2e678229c32fda3793645e9a7f7", "committedDate": "2020-09-04T19:51:34Z", "message": "Add check if xmrTxProof is used to avoid null pointer exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6db6e738280f7fd37f4b24a53135cf3178a50e", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/9e6db6e738280f7fd37f4b24a53135cf3178a50e", "committedDate": "2020-09-04T23:20:16Z", "message": "Move revolutAccountsUpdateHandler code up to BisqSetup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/97d3383dbbe3dc567956fe782ec826c82c2db6d9", "committedDate": "2020-09-04T23:30:08Z", "message": "Fix handling of username/accountId\n\nWe apply userName to accountId if it is not set (e.g. new account\ncreated with new version). We do not use that for display or for\naccount signing in case both fields are the same but we need to use\naccountId in case the user trades with a not updated user who expects\naccountId as only field.\nI improved a bit the display of account data in the trade screens.\nIn case accountId was set with the phone number (updated account with\nphone nr used for account signing) we show both userName and phone nr.\n\n- Show phone number if accountId was set by old account. Otherwise\nshow only userName\n- For old users they will see the user name as phone number displayed\nif they trade with new users if the new user has created a new account.\nIf he has updated an existing account the accountId (phone number) is\nused, so it displays the phone number.\n- At step 2 changed display of own account data to show account name\n- Add 'Recipients' prefix to account data of peer at step 2\n\nStep 3: Buyers account data can be\n- Phone number if peer is using old version\n- User name if peer is updated user with new account (we apply userName\nto accountId)\n- Phone number if user is on old version and peer is updated user with\nupdated account (we keep accountId as phone number)\n- User name/Phone number if peer is updated user with updated account"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDU5MDUz", "url": "https://github.com/bisq-network/bisq/pull/4481#pullrequestreview-483059053", "createdAt": "2020-09-05T14:38:06Z", "commit": {"oid": "c87899c662fff2e678229c32fda3793645e9a7f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNDozODowN1rOHNiYHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNDo0OTo1OFrOHNiboA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc2NA==", "bodyText": "This will be done in the next statement anyway", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483956764", "createdAt": "2020-09-05T14:38:07Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep3View.java", "diffHunk": "@@ -157,13 +154,19 @@ public void activate() {\n             }\n         });\n \n-        // we listen for updates on the trade autoConfirmResult field\n-        if (assetTxProofResultField != null) {\n-            trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+        if (useXmrTxProof) {\n+            proofResultListener = (observable, oldValue, newValue) -> {\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());\n+            };\n+\n+            // we listen for updates on the trade autoConfirmResult field\n+            if (assetTxProofResultField != null) {\n+                trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c87899c662fff2e678229c32fda3793645e9a7f7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1Njc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            applyAssetTxProofResult(trade.getAssetTxProofResult());", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483956780", "createdAt": "2020-09-05T14:38:19Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/steps/seller/SellerStep3View.java", "diffHunk": "@@ -157,13 +154,19 @@ public void activate() {\n             }\n         });\n \n-        // we listen for updates on the trade autoConfirmResult field\n-        if (assetTxProofResultField != null) {\n-            trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+        if (useXmrTxProof) {\n+            proofResultListener = (observable, oldValue, newValue) -> {\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());\n+            };\n+\n+            // we listen for updates on the trade autoConfirmResult field\n+            if (assetTxProofResultField != null) {\n+                trade.getAssetTxProofResultUpdateProperty().addListener(proofResultListener);\n+                applyAssetTxProofResult(trade.getAssetTxProofResult());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c87899c662fff2e678229c32fda3793645e9a7f7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzQ3Nw==", "bodyText": "This is kind of a mess, but seems correct.", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483957477", "createdAt": "2020-09-05T14:47:15Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -105,7 +110,34 @@ public static RevolutAccountPayload fromProto(protobuf.PaymentAccountPayload pro\n \n     @Override\n     public String getPaymentDetails() {\n-        return Res.get(paymentMethodId) + \" - \" + Res.getWithCol(\"payment.account.userName\") + \" \" + getUserName();\n+        Tuple2<String, String> tuple = getLabelValueTuple();\n+        return Res.get(paymentMethodId) + \" - \" + tuple.first + \": \" + tuple.second;\n+    }\n+\n+    private Tuple2<String, String> getLabelValueTuple() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1NzY2NA==", "bodyText": "Using var tuple really helps make the code cleaner and easier to read in cases like this. Although that's personal preference.", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r483957664", "createdAt": "2020-09-05T14:49:58Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -105,7 +110,34 @@ public static RevolutAccountPayload fromProto(protobuf.PaymentAccountPayload pro\n \n     @Override\n     public String getPaymentDetails() {\n-        return Res.get(paymentMethodId) + \" - \" + Res.getWithCol(\"payment.account.userName\") + \" \" + getUserName();\n+        Tuple2<String, String> tuple = getLabelValueTuple();\n+        return Res.get(paymentMethodId) + \" - \" + tuple.first + \": \" + tuple.second;\n+    }\n+\n+    private Tuple2<String, String> getLabelValueTuple() {\n+        String label;\n+        String value;\n+        checkArgument(!userName.isEmpty() || hasOldAccountId(),\n+                \"Either username must be set or we have an old account with accountId\");\n+        if (!userName.isEmpty()) {\n+            label = Res.get(\"payment.account.userName\");\n+            value = userName;\n+\n+            if (hasOldAccountId()) {\n+                label += \"/\" + Res.get(\"payment.account.phoneNr\");\n+                value += \"/\" + accountId;\n+            }\n+        } else {\n+            label = Res.get(\"payment.account.phoneNr\");\n+            value = accountId;\n+        }\n+        return new Tuple2<>(label, value);\n+    }\n+\n+    public Tuple2<String, String> getRecipientsAccountData() {\n+        Tuple2<String, String> tuple = getLabelValueTuple();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec31ecbf4399f23d4b41633f515461d3d972dc33", "author": {"user": {"login": "chimp1984", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/ec31ecbf4399f23d4b41633f515461d3d972dc33", "committedDate": "2020-09-06T17:05:39Z", "message": "Improve handling of nullable assetTxProof fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTU5NDgw", "url": "https://github.com/bisq-network/bisq/pull/4481#pullrequestreview-483159480", "createdAt": "2020-09-06T17:13:03Z", "commit": {"oid": "ec31ecbf4399f23d4b41633f515461d3d972dc33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MDY2MzQy", "url": "https://github.com/bisq-network/bisq/pull/4481#pullrequestreview-485066342", "createdAt": "2020-09-09T14:26:01Z", "commit": {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoyNjowMlrOHPKB7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoyNjowMlrOHPKB7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1NTAyMA==", "bodyText": "I just tried to create a new Revolut account and saw that it doesn't behave as expected.\n\n\nThe problem is that it is checked at this place if the accountId is empty which will only work for the first character entered into the field e.g. B of Bobby this ends up with accountId set to B and userName set to Bobby", "url": "https://github.com/bisq-network/bisq/pull/4481#discussion_r485655020", "createdAt": "2020-09-09T14:26:02Z", "author": {"login": "ripcurlx"}, "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -116,23 +148,30 @@ public String getPaymentDetailsForTradePopup() {\n     @Override\n     public byte[] getAgeWitnessInputData() {\n         // getAgeWitnessInputData is called at new account creation when accountId is empty string.\n-        return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+        if (hasOldAccountId()) {\n+            // If the accountId was already in place (updated user who had used accountId for account age) we keep the\n+            // old accountId to not invalidate the existing account age witness.\n+            return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+\n+        } else {\n+            // If a new account was registered from version 1.3.8 or later we use the userName.\n+            return super.getAgeWitnessInputData(userName.getBytes(StandardCharsets.UTF_8));\n+        }\n     }\n \n-    public void setUserName(@Nullable String userName) {\n-        this.userName = userName;\n-        // We only set accountId to userName for new accounts. Existing accounts have accountId set with email\n-        // or phone nr. and we keep that to not break account signing.\n-        if (accountId.isEmpty()) {\n-            accountId = userName;\n-        }\n+    public boolean userNameNotSet() {\n+        return userName.isEmpty();\n     }\n \n-    public String getUserName() {\n-        return userName != null ? userName : accountId;\n+    public boolean hasOldAccountId() {\n+        return !accountId.equals(userName);\n     }\n \n-    public boolean userNameNotSet() {\n-        return userName == null;\n+    public void setUserName(String userName) {\n+        this.userName = userName;\n+        // We need to set accountId as pre v1.3.8 clients expect the accountId field\n+        if (accountId.isEmpty()) {\n+            accountId = userName;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d3383dbbe3dc567956fe782ec826c82c2db6d9"}, "originalPosition": 155}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3161, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}