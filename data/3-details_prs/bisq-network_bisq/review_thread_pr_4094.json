{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTE4MDY0", "number": 4094, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNjo1M1rODrwOkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDoxNTo0OVrODsmtcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA1NTIzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNjo1M1rOF8SHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNjo1M1rOF8SHiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1NTcyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n          \n          \n            \n                    List<TransactionOutput> toKeep = new ArrayList<>();", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398755721", "createdAt": "2020-03-26T17:26:53Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA1OTk3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNzo1NlrOF8SKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNzo1NlrOF8SKhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1NjQ4NA==", "bodyText": "More descriptive variable names are preferred...", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398756484", "createdAt": "2020-03-26T17:27:56Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA2OTc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozMDowNVrOF8SQxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozMDowNVrOF8SQxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1ODA4Nw==", "bodyText": "...especially names like zz are very hard to follow except in the most simple cases. Calling it output or txOutput to make it more readable is preferred.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398758087", "createdAt": "2020-03-26T17:30:05Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA3OTYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozMTo0N1rOF8SWsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjo1NjowNFrOF8hg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1OTYwMg==", "bodyText": "A more verbose log will help log readers.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398759602", "createdAt": "2020-03-26T17:31:47Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {\n+            if (zz.getValue().value >= 546) {\n+                toKeep.add(zz);\n+            }\n+            else {\n+                log.info(\"removing dust TXO = {}\", zz.getValue().toFriendlyString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwNzk1NQ==", "bodyText": "Thankyou for the review!  I have made the changes you suggested.  Here is an example of the more verbose logging as a result of this change:", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r399007955", "createdAt": "2020-03-27T02:56:04Z", "author": {"login": "jmacxx"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {\n+            if (zz.getValue().value >= 546) {\n+                toKeep.add(zz);\n+            }\n+            else {\n+                log.info(\"removing dust TXO = {}\", zz.getValue().toFriendlyString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1OTYwMg=="}, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA5MTM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozNDoyNlrOF8SePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozNDoyNlrOF8SePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2MTUzNA==", "bodyText": "Please use a more descriptive variable name", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398761534", "createdAt": "2020-03-26T17:34:26Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {\n+            if (zz.getValue().value >= 546) {\n+                toKeep.add(zz);\n+            }\n+            else {\n+                log.info(\"removing dust TXO = {}\", zz.getValue().toFriendlyString());\n+            }\n+        }\n+        if (toKeep.size() != txos.size()) {\n+            tx.clearOutputs();\n+            for (TransactionOutput zz : toKeep) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDk4MTYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDoxNTo0OVrOF9i4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDozNzo1OFrOF-BMjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3ODk3Nw==", "bodyText": "I think this will cause BSQ change that lower than dust to be used as extra fee. That could be a non trivial amount (5.46 BSQ > USD3). While that's not a huge amount it's still too big to be an acceptable loss for users. If BSQ prices rise it will become even less so.\nI think we'll have to fail transactions that try to pay the fee using BSQ if the change is less than dust. Best would be to show something at the time the fee is selected that it's likely to result in a dust change output and thus not be possible to continue. I think that should be doable, the fees are known at the time of setting up the trade so we can calculate the BSQ dust. One thing we need to do is make sure that if there is enough BSQ but split over 2 or more outputs, it's aggregated to avoid dust outputs. Example, counting satoshis:\nFee: 1000\nBSQ wallet outputs:\n\n1200\n900\n\nI think the tx might be constructed using only outputs 1. leaving a change output of 200, but it would be possible to construct the tx to take both 1. and 2. to pay the 1000 in fee and get the change 1100.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r400078977", "createdAt": "2020-03-30T10:15:49Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -257,6 +260,7 @@ public Transaction completeBsqTradingFeeTx(Transaction preparedBsqTx,\n         checkNotNull(wallet, \"Wallet must not be null\");\n         wallet.completeTx(sendRequest);\n         Transaction resultTx = sendRequest.tx;\n+        removeDust(resultTx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MDE3Nw==", "bodyText": "@sqrrm From what I've seen there is existing code which checks the BSQ for dust before building the transaction (see #3688).  The removeDust insertion here looks at the transaction after it is built, just before broadcasting, to remove any dust change BTC.  I will look more into how it works though.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r400240177", "createdAt": "2020-03-30T14:33:28Z", "author": {"login": "jmacxx"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -257,6 +260,7 @@ public Transaction completeBsqTradingFeeTx(Transaction preparedBsqTx,\n         checkNotNull(wallet, \"Wallet must not be null\");\n         wallet.completeTx(sendRequest);\n         Transaction resultTx = sendRequest.tx;\n+        removeDust(resultTx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3ODk3Nw=="}, "originalCommit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNzExNw==", "bodyText": "It's possible the check during tx build is not there but rather later, causing it to look like a bug. Still, that's at least better than burning BSQ unwittingly. If you could check that it's handled properly and not as a bug report that would be best of course.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r400337117", "createdAt": "2020-03-30T16:42:23Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -257,6 +260,7 @@ public Transaction completeBsqTradingFeeTx(Transaction preparedBsqTx,\n         checkNotNull(wallet, \"Wallet must not be null\");\n         wallet.completeTx(sendRequest);\n         Transaction resultTx = sendRequest.tx;\n+        removeDust(resultTx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3ODk3Nw=="}, "originalCommit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NTYzMA==", "bodyText": "At the moment there is only one way to get messages back to the GUI - via the errorMessage property on the Offer which is used by numerous exceptional events.  I looked into reporting warnings back via adding a warningMessage property and will propose that as a new PR to address #3688.  (Its a non-trivial change and I don't want to complicate this PR by adding it in here).", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r400575630", "createdAt": "2020-03-31T00:37:58Z", "author": {"login": "jmacxx"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -257,6 +260,7 @@ public Transaction completeBsqTradingFeeTx(Transaction preparedBsqTx,\n         checkNotNull(wallet, \"Wallet must not be null\");\n         wallet.completeTx(sendRequest);\n         Transaction resultTx = sendRequest.tx;\n+        removeDust(resultTx);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3ODk3Nw=="}, "originalCommit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2572, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}