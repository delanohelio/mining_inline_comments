{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjA0ODk3", "number": 4193, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoxNjoxMlrOD8f65Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoyNzoxMVrOD8gPAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzY0MTMzOnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersView.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoxNjoxMlrOGVeaSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjoxNzoxNVrOGVj9qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTUyOA==", "bodyText": "Is the null check necessary? The above calls to result of o.getOffer() don't null check.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425171528", "createdAt": "2020-05-14T14:16:12Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersView.java", "diffHunk": "@@ -116,6 +118,10 @@ public void initialize() {\n         priceColumn.setComparator(Comparator.comparing(o -> o.getOffer().getPrice(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         dateColumn.setComparator(Comparator.comparing(o -> o.getOffer().getDate()));\n+        paymentMethodColumn.setComparator(Comparator.comparing(\n+                o -> o.getOffer() != null ? o.getOffer().getPaymentMethod().getId() : null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMDI2MQ==", "bodyText": "I agree, and will modify to bring it into line with the code above it.\nJust to note, this line was copied from the existing PendingTradesView.java in which there is a payment method column.  Should I also make a change to do the same in PendingTradesView.java or would that need to be a separate code-cleanup type PR?", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425210261", "createdAt": "2020-05-14T15:06:42Z", "author": {"login": "jmacxx"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersView.java", "diffHunk": "@@ -116,6 +118,10 @@ public void initialize() {\n         priceColumn.setComparator(Comparator.comparing(o -> o.getOffer().getPrice(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         dateColumn.setComparator(Comparator.comparing(o -> o.getOffer().getDate()));\n+        paymentMethodColumn.setComparator(Comparator.comparing(\n+                o -> o.getOffer() != null ? o.getOffer().getPaymentMethod().getId() : null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTUyOA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2MjUwNQ==", "bodyText": "I think it's fine if you leave the other one as is.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425262505", "createdAt": "2020-05-14T16:17:15Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersView.java", "diffHunk": "@@ -116,6 +118,10 @@ public void initialize() {\n         priceColumn.setComparator(Comparator.comparing(o -> o.getOffer().getPrice(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         volumeColumn.setComparator(Comparator.comparing(o -> o.getOffer().getVolume(), Comparator.nullsFirst(Comparator.naturalOrder())));\n         dateColumn.setComparator(Comparator.comparing(o -> o.getOffer().getDate()));\n+        paymentMethodColumn.setComparator(Comparator.comparing(\n+                o -> o.getOffer() != null ? o.getOffer().getPaymentMethod().getId() : null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MTUyOA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzY2NjA5OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoyMTozOVrOGVeqWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowOTo0NVrOGVg6Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3NTY0MA==", "bodyText": "Unused import.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425175640", "createdAt": "2020-05-14T14:21:39Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n import bisq.desktop.common.model.ActivatableWithDataModel;\n import bisq.desktop.common.model.ViewModel;\n+import bisq.desktop.main.portfolio.pendingtrades.PendingTradesListItem;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMjQ1OA==", "bodyText": "\ud83d\udc4d will remove.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425212458", "createdAt": "2020-05-14T15:09:45Z", "author": {"login": "jmacxx"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n import bisq.desktop.common.model.ActivatableWithDataModel;\n import bisq.desktop.common.model.ViewModel;\n+import bisq.desktop.main.portfolio.pendingtrades.PendingTradesListItem;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3NTY0MA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzY5MjgxOnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoyNzoxMVrOGVe7pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzozOTo1NlrOGWFTHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDA3MA==", "bodyText": "Can we guarantee that Res.get(paymentMethod.getId() + \"_SHORT\") will always find the translation? If unsure, should wrap in try-catch.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425180070", "createdAt": "2020-05-14T14:27:11Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -118,6 +121,23 @@ String getMarketLabel(OpenOfferListItem item) {\n         return CurrencyUtil.getCurrencyPair(item.getOffer().getCurrencyCode());\n     }\n \n+    String getPaymentMethod(OpenOfferListItem item) {\n+        String result = \"\";\n+        if (item != null) {\n+            Offer offer = item.getOffer();\n+            checkNotNull(offer);\n+            checkNotNull(offer.getPaymentMethod());\n+            String method = Res.get(offer.getPaymentMethod().getId() + \"_SHORT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMjEzMw==", "bodyText": "This method is copied directly from PendingTradesViewModel.java (line 273).  I presume since the code is already working, no need to change it.  I'm open to suggestions of changing both though, if you have strong worries about it.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425212133", "createdAt": "2020-05-14T15:09:19Z", "author": {"login": "jmacxx"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -118,6 +121,23 @@ String getMarketLabel(OpenOfferListItem item) {\n         return CurrencyUtil.getCurrencyPair(item.getOffer().getCurrencyCode());\n     }\n \n+    String getPaymentMethod(OpenOfferListItem item) {\n+        String result = \"\";\n+        if (item != null) {\n+            Offer offer = item.getOffer();\n+            checkNotNull(offer);\n+            checkNotNull(offer.getPaymentMethod());\n+            String method = Res.get(offer.getPaymentMethod().getId() + \"_SHORT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDA3MA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1MDE0Mg==", "bodyText": "It would be good to move this duplicating logic to Offer itself (Offer.getPaymentMethodNameWithCountryCode() or something better). Put in a try-catch in that method for java.util.MissingResourceException (that's what Res.get might throw) and use an Option return type to distinguish whether or not the translation was found (again, since we can't guarantee (I presume) that someone won't forget to put in a translation when adding a new payment method). Extra points for extracting the Res.get(paymentMethod().getId() + \"_SHORT\") part into something like PaymentMethod.getShortName() (returns an Option). If you do less than I suggest, no one will probably mind, but it's great to leave the code just a little better.\nEdit: at first suggested moving to PaymentMethod, but then realised the logic relies on Offer. Corrected.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425250142", "createdAt": "2020-05-14T15:59:39Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -118,6 +121,23 @@ String getMarketLabel(OpenOfferListItem item) {\n         return CurrencyUtil.getCurrencyPair(item.getOffer().getCurrencyCode());\n     }\n \n+    String getPaymentMethod(OpenOfferListItem item) {\n+        String result = \"\";\n+        if (item != null) {\n+            Offer offer = item.getOffer();\n+            checkNotNull(offer);\n+            checkNotNull(offer.getPaymentMethod());\n+            String method = Res.get(offer.getPaymentMethod().getId() + \"_SHORT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDA3MA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzAyMQ==", "bodyText": "\ud83d\udc4d Done / refactored.  Res.get handles MissingResourceException itself and in that case returns the key.  I think that is a good way of handling the case of missing translations since it alleviates the caller from having to write custom error handling everywhere.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425307021", "createdAt": "2020-05-14T17:23:28Z", "author": {"login": "jmacxx"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -118,6 +121,23 @@ String getMarketLabel(OpenOfferListItem item) {\n         return CurrencyUtil.getCurrencyPair(item.getOffer().getCurrencyCode());\n     }\n \n+    String getPaymentMethod(OpenOfferListItem item) {\n+        String result = \"\";\n+        if (item != null) {\n+            Offer offer = item.getOffer();\n+            checkNotNull(offer);\n+            checkNotNull(offer.getPaymentMethod());\n+            String method = Res.get(offer.getPaymentMethod().getId() + \"_SHORT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDA3MA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwODY3MA==", "bodyText": "@jmacxx I missed that, good catch.", "url": "https://github.com/bisq-network/bisq/pull/4193#discussion_r425808670", "createdAt": "2020-05-15T13:39:56Z", "author": {"login": "dmos62"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/openoffer/OpenOffersViewModel.java", "diffHunk": "@@ -118,6 +121,23 @@ String getMarketLabel(OpenOfferListItem item) {\n         return CurrencyUtil.getCurrencyPair(item.getOffer().getCurrencyCode());\n     }\n \n+    String getPaymentMethod(OpenOfferListItem item) {\n+        String result = \"\";\n+        if (item != null) {\n+            Offer offer = item.getOffer();\n+            checkNotNull(offer);\n+            checkNotNull(offer.getPaymentMethod());\n+            String method = Res.get(offer.getPaymentMethod().getId() + \"_SHORT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDA3MA=="}, "originalCommit": {"oid": "434e3848353273ea50babc0f162c5059f4c0958a"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2499, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}