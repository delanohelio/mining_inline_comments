{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTY0MTIy", "number": 4453, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo0OTowMlrOEeQVeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo1MDozNlrOEeQXmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTYwMzc2OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/util/validation/RevolutValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo0OTowMlrOHJzsmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0MDoyNFrOHK8hHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NjIzNQ==", "bodyText": "I would like someone with knowledge of this requirement to weigh in before merging.", "url": "https://github.com/bisq-network/bisq/pull/4453#discussion_r480046235", "createdAt": "2020-08-31T10:49:02Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/util/validation/RevolutValidator.java", "diffHunk": "@@ -17,10 +17,13 @@\n \n package bisq.desktop.util.validation;\n \n-public final class RevolutValidator extends PhoneNumberValidator {\n+public final class RevolutValidator extends LengthValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c60e1739d97fd2b917e0feac46e9d76501e7037"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTMyNQ==", "bodyText": "We have to consider that even the app forces users to set userName now at startup we should not cause bigger problems if the phone number or email is used (via getuserName). Not sure if validator is used in such a potential use case, but not worth to make usage of the account impossible just because of a more strict validator. Also requirements at Revolut might change and our validation would fail then. I think we should not have a close dependency on that.", "url": "https://github.com/bisq-network/bisq/pull/4453#discussion_r481239325", "createdAt": "2020-09-01T15:40:24Z", "author": {"login": "chimp1984"}, "path": "desktop/src/main/java/bisq/desktop/util/validation/RevolutValidator.java", "diffHunk": "@@ -17,10 +17,13 @@\n \n package bisq.desktop.util.validation;\n \n-public final class RevolutValidator extends PhoneNumberValidator {\n+public final class RevolutValidator extends LengthValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NjIzNQ=="}, "originalCommit": {"oid": "6c60e1739d97fd2b917e0feac46e9d76501e7037"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTYwNDg4OnYy", "diffSide": "RIGHT", "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/UpdateRevolutAccountWindow.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo0OToyNVrOHJztTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo0OToyNVrOHJztTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NjQxNA==", "bodyText": "Keeping lines shorter helps the reviewer. and it would also be in accordance with our style guide.", "url": "https://github.com/bisq-network/bisq/pull/4453#discussion_r480046414", "createdAt": "2020-08-31T10:49:25Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/overlays/windows/UpdateRevolutAccountWindow.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file is part of Bisq.\n+ *\n+ * Bisq is free software: you can redistribute it and/or modify it\n+ * under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or (at\n+ * your option) any later version.\n+ *\n+ * Bisq is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public\n+ * License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with Bisq. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package bisq.desktop.main.overlays.windows;\n+\n+import bisq.desktop.components.InputTextField;\n+import bisq.desktop.main.overlays.Overlay;\n+import bisq.desktop.util.Layout;\n+import bisq.desktop.util.validation.RevolutValidator;\n+\n+import bisq.core.locale.Res;\n+import bisq.core.payment.RevolutAccount;\n+import bisq.core.user.User;\n+\n+import javafx.scene.Scene;\n+\n+import static bisq.desktop.util.FormBuilder.addInputTextField;\n+import static bisq.desktop.util.FormBuilder.addLabel;\n+\n+public class UpdateRevolutAccountWindow extends Overlay<UpdateRevolutAccountWindow> {\n+    private final RevolutValidator revolutValidator;\n+    private final RevolutAccount revolutAccount;\n+    private final User user;\n+    private InputTextField userNameInputTextField;\n+\n+    public UpdateRevolutAccountWindow(RevolutAccount revolutAccount, User user) {\n+        super();\n+        this.revolutAccount = revolutAccount;\n+        this.user = user;\n+        type = Type.Attention;\n+        hideCloseButton = true;\n+        revolutValidator = new RevolutValidator();\n+        actionButtonText = Res.get(\"shared.save\");\n+    }\n+\n+    @Override\n+    protected void setupKeyHandler(Scene scene) {\n+        // We do not support enter or escape here\n+    }\n+\n+    @Override\n+    public void show() {\n+        if (headLine == null)\n+            headLine = Res.get(\"payment.revolut.addUserNameInfo.headLine\");\n+\n+        width = 868;\n+        createGridPane();\n+        addHeadLine();\n+        addContent();\n+        addButtons();\n+        applyStyles();\n+        display();\n+    }\n+\n+    private void addContent() {\n+        addLabel(gridPane, ++rowIndex, Res.get(\"payment.account.revolut.addUserNameInfo\", Res.get(\"payment.revolut.info\"), revolutAccount.getAccountName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c60e1739d97fd2b917e0feac46e9d76501e7037"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTYwOTIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDo1MDozNlrOHJzvrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo0OToxMFrOHJ7-9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NzAyMw==", "bodyText": "Is this safe now that accountId can be null as well?", "url": "https://github.com/bisq-network/bisq/pull/4453#discussion_r480047023", "createdAt": "2020-08-31T10:50:36Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -95,6 +109,26 @@ public String getPaymentDetailsForTradePopup() {\n \n     @Override\n     public byte[] getAgeWitnessInputData() {\n-        return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+        // getAgeWitnessInputData is called at new account creation when accountId is null, we use empty string as\n+        // it has been the case before\n+        String input = this.accountId == null ? \"\" : this.accountId;\n+        return super.getAgeWitnessInputData(input.getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    public void setUserName(@Nullable String userName) {\n+        this.userName = userName;\n+        // We only set accountId to userName for new accounts. Existing accounts have accountId set with email\n+        // or phone nr. and we keep that to not break account signing.\n+        if (accountId == null) {\n+            accountId = userName;\n+        }\n+    }\n+\n+    public String getUserName() {\n+        return userName != null ? userName : accountId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c60e1739d97fd2b917e0feac46e9d76501e7037"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4MjAwNg==", "bodyText": "I reverted accountId to empty string. Is prob. more safe. getUserName returns then also empty string by default at account creation.", "url": "https://github.com/bisq-network/bisq/pull/4453#discussion_r480182006", "createdAt": "2020-08-31T14:49:10Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/payment/payload/RevolutAccountPayload.java", "diffHunk": "@@ -95,6 +109,26 @@ public String getPaymentDetailsForTradePopup() {\n \n     @Override\n     public byte[] getAgeWitnessInputData() {\n-        return super.getAgeWitnessInputData(accountId.getBytes(StandardCharsets.UTF_8));\n+        // getAgeWitnessInputData is called at new account creation when accountId is null, we use empty string as\n+        // it has been the case before\n+        String input = this.accountId == null ? \"\" : this.accountId;\n+        return super.getAgeWitnessInputData(input.getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    public void setUserName(@Nullable String userName) {\n+        this.userName = userName;\n+        // We only set accountId to userName for new accounts. Existing accounts have accountId set with email\n+        // or phone nr. and we keep that to not break account signing.\n+        if (accountId == null) {\n+            accountId = userName;\n+        }\n+    }\n+\n+    public String getUserName() {\n+        return userName != null ? userName : accountId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0NzAyMw=="}, "originalCommit": {"oid": "6c60e1739d97fd2b917e0feac46e9d76501e7037"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2422, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}