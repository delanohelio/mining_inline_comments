{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTA3MTgw", "number": 4212, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozOTo0MVrOD5fHyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowMDo0MFrOD5fsgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjA1MzIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozOTo0MVrOGQyBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozOTo0MVrOGQyBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0OTk2Mg==", "bodyText": "I think the correct version would be:\n            case REIMBURSEMENT_MIN_AMOUNT:\n            case COMPENSATION_REQUEST_MAX_AMOUNT:\n            case REIMBURSEMENT_MAX_AMOUNT:\n                checkArgument(inputValueAsCoin.value >= Restrictions.getMinNonDustOutput().value,\n                        Res.get(\"validation.amountBelowDust\", Restrictions.getMinNonDustOutput().value));\n                checkArgument(inputValueAsCoin.value <= 200000000,\n                        Res.get(\"validation.inputTooLarge\", \"200 000 BSQ\"));\n                break;\n\nAlso MinAmount must not exceed the 200 000 BSQ.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420249962", "createdAt": "2020-05-05T16:39:41Z", "author": {"login": "ManfredKarrer"}, "path": "core/src/main/java/bisq/core/dao/governance/proposal/param/ChangeParamValidator.java", "diffHunk": "@@ -144,6 +144,7 @@ private void validateBsqValue(Coin currentParamValueAsCoin, Coin inputValueAsCoi\n             case REIMBURSEMENT_MIN_AMOUNT:\n                 checkArgument(inputValueAsCoin.value >= Restrictions.getMinNonDustOutput().value,\n                         Res.get(\"validation.amountBelowDust\", Restrictions.getMinNonDustOutput().value));\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb76fd65481e882ae0e232c3d8c1814e29a9e878"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjA3NjAwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo0NTozM1rOGQyQHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo0NTozM1rOGQyQHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MzcyNA==", "bodyText": "I don't see any problem with that change but as it is a pure \"cosmetic\" change I prefer to not touch the code. Some could argue the early return is more readable. I don't have a strong opinion and the break is more consistent but evaluating benefit / risk just does not justify the change IMO even it seems a trivial and very low risk change.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420253724", "createdAt": "2020-05-05T16:45:33Z", "author": {"login": "ManfredKarrer"}, "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "diffHunk": "@@ -285,14 +285,15 @@ private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {\n                         // We always have the BSQ change before the burned BSQ output if both are present.\n                         checkArgument(optionalOpReturnIndex.isPresent());\n                         if (index != optionalOpReturnIndex.get() - 1) {\n-                            return false;\n+                            break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjE0NzIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowMDo0MFrOGQy8vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowOTozMVrOGQzSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NTE0OA==", "bodyText": "If the semantic changes in this file are reverted, take care not to revert adding this break.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420265148", "createdAt": "2020-05-05T17:00:40Z", "author": {"login": "dmos62"}, "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "diffHunk": "@@ -285,14 +285,15 @@ private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {\n                         // We always have the BSQ change before the burned BSQ output if both are present.\n                         checkArgument(optionalOpReturnIndex.isPresent());\n                         if (index != optionalOpReturnIndex.get() - 1) {\n-                            return false;\n+                            break;\n                         }\n \n                         // Without checking the fee we would not be able to distinguish between 2 structurally same transactions, one\n                         // where the output is burned BSQ and one where it is a BSQ change output.\n                         long blindVoteFee = daoStateService.getParamValueAsCoin(Param.BLIND_VOTE_FEE, tempTxOutput.getBlockHeight()).value;\n                         return availableInputValue == blindVoteFee;\n                     }\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MDc0Ng==", "bodyText": "I'm doing a revert of the whole PR. There was an easy to use button to do the revert.\nBest make a new PR with the good changes.", "url": "https://github.com/bisq-network/bisq/pull/4212#discussion_r420270746", "createdAt": "2020-05-05T17:09:31Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/dao/node/parser/TxOutputParser.java", "diffHunk": "@@ -285,14 +285,15 @@ private boolean isBtcOutputOfBurnFeeTx(TempTxOutput tempTxOutput) {\n                         // We always have the BSQ change before the burned BSQ output if both are present.\n                         checkArgument(optionalOpReturnIndex.isPresent());\n                         if (index != optionalOpReturnIndex.get() - 1) {\n-                            return false;\n+                            break;\n                         }\n \n                         // Without checking the fee we would not be able to distinguish between 2 structurally same transactions, one\n                         // where the output is burned BSQ and one where it is a BSQ change output.\n                         long blindVoteFee = daoStateService.getParamValueAsCoin(Param.BLIND_VOTE_FEE, tempTxOutput.getBlockHeight()).value;\n                         return availableInputValue == blindVoteFee;\n                     }\n+                    break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NTE0OA=="}, "originalCommit": {"oid": "4ec6bac658ca5c8e3cd4d4a9e0ac7207bac8799b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2502, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}