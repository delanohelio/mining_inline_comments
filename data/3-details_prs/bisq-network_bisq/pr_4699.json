{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NTk1MTkw", "number": 4699, "title": "Refactor PendingTradesViewModel methods -> TradeUtil & OfferUtil", "bodyText": "PR #4697 should be reviewed & merged before this PR.", "createdAt": "2020-10-25T13:45:01Z", "url": "https://github.com/bisq-network/bisq/pull/4699", "merged": true, "mergeCommit": {"oid": "ed14442992407b4362dbfeae4a3669368fc198e4"}, "closed": true, "closedAt": "2020-10-30T10:11:16Z", "author": {"login": "ghubstan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVYkYJAH2gAyNTA5NTk1MTkwOmNiNjVkZTZkMmUxNDk3ZWI4ZWFmODY0MDRmYzMyODU3MjlhYmE4N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXj9WhgFqTUyMDUyOTE1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb65de6d2e1497eb8eaf86404fc3285729aba87c", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/cb65de6d2e1497eb8eaf86404fc3285729aba87c", "committedDate": "2020-10-23T15:47:06Z", "message": "Block on tx-fee-request in core TakeOfferModel init\n\nAdded license comment too."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab20225cd2d50003a8f7f45feca6227a2370a9fb", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/ab20225cd2d50003a8f7f45feca6227a2370a9fb", "committedDate": "2020-10-24T19:25:20Z", "message": "Add compiler warning suppression, remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63cf4369904855013ac5b8e37de43462c02e1551", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/63cf4369904855013ac5b8e37de43462c02e1551", "committedDate": "2020-10-24T19:27:03Z", "message": "Add fields to grpc TradeInfo proto & wrapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296e4f98cb6231ed2226e72d95c1317981a9d008", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/296e4f98cb6231ed2226e72d95c1317981a9d008", "committedDate": "2020-10-24T20:26:10Z", "message": "Replace static TradeUtil with singleton TradeUtil\n\nThe API is going to need some desktop trade utilities, which should be\nshared between :desktop and :core.api."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/ccd3c99f2e5b9cf276e6b70bceb34e73fb0a6858", "committedDate": "2020-10-24T20:45:01Z", "message": "Fix comment typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/24ba9215cd12f65605b23c2f5d53037258afd019", "committedDate": "2020-10-25T13:41:19Z", "message": "Refactor PendingTradesViewModel methods -> TradeUtil & OfferUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "author": {"user": {"login": "ghubstan", "name": "Stan"}}, "url": "https://github.com/bisq-network/bisq/commit/36ad1379496d29bf26d6d3c90c4cc50b8c74b928", "committedDate": "2020-10-25T13:54:40Z", "message": "Remove trailing spaces for codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTQxMTYx", "url": "https://github.com/bisq-network/bisq/pull/4699#pullrequestreview-520141161", "createdAt": "2020-10-29T22:45:50Z", "commit": {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMjo0NTo1MFrOHqxS_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzowNjo0NVrOHqxwKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYwOTkxOQ==", "bodyText": "I think a check for non null Trade would be good here.", "url": "https://github.com/bisq-network/bisq/pull/4699#discussion_r514609919", "createdAt": "2020-10-29T22:45:50Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java", "diffHunk": "@@ -199,55 +205,30 @@ private void onMessageStateChanged(MessageState messageState) {\n     }\n \n     public String getPayoutAmount() {\n-        return dataModel.getTrade() != null ? btcFormatter.formatCoinWithCode(dataModel.getTrade().getPayoutAmount()) : \"\";\n+        return dataModel.getTrade() != null\n+                ? btcFormatter.formatCoinWithCode(dataModel.getTrade().getPayoutAmount())\n+                : \"\";\n     }\n \n     String getMarketLabel(PendingTradesListItem item) {\n-        if ((item == null))\n-            return \"\";\n-\n-        checkNotNull(item.getTrade().getOffer());\n-        checkNotNull(item.getTrade().getOffer().getCurrencyCode());\n-        return CurrencyUtil.getCurrencyPair(item.getTrade().getOffer().getCurrencyCode());\n-    }\n-\n-    private long getMaxTradePeriod() {\n-        return dataModel.getOffer() != null ? dataModel.getOffer().getPaymentMethod().getMaxTradePeriod() : 0;\n-    }\n-\n-    @Nullable\n-    private Date getMaxTradePeriodDate() {\n-        return dataModel.getTrade() != null ? dataModel.getTrade().getMaxTradePeriodDate() : null;\n-    }\n-\n-    @Nullable\n-    private Date getHalfTradePeriodDate() {\n-        return dataModel.getTrade() != null ? dataModel.getTrade().getHalfTradePeriodDate() : null;\n-    }\n-\n-    private long getRemainingTradeDuration() {\n-        return getMaxTradePeriodDate() != null ? getMaxTradePeriodDate().getTime() - new Date().getTime() : getMaxTradePeriod();\n+        return item == null ? \"\" : tradeUtil.getMarketDescription(item.getTrade());\n     }\n \n     public String getRemainingTradeDurationAsWords() {\n-        return FormattingUtils.formatDurationAsWords(Math.max(0, getRemainingTradeDuration()));\n+        return tradeUtil.getRemainingTradeDurationAsWords(dataModel.getTrade());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYxNDA1Mw==", "bodyText": "Also no check for null Trade", "url": "https://github.com/bisq-network/bisq/pull/4699#discussion_r514614053", "createdAt": "2020-10-29T22:56:45Z", "author": {"login": "sqrrm"}, "path": "desktop/src/main/java/bisq/desktop/main/portfolio/pendingtrades/PendingTradesViewModel.java", "diffHunk": "@@ -199,55 +205,30 @@ private void onMessageStateChanged(MessageState messageState) {\n     }\n \n     public String getPayoutAmount() {\n-        return dataModel.getTrade() != null ? btcFormatter.formatCoinWithCode(dataModel.getTrade().getPayoutAmount()) : \"\";\n+        return dataModel.getTrade() != null\n+                ? btcFormatter.formatCoinWithCode(dataModel.getTrade().getPayoutAmount())\n+                : \"\";\n     }\n \n     String getMarketLabel(PendingTradesListItem item) {\n-        if ((item == null))\n-            return \"\";\n-\n-        checkNotNull(item.getTrade().getOffer());\n-        checkNotNull(item.getTrade().getOffer().getCurrencyCode());\n-        return CurrencyUtil.getCurrencyPair(item.getTrade().getOffer().getCurrencyCode());\n-    }\n-\n-    private long getMaxTradePeriod() {\n-        return dataModel.getOffer() != null ? dataModel.getOffer().getPaymentMethod().getMaxTradePeriod() : 0;\n-    }\n-\n-    @Nullable\n-    private Date getMaxTradePeriodDate() {\n-        return dataModel.getTrade() != null ? dataModel.getTrade().getMaxTradePeriodDate() : null;\n-    }\n-\n-    @Nullable\n-    private Date getHalfTradePeriodDate() {\n-        return dataModel.getTrade() != null ? dataModel.getTrade().getHalfTradePeriodDate() : null;\n-    }\n-\n-    private long getRemainingTradeDuration() {\n-        return getMaxTradePeriodDate() != null ? getMaxTradePeriodDate().getTime() - new Date().getTime() : getMaxTradePeriod();\n+        return item == null ? \"\" : tradeUtil.getMarketDescription(item.getTrade());\n     }\n \n     public String getRemainingTradeDurationAsWords() {\n-        return FormattingUtils.formatDurationAsWords(Math.max(0, getRemainingTradeDuration()));\n+        return tradeUtil.getRemainingTradeDurationAsWords(dataModel.getTrade());\n     }\n \n     public double getRemainingTradeDurationAsPercentage() {\n-        long maxPeriod = getMaxTradePeriod();\n-        long remaining = getRemainingTradeDuration();\n-        if (maxPeriod != 0) {\n-            return 1 - (double) remaining / (double) maxPeriod;\n-        } else\n-            return 0;\n+        return tradeUtil.getRemainingTradeDurationAsPercentage(dataModel.getTrade());\n     }\n \n     public String getDateForOpenDispute() {\n-        return DisplayUtils.formatDateTime(new Date(new Date().getTime() + getRemainingTradeDuration()));\n+        return DisplayUtils.formatDateTime(tradeUtil.getDateForOpenDispute(dataModel.getTrade()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYxNzM4Ng==", "bodyText": "Prefer to return early, ie\nif (trade == null)\n    return;\n\nOffer offer = checkNotNull(trade.getOffer());\ncheckNotNull(offer.getPaymentMethod());\nreturn offer.getPaymentMethodNameWithCountryCode();", "url": "https://github.com/bisq-network/bisq/pull/4699#discussion_r514617386", "createdAt": "2020-10-29T23:06:45Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/trade/TradeUtil.java", "diffHunk": "@@ -108,4 +118,90 @@ public TradeUtil(BtcWalletService btcWalletService, KeyRing keyRing) {\n \n         return new Tuple2<>(multiSigAddress.getAddressString(), payoutAddress);\n     }\n+\n+    public long getRemainingTradeDuration(Trade trade) {\n+        return trade.getMaxTradePeriodDate() != null\n+                ? trade.getMaxTradePeriodDate().getTime() - new Date().getTime()\n+                : getMaxTradePeriod(trade);\n+    }\n+\n+    public long getMaxTradePeriod(Trade trade) {\n+        return trade.getOffer() != null\n+                ? trade.getOffer().getPaymentMethod().getMaxTradePeriod()\n+                : 0;\n+    }\n+\n+    public double getRemainingTradeDurationAsPercentage(Trade trade) {\n+        long maxPeriod = getMaxTradePeriod(trade);\n+        long remaining = getRemainingTradeDuration(trade);\n+        if (maxPeriod != 0) {\n+            return 1 - (double) remaining / (double) maxPeriod;\n+        } else\n+            return 0;\n+    }\n+\n+    public String getRemainingTradeDurationAsWords(Trade trade) {\n+        return formatDurationAsWords(Math.max(0, getRemainingTradeDuration(trade)));\n+    }\n+\n+    @Nullable\n+    public Date getHalfTradePeriodDate(Trade trade) {\n+        return trade != null ? trade.getHalfTradePeriodDate() : null;\n+    }\n+\n+    public Date getDateForOpenDispute(Trade trade) {\n+        return new Date(new Date().getTime() + getRemainingTradeDuration(trade));\n+    }\n+\n+    public String getMarketDescription(Trade trade) {\n+        if (trade == null)\n+            return \"\";\n+\n+        checkNotNull(trade.getOffer());\n+        checkNotNull(trade.getOffer().getCurrencyCode());\n+        return getCurrencyPair(trade.getOffer().getCurrencyCode());\n+    }\n+\n+    public String getPaymentMethodNameWithCountryCode(Trade trade) {\n+        String paymentMethodDescription = \"\";\n+        if (trade != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ba9215cd12f65605b23c2f5d53037258afd019"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTI5MTUx", "url": "https://github.com/bisq-network/bisq/pull/4699#pullrequestreview-520529151", "createdAt": "2020-10-30T10:11:11Z", "commit": {"oid": "36ad1379496d29bf26d6d3c90c4cc50b8c74b928"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3559, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}