{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTE4MDY0", "number": 4094, "title": "Prevent dust outputs from being created during the trade process", "bodyText": "This change fixes an issue whereby dust change outputs are inadvertently created during the trading process, unbeknownst to the user.  The dust outputs cause the Bitcoin node to reject the\ntransaction and the trade then becomes stuck.\nThe solution taken here is to detect a dust TXO during the trade process and remove it from the transaction before broadcasting.  This applies in both making an offer and/or taking an existing offer.  When a dust output is prevented, it will be noted in the log as follows:\n\nRelated to #4039", "createdAt": "2020-03-24T16:50:38Z", "url": "https://github.com/bisq-network/bisq/pull/4094", "merged": true, "mergeCommit": {"oid": "c54a5acbb0c5a943d135a6fa0426e5e9614bab76"}, "closed": true, "closedAt": "2020-04-03T16:30:11Z", "author": {"login": "jmacxx"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQiKF8AH2gAyMzkzMTE4MDY0OjkyNTMwYmRhNTA0N2RmZjhiNTdiNjUwZDY3MWZhNmE3NTZlNTEyZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUDgs0AFqTM4NzQwNzQ5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8", "author": {"user": {"login": "jmacxx", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/92530bda5047dff8b57b650d671fa6a756e512d8", "committedDate": "2020-03-23T17:56:40Z", "message": "Remove dust outputs created during the trade process\n\nThis change fixes an issue whereby dust change outputs are\ninadvertently created during the trading process, unbenownst to the\nuser.  The dust outputs cause the Bitcoin node to reject the\ntransaction and the trade then becomes stuck.\n\nThe solution taken here is to detect a dust TXO during the trade\nprocess and remove it from the transaction before broadcasting.\n\nRelated to #4039"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMjM5OTI1", "url": "https://github.com/bisq-network/bisq/pull/4094#pullrequestreview-382239925", "createdAt": "2020-03-26T17:26:53Z", "commit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyNjo1M1rOF8SHiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozNDoyNlrOF8SePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1NTcyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n          \n          \n            \n                    List<TransactionOutput> toKeep = new ArrayList<>();", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398755721", "createdAt": "2020-03-26T17:26:53Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1NjQ4NA==", "bodyText": "More descriptive variable names are preferred...", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398756484", "createdAt": "2020-03-26T17:27:56Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1ODA4Nw==", "bodyText": "...especially names like zz are very hard to follow except in the most simple cases. Calling it output or txOutput to make it more readable is preferred.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398758087", "createdAt": "2020-03-26T17:30:05Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1OTYwMg==", "bodyText": "A more verbose log will help log readers.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398759602", "createdAt": "2020-03-26T17:31:47Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {\n+            if (zz.getValue().value >= 546) {\n+                toKeep.add(zz);\n+            }\n+            else {\n+                log.info(\"removing dust TXO = {}\", zz.getValue().toFriendlyString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2MTUzNA==", "bodyText": "Please use a more descriptive variable name", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r398761534", "createdAt": "2020-03-26T17:34:26Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -1216,4 +1219,25 @@ private void applyLockTime(long lockTime, Transaction tx) {\n         tx.getInputs().forEach(input -> input.setSequenceNumber(TransactionInput.NO_SEQUENCE - 1));\n         tx.setLockTime(lockTime);\n     }\n+\n+    private boolean removeDust(Transaction tx) {\n+        List<TransactionOutput> txos = tx.getOutputs();\n+        List<TransactionOutput> toKeep = new ArrayList<TransactionOutput>();\n+        for (TransactionOutput zz: txos) {\n+            if (zz.getValue().value >= 546) {\n+                toKeep.add(zz);\n+            }\n+            else {\n+                log.info(\"removing dust TXO = {}\", zz.getValue().toFriendlyString());\n+            }\n+        }\n+        if (toKeep.size() != txos.size()) {\n+            tx.clearOutputs();\n+            for (TransactionOutput zz : toKeep) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92530bda5047dff8b57b650d671fa6a756e512d8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd5044a3151c3a8d78960f5a009d323651c79d0f", "author": {"user": {"login": "jmacxx", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/bd5044a3151c3a8d78960f5a009d323651c79d0f", "committedDate": "2020-03-27T02:40:51Z", "message": "Address issues raised in review by sqrrm on 2020-03-26\n\n- added a comment describing the `removeDust` method and its effects.\n- applied a fix to the declaration of an ArrayList.\n- use more descriptive variable names.\n- made the logging more verbose to help log readers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212", "author": {"user": {"login": "jmacxx", "name": null}}, "url": "https://github.com/bisq-network/bisq/commit/4fce853dec2b65f907cb692524a771acc8e36212", "committedDate": "2020-03-30T01:23:11Z", "message": "Apply the dust fix to trades which use BSQ for the fee\n\nAlso, use `Restrictions.getMinNonDustOutput()` for the dust limit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzE0MDI3", "url": "https://github.com/bisq-network/bisq/pull/4094#pullrequestreview-383714027", "createdAt": "2020-03-30T10:15:49Z", "commit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDoxNTo0OVrOF9i4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDoxNTo0OVrOF9i4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3ODk3Nw==", "bodyText": "I think this will cause BSQ change that lower than dust to be used as extra fee. That could be a non trivial amount (5.46 BSQ > USD3). While that's not a huge amount it's still too big to be an acceptable loss for users. If BSQ prices rise it will become even less so.\nI think we'll have to fail transactions that try to pay the fee using BSQ if the change is less than dust. Best would be to show something at the time the fee is selected that it's likely to result in a dust change output and thus not be possible to continue. I think that should be doable, the fees are known at the time of setting up the trade so we can calculate the BSQ dust. One thing we need to do is make sure that if there is enough BSQ but split over 2 or more outputs, it's aggregated to avoid dust outputs. Example, counting satoshis:\nFee: 1000\nBSQ wallet outputs:\n\n1200\n900\n\nI think the tx might be constructed using only outputs 1. leaving a change output of 200, but it would be possible to construct the tx to take both 1. and 2. to pay the 1000 in fee and get the change 1100.", "url": "https://github.com/bisq-network/bisq/pull/4094#discussion_r400078977", "createdAt": "2020-03-30T10:15:49Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/btc/wallet/TradeWalletService.java", "diffHunk": "@@ -257,6 +260,7 @@ public Transaction completeBsqTradingFeeTx(Transaction preparedBsqTx,\n         checkNotNull(wallet, \"Wallet must not be null\");\n         wallet.completeTx(sendRequest);\n         Transaction resultTx = sendRequest.tx;\n+        removeDust(resultTx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDA3NDk2", "url": "https://github.com/bisq-network/bisq/pull/4094#pullrequestreview-387407496", "createdAt": "2020-04-03T16:30:00Z", "commit": {"oid": "4fce853dec2b65f907cb692524a771acc8e36212"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3370, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}