{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MzI1MTUy", "number": 4608, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTozNToxOVrOEtq57w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDoyNTowNlrOEtu0cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzI0MzM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTozNToxOVrOHhl4hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjozMDoxMVrOHhoQsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NTczMg==", "bodyText": "Not wrong, but it's a bit odd to make list when we're looking for one element. .findAny() returns an Optional<> which you could then do offer.isPresent() and return offer.get() making it clear we only expect to find one offer.", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r504985732", "createdAt": "2020-10-14T21:35:19Z", "author": {"login": "sqrrm"}, "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d1905f3178db5971b8a448604e7b04a796b561"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAyNDY4OA==", "bodyText": "Resolved by commit 8394bd1", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505024688", "createdAt": "2020-10-14T22:30:11Z", "author": {"login": "ghubstan"}, "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NTczMg=="}, "originalCommit": {"oid": "29d1905f3178db5971b8a448604e7b04a796b561"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mzg4NDY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDoyNTowN1rOHhsijg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDoyNjo0MFrOHhskXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NDc5OA==", "bodyText": "As we expect only one I would use a findAny and create an optional instead of a list.", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505094798", "createdAt": "2020-10-15T00:25:07Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29d1905f3178db5971b8a448604e7b04a796b561"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NTI2MQ==", "bodyText": "Ah see you changed that in 8394bd1 ;-)", "url": "https://github.com/bisq-network/bisq/pull/4608#discussion_r505095261", "createdAt": "2020-10-15T00:26:40Z", "author": {"login": "chimp1984"}, "path": "core/src/main/java/bisq/core/api/CoreOffersService.java", "diffHunk": "@@ -67,6 +68,16 @@ public CoreOffersService(CreateOfferService createOfferService,\n         this.user = user;\n     }\n \n+    Offer getOffer(String id) {\n+        List<Offer> offers = offerBookService.getOffers().stream()\n+                .filter(o -> o.getId().equals(id))\n+                .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA5NDc5OA=="}, "originalCommit": {"oid": "29d1905f3178db5971b8a448604e7b04a796b561"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2390, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}