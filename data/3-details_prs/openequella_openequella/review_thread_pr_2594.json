{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NjgyNzIw", "number": 2594, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoxMzo1OFrOFEuwOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMDoyNDoxNFrOFEv_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTA0NjMzOnYy", "diffSide": "RIGHT", "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QyMjoxMzo1OFrOIE6HuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMDozMDo0MlrOIE7pBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNzQ2NA==", "bodyText": "This could probably be used directly in the if, rather being set to a boolean isFinished since it never gets referred to again after that.", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542017464", "createdAt": "2020-12-13T22:13:58Z", "author": {"login": "SammyIsConfused"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -257,8 +261,8 @@ public static ExecResult execWithTimeLimit(\n       int pid = getPidOfProcess(proc).orElse(0);\n       final StreamReader stdOut = cp.getSecond();\n       final StreamReader stdErr = cp.getThird();\n-      proc.waitFor(durationInSeconds, TimeUnit.SECONDS);\n-      if (!stdErr.isFinished() || !stdOut.isFinished()) {\n+      boolean isFinished = proc.waitFor(durationInSeconds, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MjM3NA==", "bodyText": "I see this as aiding doco. I would say though, doco could be further assisted with something completely underlining the intent:\nfinal boolean timeout = !proc.waitFor(...);\nif (timeout) {\n  // ...\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542042374", "createdAt": "2020-12-14T00:30:42Z", "author": {"login": "edalex-ian"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -257,8 +261,8 @@ public static ExecResult execWithTimeLimit(\n       int pid = getPidOfProcess(proc).orElse(0);\n       final StreamReader stdOut = cp.getSecond();\n       final StreamReader stdErr = cp.getThird();\n-      proc.waitFor(durationInSeconds, TimeUnit.SECONDS);\n-      if (!stdErr.isFinished() || !stdOut.isFinished()) {\n+      boolean isFinished = proc.waitFor(durationInSeconds, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNzQ2NA=="}, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTI0ODIxOnYy", "diffSide": "RIGHT", "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMDoyNDoxNFrOIE7j_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1NDo0OFrOIE8zmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MTA4Ng==", "bodyText": "Why would it be empty? Is it simply a normal situation, in that there were no child PIDs? Or it is always due to an error situation from going into the else block on line 89?\nI'm just wondering if this needs a companion else block to either log the situation, or to throw an exception. \ud83e\udd14 Or if it's just normal - i.e. there may be no child PIDs sometimes - then this is just a guard against this processing. Maybe a comment in this case would highlight the assumption. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542041086", "createdAt": "2020-12-14T00:24:14Z", "author": {"login": "edalex-ian"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -92,12 +92,16 @@ public static void killLinuxProcessTree(int pid) {\n         LOGGER.debug(\"getChildPid function did not run properly.\\n\" + errorOutput);\n       }\n       getChildPid.destroy();\n-      // convert string to array of ints\n-      pids =\n-          Optional.of(\n-              Arrays.stream(childPid.toString().replaceAll(\"\\n\", \" \").split(\" \"))\n-                  .mapToInt(Integer::parseInt)\n-                  .toArray());\n+\n+      String childPidInfo = childPid.toString();\n+      if (!childPidInfo.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0NjU5Mw==", "bodyText": "There may be no child PIDs sometimes - in fact most cases. PDF extraction causes ImageMagick to open Ghostscript which is the child PID - but for cases in which ImageMagick can handle things fine on its own, such as most images, there will be no delegate process opened.", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542046593", "createdAt": "2020-12-14T00:51:33Z", "author": {"login": "SammyIsConfused"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -92,12 +92,16 @@ public static void killLinuxProcessTree(int pid) {\n         LOGGER.debug(\"getChildPid function did not run properly.\\n\" + errorOutput);\n       }\n       getChildPid.destroy();\n-      // convert string to array of ints\n-      pids =\n-          Optional.of(\n-              Arrays.stream(childPid.toString().replaceAll(\"\\n\", \" \").split(\" \"))\n-                  .mapToInt(Integer::parseInt)\n-                  .toArray());\n+\n+      String childPidInfo = childPid.toString();\n+      if (!childPidInfo.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MTA4Ng=="}, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NjQ0OA==", "bodyText": "I feel we need to throw an runtime exception in the else block on line 89 if getChildPid fails for some unknown reasons.", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542056448", "createdAt": "2020-12-14T01:34:53Z", "author": {"login": "PenghaiZhang"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -92,12 +92,16 @@ public static void killLinuxProcessTree(int pid) {\n         LOGGER.debug(\"getChildPid function did not run properly.\\n\" + errorOutput);\n       }\n       getChildPid.destroy();\n-      // convert string to array of ints\n-      pids =\n-          Optional.of(\n-              Arrays.stream(childPid.toString().replaceAll(\"\\n\", \" \").split(\" \"))\n-                  .mapToInt(Integer::parseInt)\n-                  .toArray());\n+\n+      String childPidInfo = childPid.toString();\n+      if (!childPidInfo.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MTA4Ng=="}, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1ODc1Nw==", "bodyText": "Ah perhaps it's better to do a LOGGER.warn rather than throwing an exception.", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542058757", "createdAt": "2020-12-14T01:44:20Z", "author": {"login": "PenghaiZhang"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -92,12 +92,16 @@ public static void killLinuxProcessTree(int pid) {\n         LOGGER.debug(\"getChildPid function did not run properly.\\n\" + errorOutput);\n       }\n       getChildPid.destroy();\n-      // convert string to array of ints\n-      pids =\n-          Optional.of(\n-              Arrays.stream(childPid.toString().replaceAll(\"\\n\", \" \").split(\" \"))\n-                  .mapToInt(Integer::parseInt)\n-                  .toArray());\n+\n+      String childPidInfo = childPid.toString();\n+      if (!childPidInfo.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MTA4Ng=="}, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA2MTQ2NQ==", "bodyText": "I agree on the LOGGER.warn.", "url": "https://github.com/openequella/openEQUELLA/pull/2594#discussion_r542061465", "createdAt": "2020-12-14T01:54:48Z", "author": {"login": "SammyIsConfused"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -92,12 +92,16 @@ public static void killLinuxProcessTree(int pid) {\n         LOGGER.debug(\"getChildPid function did not run properly.\\n\" + errorOutput);\n       }\n       getChildPid.destroy();\n-      // convert string to array of ints\n-      pids =\n-          Optional.of(\n-              Arrays.stream(childPid.toString().replaceAll(\"\\n\", \" \").split(\" \"))\n-                  .mapToInt(Integer::parseInt)\n-                  .toArray());\n+\n+      String childPidInfo = childPid.toString();\n+      if (!childPidInfo.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA0MTA4Ng=="}, "originalCommit": {"oid": "53e1490f18e272cf77c470c216431609f44d8d3d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1625, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}