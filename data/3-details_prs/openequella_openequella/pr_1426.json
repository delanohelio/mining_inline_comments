{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzMzNTQ2", "number": 1426, "title": "Convert the bb lti flow to a generic lti flow.", "bodyText": "Checklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][] (when merged, please squash into a single commit)\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nUsing the BB lti integration code as a base, we modified it to convert it in a generic lti integration (that works with BB and is expected to work with others).\nTo do that we have added 2 parameters in the LTI consumers configuration to define the name of the \"userid\" and \"username\" custom parameters if any. If blank, then it uses the default values.\n\"\nThis has not been modified for canvas and d2l due to their specific and not generic code. So, after this change, we have a D2L lti integration, a Canvas one, and a Generic one.\nNote: LTI 1.1 is being deprecated: http://www.imsglobal.org/lti-security-announcement-and-deprecation-schedule-july-2019 so, the next steps should be to make equella compatible with LTI 1.3.\n#1424", "createdAt": "2020-01-13T21:37:10Z", "url": "https://github.com/openequella/openEQUELLA/pull/1426", "merged": true, "mergeCommit": {"oid": "1c915918ed3595e061964143997e989a85b2571c"}, "closed": true, "closedAt": "2020-01-22T20:24:21Z", "author": {"login": "ddelblanco"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4H3AHAH2gAyMzYyMzMzNTQ2OmE2Mjg1ZGRmZGEzYjFlMjAxY2ViYzIzMmM1MDNlODhkNTdlY2RhOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb85ZXmgH2gAyMzYyMzMzNTQ2OmEwMTcxY2FkZGNjMzRkNmU3NTUxZDE3ZDY5NmZjOTVlNmJhOWFlMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a6285ddfda3b1e201cebc232c503e88d57ecda99", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/a6285ddfda3b1e201cebc232c503e88d57ecda99", "committedDate": "2020-01-07T21:44:06Z", "message": "Blackboard LTI to Generic LTI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "847f7e2d9c609dacac482042573575e3689216b0", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/847f7e2d9c609dacac482042573575e3689216b0", "committedDate": "2020-01-09T16:17:50Z", "message": "Blackboard LTI to Generic LTI. Update in the GenericLtiWrapperExtension to allow custom parameters for userid and username"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "755b0f0442e0e0ea3bda17da5c058dbae95c5484", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/755b0f0442e0e0ea3bda17da5c058dbae95c5484", "committedDate": "2020-01-10T15:06:53Z", "message": "Generic LTI. Allow custom LTI attributes for userId and userName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9cdd0f35d0a8fec782f645bf109799008280ca", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/ac9cdd0f35d0a8fec782f645bf109799008280ca", "committedDate": "2020-01-13T13:47:08Z", "message": "Generic LTI: Labels and Editor improvements. UserName instead UserLoginId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6d09b57b17073fe9ef786f8eef0746e22e7258", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/9e6d09b57b17073fe9ef786f8eef0746e22e7258", "committedDate": "2020-01-13T18:06:38Z", "message": "Blackboard LTI to Generic LTI. Ignore the custom parameters in Canvas and D2L"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/463bf37f926b1297f9d775caa2eb29b175086394", "committedDate": "2020-01-13T20:43:16Z", "message": "Blackboard LTI to Generic LTI. Style improvements."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjg5NDQ2", "url": "https://github.com/openequella/openEQUELLA/pull/1426#pullrequestreview-342289446", "createdAt": "2020-01-14T04:46:07Z", "commit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjowN1rOFdMFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjowNjo0NFrOFdM73w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDk4NA==", "bodyText": "Being a new file, this is no longer needed. As we don't run the tooling to check for non-localised strings any more.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366150984", "createdAt": "2020-01-14T04:46:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Mjc2Ng==", "bodyText": "This method has a number of issues which ultimately contribute to poor readability. Primarily this is duplication and excessive nesting. Further, a good chunk of it - including string literals is duplicated in a method further down. Including the method below, I offer the following for comparison:\nAs a comparison, I offer this:\n  private String getGenericLtiParam(HttpServletRequest request, String param,\n      Supplier<String> supplier) {\n    String family =\n        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n    if (StringUtils.isEmpty(family) || StringUtils.isEmpty(param)) {\n      // If invalid inputs provided\n      return null;\n    }\n\n    if (family.matches(\"(canvas)|(desire2learn)\")) {\n      // If request is for an LTI provider we have explicit support for\n      return null;\n    }\n\n    return supplier.get();\n  }\n\n  @Override\n  public String getUserId(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () ->\n        request.getParameter(param)\n    );\n  }\nAs to why I also added the getGenericLtiParam() method, please read on below...", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366162766", "createdAt": "2020-01-14T05:55:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDk1OQ==", "bodyText": "As mentioned in the previous comment, this is a significant duplication of the above (with slight variation). As a result, it provides maintenance concerns - as well as previous concerns around readability.\nContinuing on from the previous code recommendation, this then would look like:\n  public String getUsername(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () -> {\n      String username = request.getParameter(param);\n      if (StringUtils.isEmpty(username)) {\n        username = request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n      }\n\n      return username;\n    });\n  }", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366164959", "createdAt": "2020-01-14T06:06:44Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request) {\n+    return getUsername(request, null);\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param) && request.getParameterMap().containsKey(param)) {\n+          return request.getParameter(param);\n+        }\n+        return request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n+      }\n+    }\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1", "author": {"user": {"login": "ddelblanco", "name": "Diego del Blanco"}}, "url": "https://github.com/openequella/openEQUELLA/commit/52114502a0bbbee4da158f3d01c1aa70db6da4c1", "committedDate": "2020-01-15T16:22:49Z", "message": "Blackboard LTI to Generic LTI. Style improvements in GenericLTIWrapperExtension. Remove nls tes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjI2OTE4", "url": "https://github.com/openequella/openEQUELLA/pull/1426#pullrequestreview-343626918", "createdAt": "2020-01-16T01:28:40Z", "commit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMToyODo0MFrOFeLlGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTo0MzoyNFrOFeLx1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MTMyMw==", "bodyText": "I would set this to something like 9000 so that it is always the last to apply.  That way, more specific extensions (Canvas, Brightspace) will apply first, and then fall back to generic.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367191323", "createdAt": "2020-01-16T01:28:40Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/plugin-jpf.xml", "diffHunk": "@@ -2185,22 +2185,22 @@\n     <parameter id=\"path\" value=\"/canvascipreturn.do\" />\n     <parameter id=\"root\" value=\"bean:/canvascipreturn\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_blackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardltisignon.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardltisignon\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_lti\">\n+    <parameter id=\"path\" value=\"/ltisignon.do\" />\n+    <parameter id=\"root\" value=\"bean:/ltisignon\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnBlackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardlticipreturn.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardlticipreturn\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnLti\">\n+    <parameter id=\"path\" value=\"/lticipreturn.do\" />\n+    <parameter id=\"root\" value=\"bean:/lticipreturn\" />\n   </extension>\n   <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"canvasLtiExt\">\n     <parameter id=\"id\" value=\"canvas\" />\n     <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.canvasextension.CanvasLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"blackboardLtiExt\">\n-    <parameter id=\"id\" value=\"bblti\" />\n-    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.blackboard.BlackboardLtiWrapperExtension\" />\n+  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"genericLtiExt\">\n+    <parameter id=\"id\" value=\"genlti\" />\n+    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.generic.GenericLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjE0MQ==", "bodyText": "I wouldn't put this in the shared consumer config.  I would put it in a new connector type (called Generic or something) config.\nSee Canvas config, or the current Blackboard config for examples to base it off.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367192141", "createdAt": "2020-01-16T01:32:24Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/resources/view/editconsumer.ftl", "diffHunk": "@@ -21,6 +21,12 @@\n <@setting label=b.key(\"editor.postfix\") help=b.key(\"editor.username.help\")>\n \t<@textfield section=s.postfixField maxlength=50 />\n </@setting>\n+<@setting label=b.key(\"editor.customuserid\") help=b.key(\"editor.customuserid.help\")>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjQwOA==", "bodyText": "I'd leave off the comments about Canvas and Brightspace, as this text shouldn't appear on those connectors if you implement my feedback below about generic configuration.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367192408", "createdAt": "2020-01-16T01:33:38Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/resources/lang/i18n-resource-centre.properties", "diffHunk": "@@ -1321,6 +1321,10 @@ editor.container.option.default=Default\n editor.container.option.embed=Embed\n editor.container.option.newwindow=New window\n editor.customparams=Custom parameters\n+editor.customuserid=Custom User ID\n+editor.customuserid.help=(Optional) To receive the user id from a custom LTI parameter, for example: custom_bb_userid - Canvas and D2L have predefined custom LTI parameters and ignore this configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg==", "bodyText": "I would pass the actual LtiConsumer object instead of param.  The GenericLtiWrapperExtension can pull out its specific param, and custom wrappers like Canvas can do what it likes to get its own custom parameters out of the LtiConsumer", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367193962", "createdAt": "2020-01-16T01:40:29Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -32,11 +33,33 @@ public String getUserId(HttpServletRequest request) {\n     return null;\n   }\n \n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg==", "bodyText": "Should remove this one", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194436", "createdAt": "2020-01-16T01:42:42Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA==", "bodyText": "Should remove this one", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194480", "createdAt": "2020-01-16T01:42:58Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);\n+\n   @Nullable\n   String getUsername(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw==", "bodyText": "I would change String param to LtiConsumer consumer", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194583", "createdAt": "2020-01-16T01:43:24Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b5e1c2898c64c165b8786342e5023eb20654ba", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/80b5e1c2898c64c165b8786342e5023eb20654ba", "committedDate": "2020-01-20T19:13:30Z", "message": "bb-lti:  generalized user id prefix, revisions due to PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/e30b75c3ca07540d20200e824c0a69df6c5350a2", "committedDate": "2020-01-20T19:57:42Z", "message": "bb-lti:  minor code cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MzUyMTE1", "url": "https://github.com/openequella/openEQUELLA/pull/1426#pullrequestreview-346352115", "createdAt": "2020-01-22T05:27:29Z", "commit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNToyNzozMFrOFgQ5Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNToyNzozMFrOFgQ5Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NTUwNg==", "bodyText": "You're right, we can probably delete it (and the reference to it in the plugin.xml)", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369375506", "createdAt": "2020-01-22T05:27:30Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -19,21 +19,26 @@\n package com.tle.web.lti.usermanagement;\n \n import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import com.tle.core.guice.Bind;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MzUyOTI3", "url": "https://github.com/openequella/openEQUELLA/pull/1426#pullrequestreview-346352927", "createdAt": "2020-01-22T05:30:52Z", "commit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTozMDo1M1rOFgQ7rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTozMDo1M1rOFgQ7rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NjE3NQ==", "bodyText": "Should probably be called GenericLtiIntegration?", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369376175", "createdAt": "2020-01-22T05:30:53Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java", "diffHunk": "@@ -75,32 +74,16 @@\n @Singleton\n @NonNullByDefault\n @SuppressWarnings(\"nls\")\n-public class BlackboardLtiIntegration extends AbstractIntegrationService<BlackboardLtiSessionData> {\n-  private static final Logger LOGGER = Logger.getLogger(BlackboardLtiIntegration.class);\n-\n-  // TODO - I think all this can be removed.\n-  // Omitted logic for now...\n-  //\n-  // private static final String CUSTOM_CANVAS_COURSE_ID = \"custom_bb_course_id\";\n-  // private static final String CUSTOM_CANVAS_API_DOMAIN = \"custom_bb_api_domain\";\n-  // private static final String LIS_COURSE_OFFERING_SOURCEDID = \"lis_course_offering_sourcedid\";\n-  private static final String CONTENT_ITEM_SELECTION_REQUEST = \"ContentItemSelectionRequest\";\n+public class LtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0171caddcc34d6e7551d17d696fc95e6ba9ae20", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/a0171caddcc34d6e7551d17d696fc95e6ba9ae20", "committedDate": "2020-01-22T17:42:41Z", "message": "bb-lti:  rename to align with generic LTI"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 236, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}