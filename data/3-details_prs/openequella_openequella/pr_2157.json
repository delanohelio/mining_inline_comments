{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MjQ1MTk5", "number": 2157, "title": "Feature/refine by user", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n\nDescription of change\n\nWell this ended up a few more lines then first thought, so you can expect to see:\n\nThe new OwnerSelector component consuming the UserSearch component and integrating to the SearchPage component.\nVarious bits of existing tests refactored out to support re-usability and attempt an increased level of abstraction in tests to support maintainability\nAdditional use of id attributes to assist with testing and future theming\nContinued use of React Testing Library\nAux: Adding Roboto font to Storybook setup to ensure what we see in there is reflective of our actual running theme\n\nThis was added when a layout issue was found with the UserSearch component, which looked fine in Storybook, not so much when incorporated into oEQ. Hence, you also see some style/layout tweaks for UserSearch.\n\n\nSpinner added to UserSearch to support delays in server response - was meant to add it originally, but forgot. The mocked server response is also delayed by 500ms so that this can be seen.\n\n@PenghaiZhang and I have been doing similar things, and as a result we're expecting conflicts between this PR and #2148 . We'll need to co-ordinate on merging.\n#1306\nScreenshots\nBefore selecting a user:\n\nSelecting a user:\n\n\n\nAfter selecting a user:", "createdAt": "2020-08-10T02:37:44Z", "url": "https://github.com/openequella/openEQUELLA/pull/2157", "merged": true, "mergeCommit": {"oid": "2397928d12215fed6a66d137955adf310cebbe76"}, "closed": true, "closedAt": "2020-08-11T01:16:58Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9Yq99gH2gAyNDY1MjQ1MTk5OjM2NmI5MDA0ZDgzMDY4MjVlNmM4ZjllNWIyMTlmMzE4YWYzY2NjOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9ryESAFqTQ2NDY3Mzk1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "366b9004d8306825e6c8f9e5b219f318af3ccc8f", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/366b9004d8306825e6c8f9e5b219f318af3ccc8f", "committedDate": "2020-08-10T02:20:07Z", "message": "chore(storybook): Ensure Roboto font is available\n\nOur UI uses this font, so we're not properly seeing things in Storybook without it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b605fe6d4580a93d1c6e34651f0a014f16162a1", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/2b605fe6d4580a93d1c6e34651f0a014f16162a1", "committedDate": "2020-08-10T02:20:07Z", "message": "front-end: Fix UserSearch label wrapping\n\nThe label was wrapping when using Roboto font, so instead we now ensure that the field is full width of the container. Issue will still be seen on very small containers - but then that is possibly a display context we don't support."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ef1e0fd0f36ede60e54e370bd125507e8820ec", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/f0ef1e0fd0f36ede60e54e370bd125507e8820ec", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Add spinner for UserSearch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2311dc5ee109604658efbbe7df16abeed6cf2f14", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/2311dc5ee109604658efbbe7df16abeed6cf2f14", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Add a component for filtering by Owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698a4c0ba5fa2c28a91a910f88006eebb35a07c4", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/698a4c0ba5fa2c28a91a910f88006eebb35a07c4", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Integrate Owner filter to search page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca7695eaa5280961e85a0cc1d6c96a96d86d690", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/6ca7695eaa5280961e85a0cc1d6c96a96d86d690", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Missed a language string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f9b8911ab55502df64549a4326992b09c336aa1", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/7f9b8911ab55502df64549a4326992b09c336aa1", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Add tests for OwnerSelector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "019aae6703dbc4873649e27d90620797ff498a67", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/019aae6703dbc4873649e27d90620797ff498a67", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Add id attributes to Refine Search controls\n\nTo assist in testing and theming."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/48b54ad774387f9c928eba664c384a75592f850d", "committedDate": "2020-08-10T02:20:08Z", "message": "front-end: Add tests for OwnerSelector on SearchPage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTYxMjIx", "url": "https://github.com/openequella/openEQUELLA/pull/2157#pullrequestreview-463961221", "createdAt": "2020-08-10T05:15:18Z", "commit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNToxNToxOVrOG-BmpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjowODoxMVrOG-CSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTE3Mw==", "bodyText": "We had talks about using spread for objects in Storybook. As I recall, actions are fine with spread. So why not do\n{...commonParams}?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467691173", "createdAt": "2020-08-10T05:15:19Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/OwnerSelector.stories.tsx", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n+import { action } from \"@storybook/addon-actions\";\n+import * as UserSearchMock from \"../../__mocks__/UserSearch.mock\";\n+\n+export default {\n+  title: \"Search/OwnerSelector\",\n+  component: OwnerSelector,\n+};\n+\n+const commonParams = {\n+  onClearSelect: action(\"onClearSelect\"),\n+  onSelect: action(\"onSelect\"),\n+  userListProvider: UserSearchMock.userDetailsProvider,\n+};\n+\n+export const NoSelectedUser = () => <OwnerSelector {...commonParams} />;\n+\n+export const SelectedUser = () => (\n+  <OwnerSelector\n+    onClearSelect={action(\"onClearSelect\")}\n+    onSelect={action(\"onSelect\")}\n+    userListProvider={UserSearchMock.userDetailsProvider}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MTI3NA==", "bodyText": "Would it be easier to read if use Promise.resolve() ?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467691274", "createdAt": "2020-08-10T05:15:55Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/UserSearch.mock.ts", "diffHunk": "@@ -58,9 +58,12 @@ export const users: OEQ.UserQuery.UserDetails[] = [\n  *\n  * @param query A simple string to filter by (no wildcard support)\n  */\n-export const userDetailsProvider = (\n+export const userDetailsProvider = async (\n   query?: string\n-): Promise<OEQ.UserQuery.UserDetails[]> =>\n-  new Promise((resolve) =>\n+): Promise<OEQ.UserQuery.UserDetails[]> => {\n+  // A sleep to emulate latency\n+  await new Promise((resolve) => setTimeout(resolve, 500));\n+  return new Promise((resolve) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MjIyNw==", "bodyText": "matches return a boolean so I think we can remove as boolean  ?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467692227", "createdAt": "2020-08-10T05:21:19Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/MuiQueries.ts", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryByText } from \"@testing-library/react\";\n+\n+/**\n+ * Helper function to find MUI buttons with React Testing Library.\n+ *\n+ * @param container A root element to start the search from\n+ * @param text The text to identify the button by.\n+ */\n+export const queryMuiButtonByText = (container: HTMLElement, text: string) =>\n+  queryByText(\n+    container,\n+    (content: string, element: HTMLElement) =>\n+      content === text && (element.parentElement?.matches(\"button\") as boolean)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzczOA==", "bodyText": "Do we want to use await waitFor(() => searchPromise ) instead ?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467693738", "createdAt": "2020-08-10T05:29:09Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}\n+      </BrowserRouter>\n+    );\n+    // Wait for the first completion of initial search\n+    await act(async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NDg4OQ==", "bodyText": "Is there any reason that you need this argument ? In next line, can we just use page.container ? This function is not shared to other tests.", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467694889", "createdAt": "2020-08-10T05:34:05Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}\n+      </BrowserRouter>\n+    );\n+    // Wait for the first completion of initial search\n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  });\n+\n+  afterEach(() => {\n+    // Needed to keep Enzyme tests below happy\n+    jest.clearAllMocks();\n+  });\n+\n+  const getOwnerFilter = (container: Element): HTMLElement => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5ODY2Mw==", "bodyText": "Is there any handler listening to this event?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467698663", "createdAt": "2020-08-10T05:51:41Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/UserSearch.tsx", "diffHunk": "@@ -88,6 +94,7 @@ const UserSearch = ({\n         setUsers([]);\n         setSelectedUser(undefined);\n         setHasSearched(false);\n+        event.stopPropagation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjQ0Mw==", "bodyText": "Do you want to explicitly say the type of selection could be undefined? If no we can do selection?: OEQ.UserQuery.UserDetails .", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702443", "createdAt": "2020-08-10T06:08:11Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OwnerSelector.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import * as React from \"react\";\n+import { useState } from \"react\";\n+import {\n+  Button,\n+  Dialog,\n+  DialogActions,\n+  DialogContent,\n+  DialogTitle,\n+  Grid,\n+  IconButton,\n+  List,\n+  ListItem,\n+  ListItemIcon,\n+  ListItemSecondaryAction,\n+  ListItemText,\n+} from \"@material-ui/core\";\n+import { AccountCircle } from \"@material-ui/icons\";\n+import DeleteIcon from \"@material-ui/icons/Delete\";\n+import UserSearch from \"../../components/UserSearch\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface OwnerSelectorProps {\n+  /** The currently selected user or. */\n+  value?: OEQ.UserQuery.UserDetails;\n+  /** Handler for when current selection is cleared. */\n+  onClearSelect: () => void;\n+  /** Handler for when a user is selected. */\n+  onSelect: (selection: OEQ.UserQuery.UserDetails) => void;\n+  /** Function which will provide the list of users for UserSearch. */\n+  userListProvider?: (query?: string) => Promise<OEQ.UserQuery.UserDetails[]>;\n+}\n+\n+const OwnerSelector = ({\n+  value,\n+  onClearSelect,\n+  onSelect,\n+  userListProvider,\n+}: OwnerSelectorProps) => {\n+  const [showFindUserDialog, setShowFindUserDialog] = useState<boolean>(false);\n+\n+  const handleCloseFindUserDialog = (\n+    selection: OEQ.UserQuery.UserDetails | undefined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTcwNTEy", "url": "https://github.com/openequella/openEQUELLA/pull/2157#pullrequestreview-463970512", "createdAt": "2020-08-10T05:55:45Z", "commit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTo1NTo0NVrOG-CHpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjowODo1OFrOG-CTZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5OTYyMw==", "bodyText": "Confused - is this a stray comment or in the wrong place?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467699623", "createdAt": "2020-08-10T05:55:45Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/components/UserSearchTestHelpers.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// Helper function to execute a search (assuming rendered component)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMTE1OA==", "bodyText": "I think this is what you meant? Or have I misunderstood?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** The currently selected user or. */\n          \n          \n            \n              /** The currently selected user or undefined. */", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467701158", "createdAt": "2020-08-10T06:02:47Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/OwnerSelector.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import * as React from \"react\";\n+import { useState } from \"react\";\n+import {\n+  Button,\n+  Dialog,\n+  DialogActions,\n+  DialogContent,\n+  DialogTitle,\n+  Grid,\n+  IconButton,\n+  List,\n+  ListItem,\n+  ListItemIcon,\n+  ListItemSecondaryAction,\n+  ListItemText,\n+} from \"@material-ui/core\";\n+import { AccountCircle } from \"@material-ui/icons\";\n+import DeleteIcon from \"@material-ui/icons/Delete\";\n+import UserSearch from \"../../components/UserSearch\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface OwnerSelectorProps {\n+  /** The currently selected user or. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjE4Ng==", "bodyText": "Is this a stray comment or just in the wrong place?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702186", "createdAt": "2020-08-10T06:07:02Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/components/UserSearchTestHelpers.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// Helper function to execute a search (assuming rendered component)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwMjYzMA==", "bodyText": "What is the {\" \"} for in this context?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467702630", "createdAt": "2020-08-10T06:08:58Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -28,34 +28,118 @@ import { act } from \"react-dom/test-utils\";\n import * as SearchModule from \"../../../tsrc/modules/SearchModule\";\n import * as CollectionsModule from \"../../../tsrc/modules/CollectionsModule\";\n import * as SearchSettingsModule from \"../../../tsrc/modules/SearchSettingsModule\";\n+import * as UserModule from \"../../../tsrc/modules/UserModule\";\n import { BrowserRouter } from \"react-router-dom\";\n import { CircularProgress } from \"@material-ui/core\";\n import { CollectionSelector } from \"../../../tsrc/search/components/CollectionSelector\";\n import { paginatorControls } from \"../components/SearchPaginationTestHelper\";\n import { DateRangeSelector } from \"../../../tsrc/components/DateRangeSelector\";\n+import * as UserSearchMock from \"../../../__mocks__/UserSearch.mock\";\n+import { render, RenderResult, screen, waitFor } from \"@testing-library/react\";\n+import {\n+  clearSelection,\n+  selectUser,\n+} from \"./components/OwnerSelectTestHelpers\";\n \n const SEARCHBAR_ID = \"input[id='searchBar']\";\n const RAW_SEARCH_TOGGLE_ID = \"input[id='rawSearch']\";\n+\n+const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n+const mockListUsers = jest.spyOn(UserModule, \"listUsers\");\n const mockSearch = jest.spyOn(SearchModule, \"searchItems\");\n const mockSearchSettings = jest.spyOn(\n   SearchSettingsModule,\n   \"getSearchSettingsFromServer\"\n );\n-const mockCollections = jest.spyOn(CollectionsModule, \"collectionListSummary\");\n-const searchSettingPromise = mockSearchSettings.mockImplementation(() =>\n-  Promise.resolve(SearchSettingsModule.defaultSearchSettings)\n-);\n-const searchPromise = mockSearch.mockImplementation(() =>\n-  Promise.resolve(getSearchResult)\n+\n+const searchSettingPromise = mockSearchSettings.mockResolvedValue(\n+  SearchSettingsModule.defaultSearchSettings\n );\n-mockCollections.mockImplementation(() => Promise.resolve(getCollectionMap));\n+const searchPromise = mockSearch.mockResolvedValue(getSearchResult);\n+\n+mockCollections.mockResolvedValue(getCollectionMap);\n+mockListUsers.mockResolvedValue(UserSearchMock.users);\n+\n const defaultSearchPageOptions: SearchPageOptions = {\n   ...SearchModule.defaultSearchOptions,\n   sortOrder: SearchSettingsModule.SortOrder.RANK,\n   dateRangeQuickModeEnabled: true,\n };\n const defaultCollectionPrivileges = [\"SEARCH_COLLECTION\"];\n \n+describe(\"Refine search by Owner\", () => {\n+  const testUser = UserSearchMock.users[0];\n+  let page: RenderResult;\n+\n+  beforeEach(async () => {\n+    window.history.replaceState({}, \"Clean history state\");\n+    page = render(\n+      <BrowserRouter>\n+        <SearchPage updateTemplate={jest.fn()} />{\" \"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48b54ad774387f9c928eba664c384a75592f850d"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a475855bbfaf31e8b2b69bacea5d78e17ac50842", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/a475855bbfaf31e8b2b69bacea5d78e17ac50842", "committedDate": "2020-08-10T06:59:12Z", "message": "front-end: Use shared actions in OwnerSelector.stories.tsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f92d1a96a2e464867d5e35cbd0bce4be7d378d9", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1f92d1a96a2e464867d5e35cbd0bce4be7d378d9", "committedDate": "2020-08-10T07:05:50Z", "message": "front-end: Simplify UserSearch.mock.ts with straight Promise.resolve(value)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3302fa66773945c17e1b07dadf1c7bae8269f97b", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/3302fa66773945c17e1b07dadf1c7bae8269f97b", "committedDate": "2020-08-10T07:32:21Z", "message": "front-end (OwnerSelector): Make dialog's selection optional.\n\nMis-use of `| undefined`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/90bdcecc563cc603fc9dc54685c2f335ae5e18f0", "committedDate": "2020-08-10T07:37:29Z", "message": "front-end: Tidy up comments\n\nFeedback from #2157"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Mjc5NTI4", "url": "https://github.com/openequella/openEQUELLA/pull/2157#pullrequestreview-464279528", "createdAt": "2020-08-10T14:28:16Z", "commit": {"oid": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoyODoxN1rOG-Q-Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo1MDo0MlrOG-R7NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0Mjk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  content === text && (element.parentElement?.matches(\"button\") as boolean)\n          \n          \n            \n                  content === text && (element.parentElement?.matches(\"button\") ?? false)", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467942990", "createdAt": "2020-08-10T14:28:17Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/MuiQueries.ts", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryByText } from \"@testing-library/react\";\n+\n+/**\n+ * Helper function to find MUI buttons with React Testing Library.\n+ *\n+ * @param container A root element to start the search from\n+ * @param text The text to identify the button by.\n+ */\n+export const queryMuiButtonByText = (container: HTMLElement, text: string) =>\n+  queryByText(\n+    container,\n+    (content: string, element: HTMLElement) =>\n+      content === text && (element.parentElement?.matches(\"button\") as boolean)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1ODU4MA==", "bodyText": "Possibly outside the scope of this PR.\nWould it make sense to unify the loading experiences using something like https://github.com/async-library/react-async?", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r467958580", "createdAt": "2020-08-10T14:50:42Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/components/UserSearch.tsx", "diffHunk": "@@ -66,20 +67,25 @@ const UserSearch = ({\n     OEQ.Common.UuidString | undefined\n   >(undefined);\n   const [hasSearched, setHasSearched] = useState<boolean>(false);\n+  const [showSpinner, setShowSpinner] = useState<boolean>(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90bdcecc563cc603fc9dc54685c2f335ae5e18f0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c", "committedDate": "2020-08-10T23:32:50Z", "message": "front-end (testing - MuiQueries): Improve readability\r\n\r\nFeedback from #2157\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjcwOTEw", "url": "https://github.com/openequella/openEQUELLA/pull/2157#pullrequestreview-464670910", "createdAt": "2020-08-11T00:24:07Z", "commit": {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjczOTUz", "url": "https://github.com/openequella/openEQUELLA/pull/2157#pullrequestreview-464673953", "createdAt": "2020-08-11T00:34:15Z", "commit": {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMDozNDoxNVrOG-kTkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMDozNTozM1rOG-kVIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1OTcyOA==", "bodyText": "Stylistically, I've personally found it easier to have node module import first, the internal imports after.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n          \n          \n            \n            import { action } from \"@storybook/addon-actions\";\n          \n          \n            \n            import { action } from \"@storybook/addon-actions\";\n          \n          \n            \n            import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468259728", "createdAt": "2020-08-11T00:34:15Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/OwnerSelector.stories.tsx", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import OwnerSelector from \"../../tsrc/search/components/OwnerSelector\";\n+import { action } from \"@storybook/addon-actions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2MDEyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { queryMuiButtonByText } from \"../../MuiQueries\";\n          \n          \n            \n            import { languageStrings } from \"../../../../tsrc/util/langstrings\";\n          \n          \n            \n            import { fireEvent, screen, waitFor } from \"@testing-library/react\";\n          \n          \n            \n            import { fireEvent, screen, waitFor } from \"@testing-library/react\";\n          \n          \n            \n            import { queryMuiButtonByText } from \"../../MuiQueries\";\n          \n          \n            \n            import { languageStrings } from \"../../../../tsrc/util/langstrings\";", "url": "https://github.com/openequella/openEQUELLA/pull/2157#discussion_r468260129", "createdAt": "2020-08-11T00:35:33Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/OwnerSelectTestHelpers.ts", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { queryMuiButtonByText } from \"../../MuiQueries\";\n+import { languageStrings } from \"../../../../tsrc/util/langstrings\";\n+import { fireEvent, screen, waitFor } from \"@testing-library/react\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a0a9b8fc2c4bbf206d8609f8b26da918e89b48c"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4883, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}