{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTg4NjAw", "number": 2576, "title": "Drag and drop in new search page", "bodyText": "#688\nChecklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][]\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nThis PR adds the feature of 'Drag and Drop' to the new Search UI so each Item and attachment is draggable and they can be dropped to the course list in Selection Session.\nThe approach is basically to reuse some old JS functions provided in courselist.js to make TS component draggable.\nThe whole logic should be:\n\n\nCourseListSection.java prepares a droppable area which is the course list, including setting up the onDrop event handler, and specifying what elements can be dropped.\n\n\nA search is in done in new search UI and returns some search result Items.\n\n\nMake each search result Item draggable.\n\n\nAfter the async call for attachment viewer details is completed, make each attachment draggable.\n\n\nPlease view this Video.", "createdAt": "2020-12-01T05:24:44Z", "url": "https://github.com/openequella/openEQUELLA/pull/2576", "merged": true, "mergeCommit": {"oid": "d0ed0e3d5ba779972eb4519bc01ce8366159dd07"}, "closed": true, "closedAt": "2020-12-02T05:16:26Z", "author": {"login": "PenghaiZhang"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhxscrAH2gAyNTI5OTg4NjAwOjliMTE2OTFjZjJlYzk1YjU5YWJkNmRhNDE1M2RhYzhiNDJlMGIwMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiGVHIgFqTU0MjQ3OTY4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b11691cf2ec95b59abd6da4153dac8b42e0b007", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/9b11691cf2ec95b59abd6da4153dac8b42e0b007", "committedDate": "2020-12-01T03:50:38Z", "message": "Update 'courselist.js' to support 'drag and drop' in new Search UI."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1d1ffcec9913c04c71e96e4957a626356fa5438", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/f1d1ffcec9913c04c71e96e4957a626356fa5438", "committedDate": "2020-12-01T03:50:38Z", "message": "Add a function in LegacySelectionSessionModule to access\nthe Draggable setup function defined in 'courselist.js'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "574df0526dfdef965e947427fdfec84186f28690", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/574df0526dfdef965e947427fdfec84186f28690", "committedDate": "2020-12-01T03:50:38Z", "message": "Make Search result Item and Item's attachment draggable\nin Selection Session.\n\nAlso the icon for attachment is a 'DragIndicator' in\nSelection Session."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b06f7cc4452507a5de90a6427fa8ee026bf01cb", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/7b06f7cc4452507a5de90a6427fa8ee026bf01cb", "committedDate": "2020-12-01T05:00:30Z", "message": "Add Jest tests for making Items and attachments draggable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/ce33c093845ca533e26cdf5a6f48fa2b359f0022", "committedDate": "2020-12-01T22:10:22Z", "message": "Add 'DragIndicator' icons for draggable Items in Selection\nSession."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzg2NTI0", "url": "https://github.com/openequella/openEQUELLA/pull/2576#pullrequestreview-542386524", "createdAt": "2020-12-01T23:37:37Z", "commit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzozNzozN1rOH9EQfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0Nzo0MFrOH9Eezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NDk0Mw==", "bodyText": "There's a small chance here that this test could pass even though no search results have been marked draggable. This is because the expect block is in a function that will only be called if there are 'results'.\nNow obviously we're sure that results has entries, but.... Nowhere here have we confirmed that, so if that mock gets messed up somewhere else we'll never know. Maybe it'd be valid to have an expect above line 725 which confirms getSearchResult.results has a size greater than zero. \ud83e\udd14\nUp to you.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533794943", "createdAt": "2020-12-01T23:37:37Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -703,3 +706,26 @@ describe(\"conversion of parameters to SearchPageOptions\", () => {\n     );\n   });\n });\n+\n+describe(\"In Selection Session\", () => {\n+  const mockGlobalCourseList = jest.spyOn(\n+    LegacySelectionSessionModule,\n+    \"getGlobalCourseList\"\n+  );\n+  mockGlobalCourseList.mockReturnValue({\n+    updateCourseList: jest.fn(),\n+    prepareDraggableAndBind: jest.fn(),\n+  });\n+\n+  it(\"should make each Search result Item draggable\", async () => {\n+    updateMockGetRenderData(basicRenderData);\n+    mockSearch.mockResolvedValue(getSearchResult);\n+    await renderSearchPage();\n+\n+    getSearchResult.results.forEach(({ uuid }) => {\n+      expect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NTg5MQ==", "bodyText": "Similar concern as above with potential for expect never being called.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533795891", "createdAt": "2020-12-01T23:40:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/SearchResult.test.tsx", "diffHunk": "@@ -306,5 +310,15 @@ describe(\"<SearchResult/>\", () => {\n       expect(expandedAttachment.queryByText(\"image.png\")).toBeVisible();\n       expect(collapsedAttachment.queryByText(\"config.json\")).not.toBeVisible();\n     });\n+\n+    it(\"should make each attachment draggable\", async () => {\n+      updateMockGetRenderData(basicRenderData);\n+      await renderSearchResult(mockData.attachSearchObj);\n+      mockData.attachSearchObj.attachments!.forEach((attachment) => {\n+        expect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5Nzk1Mw==", "bodyText": "This is a super minor thing - so feel free to ignore - but, do we really need to prefix the classes (which end up in the DOM and on the React side) with New. Could these just be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n          \n          \n            \n            \t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n          \n          \n            \n            \t\tvar newSearchPageItemSelector = '.SearchPage-Item';\n          \n          \n            \n            \t\tvar newSearchPageAttachmentSelector = '.SearchPage-Attachment';", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533797953", "createdAt": "2020-12-01T23:45:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5ODUzMw==", "bodyText": "To keep things tight.... Should we attempt to use the class directly from CourseList - once it's added to the declare etc?", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533798533", "createdAt": "2020-12-01T23:47:24Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -329,9 +341,17 @@ export default function SearchResult({\n           filePath\n         );\n         return (\n-          <ListItem key={id} button className={classes.nested}>\n+          <ListItem\n+            key={id}\n+            id={id}\n+            button\n+            className={`${classes.nested} NewSearchPage-Attachment`} // Give a class so each attachment can be dropped to the course list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5ODYwNw==", "bodyText": "As above:\n\nTo keep things tight.... Should we attempt to use the class directly from CourseList - once it's added to the declare etc?", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533798607", "createdAt": "2020-12-01T23:47:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -452,7 +472,19 @@ export default function SearchResult({\n \n   const itemPrimaryContent =\n     inSelectionSession && !isSelectSummaryButtonDisabled() ? (\n-      <Grid container alignItems=\"center\">\n+      <Grid\n+        id={uuid}\n+        container\n+        alignItems=\"center\"\n+        className=\"NewSearchPage-Item\" // Give a class so each item can be dropped to the course list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzk4ODI4", "url": "https://github.com/openequella/openEQUELLA/pull/2576#pullrequestreview-542398828", "createdAt": "2020-12-02T00:07:47Z", "commit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowNzo0N1rOH9E73A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDoxMDo0OFrOH9FACA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjA0NA==", "bodyText": "I have a sneaky suspicion that eslint will throw an exhaustive-deps warning for useEffects like these - since you refer to inSelectionSession and prepareDraggable without them being in the dependencies array. \ud83e\udd14 Though it is likely that adding either of them will change functionality - probably in a way that doesn't work out.\nI don't have a recommendation on how to avoid that - just noting that it adds to the work to be addressed on squashing those warnings.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806044", "createdAt": "2020-12-02T00:07:47Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -182,6 +185,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     });\n   }, [filterExpansion, pagedSearchResult]);\n \n+  // In Selection Session, once a new search result is returned, make each\n+  // new search result Item draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      pagedSearchResult.results.forEach(({ uuid }) => {\n+        prepareDraggable(uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjE1MQ==", "bodyText": "Same as above.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806151", "createdAt": "2020-12-02T00:08:08Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -218,6 +221,15 @@ export default function SearchResult({\n     };\n   }, [attachments, getViewerDetails]);\n \n+  // In Selection Session, make each attachment draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      attachmentsWithViewerDetails.forEach(({ attachment }) => {\n+        prepareDraggable(attachment.id, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjYzMA==", "bodyText": "Indenting looks pretty wacky here - I could be wrong.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806630", "createdAt": "2020-12-02T00:09:27Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjc3OA==", "bodyText": "Actually scratch that, it does line up. The nesting above threw me off.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806778", "createdAt": "2020-12-02T00:09:53Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjYzMA=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg==", "bodyText": "Wondering if there is a more concise way to construct this string - but feel free to ignore.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533807112", "createdAt": "2020-12-02T00:10:48Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc8f545d4116343938d5694d727d763682514329", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/dc8f545d4116343938d5694d727d763682514329", "committedDate": "2020-12-02T00:58:10Z", "message": "In component SearchResult, reuse the CSS classes defined in\n'courselist.js' for new Search UI Items and attachments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9398d97aecdeabcb11147ddadf2d1a982cf62faa", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/9398d97aecdeabcb11147ddadf2d1a982cf62faa", "committedDate": "2020-12-02T01:12:28Z", "message": "Reduce duplicated mocks for the global variable 'CourseList'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11dc00faee5b08c1f9fe9dd8a33455465432bf7", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/c11dc00faee5b08c1f9fe9dd8a33455465432bf7", "committedDate": "2020-12-02T02:19:27Z", "message": "Ensure the tests for checking 'prepareDraggableAndBind'\ndo not return false positive results."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9", "committedDate": "2020-12-02T02:44:54Z", "message": "A couple tidy ups for 'courselist.js'."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDc5Njgy", "url": "https://github.com/openequella/openEQUELLA/pull/2576#pullrequestreview-542479682", "createdAt": "2020-12-02T03:53:08Z", "commit": {"oid": "46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MzowOVrOH9JaEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MzowOVrOH9JaEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3OTMxNA==", "bodyText": "Just note that now you've gone from a separator of comma and space, to just comma. So as long as that space was to just make things pretty, then that's fine.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533879314", "createdAt": "2020-12-02T03:53:09Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -97,23 +97,20 @@ var CourseList = {\n           folder);\n       }\n     }\n-\t\tif(doItems) {\n+    if (doItems) {\n       CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n       // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n       CourseList.prepareDraggable(itemSummarySelector);\n     }\n \n-\t\tif(doAttachments) {\n+    if (doAttachments) {\n       CourseList.prepareDraggableAndBind(attachmentSelector, false)\n     }\n \n-    CourseList.prepareDroppable(\n-      itemResultSelector +\n-      ', ' + attachmentSelector +\n-      ', ' + itemSummarySelector +\n-      ', ' + newSearchPageItemSelector +\n-      ', ' + newSearchPageAttachmentSelector, // Also accept draggables made in new Search UI.\n-      dropCallback, clickFolderCallback)\n+    var droppableSelectors =\n+      [itemResultSelector, attachmentSelector, itemSummarySelector,\n+        newSearchPageItemSelector, newSearchPageAttachmentSelector].join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 282, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}