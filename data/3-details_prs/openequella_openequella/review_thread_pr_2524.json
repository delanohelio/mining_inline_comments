{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTgzOTE4", "number": 2524, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MDowMFrOE530Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTowNDowMFrOE6TLzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTE4NzkwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/settings/RemoteSearchResource.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MDowMFrOH0mevw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MDowMFrOH0mevw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxODQ2Mw==", "bodyText": "This is the key work of this PR.", "url": "https://github.com/openequella/openEQUELLA/pull/2524#discussion_r524918463", "createdAt": "2020-11-17T06:50:00Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/settings/RemoteSearchResource.scala", "diffHunk": "@@ -0,0 +1,32 @@\n+package com.tle.web.api.settings\n+\n+import com.tle.legacy.LegacyGuice\n+import com.tle.web.api.entity.BaseEntitySummary\n+import io.swagger.annotations.{Api, ApiOperation}\n+import javax.ws.rs.core.Response\n+import javax.ws.rs.{GET, Path, Produces}\n+\n+import scala.collection.JavaConverters.collectionAsScalaIterableConverter\n+\n+@Path(\"settings/remotesearch/\")\n+@Produces(value = Array(\"application/json\"))\n+@Api(value = \"Settings\")\n+class RemoteSearchResource {\n+  private val federatedSearchService = LegacyGuice.federatedSearchService\n+\n+  @GET\n+  @ApiOperation(\n+    value = \"List available Remote (Federated) Searches\",\n+    notes =\n+      \"This endpoint is used to retrieve available Remote Searches and is secured by SEARCH_FEDERATED_SEARCH\",\n+    response = classOf[BaseEntitySummary],\n+    responseContainer = \"List\"\n+  )\n+  def getAll: Response =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00dc73b5b3800f6de9fd5178461892d06c409a9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTE5MDAxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/powersearch/PowerSearchPrivileges.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MDo0N1rOH0mf6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MDo0N1rOH0mf6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxODc2MA==", "bodyText": "Following a pattern I saw used for Remote Searches to centralise the string literals for privileges.", "url": "https://github.com/openequella/openEQUELLA/pull/2524#discussion_r524918760", "createdAt": "2020-11-17T06:50:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/powersearch/PowerSearchPrivileges.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.tle.core.powersearch;\n+\n+public final class PowerSearchPrivileges {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00dc73b5b3800f6de9fd5178461892d06c409a9"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTE5MjU2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/powersearch/PowerSearchService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MTo0MVrOH0mhSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MTo0MVrOH0mhSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxOTExNQ==", "bodyText": "It is handy (and DB efficient) to be able to get straight at the Base Entities. I saw this was done and secured with Remote Searches, and it nice supports the refactor for BaseEntitySummary.", "url": "https://github.com/openequella/openEQUELLA/pull/2524#discussion_r524919115", "createdAt": "2020-11-17T06:51:41Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/powersearch/PowerSearchService.java", "diffHunk": "@@ -40,4 +40,11 @@\n   List<BaseEntityLabel> listAllForSchema(long schemaId);\n \n   List<BaseEntityLabel> listAllForSchema(Schema schema);\n+\n+  /**\n+   * List all available Power Searches (Advanced Searches) assuming 'SEARCH_POWER_SEARCH' ACL.\n+   *\n+   * @return available power searches\n+   */\n+  List<PowerSearch> enumerateSearchable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00dc73b5b3800f6de9fd5178461892d06c409a9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTE5MzcxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/legacy/LegacyGuice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MjoxNFrOH0miCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNjo1MjoxNFrOH0miCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkxOTMwNA==", "bodyText": "Here's the sort I mentioned. In there I have also added FederatedSearchService.", "url": "https://github.com/openequella/openEQUELLA/pull/2524#discussion_r524919304", "createdAt": "2020-11-17T06:52:14Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/legacy/LegacyGuice.java", "diffHunk": "@@ -96,149 +97,151 @@\n \n public class LegacyGuice extends AbstractModule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00dc73b5b3800f6de9fd5178461892d06c409a9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTY3MTgxOnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/RemoteSearchApiTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTowNDowMFrOH1Rvfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTowNDowMFrOH1Rvfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyNzI2Mw==", "bodyText": "I am a bit surprised that this annotation works. I used to do this for the search2 test which also extends AbstractRestApiTest but it always runs against rest.", "url": "https://github.com/openequella/openEQUELLA/pull/2524#discussion_r525627263", "createdAt": "2020-11-18T01:04:00Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/RemoteSearchApiTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.openequella.rest;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import com.tle.webtests.framework.TestConfig;\n+import com.tle.webtests.framework.TestInstitution;\n+import io.github.openequella.rest.models.BaseEntitySummary;\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.commons.httpclient.HttpMethod;\n+import org.apache.commons.httpclient.HttpStatus;\n+import org.apache.commons.httpclient.methods.GetMethod;\n+import org.codehaus.jackson.type.TypeReference;\n+import org.testng.annotations.Test;\n+\n+@TestInstitution(\"vanilla\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fcb4a376325fde853097451934e22997ebb163c"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1672, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}