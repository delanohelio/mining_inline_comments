{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTIxOTUx", "number": 1759, "title": "Simplify VisibilityScriptingBugTest and add test retries to TestNG tests", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n\nDescription of change\n\nRemoved unnecessary files from vanilla institution (added in during #1721). Isolated to 1ee5de7\nMade test collection simpler, removing the need for the taxonomy  and schema import. Isolated to eed28ea\nSimplified flakey VisibilityScriptingBugTest (removed all the test controls but one, for the minimum test case)\nAdded new annotation @MaxRetryCount(int), which if added to a test will allow that test to automatically retry. This involved including a RetryAnalyzer as well as a TestAnnotationTransformer\nAdded logging on retry (logs the test name, {current retry number}/{maximum retry number}, and a stacktrace of the failure that caused the retry)", "createdAt": "2020-05-25T03:10:45Z", "url": "https://github.com/openequella/openEQUELLA/pull/1759", "merged": true, "mergeCommit": {"oid": "b0aa9215c557f4695fa830eb80a51b8781e4710a"}, "closed": true, "closedAt": "2020-05-26T06:57:34Z", "author": {"login": "SammyIsConfused"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckk6MVAH2gAyNDIyNTIxOTUxOjFlZTVkZTdiMDIzOTQ5ZmU5ZmMyZjRhZmM4NzNiMDc2OTNlNjE5ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck6kGkgH2gAyNDIyNTIxOTUxOjRkZTBlYjM3MmZhNWMwZTZkMjg0MDE5MTVjOGNhZDIzYjkyYjY5OGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ee5de7b023949fe9fc2f4afc873b07693e61987", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/1ee5de7b023949fe9fc2f4afc873b07693e61987", "committedDate": "2020-05-25T00:27:30Z", "message": "Revert \"Update vanilla institution to support the new test\"\n\nThis reverts commit 808ed8a9cc1c11df05065416523334bce18c3e5a."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed28eade0d1feaa5776c6a2483d7da141c90376", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/eed28eade0d1feaa5776c6a2483d7da141c90376", "committedDate": "2020-05-25T01:16:33Z", "message": "Only modify the necessary files within vanilla institution to work the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9650f8003a7687ef86d0bc4702a2630cdd165288", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/9650f8003a7687ef86d0bc4702a2630cdd165288", "committedDate": "2020-05-25T01:17:10Z", "message": "Simplify the test\n\nOnly use one control for testing - the name control."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015b3cd51b32b012a4578b6c7f003d3a0e9fb567", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/015b3cd51b32b012a4578b6c7f003d3a0e9fb567", "committedDate": "2020-05-25T02:52:05Z", "message": "Add new annotation MaxRetryCount"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0acdccca08c1accfdedda6d382ddc1feaef82c5d", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/0acdccca08c1accfdedda6d382ddc1feaef82c5d", "committedDate": "2020-05-25T02:53:51Z", "message": "Add new RetryAnalyzer and TestAnnotationTransformer\n\nIncludes logging of retry information. (max number of retries,\ncurrent retry, stacktrace of the failure that caused the retry)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cceb67a1afea37c171d52f3e8952e0fe4347ccf", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/3cceb67a1afea37c171d52f3e8952e0fe4347ccf", "committedDate": "2020-05-25T02:54:34Z", "message": "Add retry listener to textng.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "795bce714015ae2f0b3e7fc9eea79bb7479d70d9", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/795bce714015ae2f0b3e7fc9eea79bb7479d70d9", "committedDate": "2020-05-25T02:54:53Z", "message": "Add retries to VisibilityScriptingBugTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57", "committedDate": "2020-05-25T04:24:02Z", "message": "Set default vanilla institution UI mode to false"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDYwMTc3", "url": "https://github.com/openequella/openEQUELLA/pull/1759#pullrequestreview-417460177", "createdAt": "2020-05-25T05:16:54Z", "commit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNToxNjo1NFrOGZ065w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTozNDo0NFrOGZ1IxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNDYzMQ==", "bodyText": "How about a default of 3?\nSeems odd to have 0 for a Max.\nOr should we have a DefaultRetry annotation that stacks on this and has the value as zero?", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429734631", "createdAt": "2020-05-25T05:16:54Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/MaxRetryCount.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package retry;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface MaxRetryCount {\n+  int value() default 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNDcyMw==", "bodyText": "5 seems rather high. 3?", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429734723", "createdAt": "2020-05-25T05:17:21Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/contribute/bugs/VisibilityScriptingBugTest.java", "diffHunk": "@@ -27,23 +26,11 @@\n   private static final String COLLECTION = \"Test Wizard Issue\";\n   private static final String ITEM_NAME = \"VisibilityScriptingBugTest - Lost Metadata Test Item 1\";\n \n-  private static final Date DATE = new Date(1589256742342L);\n-  private static final String DATE_AS_STRING = new SimpleDateFormat(\"yyyy-MM-dd\").format(DATE);\n+  private static final String RADIO = \"Yes\";\n \n-  private static final String CHECKBOX = \"one\";\n-  private static final String DROPDOWN = \"List 2\";\n-  private static final String EMAIL = \"test@test.com\";\n-  private static final String ROLE = \"System Administrator\";\n-\n-  private static final String RADIO1 = \"Radio 1\";\n-  private static final String RADIO2 = \"Yes\";\n-  private static final String SHUFFLE1 = \"Shuffle 1\";\n-  private static final String SHUFFLE2 = \"Shuffle 2\";\n-\n-  private static final String XML_PATH = \"item/itembody/\";\n-  private static final String ROLE_ID = \"ROLE_SYSTEM_ADMINISTRATOR\";\n-  private static final String USER_ID = \"4026b550-9a1f-4521-9b56-9ec737c02526\";\n+  private static final String XML_PATH = \"item/\";\n \n+  @MaxRetryCount(5)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNTQ5NQ==", "bodyText": "Is this required? If so, does that mean this is instantiated as a singleton? If so, does that mean we have concurrency issues with this?", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429735495", "createdAt": "2020-05-25T05:21:37Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/FailureRetryAnalyzer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package retry;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.testng.IRetryAnalyzer;\n+import org.testng.ITestResult;\n+\n+public class FailureRetryAnalyzer implements IRetryAnalyzer {\n+  int currentRetry = 0;\n+  Logger LOGGER = Logger.getLogger(FailureRetryAnalyzer.class.getName());\n+\n+  @Override\n+  public boolean retry(ITestResult result) {\n+    MaxRetryCount failureRetryCount =\n+        result.getMethod().getConstructorOrMethod().getMethod().getAnnotation(MaxRetryCount.class);\n+    int maxRetryCount = (failureRetryCount == null) ? 0 : failureRetryCount.value();\n+    if (++currentRetry > maxRetryCount) {\n+      currentRetry = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNjIwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOGGER.log(Level.WARNING, result.getThrowable().getMessage(), result.getThrowable());\n          \n          \n            \n                LOGGER.warning(result.getThrowable().getMessage(), result.getThrowable());\n          \n      \n    \n    \n  \n\nor can you\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                LOGGER.log(Level.WARNING, result.getThrowable().getMessage(), result.getThrowable());\n          \n          \n            \n                LOGGER.warning(result.getThrowable());\n          \n      \n    \n    \n  \n\nActually, do we even need to log this? Seems excessively verbose.", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429736207", "createdAt": "2020-05-25T05:25:05Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/FailureRetryAnalyzer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package retry;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.testng.IRetryAnalyzer;\n+import org.testng.ITestResult;\n+\n+public class FailureRetryAnalyzer implements IRetryAnalyzer {\n+  int currentRetry = 0;\n+  Logger LOGGER = Logger.getLogger(FailureRetryAnalyzer.class.getName());\n+\n+  @Override\n+  public boolean retry(ITestResult result) {\n+    MaxRetryCount failureRetryCount =\n+        result.getMethod().getConstructorOrMethod().getMethod().getAnnotation(MaxRetryCount.class);\n+    int maxRetryCount = (failureRetryCount == null) ? 0 : failureRetryCount.value();\n+    if (++currentRetry > maxRetryCount) {\n+      currentRetry = 0;\n+      return false;\n+    } else {\n+      logRetryInfo(result, maxRetryCount);\n+      return true;\n+    }\n+  }\n+\n+  private void logRetryInfo(ITestResult result, int maxRetryCount) {\n+    LOGGER.warning(\"Test with retry analyser failed.\\n\\n\");\n+    // print failure stack trace\n+    LOGGER.log(Level.WARNING, result.getThrowable().getMessage(), result.getThrowable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNjQ2Ng==", "bodyText": "This message is kind of redundant isn't it?", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429736466", "createdAt": "2020-05-25T05:26:20Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/FailureRetryAnalyzer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package retry;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.testng.IRetryAnalyzer;\n+import org.testng.ITestResult;\n+\n+public class FailureRetryAnalyzer implements IRetryAnalyzer {\n+  int currentRetry = 0;\n+  Logger LOGGER = Logger.getLogger(FailureRetryAnalyzer.class.getName());\n+\n+  @Override\n+  public boolean retry(ITestResult result) {\n+    MaxRetryCount failureRetryCount =\n+        result.getMethod().getConstructorOrMethod().getMethod().getAnnotation(MaxRetryCount.class);\n+    int maxRetryCount = (failureRetryCount == null) ? 0 : failureRetryCount.value();\n+    if (++currentRetry > maxRetryCount) {\n+      currentRetry = 0;\n+      return false;\n+    } else {\n+      logRetryInfo(result, maxRetryCount);\n+      return true;\n+    }\n+  }\n+\n+  private void logRetryInfo(ITestResult result, int maxRetryCount) {\n+    LOGGER.warning(\"Test with retry analyser failed.\\n\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNjk2Mw==", "bodyText": "Does this get called before the first test run, of before the first retry?\n(As we don't want any log message for a single successful run.)", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429736963", "createdAt": "2020-05-25T05:28:46Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/FailureRetryAnalyzer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package retry;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.testng.IRetryAnalyzer;\n+import org.testng.ITestResult;\n+\n+public class FailureRetryAnalyzer implements IRetryAnalyzer {\n+  int currentRetry = 0;\n+  Logger LOGGER = Logger.getLogger(FailureRetryAnalyzer.class.getName());\n+\n+  @Override\n+  public boolean retry(ITestResult result) {\n+    MaxRetryCount failureRetryCount =\n+        result.getMethod().getConstructorOrMethod().getMethod().getAnnotation(MaxRetryCount.class);\n+    int maxRetryCount = (failureRetryCount == null) ? 0 : failureRetryCount.value();\n+    if (++currentRetry > maxRetryCount) {\n+      currentRetry = 0;\n+      return false;\n+    } else {\n+      logRetryInfo(result, maxRetryCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczNzUyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (maxRetryCount == null) return;\n          \n          \n            \n                if (maxRetryCount == null && maxRetryCount.value() < 1) return;", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429737526", "createdAt": "2020-05-25T05:31:31Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/TestAnnotationTransformer.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package retry;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+import org.testng.IAnnotationTransformer;\n+import org.testng.annotations.ITestAnnotation;\n+\n+public class TestAnnotationTransformer implements IAnnotationTransformer {\n+\n+  @Override\n+  public void transform(\n+      ITestAnnotation annotation, Class testClass, Constructor testConstructor, Method testMethod) {\n+    if (testMethod == null) return;\n+    MaxRetryCount maxRetryCount = testMethod.getAnnotation(MaxRetryCount.class);\n+    if (maxRetryCount == null) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczODE4MQ==", "bodyText": "Do we have the log4j framework overhere? (Or Slf4j?)", "url": "https://github.com/openequella/openEQUELLA/pull/1759#discussion_r429738181", "createdAt": "2020-05-25T05:34:44Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/retry/FailureRetryAnalyzer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package retry;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae9cc2b695f10982b70c5609a5ea7bc5f1d8be57"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2380bca4c66cef24f82775c79b81002ea73ec945", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/2380bca4c66cef24f82775c79b81002ea73ec945", "committedDate": "2020-05-25T07:22:32Z", "message": "Add back items and acls related to DRMPrivilegeTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c64d70ade595f5717aa6ecfc9da1ba3ca7fd2584", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/c64d70ade595f5717aa6ecfc9da1ba3ca7fd2584", "committedDate": "2020-05-25T07:30:42Z", "message": "Use slf4j rather than standard logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66dc390d03c1c454a8a286762c9188485ce78a49", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/66dc390d03c1c454a8a286762c9188485ce78a49", "committedDate": "2020-05-25T07:38:33Z", "message": "Rename MaxRetryCount.java annotation to RetryTest.java\n\nMakes more sense when used - add @RetryTest to a test\nmethod for a default 3 retries."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a46706a1296b3bc52d1e37009d8ccb32292eb0", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/30a46706a1296b3bc52d1e37009d8ccb32292eb0", "committedDate": "2020-05-25T07:46:23Z", "message": "Remove currentRetry reset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bed610a4cf6023e80e1aeb504dcf3e404b650d5", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/9bed610a4cf6023e80e1aeb504dcf3e404b650d5", "committedDate": "2020-05-25T07:48:25Z", "message": "Handle RetryTest(0) as an annotation\n\nSimply gets ignored."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTI0NTU3", "url": "https://github.com/openequella/openEQUELLA/pull/1759#pullrequestreview-417524557", "createdAt": "2020-05-25T07:53:14Z", "commit": {"oid": "9bed610a4cf6023e80e1aeb504dcf3e404b650d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de0eb372fa5c0e6d28401915c8cad23b92b698b", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/4de0eb372fa5c0e6d28401915c8cad23b92b698b", "committedDate": "2020-05-26T01:41:17Z", "message": "Add back resources in vanilla institution required for other tests\n\nNamely FavouriteItemsTest, PortalTest and TokenLoginTest."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 139, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}