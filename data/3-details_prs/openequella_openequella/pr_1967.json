{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNzQ5NjI3", "number": 1967, "title": "Add debounced query bar for searches", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\n\nAdded Searchbar component (no search button, automatic type-ahead. Includes clear button and half second onChange debounce)\nAdd story for SearchBar\nAdd Searchbar to the search page\nAdd tests for the search page", "createdAt": "2020-06-30T02:47:47Z", "url": "https://github.com/openequella/openEQUELLA/pull/1967", "merged": true, "mergeCommit": {"oid": "308623b033bf5ba9ac546bd69482b3adf8196c22"}, "closed": true, "closedAt": "2020-07-07T04:17:48Z", "author": {"login": "SammyIsConfused"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwMU_TAH2gAyNDQxNzQ5NjI3OjAzZDY4NDZhOTQ2OTA4ZGJiODc4ZmE4NjgwZTRiMGE5MDA4NWExZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyd4LLAFqTQ0MzU0OTA1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03d6846a946908dbb878fa8680e4b0a90085a1f2", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/03d6846a946908dbb878fa8680e4b0a90085a1f2", "committedDate": "2020-06-30T02:36:14Z", "message": "Add language string for no results placeholder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c6a359b3164df40bb1d4c504cf09e3d65d62b53", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/0c6a359b3164df40bb1d4c504cf09e3d65d62b53", "committedDate": "2020-06-30T02:36:45Z", "message": "Add debounced searchbar component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "633a6fdf4df343c81c49fc834b70e8540ee74a1c", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/633a6fdf4df343c81c49fc834b70e8540ee74a1c", "committedDate": "2020-06-30T02:37:04Z", "message": "Include story for SearchBar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3d9597571891c99b74c20a3ea31eaab7e51151", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/4e3d9597571891c99b74c20a3ea31eaab7e51151", "committedDate": "2020-06-30T02:41:21Z", "message": "Add SearchBar to search page and handle empty results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/493620caeef678224f21de3c2c5073ab10df6506", "committedDate": "2020-06-30T02:41:45Z", "message": "Add JS tests for SearchPage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjQ0MTcz", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-439644173", "createdAt": "2020-06-30T03:28:34Z", "commit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMzoyODozNFrOGqqTrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMzo0NDo1N1rOGqqjQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM4NjU0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { ItemStatus } from \"@openequella/rest-api-client/src/Common\";\n          \n      \n    \n    \n  \n\nTo keep the namespacing clear, we use the import directly above this line, so for ItemStatus we want OEQ.Common.ItemStatus.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447386543", "createdAt": "2020-06-30T03:28:34Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -24,18 +24,18 @@ import {\n } from \"../mainui/Template\";\n import { languageStrings } from \"../util/langstrings\";\n import {\n-  IconButton,\n+  Card,\n+  CardContent,\n+  Grid,\n   List,\n   ListItem,\n   ListSubheader,\n-  TextField,\n-  Grid,\n-  Card,\n-  CardContent,\n+  Typography,\n } from \"@material-ui/core\";\n-import SearchIcon from \"@material-ui/icons/Search\";\n+import SearchBar from \"../search/components/SearchBar\";\n import { searchItems } from \"./SearchModule\";\n import * as OEQ from \"@openequella/rest-api-client\";\n+import { ItemStatus } from \"@openequella/rest-api-client/src/Common\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM4NjY0NQ==", "bodyText": "Please keep as was. See above comment about import.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447386645", "createdAt": "2020-06-30T03:29:01Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -54,10 +54,14 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     }));\n \n     search({\n-      status: [OEQ.Common.ItemStatus.LIVE, OEQ.Common.ItemStatus.REVIEW],\n+      status: [ItemStatus.LIVE, ItemStatus.REVIEW],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM5MDUzMQ==", "bodyText": "I've seen this approach go bad with stale state when using in functional-React. In that case we went with https://usehooks.com/useDebounce/\nI wonder if we might want to do that here. Thoughts?", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447390531", "createdAt": "2020-06-30T03:44:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  const searchStrings = languageStrings.searchpage;\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjgzNjc4", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-439683678", "createdAt": "2020-06-30T05:38:52Z", "commit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTozODo1MlrOGqscFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjowMjoxNVrOGqs6_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTQ2MA==", "bodyText": "May I ask why we need this mount ?", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447421460", "createdAt": "2020-06-30T05:38:52Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { getSearchResult } from \"../../../__mocks__/getSearchResult\";\n+import { createMount } from \"@material-ui/core/test-utils\";\n+import * as React from \"react\";\n+import SearchPage from \"../../../tsrc/search/SearchPage\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { ReactWrapper } from \"enzyme\";\n+\n+jest.mock(\"@openequella/rest-api-client\");\n+(OEQ.Search.search as jest.Mock<\n+  Promise<OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>>\n+>).mockResolvedValue(getSearchResult);\n+\n+describe(\"<SearchPage/>\", () => {\n+  let mount: ReturnType<typeof createMount>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMTY2OQ==", "bodyText": "Can we do component = mount(<SearchPage updateTemplate={jest.fn()} />) here for each test ?", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447421669", "createdAt": "2020-06-30T05:39:35Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { getSearchResult } from \"../../../__mocks__/getSearchResult\";\n+import { createMount } from \"@material-ui/core/test-utils\";\n+import * as React from \"react\";\n+import SearchPage from \"../../../tsrc/search/SearchPage\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { ReactWrapper } from \"enzyme\";\n+\n+jest.mock(\"@openequella/rest-api-client\");\n+(OEQ.Search.search as jest.Mock<\n+  Promise<OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>>\n+>).mockResolvedValue(getSearchResult);\n+\n+describe(\"<SearchPage/>\", () => {\n+  let mount: ReturnType<typeof createMount>;\n+  let component: ReactWrapper<any, Readonly<{}>, React.Component<{}, {}, any>>;\n+\n+  beforeEach(() => {\n+    mount = createMount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTM4MA==", "bodyText": "I am not very sure if we should use update() or render(), but in my previous work I used update.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447425380", "createdAt": "2020-06-30T05:51:05Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { getSearchResult } from \"../../../__mocks__/getSearchResult\";\n+import { createMount } from \"@material-ui/core/test-utils\";\n+import * as React from \"react\";\n+import SearchPage from \"../../../tsrc/search/SearchPage\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { ReactWrapper } from \"enzyme\";\n+\n+jest.mock(\"@openequella/rest-api-client\");\n+(OEQ.Search.search as jest.Mock<\n+  Promise<OEQ.Common.PagedResult<OEQ.Search.SearchResultItem>>\n+>).mockResolvedValue(getSearchResult);\n+\n+describe(\"<SearchPage/>\", () => {\n+  let mount: ReturnType<typeof createMount>;\n+  let component: ReactWrapper<any, Readonly<{}>, React.Component<{}, {}, any>>;\n+\n+  beforeEach(() => {\n+    mount = createMount();\n+  });\n+\n+  afterEach(() => {\n+    mount.cleanUp();\n+  });\n+\n+  it(\"should display 'No results found.' when there are no search results\", () => {\n+    component = mount(<SearchPage updateTemplate={jest.fn()} />);\n+    expect(component.html()).not.toContain(\n+      \"266bb0ff-a730-4658-aec0-c68bbefc227c\"\n+    );\n+    expect(component.html()).toContain(\"No results found.\");\n+  });\n+\n+  it(\"should contain the test data after a search bar text change and render\", async () => {\n+    component = mount(<SearchPage updateTemplate={jest.fn()} />);\n+    const input = component.find(\"input\");\n+    await input.simulate(\"change\", { target: { value: \"new title\" } });\n+    await component.render();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNjE3MQ==", "bodyText": "why not  call search directly?", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447426171", "createdAt": "2020-06-30T05:53:26Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -99,14 +109,10 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n       <Grid item xs={9}>\n         <Card>\n           <CardContent>\n-            <IconButton>\n-              <SearchIcon fontSize=\"large\" />\n-            </IconButton>\n-            <TextField />\n+            <SearchBar onChange={handleSearch} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyOTM3NA==", "bodyText": "I wonder if  we need useCallback. My understanding is that we need to pass a memorised callback to a child component to avoid unnecessary renders. But here the use case seems different.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r447429374", "createdAt": "2020-06-30T06:02:15Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  const searchStrings = languageStrings.searchpage;\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb41d9e9227b30e3162cbf2a31f3818f9f4b42b", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/fcb41d9e9227b30e3162cbf2a31f3818f9f4b42b", "committedDate": "2020-07-01T06:41:50Z", "message": "Merge branch 'component/new-search-page' into feature/add_query_bar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6428b3c0063446abea7d7dc283c9bd143ba511b8", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/6428b3c0063446abea7d7dc283c9bd143ba511b8", "committedDate": "2020-07-06T03:33:46Z", "message": "Stop referring to ItemStatus directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6f169a49045dfe75fc3c62fa134f86383019e4a", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/f6f169a49045dfe75fc3c62fa134f86383019e4a", "committedDate": "2020-07-06T03:55:16Z", "message": "Merge branch 'component/new-search-page' into feature/add_query_bar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6173cc872df7b39191fe045eff2dea1c12ea779", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/e6173cc872df7b39191fe045eff2dea1c12ea779", "committedDate": "2020-07-06T06:02:36Z", "message": "Fix optional attachmentType issue\n\nSee #1999"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dae3ee71d7d47eac5cf3ba856a6b33ca401d3e7", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/4dae3ee71d7d47eac5cf3ba856a6b33ca401d3e7", "committedDate": "2020-07-06T06:20:12Z", "message": "Use the underlined searchbar, clear on Escape key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f89cae912ed87c44021066abae4f327844e5df0", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/9f89cae912ed87c44021066abae4f327844e5df0", "committedDate": "2020-07-06T07:30:34Z", "message": "Specifically refer to the correct input tag in SearchPage.test.tsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f595f5ff51c7be7fedbab9d13fe86f8b2ede5a2a", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/f595f5ff51c7be7fedbab9d13fe86f8b2ede5a2a", "committedDate": "2020-07-06T07:40:09Z", "message": "Fix typo in test className"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/3f593d4fbd3b21006924ba580e50a6428800fef9", "committedDate": "2020-07-06T09:34:52Z", "message": "Add a timeout to the test to wait for the debounce properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTEzMTkz", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-443113193", "createdAt": "2020-07-06T14:12:33Z", "commit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxMjozNFrOGtZBUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxOTo0M1rOGtZUnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0OTA0MA==", "bodyText": "It looks like these got missed by prettier\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import {is} from 'typescript-is';\n          \n          \n            \n            import {GET} from './AxiosInstance';\n          \n          \n            \n            import { is } from 'typescript-is';\n          \n          \n            \n            import { GET } from './AxiosInstance';", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450249040", "createdAt": "2020-07-06T14:12:34Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -1,6 +1,6 @@\n import * as Common from './Common';\n-import { is } from 'typescript-is';\n-import { GET } from './AxiosInstance';\n+import {is} from 'typescript-is';\n+import {GET} from './AxiosInstance';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0OTQ3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  variant={\"standard\"}\n          \n          \n            \n                  variant=\"standard\"", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450249476", "createdAt": "2020-07-06T14:13:12Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );\n+\n+  React.useEffect(() => {\n+    delayedQuery(query);\n+  }, [query]);\n+\n+  return (\n+    <TextField\n+      onKeyDown={(event) => {\n+        //27 is the escape key\n+        if (event.keyCode == 27) {\n+          event.preventDefault();\n+          setQuery(\"\");\n+        }\n+      }}\n+      InputProps={{\n+        startAdornment: (\n+          <InputAdornment position=\"start\">\n+            <SearchIcon fontSize={\"small\"} />\n+          </InputAdornment>\n+        ),\n+        endAdornment: query.length > 0 && (\n+          <IconButton onClick={() => setQuery(\"\")} size={\"small\"}>\n+            <Close />\n+          </IconButton>\n+        ),\n+      }}\n+      fullWidth\n+      onChange={(event) => setQuery(event.target.value)}\n+      variant={\"standard\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MzA3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <SearchIcon fontSize={\"small\"} />\n          \n          \n            \n                        <SearchIcon fontSize=\"small\" />", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450253072", "createdAt": "2020-07-06T14:18:28Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );\n+\n+  React.useEffect(() => {\n+    delayedQuery(query);\n+  }, [query]);\n+\n+  return (\n+    <TextField\n+      onKeyDown={(event) => {\n+        //27 is the escape key\n+        if (event.keyCode == 27) {\n+          event.preventDefault();\n+          setQuery(\"\");\n+        }\n+      }}\n+      InputProps={{\n+        startAdornment: (\n+          <InputAdornment position=\"start\">\n+            <SearchIcon fontSize={\"small\"} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MzMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      <IconButton onClick={() => setQuery(\"\")} size={\"small\"}>\n          \n          \n            \n                      <IconButton onClick={() => setQuery(\"\")} size=\"small\">", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450253315", "createdAt": "2020-07-06T14:18:49Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );\n+\n+  React.useEffect(() => {\n+    delayedQuery(query);\n+  }, [query]);\n+\n+  return (\n+    <TextField\n+      onKeyDown={(event) => {\n+        //27 is the escape key\n+        if (event.keyCode == 27) {\n+          event.preventDefault();\n+          setQuery(\"\");\n+        }\n+      }}\n+      InputProps={{\n+        startAdornment: (\n+          <InputAdornment position=\"start\">\n+            <SearchIcon fontSize={\"small\"} />\n+          </InputAdornment>\n+        ),\n+        endAdornment: query.length > 0 && (\n+          <IconButton onClick={() => setQuery(\"\")} size={\"small\"}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1Mzk4MA==", "bodyText": "Would it make sense to use a const for storing the escape key code?", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450253980", "createdAt": "2020-07-06T14:19:43Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );\n+\n+  React.useEffect(() => {\n+    delayedQuery(query);\n+  }, [query]);\n+\n+  return (\n+    <TextField\n+      onKeyDown={(event) => {\n+        //27 is the escape key\n+        if (event.keyCode == 27) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe4114003354f33884fd2255f5e8aae8076b3579", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/fe4114003354f33884fd2255f5e8aae8076b3579", "committedDate": "2020-07-06T23:18:31Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDcyNDI4", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-443472428", "createdAt": "2020-07-06T23:42:50Z", "commit": {"oid": "fe4114003354f33884fd2255f5e8aae8076b3579"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzo0Mjo1MFrOGtqbuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzo0Mzo0NVrOGtqcoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzNDMzMQ==", "bodyText": "After delays, I'm happy to let this be. Resolving.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450534331", "createdAt": "2020-07-06T23:42:50Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  const searchStrings = languageStrings.searchpage;\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM5MDUzMQ=="}, "originalCommit": {"oid": "493620caeef678224f21de3c2c5073ab10df6506"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUzNDU2MA==", "bodyText": "Good plan. Always capture magic numbers in some kind of variable/constant.", "url": "https://github.com/openequella/openEQUELLA/pull/1967#discussion_r450534560", "createdAt": "2020-07-06T23:43:45Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { IconButton, InputAdornment, TextField } from \"@material-ui/core\";\n+import * as React from \"react\";\n+import { useCallback } from \"react\";\n+import SearchIcon from \"@material-ui/icons/Search\";\n+import { Close } from \"@material-ui/icons\";\n+import { debounce } from \"lodash\";\n+\n+interface SearchBarProps {\n+  /**\n+   * Callback fired when the user stops typing (debounced for 500 milliseconds).\n+   * @param query The string to search.\n+   */\n+  onChange: (query: string) => void;\n+}\n+\n+/**\n+ * Debounced searchbar component to be used in the Search Page.\n+ * It also includes an adornment which allows clearing the search field in a single click.\n+ * This component does not handle the API query itself,\n+ * that should be done in the parent component with the onChange callback.\n+ */\n+export default function SearchBar({ onChange }: SearchBarProps) {\n+  const [query, setQuery] = React.useState<string>(\"\");\n+  /**\n+   * uses lodash to debounce the search query by half a second\n+   */\n+  const delayedQuery = useCallback(\n+    debounce((query: string) => onChange(query), 500),\n+    []\n+  );\n+\n+  React.useEffect(() => {\n+    delayedQuery(query);\n+  }, [query]);\n+\n+  return (\n+    <TextField\n+      onKeyDown={(event) => {\n+        //27 is the escape key\n+        if (event.keyCode == 27) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1Mzk4MA=="}, "originalCommit": {"oid": "3f593d4fbd3b21006924ba580e50a6428800fef9"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30439384b495cb9dc31109e213358a8d81593038", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/30439384b495cb9dc31109e213358a8d81593038", "committedDate": "2020-07-06T23:45:57Z", "message": "Merge branch 'component/new-search-page' into feature/add_query_bar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "723669a27e067d1b1a67ae38ac557e0b20054fc5", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/723669a27e067d1b1a67ae38ac557e0b20054fc5", "committedDate": "2020-07-06T23:47:22Z", "message": "Add a constant for the Escape keycode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDc0NTM3", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-443474537", "createdAt": "2020-07-06T23:49:34Z", "commit": {"oid": "723669a27e067d1b1a67ae38ac557e0b20054fc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36b0fc4200059dcd2512e7aad7a95738719036d9", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/36b0fc4200059dcd2512e7aad7a95738719036d9", "committedDate": "2020-07-07T01:33:40Z", "message": "Fix issues with memoization\n\nThe default sort order was not being maintained because\nthe dependency to searchOptions was not used by the callback.\nThis meant that for every search, the sort order was wiped and\nevery sort order change the search query was wiped. This commit\nfixes that issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb225527c1411d85cb21b8ff8617d6290e0060fc", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/eb225527c1411d85cb21b8ff8617d6290e0060fc", "committedDate": "2020-07-07T01:34:15Z", "message": "Make the debounce callback depend upon onChange"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "695532ac531a2c5dd249e651ecb141cd32199fc0", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/695532ac531a2c5dd249e651ecb141cd32199fc0", "committedDate": "2020-07-07T02:02:03Z", "message": "Add back whitespaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTEzNDc5", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-443513479", "createdAt": "2020-07-07T02:05:19Z", "commit": {"oid": "695532ac531a2c5dd249e651ecb141cd32199fc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52cbe44c7e1e7c9d3bd74b943f57c03fa4464972", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/52cbe44c7e1e7c9d3bd74b943f57c03fa4464972", "committedDate": "2020-07-07T02:17:17Z", "message": "Stop using React.memo on SearchOrderSelect.tsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fbb42db606907f92f4a156836ccc908c6149fbf", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/5fbb42db606907f92f4a156836ccc908c6149fbf", "committedDate": "2020-07-07T02:21:41Z", "message": "Remove useCallback from SearchPage.tsx"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTQ5MDU5", "url": "https://github.com/openequella/openEQUELLA/pull/1967#pullrequestreview-443549059", "createdAt": "2020-07-07T04:10:54Z", "commit": {"oid": "5fbb42db606907f92f4a156836ccc908c6149fbf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 27, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}