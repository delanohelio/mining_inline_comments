{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NTc5NTY4", "number": 2632, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNTozNzozM1rOFIZ0RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMzo1MjowOVrOFKwQuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzU1OTA5OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNTozNzozM1rOIKS9AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMzoyNDoyM1rOINklcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzY2NzIwMQ==", "bodyText": "I image we would have another for bundle:uploadlist.\nAlso Line 24, 27 and 28 will be removed once rewriting uploadlist is completed.", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r547667201", "createdAt": "2020-12-23T05:37:33Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -19,12 +19,13 @@\n     \"dev\": \"pulp build && cross-env-shell parcel watch --no-autoinstall --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"dev:build\": \"tsc --noEmit && run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"build\": \"npm-run-all build:*\",\n-    \"build:bundles\": \"run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n-    \"build:langbundle\": \"cross-env-shell parcel build target/genlang.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/genlang.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n+    \"build:bundles\": \"run-s bundle && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n+    \"build:langbundle\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n     \"compileps\": \"pulp build\",\n+    \"bundle\": \"npm-run-all bundle:* && run-s bundleps\",\n+    \"bundle:languagestring\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61ff579ade490c6facbaaec97ef51cdb9567622d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwMTgxMQ==", "bodyText": "I image we would have another for bundle:uploadlist.\n\nFor that, I don't believe we'll need anything. It should just end up as a component which is part of the existing source tree.", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r551101811", "createdAt": "2021-01-04T03:24:23Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -19,12 +19,13 @@\n     \"dev\": \"pulp build && cross-env-shell parcel watch --no-autoinstall --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"dev:build\": \"tsc --noEmit && run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"build\": \"npm-run-all build:*\",\n-    \"build:bundles\": \"run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n-    \"build:langbundle\": \"cross-env-shell parcel build target/genlang.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/genlang.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n+    \"build:bundles\": \"run-s bundle && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n+    \"build:langbundle\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n     \"compileps\": \"pulp build\",\n+    \"bundle\": \"npm-run-all bundle:* && run-s bundleps\",\n+    \"bundle:languagestring\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzY2NzIwMQ=="}, "originalCommit": {"oid": "61ff579ade490c6facbaaec97ef51cdb9567622d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Nzg5OTUxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/BuildLanguageBundle.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QyMzoxNzo0NFrOINietg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QyMzoxNzo0NFrOINietg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2NzMxOA==", "bodyText": "I have tried to use flatMap instead of push, but there was an error complaining flatMap does not exist on type [key]: value....\nI tried to add es2019 or es2019.array in tsconfig - lib but that did not help.", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r551067318", "createdAt": "2021-01-03T23:17:44Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/BuildLanguageBundle.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { LanguageStrings, languageStrings } from \"./langstrings\";\n+\n+type LanguageStringKey = keyof typeof languageStrings;\n+\n+const buildLanguageBundle = () => {\n+  const languageBundle: LanguageStrings[] = [];\n+  (Object.keys(languageStrings) as Array<LanguageStringKey>).forEach((key) => {\n+    languageBundle.push(...generateLanguageBundle(key, languageStrings[key]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e37af3a4c3cfc67c166f78e7a256b93b3533ec5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODEzMzk3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/BuildLanguageBundle.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMjo1NzozOFrOINkSwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMjo1NzozOFrOINkSwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5NzAyNg==", "bodyText": "Should this perhaps be an else if (typeof value === \"object) and then an else catch all would throw an error as someone has messed up the languagestrings?", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r551097026", "createdAt": "2021-01-04T02:57:38Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/BuildLanguageBundle.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { LanguageStrings, languageStrings } from \"./langstrings\";\n+\n+type LanguageStringKey = keyof typeof languageStrings;\n+\n+const buildLanguageBundle = () => {\n+  const languageBundle: LanguageStrings[] = [];\n+  (Object.keys(languageStrings) as Array<LanguageStringKey>).forEach((key) => {\n+    languageBundle.push(...generateLanguageBundle(key, languageStrings[key]));\n+  });\n+  // Need to spread the array otherwise the object structure is wrong.\n+  return JSON.stringify(Object.assign({}, ...languageBundle));\n+};\n+\n+/**\n+ * Generate a list of key/value pairs for one specific language string key.\n+ * @param key One language string's key which will be concatenated with its parent key\n+ * by a '.' if the value has nested objects\n+ * @param value One language string's value which can be a string or an object\n+ */\n+const generateLanguageBundle = (\n+  key: string,\n+  value: LanguageStrings | string\n+): LanguageStrings[] => {\n+  const output: LanguageStrings[] = [];\n+  if (typeof value === \"string\") {\n+    output.push({ [key]: value });\n+  } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e37af3a4c3cfc67c166f78e7a256b93b3533ec5"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODIwNzkzOnYy", "diffSide": "LEFT", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMzo1MjowOVrOINk5Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNjo1ODozM1rOINnKTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNjg4Mg==", "bodyText": "Hmmm, I think we can improve on this tangle of tasks. Currently with your changes it looks like this:\n\"build\": \"npm-run-all build:*\",\n\"build:bundles\": \"run-s bundle && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n\"build:langbundle\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n\"compileps\": \"pulp build\",\n\"bundle\": \"npm-run-all bundle:* && run-s bundleps\",\n\"bundle:languagestring\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",\n\"bundleps\": \"npm-run-all compileps && npm-run-all --parallel bundleps:*\",\n\"bundleps:uploadlist\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Uploads.UploadList --main Uploads.UploadList -o target/uploadlist.js\\\"\",\nI'd suggest something along the lines of:\n\"compile:ps\": \"pulp build\",\n\"compile:langbundle-tool\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",\n\"build:langbundle-tool\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools\",\n\"build:langbundle\": \"cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n\"build:ps-uploadlist\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Uploads.UploadList --main Uploads.UploadList -o target/uploadlist.js\\\"\",\n\"build:bundle\": \"cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n\"build\": \"npm-run-all compile:* build:*\"\nThere may be issues in the above as I've just hacked it out. But hopefully you can see what's happening there.\nAlso, if such a structure is arrived at, once the upload control is converted, you'd just remove compile:ps and build:ps-uploadlist.\nLastly, you'd want to consider putting the common path for the compiling/building/running of the language bundle tool into a config variable.", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r551106882", "createdAt": "2021-01-04T03:52:09Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -19,12 +19,13 @@\n     \"dev\": \"pulp build && cross-env-shell parcel watch --no-autoinstall --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"dev:build\": \"tsc --noEmit && run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"build\": \"npm-run-all build:*\",\n-    \"build:bundles\": \"run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n-    \"build:langbundle\": \"cross-env-shell parcel build target/genlang.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/genlang.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n+    \"build:bundles\": \"run-s bundle && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n+    \"build:langbundle\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n     \"compileps\": \"pulp build\",\n+    \"bundle\": \"npm-run-all bundle:* && run-s bundleps\",\n+    \"bundle:languagestring\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",\n     \"bundleps\": \"npm-run-all compileps && npm-run-all --parallel bundleps:*\",\n     \"bundleps:uploadlist\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Uploads.UploadList --main Uploads.UploadList -o target/uploadlist.js\\\"\",\n-    \"bundleps:langbundle\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Tools.GenLangStrings --main Tools.GenLangStrings -o target/genlang.js\\\"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e37af3a4c3cfc67c166f78e7a256b93b3533ec5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE0NDAxNA==", "bodyText": "Coming along nicely dude! \ud83d\udc4d\nLooks like you just need some config vars for target/language_bundle and target/tools.", "url": "https://github.com/openequella/openEQUELLA/pull/2632#discussion_r551144014", "createdAt": "2021-01-04T06:58:33Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -19,12 +19,13 @@\n     \"dev\": \"pulp build && cross-env-shell parcel watch --no-autoinstall --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"dev:build\": \"tsc --noEmit && run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_devjs} ${npm_package_config_parcelEntryFiles}\",\n     \"build\": \"npm-run-all build:*\",\n-    \"build:bundles\": \"run-s bundleps && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n-    \"build:langbundle\": \"cross-env-shell parcel build target/genlang.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/genlang.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n+    \"build:bundles\": \"run-s bundle && cross-env-shell parcel build --public-url=. --out-dir=${npm_package_config_dist} ${npm_package_config_parcelEntryFiles}\",\n+    \"build:langbundle\": \"cross-env-shell parcel build target/language_bundle/BuildLanguageBundle.js --no-minify --no-source-maps --target node --out-dir=target/tools && cross-env-shell \\\"node target/tools/BuildLanguageBundle.js > ${npm_package_config_buildlang}/jsbundle.json\\\"\",\n     \"compileps\": \"pulp build\",\n+    \"bundle\": \"npm-run-all bundle:* && run-s bundleps\",\n+    \"bundle:languagestring\": \"cross-env-shell tsc --types \\\"node\\\" --outDir target/language_bundle tsrc/util/BuildLanguageBundle.ts\",\n     \"bundleps\": \"npm-run-all compileps && npm-run-all --parallel bundleps:*\",\n     \"bundleps:uploadlist\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Uploads.UploadList --main Uploads.UploadList -o target/uploadlist.js\\\"\",\n-    \"bundleps:langbundle\": \"cross-env-shell \\\"purs bundle \\\"${npm_package_config_psglob}\\\" -m Tools.GenLangStrings --main Tools.GenLangStrings -o target/genlang.js\\\"\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEwNjg4Mg=="}, "originalCommit": {"oid": "6e37af3a4c3cfc67c166f78e7a256b93b3533ec5"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1642, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}