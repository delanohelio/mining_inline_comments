{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDY3OTc0", "number": 2040, "title": "Add \"Raw search\" mode to new search UI", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n\nDescription of change\n\nAdds a toggle to the search page for \"raw search\" mode.\nWhen raw search is off, search queries are de-bounced type-ahead, sent to the server side with an appended '*' wildcard\nWhen raw search is on, search queries are sent as-is, and only when you hit enter\nHelper-text to remind the user to hit Enter appears when in raw search mode\nTool-tip appears when hovering on the toggle to explain the purpose of raw search mode\nJest tests to assert that type-ahead and wildcard append happen in simple search mode\nJest test to assert that type-ahead and wildcard append do not happen in raw search mode", "createdAt": "2020-07-13T06:45:56Z", "url": "https://github.com/openequella/openEQUELLA/pull/2040", "merged": true, "mergeCommit": {"oid": "35d9136a755bf873786d71d1b5a59c93fd0ee894"}, "closed": true, "closedAt": "2020-07-14T22:59:47Z", "author": {"login": "SammyIsConfused"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0XKnEgH2gAyNDQ4MDY3OTc0OjY5ZGRlMmUyNzI5YjkzNWY0Yzc5N2I4NWM3M2IyY2I0NTM2OTRjYTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0wbASgBqjM1NDI3NDAyMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "69dde2e2729b935f4c797b85c73b2cb453694ca1", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/69dde2e2729b935f4c797b85c73b2cb453694ca1", "committedDate": "2020-07-13T01:29:33Z", "message": "Add language strings for raw search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2915e189cba7b4cb029edd51690bc8404736318e", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/2915e189cba7b4cb029edd51690bc8404736318e", "committedDate": "2020-07-13T01:29:33Z", "message": "Add the switch to the search page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3053fcaa94106a24cdb78696bcd30510043ab4c", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/a3053fcaa94106a24cdb78696bcd30510043ab4c", "committedDate": "2020-07-13T01:29:33Z", "message": "Handle raw search mode in Searchbar.tsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f48a431fef533b4375dcd455ae625f936a9feed", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/1f48a431fef533b4375dcd455ae625f936a9feed", "committedDate": "2020-07-13T03:44:08Z", "message": "Add jest tests for raw search toggle\n\nOne to assert that type-ahead and wildcard appending works in simple\nsearch mode, and one to assert that raw search queries are sent as-is and only\nafter hitting the Enter key."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc1a4d6a6de51372d7e8fb0a9927255b53d2b277", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/bc1a4d6a6de51372d7e8fb0a9927255b53d2b277", "committedDate": "2020-07-13T06:12:50Z", "message": "Merge branch 'component/new-search-page' into feature/raw_search_toggle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e2b3b4a28182460f22d2adfec27b2fb91f75a5", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/13e2b3b4a28182460f22d2adfec27b2fb91f75a5", "committedDate": "2020-07-13T06:37:24Z", "message": "use awaitAct for my tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5700cfe88f97cb8c2a6669b9a0389a2c27518306", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/5700cfe88f97cb8c2a6669b9a0389a2c27518306", "committedDate": "2020-07-13T23:51:09Z", "message": "Remove unnecessary braces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/0afd432e2e490bb7beec4ea32612e883a2f78cf5", "committedDate": "2020-07-14T00:10:17Z", "message": "Update story to include raw search mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzEyOTcx", "url": "https://github.com/openequella/openEQUELLA/pull/2040#pullrequestreview-447712971", "createdAt": "2020-07-14T00:58:57Z", "commit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDo1ODo1N1rOGxAF4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMToyOToxNlrOGxAn5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzNDkxMg==", "bodyText": "This seems to duplicate the above test.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454034912", "createdAt": "2020-07-14T00:58:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzNjMwNg==", "bodyText": "I wonder if we should start putting IDs on these controls we wish to use in tests. We're doing this a bit, but it seems fragile. Further, we also have a repetitions now with with the string on line 190.\nCould you perhaps add an ID for the raw mode switch, and push the duplicate string into a constant?", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454036306", "createdAt": "2020-07-14T01:03:58Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzODg5MQ==", "bodyText": "Again, good to put magic numbers into constants.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454038891", "createdAt": "2020-07-14T01:13:12Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");\n+    await awaitAct(() => {\n+      //turn raw search mode on, add a search query and hit enter\n+      rawModeSwitch.simulate(\"change\", { target: { checked: true } });\n+      jest.advanceTimersByTime(1000);\n+      querySearch(\"raw search test\");\n+      input.simulate(\"keyDown\", {\n+        keyCode: 13,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzOTI4MA==", "bodyText": "Being that these are mutually exclusive, we only need one.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454039280", "createdAt": "2020-07-14T01:14:34Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");\n+    await awaitAct(() => {\n+      //turn raw search mode on, add a search query and hit enter\n+      rawModeSwitch.simulate(\"change\", { target: { checked: true } });\n+      jest.advanceTimersByTime(1000);\n+      querySearch(\"raw search test\");\n+      input.simulate(\"keyDown\", {\n+        keyCode: 13,\n+      });\n+      jest.advanceTimersByTime(1000);\n+    });\n+\n+    //assert that the simple search wildcard was not appended\n+    expect(searchPromise).not.toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"raw search test*\",\n+    });\n+    //assert that the query was passed in as-is\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"raw search test\",\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA0MzYyMA==", "bodyText": "It'd be good to have this small bit of repeated logic centralised - seeing it's rather key to expected functionality. If there was a function like:\nconst callOnChange = (query: string) =>\n  onChange(query + (rawSearchMode ? \"\" : \"*\"));\n... then you could simply call that function in this case block, so:\ncase ENTER_KEY_CODE:\n   event.preventDefault();\n  callOnChange(query);\n... and obviously you'd use that same function up in your debounce call.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454043620", "createdAt": "2020-07-14T01:29:16Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -37,30 +46,44 @@ interface SearchBarProps {\n  * This component does not handle the API query itself,\n  * that should be done in the parent component with the onChange callback.\n  */\n-export default function SearchBar({ onChange }: SearchBarProps) {\n+export default function SearchBar({ onChange, rawSearchMode }: SearchBarProps) {\n   const [query, setQuery] = React.useState<string>(\"\");\n-\n+  const strings = languageStrings.searchpage;\n   /**\n    * uses lodash to debounce the search query by half a second\n    */\n   const delayedQuery = useCallback(\n-    debounce((query: string) => onChange(query), 500),\n+    debounce((query: string) => onChange(query + \"*\"), 500),\n     [onChange]\n   );\n \n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n+    switch (event.keyCode) {\n+      case ESCAPE_KEY_CODE:\n+        event.preventDefault();\n+        handleQueryChange(\"\");\n+        break;\n+      case ENTER_KEY_CODE:\n+        event.preventDefault();\n+        if (rawSearchMode) {\n+          onChange(query);\n+        } else {\n+          onChange(query + \"*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a55cbda0aff1b0121df2b81c4b031349e670235b", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/a55cbda0aff1b0121df2b81c4b031349e670235b", "committedDate": "2020-07-14T02:08:53Z", "message": "Add IDs for testing and centralise callOnChange"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3668e9bacee7219ad9c9fd50c8c2a886a52d54", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/3d3668e9bacee7219ad9c9fd50c8c2a886a52d54", "committedDate": "2020-07-14T02:09:41Z", "message": "Make IDs for tests constants and remove duplicate test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzIzMjU2", "url": "https://github.com/openequella/openEQUELLA/pull/2040#pullrequestreview-447723256", "createdAt": "2020-07-14T01:32:17Z", "commit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMTozMjoxN1rOGxArWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMTo1MzoyM1rOGxBCmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA0NDUwNQ==", "bodyText": "I feel this expect is not needed because the expect below can ensure the query does not get a * appended.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454044505", "createdAt": "2020-07-14T01:32:17Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");\n+    await awaitAct(() => {\n+      //turn raw search mode on, add a search query and hit enter\n+      rawModeSwitch.simulate(\"change\", { target: { checked: true } });\n+      jest.advanceTimersByTime(1000);\n+      querySearch(\"raw search test\");\n+      input.simulate(\"keyDown\", {\n+        keyCode: 13,\n+      });\n+      jest.advanceTimersByTime(1000);\n+    });\n+\n+    //assert that the simple search wildcard was not appended\n+    expect(searchPromise).not.toHaveBeenLastCalledWith({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA0NTA0Mg==", "bodyText": "I would expect function SearchModule.searchItems rather than mocked promise searchPromise to have been called here.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454045042", "createdAt": "2020-07-14T01:34:20Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");\n+    await awaitAct(() => {\n+      //turn raw search mode on, add a search query and hit enter\n+      rawModeSwitch.simulate(\"change\", { target: { checked: true } });\n+      jest.advanceTimersByTime(1000);\n+      querySearch(\"raw search test\");\n+      input.simulate(\"keyDown\", {\n+        keyCode: 13,\n+      });\n+      jest.advanceTimersByTime(1000);\n+    });\n+\n+    //assert that the simple search wildcard was not appended\n+    expect(searchPromise).not.toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"raw search test*\",\n+    });\n+    //assert that the query was passed in as-is\n+    expect(searchPromise).toHaveBeenLastCalledWith({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA0NTk5Mw==", "bodyText": "This test case seems to be duplicated because debounce and append an * when not in raw search mode is the default behaviour so the test above already covers this.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454045993", "createdAt": "2020-07-14T01:37:32Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA0NjMzOQ==", "bodyText": "Interestingly, this test can pass when I ran the whole test, but failed if I only ran it.\nAlso, because we are not using the fake timer for this test, I doubt if advanceTimersByTime really works.\nIf raw search disregards debounce, we probably do not worry about timer.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454046339", "createdAt": "2020-07-14T01:38:54Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -177,4 +177,43 @@ describe(\"<SearchPage/>\", () => {\n     component.update();\n     expect(component.find(CircularProgress)).toHaveLength(0);\n   });\n+\n+  it(\"should debounce and append an * when not in raw search mode\", async () => {\n+    await querySearch(\"new query\");\n+    expect(searchPromise).toHaveBeenLastCalledWith({\n+      ...defaultSearchOptions,\n+      query: \"new query*\",\n+    });\n+  });\n+\n+  it(\"should not debounce and send query as-is when in raw search mode\", async () => {\n+    const input = component.find(\"input.MuiInputBase-input\");\n+    const rawModeSwitch = component.find(\"input[type='checkbox']\");\n+    await awaitAct(() => {\n+      //turn raw search mode on, add a search query and hit enter\n+      rawModeSwitch.simulate(\"change\", { target: { checked: true } });\n+      jest.advanceTimersByTime(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1MDQ1OQ==", "bodyText": "I wonder if onChange will be called twice. If I am not in raw search mode and I press enter, onChange is called, and then after 500ms the debounced one is triggered.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454050459", "createdAt": "2020-07-14T01:53:23Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -37,30 +46,44 @@ interface SearchBarProps {\n  * This component does not handle the API query itself,\n  * that should be done in the parent component with the onChange callback.\n  */\n-export default function SearchBar({ onChange }: SearchBarProps) {\n+export default function SearchBar({ onChange, rawSearchMode }: SearchBarProps) {\n   const [query, setQuery] = React.useState<string>(\"\");\n-\n+  const strings = languageStrings.searchpage;\n   /**\n    * uses lodash to debounce the search query by half a second\n    */\n   const delayedQuery = useCallback(\n-    debounce((query: string) => onChange(query), 500),\n+    debounce((query: string) => onChange(query + \"*\"), 500),\n     [onChange]\n   );\n \n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n+    switch (event.keyCode) {\n+      case ESCAPE_KEY_CODE:\n+        event.preventDefault();\n+        handleQueryChange(\"\");\n+        break;\n+      case ENTER_KEY_CODE:\n+        event.preventDefault();\n+        if (rawSearchMode) {\n+          onChange(query);\n+        } else {\n+          onChange(query + \"*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afd432e2e490bb7beec4ea32612e883a2f78cf5"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/e28791b40cea86eab8152883389a4d219d8f3078", "committedDate": "2020-07-14T02:36:18Z", "message": "Put useFakeTimers in the beforeEach and refer to searchItems in tests\n\nAs opposed to the promise."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Nzk2MzYx", "url": "https://github.com/openequella/openEQUELLA/pull/2040#pullrequestreview-447796361", "createdAt": "2020-07-14T05:26:37Z", "commit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNToyNjozN1rOGxEpwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNToyNjozN1rOGxEpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwOTYzNA==", "bodyText": "We don't really need this for each test. Only tests in relation to debounce search need it,", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454109634", "createdAt": "2020-07-14T05:26:37Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -56,6 +56,7 @@ describe(\"<SearchPage/>\", () => {\n   let component: ReactWrapper<any, Readonly<{}>, React.Component<{}, {}, any>>;\n \n   beforeEach(async () => {\n+    jest.useFakeTimers(\"modern\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99640bc66f276b8711765a50562668450c70cf9a", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/99640bc66f276b8711765a50562668450c70cf9a", "committedDate": "2020-07-14T06:34:00Z", "message": "Refactor the raw search mode test so that it doesn't need timeouts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODE0MDA3", "url": "https://github.com/openequella/openEQUELLA/pull/2040#pullrequestreview-447814007", "createdAt": "2020-07-14T06:12:11Z", "commit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoxMjoxMlrOGxFlLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoxMjo0NVrOGxFmIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNDg0NQ==", "bodyText": "Thanks for the tidy-up. Makes it nice and clear. \ud83d\udc4d\nBut I do now wonder if this should simply be calling delayedQuery() so as to avoid someone typing and then pressing enter resulting in two queries to the server. As each search results in an entry into the Audit Log in the DB, pressing enter could just spam the audit log.\nPlus if this is then done, things can be further changed, as the body of callOnChange could just be placed in delayedQuery.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454124845", "createdAt": "2020-07-14T06:12:12Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -37,30 +46,40 @@ interface SearchBarProps {\n  * This component does not handle the API query itself,\n  * that should be done in the parent component with the onChange callback.\n  */\n-export default function SearchBar({ onChange }: SearchBarProps) {\n+export default function SearchBar({ onChange, rawSearchMode }: SearchBarProps) {\n   const [query, setQuery] = React.useState<string>(\"\");\n-\n+  const strings = languageStrings.searchpage;\n+  const callOnChange = (query: string) =>\n+    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n   /**\n    * uses lodash to debounce the search query by half a second\n    */\n-  const delayedQuery = useCallback(\n-    debounce((query: string) => onChange(query), 500),\n-    [onChange]\n-  );\n+  const delayedQuery = useCallback(debounce(callOnChange, 500), [onChange]);\n \n+  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n+    switch (event.keyCode) {\n+      case ESCAPE_KEY_CODE:\n+        event.preventDefault();\n+        handleQueryChange(\"\");\n+        break;\n+      case ENTER_KEY_CODE:\n+        event.preventDefault();\n+        callOnChange(query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNTA5MA==", "bodyText": "As an aside, this name should probably be debouncedQuery. There is no delay.", "url": "https://github.com/openequella/openEQUELLA/pull/2040#discussion_r454125090", "createdAt": "2020-07-14T06:12:45Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -37,30 +46,40 @@ interface SearchBarProps {\n  * This component does not handle the API query itself,\n  * that should be done in the parent component with the onChange callback.\n  */\n-export default function SearchBar({ onChange }: SearchBarProps) {\n+export default function SearchBar({ onChange, rawSearchMode }: SearchBarProps) {\n   const [query, setQuery] = React.useState<string>(\"\");\n-\n+  const strings = languageStrings.searchpage;\n+  const callOnChange = (query: string) =>\n+    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n   /**\n    * uses lodash to debounce the search query by half a second\n    */\n-  const delayedQuery = useCallback(\n-    debounce((query: string) => onChange(query), 500),\n-    [onChange]\n-  );\n+  const delayedQuery = useCallback(debounce(callOnChange, 500), [onChange]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e28791b40cea86eab8152883389a4d219d8f3078"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f1fb6e4fd064ddc5d9a5af993a323b6da82d35b", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/2f1fb6e4fd064ddc5d9a5af993a323b6da82d35b", "committedDate": "2020-07-14T06:39:14Z", "message": "Put useFakeTimers back into querySearch method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f77ec6ce9c275dfb6a0e9b21708ac6130098dd3", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/2f77ec6ce9c275dfb6a0e9b21708ac6130098dd3", "committedDate": "2020-07-14T06:51:30Z", "message": "Debounce Enter key presses as well as typeahead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a50a99bb83d5d1f542626176871cc1c5cb29869", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/9a50a99bb83d5d1f542626176871cc1c5cb29869", "committedDate": "2020-07-14T06:53:36Z", "message": "Update test to account for change to Enter key debounce"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd00f94f13e71092fedd3f4e137f4e1be9387376", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/cd00f94f13e71092fedd3f4e137f4e1be9387376", "committedDate": "2020-07-14T06:52:43Z", "message": "Debounce Enter key presses as well as typeahead"}, "afterCommit": {"oid": "9a50a99bb83d5d1f542626176871cc1c5cb29869", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/9a50a99bb83d5d1f542626176871cc1c5cb29869", "committedDate": "2020-07-14T06:53:36Z", "message": "Update test to account for change to Enter key debounce"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}