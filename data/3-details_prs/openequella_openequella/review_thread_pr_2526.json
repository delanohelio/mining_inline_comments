{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNzgyNTIx", "number": 2526, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoxODo1NVrOE7TO8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODo1NFrOE7TiDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjE2NTYxOnYy", "diffSide": "RIGHT", "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoxODo1NVrOH23bFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoxODo1NVrOH23bFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5MzIwNA==", "bodyText": "This will make for some rather verbose logs, and is really only relevant for debugging issues so\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOGGER.info(\"maxDurationInSeconds not set. Using a regular non-timed process.\");\n          \n          \n            \n                  LOGGER.debug(\"maxDurationInSeconds not set. Using a regular non-timed process.\");", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527293204", "createdAt": "2020-11-20T00:18:55Z", "author": {"login": "edalex-ian"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -114,6 +115,38 @@ public static ExecResult exec(String[] cmdarray, Map<String, String> additionalE\n     }\n   }\n \n+  public static ExecResult execWithTimeLimit(long maxDurationInSeconds, String[] options) {\n+    if (maxDurationInSeconds < 1L) {\n+      LOGGER.info(\"maxDurationInSeconds not set. Using a regular non-timed process.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjE3MjU0OnYy", "diffSide": "RIGHT", "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyMDoxM1rOH23fZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyMDoxM1rOH23fZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5NDMwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOGGER.info(\"Started timed process\");\n          \n          \n            \n                  LOGGER.debug(\"Started timed process\");", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527294309", "createdAt": "2020-11-20T00:20:13Z", "author": {"login": "edalex-ian"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -114,6 +115,38 @@ public static ExecResult exec(String[] cmdarray, Map<String, String> additionalE\n     }\n   }\n \n+  public static ExecResult execWithTimeLimit(long maxDurationInSeconds, String[] options) {\n+    if (maxDurationInSeconds < 1L) {\n+      LOGGER.info(\"maxDurationInSeconds not set. Using a regular non-timed process.\");\n+      return exec(options, null, null);\n+    }\n+    return execWithTimeLimit(options, null, null, maxDurationInSeconds);\n+  }\n+\n+  public static ExecResult execWithTimeLimit(\n+      String[] cmdarray, Map<String, String> additionalEnv, File dir, long durationInSeconds) {\n+    try {\n+      final Triple<Process, StreamReader, StreamReader> cp =\n+          createProcess(cmdarray, additionalEnv, dir);\n+      LOGGER.info(\"Started timed process\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjE3NDEzOnYy", "diffSide": "RIGHT", "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyMDozMVrOH23ghw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyMDozMVrOH23ghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5NDU5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOGGER.info(\"Timed process finished\");\n          \n          \n            \n                  LOGGER.debug(\"Timed process finished\");", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527294599", "createdAt": "2020-11-20T00:20:31Z", "author": {"login": "edalex-ian"}, "path": "Platform/Plugins/com.tle.platform.common/src/com/tle/common/util/ExecUtils.java", "diffHunk": "@@ -114,6 +115,38 @@ public static ExecResult exec(String[] cmdarray, Map<String, String> additionalE\n     }\n   }\n \n+  public static ExecResult execWithTimeLimit(long maxDurationInSeconds, String[] options) {\n+    if (maxDurationInSeconds < 1L) {\n+      LOGGER.info(\"maxDurationInSeconds not set. Using a regular non-timed process.\");\n+      return exec(options, null, null);\n+    }\n+    return execWithTimeLimit(options, null, null, maxDurationInSeconds);\n+  }\n+\n+  public static ExecResult execWithTimeLimit(\n+      String[] cmdarray, Map<String, String> additionalEnv, File dir, long durationInSeconds) {\n+    try {\n+      final Triple<Process, StreamReader, StreamReader> cp =\n+          createProcess(cmdarray, additionalEnv, dir);\n+      LOGGER.info(\"Started timed process\");\n+      final Process proc = cp.getFirst();\n+      final StreamReader stdOut = cp.getSecond();\n+      final StreamReader stdErr = cp.getThird();\n+      proc.waitFor(durationInSeconds, TimeUnit.SECONDS);\n+      if (!stdErr.isFinished() || !stdOut.isFinished()) {\n+        throw new InterruptedException();\n+      }\n+      LOGGER.info(\"Timed process finished\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjIwMDA3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyNTo1NFrOH23yPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNDoxMjo1OVrOH283Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5OTEzMw==", "bodyText": "Doesn't need to be this specific. Arguably any thumbnail process going rouge/forever should be hit on the head. I think the check should be removed, and the configuration property made more generic - e.g. thumbnailing.timeout.\nThat in turn raises the question as to whether all thumbnailing goes through here. And if not, should we really do the circuit breaker higher up.", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527299133", "createdAt": "2020-11-20T00:25:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "diffHunk": "@@ -204,12 +209,34 @@ public Dimension getImageDimensions(FileHandle handle, String filename) throws I\n \n   @Override\n   public Dimension getImageDimensions(File image) throws IOException {\n-    ExecResult result =\n-        ExecUtils.exec(\n-            identifyExe.getAbsolutePath(),\n-            \"-format\",\n-            \"%wx%h\",\n-            new String(image.getAbsolutePath().getBytes(\"UTF-8\"), \"UTF-8\"));\n+    ExecResult result;\n+    if (image.getAbsolutePath().toLowerCase().contains(\".pdf\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMyNTg1NQ==", "bodyText": "All of the ThumbnailGenerators (ImageThumbnailGenerator, PDFThumbnailGenerator, VideoThumbnailGenerator) pass through here. There is one exception - in the ImageThumbnailGenerator it checks if the file is a gif. If it is, it goes straight to conversion. All others hit here first.\nI could resolve this in a few different ways:\n\nSurround the conversion step with a time limit too\nMove this up to generateThumbnailAdvanced - all thumbnailing operations use this. However - this would work quite a bit differently as it's not an external process.\nMake the GIF check run getImageDimensions too\nRefactor this validation check out into it's own operation that gets run before all else in thumbnailing. Essentially running the identify call again but this time right at the start, doing nothing with the output - just as a validation step. And then operate as normal. While this would add a new load, if the file is valid this will take a split second and neglible processing power. If it isn't, it will attempt up until the time limit and then error out.", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527325855", "createdAt": "2020-11-20T00:56:32Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "diffHunk": "@@ -204,12 +209,34 @@ public Dimension getImageDimensions(FileHandle handle, String filename) throws I\n \n   @Override\n   public Dimension getImageDimensions(File image) throws IOException {\n-    ExecResult result =\n-        ExecUtils.exec(\n-            identifyExe.getAbsolutePath(),\n-            \"-format\",\n-            \"%wx%h\",\n-            new String(image.getAbsolutePath().getBytes(\"UTF-8\"), \"UTF-8\"));\n+    ExecResult result;\n+    if (image.getAbsolutePath().toLowerCase().contains(\".pdf\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5OTEzMw=="}, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM4MjM3MA==", "bodyText": "Went with the option to refactor this into it's own validation step.", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527382370", "createdAt": "2020-11-20T04:12:59Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "diffHunk": "@@ -204,12 +209,34 @@ public Dimension getImageDimensions(FileHandle handle, String filename) throws I\n \n   @Override\n   public Dimension getImageDimensions(File image) throws IOException {\n-    ExecResult result =\n-        ExecUtils.exec(\n-            identifyExe.getAbsolutePath(),\n-            \"-format\",\n-            \"%wx%h\",\n-            new String(image.getAbsolutePath().getBytes(\"UTF-8\"), \"UTF-8\"));\n+    ExecResult result;\n+    if (image.getAbsolutePath().toLowerCase().contains(\".pdf\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI5OTEzMw=="}, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjIxMDcwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODowMlrOH235Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODowMlrOH235Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMwMDk1OQ==", "bodyText": "This duplicates the above. As per above, this branch may be removed. But if not, this should be centralised in a shared String[] as used above.", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527300959", "createdAt": "2020-11-20T00:28:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/ImageMagickServiceImpl.java", "diffHunk": "@@ -204,12 +209,34 @@ public Dimension getImageDimensions(FileHandle handle, String filename) throws I\n \n   @Override\n   public Dimension getImageDimensions(File image) throws IOException {\n-    ExecResult result =\n-        ExecUtils.exec(\n-            identifyExe.getAbsolutePath(),\n-            \"-format\",\n-            \"%wx%h\",\n-            new String(image.getAbsolutePath().getBytes(\"UTF-8\"), \"UTF-8\"));\n+    ExecResult result;\n+    if (image.getAbsolutePath().toLowerCase().contains(\".pdf\")) {\n+      // use a timed process for pdfs so that thumbnailing\n+      // for large or badly generated PDFs doesn't attempt indefinitely.\n+      // Set in plugins/com.tle.core.imagemagick/config.properties\n+      // imageMagick.seconds.before.cancel.pdf.thumbnailing as an integer.\n+      // if not set, the default is 20 seconds. If set to 0, uses a regular non-timed process.\n+      result =\n+          ExecUtils.execWithTimeLimit(\n+              pdfThumbnailTimeLimit,\n+              new String[] {\n+                identifyExe.getAbsolutePath(),\n+                \"-format\",\n+                \"%wx%h\",\n+                new String(\n+                    image.getAbsolutePath().getBytes(StandardCharsets.UTF_8),\n+                    StandardCharsets.UTF_8)\n+              });\n+    } else {\n+      result =\n+          ExecUtils.exec(\n+              identifyExe.getAbsolutePath(),\n+              \"-format\",\n+              \"%wx%h\",\n+              new String(\n+                  image.getAbsolutePath().getBytes(StandardCharsets.UTF_8),\n+                  StandardCharsets.UTF_8));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjIxNDUyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/guice/ImageMagickModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODo1NFrOH238Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDoyODo1NFrOH238Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMwMTY4Mg==", "bodyText": "This should also be added to the example optional config properties file as way of documentation.", "url": "https://github.com/openequella/openEQUELLA/pull/2526#discussion_r527301682", "createdAt": "2020-11-20T00:28:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/imagemagick/guice/ImageMagickModule.java", "diffHunk": "@@ -32,5 +32,6 @@ protected String getFilename() {\n   @Override\n   protected void configure() {\n     bindProp(\"imageMagick.path\");\n+    bindInt(\"imageMagick.seconds.before.cancel.pdf.thumbnailing\", 20);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc7986e05c68f7fd12882572829bd038c8935f45"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1675, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}