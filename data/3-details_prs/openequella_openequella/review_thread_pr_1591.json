{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NzQ4NjA4", "number": 1591, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo1MDoxMlrODs1Dhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjo1NTowNlrODtURHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzMzMTkwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo1MDoxMlrOF95rQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo1MDoxMlrOF95rQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MjQxNg==", "bodyText": "previously languageStrings was cast to LanguageStrings to avoid\nElement implicitly has an 'any' type because expression of type 'string' can't be used to index type\n\non line 26, but this cast caused issues elsewhere in the code.\nTo avoid the cast on languageStrings, refactored the iteration to narrow the type of key from string to keyof typeof languageString so TypeScript knows it can be safely used as an index.", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400452416", "createdAt": "2020-03-30T19:50:12Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "diffHunk": "@@ -70,12 +70,14 @@ export function prepLangStrings(\n }\n \n export function initStrings() {\n-  for (const key in languageStrings) {\n+  for (const key of Object.keys(languageStrings) as Array<\n+    keyof typeof languageStrings\n+  >) {\n     prepLangStrings(key, languageStrings[key]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d05c138ad61def1f3cba7364efa1abf6c026f10"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDIzODE0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTo0NTozNlrOF-CWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMzo0Nzo1OFrOF-ESvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQ5NA==", "bodyText": "Elsewhere the pattern\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nis being used, would it make sense to use that here as well?\nOr to convert the other pieces of code to use the inline window as {something} approach?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400594494", "createdAt": "2020-03-31T01:45:36Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -176,7 +176,7 @@ export const LegacyContent = React.memo(function LegacyContent({\n   }\n \n   React.useEffect(() => {\n-    window[\"EQ\"] = {\n+    (window as { [key: string]: any })[\"EQ\"] = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17aaae950c77cd912e8d043239f6f9d46353ff3b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwNjc4OQ==", "bodyText": "Hi Christian, I don't quite understand how to implement this in LegacyContent.tsx. Can you give me a bit more details?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400606789", "createdAt": "2020-03-31T02:32:46Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -176,7 +176,7 @@ export const LegacyContent = React.memo(function LegacyContent({\n   }\n \n   React.useEffect(() => {\n-    window[\"EQ\"] = {\n+    (window as { [key: string]: any })[\"EQ\"] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQ5NA=="}, "originalCommit": {"oid": "17aaae950c77cd912e8d043239f6f9d46353ff3b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMzI2OA==", "bodyText": "OK I guess I fixed this.", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400613268", "createdAt": "2020-03-31T02:56:59Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -176,7 +176,7 @@ export const LegacyContent = React.memo(function LegacyContent({\n   }\n \n   React.useEffect(() => {\n-    window[\"EQ\"] = {\n+    (window as { [key: string]: any })[\"EQ\"] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQ5NA=="}, "originalCommit": {"oid": "17aaae950c77cd912e8d043239f6f9d46353ff3b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYyNjM2Nw==", "bodyText": "Here it would look something like\ndeclare global {\n  interface Window {\n    EQ: any\n  }\n}\nor even better specify the types being attached\ndeclare global {\n  interface Window {\n    EQ: {\n      event: (command: string) => boolean,\n      eventnv: (command: string) => boolean,\n      // ... etc\n    }\n}", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400626367", "createdAt": "2020-03-31T03:47:58Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -176,7 +176,7 @@ export const LegacyContent = React.memo(function LegacyContent({\n   }\n \n   React.useEffect(() => {\n-    window[\"EQ\"] = {\n+    (window as { [key: string]: any })[\"EQ\"] = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQ5NA=="}, "originalCommit": {"oid": "17aaae950c77cd912e8d043239f6f9d46353ff3b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDI0MTQ2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/entity/index.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTo0NzozOVrOF-CYWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjoyNjoxN1rOF-C_ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NTAzMw==", "bodyText": "Is this an any?\nWhen validationErrors is returned, it is given the type IDictionary<string>, could that be used here as well?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400595033", "createdAt": "2020-03-31T01:47:39Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/entity/index.ts", "diffHunk": "@@ -79,7 +79,7 @@ export interface EntityState<E extends Entity> extends PartialEntityState<E> {\n }\n \n function baseValidate<E extends Entity>(entity: E): IDictionary<string> {\n-  const validationErrors = {};\n+  const validationErrors: any = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368555b9d520737b09719cbd27886d85cd4f8914"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwNTEyMw==", "bodyText": "Fixed.", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400605123", "createdAt": "2020-03-31T02:26:17Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/entity/index.ts", "diffHunk": "@@ -79,7 +79,7 @@ export interface EntityState<E extends Entity> extends PartialEntityState<E> {\n }\n \n function baseValidate<E extends Entity>(entity: E): IDictionary<string> {\n-  const validationErrors = {};\n+  const validationErrors: any = {};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NTAzMw=="}, "originalCommit": {"oid": "368555b9d520737b09719cbd27886d85cd4f8914"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDI0NTAyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTo0OTo0MFrOF-Cagg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMzo0ODozNlrOF-ETUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NTU4Ng==", "bodyText": "Is the explicit <HTMLScriptElement> still needed when the initializer is new HTMLScriptElement()?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400595586", "createdAt": "2020-03-31T01:49:40Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -306,30 +306,33 @@ function loadMissingScripts(_scripts: string[]) {\n     const doc = window.document;\n     const head = doc.getElementsByTagName(\"head\")[0];\n     const scriptTags = doc.getElementsByTagName(\"script\");\n-    const scriptSrcs = {};\n+    const scriptSrcs: { [index: string]: boolean } = {};\n     for (let i = 0; i < scriptTags.length; i++) {\n       const scriptTag = scriptTags[i];\n       if (scriptTag.src) {\n         scriptSrcs[scriptTag.src] = true;\n       }\n     }\n-    const lastScript = scripts.reduce((lastScript, scriptUrl) => {\n-      if (scriptSrcs[scriptUrl]) {\n-        return lastScript;\n-      } else {\n-        const newScript = doc.createElement(\"script\");\n-        newScript.src = scriptUrl;\n-        newScript.async = false;\n-        head.appendChild(newScript);\n-        return newScript;\n-      }\n-    }, null);\n+    const lastScript = scripts.reduce<HTMLScriptElement>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368555b9d520737b09719cbd27886d85cd4f8914"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYyNjUxNQ==", "bodyText": "I'll take that as it is needed?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400626515", "createdAt": "2020-03-31T03:48:36Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -306,30 +306,33 @@ function loadMissingScripts(_scripts: string[]) {\n     const doc = window.document;\n     const head = doc.getElementsByTagName(\"head\")[0];\n     const scriptTags = doc.getElementsByTagName(\"script\");\n-    const scriptSrcs = {};\n+    const scriptSrcs: { [index: string]: boolean } = {};\n     for (let i = 0; i < scriptTags.length; i++) {\n       const scriptTag = scriptTags[i];\n       if (scriptTag.src) {\n         scriptSrcs[scriptTag.src] = true;\n       }\n     }\n-    const lastScript = scripts.reduce((lastScript, scriptUrl) => {\n-      if (scriptSrcs[scriptUrl]) {\n-        return lastScript;\n-      } else {\n-        const newScript = doc.createElement(\"script\");\n-        newScript.src = scriptUrl;\n-        newScript.async = false;\n-        head.appendChild(newScript);\n-        return newScript;\n-      }\n-    }, null);\n+    const lastScript = scripts.reduce<HTMLScriptElement>(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NTU4Ng=="}, "originalCommit": {"oid": "368555b9d520737b09719cbd27886d85cd4f8914"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDQ1MjUyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMzo1MjowMVrOF-EXCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMTo0MlrOF-aqbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYyNzQ2Nw==", "bodyText": "Is current never null as the type implies? If so, could the null check on 265 be removed?\nIf not would current be HTMLLinkElement | null?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400627467", "createdAt": "2020-03-31T03:52:01Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -259,12 +260,12 @@ function updateStylesheets(\n   const doc = window.document;\n   const insertPoint = doc.getElementById(\"_dynamicInsert\")!;\n   const head = doc.getElementsByTagName(\"head\")[0];\n-  let current = insertPoint.previousElementSibling;\n-  const existingSheets = {};\n+  let current = insertPoint.previousElementSibling as HTMLLinkElement;\n+  const existingSheets: { [index: string]: HTMLLinkElement } = {};\n \n   while (current != null && current.tagName == \"LINK\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06296f91627500d3bc52b1411fa3719be93bb5b5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0MDEzNA==", "bodyText": "previousElementSibling can be null. So I wonder if we can remove  as HTMLLinkElement on 263 and add && current instanceof HTMLLinkElement on 265?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400640134", "createdAt": "2020-03-31T04:44:06Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -259,12 +260,12 @@ function updateStylesheets(\n   const doc = window.document;\n   const insertPoint = doc.getElementById(\"_dynamicInsert\")!;\n   const head = doc.getElementsByTagName(\"head\")[0];\n-  let current = insertPoint.previousElementSibling;\n-  const existingSheets = {};\n+  let current = insertPoint.previousElementSibling as HTMLLinkElement;\n+  const existingSheets: { [index: string]: HTMLLinkElement } = {};\n \n   while (current != null && current.tagName == \"LINK\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYyNzQ2Nw=="}, "originalCommit": {"oid": "06296f91627500d3bc52b1411fa3719be93bb5b5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk5Mjg3OQ==", "bodyText": "Yep, using instanceof would be even better", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r400992879", "createdAt": "2020-03-31T15:11:42Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/legacycontent/LegacyContent.tsx", "diffHunk": "@@ -259,12 +260,12 @@ function updateStylesheets(\n   const doc = window.document;\n   const insertPoint = doc.getElementById(\"_dynamicInsert\")!;\n   const head = doc.getElementsByTagName(\"head\")[0];\n-  let current = insertPoint.previousElementSibling;\n-  const existingSheets = {};\n+  let current = insertPoint.previousElementSibling as HTMLLinkElement;\n+  const existingSheets: { [index: string]: HTMLLinkElement } = {};\n \n   while (current != null && current.tagName == \"LINK\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYyNzQ2Nw=="}, "originalCommit": {"oid": "06296f91627500d3bc52b1411fa3719be93bb5b5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODQxMDA4OnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjozOToxMVrOF-qwhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMzo0NToyNlrOF-sD6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NjU4MQ==", "bodyText": "Does this order look a little bit better? \n    - npm install-ci\n    - npm run check       \n    - cd Source/Plugins/Core/com.equella.core/js\n    - npm install-ci\n\nMay I ask why we run npm install-ci in  Source/Plugins/Core/com.equella.core/js at this stage?", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r401256581", "createdAt": "2020-03-31T22:39:11Z", "author": {"login": "PenghaiZhang"}, "path": ".travis.yml", "diffHunk": "@@ -75,7 +75,11 @@ jobs:\n   include:\n     - stage: build and check\n       script:\n-        - npm install && npm run check\n+        - cd Source/Plugins/Core/com.equella.core/js\n+        - npm install-ci\n+        - cd ../../../../..\n+        - npm install-ci\n+        - npm run check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab1fec29f52f8675d40f85e2d324c71403b857"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3NjE3Mw==", "bodyText": "TypeScript is part of npm run check at this point.\nFor the type checks to pass, all the @types repos need to be installed in the Source/Plugins/Core/com.equella.core/js folder before npm run check happens, otherwise all the types coming from imports will fail.\n@edalex-ian had suggested moving the type check into the build script of Source/Plugins/Core/com.equella.core/js/package.json, which could be another solution.\nI haven't had a chance to look into that refactor yet.", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r401276173", "createdAt": "2020-03-31T23:39:45Z", "author": {"login": "ChristianMurphy"}, "path": ".travis.yml", "diffHunk": "@@ -75,7 +75,11 @@ jobs:\n   include:\n     - stage: build and check\n       script:\n-        - npm install && npm run check\n+        - cd Source/Plugins/Core/com.equella.core/js\n+        - npm install-ci\n+        - cd ../../../../..\n+        - npm install-ci\n+        - npm run check", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NjU4MQ=="}, "originalCommit": {"oid": "1eab1fec29f52f8675d40f85e2d324c71403b857"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3NzkzMQ==", "bodyText": "Ah I see.Thanks for explanation!", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r401277931", "createdAt": "2020-03-31T23:45:26Z", "author": {"login": "PenghaiZhang"}, "path": ".travis.yml", "diffHunk": "@@ -75,7 +75,11 @@ jobs:\n   include:\n     - stage: build and check\n       script:\n-        - npm install && npm run check\n+        - cd Source/Plugins/Core/com.equella.core/js\n+        - npm install-ci\n+        - cd ../../../../..\n+        - npm install-ci\n+        - npm run check", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NjU4MQ=="}, "originalCommit": {"oid": "1eab1fec29f52f8675d40f85e2d324c71403b857"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODQ0NTcyOnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMjo1NTowNlrOF-rGUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMzoyMzo1NlrOF-rqag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2MjE2Mw==", "bodyText": "Does cd ../../../../.. work as same as cd - here?\nI can't remember why we used to have cd - here.  As each job runs in a fresh VM, I feel it's unnecessary to change the directory after  npm install-ci-test. But I may be wrong.", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r401262163", "createdAt": "2020-03-31T22:55:06Z", "author": {"login": "PenghaiZhang"}, "path": ".travis.yml", "diffHunk": "@@ -105,7 +109,10 @@ jobs:\n       script: sbt test\n       name: Unit test\n     - stage: build and check\n-      script: cd Source/Plugins/Core/com.equella.core/js && npm install && npm test; cd -\n+      script:\n+        - cd Source/Plugins/Core/com.equella.core/js\n+        - npm install-ci-test\n+        - cd ../../../../..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab1fec29f52f8675d40f85e2d324c71403b857"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI3MTQwMg==", "bodyText": "not sure, reverted to use cd -", "url": "https://github.com/openequella/openEQUELLA/pull/1591#discussion_r401271402", "createdAt": "2020-03-31T23:23:56Z", "author": {"login": "ChristianMurphy"}, "path": ".travis.yml", "diffHunk": "@@ -105,7 +109,10 @@ jobs:\n       script: sbt test\n       name: Unit test\n     - stage: build and check\n-      script: cd Source/Plugins/Core/com.equella.core/js && npm install && npm test; cd -\n+      script:\n+        - cd Source/Plugins/Core/com.equella.core/js\n+        - npm install-ci-test\n+        - cd ../../../../..", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2MjE2Mw=="}, "originalCommit": {"oid": "1eab1fec29f52f8675d40f85e2d324c71403b857"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1526, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}