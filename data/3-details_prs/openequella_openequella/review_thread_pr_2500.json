{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MjA2MDAy", "number": 2500, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo1NFrOE3Dn1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1Njo0MlrOE3hXcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY2NDg2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo1NFrOHwLo3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0OTo1NFrOHwLo3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDM4MA==", "bodyText": "In selectOrAdd mode, the Integration ID is null, according to my research. So I make it optional.", "url": "https://github.com/openequella/openEQUELLA/pull/2500#discussion_r520284380", "createdAt": "2020-11-10T04:49:54Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -20,11 +20,18 @@ import * as ReactDOM from \"react-dom\";\n import { initStrings } from \"../util/langstrings\";\n import \"../util/polyfill\";\n \n+interface SelectionSessionInfo {\n+  stateId: string;\n+  integId?: string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "958629c95ad33549547b3879e77e1d52f32f629b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NjUwNzEyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1MToxNFrOHw6fAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1MToxNFrOHw6fAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA1MTkwNA==", "bodyText": "Would it be easy to add some TSDoc, or would that be a matter of digging further into the internals of Selection Sessions?", "url": "https://github.com/openequella/openEQUELLA/pull/2500#discussion_r521051904", "createdAt": "2020-11-11T02:51:14Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -20,11 +20,18 @@ import * as ReactDOM from \"react-dom\";\n import { initStrings } from \"../util/langstrings\";\n import \"../util/polyfill\";\n \n+interface SelectionSessionInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "199709d20235830ee7e21bf49cc0812a9a14f7ff"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NjUzODA4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/template/RenderNewTemplate.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1Njo0MlrOHw6zxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1Njo0MlrOHw6zxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA1NzIyMw==", "bodyText": "I prefer this to the normal use of ObjectExpression vargs. Makes me wonder if we can do anything more declarative, but good for now. \ud83d\udc4d\n(No action required.)", "url": "https://github.com/openequella/openEQUELLA/pull/2500#discussion_r521057223", "createdAt": "2020-11-11T02:56:42Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/template/RenderNewTemplate.scala", "diffHunk": "@@ -141,6 +144,31 @@ object RenderNewTemplate {\n         }\n       })\n \n+  private def getSelectionSessionInfo(context: RenderEventContext): Option[ObjectExpression] = {\n+    val currentSession = LegacyGuice.selectionService.get().getCurrentSession(context)\n+    Option(currentSession).map(session => {\n+      val layout = session.getLayout match {\n+        case Layout.COURSE => \"coursesearch\"\n+        case Layout.NORMAL => \"search\"\n+        case Layout.SKINNY => \"skinnysearch\"\n+      }\n+\n+      val rootSelectionSection: RootSelectionSection =\n+        context.lookupSection(classOf[RootSelectionSection])\n+      val stateId = rootSelectionSection.getSessionId(context)\n+\n+      val integrationSection: IntegrationSection =\n+        context.lookupSection(classOf[IntegrationSection])\n+      val integId = Option(integrationSection).map(_.getStateId(context)).orNull\n+\n+      val selectionSessionInfo = new ObjectExpression\n+      selectionSessionInfo.put(\"stateId\", stateId)\n+      selectionSessionInfo.put(\"integId\", integId)\n+      selectionSessionInfo.put(\"layout\", layout)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "199709d20235830ee7e21bf49cc0812a9a14f7ff"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1654, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}