{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTk3MzE4", "number": 2012, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDo1NDo1MlrOEMSrhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTozMTowMFrOEMTCoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzI0NDIwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/LoginNoticeConfigPage.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDo1NDo1MlrOGuUb5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMToyODowNVrOGuU8mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjUwMg==", "bodyText": "Was there a push to remove ? operators and replace them with null checks? Or am I misremembering?", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451222502", "createdAt": "2020-07-08T00:54:52Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/LoginNoticeConfigPage.tsx", "diffHunk": "@@ -132,115 +93,47 @@ class LoginNoticeConfigPage extends React.Component<\n     }\n   };\n \n-  handleChangeTab = (event: React.ChangeEvent<{}>, selectedTab: number) => {\n-    this.setState({ selectedTab }, () =>\n-      this.props.updateTemplate((tp) => ({ ...tp, tabs: this.tabs() }))\n-    );\n-  };\n-\n   clearNotifications = () => {\n     this.setState({ notificationOpen: false });\n   };\n \n-  notificationString = (notificationType: NotificationType): string => {\n-    switch (notificationType) {\n-      case NotificationType.Revert:\n-        return strings.notifications.cancelled;\n-      case NotificationType.Clear:\n-        return strings.notifications.cleared;\n-      case NotificationType.Save:\n-        return strings.notifications.saved;\n-    }\n-  };\n-\n-  Notifications = () => {\n-    return (\n-      <MessageInfo\n-        title={this.notificationString(this.state.notifications)}\n-        open={this.state.notificationOpen}\n-        onClose={this.clearNotifications}\n-        variant=\"success\"\n-      />\n-    );\n-  };\n-\n-  notify = (notificationType: NotificationType) => {\n-    this.setState({ notificationOpen: true, notifications: notificationType });\n-  };\n-\n-  Configurators = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        return (\n-          <PreLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.preLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-      default:\n-        return (\n-          <PostLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.postLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-    }\n-  };\n-\n-  handleSubmitButton = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        if (this.preLoginNoticeConfigurator.current) {\n-          this.preLoginNoticeConfigurator.current.handleSubmitPreNotice();\n-        }\n-        break;\n-      default:\n-        if (this.postLoginNoticeConfigurator.current) {\n-          this.postLoginNoticeConfigurator.current.handleSubmitPostNotice();\n-        }\n-        break;\n+  save = async () => {\n+    try {\n+      await this.preLoginNoticeConfigurator.current?.save();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNTk0NA==", "bodyText": "No, safe navigators are still fine, it was the not null operators !.", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451225944", "createdAt": "2020-07-08T01:08:24Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/LoginNoticeConfigPage.tsx", "diffHunk": "@@ -132,115 +93,47 @@ class LoginNoticeConfigPage extends React.Component<\n     }\n   };\n \n-  handleChangeTab = (event: React.ChangeEvent<{}>, selectedTab: number) => {\n-    this.setState({ selectedTab }, () =>\n-      this.props.updateTemplate((tp) => ({ ...tp, tabs: this.tabs() }))\n-    );\n-  };\n-\n   clearNotifications = () => {\n     this.setState({ notificationOpen: false });\n   };\n \n-  notificationString = (notificationType: NotificationType): string => {\n-    switch (notificationType) {\n-      case NotificationType.Revert:\n-        return strings.notifications.cancelled;\n-      case NotificationType.Clear:\n-        return strings.notifications.cleared;\n-      case NotificationType.Save:\n-        return strings.notifications.saved;\n-    }\n-  };\n-\n-  Notifications = () => {\n-    return (\n-      <MessageInfo\n-        title={this.notificationString(this.state.notifications)}\n-        open={this.state.notificationOpen}\n-        onClose={this.clearNotifications}\n-        variant=\"success\"\n-      />\n-    );\n-  };\n-\n-  notify = (notificationType: NotificationType) => {\n-    this.setState({ notificationOpen: true, notifications: notificationType });\n-  };\n-\n-  Configurators = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        return (\n-          <PreLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.preLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-      default:\n-        return (\n-          <PostLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.postLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-    }\n-  };\n-\n-  handleSubmitButton = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        if (this.preLoginNoticeConfigurator.current) {\n-          this.preLoginNoticeConfigurator.current.handleSubmitPreNotice();\n-        }\n-        break;\n-      default:\n-        if (this.postLoginNoticeConfigurator.current) {\n-          this.postLoginNoticeConfigurator.current.handleSubmitPostNotice();\n-        }\n-        break;\n+  save = async () => {\n+    try {\n+      await this.preLoginNoticeConfigurator.current?.save();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjUwMg=="}, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMDg3NQ==", "bodyText": "ahhh gotcha. All good then!", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451230875", "createdAt": "2020-07-08T01:28:05Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/LoginNoticeConfigPage.tsx", "diffHunk": "@@ -132,115 +93,47 @@ class LoginNoticeConfigPage extends React.Component<\n     }\n   };\n \n-  handleChangeTab = (event: React.ChangeEvent<{}>, selectedTab: number) => {\n-    this.setState({ selectedTab }, () =>\n-      this.props.updateTemplate((tp) => ({ ...tp, tabs: this.tabs() }))\n-    );\n-  };\n-\n   clearNotifications = () => {\n     this.setState({ notificationOpen: false });\n   };\n \n-  notificationString = (notificationType: NotificationType): string => {\n-    switch (notificationType) {\n-      case NotificationType.Revert:\n-        return strings.notifications.cancelled;\n-      case NotificationType.Clear:\n-        return strings.notifications.cleared;\n-      case NotificationType.Save:\n-        return strings.notifications.saved;\n-    }\n-  };\n-\n-  Notifications = () => {\n-    return (\n-      <MessageInfo\n-        title={this.notificationString(this.state.notifications)}\n-        open={this.state.notificationOpen}\n-        onClose={this.clearNotifications}\n-        variant=\"success\"\n-      />\n-    );\n-  };\n-\n-  notify = (notificationType: NotificationType) => {\n-    this.setState({ notificationOpen: true, notifications: notificationType });\n-  };\n-\n-  Configurators = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        return (\n-          <PreLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.preLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-      default:\n-        return (\n-          <PostLoginNoticeConfigurator\n-            handleError={this.handleError}\n-            notify={this.notify}\n-            ref={this.postLoginNoticeConfigurator}\n-            preventNav={this.preventNav}\n-          />\n-        );\n-    }\n-  };\n-\n-  handleSubmitButton = () => {\n-    switch (this.state.selectedTab) {\n-      case 0:\n-        if (this.preLoginNoticeConfigurator.current) {\n-          this.preLoginNoticeConfigurator.current.handleSubmitPreNotice();\n-        }\n-        break;\n-      default:\n-        if (this.postLoginNoticeConfigurator.current) {\n-          this.postLoginNoticeConfigurator.current.handleSubmitPostNotice();\n-        }\n-        break;\n+  save = async () => {\n+    try {\n+      await this.preLoginNoticeConfigurator.current?.save();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjUwMg=="}, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzI0NjI3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDo1NTo1M1rOGuUdAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTowOTo0NVrOGuUqnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjc4Nw==", "bodyText": "JSDoc strings should start with a capital letter.", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451222787", "createdAt": "2020-07-08T00:55:53Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -29,24 +29,28 @@ import { commonString } from \"../util/commonstrings\";\n import {\n   clearPostLoginNotice,\n   getPostLoginNotice,\n-  NotificationType,\n-  submitPostLoginNotice,\n   strings,\n+  submitPostLoginNotice,\n } from \"./LoginNoticeModule\";\n import { AxiosError, AxiosResponse } from \"axios\";\n import Dialog from \"@material-ui/core/Dialog\";\n import DialogTitle from \"@material-ui/core/DialogTitle\";\n import DialogActions from \"@material-ui/core/DialogActions\";\n+import SettingsListHeading from \"../components/SettingsListHeading\";\n \n interface PostLoginNoticeConfiguratorProps {\n   handleError: (axiosError: AxiosError) => void;\n-  notify: (notificationType: NotificationType) => void;\n   preventNav: (prevNav: boolean) => void;\n }\n \n interface PostLoginNoticeConfiguratorState {\n-  postNotice?: string; //what is currently in the textfield\n-  dbPostNotice?: string; //what is currently in the database\n+  /** what is currently in the textfield */\n+  postNotice?: string;\n+\n+  /** what is currently in the database */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyNjI2OQ==", "bodyText": "Yup, just reformatting the comments that were already there exactly as was. Will tweak these. \ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451226269", "createdAt": "2020-07-08T01:09:45Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -29,24 +29,28 @@ import { commonString } from \"../util/commonstrings\";\n import {\n   clearPostLoginNotice,\n   getPostLoginNotice,\n-  NotificationType,\n-  submitPostLoginNotice,\n   strings,\n+  submitPostLoginNotice,\n } from \"./LoginNoticeModule\";\n import { AxiosError, AxiosResponse } from \"axios\";\n import Dialog from \"@material-ui/core/Dialog\";\n import DialogTitle from \"@material-ui/core/DialogTitle\";\n import DialogActions from \"@material-ui/core/DialogActions\";\n+import SettingsListHeading from \"../components/SettingsListHeading\";\n \n interface PostLoginNoticeConfiguratorProps {\n   handleError: (axiosError: AxiosError) => void;\n-  notify: (notificationType: NotificationType) => void;\n   preventNav: (prevNav: boolean) => void;\n }\n \n interface PostLoginNoticeConfiguratorState {\n-  postNotice?: string; //what is currently in the textfield\n-  dbPostNotice?: string; //what is currently in the database\n+  /** what is currently in the textfield */\n+  postNotice?: string;\n+\n+  /** what is currently in the database */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIyMjc4Nw=="}, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzI5NjUwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMToyNjo0MFrOGuU7Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0MjowMlrOGuVKkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMDUxMQ==", "bodyText": "Do we need to catch errors here ?\nAlso, I would try then((data) => this.setState({ dbPostNotice: data.postNotice }) in case that server slightly changes the notice such as doing a toLowercase() . But I don't know much about what has done for this feature, so this should be fine.", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451230511", "createdAt": "2020-07-08T01:26:40Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -63,36 +67,15 @@ class PostLoginNoticeConfigurator extends React.Component<\n     };\n   }\n \n-  handleSubmitPostNotice = () => {\n-    if (this.state.postNotice != undefined) {\n-      submitPostLoginNotice(this.state.postNotice)\n-        .then(() => {\n-          this.props.notify(NotificationType.Save);\n-          this.setState({ dbPostNotice: this.state.postNotice });\n-          this.props.preventNav(false);\n-        })\n-        .catch((error: AxiosError) => {\n-          this.props.handleError(error);\n-        });\n-    }\n-  };\n+  save = async () =>\n+    (this.state.postNotice\n+      ? submitPostLoginNotice(this.state.postNotice)\n+      : clearPostLoginNotice()\n+    ).then(() => this.setState({ dbPostNotice: this.state.postNotice }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNDQ0OQ==", "bodyText": "No need to be caught here. The contract of this save and the matching one in PreLoginNoticeConfigurator is that it's the responsibility of the caller to then handle errors. In that fashion, we can standardise on error handling as done in save in the LoginNoticeConfigPage - the caller of this (and the other save method).\nI like your thought around changing the this.setState to use returned data. However, I'm cautious to change any of the functioning when the refactor was about layout as opposed to implementation. I also see you said \"this should be fine\", so I'm going to err on the side of caution and leave this as is. \ud83d\ude09", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451234449", "createdAt": "2020-07-08T01:42:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -63,36 +67,15 @@ class PostLoginNoticeConfigurator extends React.Component<\n     };\n   }\n \n-  handleSubmitPostNotice = () => {\n-    if (this.state.postNotice != undefined) {\n-      submitPostLoginNotice(this.state.postNotice)\n-        .then(() => {\n-          this.props.notify(NotificationType.Save);\n-          this.setState({ dbPostNotice: this.state.postNotice });\n-          this.props.preventNav(false);\n-        })\n-        .catch((error: AxiosError) => {\n-          this.props.handleError(error);\n-        });\n-    }\n-  };\n+  save = async () =>\n+    (this.state.postNotice\n+      ? submitPostLoginNotice(this.state.postNotice)\n+      : clearPostLoginNotice()\n+    ).then(() => this.setState({ dbPostNotice: this.state.postNotice }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMDUxMQ=="}, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMwMzM2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTozMTowMFrOGuU_fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTozNjo1MVrOGuVFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMTYxNQ==", "bodyText": "Just a query: the name of this component implies that it is created for settings, but do we want to reuse it in other non-setting cards or use CardHeader?", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451231615", "createdAt": "2020-07-08T01:31:00Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -119,40 +102,13 @@ class PostLoginNoticeConfigurator extends React.Component<\n     this.setState({ clearStaged: true });\n   };\n \n-  Dialogs = () => {\n-    return (\n-      <div>\n-        <Dialog\n-          open={this.state.clearStaged}\n-          onClose={() => this.setState({ clearStaged: false })}\n-        >\n-          <DialogTitle>{strings.clear.title}</DialogTitle>\n-          <DialogContent>\n-            <DialogContentText>{strings.clear.confirm}</DialogContentText>\n-          </DialogContent>\n-          <DialogActions>\n-            <Button id=\"okToClear\" onClick={this.handleClearPostNotice}>\n-              {commonString.action.ok}\n-            </Button>\n-            <Button\n-              id=\"cancelClear\"\n-              onClick={() => this.setState({ clearStaged: false })}\n-            >\n-              {commonString.action.cancel}\n-            </Button>\n-          </DialogActions>\n-        </Dialog>\n-      </div>\n-    );\n-  };\n-\n   render() {\n     const { postNotice, dbPostNotice } = this.state;\n-    const Dialogs = this.Dialogs;\n     return (\n       <>\n         <Card>\n           <CardContent>\n+            <SettingsListHeading heading={strings.postLogin.title} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMzA5Nw==", "bodyText": "Well, this is a settings control/component hence it's use here. But...\nOnce these refactors are done, I'd like to see if we can go back and do a further (incremental) one where we:\n\nRemove SettingsListHeading entirely; and\nReplace the settings of headings (both in SettingsList, and generic) with CardHeader as we've recently discovered.\n\nI'll organise a ticket for such. \ud83d\ude09\nFor now though, I'll do this PR this way to maintain consistency.", "url": "https://github.com/openequella/openEQUELLA/pull/2012#discussion_r451233097", "createdAt": "2020-07-08T01:36:51Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/loginnotice/PostLoginNoticeConfigurator.tsx", "diffHunk": "@@ -119,40 +102,13 @@ class PostLoginNoticeConfigurator extends React.Component<\n     this.setState({ clearStaged: true });\n   };\n \n-  Dialogs = () => {\n-    return (\n-      <div>\n-        <Dialog\n-          open={this.state.clearStaged}\n-          onClose={() => this.setState({ clearStaged: false })}\n-        >\n-          <DialogTitle>{strings.clear.title}</DialogTitle>\n-          <DialogContent>\n-            <DialogContentText>{strings.clear.confirm}</DialogContentText>\n-          </DialogContent>\n-          <DialogActions>\n-            <Button id=\"okToClear\" onClick={this.handleClearPostNotice}>\n-              {commonString.action.ok}\n-            </Button>\n-            <Button\n-              id=\"cancelClear\"\n-              onClick={() => this.setState({ clearStaged: false })}\n-            >\n-              {commonString.action.cancel}\n-            </Button>\n-          </DialogActions>\n-        </Dialog>\n-      </div>\n-    );\n-  };\n-\n   render() {\n     const { postNotice, dbPostNotice } = this.state;\n-    const Dialogs = this.Dialogs;\n     return (\n       <>\n         <Card>\n           <CardContent>\n+            <SettingsListHeading heading={strings.postLogin.title} />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMTYxNQ=="}, "originalCommit": {"oid": "75f2cd133860d15c37e57dfaf6e20f0c7cf9d85c"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1255, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}