{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDc3ODU4", "number": 2498, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjowNjozM1rOE2-N1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo0Mjo0N1rOE2_3IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDc3OTExOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/ViewerModule.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjowNjozM1rOHwDflA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDowNzowM1rOHwGhnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDkzMg==", "bodyText": "nit: since the string \"file\" is checked on line 87 and then used again in line 88's string literal, perhaps it could be a constant.", "url": "https://github.com/openequella/openEQUELLA/pull/2498#discussion_r520150932", "createdAt": "2020-11-09T22:06:33Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/ViewerModule.ts", "diffHunk": "@@ -65,3 +66,24 @@ export const determineViewer = (\n \n   return simpleLinkView;\n };\n+\n+/**\n+ * Based on attachment type, builds either a direct link to a file attachment URL or uses the\n+ * provided `viewUrl`.\n+ *\n+ * @param itemUuid The attachment item's UUID\n+ * @param itemVersion The attachment item's version\n+ * @param attachmentType The type of the attachment - as provided by the server\n+ * @param viewUrl The default 'view' link provided by the server for the attachment\n+ * @param fileAttachmentPath If attachment type of 'file' then the `filePath` provided by the server\n+ */\n+export const determineAttachmentViewUrl = (\n+  itemUuid: string,\n+  itemVersion: number,\n+  attachmentType: string,\n+  viewUrl: string,\n+  fileAttachmentPath?: string\n+): string =>\n+  attachmentType === \"file\"\n+    ? `${AppConfig.baseUrl}file/${itemUuid}/${itemVersion}/${fileAttachmentPath}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba2c0212d31ac80bf0d5a47a46d4b8703b926d9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMDYwNQ==", "bodyText": "Thanks @SammyIsConfused .\nIn this case this is more the value of string union, vs. just the structure of a URL. I wouldn't want to imply they're directly related.", "url": "https://github.com/openequella/openEQUELLA/pull/2498#discussion_r520200605", "createdAt": "2020-11-10T00:07:03Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/ViewerModule.ts", "diffHunk": "@@ -65,3 +66,24 @@ export const determineViewer = (\n \n   return simpleLinkView;\n };\n+\n+/**\n+ * Based on attachment type, builds either a direct link to a file attachment URL or uses the\n+ * provided `viewUrl`.\n+ *\n+ * @param itemUuid The attachment item's UUID\n+ * @param itemVersion The attachment item's version\n+ * @param attachmentType The type of the attachment - as provided by the server\n+ * @param viewUrl The default 'view' link provided by the server for the attachment\n+ * @param fileAttachmentPath If attachment type of 'file' then the `filePath` provided by the server\n+ */\n+export const determineAttachmentViewUrl = (\n+  itemUuid: string,\n+  itemVersion: number,\n+  attachmentType: string,\n+  viewUrl: string,\n+  fileAttachmentPath?: string\n+): string =>\n+  attachmentType === \"file\"\n+    ? `${AppConfig.baseUrl}file/${itemUuid}/${itemVersion}/${fileAttachmentPath}`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MDkzMg=="}, "originalCommit": {"oid": "9ba2c0212d31ac80bf0d5a47a46d4b8703b926d9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTA0ODY1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/modules/ViewerModule.test.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo0Mjo0N1rOHwF_qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDowODoyOFrOHwGjTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE5MTkxNA==", "bodyText": "Just be curious here . Does fileAttachment.getFilename actually return a relative path ?  I wonder this because the file path in this test is \"directory/file.txt\".", "url": "https://github.com/openequella/openEQUELLA/pull/2498#discussion_r520191914", "createdAt": "2020-11-09T23:42:47Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/modules/ViewerModule.test.ts", "diffHunk": "@@ -58,3 +61,25 @@ describe(\"determineViewer()\", () => {\n       ).toEqual([\"lightbox\", fileViewUrl])\n   );\n });\n+\n+describe(\"determineAttachmentViewUrl()\", () => {\n+  const viewUrl = \"http://blah/blah\";\n+  const uuid = \"uuid\";\n+  const version = 1;\n+\n+  it(\"returns the viewUrl for non 'file' attachmentType\", () =>\n+    expect(\n+      determineAttachmentViewUrl(uuid, version, \"link\", viewUrl, undefined)\n+    ).toEqual(viewUrl));\n+\n+  it(\"returns an oEQ 'file' URL for attachmentType 'file'\", () =>\n+    expect(\n+      determineAttachmentViewUrl(\n+        uuid,\n+        version,\n+        \"file\",\n+        viewUrl,\n+        \"directory/file.txt\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba2c0212d31ac80bf0d5a47a46d4b8703b926d9"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMTAzOQ==", "bodyText": "I wondered the same thing. So went through some manual testing where I uploaded a zip file with several directories and then extracted that into an item and discovered it is indeed the path. (Shame the naming etc. is unclear.)", "url": "https://github.com/openequella/openEQUELLA/pull/2498#discussion_r520201039", "createdAt": "2020-11-10T00:08:28Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/modules/ViewerModule.test.ts", "diffHunk": "@@ -58,3 +61,25 @@ describe(\"determineViewer()\", () => {\n       ).toEqual([\"lightbox\", fileViewUrl])\n   );\n });\n+\n+describe(\"determineAttachmentViewUrl()\", () => {\n+  const viewUrl = \"http://blah/blah\";\n+  const uuid = \"uuid\";\n+  const version = 1;\n+\n+  it(\"returns the viewUrl for non 'file' attachmentType\", () =>\n+    expect(\n+      determineAttachmentViewUrl(uuid, version, \"link\", viewUrl, undefined)\n+    ).toEqual(viewUrl));\n+\n+  it(\"returns an oEQ 'file' URL for attachmentType 'file'\", () =>\n+    expect(\n+      determineAttachmentViewUrl(\n+        uuid,\n+        version,\n+        \"file\",\n+        viewUrl,\n+        \"directory/file.txt\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE5MTkxNA=="}, "originalCommit": {"oid": "9ba2c0212d31ac80bf0d5a47a46d4b8703b926d9"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1652, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}