{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODI3OTkx", "number": 2087, "title": "Refine control: Last modified date selector", "bodyText": "#1306\nChecklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][]\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nCreated another refine control: Last modified date selector. This control shows a Dropdown of Quick date options or two custom Date pickers, depending on the value of the Quick mode switch which is also included in this control. Also, this control is compatible with the feature of back to Search page.\nLuxon is used to deal with date formats and calculations,.\nIn Search module, added some utils to help transform data between a date range and a Quick date option. However, I wonder if we should move these utils to a new module dedicated for Last modified date.\nLastly, added a new Storybook for this control.\nOne more side thing is during developing I found the dependency of material-ui picker we are using is very old. I tried to update it to the latest version, which resulted in some errors in other pages due to significant changes. So I did not proceed.", "createdAt": "2020-07-22T01:34:13Z", "url": "https://github.com/openequella/openEQUELLA/pull/2087", "merged": true, "mergeCommit": {"oid": "848b1ab0e98721046502f1049d868037f7d958cc"}, "closed": true, "closedAt": "2020-07-24T06:32:54Z", "author": {"login": "PenghaiZhang"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3QV3igH2gAyNDU0ODI3OTkxOjEzNmY2Y2M2OWZjMjUxYjY0M2Q2NzAwMzJjOTA2M2ZkMTg3NzcxN2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc38SL0gFqTQ1NDYyODA3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "136f6cc69fc251b643d670032c9063fd1877717c", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/136f6cc69fc251b643d670032c9063fd1877717c", "committedDate": "2020-07-22T01:14:17Z", "message": "Create a new component as Last modified date selector\n\nThis refine control shows a Dropdown of date options or two custom Date\npickers, depending on the value of the Switch which is also included in\nthis control."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b41bf3b4234936d4dc740bb2fca88a8eaccae9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/c7b41bf3b4234936d4dc740bb2fca88a8eaccae9", "committedDate": "2020-07-22T01:14:44Z", "message": "Add a Storybook for the Last modified date selector."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTc3MTQw", "url": "https://github.com/openequella/openEQUELLA/pull/2087#pullrequestreview-452977140", "createdAt": "2020-07-22T03:56:05Z", "commit": {"oid": "c7b41bf3b4234936d4dc740bb2fca88a8eaccae9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo1NjowNVrOG1RyUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDowMDozNlrOG1R2Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxOTEyMA==", "bodyText": "This will need language strings.", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r458519120", "createdAt": "2020-07-22T03:56:05Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchModule.ts", "diffHunk": "@@ -108,3 +109,89 @@ export interface SearchOptions {\n    */\n   rawMode: boolean;\n }\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: string;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: string;\n+}\n+\n+/**\n+ * An enum providing five values as the Quick date options.\n+ */\n+export enum LastModifiedDateOption {\n+  ALL = \"All\",\n+  TODAY = \"Today\",\n+  LAST_SEVEN_DAYS = \"Last seven days\",\n+  LAST_MONTH = \"Last month\",\n+  THIS_YEAR = \"This year\",\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b41bf3b4234936d4dc740bb2fca88a8eaccae9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDE2Mw==", "bodyText": "A couple of things:\n\nThese props are duplicates - maybe put them in an object and spread them; and\nShould format be using the locale format or if internal than ISO? (I'm not sure what this prop controls.)", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r458520163", "createdAt": "2020-07-22T04:00:36Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,155 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { InlineDatePicker } from \"material-ui-pickers\";\n+\n+import { DateTime } from \"luxon\";\n+import {\n+  dateOptionToDateRangeConverter,\n+  dateRangeToDateOptionConverter,\n+  LastModifiedDateOption,\n+  LastModifiedDateRange,\n+} from \"../SearchModule\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+/**\n+ * As a refine control, this component is used to filter search results by last modified dates.\n+ * Depending on what mode is selected, a Quick option Dropdown or two custom date pickers are displayed.\n+ */\n+export const ModifiedDateSelector = ({\n+  onDateRangeChange,\n+  onQuickModeChange,\n+  dateRange,\n+  quickModeEnabled,\n+}: ModifiedDateSelectorProps) => {\n+  const modifiedDateSelectorStrings =\n+    languageStrings.searchpage.modifiedDateSelector;\n+\n+  const handleQuickDateOptionChange = (\n+    option: LastModifiedDateOption\n+  ): void => {\n+    const dateRange = dateOptionToDateRangeConverter(option);\n+    onDateRangeChange(dateRange);\n+  };\n+\n+  const quickOptions: ReactNode = (\n+    <FormControl variant=\"outlined\" fullWidth>\n+      <InputLabel id=\"modified_date_range_selector_label\">\n+        {modifiedDateSelectorStrings.quickOptionLabel}\n+      </InputLabel>\n+      <Select\n+        value={dateRangeToDateOptionConverter(dateRange)}\n+        id=\"modified_date_range_selector\"\n+        labelId=\"modified_date_range_selector_label\"\n+        onChange={(event) =>\n+          handleQuickDateOptionChange(\n+            event.target.value as LastModifiedDateOption\n+          )\n+        }\n+        label={modifiedDateSelectorStrings.quickOptionLabel}\n+      >\n+        {Object.values(LastModifiedDateOption).map((value) => (\n+          <MenuItem key={value} value={value}>\n+            {value}\n+          </MenuItem>\n+        ))}\n+      </Select>\n+    </FormControl>\n+  );\n+\n+  const customDateRange: ReactNode = (\n+    <Grid container>\n+      <Grid item xs={6}>\n+        <InlineDatePicker\n+          disableFuture\n+          variant=\"outlined\"\n+          format=\"dd/MM/yyyy\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b41bf3b4234936d4dc740bb2fca88a8eaccae9"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2099e40e5a30feec6e38611673e0c301aee4bf0b", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/2099e40e5a30feec6e38611673e0c301aee4bf0b", "committedDate": "2020-07-22T05:30:22Z", "message": "Remove prop 'xs' from the two Grids for Last modified date pickers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50bf786627bc50248b920778103d88ee18a312f0", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/50bf786627bc50248b920778103d88ee18a312f0", "committedDate": "2020-07-22T05:57:59Z", "message": "Update material-ui picker to the latest stable version\n\nThe update requires some changes made on 'PreLoginNoticeConfigurator'.\nAlso move 'MuiPickersUtilsProvider' from the Legacy content template to\n'PreLoginNoticeConfigurator'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f92c869ee4662c7a73595dc395f968510e6c19", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/d6f92c869ee4662c7a73595dc395f968510e6c19", "committedDate": "2020-07-22T06:26:55Z", "message": "A few tweaks for Last modified date pickers\n\n1. Wrap Date pickers by MuiPickersUtilsProvider; and\n2. Enable autoOK; and;\n3. Use \"outlined\" as input variant."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ecac6273a5862f635725e94ea1fbe5a9855615a", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/8ecac6273a5862f635725e94ea1fbe5a9855615a", "committedDate": "2020-07-23T02:17:00Z", "message": "Refactor ModifiedDateSelector and its Storybook.\n\n1. Move this control's utils from Search module back to itself.\n2. Change types of date range fields from string to Date.\n3. Remove the usage of enum for Quick options.\n4. Update JSDoc and Storybook."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d48b3c16329f282548e5fc1c9833b02023e083c9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/d48b3c16329f282548e5fc1c9833b02023e083c9", "committedDate": "2020-07-23T02:33:21Z", "message": "Extract MUI Date picker general props into an object."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/59119d75b63ac97832b60cb59003c5c0730d38d4", "committedDate": "2020-07-23T04:00:26Z", "message": "Fix a typo issue for Search page"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODMwMjMx", "url": "https://github.com/openequella/openEQUELLA/pull/2087#pullrequestreview-453830231", "createdAt": "2020-07-23T04:33:43Z", "commit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDozMzo0M1rOG176-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo1ODoxNlrOG18PNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTQ2NA==", "bodyText": "AFAICT, there's no planned external use of this, so no need to export.", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r459209464", "createdAt": "2020-07-23T04:33:43Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n+import LuxonUtils from \"@date-io/luxon\";\n+import { DateTime } from \"luxon\";\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: Date;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: Date;\n+}\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+type DatePickerInputVariant = \"standard\" | \"outlined\" | \"filled\";\n+type DatePickerWrapperVariant = \"dialog\" | \"inline\" | \"static\";\n+\n+/**\n+ * General props for Material ui Date Picker.\n+ *\n+ * @see BaseDatePickerProps\n+ * @see BasePickerProps\n+ */\n+export interface GeneralDatePickerProps {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwOTkxNQ==", "bodyText": "I wonder if you've overdone it here. You only ever use one value from each of these, and they wont be used externally, so... \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r459209915", "createdAt": "2020-07-23T04:35:58Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n+import LuxonUtils from \"@date-io/luxon\";\n+import { DateTime } from \"luxon\";\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: Date;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: Date;\n+}\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+type DatePickerInputVariant = \"standard\" | \"outlined\" | \"filled\";\n+type DatePickerWrapperVariant = \"dialog\" | \"inline\" | \"static\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMDIxMg==", "bodyText": "I wonder if you even need all this typing. Where you use it you end up doing a one off literal declaration of an object and then never change it. Sure you spread over the props into the element, but if it's got types then that'll check things for you anyway.", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r459210212", "createdAt": "2020-07-23T04:37:35Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n+import LuxonUtils from \"@date-io/luxon\";\n+import { DateTime } from \"luxon\";\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: Date;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: Date;\n+}\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+type DatePickerInputVariant = \"standard\" | \"outlined\" | \"filled\";\n+type DatePickerWrapperVariant = \"dialog\" | \"inline\" | \"static\";\n+\n+/**\n+ * General props for Material ui Date Picker.\n+ *\n+ * @see BaseDatePickerProps\n+ * @see BasePickerProps\n+ */\n+export interface GeneralDatePickerProps {\n+  disableFuture: boolean;\n+  variant: DatePickerWrapperVariant;\n+  inputVariant: DatePickerInputVariant;\n+  autoOk: boolean;\n+  labelFunc: (value: MaterialUiPickersDate, invalidLabel: string) => string;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTQ5MA==", "bodyText": "Would be nice to use meaningful names here, something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  (value: DateTime | undefined, key: string) => {\n          \n          \n            \n                  (dt: DateTime | undefined, label: string) => {\n          \n      \n    \n    \n  \n\ndt is not great, but might do. I wonder about optionDateTime, but not sure.", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r459211490", "createdAt": "2020-07-23T04:43:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n+import LuxonUtils from \"@date-io/luxon\";\n+import { DateTime } from \"luxon\";\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: Date;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: Date;\n+}\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+type DatePickerInputVariant = \"standard\" | \"outlined\" | \"filled\";\n+type DatePickerWrapperVariant = \"dialog\" | \"inline\" | \"static\";\n+\n+/**\n+ * General props for Material ui Date Picker.\n+ *\n+ * @see BaseDatePickerProps\n+ * @see BasePickerProps\n+ */\n+export interface GeneralDatePickerProps {\n+  disableFuture: boolean;\n+  variant: DatePickerWrapperVariant;\n+  inputVariant: DatePickerInputVariant;\n+  autoOk: boolean;\n+  labelFunc: (value: MaterialUiPickersDate, invalidLabel: string) => string;\n+}\n+\n+/**\n+ * As a refine control, this component is used to filter search results by last modified dates.\n+ * Depending on what mode is selected, a Quick option Dropdown or two custom date pickers are displayed.\n+ */\n+export const ModifiedDateSelector = ({\n+  onDateRangeChange,\n+  onQuickModeChange,\n+  dateRange,\n+  quickModeEnabled,\n+}: ModifiedDateSelectorProps) => {\n+  const {\n+    quickOptionLabel,\n+    quickOptionSwitchLabel,\n+    modifiedBeforeLabel,\n+    modifiedAfterLabel,\n+    optionsLabel,\n+  } = languageStrings.searchpage.modifiedDateSelector;\n+\n+  const datePickerProps: GeneralDatePickerProps = {\n+    disableFuture: true,\n+    variant: \"inline\",\n+    inputVariant: \"outlined\",\n+    autoOk: true,\n+    labelFunc: (value, invalidLabel) => value?.toLocaleString() ?? invalidLabel,\n+  };\n+\n+  /**\n+   * Return a map in which keys are language strings and values are instances of DateTime or undefined.\n+   */\n+  const getLastModifiedDateOptions = (): Map<string, DateTime | undefined> => {\n+    const { today, lastSevenDays, lastMonth, thisYear, all } = optionsLabel;\n+    const now = DateTime.local();\n+    return new Map([\n+      [today, now],\n+      [lastSevenDays, now.minus({ days: 7 })],\n+      [lastMonth, now.minus({ month: 1 })],\n+      [thisYear, DateTime.local(now.year)],\n+      [all, undefined],\n+    ]);\n+  };\n+\n+  /**\n+   * Convert a quick date option to a date range.\n+   * The value of field 'modifiedAfter' depends on what Quick date option is selected.\n+   * The value of field 'modifiedBefore' is always undefined.\n+   *\n+   * @param option  An option selected from the Quick date options.\n+   */\n+  const dateOptionToDateRangeConverter = (\n+    option: string\n+  ): LastModifiedDateRange => {\n+    const modifiedAfter = getLastModifiedDateOptions().get(option);\n+    return {\n+      modifiedAfter: modifiedAfter?.toJSDate(),\n+      modifiedBefore: undefined,\n+    };\n+  };\n+\n+  /**\n+   * Convert a date range to a Quick date option.\n+   * If the provided date range is undefined, or defined but the value of field modifiedAfter is undefined,\n+   * then return the Quick option \"All\".\n+   * Otherwise, returns the Quick option whose value is equal to modifiedAfter in ISO Date format.\n+   *\n+   * @param dateRange A date range to be converted to a Quick date range\n+   */\n+  const dateRangeToDateOptionConverter = (\n+    dateRange?: LastModifiedDateRange\n+  ): string => {\n+    let option = optionsLabel.all;\n+    if (!dateRange || !dateRange.modifiedAfter) {\n+      return option;\n+    }\n+    const modifiedAfter = DateTime.fromJSDate(dateRange.modifiedAfter);\n+    getLastModifiedDateOptions().forEach(\n+      (value: DateTime | undefined, key: string) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxNDY0Ng==", "bodyText": "That's a big duplicated block other than value and label. I'd say either create a function, or internal component (i.e. another component in this file), or even something maybe fun like:\nnew Map([\n  [modifiedAfterLabel, dateRange?.modifiedAfter],\n  [modifiedBeforeLabel, dateRange?.modifiedBefore],\n]).forEach((label, value) =>\n  <Grid item>\n    <DatePicker\n      {...datePickerProps}\n        label={label}\n        value={value}\n        onChange={(newDate: MaterialUiPickersDate) =>\n          onDateRangeChange({\n            ...dateRange,\n            modifiedBefore: newDate?.toJSDate(),\n          })\n        }\n    />\n  </Grid>\n);", "url": "https://github.com/openequella/openEQUELLA/pull/2087#discussion_r459214646", "createdAt": "2020-07-23T04:58:16Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/ModifiedDateSelector.tsx", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  FormControl,\n+  Grid,\n+  InputLabel,\n+  MenuItem,\n+  Select,\n+} from \"@material-ui/core\";\n+import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n+import SettingsToggleSwitch from \"../../components/SettingsToggleSwitch\";\n+import { ReactNode } from \"react\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n+import LuxonUtils from \"@date-io/luxon\";\n+import { DateTime } from \"luxon\";\n+\n+/**\n+ * Type of Last modified date range.\n+ */\n+export interface LastModifiedDateRange {\n+  /**\n+   * The date before which items are modified.\n+   */\n+  modifiedBefore?: Date;\n+  /**\n+   * The date after which items are modified.\n+   */\n+  modifiedAfter?: Date;\n+}\n+\n+export interface ModifiedDateSelectorProps {\n+  /**\n+   * Fired when date range is changed.\n+   * @param dateRange A new date range.\n+   */\n+  onDateRangeChange: (dateRange?: LastModifiedDateRange) => void;\n+  /**\n+   * Fired when the status of Quick mode is changed.\n+   * @param enabled The new status of Quick mode\n+   */\n+  onQuickModeChange: (enabled: boolean) => void;\n+  /**\n+   * Initially selected date range.\n+   */\n+  dateRange?: LastModifiedDateRange;\n+  /**\n+   * Initial status of Quick mode.\n+   */\n+  quickModeEnabled?: boolean;\n+}\n+\n+type DatePickerInputVariant = \"standard\" | \"outlined\" | \"filled\";\n+type DatePickerWrapperVariant = \"dialog\" | \"inline\" | \"static\";\n+\n+/**\n+ * General props for Material ui Date Picker.\n+ *\n+ * @see BaseDatePickerProps\n+ * @see BasePickerProps\n+ */\n+export interface GeneralDatePickerProps {\n+  disableFuture: boolean;\n+  variant: DatePickerWrapperVariant;\n+  inputVariant: DatePickerInputVariant;\n+  autoOk: boolean;\n+  labelFunc: (value: MaterialUiPickersDate, invalidLabel: string) => string;\n+}\n+\n+/**\n+ * As a refine control, this component is used to filter search results by last modified dates.\n+ * Depending on what mode is selected, a Quick option Dropdown or two custom date pickers are displayed.\n+ */\n+export const ModifiedDateSelector = ({\n+  onDateRangeChange,\n+  onQuickModeChange,\n+  dateRange,\n+  quickModeEnabled,\n+}: ModifiedDateSelectorProps) => {\n+  const {\n+    quickOptionLabel,\n+    quickOptionSwitchLabel,\n+    modifiedBeforeLabel,\n+    modifiedAfterLabel,\n+    optionsLabel,\n+  } = languageStrings.searchpage.modifiedDateSelector;\n+\n+  const datePickerProps: GeneralDatePickerProps = {\n+    disableFuture: true,\n+    variant: \"inline\",\n+    inputVariant: \"outlined\",\n+    autoOk: true,\n+    labelFunc: (value, invalidLabel) => value?.toLocaleString() ?? invalidLabel,\n+  };\n+\n+  /**\n+   * Return a map in which keys are language strings and values are instances of DateTime or undefined.\n+   */\n+  const getLastModifiedDateOptions = (): Map<string, DateTime | undefined> => {\n+    const { today, lastSevenDays, lastMonth, thisYear, all } = optionsLabel;\n+    const now = DateTime.local();\n+    return new Map([\n+      [today, now],\n+      [lastSevenDays, now.minus({ days: 7 })],\n+      [lastMonth, now.minus({ month: 1 })],\n+      [thisYear, DateTime.local(now.year)],\n+      [all, undefined],\n+    ]);\n+  };\n+\n+  /**\n+   * Convert a quick date option to a date range.\n+   * The value of field 'modifiedAfter' depends on what Quick date option is selected.\n+   * The value of field 'modifiedBefore' is always undefined.\n+   *\n+   * @param option  An option selected from the Quick date options.\n+   */\n+  const dateOptionToDateRangeConverter = (\n+    option: string\n+  ): LastModifiedDateRange => {\n+    const modifiedAfter = getLastModifiedDateOptions().get(option);\n+    return {\n+      modifiedAfter: modifiedAfter?.toJSDate(),\n+      modifiedBefore: undefined,\n+    };\n+  };\n+\n+  /**\n+   * Convert a date range to a Quick date option.\n+   * If the provided date range is undefined, or defined but the value of field modifiedAfter is undefined,\n+   * then return the Quick option \"All\".\n+   * Otherwise, returns the Quick option whose value is equal to modifiedAfter in ISO Date format.\n+   *\n+   * @param dateRange A date range to be converted to a Quick date range\n+   */\n+  const dateRangeToDateOptionConverter = (\n+    dateRange?: LastModifiedDateRange\n+  ): string => {\n+    let option = optionsLabel.all;\n+    if (!dateRange || !dateRange.modifiedAfter) {\n+      return option;\n+    }\n+    const modifiedAfter = DateTime.fromJSDate(dateRange.modifiedAfter);\n+    getLastModifiedDateOptions().forEach(\n+      (value: DateTime | undefined, key: string) => {\n+        if (value && value.toISODate() === modifiedAfter.toISODate()) {\n+          option = key;\n+        }\n+      }\n+    );\n+\n+    return option;\n+  };\n+\n+  /**\n+   * Fired when a different Quick option is selected.\n+   * @param option A Quick option.\n+   */\n+  const handleQuickDateOptionChange = (option: string): void => {\n+    const dateRange = dateOptionToDateRangeConverter(option);\n+    onDateRangeChange(dateRange);\n+  };\n+\n+  const quickOptionSelector: ReactNode = (\n+    <FormControl variant=\"outlined\" fullWidth>\n+      <InputLabel id=\"modified_date_range_selector_label\">\n+        {quickOptionLabel}\n+      </InputLabel>\n+      <Select\n+        value={dateRangeToDateOptionConverter(dateRange)}\n+        id=\"modified_date_range_selector\"\n+        labelId=\"modified_date_range_selector_label\"\n+        onChange={(event) =>\n+          handleQuickDateOptionChange(event.target.value as string)\n+        }\n+        label={quickOptionLabel}\n+      >\n+        {Array.from(getLastModifiedDateOptions()).map(([option, _]) => (\n+          <MenuItem key={option} value={option}>\n+            {option}\n+          </MenuItem>\n+        ))}\n+      </Select>\n+    </FormControl>\n+  );\n+\n+  const customDatePicker: ReactNode = (\n+    <MuiPickersUtilsProvider utils={LuxonUtils}>\n+      <Grid container spacing={2}>\n+        <Grid item>\n+          <DatePicker\n+            {...datePickerProps}\n+            label={modifiedAfterLabel}\n+            value={dateRange?.modifiedAfter}\n+            onChange={(newDate: MaterialUiPickersDate) =>\n+              onDateRangeChange({\n+                ...dateRange,\n+                modifiedAfter: newDate?.toJSDate(),\n+              })\n+            }\n+          />\n+        </Grid>\n+        <Grid item>\n+          <DatePicker\n+            {...datePickerProps}\n+            label={modifiedBeforeLabel}\n+            value={dateRange?.modifiedBefore}\n+            onChange={(newDate: MaterialUiPickersDate) =>\n+              onDateRangeChange({\n+                ...dateRange,\n+                modifiedBefore: newDate?.toJSDate(),\n+              })\n+            }\n+          />\n+        </Grid>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59119d75b63ac97832b60cb59003c5c0730d38d4"}, "originalPosition": 231}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1245e02eb008b1cc97d0aa076ead4b88828e2ca9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1245e02eb008b1cc97d0aa076ead4b88828e2ca9", "committedDate": "2020-07-24T01:15:40Z", "message": "Make the date range selector generic\n\n1. Rename the component and relevant interfaces and functions.\n2. Add three props to allow custom labels for the pickers and Dropdown.\n3. Move the component to 'tsrc/components'.\n4. Remove some duplicated and useless code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77f720663df2231550552dd89bd901ab2056d90d", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/77f720663df2231550552dd89bd901ab2056d90d", "committedDate": "2020-07-24T01:57:02Z", "message": "Rename DateRangeSelector's storybook."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjI4MDcx", "url": "https://github.com/openequella/openEQUELLA/pull/2087#pullrequestreview-454628071", "createdAt": "2020-07-24T04:26:05Z", "commit": {"oid": "77f720663df2231550552dd89bd901ab2056d90d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4839, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}