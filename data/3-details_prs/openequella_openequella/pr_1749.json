{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDQ1Njgy", "number": 1749, "title": "Make Canvas Integration work with new UI", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n\nDescription of change\nSolves #1744. The problem was that the LegacyContentApi did not set up the form correctly in the returnResult method, and the frontend wasn't expecting it to contain the form snippet that caused content to be submitted to Canvas.", "createdAt": "2020-05-20T22:12:11Z", "url": "https://github.com/openequella/openEQUELLA/pull/1749", "merged": true, "mergeCommit": {"oid": "6c7b710d6cc642aca8250ff72c7fa546b927b22d"}, "closed": true, "closedAt": "2020-05-22T00:55:28Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjGzWagH2gAyNDIxMDQ1NjgyOmJkMmYwODQyMmI3ZWYyMGUwMjViNDNmNmZiYTU4MWU3ZjEyYWRlMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjdFTKAFqTQxNjExNDA2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/bd2f08422b7ef20e025b43f6fba581e7f12ade06", "committedDate": "2020-05-20T10:48:57Z", "message": "Make Canvas Integration work with new UI\n\nNote: This is a hack, and should be done more elegantly.\nWe should not be using dangerouslySetInnerHTML."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzU2MDEx", "url": "https://github.com/openequella/openEQUELLA/pull/1749#pullrequestreview-415756011", "createdAt": "2020-05-20T22:23:15Z", "commit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMzoxNVrOGYf5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMzoxNVrOGYf5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTY5MA==", "bodyText": "Obviously when we do this properly we don't need r.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428341690", "createdAt": "2020-05-20T22:23:15Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -448,14 +448,15 @@ class LegacyContentApi {\n         info.preventGET()\n         info.getRootRenderContext.setRootResultListener(new LegacyResponseListener(info))\n         LegacyContentController.execute(info)\n-        redirectResponse(info)\n+        val r = redirectResponse(info)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzU3MzM4", "url": "https://github.com/openequella/openEQUELLA/pull/1749#pullrequestreview-415757338", "createdAt": "2020-05-20T22:25:57Z", "commit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNTo1N1rOGYf-Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNTo1N1rOGYf-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0Mjg0Ng==", "bodyText": "I acknowledge I'm the guilty party for this, but when we polish it we should probably do similar to the below with Option / filter / map so that we only include it if there is a form.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428342846", "createdAt": "2020-05-20T22:25:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -491,12 +492,19 @@ class LegacyContentApi {\n           val body = SectionUtils.renderToString(\n             context,\n             wrapBody(context, tr.getNamedResult(context, \"body\")))\n+          val form = context.getForm\n+          val formString: String =\n+            if (form.getAction != null) {\n+              SectionUtils.renderToString(context, form)\n+            } else \"\"\n+\n           val upperbody =\n             SectionUtils.renderToString(context, tr.getNamedResult(context, \"upperbody\"))\n           val scrops = renderScreenOptions(context)\n           val crumbs = renderCrumbs(context, decs).map(SectionUtils.renderToString(context, _))\n           Iterable(\n             Some(\"body\"                                          -> body),\n+            Some(\"form\"                                          -> formString),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzU4MjYz", "url": "https://github.com/openequella/openEQUELLA/pull/1749#pullrequestreview-415758263", "createdAt": "2020-05-20T22:27:57Z", "commit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNzo1N1rOGYgBRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNzo1N1rOGYgBRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MzYyMw==", "bodyText": "Hopefully we can use a more idiomatic scala construct for this to. Maybe a for / yield, or an Option which will make it more straight forward below. (Again, I acknowledge I'm critiquing my own code.)", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428343623", "createdAt": "2020-05-20T22:27:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -491,12 +492,19 @@ class LegacyContentApi {\n           val body = SectionUtils.renderToString(\n             context,\n             wrapBody(context, tr.getNamedResult(context, \"body\")))\n+          val form = context.getForm\n+          val formString: String =\n+            if (form.getAction != null) {\n+              SectionUtils.renderToString(context, form)\n+            } else \"\"\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzU5NjQw", "url": "https://github.com/openequella/openEQUELLA/pull/1749#pullrequestreview-415759640", "createdAt": "2020-05-20T22:31:07Z", "commit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozMTowN1rOGYgGGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozMTowN1rOGYgGGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NDg1OA==", "bodyText": "I wonder if it matters that this is after LegacyForm where as in the legacy UI this 'form' seemed to get rendered before the 'body'. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428344858", "createdAt": "2020-05-20T22:31:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +218,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && <div dangerouslySetInnerHTML={{ __html: form }} />}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/1b08bc737d4acde55e64386ceff64d9c869aceff", "committedDate": "2020-05-21T05:19:45Z", "message": "Use react-html-parser to add the form\n\nRather than using security risk dangerouslySetInnerHtml.\nAlso - remove test strings from LegacyContentApi.scala\nand use idiomatic Scala code to setup the form."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTE0MDY0", "url": "https://github.com/openequella/openEQUELLA/pull/1749#pullrequestreview-416114064", "createdAt": "2020-05-21T12:45:03Z", "commit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo0NTowNFrOGYxa3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo0NTowNFrOGYxa3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyODcwMw==", "bodyText": "Is cross site scripting a concern here?\nThis library does not sanitize inputs.\nhttps://github.com/remarkablemark/html-react-parser#is-this-library-xss-safe", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428628703", "createdAt": "2020-05-21T12:45:04Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +217,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && HtmlParser(form)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 134, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}