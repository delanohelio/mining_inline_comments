{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzM4MDUx", "number": 1490, "title": "#1406 Add permission to access apidocs.do", "bodyText": "Checklist\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n\nDescription of change\n#1406\nProtects the /apidocs.do with the institution-level VIEW_APIDOCS permission.\nAdds in a few autotests.  Looks like the new UI tests weren't working for basic things like the ErrorPage, so I only tested on the old UI.", "createdAt": "2020-02-15T17:16:24Z", "url": "https://github.com/openequella/openEQUELLA/pull/1490", "merged": true, "mergeCommit": {"oid": "a6499ddda04faec5f41f7f341daee12e49e8b05d"}, "closed": true, "closedAt": "2020-02-21T14:47:32Z", "author": {"login": "cbeach47"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEnU2XgH2gAyMzc1NzM4MDUxOjlhZjE2N2Y0YzE0MjM1YWZlZTkyMWY5OTg2ZDc3OWVmMmYxMTYyZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGTnJbgH2gAyMzc1NzM4MDUxOmRhNzA1ODMxMmE3NjYyMThlMWRiNzNlZThkMTVlNGE1NjUzZTJmMzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/9af167f4c14235afee921f9986d779ef2f1162df", "committedDate": "2020-02-15T17:10:51Z", "message": "#1406 Add permission to access apidocs.do"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDc2MjUw", "url": "https://github.com/openequella/openEQUELLA/pull/1490#pullrequestreview-359476250", "createdAt": "2020-02-17T03:50:47Z", "commit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMzo1MDo0OFrOFqX3Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNDowNDo1MFrOFqX_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NTUwMw==", "bodyText": "To get the two failed tests pass in our CI environments, we need to make getMainErrorMessage  work for new New UI. An example is getDetail which is in the same file.", "url": "https://github.com/openequella/openEQUELLA/pull/1490#discussion_r379975503", "createdAt": "2020-02-17T03:50:48Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/admin/ApidocsTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.tle.webtests.test.admin;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+import com.tle.webtests.framework.TestInstitution;\n+import com.tle.webtests.pageobject.AccessDeniedErrorPage;\n+import com.tle.webtests.pageobject.ApidocsPage;\n+import com.tle.webtests.pageobject.LoginPage;\n+import com.tle.webtests.test.AbstractSessionTest;\n+import org.testng.annotations.Test;\n+\n+@TestInstitution(\"fiveo\")\n+public class ApidocsTest extends AbstractSessionTest {\n+\n+  @Test\n+  public void testLoginNoAccess() {\n+    new LoginPage(context).load().login(\"AutoTest\", \"automated\");\n+\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testDefaultNoAccess() {\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testLoginWithAccess() {\n+    new LoginPage(context).load().login(\"AutoTestWithViewApidocs\", \"automated\");\n+    loadAndAssertSuccess();\n+  }\n+\n+  @Test\n+  public void testTleAdminAccess() {\n+    new LoginPage(context).load().login(\"TLE_ADMINISTRATOR\", this.testConfig.getAdminPassword());\n+    loadAndAssertSuccess();\n+  }\n+\n+  private void assertAccessDenied(AccessDeniedErrorPage error) {\n+    assertEquals(error.getMainErrorMessage(), \"Access denied\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NTc0Ng==", "bodyText": "Instead of getDenied, we can call getDetail to retrieve the error message text.", "url": "https://github.com/openequella/openEQUELLA/pull/1490#discussion_r379975746", "createdAt": "2020-02-17T03:52:12Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/admin/ApidocsTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.tle.webtests.test.admin;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+import com.tle.webtests.framework.TestInstitution;\n+import com.tle.webtests.pageobject.AccessDeniedErrorPage;\n+import com.tle.webtests.pageobject.ApidocsPage;\n+import com.tle.webtests.pageobject.LoginPage;\n+import com.tle.webtests.test.AbstractSessionTest;\n+import org.testng.annotations.Test;\n+\n+@TestInstitution(\"fiveo\")\n+public class ApidocsTest extends AbstractSessionTest {\n+\n+  @Test\n+  public void testLoginNoAccess() {\n+    new LoginPage(context).load().login(\"AutoTest\", \"automated\");\n+\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testDefaultNoAccess() {\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testLoginWithAccess() {\n+    new LoginPage(context).load().login(\"AutoTestWithViewApidocs\", \"automated\");\n+    loadAndAssertSuccess();\n+  }\n+\n+  @Test\n+  public void testTleAdminAccess() {\n+    new LoginPage(context).load().login(\"TLE_ADMINISTRATOR\", this.testConfig.getAdminPassword());\n+    loadAndAssertSuccess();\n+  }\n+\n+  private void assertAccessDenied(AccessDeniedErrorPage error) {\n+    assertEquals(error.getMainErrorMessage(), \"Access denied\");\n+    assertEquals(\n+        error.getSubErrorMessage(), \"Sorry you do not have access to view the page you requested.\");\n+    assertEquals(\n+        error.getDenied(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NjI1Mw==", "bodyText": "The New UI does not have a sub error message. So when tests run against New UI, we can skip this assert by using isNewUI.", "url": "https://github.com/openequella/openEQUELLA/pull/1490#discussion_r379976253", "createdAt": "2020-02-17T03:55:40Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/com/tle/webtests/test/admin/ApidocsTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.tle.webtests.test.admin;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+import com.tle.webtests.framework.TestInstitution;\n+import com.tle.webtests.pageobject.AccessDeniedErrorPage;\n+import com.tle.webtests.pageobject.ApidocsPage;\n+import com.tle.webtests.pageobject.LoginPage;\n+import com.tle.webtests.test.AbstractSessionTest;\n+import org.testng.annotations.Test;\n+\n+@TestInstitution(\"fiveo\")\n+public class ApidocsTest extends AbstractSessionTest {\n+\n+  @Test\n+  public void testLoginNoAccess() {\n+    new LoginPage(context).load().login(\"AutoTest\", \"automated\");\n+\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testDefaultNoAccess() {\n+    context.getDriver().get(context.getBaseUrl() + ApidocsPage.getUrl());\n+    AccessDeniedErrorPage error = new AccessDeniedErrorPage(context);\n+    assertAccessDenied(error);\n+  }\n+\n+  @Test\n+  public void testLoginWithAccess() {\n+    new LoginPage(context).load().login(\"AutoTestWithViewApidocs\", \"automated\");\n+    loadAndAssertSuccess();\n+  }\n+\n+  @Test\n+  public void testTleAdminAccess() {\n+    new LoginPage(context).load().login(\"TLE_ADMINISTRATOR\", this.testConfig.getAdminPassword());\n+    loadAndAssertSuccess();\n+  }\n+\n+  private void assertAccessDenied(AccessDeniedErrorPage error) {\n+    assertEquals(error.getMainErrorMessage(), \"Access denied\");\n+    assertEquals(\n+        error.getSubErrorMessage(), \"Sorry you do not have access to view the page you requested.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NjYyNw==", "bodyText": "I am not entirely sure if here is the best place to add this annotation, but I have not found a better place so far...", "url": "https://github.com/openequella/openEQUELLA/pull/1490#discussion_r379976627", "createdAt": "2020-02-17T03:58:05Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/remoting/rest/docs/DocsSection.java", "diffHunk": "@@ -36,6 +37,7 @@\n \n   @ViewFactory private FreemarkerFactory viewFactory;\n \n+  @RequiresPrivilege(priv = \"VIEW_APIDOCS\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NzY2OA==", "bodyText": "Since we already have getDetail, I feel we don't this class at the moment.", "url": "https://github.com/openequella/openEQUELLA/pull/1490#discussion_r379977668", "createdAt": "2020-02-17T04:04:50Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/Tests/src/main/java/com/tle/webtests/pageobject/AccessDeniedErrorPage.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.tle.webtests.pageobject;\n+\n+import com.tle.webtests.framework.PageContext;\n+import org.openqa.selenium.By;\n+\n+public class AccessDeniedErrorPage extends ErrorPage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9af167f4c14235afee921f9986d779ef2f1162df"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0520d8cf16f9370f6d7c0d23ec8e213f45b8c247", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/0520d8cf16f9370f6d7c0d23ec8e213f45b8c247", "committedDate": "2020-02-19T03:20:29Z", "message": "#1406 protected swagger.json|yaml and better tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODM3OTk3", "url": "https://github.com/openequella/openEQUELLA/pull/1490#pullrequestreview-360837997", "createdAt": "2020-02-19T04:38:27Z", "commit": {"oid": "0520d8cf16f9370f6d7c0d23ec8e213f45b8c247"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66c38a9447ecee5a071bed4bd4f17e99791f8cad", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/66c38a9447ecee5a071bed4bd4f17e99791f8cad", "committedDate": "2020-02-20T01:26:00Z", "message": "#1406 Adding more logging for autotest failures in CI builds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "774e8f74401e5aab56f0b2f675368c65f2c3dad5", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/774e8f74401e5aab56f0b2f675368c65f2c3dad5", "committedDate": "2020-02-20T03:45:42Z", "message": "#1406 removing one of the tests for now, and reverting ErrorPage to previous state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8899ddb239b2126cfdadbe911a5401e52703dade", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/8899ddb239b2126cfdadbe911a5401e52703dade", "committedDate": "2020-02-20T05:47:37Z", "message": "#1406 - hiding another test - same travis issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e67d19b1bca1a71226331945a6143918ea2481e", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/8e67d19b1bca1a71226331945a6143918ea2481e", "committedDate": "2020-02-20T17:49:20Z", "message": "#1406 be more definitive on newUI and ErrorPage logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1032547cd038c8d36bf7b53eb84c6890568f288", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/b1032547cd038c8d36bf7b53eb84c6890568f288", "committedDate": "2020-02-20T20:55:21Z", "message": "#1406 logout to prep for test run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da7058312a766218e1db73ee8d15e4a5653e2f37", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/da7058312a766218e1db73ee8d15e4a5653e2f37", "committedDate": "2020-02-20T23:20:35Z", "message": "#1406 pulling back on my overzealous excitement this would work with the logout"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 258, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}