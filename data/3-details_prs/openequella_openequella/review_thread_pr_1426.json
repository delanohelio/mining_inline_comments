{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzMzNTQ2", "number": 1426, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjowN1rODXu1ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTozMDo1M1rODZt-MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjExMjU4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjowN1rOFdMFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjowN1rOFdMFSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MDk4NA==", "bodyText": "Being a new file, this is no longer needed. As we don't run the tooling to check for non-localised strings any more.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366150984", "createdAt": "2020-01-14T04:46:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjE5MTEwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNTo1NTowMlrOFdMzTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoyNToyN1rOFd-Ttw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Mjc2Ng==", "bodyText": "This method has a number of issues which ultimately contribute to poor readability. Primarily this is duplication and excessive nesting. Further, a good chunk of it - including string literals is duplicated in a method further down. Including the method below, I offer the following for comparison:\nAs a comparison, I offer this:\n  private String getGenericLtiParam(HttpServletRequest request, String param,\n      Supplier<String> supplier) {\n    String family =\n        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n    if (StringUtils.isEmpty(family) || StringUtils.isEmpty(param)) {\n      // If invalid inputs provided\n      return null;\n    }\n\n    if (family.matches(\"(canvas)|(desire2learn)\")) {\n      // If request is for an LTI provider we have explicit support for\n      return null;\n    }\n\n    return supplier.get();\n  }\n\n  @Override\n  public String getUserId(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () ->\n        request.getParameter(param)\n    );\n  }\nAs to why I also added the getGenericLtiParam() method, please read on below...", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366162766", "createdAt": "2020-01-14T05:55:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3Mzg3OQ==", "bodyText": "I like the idea to extract the duplicated code.  Thanks for the proposed code, it works fine.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366973879", "createdAt": "2020-01-15T16:25:27Z", "author": {"login": "ddelblanco"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2Mjc2Ng=="}, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjIwNTE2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjowNjo0NFrOFdM73w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoyNTo0M1rOFd-USA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDk1OQ==", "bodyText": "As mentioned in the previous comment, this is a significant duplication of the above (with slight variation). As a result, it provides maintenance concerns - as well as previous concerns around readability.\nContinuing on from the previous code recommendation, this then would look like:\n  public String getUsername(HttpServletRequest request, String param) {\n    return getGenericLtiParam(request, param, () -> {\n      String username = request.getParameter(param);\n      if (StringUtils.isEmpty(username)) {\n        username = request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n      }\n\n      return username;\n    });\n  }", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366164959", "createdAt": "2020-01-14T06:06:44Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request) {\n+    return getUsername(request, null);\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param) && request.getParameterMap().containsKey(param)) {\n+          return request.getParameter(param);\n+        }\n+        return request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n+      }\n+    }\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDAyNA==", "bodyText": "Same as before. Changing it.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r366974024", "createdAt": "2020-01-15T16:25:43Z", "author": {"login": "ddelblanco"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/GenericLtiWrapperExtension.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.tle.integration.lti.generic;\n+\n+import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.core.guice.Bind;\n+import com.tle.web.lti.usermanagement.LtiWrapperExtension;\n+import javax.inject.Singleton;\n+import javax.servlet.http.HttpServletRequest;\n+import org.apache.commons.lang.StringUtils;\n+\n+@SuppressWarnings(\"nls\")\n+@Bind\n+@Singleton\n+public class GenericLtiWrapperExtension implements LtiWrapperExtension {\n+  @Override\n+  public String getUserId(HttpServletRequest request) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param)) {\n+          if (request.getParameterMap().containsKey(param)) {\n+            return request.getParameter(param);\n+          }\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request) {\n+    return getUsername(request, null);\n+  }\n+\n+  @Override\n+  public String getUsername(HttpServletRequest request, String param) {\n+    if (StringUtils.isNotEmpty(\n+        request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE))) {\n+      String family =\n+          request.getParameter(ExternalToolConstants.TOOL_CONSUMER_INFO_PRODUCT_FAMILY_CODE);\n+      if ((!StringUtils.equals(family, \"canvas\"))\n+          && (!StringUtils.equals(family, \"desire2learn\"))) {\n+        if (StringUtils.isNotEmpty(param) && request.getParameterMap().containsKey(param)) {\n+          return request.getParameter(param);\n+        }\n+        return request.getParameter(ExternalToolConstants.LIS_PERSON_SOURCEDID);\n+      }\n+    }\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2NDk1OQ=="}, "originalCommit": {"oid": "463bf37f926b1297f9d775caa2eb29b175086394"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODczMDA2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/plugin-jpf.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMToyODo0MFrOFeLlGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo0ODozOVrOFfn8oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MTMyMw==", "bodyText": "I would set this to something like 9000 so that it is always the last to apply.  That way, more specific extensions (Canvas, Brightspace) will apply first, and then fall back to generic.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367191323", "createdAt": "2020-01-16T01:28:40Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/plugin-jpf.xml", "diffHunk": "@@ -2185,22 +2185,22 @@\n     <parameter id=\"path\" value=\"/canvascipreturn.do\" />\n     <parameter id=\"root\" value=\"bean:/canvascipreturn\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_blackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardltisignon.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardltisignon\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_lti\">\n+    <parameter id=\"path\" value=\"/ltisignon.do\" />\n+    <parameter id=\"root\" value=\"bean:/ltisignon\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnBlackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardlticipreturn.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardlticipreturn\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnLti\">\n+    <parameter id=\"path\" value=\"/lticipreturn.do\" />\n+    <parameter id=\"root\" value=\"bean:/lticipreturn\" />\n   </extension>\n   <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"canvasLtiExt\">\n     <parameter id=\"id\" value=\"canvas\" />\n     <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.canvasextension.CanvasLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"blackboardLtiExt\">\n-    <parameter id=\"id\" value=\"bblti\" />\n-    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.blackboard.BlackboardLtiWrapperExtension\" />\n+  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"genericLtiExt\">\n+    <parameter id=\"id\" value=\"genlti\" />\n+    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.generic.GenericLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NzEwNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367987105", "createdAt": "2020-01-17T15:16:26Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/plugin-jpf.xml", "diffHunk": "@@ -2185,22 +2185,22 @@\n     <parameter id=\"path\" value=\"/canvascipreturn.do\" />\n     <parameter id=\"root\" value=\"bean:/canvascipreturn\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_blackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardltisignon.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardltisignon\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_lti\">\n+    <parameter id=\"path\" value=\"/ltisignon.do\" />\n+    <parameter id=\"root\" value=\"bean:/ltisignon\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnBlackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardlticipreturn.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardlticipreturn\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnLti\">\n+    <parameter id=\"path\" value=\"/lticipreturn.do\" />\n+    <parameter id=\"root\" value=\"bean:/lticipreturn\" />\n   </extension>\n   <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"canvasLtiExt\">\n     <parameter id=\"id\" value=\"canvas\" />\n     <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.canvasextension.CanvasLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"blackboardLtiExt\">\n-    <parameter id=\"id\" value=\"bblti\" />\n-    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.blackboard.BlackboardLtiWrapperExtension\" />\n+  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"genericLtiExt\">\n+    <parameter id=\"id\" value=\"genlti\" />\n+    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.generic.GenericLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MTMyMw=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDY3Mw==", "bodyText": "updated now.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704673", "createdAt": "2020-01-20T19:48:39Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/plugin-jpf.xml", "diffHunk": "@@ -2185,22 +2185,22 @@\n     <parameter id=\"path\" value=\"/canvascipreturn.do\" />\n     <parameter id=\"root\" value=\"bean:/canvascipreturn\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_blackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardltisignon.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardltisignon\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"signon_lti\">\n+    <parameter id=\"path\" value=\"/ltisignon.do\" />\n+    <parameter id=\"root\" value=\"bean:/ltisignon\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnBlackboardLti\">\n-    <parameter id=\"path\" value=\"/blackboardlticipreturn.do\" />\n-    <parameter id=\"root\" value=\"bean:/blackboardlticipreturn\" />\n+  <extension plugin-id=\"com.tle.web.sections\" point-id=\"sectionTree\" id=\"contentItemPlacementsReturnLti\">\n+    <parameter id=\"path\" value=\"/lticipreturn.do\" />\n+    <parameter id=\"root\" value=\"bean:/lticipreturn\" />\n   </extension>\n   <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"canvasLtiExt\">\n     <parameter id=\"id\" value=\"canvas\" />\n     <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.canvasextension.CanvasLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />\n   </extension>\n-  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"blackboardLtiExt\">\n-    <parameter id=\"id\" value=\"bblti\" />\n-    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.blackboard.BlackboardLtiWrapperExtension\" />\n+  <extension plugin-id=\"com.tle.web.lti\" point-id=\"ltiWrapperExtension\" id=\"genericLtiExt\">\n+    <parameter id=\"id\" value=\"genlti\" />\n+    <parameter id=\"bean\" value=\"bean:com.tle.integration.lti.generic.GenericLtiWrapperExtension\" />\n     <parameter id=\"order\" value=\"1000\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MTMyMw=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODczNTM1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/view/editconsumer.ftl", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTozMjoyNFrOFeLoTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNToxMTo0NFrOFevA3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjE0MQ==", "bodyText": "I wouldn't put this in the shared consumer config.  I would put it in a new connector type (called Generic or something) config.\nSee Canvas config, or the current Blackboard config for examples to base it off.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367192141", "createdAt": "2020-01-16T01:32:24Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/resources/view/editconsumer.ftl", "diffHunk": "@@ -21,6 +21,12 @@\n <@setting label=b.key(\"editor.postfix\") help=b.key(\"editor.username.help\")>\n \t<@textfield section=s.postfixField maxlength=50 />\n </@setting>\n+<@setting label=b.key(\"editor.customuserid\") help=b.key(\"editor.customuserid.help\")>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcxNzk2Nw==", "bodyText": "@abidingotter - my understanding is there's no specific Canvas vs Blackboard LTI Consumer config/flow in the UI.  There isn't a dropdown widget to select connector type like there is for the External System Connector.  Am I missing something?", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367717967", "createdAt": "2020-01-17T00:31:01Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/resources/view/editconsumer.ftl", "diffHunk": "@@ -21,6 +21,12 @@\n <@setting label=b.key(\"editor.postfix\") help=b.key(\"editor.username.help\")>\n \t<@textfield section=s.postfixField maxlength=50 />\n </@setting>\n+<@setting label=b.key(\"editor.customuserid\") help=b.key(\"editor.customuserid.help\")>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjE0MQ=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MTg3MA==", "bodyText": "Yes, you are correct.  I was mistaken sorry.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367771870", "createdAt": "2020-01-17T05:11:44Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/resources/view/editconsumer.ftl", "diffHunk": "@@ -21,6 +21,12 @@\n <@setting label=b.key(\"editor.postfix\") help=b.key(\"editor.username.help\")>\n \t<@textfield section=s.postfixField maxlength=50 />\n </@setting>\n+<@setting label=b.key(\"editor.customuserid\") help=b.key(\"editor.customuserid.help\")>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjE0MQ=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODczNzEzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/lang/i18n-resource-centre.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTozMzozOFrOFeLpWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo0OToyOVrOFfn9ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjQwOA==", "bodyText": "I'd leave off the comments about Canvas and Brightspace, as this text shouldn't appear on those connectors if you implement my feedback below about generic configuration.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367192408", "createdAt": "2020-01-16T01:33:38Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/resources/lang/i18n-resource-centre.properties", "diffHunk": "@@ -1321,6 +1321,10 @@ editor.container.option.default=Default\n editor.container.option.embed=Embed\n editor.container.option.newwindow=New window\n editor.customparams=Custom parameters\n+editor.customuserid=Custom User ID\n+editor.customuserid.help=(Optional) To receive the user id from a custom LTI parameter, for example: custom_bb_userid - Canvas and D2L have predefined custom LTI parameters and ignore this configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTIyMA==", "bodyText": "@abidingotter - I am going to leave this text in here as-is since there isn't a way currently to specify a different LTI Consumer.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367985220", "createdAt": "2020-01-17T15:12:55Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/resources/lang/i18n-resource-centre.properties", "diffHunk": "@@ -1321,6 +1321,10 @@ editor.container.option.default=Default\n editor.container.option.embed=Embed\n editor.container.option.newwindow=New window\n editor.customparams=Custom parameters\n+editor.customuserid=Custom User ID\n+editor.customuserid.help=(Optional) To receive the user id from a custom LTI parameter, for example: custom_bb_userid - Canvas and D2L have predefined custom LTI parameters and ignore this configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjQwOA=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDg3NA==", "bodyText": "I moved around the wording to be less noisy.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704874", "createdAt": "2020-01-20T19:49:29Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/resources/lang/i18n-resource-centre.properties", "diffHunk": "@@ -1321,6 +1321,10 @@ editor.container.option.default=Default\n editor.container.option.embed=Embed\n editor.container.option.newwindow=New window\n editor.customparams=Custom parameters\n+editor.customuserid=Custom User ID\n+editor.customuserid.help=(Optional) To receive the user id from a custom LTI parameter, for example: custom_bb_userid - Canvas and D2L have predefined custom LTI parameters and ignore this configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5MjQwOA=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODc0NzE5OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTo0MDoyOVrOFeLvag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo0OTozOVrOFfn9lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg==", "bodyText": "I would pass the actual LtiConsumer object instead of param.  The GenericLtiWrapperExtension can pull out its specific param, and custom wrappers like Canvas can do what it likes to get its own custom parameters out of the LtiConsumer", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367193962", "createdAt": "2020-01-16T01:40:29Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -32,11 +33,33 @@ public String getUserId(HttpServletRequest request) {\n     return null;\n   }\n \n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwNTg2MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368005861", "createdAt": "2020-01-17T15:52:26Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -32,11 +33,33 @@ public String getUserId(HttpServletRequest request) {\n     return null;\n   }\n \n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDkxNg==", "bodyText": "done.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704916", "createdAt": "2020-01-20T19:49:39Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -32,11 +33,33 @@ public String getUserId(HttpServletRequest request) {\n     return null;\n   }\n \n+  @Override\n+  public String getUserId(HttpServletRequest request, String param) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5Mzk2Mg=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODc1MDM0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTo0Mjo0MlrOFeLxRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo1MDo0OFrOFfn-0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg==", "bodyText": "Should remove this one", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194436", "createdAt": "2020-01-16T01:42:42Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTEwMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995101", "createdAt": "2020-01-17T15:31:49Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNTIzNQ==", "bodyText": "done.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368705235", "createdAt": "2020-01-20T19:50:48Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQzNg=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODc1MDYxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTo0Mjo1OFrOFeLxcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo0OTo1NVrOFfn93w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA==", "bodyText": "Should remove this one", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194480", "createdAt": "2020-01-16T01:42:58Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);\n+\n   @Nullable\n   String getUsername(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTQ1OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995459", "createdAt": "2020-01-17T15:32:31Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);\n+\n   @Nullable\n   String getUsername(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNDk5MQ==", "bodyText": "done.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368704991", "createdAt": "2020-01-20T19:49:55Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);\n+\n   @Nullable\n   String getUsername(HttpServletRequest request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDQ4MA=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODc1MTI4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMTo0MzoyNFrOFeLx1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxOTo1MDoxMFrOFfn-MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw==", "bodyText": "I would change String param to LtiConsumer consumer", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367194583", "createdAt": "2020-01-16T01:43:24Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk5NTYzMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r367995632", "createdAt": "2020-01-17T15:32:51Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwNTA3Mw==", "bodyText": "done", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r368705073", "createdAt": "2020-01-20T19:50:10Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LtiWrapperExtension.java", "diffHunk": "@@ -28,9 +28,15 @@\n   @Nullable\n   String getUserId(HttpServletRequest request);\n \n+  @Nullable\n+  String getUserId(HttpServletRequest request, String param);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE5NDU4Mw=="}, "originalCommit": {"oid": "52114502a0bbbee4da158f3d01c1aa70db6da4c1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjkzNzg1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNToyNzozMFrOFgQ5Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTo0MzoyM1rOFgg4XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NTUwNg==", "bodyText": "You're right, we can probably delete it (and the reference to it in the plugin.xml)", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369375506", "createdAt": "2020-01-22T05:27:30Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -19,21 +19,26 @@\n package com.tle.web.lti.usermanagement;\n \n import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import com.tle.core.guice.Bind;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYzNzQ2OQ==", "bodyText": "Since I'm not 100% sure the use case for LisLtiWrapperExtension, and I plan to backport this to 2019.1.3 so I don't want to remove functionality, I'm going to hold off for this effort.  I opened #1435 so there's visibility for future work", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369637469", "createdAt": "2020-01-22T15:43:23Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/lti/usermanagement/LisLtiWrapperExtension.java", "diffHunk": "@@ -19,21 +19,26 @@\n package com.tle.web.lti.usermanagement;\n \n import com.tle.common.externaltools.constants.ExternalToolConstants;\n+import com.tle.common.lti.consumers.entity.LtiConsumer;\n import com.tle.core.guice.Bind;\n import javax.inject.Singleton;\n import javax.servlet.http.HttpServletRequest;\n \n /** @author Aaron */\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NTUwNg=="}, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Mjk0MTkzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTozMDo1M1rOFgQ7rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNzo0MzoyNVrOFglGbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NjE3NQ==", "bodyText": "Should probably be called GenericLtiIntegration?", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369376175", "createdAt": "2020-01-22T05:30:53Z", "author": {"login": "abidingotter"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java", "diffHunk": "@@ -75,32 +74,16 @@\n @Singleton\n @NonNullByDefault\n @SuppressWarnings(\"nls\")\n-public class BlackboardLtiIntegration extends AbstractIntegrationService<BlackboardLtiSessionData> {\n-  private static final Logger LOGGER = Logger.getLogger(BlackboardLtiIntegration.class);\n-\n-  // TODO - I think all this can be removed.\n-  // Omitted logic for now...\n-  //\n-  // private static final String CUSTOM_CANVAS_COURSE_ID = \"custom_bb_course_id\";\n-  // private static final String CUSTOM_CANVAS_API_DOMAIN = \"custom_bb_api_domain\";\n-  // private static final String LIS_COURSE_OFFERING_SOURCEDID = \"lis_course_offering_sourcedid\";\n-  private static final String CONTENT_ITEM_SELECTION_REQUEST = \"ContentItemSelectionRequest\";\n+public class LtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcwNjYwNQ==", "bodyText": "ah good point - done.", "url": "https://github.com/openequella/openEQUELLA/pull/1426#discussion_r369706605", "createdAt": "2020-01-22T17:43:25Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/integration/lti/generic/LtiIntegration.java", "diffHunk": "@@ -75,32 +74,16 @@\n @Singleton\n @NonNullByDefault\n @SuppressWarnings(\"nls\")\n-public class BlackboardLtiIntegration extends AbstractIntegrationService<BlackboardLtiSessionData> {\n-  private static final Logger LOGGER = Logger.getLogger(BlackboardLtiIntegration.class);\n-\n-  // TODO - I think all this can be removed.\n-  // Omitted logic for now...\n-  //\n-  // private static final String CUSTOM_CANVAS_COURSE_ID = \"custom_bb_course_id\";\n-  // private static final String CUSTOM_CANVAS_API_DOMAIN = \"custom_bb_api_domain\";\n-  // private static final String LIS_COURSE_OFFERING_SOURCEDID = \"lis_course_offering_sourcedid\";\n-  private static final String CONTENT_ITEM_SELECTION_REQUEST = \"ContentItemSelectionRequest\";\n+public class LtiIntegration extends AbstractIntegrationService<GenericLtiSessionData> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3NjE3NQ=="}, "originalCommit": {"oid": "e30b75c3ca07540d20200e824c0a69df6c5350a2"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1561, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}