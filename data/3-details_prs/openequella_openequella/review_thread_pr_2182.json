{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3Njk4NzQ2", "number": 2182, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMDozM1rOEYR3Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoyMDoyNlrOEbzN7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODkzOTU1OnYy", "diffSide": "LEFT", "path": "Source/Plugins/Core/com.equella.core/js/.storybook/main.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMDozM1rOHAh3gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMDozM1rOHAh3gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNjkzMA==", "bodyText": "These are now bundled together in essentials https://storybook.js.org/docs/react/essentials/introduction", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r470316930", "createdAt": "2020-08-14T00:10:33Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/.storybook/main.js", "diffHunk": "@@ -1,10 +0,0 @@\n-module.exports = {\n-  stories: [\"../__stories__/**/*.stories.tsx\"],\n-  addons: [\n-    \"@storybook/addon-a11y\",\n-    \"@storybook/addon-actions\",\n-    \"@storybook/addon-docs\",\n-    \"@storybook/addon-knobs\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732d518d25a4a7ffaafaa9b15673ff91e5465fb2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODk0MDQzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/.storybook/main.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMDo0M1rOHAh4BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMDo0M1rOHAh4BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNzA2MQ==", "bodyText": "sets up several addons https://storybook.js.org/docs/react/essentials/introduction", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r470317061", "createdAt": "2020-08-14T00:10:43Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/.storybook/main.ts", "diffHunk": "@@ -0,0 +1,7 @@\n+module.exports = {\n+  stories: [\"../__stories__/**/*\"],\n+  addons: [\n+    \"@storybook/addon-essentials\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732d518d25a4a7ffaafaa9b15673ff91e5465fb2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODk0Mjc2OnYy", "diffSide": "LEFT", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMToxNlrOHAh5eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMToxNlrOHAh5eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNzQzNA==", "bodyText": "no longer needed thanks to built in typescript support", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r470317434", "createdAt": "2020-08-14T00:11:16Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -111,7 +106,6 @@\n     \"enzyme\": \"3.11.0\",\n     \"enzyme-adapter-react-16\": \"1.15.3\",\n     \"enzyme-to-json\": \"3.5.0\",\n-    \"fork-ts-checker-webpack-plugin\": \"5.0.14\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732d518d25a4a7ffaafaa9b15673ff91e5465fb2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODk0MzA1OnYy", "diffSide": "LEFT", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMToyMFrOHAh5qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMToyMFrOHAh5qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNzQ4Mg==", "bodyText": "no longer needed thanks to built in typescript support", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r470317482", "createdAt": "2020-08-14T00:11:20Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -124,7 +118,6 @@\n     \"rewire\": \"5.0.0\",\n     \"storybook-react-router\": \"1.0.8\",\n     \"ts-jest\": \"26.2.0\",\n-    \"ts-loader\": \"8.0.2\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732d518d25a4a7ffaafaa9b15673ff91e5465fb2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODk0NDA5OnYy", "diffSide": "LEFT", "path": "Source/Plugins/Core/com.equella.core/js/package.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMTozMVrOHAh6NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDoxMTozMVrOHAh6NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMxNzYyMA==", "bodyText": "no longer needed thanks to built in typescript support", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r470317620", "createdAt": "2020-08-14T00:11:31Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/package.json", "diffHunk": "@@ -101,7 +97,6 @@\n     \"@types/uuid\": \"8.3.0\",\n     \"argparse\": \"1.0.10\",\n     \"babel-jest\": \"26.3.0\",\n-    \"babel-loader\": \"8.1.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "732d518d25a4a7ffaafaa9b15673ff91e5465fb2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTY2MTAxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNDoxNDo0MFrOHFUAzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoxMjoxMFrOHF8BuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzMjgxMw==", "bodyText": "I'm not seeing any different here to the above story. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475332813", "createdAt": "2020-08-24T04:14:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "diffHunk": "@@ -16,75 +16,58 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import { boolean, select, text } from \"@storybook/addon-knobs\";\n-import MessageInfo from \"../../tsrc/components/MessageInfo\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import MessageInfo, {\n+  MessageInfoProps,\n+} from \"../../tsrc/components/MessageInfo\";\n \n export default {\n   title: \"MessageInfo\",\n   component: MessageInfo,\n-};\n+  argTypes: { onClose: { action: \"onClose\" } },\n+} as Meta<MessageInfoProps>;\n \n-export const DynamicVariant = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant={select(\n-      \"variant\",\n-      { success: \"success\", error: \"error\", info: \"info\", warning: \"warning\" },\n-      \"success\"\n-    )}\n-  />\n+export const DynamicVariant: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+DynamicVariant.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantSuccess = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"success\"\n-  />\n+export const VariantSuccess: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantSuccess.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4ODQwOA==", "bodyText": "#2182 (comment)", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475988408", "createdAt": "2020-08-25T00:12:10Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "diffHunk": "@@ -16,75 +16,58 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import { boolean, select, text } from \"@storybook/addon-knobs\";\n-import MessageInfo from \"../../tsrc/components/MessageInfo\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import MessageInfo, {\n+  MessageInfoProps,\n+} from \"../../tsrc/components/MessageInfo\";\n \n export default {\n   title: \"MessageInfo\",\n   component: MessageInfo,\n-};\n+  argTypes: { onClose: { action: \"onClose\" } },\n+} as Meta<MessageInfoProps>;\n \n-export const DynamicVariant = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant={select(\n-      \"variant\",\n-      { success: \"success\", error: \"error\", info: \"info\", warning: \"warning\" },\n-      \"success\"\n-    )}\n-  />\n+export const DynamicVariant: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+DynamicVariant.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantSuccess = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"success\"\n-  />\n+export const VariantSuccess: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantSuccess.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzMjgxMw=="}, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTY2Mzc2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNDoxNjozNVrOHFUCXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoxMjowMlrOHF8BYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzMzIxNQ==", "bodyText": "Part of the Storybook 6 Args is to promote re-use. So this should be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            VariantError.args = {\n          \n          \n            \n              open: true,\n          \n          \n            \n              title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n          \n          \n            \n              variant: \"error\",\n          \n          \n            \n            };\n          \n          \n            \n            VariantError.args = {\n          \n          \n            \n              ...VariantSuccess.args,\n          \n          \n            \n              variant: \"error\",\n          \n          \n            \n            };\n          \n      \n    \n    \n  \n\nI guess ideally at the top we'd have a simple test, and then we'd possibly end-up with a less confusing name for this context. E.g. Simple.args.\nThis same suggestion is then the same for the below warning and info variants.", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475333215", "createdAt": "2020-08-24T04:16:35Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "diffHunk": "@@ -16,75 +16,58 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import { boolean, select, text } from \"@storybook/addon-knobs\";\n-import MessageInfo from \"../../tsrc/components/MessageInfo\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import MessageInfo, {\n+  MessageInfoProps,\n+} from \"../../tsrc/components/MessageInfo\";\n \n export default {\n   title: \"MessageInfo\",\n   component: MessageInfo,\n-};\n+  argTypes: { onClose: { action: \"onClose\" } },\n+} as Meta<MessageInfoProps>;\n \n-export const DynamicVariant = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant={select(\n-      \"variant\",\n-      { success: \"success\", error: \"error\", info: \"info\", warning: \"warning\" },\n-      \"success\"\n-    )}\n-  />\n+export const DynamicVariant: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+DynamicVariant.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantSuccess = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"success\"\n-  />\n+export const VariantSuccess: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantSuccess.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantError = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"error\"\n-  />\n+export const VariantError: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantError.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"error\",\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4ODMyMQ==", "bodyText": "Thanks for the feedback, refactored to share args", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475988321", "createdAt": "2020-08-25T00:12:02Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/MessageInfo.stories.tsx", "diffHunk": "@@ -16,75 +16,58 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import { boolean, select, text } from \"@storybook/addon-knobs\";\n-import MessageInfo from \"../../tsrc/components/MessageInfo\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import MessageInfo, {\n+  MessageInfoProps,\n+} from \"../../tsrc/components/MessageInfo\";\n \n export default {\n   title: \"MessageInfo\",\n   component: MessageInfo,\n-};\n+  argTypes: { onClose: { action: \"onClose\" } },\n+} as Meta<MessageInfoProps>;\n \n-export const DynamicVariant = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant={select(\n-      \"variant\",\n-      { success: \"success\", error: \"error\", info: \"info\", warning: \"warning\" },\n-      \"success\"\n-    )}\n-  />\n+export const DynamicVariant: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+DynamicVariant.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantSuccess = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"success\"\n-  />\n+export const VariantSuccess: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantSuccess.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"success\",\n+};\n \n-export const VariantError = () => (\n-  <MessageInfo\n-    open={boolean(\"open\", true)}\n-    onClose={action(\"close\")}\n-    title={text(\n-      \"title\",\n-      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n-    )}\n-    variant=\"error\"\n-  />\n+export const VariantError: Story<MessageInfoProps> = (args) => (\n+  <MessageInfo {...args} />\n );\n+VariantError.args = {\n+  open: true,\n+  title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n+  variant: \"error\",\n+};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzMzIxNQ=="}, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTY3MjY3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/AppBarQuery.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNDoyMjo0NlrOHFUHdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTo1NDozOVrOHFVhtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzNDUxOA==", "bodyText": "This was a shame. I see there's some options for auto-generating based on regex, but this feels the best approach for now.", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475334518", "createdAt": "2020-08-24T04:22:46Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/AppBarQuery.stories.tsx", "diffHunk": "@@ -16,14 +16,20 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import AppBarQuery from \"../../tsrc/components/AppBarQuery\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import AppBarQuery, {\n+  AppBarQueryProps,\n+} from \"../../tsrc/components/AppBarQuery\";\n \n export default {\n   title: \"AppBarQuery\",\n   component: AppBarQuery,\n-};\n+  argTypes: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1NzYyMQ==", "bodyText": "I think there may be a better way,  the blog post mentions:\n\nArgs also supercharges addons and brings lots of new features to Storybook, which we\u2019ll expand on over the coming weeks\nAuto-generated actions for event logging\n\nhttps://medium.com/storybookjs/introducing-storybook-args-2dadcdb777cc\nStill waiting for the post that describes the preferred/recommended method.\nFor now this seems to be good enough.", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475357621", "createdAt": "2020-08-24T05:54:39Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/AppBarQuery.stories.tsx", "diffHunk": "@@ -16,14 +16,20 @@\n  * limitations under the License.\n  */\n import * as React from \"react\";\n-import { action } from \"@storybook/addon-actions\";\n-import AppBarQuery from \"../../tsrc/components/AppBarQuery\";\n+import type { Meta, Story } from \"@storybook/react\";\n+import AppBarQuery, {\n+  AppBarQueryProps,\n+} from \"../../tsrc/components/AppBarQuery\";\n \n export default {\n   title: \"AppBarQuery\",\n   component: AppBarQuery,\n-};\n+  argTypes: {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzNDUxOA=="}, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTY4MDkzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/RichEditor.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNDoyODozM1rOHFUMJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoxMjoyMVrOHF8CMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzNTcxOA==", "bodyText": "So to not repeat this, I wonder if we should switch these two stories around and then you can re-use the args for WithHTMLInput. That is, it would be:\nWithHTMLInput.args = {\n  ...WithoutHTMLInput.args,\n  htmlInput: \"<p>Example.</p>\"\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475335718", "createdAt": "2020-08-24T04:28:33Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/RichEditor.stories.tsx", "diffHunk": "@@ -31,17 +32,23 @@ import RichTextEditor from \"../../tsrc/components/RichTextEditor\";\n export default {\n   title: \"RichTextEditor\",\n   component: RichTextEditor,\n-};\n+  argTypes: {\n+    onStateChange: { action: \"onStateChange\" },\n+    imageUploadCallBack: { action: \"imageUploadCallBack\" },\n+  },\n+} as Meta<RichTextEditorProps>;\n \n-const defaultProps = {\n+export const WithHTMLInput: Story<RichTextEditorProps> = (args) => (\n+  <RichTextEditor {...args} />\n+);\n+WithHTMLInput.args = {\n   skinUrl: \"http://localhost:6006/tinymce/skins/ui/oxide\",\n-  onStateChange: action(\"stateChange\"),\n+  htmlInput: \"<p>example</p>\",\n };\n-export const WithHTMLInput = () => (\n-  <RichTextEditor\n-    {...defaultProps}\n-    htmlInput={text(\"htmlInput\", \"<p>example</p>\")}\n-  />\n-);\n \n-export const WithoutHTMLInput = () => <RichTextEditor {...defaultProps} />;\n+export const WithoutHTMLInput: Story<RichTextEditorProps> = (args) => (\n+  <RichTextEditor {...args} />\n+);\n+WithoutHTMLInput.args = {\n+  skinUrl: \"http://localhost:6006/tinymce/skins/ui/oxide\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4ODUyOA==", "bodyText": "#2182 (comment)", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475988528", "createdAt": "2020-08-25T00:12:21Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/RichEditor.stories.tsx", "diffHunk": "@@ -31,17 +32,23 @@ import RichTextEditor from \"../../tsrc/components/RichTextEditor\";\n export default {\n   title: \"RichTextEditor\",\n   component: RichTextEditor,\n-};\n+  argTypes: {\n+    onStateChange: { action: \"onStateChange\" },\n+    imageUploadCallBack: { action: \"imageUploadCallBack\" },\n+  },\n+} as Meta<RichTextEditorProps>;\n \n-const defaultProps = {\n+export const WithHTMLInput: Story<RichTextEditorProps> = (args) => (\n+  <RichTextEditor {...args} />\n+);\n+WithHTMLInput.args = {\n   skinUrl: \"http://localhost:6006/tinymce/skins/ui/oxide\",\n-  onStateChange: action(\"stateChange\"),\n+  htmlInput: \"<p>example</p>\",\n };\n-export const WithHTMLInput = () => (\n-  <RichTextEditor\n-    {...defaultProps}\n-    htmlInput={text(\"htmlInput\", \"<p>example</p>\")}\n-  />\n-);\n \n-export const WithoutHTMLInput = () => <RichTextEditor {...defaultProps} />;\n+export const WithoutHTMLInput: Story<RichTextEditorProps> = (args) => (\n+  <RichTextEditor {...args} />\n+);\n+WithoutHTMLInput.args = {\n+  skinUrl: \"http://localhost:6006/tinymce/skins/ui/oxide\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMzNTcxOA=="}, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc5MjIzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsList.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTozMjowNlrOHFVJ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoxMjo0MFrOHF8DAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTUwOA==", "bodyText": "Ummm, so there seems to be no value setup for this one. What am I missing? \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475351508", "createdAt": "2020-08-24T05:32:06Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsList.stories.tsx", "diffHunk": "@@ -39,25 +44,35 @@ const marks: Mark[] = [\n   { label: \"x8\", value: 7 },\n ];\n \n-export const ListWithTwoItems = () => (\n-  <SettingsList subHeading={text(\"Sub Heading\", \"Sub Heading\")}>\n+type Props = Pick<SettingsListProps, \"subHeading\"> &\n+  Pick<SettingsToggleSwitchProps, \"setValue\" | \"disabled\"> &\n+  Pick<SettingsListControlProps, \"primaryText\" | \"secondaryText\">;\n+\n+export const ListWithTwoItems: Story<Props> = (args) => (\n+  <SettingsList subHeading={args.subHeading}>\n     <SettingsListControl\n       secondaryText=\"Box for checking\"\n       control={\n         <SettingsToggleSwitch\n-          setValue={action(\"Checkbox\")}\n-          disabled={false}\n+          setValue={args.setValue}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4ODczNg==", "bodyText": "good catch, added argTypes for setValue", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475988736", "createdAt": "2020-08-25T00:12:40Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsList.stories.tsx", "diffHunk": "@@ -39,25 +44,35 @@ const marks: Mark[] = [\n   { label: \"x8\", value: 7 },\n ];\n \n-export const ListWithTwoItems = () => (\n-  <SettingsList subHeading={text(\"Sub Heading\", \"Sub Heading\")}>\n+type Props = Pick<SettingsListProps, \"subHeading\"> &\n+  Pick<SettingsToggleSwitchProps, \"setValue\" | \"disabled\"> &\n+  Pick<SettingsListControlProps, \"primaryText\" | \"secondaryText\">;\n+\n+export const ListWithTwoItems: Story<Props> = (args) => (\n+  <SettingsList subHeading={args.subHeading}>\n     <SettingsListControl\n       secondaryText=\"Box for checking\"\n       control={\n         <SettingsToggleSwitch\n-          setValue={action(\"Checkbox\")}\n-          disabled={false}\n+          setValue={args.setValue}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MTUwOA=="}, "originalCommit": {"oid": "1b89854213a6eaaeec51e80688108b98a9089e2e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTg2MTU4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsListControl.stories.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoyMDoyNlrOHF8XTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDoyODoxM1rOHF8rvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk5MzkzMg==", "bodyText": "Ahhh, another sneaky setValue.", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475993932", "createdAt": "2020-08-25T00:20:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsListControl.stories.tsx", "diffHunk": "@@ -38,34 +41,59 @@ const marks: Mark[] = [\n   { label: \"x8\", value: 7 },\n ];\n \n-export const ToggleSwitchControl = () => (\n+type ToggleSwitchControlProps = Pick<\n+  SettingsListControlProps,\n+  \"primaryText\" | \"secondaryText\" | \"divider\"\n+> &\n+  Pick<SettingsToggleSwitchProps, \"disabled\" | \"setValue\" | \"value\">;\n+export const ToggleSwitchControl: Story<ToggleSwitchControlProps> = (args) => (\n   <SettingsListControl\n-    secondaryText={text(\"Secondary Text\", \"Box for checking\")}\n+    primaryText={args.primaryText}\n+    secondaryText={args.secondaryText}\n+    divider={args.divider}\n     control={\n       <SettingsToggleSwitch\n-        disabled={boolean(\"Disabled\", false)}\n+        disabled={args.disabled}\n         id=\"toggle\"\n-        setValue={action(\"Value of checkbox changed\")}\n-        value={boolean(\"Toggle state\", false)}\n+        setValue={args.setValue}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84791a763531fc70600015166d435a33c9b3d508"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk5OTE2Ng==", "bodyText": "updated", "url": "https://github.com/openequella/openEQUELLA/pull/2182#discussion_r475999166", "createdAt": "2020-08-25T00:28:13Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/components/SettingsListControl.stories.tsx", "diffHunk": "@@ -38,34 +41,59 @@ const marks: Mark[] = [\n   { label: \"x8\", value: 7 },\n ];\n \n-export const ToggleSwitchControl = () => (\n+type ToggleSwitchControlProps = Pick<\n+  SettingsListControlProps,\n+  \"primaryText\" | \"secondaryText\" | \"divider\"\n+> &\n+  Pick<SettingsToggleSwitchProps, \"disabled\" | \"setValue\" | \"value\">;\n+export const ToggleSwitchControl: Story<ToggleSwitchControlProps> = (args) => (\n   <SettingsListControl\n-    secondaryText={text(\"Secondary Text\", \"Box for checking\")}\n+    primaryText={args.primaryText}\n+    secondaryText={args.secondaryText}\n+    divider={args.divider}\n     control={\n       <SettingsToggleSwitch\n-        disabled={boolean(\"Disabled\", false)}\n+        disabled={args.disabled}\n         id=\"toggle\"\n-        setValue={action(\"Value of checkbox changed\")}\n-        value={boolean(\"Toggle state\", false)}\n+        setValue={args.setValue}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk5MzkzMg=="}, "originalCommit": {"oid": "84791a763531fc70600015166d435a33c9b3d508"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1827, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}