{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODYyODI1", "number": 1845, "title": "feat(typings): strengthen type checks for axios instance", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nThis includes a number of improvements:\n\nIt ensures that the return type of data is only narrowed when a validator is passed\nit runs prettier on the rest client\nit requires validators to be a type predicate, to ensure they match the assertion", "createdAt": "2020-06-17T13:45:19Z", "url": "https://github.com/openequella/openEQUELLA/pull/1845", "merged": true, "mergeCommit": {"oid": "6076b9954a718dfec91b54fc09b28151ff508656"}, "closed": true, "closedAt": "2020-06-23T02:52:36Z", "author": {"login": "ChristianMurphy"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsSY5TAFqTQzMjgzOTc2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABct6pbSgFqTQzNTM2NzM5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODM5NzY2", "url": "https://github.com/openequella/openEQUELLA/pull/1845#pullrequestreview-432839766", "createdAt": "2020-06-17T23:19:31Z", "commit": {"oid": "28ad64e2de3a339245d8ce0153ce91b5c374ad1f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzoxOTozMVrOGlafXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzoyMzowMlrOGlajhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4NDUwOQ==", "bodyText": "Thanks @ChristianMurphy . So if I just want to search with a transformer, my intuition is I should do\nGET('path..', ()=>transform()) . However, the type of the second parameter is (data: unknown) => data is T which does not match the transformer passed in. And likewise, if I don't need a queryparam, I would doGET('path..', ()=>validate(), ()=>transform()) , but the third parameter is expected to be object.\nI found some people just simply use any as parameters types, or use union types. Is that what we also need to do ?\nTypescript's function overloading seems quite different with other languages that I can read. So please correct me if I am very wrong.", "url": "https://github.com/openequella/openEQUELLA/pull/1845#discussion_r441884509", "createdAt": "2020-06-17T23:19:31Z", "author": {"login": "PenghaiZhang"}, "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -13,27 +13,45 @@ const catchHandler = (error: AxiosError | Error): never => {\n   throw repackageError(error);\n };\n \n-export const GET = <T>(\n+/**\n+ * Executes a HTTP GET for a given path.\n+ *\n+ * @param path The URL path for the target GET\n+ * @param validator A function to perform runtime type checking against the result - typically with typescript-is\n+ * @param queryParams The query parameters to send with the GET request\n+ * @param transformer A function which returns a copy of the raw data from the GET with any required values transformed - this should NOT mutate the input data (transforms should start on a copy/clone of the input)\n+ */\n+export function GET<T>(path: string): Promise<unknown>;\n+export function GET<T>(\n   path: string,\n-  validator?: (data: unknown) => boolean,\n+  validator: (data: unknown) => data is T,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ad64e2de3a339245d8ce0153ce91b5c374ad1f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4NTU3NQ==", "bodyText": "Do we need a generic type if we just return unknown ?", "url": "https://github.com/openequella/openEQUELLA/pull/1845#discussion_r441885575", "createdAt": "2020-06-17T23:23:02Z", "author": {"login": "PenghaiZhang"}, "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -13,27 +13,45 @@ const catchHandler = (error: AxiosError | Error): never => {\n   throw repackageError(error);\n };\n \n-export const GET = <T>(\n+/**\n+ * Executes a HTTP GET for a given path.\n+ *\n+ * @param path The URL path for the target GET\n+ * @param validator A function to perform runtime type checking against the result - typically with typescript-is\n+ * @param queryParams The query parameters to send with the GET request\n+ * @param transformer A function which returns a copy of the raw data from the GET with any required values transformed - this should NOT mutate the input data (transforms should start on a copy/clone of the input)\n+ */\n+export function GET<T>(path: string): Promise<unknown>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ad64e2de3a339245d8ce0153ce91b5c374ad1f"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28ad64e2de3a339245d8ce0153ce91b5c374ad1f", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/28ad64e2de3a339245d8ce0153ce91b5c374ad1f", "committedDate": "2020-06-17T13:40:38Z", "message": "feat(typings): strengthen type checks for axios instance"}, "afterCommit": {"oid": "f4747ff641d6cb52611d4d6a75cf9c430f48c42b", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/f4747ff641d6cb52611d4d6a75cf9c430f48c42b", "committedDate": "2020-06-18T04:51:19Z", "message": "feat(typings): strengthen type checks for axios instance"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4747ff641d6cb52611d4d6a75cf9c430f48c42b", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/f4747ff641d6cb52611d4d6a75cf9c430f48c42b", "committedDate": "2020-06-18T04:51:19Z", "message": "feat(typings): strengthen type checks for axios instance"}, "afterCommit": {"oid": "f23953d973897bd33211afaa6fa5bb7c777f5dc9", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/f23953d973897bd33211afaa6fa5bb7c777f5dc9", "committedDate": "2020-06-18T04:54:41Z", "message": "feat(typings): strengthen type checks for axios instance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTQwMzY0", "url": "https://github.com/openequella/openEQUELLA/pull/1845#pullrequestreview-432940364", "createdAt": "2020-06-18T04:56:05Z", "commit": {"oid": "f23953d973897bd33211afaa6fa5bb7c777f5dc9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNDo1NjowNVrOGlfleQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNDo1NjowNVrOGlfleQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk2Nzk5Mw==", "bodyText": "this shifts the transform to after the GET", "url": "https://github.com/openequella/openEQUELLA/pull/1845#discussion_r441967993", "createdAt": "2020-06-18T04:56:05Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/src/Search.ts", "diffHunk": "@@ -193,11 +193,19 @@ const SEARCH2_API_PATH = '/search2';\n  * @param apiBasePath Base URI to the oEQ institution and API.\n  * @param params Query parameters as search criteria.\n  */\n-export const search = (apiBasePath: string, params?: SearchParams): Promise<Common.PagedResult<SearchResultItem>> => {\n+export const search = (\n+  apiBasePath: string,\n+  params?: SearchParams\n+): Promise<Common.PagedResult<SearchResultItem>> => {\n   return GET<Common.PagedResult<SearchResultItem>>(\n     apiBasePath + SEARCH2_API_PATH,\n-    (data) => is<Common.PagedResult<SearchResultItem>>(data),\n-    params,\n-    (data) => Utils.convertDateFields<Common.PagedResult<SearchResultItem>>(data, [\"createdDate\", \"modifiedDate\"] )\n+    (data): data is Common.PagedResult<SearchResultItem> =>\n+      is<Common.PagedResult<SearchResultItem>>(data),\n+    params\n+  ).then((data) =>\n+    Utils.convertDateFields<Common.PagedResult<SearchResultItem>>(data, [\n+      'createdDate',\n+      'modifiedDate',\n+    ])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23953d973897bd33211afaa6fa5bb7c777f5dc9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14", "committedDate": "2020-06-18T13:13:12Z", "message": "feat(typings): strengthen type checks for axios instance"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f23953d973897bd33211afaa6fa5bb7c777f5dc9", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/f23953d973897bd33211afaa6fa5bb7c777f5dc9", "committedDate": "2020-06-18T04:54:41Z", "message": "feat(typings): strengthen type checks for axios instance"}, "afterCommit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14", "author": {"user": {"login": "ChristianMurphy", "name": "Christian Murphy"}}, "url": "https://github.com/openequella/openEQUELLA/commit/bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14", "committedDate": "2020-06-18T13:13:12Z", "message": "feat(typings): strengthen type checks for axios instance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzY1MDA4", "url": "https://github.com/openequella/openEQUELLA/pull/1845#pullrequestreview-433365008", "createdAt": "2020-06-18T14:51:50Z", "commit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo1MTo1MFrOGlzGTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDo1Mjo1M1rOGlzJrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4NzY5Mg==", "bodyText": "refined the error a bit, it is specifically a TypeErrorhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\nAnd including the url/path in the message for easier tracing.", "url": "https://github.com/openequella/openEQUELLA/pull/1845#discussion_r442287692", "createdAt": "2020-06-18T14:51:50Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -24,17 +24,21 @@ const catchHandler = (error: AxiosError | Error): never => {\n  */\n export const GET = <T>(\n   path: string,\n-  validator?: (data: unknown) => boolean,\n-  queryParams?: object,\n-  transformer?: (data: unknown) => T,\n+  validator: (data: unknown) => data is T,\n+  queryParams?: Parameters<typeof stringify>[0],\n+  transformer?: (data: unknown) => T\n ): Promise<T> =>\n   axios\n-    .get(path, {params: queryParams, paramsSerializer: params => stringify(params)}, )\n-    .then((response: AxiosResponse) => {\n-      const data: any = transformer? transformer(response.data) : response.data;\n-      if (validator && !validator(data)) {\n-        // If a validator is provided, but it fails to validate the provided data...\n-        throw new Error('Data format mismatch with data received from server.');\n+    .get(path, {\n+      params: queryParams,\n+      paramsSerializer: (params) => stringify(params),\n+    })\n+    .then(({ data: rawData }: AxiosResponse<unknown>) => {\n+      const data = transformer ? transformer(rawData) : rawData;\n+      if (!validator(data)) {\n+        throw new TypeError(\n+          `Data format mismatch with data received from server, on request to: \"${path}\"`\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI4ODU1Nw==", "bodyText": "Since this type is passed directly to query-string, updated this to extract the exact typing the library uses.", "url": "https://github.com/openequella/openEQUELLA/pull/1845#discussion_r442288557", "createdAt": "2020-06-18T14:52:53Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/src/AxiosInstance.ts", "diffHunk": "@@ -24,17 +24,21 @@ const catchHandler = (error: AxiosError | Error): never => {\n  */\n export const GET = <T>(\n   path: string,\n-  validator?: (data: unknown) => boolean,\n-  queryParams?: object,\n-  transformer?: (data: unknown) => T,\n+  validator: (data: unknown) => data is T,\n+  queryParams?: Parameters<typeof stringify>[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY2NzQx", "url": "https://github.com/openequella/openEQUELLA/pull/1845#pullrequestreview-435366741", "createdAt": "2020-06-23T00:50:15Z", "commit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY3Mzkw", "url": "https://github.com/openequella/openEQUELLA/pull/1845#pullrequestreview-435367390", "createdAt": "2020-06-23T00:52:25Z", "commit": {"oid": "bf9b1c08c5dfcc1ff5bc4e2fb1f4deb38055fe14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 68, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}