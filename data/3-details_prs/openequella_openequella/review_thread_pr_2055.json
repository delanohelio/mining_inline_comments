{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MjM1NDI3", "number": 2055, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDozNTowMlrOEOhZbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDozNTowMlrOEOhZbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjYyNzAyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNDozNTowMlrOGxt6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTozNjozOFrOGxu-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NTU0MQ==", "bodyText": "The readability here is suffering. And in trying to untangle it, it led me to a more basic question. If there is no query after trimming, then should we call onChange at all? If not, that may indeed enable simplifying this logic quite readily.", "url": "https://github.com/openequella/openEQUELLA/pull/2055#discussion_r454785541", "createdAt": "2020-07-15T04:35:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -53,8 +53,10 @@ export default function SearchBar({ onChange }: SearchBarProps) {\n   const [rawSearchMode, setRawSearchMode] = useState<boolean>(false);\n   const [queryString, setQuery] = React.useState<string>(\"\");\n   const strings = languageStrings.searchpage;\n-  const callOnChange = (query: string) =>\n-    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n+  const callOnChange = (query: string) => {\n+    const trimmedQuery = query.trim();\n+    onChange(trimmedQuery + (rawSearchMode || !trimmedQuery ? \"\" : \"*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47c668feb6b6c5761cd95f354018c345d29d558a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NzI3MA==", "bodyText": "Yes, I think it should.\nFor example, you have a search query \"search1\" and you press the X button to clear the query. OnChange gets called, trimmedQuery would be \"\". It still needs calling so that you get results for no query rather than \"search1\".", "url": "https://github.com/openequella/openEQUELLA/pull/2055#discussion_r454787270", "createdAt": "2020-07-15T04:41:36Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -53,8 +53,10 @@ export default function SearchBar({ onChange }: SearchBarProps) {\n   const [rawSearchMode, setRawSearchMode] = useState<boolean>(false);\n   const [queryString, setQuery] = React.useState<string>(\"\");\n   const strings = languageStrings.searchpage;\n-  const callOnChange = (query: string) =>\n-    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n+  const callOnChange = (query: string) => {\n+    const trimmedQuery = query.trim();\n+    onChange(trimmedQuery + (rawSearchMode || !trimmedQuery ? \"\" : \"*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NTU0MQ=="}, "originalCommit": {"oid": "47c668feb6b6c5761cd95f354018c345d29d558a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5NDUwOA==", "bodyText": "Cool, in that case could you please break it out a bit and improve the readability?", "url": "https://github.com/openequella/openEQUELLA/pull/2055#discussion_r454794508", "createdAt": "2020-07-15T05:07:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -53,8 +53,10 @@ export default function SearchBar({ onChange }: SearchBarProps) {\n   const [rawSearchMode, setRawSearchMode] = useState<boolean>(false);\n   const [queryString, setQuery] = React.useState<string>(\"\");\n   const strings = languageStrings.searchpage;\n-  const callOnChange = (query: string) =>\n-    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n+  const callOnChange = (query: string) => {\n+    const trimmedQuery = query.trim();\n+    onChange(trimmedQuery + (rawSearchMode || !trimmedQuery ? \"\" : \"*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NTU0MQ=="}, "originalCommit": {"oid": "47c668feb6b6c5761cd95f354018c345d29d558a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwMzA0NA==", "bodyText": "Sure thing. That should be done now.", "url": "https://github.com/openequella/openEQUELLA/pull/2055#discussion_r454803044", "createdAt": "2020-07-15T05:36:38Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchBar.tsx", "diffHunk": "@@ -53,8 +53,10 @@ export default function SearchBar({ onChange }: SearchBarProps) {\n   const [rawSearchMode, setRawSearchMode] = useState<boolean>(false);\n   const [queryString, setQuery] = React.useState<string>(\"\");\n   const strings = languageStrings.searchpage;\n-  const callOnChange = (query: string) =>\n-    onChange(query + (rawSearchMode ? \"\" : \"*\"));\n+  const callOnChange = (query: string) => {\n+    const trimmedQuery = query.trim();\n+    onChange(trimmedQuery + (rawSearchMode || !trimmedQuery ? \"\" : \"*\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NTU0MQ=="}, "originalCommit": {"oid": "47c668feb6b6c5761cd95f354018c345d29d558a"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1289, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}