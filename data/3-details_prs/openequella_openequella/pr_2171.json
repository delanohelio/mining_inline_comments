{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDk3OTk4", "number": 2171, "title": "Apply Search filter visibility settings to refine controls", "bodyText": "#1306\nChecklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][]\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nThe visibility of the Owner and Date Modified filters are now controlled by Search settings.  Also, some tweaks were made for  tests that use react-testing-library.\nBoth are enabled.\n\nOwner filter is disabled.\n\nDate modified filter is disabled, too.", "createdAt": "2020-08-12T04:21:47Z", "url": "https://github.com/openequella/openEQUELLA/pull/2171", "merged": true, "mergeCommit": {"oid": "dfaf937e9236445a22da54814308026f0e93b35b"}, "closed": true, "closedAt": "2020-08-13T09:47:39Z", "author": {"login": "PenghaiZhang"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-BNY7gH2gAyNDY2NDk3OTk4OmJhYzI2MmE4OWQ4MGY3YWEwOGYwZTViZWI4OTQ1MjQxNzMzYjhiOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-abR_gFqTQ2NjQ5MDczNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bac262a89d80f7aa08f0e5beb8945241733b8b92", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/bac262a89d80f7aa08f0e5beb8945241733b8b92", "committedDate": "2020-08-12T01:33:55Z", "message": "Apply filter visibility settings to refine controls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/66968286b068331ff99f5f9f2b4736967d9ae39c", "committedDate": "2020-08-12T04:17:01Z", "message": "Tests for refine control visibilities."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjE4Nzk1", "url": "https://github.com/openequella/openEQUELLA/pull/2171#pullrequestreview-465618795", "createdAt": "2020-08-12T06:18:26Z", "commit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjoxODoyNlrOG_TQNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzoxMjowNVrOG_Uomw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAyODkxNg==", "bodyText": "Do we need this? Because according to the doco:\n\nPlease note that this is done automatically if the testing framework you're using supports the afterEach global (like mocha, Jest, and Jasmine).\n\nWe're using Jest, so..... \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469028916", "createdAt": "2020-08-12T06:18:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {\n-    const { container } = render(\n+    page = render(\n       <BrowserRouter>\n         <SearchPage updateTemplate={jest.fn()} />\n       </BrowserRouter>\n     );\n-    // When Pagination shows the correct data, the render is completed.\n-    await waitFor(() =>\n-      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n-    );\n-    return container;\n-  };\n \n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  };\n   beforeEach(async () => {\n-    container = await renderSearchPage();\n+    await renderSearchPage();\n   });\n \n   afterEach(() => {\n+    cleanup();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAyOTgyNg==", "bodyText": "What you've done in this function now matches a generic function I've provided for this test file over in #2172", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469029826", "createdAt": "2020-08-12T06:21:06Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzMTY3NQ==", "bodyText": "This should either be in the \"Refine search by Owner\" describe block, or this combined with the below for date modified should be in their own describe bock, maybe something like: describe(\"Configuring hiding refine search controls\", () => {", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469031675", "createdAt": "2020-08-12T06:26:04Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {\n-    const { container } = render(\n+    page = render(\n       <BrowserRouter>\n         <SearchPage updateTemplate={jest.fn()} />\n       </BrowserRouter>\n     );\n-    // When Pagination shows the correct data, the render is completed.\n-    await waitFor(() =>\n-      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n-    );\n-    return container;\n-  };\n \n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  };\n   beforeEach(async () => {\n-    container = await renderSearchPage();\n+    await renderSearchPage();\n   });\n \n   afterEach(() => {\n+    cleanup();\n     jest.clearAllMocks();\n   });\n \n+  it(\"should not show Owner filter if it is disabled\", async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzMzIyNA==", "bodyText": "I've already canonicalised the method of finding this selector as you can see in the \"Refine Search by Owner\" block, getOwnerFilter().\nIf this test won't be joining the block, then we should move that function out into a helper file.\nBut you'll also note I've further standardised the approach with a generic function for grabbing the selectors #2172. Although they are using the IDs (so not something the user can see), I feel that makes it more robust.\nAnd as a side note, where possible we should use the language strings, not string literals.", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469033224", "createdAt": "2020-08-12T06:30:15Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {\n-    const { container } = render(\n+    page = render(\n       <BrowserRouter>\n         <SearchPage updateTemplate={jest.fn()} />\n       </BrowserRouter>\n     );\n-    // When Pagination shows the correct data, the render is completed.\n-    await waitFor(() =>\n-      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n-    );\n-    return container;\n-  };\n \n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  };\n   beforeEach(async () => {\n-    container = await renderSearchPage();\n+    await renderSearchPage();\n   });\n \n   afterEach(() => {\n+    cleanup();\n     jest.clearAllMocks();\n   });\n \n+  it(\"should not show Owner filter if it is disabled\", async () => {\n+    const ownerSelector = screen.queryByText(\"Owner\", { selector: \"h6\" });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzNTAwNw==", "bodyText": "I'm not sure this is correct. As ownerSelector is an Element instance that belonged to a previously rendered DOM. As a result, you really should be running the getter again. Ideally ownerSelector would be a function, like my aforementioned getOwnerFilter - renamed getOwnerSelector in #2172 .\nSo as a result, you're getting a false positive here - and pretty well always would even if the control was there. To check that though, you could comment out your mocking of the mockSearchSettings value.", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469035007", "createdAt": "2020-08-12T06:34:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {\n-    const { container } = render(\n+    page = render(\n       <BrowserRouter>\n         <SearchPage updateTemplate={jest.fn()} />\n       </BrowserRouter>\n     );\n-    // When Pagination shows the correct data, the render is completed.\n-    await waitFor(() =>\n-      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n-    );\n-    return container;\n-  };\n \n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  };\n   beforeEach(async () => {\n-    container = await renderSearchPage();\n+    await renderSearchPage();\n   });\n \n   afterEach(() => {\n+    cleanup();\n     jest.clearAllMocks();\n   });\n \n+  it(\"should not show Owner filter if it is disabled\", async () => {\n+    const ownerSelector = screen.queryByText(\"Owner\", { selector: \"h6\" });\n+    expect(ownerSelector).toBeInTheDocument();\n+    // Change the setting to disable Owner filter and then re-render.\n+    mockSearchSettings.mockResolvedValueOnce({\n+      ...SearchSettingsModule.defaultSearchSettings,\n+      searchingDisableOwnerFilter: true,\n+    });\n+    page.unmount();\n+    await renderSearchPage();\n+    expect(ownerSelector).not.toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0NDg1Nw==", "bodyText": "My comments above apply here. But here's an additional one: This test is the same as the above test.\nThe only variables are:\n\nselector getter\nmocked setting\n\nAs I did with the UserQuery.test.ts this is a good candidate for a parameterised test. But unlike what I did over there, you'd want to go the table approach.\nSomething probably like (this code I just freestyled right here - disclaimer):\nconst getOwnerSelector = () => /*do stuff*/;\nconst getDateSelector = () => /*do other stuff */;\nconst disableOwnerSelector = {\n    ...SearchSettingsModule.defaultSearchSettings,\n    searchingDisableOwnerFilter: true,\n  };\nconst disableDateModified = {\n    ...SearchSettingsModule.defaultSearchSettings,\n    searchingDisableDateModifiedFilter: true,\n  };\nit.each([\n  ['Owner Selector', getOwnerSelector, disableOwnerSelector],\n  ['Date Selector', getDateSelector, disableDateSelector],\n])('should be possible to disable %s', async (testName, getSelector, disableSelector) => {\n  expect(getSelector()).toBeInTheDocument();\n  disableSelector();\n  page.unmount();\n  await renderSearchPage();\n  expect(getSelector()).not.toBeInTheDocument();\n});", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469044857", "createdAt": "2020-08-12T06:57:21Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -149,31 +149,58 @@ describe(\"Refine search by Owner\", () => {\n });\n \n describe(\"<SearchPage/> with react-testing-library\", () => {\n-  let container: HTMLElement = document.createElement(\"div\");\n+  let page: RenderResult;\n   const renderSearchPage = async () => {\n-    const { container } = render(\n+    page = render(\n       <BrowserRouter>\n         <SearchPage updateTemplate={jest.fn()} />\n       </BrowserRouter>\n     );\n-    // When Pagination shows the correct data, the render is completed.\n-    await waitFor(() =>\n-      screen.getByText(FIRST_PAGE_PAGINATION, { selector: \"p\" })\n-    );\n-    return container;\n-  };\n \n+    await act(async () => {\n+      await searchPromise;\n+    });\n+  };\n   beforeEach(async () => {\n-    container = await renderSearchPage();\n+    await renderSearchPage();\n   });\n \n   afterEach(() => {\n+    cleanup();\n     jest.clearAllMocks();\n   });\n \n+  it(\"should not show Owner filter if it is disabled\", async () => {\n+    const ownerSelector = screen.queryByText(\"Owner\", { selector: \"h6\" });\n+    expect(ownerSelector).toBeInTheDocument();\n+    // Change the setting to disable Owner filter and then re-render.\n+    mockSearchSettings.mockResolvedValueOnce({\n+      ...SearchSettingsModule.defaultSearchSettings,\n+      searchingDisableOwnerFilter: true,\n+    });\n+    page.unmount();\n+    await renderSearchPage();\n+    expect(ownerSelector).not.toBeInTheDocument();\n+  });\n+\n+  it(\"should not show Date modified filter if it is disabled\", async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0NzQxMQ==", "bodyText": "Should we make this optional, so it can kind of default to false?", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469047411", "createdAt": "2020-08-12T07:03:12Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -41,6 +41,10 @@ export interface RefinePanelControl {\n    * Refine control.\n    */\n   component: ReactNode;\n+  /**\n+   * True if the control is configured not to be showed.\n+   */\n+  disabled: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0OTE3OQ==", "bodyText": "hmmmm, because these are getting changed via an effect, if the default is true but then the server says false will there be a momentary rendering of them? (I think I've seen this kind of visual effect with how we show the settings - they initially render in one state, and then swap to what we get from the server.) Maybe none should be rendered until we've heard from the server to ensure smooth UX - rather than disappearing controls.", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469049179", "createdAt": "2020-08-12T07:07:03Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -234,6 +239,7 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n           value={searchPageOptions.owner}\n         />\n       ),\n+      disabled: searchSettings.searchingDisableOwnerFilter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1MTU0Nw==", "bodyText": "To reduce nesting and increase readability, could we:\n{controls\n.filter( c => !c.disabled )\n.map( (control) => (\n  <ListItem ...>\n    ...\n  </ListItem>\n)}", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469051547", "createdAt": "2020-08-12T07:12:05Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -57,20 +61,23 @@ export const RefineSearchPanel = ({ controls }: RefinePanelProps) => {\n       <CardContent>\n         <Typography variant=\"h5\">{title}</Typography>\n         <List>\n-          {controls.map((control) => (\n-            <ListItem key={control.title}>\n-              <Grid\n-                id={`RefineSearchPanel-${control.idSuffix}`}\n-                container\n-                direction=\"column\"\n-              >\n-                <Grid item>\n-                  <RefinePanelControlHeading title={control.title} />\n-                </Grid>\n-                <Grid item>{control.component}</Grid>\n-              </Grid>\n-            </ListItem>\n-          ))}\n+          {controls.map(\n+            (control) =>\n+              !control.disabled && (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66968286b068331ff99f5f9f2b4736967d9ae39c"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2bae287056557243f46fa4e9f0427566380f953", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/d2bae287056557243f46fa4e9f0427566380f953", "committedDate": "2020-08-13T00:53:42Z", "message": "Tweak RefineSearchPanel's props and its return."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abf10e35538f996cbe754e4596a94ad1ed69ebbd", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/abf10e35538f996cbe754e4596a94ad1ed69ebbd", "committedDate": "2020-08-13T01:00:14Z", "message": "Don't use default Search settings in SearchPage.\n\nIf refine controls are disabled, they still appear when the page\nis initially rendered. And after Search settings are retrieved\nthey will disappear. So we want to avoid this bad visual effect."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e21f068b74c107ed7f894caeadc98433e713ad3a", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/e21f068b74c107ed7f894caeadc98433e713ad3a", "committedDate": "2020-08-13T01:07:37Z", "message": "Merge branch 'component/new-search-page' into feature/visibility-of-refine-controls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5737863a2942add4190ea3d787271901d50848b7", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/5737863a2942add4190ea3d787271901d50848b7", "committedDate": "2020-08-13T04:15:10Z", "message": "Refactor tests which check Refine Search controls' visibility\n\n1. Use parameterised test to reduce code duplication; and\n2. Add a new function to find HTML element by custom attributes\n   without throwing errors; and\n3. A few tidy ups for the test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDQ0MjQ3", "url": "https://github.com/openequella/openEQUELLA/pull/2171#pullrequestreview-466444247", "createdAt": "2020-08-13T04:59:16Z", "commit": {"oid": "5737863a2942add4190ea3d787271901d50848b7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDo1OToxN1rOG_8Cdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDo1OToxN1rOG_8Cdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY5NzE0Mg==", "bodyText": "So this is the same as the start of getRefineComponent, so arguably getRefineComponent should have been updated to use this rather than repeating the logic.\nAlthough you have gone with queryByAttribute rather than stay with the container.querySelector. Why was that?", "url": "https://github.com/openequella/openEQUELLA/pull/2171#discussion_r469697142", "createdAt": "2020-08-13T04:59:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -129,6 +130,23 @@ const getRefineSearchComponent = (\n   return e as HTMLElement;\n };\n \n+/**\n+ * Helper function similar to 'getRefineSearchComponent' but returns null instead of\n+ * throwing errors if expected Refine Search component is not found.\n+ *\n+ * @param container The root container to start the search from\n+ * @param componentSuffix Typically the `idSuffix` provided in `SearchPage.tsx`\n+ * @param attribute The custom attribute used to search elements. Default to 'id'.\n+ */\n+const queryRefineSearchComponent = (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5737863a2942add4190ea3d787271901d50848b7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48272fbd7c2c17192e0efd2df5974993e5af0ec1", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/48272fbd7c2c17192e0efd2df5974993e5af0ec1", "committedDate": "2020-08-13T06:25:41Z", "message": "Apply the non-live Search setting to the Status Selector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8099d49f1c3431fbeb45e3dd100b22f44178031d", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/8099d49f1c3431fbeb45e3dd100b22f44178031d", "committedDate": "2020-08-13T06:38:37Z", "message": "Refactor Search page test\n\n1. Add another helper function to re-render Search page; and\n2. Remove duplicated code for 'getRefineSearchComponent'; and\n3. Ensure the Status Selector is enabled before each test case of\n   test suite 'Refine search by status' starts; and\n4. Add a test case for checking the visibility of Status Selector\n   in test suite 'Hide Refine Search controls'."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NDkwNzM3", "url": "https://github.com/openequella/openEQUELLA/pull/2171#pullrequestreview-466490737", "createdAt": "2020-08-13T06:56:43Z", "commit": {"oid": "8099d49f1c3431fbeb45e3dd100b22f44178031d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}