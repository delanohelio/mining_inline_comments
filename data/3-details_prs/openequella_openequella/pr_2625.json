{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTAwMTMx", "number": 2625, "title": "Refactor the logic of converting query params to SearchOptions.", "bodyText": "#2623\nChecklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][]\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nThis PR refactors the logic of how to convert query params to SearchOptions.\nThe biggest change is:\nIf the new search page is open from Quick Search, the location pathname will be searching.do rather than page/search. This means we should call newSearchQueryToSearchOptions instead of legacyQueryStringToSearchOptions.\nHere is a video for the fix.", "createdAt": "2020-12-22T06:25:12Z", "url": "https://github.com/openequella/openEQUELLA/pull/2625", "merged": true, "mergeCommit": {"oid": "5fb9d6749dd496d574b603378492ff28c7b63e88"}, "closed": true, "closedAt": "2021-01-05T02:13:12Z", "author": {"login": "PenghaiZhang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdokVDXgH2gAyNTQzOTAwMTMxOmRkNjI4ZDg3OTkwMmU3NGQ4ZGZhNDJhYjc0NzlkODlkNTE4NzQxNzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds-_bjAFqTU2MTQyMDAxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/dd628d879902e74d8dfa42ab7479d89d51874177", "committedDate": "2020-12-22T06:13:47Z", "message": "Refactor the logic of converting query params to\nSearchOptions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODQ2NDU0", "url": "https://github.com/openequella/openEQUELLA/pull/2625#pullrequestreview-556846454", "createdAt": "2020-12-22T06:26:49Z", "commit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoyNjo0OVrOIJv3rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoyNjo0OVrOIJv3rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5MjM5OQ==", "bodyText": "location.pathname.endsWith(\"searching.do\") can't guarantee the shared link is generated from old UI now due to the support of Quick Search.", "url": "https://github.com/openequella/openEQUELLA/pull/2625#discussion_r547092399", "createdAt": "2020-12-22T06:26:49Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -247,18 +247,23 @@ export const generateCategoryWhereQuery = (\n export const queryStringParamsToSearchOptions = async (\n   location: Location\n ): Promise<SearchOptions | undefined> => {\n-  if (!location.search) return undefined;\n-  const params = new URLSearchParams(location.search);\n-\n-  // If no query strings is of type LegacySearchParams, return undefined.\n-  if (!Array.from(params.keys()).some((key) => LegacySearchParams.guard(key))) {\n+  if (!location.search) {\n     return undefined;\n   }\n-\n-  if (location.pathname.endsWith(\"searching.do\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODU0Mjk5", "url": "https://github.com/openequella/openEQUELLA/pull/2625#pullrequestreview-556854299", "createdAt": "2020-12-22T06:48:25Z", "commit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjo0ODoyNVrOIJwRyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjo1Mzo0N1rOIJwYGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA5OTA4Mw==", "bodyText": "Seems rather verbose, would it be fine to have:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const params = new URLSearchParams(location.search);\n          \n          \n            \n              const searchOptions = params.get(\"searchOptions\");\n          \n          \n            \n              const searchOptions = new URLSearchParams(location.search).get(\"searchOptions\");", "url": "https://github.com/openequella/openEQUELLA/pull/2625#discussion_r547099083", "createdAt": "2020-12-22T06:48:25Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -247,18 +247,23 @@ export const generateCategoryWhereQuery = (\n export const queryStringParamsToSearchOptions = async (\n   location: Location\n ): Promise<SearchOptions | undefined> => {\n-  if (!location.search) return undefined;\n-  const params = new URLSearchParams(location.search);\n-\n-  // If no query strings is of type LegacySearchParams, return undefined.\n-  if (!Array.from(params.keys()).some((key) => LegacySearchParams.guard(key))) {\n+  if (!location.search) {\n     return undefined;\n   }\n-\n-  if (location.pathname.endsWith(\"searching.do\")) {\n+  const params = new URLSearchParams(location.search);\n+  const searchOptions = params.get(\"searchOptions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEwMDY5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // If SearchOptions is in query string, convert the string to a SearchOptions.\n          \n          \n            \n              // Or, if query string contains 'LegacySearchParams', convert the string\n          \n          \n            \n              // to a SearchOptions.\n          \n          \n            \n              // Otherwise, return undefined.\n          \n          \n            \n              // If the query params contain `searchOptions` convert to `SearchOptions` with `newSearchQueryToSearchOptions`.\n          \n          \n            \n              // Else if the query params contain params from legacy `searching.do` (i.e. `LegacySearchParams`) then convert to\n          \n          \n            \n              //   `searchOptions` with `legacyQueryStringToSearchOptions`\n          \n          \n            \n              // For all else, return `undefined`.", "url": "https://github.com/openequella/openEQUELLA/pull/2625#discussion_r547100698", "createdAt": "2020-12-22T06:53:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -247,18 +247,23 @@ export const generateCategoryWhereQuery = (\n export const queryStringParamsToSearchOptions = async (\n   location: Location\n ): Promise<SearchOptions | undefined> => {\n-  if (!location.search) return undefined;\n-  const params = new URLSearchParams(location.search);\n-\n-  // If no query strings is of type LegacySearchParams, return undefined.\n-  if (!Array.from(params.keys()).some((key) => LegacySearchParams.guard(key))) {\n+  if (!location.search) {\n     return undefined;\n   }\n-\n-  if (location.pathname.endsWith(\"searching.do\")) {\n+  const params = new URLSearchParams(location.search);\n+  const searchOptions = params.get(\"searchOptions\");\n+  // If SearchOptions is in query string, convert the string to a SearchOptions.\n+  // Or, if query string contains 'LegacySearchParams', convert the string\n+  // to a SearchOptions.\n+  // Otherwise, return undefined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd628d879902e74d8dfa42ab7479d89d51874177"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a358ee192f6fd5eca618345cbfdd011c61a1a41", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/4a358ee192f6fd5eca618345cbfdd011c61a1a41", "committedDate": "2020-12-22T22:54:39Z", "message": "Reword comment for 'queryStringParamsToSearchOptions'."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDA2Mzkx", "url": "https://github.com/openequella/openEQUELLA/pull/2625#pullrequestreview-561406391", "createdAt": "2021-01-04T22:58:43Z", "commit": {"oid": "4a358ee192f6fd5eca618345cbfdd011c61a1a41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjo1ODo0M1rOIOEHEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjo1ODo0M1rOIOEHEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYxODMyMg==", "bodyText": "what does undefined do in this case?", "url": "https://github.com/openequella/openEQUELLA/pull/2625#discussion_r551618322", "createdAt": "2021-01-04T22:58:43Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchModule.ts", "diffHunk": "@@ -247,18 +247,24 @@ export const generateCategoryWhereQuery = (\n export const queryStringParamsToSearchOptions = async (\n   location: Location\n ): Promise<SearchOptions | undefined> => {\n-  if (!location.search) return undefined;\n-  const params = new URLSearchParams(location.search);\n-\n-  // If no query strings is of type LegacySearchParams, return undefined.\n-  if (!Array.from(params.keys()).some((key) => LegacySearchParams.guard(key))) {\n+  if (!location.search) {\n     return undefined;\n   }\n-\n-  if (location.pathname.endsWith(\"searching.do\")) {\n+  const params = new URLSearchParams(location.search);\n+  const searchOptions = params.get(\"searchOptions\");\n+\n+  // If the query params contain `searchOptions` convert to `SearchOptions` with `newSearchQueryToSearchOptions`.\n+  // Else if the query params contain params from legacy `searching.do` (i.e. `LegacySearchParams`) then convert to\n+  // `searchOptions` with `legacyQueryStringToSearchOptions`.\n+  // For all else, return `undefined`.\n+  if (searchOptions) {\n+    return await newSearchQueryToSearchOptions(searchOptions);\n+  } else if (\n+    Array.from(params.keys()).some((key) => LegacySearchParams.guard(key))\n+  ) {\n     return await legacyQueryStringToSearchOptions(params);\n   }\n-  return await newSearchQueryToSearchOptions(params.get(\"searchOptions\") ?? \"\");\n+  return undefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a358ee192f6fd5eca618345cbfdd011c61a1a41"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158762427bc774a462db36cbfd958dc5ae1ef348", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/158762427bc774a462db36cbfd958dc5ae1ef348", "committedDate": "2021-01-04T23:14:37Z", "message": "Merge branch 'develop' into bugfix/new-search-ui-shared-link-not-working"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDIwMDEx", "url": "https://github.com/openequella/openEQUELLA/pull/2625#pullrequestreview-561420011", "createdAt": "2021-01-04T23:33:18Z", "commit": {"oid": "158762427bc774a462db36cbfd958dc5ae1ef348"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 318, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}