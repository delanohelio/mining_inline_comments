{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MzA3NjU5", "number": 2572, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1OTozOFrOE-574g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzowOTowNlrOE-7oFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mzk2Mzg2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo1OTozOFrOH8T8cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowMDozOVrOH8VKcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMzM3OA==", "bodyText": "What about adding some comments here to explain the logic ?\nThe logic here in my understanding is: if the current path ends with \"/page/search\", return true; if it doesn't , but if new Search UI is enabled and the request is not for an advanced search, then returns true.\nSo I image that if we turn on new Search and the request is for advanced search, we will see LegacyPage, which is what we want.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533003378", "createdAt": "2020-12-01T00:59:38Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -159,7 +161,35 @@ export default function IndexPage() {\n     setFullPageError(err);\n   }, []);\n \n-  function routeSwitch(content?: PageContent) {\n+  const routeSwitch = (content?: PageContent) => {\n+    const oldSearchPagePath = \"/searching.do\";\n+    const newSearchPagePath = \"/page/search\";\n+\n+    const newOrOldSearch = (location: Location): boolean => {\n+      const currentParams = new URLSearchParams(location.search);\n+      const currentPath = location.pathname;\n+\n+      const advancedSearchParamsPresent: boolean =\n+        currentParams.get(\"in\")?.startsWith(\"P\") ?? false;\n+      const advancedSearchRequested: boolean =\n+        currentPath.endsWith(oldSearchPagePath) && advancedSearchParamsPresent;\n+      const newSearchEnabled: boolean =\n+        typeof renderData !== \"undefined\" && renderData?.newSearch;\n+\n+      return (\n+        currentPath.match(newSearchPagePath) !== null ||\n+        (newSearchEnabled && !advancedSearchRequested)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMzM0Nw==", "bodyText": "Yup, sounds like you've got it. But! I'm happy (and see value in) adding some doco here. So will do.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533023347", "createdAt": "2020-12-01T02:00:39Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -159,7 +161,35 @@ export default function IndexPage() {\n     setFullPageError(err);\n   }, []);\n \n-  function routeSwitch(content?: PageContent) {\n+  const routeSwitch = (content?: PageContent) => {\n+    const oldSearchPagePath = \"/searching.do\";\n+    const newSearchPagePath = \"/page/search\";\n+\n+    const newOrOldSearch = (location: Location): boolean => {\n+      const currentParams = new URLSearchParams(location.search);\n+      const currentPath = location.pathname;\n+\n+      const advancedSearchParamsPresent: boolean =\n+        currentParams.get(\"in\")?.startsWith(\"P\") ?? false;\n+      const advancedSearchRequested: boolean =\n+        currentPath.endsWith(oldSearchPagePath) && advancedSearchParamsPresent;\n+      const newSearchEnabled: boolean =\n+        typeof renderData !== \"undefined\" && renderData?.newSearch;\n+\n+      return (\n+        currentPath.match(newSearchPagePath) !== null ||\n+        (newSearchEnabled && !advancedSearchRequested)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwMzM3OA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Mzk4MjQxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMTowNzoyNFrOH8UG5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjoxMjo0MVrOH8VZFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjA1NA==", "bodyText": "I think that once we remove the switch for newSearchEnabled we need to change here accordingly. Do we need to todo to remind? It's not a big deal though.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533006054", "createdAt": "2020-12-01T01:07:24Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -159,7 +161,35 @@ export default function IndexPage() {\n     setFullPageError(err);\n   }, []);\n \n-  function routeSwitch(content?: PageContent) {\n+  const routeSwitch = (content?: PageContent) => {\n+    const oldSearchPagePath = \"/searching.do\";\n+    const newSearchPagePath = \"/page/search\";\n+\n+    const newOrOldSearch = (location: Location): boolean => {\n+      const currentParams = new URLSearchParams(location.search);\n+      const currentPath = location.pathname;\n+\n+      const advancedSearchParamsPresent: boolean =\n+        currentParams.get(\"in\")?.startsWith(\"P\") ?? false;\n+      const advancedSearchRequested: boolean =\n+        currentPath.endsWith(oldSearchPagePath) && advancedSearchParamsPresent;\n+      const newSearchEnabled: boolean =\n+        typeof renderData !== \"undefined\" && renderData?.newSearch;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNDAyMA==", "bodyText": "Good point. When we remove that, then this will indeed change. I'll mark with a TODO. \ud83d\udc4d\n(I'm not to sure what that change will look like mind you, but I guess we can figure that when we get to it - I think we remove the whole check, as we should only be here if NewUI is on).", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533024020", "createdAt": "2020-12-01T02:02:35Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -159,7 +161,35 @@ export default function IndexPage() {\n     setFullPageError(err);\n   }, []);\n \n-  function routeSwitch(content?: PageContent) {\n+  const routeSwitch = (content?: PageContent) => {\n+    const oldSearchPagePath = \"/searching.do\";\n+    const newSearchPagePath = \"/page/search\";\n+\n+    const newOrOldSearch = (location: Location): boolean => {\n+      const currentParams = new URLSearchParams(location.search);\n+      const currentPath = location.pathname;\n+\n+      const advancedSearchParamsPresent: boolean =\n+        currentParams.get(\"in\")?.startsWith(\"P\") ?? false;\n+      const advancedSearchRequested: boolean =\n+        currentPath.endsWith(oldSearchPagePath) && advancedSearchParamsPresent;\n+      const newSearchEnabled: boolean =\n+        typeof renderData !== \"undefined\" && renderData?.newSearch;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjA1NA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNzA5NA==", "bodyText": "Yeah that's what is in my mind.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533027094", "createdAt": "2020-12-01T02:12:41Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -159,7 +161,35 @@ export default function IndexPage() {\n     setFullPageError(err);\n   }, []);\n \n-  function routeSwitch(content?: PageContent) {\n+  const routeSwitch = (content?: PageContent) => {\n+    const oldSearchPagePath = \"/searching.do\";\n+    const newSearchPagePath = \"/page/search\";\n+\n+    const newOrOldSearch = (location: Location): boolean => {\n+      const currentParams = new URLSearchParams(location.search);\n+      const currentPath = location.pathname;\n+\n+      const advancedSearchParamsPresent: boolean =\n+        currentParams.get(\"in\")?.startsWith(\"P\") ?? false;\n+      const advancedSearchRequested: boolean =\n+        currentPath.endsWith(oldSearchPagePath) && advancedSearchParamsPresent;\n+      const newSearchEnabled: boolean =\n+        typeof renderData !== \"undefined\" && renderData?.newSearch;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjA1NA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDAzMTYxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMToyOTo1MFrOH8UjXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjoxMTo1M1rOH8VYHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxMzM0Mg==", "bodyText": "I am trying to think what will happen in Selection Session.\nFor example, we are in the My Resources and we click Search, and the URL must be search.do and does not include in. So this function will true. Consequently, SearchPage will get rendered instead of LegacyPage.\nI want to do some testing but I realise this PR is targeting develop...", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533013342", "createdAt": "2020-12-01T01:29:50Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -172,17 +202,19 @@ export default function IndexPage() {\n         </Route>\n         {newUIRoutes}\n         <Route\n-          render={(p) => (\n-            <LegacyPage\n-              {...mkRouteProps(p)}\n-              errorCallback={errorCallback}\n-              legacyContent={{ content, setLegacyContentProps }}\n-            />\n-          )}\n+          path={[newSearchPagePath, oldSearchPagePath]}\n+          render={(p) =>\n+            newOrOldSearch(window.location) ? (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNDUwNg==", "bodyText": "Ohhh, ummm, aaaahh... Not sure.\nMaybe we merge this into develop first, then once that's done let's attempt a merge over to Selection Session and see what needs to be fixed. Maybe we need to use some of your new inSelectionSession() etc.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533024506", "createdAt": "2020-12-01T02:04:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -172,17 +202,19 @@ export default function IndexPage() {\n         </Route>\n         {newUIRoutes}\n         <Route\n-          render={(p) => (\n-            <LegacyPage\n-              {...mkRouteProps(p)}\n-              errorCallback={errorCallback}\n-              legacyContent={{ content, setLegacyContentProps }}\n-            />\n-          )}\n+          path={[newSearchPagePath, oldSearchPagePath]}\n+          render={(p) =>\n+            newOrOldSearch(window.location) ? (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxMzM0Mg=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNjg0NA==", "bodyText": "Good plan!", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533026844", "createdAt": "2020-12-01T02:11:53Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/IndexPage.tsx", "diffHunk": "@@ -172,17 +202,19 @@ export default function IndexPage() {\n         </Route>\n         {newUIRoutes}\n         <Route\n-          render={(p) => (\n-            <LegacyPage\n-              {...mkRouteProps(p)}\n-              errorCallback={errorCallback}\n-              legacyContent={{ content, setLegacyContentProps }}\n-            />\n-          )}\n+          path={[newSearchPagePath, oldSearchPagePath]}\n+          render={(p) =>\n+            newOrOldSearch(window.location) ? (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxMzM0Mg=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDIyMzQ0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/AdvancedSearchModule.mock.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjo1OTo0MVrOH8WR-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjo1OTo0MVrOH8WR-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MTY1OA==", "bodyText": "nit: might be good to use mocked uuids in a proper format here.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533041658", "createdAt": "2020-12-01T02:59:41Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/AdvancedSearchModule.mock.ts", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as OEQ from \"@openequella/rest-api-client\";\n+\n+export const getAdvancedSearchesFromServerResult: OEQ.Common.BaseEntitySummary[] = [\n+  { name: \"Advanced Search 1\", uuid: \"123\" },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDIzOTA2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzowNzo0OVrOH8WbLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzo1MzowNlrOH8XLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDAxNA==", "bodyText": "Up to preference, but I'd use less abbreviated titles for acc and cur. Without knowing offhand what RefinePanelControl contains, its hard to know at-a-glance what these are for.  Makes sense with the c on line 90 as it is right next to the controls identifier, but here its a bit more opaque.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533044014", "createdAt": "2020-12-01T03:07:49Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -79,9 +83,24 @@ export const RefineSearchPanel = ({\n \n   const { showMore, showLess } = languageStrings.common.action;\n \n-  const [alwaysVisibleControl, ...collapsedControls] = controls.filter(\n-    (c) => !c.disabled\n-  );\n+  const {\n+    visible: alwaysVisibleControls,\n+    collapsed: collapsedControls,\n+  } = controls\n+    .filter((c) => !c.disabled)\n+    .reduce(\n+      (acc, cur: RefinePanelControl) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NTI1Mw==", "bodyText": "These are the conventional params for reduce functions. So better highlights the algorithm.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533055253", "createdAt": "2020-12-01T03:49:13Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -79,9 +83,24 @@ export const RefineSearchPanel = ({\n \n   const { showMore, showLess } = languageStrings.common.action;\n \n-  const [alwaysVisibleControl, ...collapsedControls] = controls.filter(\n-    (c) => !c.disabled\n-  );\n+  const {\n+    visible: alwaysVisibleControls,\n+    collapsed: collapsedControls,\n+  } = controls\n+    .filter((c) => !c.disabled)\n+    .reduce(\n+      (acc, cur: RefinePanelControl) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDAxNA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjMxNg==", "bodyText": "Ah of course my mistake, the accumulator and currentValue. I read this as if it was [acc, cur] : RefinePanelControl. In that case, this is fine to ignore.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533056316", "createdAt": "2020-12-01T03:53:06Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -79,9 +83,24 @@ export const RefineSearchPanel = ({\n \n   const { showMore, showLess } = languageStrings.common.action;\n \n-  const [alwaysVisibleControl, ...collapsedControls] = controls.filter(\n-    (c) => !c.disabled\n-  );\n+  const {\n+    visible: alwaysVisibleControls,\n+    collapsed: collapsedControls,\n+  } = controls\n+    .filter((c) => !c.disabled)\n+    .reduce(\n+      (acc, cur: RefinePanelControl) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDAxNA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDI0MDg0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzowOTowNlrOH8WcUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzo1MDo1OVrOH8XJFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDMwNA==", "bodyText": "Are we forgoing the general rule for openEquella strings only being capitalized on the first word for Advanced and Remote search? If not, this should be changed to \"Access advanced searches\".", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533044304", "createdAt": "2020-12-01T03:09:06Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "diffHunk": "@@ -379,6 +379,9 @@ export const languageStrings = {\n     refineSearchPanel: {\n       title: \"Refine search\",\n     },\n+    advancedSearchSelector: {\n+      title: \"Access Advanced searches\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NTA2OA==", "bodyText": "Strictly following @cathfitz 's convention with 'Access Remote searches'.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533055068", "createdAt": "2020-12-01T03:48:33Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "diffHunk": "@@ -379,6 +379,9 @@ export const languageStrings = {\n     refineSearchPanel: {\n       title: \"Refine search\",\n     },\n+    advancedSearchSelector: {\n+      title: \"Access Advanced searches\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDMwNA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NTc2Ng==", "bodyText": "Okay, no worries.", "url": "https://github.com/openequella/openEQUELLA/pull/2572#discussion_r533055766", "createdAt": "2020-12-01T03:50:59Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/langstrings.ts", "diffHunk": "@@ -379,6 +379,9 @@ export const languageStrings = {\n     refineSearchPanel: {\n       title: \"Refine search\",\n     },\n+    advancedSearchSelector: {\n+      title: \"Access Advanced searches\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0NDMwNA=="}, "originalCommit": {"oid": "5de65baea2add725d0e0bb89f466c68b487edcb8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1599, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}