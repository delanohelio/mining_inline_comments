{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNDAwNTQy", "number": 2581, "title": "Enable course folder selection in Bb LTI flow", "bodyText": "History: #2533\nChecklist\n\n the contributor license agreement is signed\n commit message follows commit guidelines - will squash the commits\n[N/A] tests are included - no Bb LTI / REST tests exist\n screenshots are included showing significant UI changes\n documentation is changed or added - will be opening a PR against the doc site shortly\n\nDescription of change\nThe Bb LTI flow now offers the configuration to enable the right-hand course folder selection area.  This existed in the B2 / WS flows with Bb, and is now being recreated in the LTI / REST flows.\nThis also fixes some caching issues with the original LTI / REST flows.\nOriginal (single folder) view:\n\nThe now enhanced multi-folder view :\n\nThis has only been confirmed to work in the original oEQ UX and the Bb original courses.  Bb ultra course appear to add the content (no errors), but the content does not show up in the lesson modules.\nTo enable (I will add this to the documentation):\n\nSet the LTI Tool Provider placement URL to:\n\n{oEQ-URL}/ltisignon.do?action=structured&connector_uuid={backing-oeq-external-system-connector}\n\n\nAdd the custom parameters:\n\ncourse_id=@X@course.pk_string@X@\ncontent_id=@X@content.id@X@", "createdAt": "2020-12-03T01:51:32Z", "url": "https://github.com/openequella/openEQUELLA/pull/2581", "merged": true, "mergeCommit": {"oid": "adb763163e0fb82c4525da268c36505aa1b49123"}, "closed": true, "closedAt": "2020-12-05T02:47:19Z", "author": {"login": "cbeach47"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiwHLwgFqTU0NDY0MjEyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjBOFAAH2gAyNTMxNDAwNTQyOjMzNzc4ODA3MmI5MTUwN2Q2NjgzODVjNzZiMWJjNmQ0MTExYTEyYTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjQyMTIz", "url": "https://github.com/openequella/openEQUELLA/pull/2581#pullrequestreview-544642123", "createdAt": "2020-12-04T04:04:17Z", "commit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNDoxN1rOH-_38g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNTozNFrOH-_5fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDI3NA==", "bodyText": "My initial reaction here is that it'd be great to see these use Java 8 features, and specifically Stream. However I appreciate it's calling a recursive function and so you want it to end execution on the first match (to avoid unnecessary tree walking).\nBut it would still be great if you could use the Java 8 forEach and perhaps an Optional around the search with findFolder. Just helps to make the code a bit more robust.", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820274", "createdAt": "2020-12-04T04:04:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY2OQ==", "bodyText": "Rather than returning the ol' \"null if not found\", in Java 8 there's usefulness of Optional and all it brings to the calling code. And imagine how nice it'd read here:\nOptional<ConnectorFolder> possibleSubFolder = findFolder(subFolder, folderId);\nif(possibleSubFolder.isPresent()) {\n  return possibleSubFolder.get();\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820669", "createdAt": "2020-12-04T04:05:34Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }\n+\n+  /**\n+   * Recursively searches for a folder with the given ID\n+   *\n+   * @param folder\n+   * @param folderId\n+   * @return null if not found, the children of the folder if found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/b5a0aa01887ddf170f9aa8adc97f9374ab278ac3", "committedDate": "2020-12-04T16:10:44Z", "message": "selection session course folders are now functional for generic LTI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caad86ef1d0bd4fd76011260ccd9c49947f1ad97", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/caad86ef1d0bd4fd76011260ccd9c49947f1ad97", "committedDate": "2020-12-04T16:10:44Z", "message": "Fixed some regressions in the Bb LTI / REST flows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1016489ff2ca946b54d349314572eee0ae74e83c", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/1016489ff2ca946b54d349314572eee0ae74e83c", "committedDate": "2020-12-04T16:10:44Z", "message": "clean up unused code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/1db86f0e806f78619b2575a2e208bed4fc7a1972", "committedDate": "2020-12-03T01:51:07Z", "message": "clean up unused code"}, "afterCommit": {"oid": "1016489ff2ca946b54d349314572eee0ae74e83c", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/1016489ff2ca946b54d349314572eee0ae74e83c", "committedDate": "2020-12-04T16:10:44Z", "message": "clean up unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb3eb17b474f48bcb14938874f84c352f05f5e0", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/ffb3eb17b474f48bcb14938874f84c352f05f5e0", "committedDate": "2020-12-04T23:22:03Z", "message": "Revised to use Optional and streams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337788072b91507d668385c76b1bc6d4111a12a7", "author": {"user": {"login": "cbeach47", "name": "Chris Beach"}}, "url": "https://github.com/openequella/openEQUELLA/commit/337788072b91507d668385c76b1bc6d4111a12a7", "committedDate": "2020-12-05T00:29:52Z", "message": "Add header"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 288, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}