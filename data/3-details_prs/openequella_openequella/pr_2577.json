{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzY0NzA4", "number": 2577, "title": "Parse Youtube Date Modified dates properly", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n\nDescription of change\nThe YouTube controls were not working properly. This is because once oEQ got to parsing the date modified string that was returned for a YouTube result it was found to be unparsable. It used to work properly but updates to the YouTube API involved changes to the date format.\nThis PR addresses the issue by parsing the date properly, in the YoutubeHandler when running Youtube searches and displaying results, in the YoutubeAttachmentSerializer when saving attachments to the database, and YoutubeViewableResource when displaying the resource summary.", "createdAt": "2020-12-02T05:46:38Z", "url": "https://github.com/openequella/openEQUELLA/pull/2577", "merged": true, "mergeCommit": {"oid": "251ba438d6581e2a9c515d8006c1e9dbc9c020a6"}, "closed": true, "closedAt": "2020-12-08T22:05:02Z", "author": {"login": "SammyIsConfused"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiH3DsAH2gAyNTMwNzY0NzA4OjgwYjI0ZjI2ZDJlZTY5MDU2OGY1ZWU3YWZiY2U5ZjZiNmViMzIyZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkJXcuAFqTU0NzE5MDE0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "committedDate": "2020-12-02T05:40:08Z", "message": "Parse Youtube Date Modified dates properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODc5NzI0", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-542879724", "createdAt": "2020-12-02T14:19:38Z", "commit": {"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxOTozOVrOH9dEsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxOTozOVrOH9dEsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMTUyMw==", "bodyText": "Would this a be a place where Joda time, could be dropped in favor of java.Time?\nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-\nhttps://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--\nhttps://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r534201523", "createdAt": "2020-12-02T14:19:39Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,7 +46,10 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n+    final Long date =\n+        ISODateTimeFormat.dateTimeNoMillis()\n+            .parseDateTime((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n+            .getMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzU5NTk1", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-545759595", "createdAt": "2020-12-06T23:09:30Z", "commit": {"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd49cae5073083d559de899ad7dd622eb7e107d", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/5dd49cae5073083d559de899ad7dd622eb7e107d", "committedDate": "2020-12-07T04:36:15Z", "message": "Write util function for parsing date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "398d0ccce04fc0494f12359a1de50ef36d9c625d", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/398d0ccce04fc0494f12359a1de50ef36d9c625d", "committedDate": "2020-12-07T04:36:44Z", "message": "Rework Date parsing to use helper function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/68b89709bafe17fdeef8cbac7fe9947256a9fde7", "committedDate": "2020-12-07T05:07:00Z", "message": "Fix up whitespaces on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODUzMTA0", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-545853104", "createdAt": "2020-12-07T06:09:30Z", "commit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowOTozMFrOIAXX0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjoxODoyMFrOIAXjmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mzg0MA==", "bodyText": "In this case, the intermediate date variable is rather redundant. I'd keep it nice and tidy and simply have:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final Optional<Date> date =\n          \n          \n            \n                    YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n          \n          \n            \n                date.ifPresent(ybean::setUploadedDate);\n          \n          \n            \n                YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n          \n          \n            \n                  .ifPresent(ybean::setUploadedDate);", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537253840", "createdAt": "2020-12-07T06:09:30Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,10 +46,9 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      ybean.setUploadedDate(new Date(date));\n-    }\n+    final Optional<Date> date =\n+        YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n+    date.ifPresent(ybean::setUploadedDate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NDQzOA==", "bodyText": "Similar to above.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Optional<Date> parsedDate =\n          \n          \n            \n                              YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n          \n          \n            \n                          parsedDate.ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n          \n            \n                          YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt())\n          \n          \n            \n                            .ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n      \n    \n    \n  \n\n(Unless I'm missing them being used somewhere else.)", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537254438", "createdAt": "2020-12-07T06:11:25Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java", "diffHunk": "@@ -286,9 +287,10 @@ public void registered(String id, SectionTree tree) {\n \n               YoutubeResultOption result = new YoutubeResultOption(videoId);\n               result.setAuthor(new KeyLabel(ADD_AUTHOR_LABEL, vidInfo.getChannelTitle()));\n-              result.setDate(\n-                  dateRendererFactory.createDateRenderer(new Date(vidInfo.getPublishedAt())));\n-\n+              Optional<Date> parsedDate =\n+                  YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n+              parsedDate.ifPresent(\n+                  date -> result.setDate(dateRendererFactory.createDateRenderer(date)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NTYyNw==", "bodyText": "As above. date redundant.", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537255627", "createdAt": "2020-12-07T06:14:41Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java", "diffHunk": "@@ -188,11 +189,13 @@ public boolean isCustomThumb() {\n     }\n \n     // Uploaded\n-    Long date = (Long) youTubeAttachment.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      commonDetails.add(\n-          makeDetail(UPLOADED, dateRendererFactory.createDateRenderer(new Date(date))));\n-    }\n+    Optional<Date> date =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Njg1Ng==", "bodyText": "Rewrapping into a generic exception can limit possibilities for callers. I'd say just drop the try/catch adn allow the DateTimeParseException to percolate. Or, if you feel it's handy to add the extra message, consider doing so but maybe go with a more meaningful exception - say, IllegalArgumentException or reuse DateTimeParseException.", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537256856", "createdAt": "2020-12-07T06:18:20Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,45 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new RuntimeException(\"Unable to parse youtube date modified: \" + date, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/af6807076afa4f5f51ba2c61107fd435022d0dd8", "committedDate": "2020-12-07T23:55:52Z", "message": "Update the parser function to support existing v2 Youtube attachments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a367caa555aed585ac67c25189503c382e30f8cd", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/a367caa555aed585ac67c25189503c382e30f8cd", "committedDate": "2020-12-07T23:58:44Z", "message": "Remove stray <p> tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf3371a3195c24babe8554dd40f3bce914acf24a", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/cf3371a3195c24babe8554dd40f3bce914acf24a", "committedDate": "2020-12-08T01:39:28Z", "message": "Revert \"Remove stray <p> tag\"\n\nThis reverts commit a367caa555aed585ac67c25189503c382e30f8cd."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjkxMTg2", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-546691186", "createdAt": "2020-12-08T02:10:54Z", "commit": {"oid": "cf3371a3195c24babe8554dd40f3bce914acf24a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjoxMDo1NFrOIBDmtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjoxMDo1NFrOIBDmtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3ODU1MQ==", "bodyText": "I like the rework of this method - and supporting calls. But, why not do an else if(date instanceof String) for this block, and then have a final else block which throws an IllegalArgumentException?\nBest to only assume if you have to.", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537978551", "createdAt": "2020-12-08T02:10:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -86,14 +87,24 @@ public static String formatDuration(String duration) {\n    * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n    * java.util.Date.\n    *\n-   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n    * @return The date represented as a java.util.Date.\n    */\n-  public static Optional<Date> parseDateModifiedToDate(String date) {\n-    Optional<Long> parsedLong = parseDateModifiedToMillis(date);\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n     Optional<Date> parsedDate = Optional.empty();\n-    if (parsedLong.isPresent()) {\n-      parsedDate = Optional.of(new Date(parsedLong.get()));\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3371a3195c24babe8554dd40f3bce914acf24a"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/3be02e275a34d14f29021ac1d5093fd8ba85436a", "committedDate": "2020-12-08T02:23:24Z", "message": "throw IllegalArgumentException if can't cast to long or string"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzM2NzQ0", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-546736744", "createdAt": "2020-12-08T04:28:41Z", "commit": {"oid": "3be02e275a34d14f29021ac1d5093fd8ba85436a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDoyODo0MVrOIBGfuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDoyODo0MVrOIBGfuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNTkxNQ==", "bodyText": "Is this not just something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n          \n          \n            \n                  if (parsedLong.isPresent()) {\n          \n          \n            \n                    parsedDate = Optional.of(new Date(parsedLong.get()));\n          \n          \n            \n                  }\n          \n          \n            \n                  parsedDate = parseDateModifiedToMillis((String) date)\n          \n          \n            \n                    .map(millis -> new Date(millis));\n          \n      \n    \n    \n  \n\nI'm just freestyling there, but hopefully you get the idea.", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r538025915", "createdAt": "2020-12-08T04:28:41Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,60 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new DateTimeParseException(\n+          \"Unable to parse youtube date modified\", date, e.getErrorIndex());\n+    }\n+    return parsedDate;\n+  }\n+\n+  /**\n+   * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n+   * java.util.Date.\n+   *\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n+   * @return The date represented as a java.util.Date.\n+   * @throws IllegalArgumentException if passed in Object is not an instance of long or string\n+   */\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n+    Optional<Date> parsedDate = Optional.empty();\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else if (date instanceof String) {\n+      // assume its an ISO_DATE_TIME string\n+      Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n+      if (parsedLong.isPresent()) {\n+        parsedDate = Optional.of(new Date(parsedLong.get()));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3be02e275a34d14f29021ac1d5093fd8ba85436a"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "author": {"user": null}, "url": "https://github.com/openequella/openEQUELLA/commit/b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "committedDate": "2020-12-08T05:06:59Z", "message": "Simplify function by using flatMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTkwMTQx", "url": "https://github.com/openequella/openEQUELLA/pull/2577#pullrequestreview-547190141", "createdAt": "2020-12-08T12:33:16Z", "commit": {"oid": "b7f97a993b4543ba80b0d09d0c2e1ce51da5e714"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 285, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}