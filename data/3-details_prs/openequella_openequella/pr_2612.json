{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTQ2MTg3", "number": 2612, "title": "Address some ESLint react-hooks/exhaustive-deps warnings", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included checked with existing tests\n\nDescription of change\n\nThis is an initial attempt to address some of the react-hooks/exhaustive-deps warnings. There was more than 30, there are now 24.\nBecause we're just before release, I tried to find the easy ones and flesh out any patterns. (I did start on the DateRangeSelector but got a bit more involved - I was almost there, but ran out of time.)\nThis initial batch resulted in a custom hook being brought in (useError) to encapsulate the pattern of how we deal with errors - when we also want to properly specify our dependencies. But as per the comment, I hope this only hangs around for a short time and is ultimately replaced with a Context and Error Boundary (or multiple).\nThe effort also highlighted the complexity of state we're trying to manage via effects in several places, and I believe we could greatly benefit by bringing in useReducer to several components. I also think that this would be the way to tidy up the SearchPage and some of the more complex Selectors like the DateRangeSelector. (Perhaps the DateRangeSelector may be a good starting point.)\nAlso the effort again drew attention to our pattern with state and effects for making async calls, and reminded me of the value we may gain by bringing in React Async. It'd just be interesting though to first see how that'd fit with our end point for error handling/messaging.\nAnother pattern which emerged was the fetching of values from the server from an effect with dependencies for a single run (i.e. []) which relied on a block level function to make the calls - and possibly do the error handling. This block level function would then be re-used after edits were saved and the data needed to be refreshed - or dare I say, reset. The tidy up of dependencies for this case was to move that function (or just the logic) into an effect which was tied to a state flag called reset which can then be simply toggled when a refresh is needed. This is possibly the main trigger which emphasised the idea of a move to useReducer - with say a 'reset' dispatch action.\nWhile working through I made diligent work of the jest tests after each change, and also undertook manual testing - including tweaking code to throw additional errors and the like. So I believe all is safe.\n(And also, I did sort some imports - thanks IntelliJ - as I worked on files.)", "createdAt": "2020-12-16T07:08:09Z", "url": "https://github.com/openequella/openEQUELLA/pull/2612", "merged": true, "mergeCommit": {"oid": "215f54953712e6a052d25916bd9f3516c5dcf843"}, "closed": true, "closedAt": "2020-12-17T22:51:18Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmo57bAH2gAyNTQwOTQ2MTg3OjlkYjA2OWFmNmY1N2E0Y2RiNzlhN2U3NTY5MzUwYjZkZjFkN2JjOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnF0d_gFqTU1NDc1MjU3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9db069af6f57a4cdb79a7e7569350b6df1d7bc92", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/9db069af6f57a4cdb79a7e7569350b6df1d7bc92", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for UISettingsEditor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "114454af29cc4d301b06bcb310f9935b1b3506bd", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/114454af29cc4d301b06bcb310f9935b1b3506bd", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for SearchFilterSettingsPage\n\nNeeded a bit of work, and really should probably be completely reworked\nto use a reducer. But that's outside of this scope.\n\nAlso, looks like the 'Error' be returned from\ngetSearchSettingsFromServer is no such thing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b22eca15512cbd3e1a35b5d67507f492045d64", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/29b22eca15512cbd3e1a35b5d67507f492045d64", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for SettingsPage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b89f0fe1a7e4c8aae3cf76acf496d3d9a8c87224", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b89f0fe1a7e4c8aae3cf76acf496d3d9a8c87224", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Add new useError hook\n\nThis can be used (for now) to assist managing state and effect\ndependencies related with the way errors are being done."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33c6b18bc9b1a51a4b8e42d466b71d7e0cf41293", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/33c6b18bc9b1a51a4b8e42d466b71d7e0cf41293", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for CollectionSelector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b67e3dfdc8a2cf1458efa23d8178d129fa1ea1", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b7b67e3dfdc8a2cf1458efa23d8178d129fa1ea1", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Apply useError to UISettingEditor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8572189f42568c59af4624528e79fa506127ce0b", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/8572189f42568c59af4624528e79fa506127ce0b", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for MimeTypeFilterEditingDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe21239b1ebc8a1d9fd91aa4f3aba41516557d61", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/fe21239b1ebc8a1d9fd91aa4f3aba41516557d61", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for FacetedSearchSettingsPage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd83166a9b775b7beb2def68e556929fc4ec9fb8", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/fd83166a9b775b7beb2def68e556929fc4ec9fb8", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for FacetedDialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcaddee741efb46799e8c9d880dd3afd94c3515d", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/dcaddee741efb46799e8c9d880dd3afd94c3515d", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Fix react-hooks/exhaustive-deps for NavigationGuard"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d655b05452f6b50a414479514f9176a2873db915", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/d655b05452f6b50a414479514f9176a2873db915", "committedDate": "2020-12-16T06:25:50Z", "message": "chore(front-end): Address react-hooks/exhaustive-deps for SearchBar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/18cbd416b5203005f3eeec91ecd2123c969ea426", "committedDate": "2020-12-16T07:07:03Z", "message": "chore(front-end): Update SettingsPage to use useError"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDA3MzY5", "url": "https://github.com/openequella/openEQUELLA/pull/2612#pullrequestreview-553407369", "createdAt": "2020-12-16T07:09:27Z", "commit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzowOToyN1rOIG2oLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzowOToyN1rOIG2oLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA1NzM4OA==", "bodyText": "I did also ponder this taking an optional deps, however at the time it wasn't needed. Now I wonder if maybe it is for the cases where's it passed an anonymous function using updateTemplate. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544057388", "createdAt": "2020-12-16T07:09:27Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/useError.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { useEffect, useState } from \"react\";\n+\n+/**\n+ * A custom hook to assist with the management of of state (and effect dependencies) for the\n+ * displaying of errors within the New UI Template. Ideally long term this will be replaced\n+ * possibly through the centralising of this via a Context with `useContent`. Further, the\n+ * project will start to make use of Error Boundaries (possibly via `react-error-boundary`).\n+ *\n+ * But for now, we have this...\n+ *\n+ * @param onError A function which typically calls out to updateTemplate to trigger the error\n+ *                mechanisms, but often passed in via props\n+ */\n+export const useError = (\n+  onError: (error: Error) => void\n+): ((error: Error) => void) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjQyNDU1", "url": "https://github.com/openequella/openEQUELLA/pull/2612#pullrequestreview-554242455", "createdAt": "2020-12-17T02:50:49Z", "commit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo1MDo0OVrOIHiRGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo1NDoyNFrOIHiV6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MjM3Nw==", "bodyText": "If this effect depends on open, do we need to put line 89 - 91 in a if statement ?\nif(open) {\n    setName(facet?.name ?? \"\");\n    setSchemaNode(facet?.schemaNode ?? \"\");\n    setMaxResults(facet?.maxResults);\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544772377", "createdAt": "2020-12-17T02:50:49Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetDialog.tsx", "diffHunk": "@@ -83,13 +83,13 @@ const FacetDialog = ({\n   const isSchemaNodeInvalid = validateFacetFields(schemaNode);\n \n   /**\n-   * Initialise textfields' values, depending on 'onClose'.\n+   * Initialise `textfields` values when the dialog is opened.\n    */\n   useEffect(() => {\n     setName(facet?.name ?? \"\");\n     setSchemaNode(facet?.schemaNode ?? \"\");\n     setMaxResults(facet?.maxResults);\n-  }, [onClose]);\n+  }, [open, facet]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MzYxMQ==", "bodyText": "If a language string is changed, users must fresh the page to see the new language string, which means this component will get re-rendered. So is it really useful to make this effect depend on facetedsearchsettingStrings.name?", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544773611", "createdAt": "2020-12-17T02:54:24Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetedSearchSettingsPage.tsx", "diffHunk": "@@ -106,13 +111,12 @@ const FacetedSearchSettingsPage = ({ updateTemplate }: TemplateUpdateProps) => {\n       ...templateDefaults(facetedsearchsettingStrings.name)(tp),\n       backRoute: routes.Settings.to,\n     }));\n-    getFacets();\n-  }, []);\n+  }, [updateTemplate, facetedsearchsettingStrings.name]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1da57fd4c1a9c339071da52833bbcb544f5602b8", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1da57fd4c1a9c339071da52833bbcb544f5602b8", "committedDate": "2020-12-17T04:55:00Z", "message": "chore(front-end): Only initialise textfields on open\n\nMinor optimisation from feedback in PR #2612 . Will also help with a\ndisplay oddity of values reverting as the dialog closes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzUyNTcy", "url": "https://github.com/openequella/openEQUELLA/pull/2612#pullrequestreview-554752572", "createdAt": "2020-12-17T16:07:07Z", "commit": {"oid": "1da57fd4c1a9c339071da52833bbcb544f5602b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 310, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}