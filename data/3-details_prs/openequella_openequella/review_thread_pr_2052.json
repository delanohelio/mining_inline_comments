{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTcyNzE3", "number": 2052, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozOVrOEOekwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMTozMDo0MFrOEOfXeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE2NDUwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozOVrOGxpxlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTozOVrOGxpxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNzg0NA==", "bodyText": "Let's remove this blank line.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454717844", "createdAt": "2020-07-15T00:19:39Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -20,6 +20,7 @@ package com.tle.web.api.search\n \n import java.text.{ParseException, SimpleDateFormat}\n import java.util.Date\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE2NDYyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTo0NVrOGxpxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoxOTo0NVrOGxpxpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxNzg2Mw==", "bodyText": "Let's remove this blank line.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454717863", "createdAt": "2020-07-15T00:19:45Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -32,9 +33,10 @@ import com.tle.core.freetext.queries.FreeTextBooleanQuery\n import com.tle.core.item.serializer.{ItemSerializerItemBean, ItemSerializerService}\n import com.tle.legacy.LegacyGuice\n import com.tle.web.api.interfaces.beans.AbstractExtendableBean\n-import com.tle.web.api.item.equella.interfaces.beans.EquellaItemBean\n+import com.tle.web.api.item.equella.interfaces.beans.{AbstractFileAttachmentBean, EquellaItemBean}\n import com.tle.web.api.item.interfaces.beans.AttachmentBean\n import com.tle.web.api.search.model.{SearchResultAttachment, SearchParam, SearchResultItem}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE2NTk0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyMDoyMVrOGxpyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMToyNjoyMVrOGxq3_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ==", "bodyText": "Can getAttachmentByUuid return null? Or does it simply throw an exception?\nIf it can return null, maybe we should handle it and return false.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718049", "createdAt": "2020-07-15T00:20:21Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxOTY5MQ==", "bodyText": "Good question. I will double check, and adjust accordingly", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454719691", "createdAt": "2020-07-15T00:26:26Z", "author": {"login": "mrblippy"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczMzc1Mg==", "bodyText": "It throws an exception", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454733752", "createdAt": "2020-07-15T01:18:14Z", "author": {"login": "mrblippy"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNTg2OQ==", "bodyText": "Good oh. ;)", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454735869", "createdAt": "2020-07-15T01:26:21Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODA0OQ=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE2OTg3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyMjoyNlrOGxp0kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyNzo1NFrOGxp6Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODYwOA==", "bodyText": "This makes for slightly awkward reading. It'd possibly be improved by either:\n\nUsing named arguments here; or\nUsing a variable.\n\nI think 1 would be worthwhile.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718608", "createdAt": "2020-07-15T00:22:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMDA1NA==", "bodyText": "I think named arguments would be a good approach", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454720054", "createdAt": "2020-07-15T00:27:54Z", "author": {"login": "mrblippy"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODYwOA=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE3MDc1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/model/SearchResultItem.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyMjo1NFrOGxp1Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjowMzozMlrOGxrfJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODc0Mg==", "bodyText": "Javadoc for this parameter is missing.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454718742", "createdAt": "2020-07-15T00:22:54Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/model/SearchResultItem.scala", "diffHunk": "@@ -62,12 +62,15 @@ case class SearchResultItem(\n   * @param id The unique ID of an attachment.\n   * @param description The description of an attachment.\n   * @param preview If an attachment can be previewed or not.\n+  * @param mimeType Mime Type of file based attachments\n   * @param links Attachment's links.\n   */\n case class SearchResultAttachment(\n     attachmentType: String,\n     id: String,\n     description: Option[String],\n     preview: Boolean,\n+    mimeType: Option[String],\n+    isPlaceholderThumb: Boolean,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0NTg5Mw==", "bodyText": "This was added in one of my commits in this PR", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454745893", "createdAt": "2020-07-15T02:03:32Z", "author": {"login": "mrblippy"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/model/SearchResultItem.scala", "diffHunk": "@@ -62,12 +62,15 @@ case class SearchResultItem(\n   * @param id The unique ID of an attachment.\n   * @param description The description of an attachment.\n   * @param preview If an attachment can be previewed or not.\n+  * @param mimeType Mime Type of file based attachments\n   * @param links Attachment's links.\n   */\n case class SearchResultAttachment(\n     attachmentType: String,\n     id: String,\n     description: Option[String],\n     preview: Boolean,\n+    mimeType: Option[String],\n+    isPlaceholderThumb: Boolean,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxODc0Mg=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjE3Njg0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyNjowOFrOGxp4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDoyNjowOFrOGxp4ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcxOTYyNg==", "bodyText": "Not much difference, but using Some(..) here seems to be more scala idiomatic.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454719626", "createdAt": "2020-07-15T00:26:08Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }\n+\n+  /**\n+    * Extract the mimetype for AbstractExtendableBean.\n+    */\n+  def getMimetypeForAttachment[T <: AbstractExtendableBean](bean: T): Option[String] = {\n+    bean match {\n+      case file: AbstractFileAttachmentBean =>\n+        Option(LegacyGuice.mimeTypeService.getMimeTypeForFilename(file.getFilename))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjI5NDM0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMTozMDo0MFrOGxq8sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMTozNjoyMFrOGxrCkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA==", "bodyText": "Perhaps we can this to avoid checking if thumbnail exists for non-file attachments.\ndef thumbExists(itemKey: ItemIdKey, attachBean: AttachmentBean): Boolean = {\nattachBean match {\ncase bean: FileAttachmentBean =>\nval item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\nLegacyGuice.fileSystemService.fileExists(item.getFileHandle, bean.getThumbnail)\ncase _ => false\n}\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454737074", "createdAt": "2020-07-15T01:30:40Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzc1Mg==", "bodyText": "Need to verify if bean.getThumbnail is equivalent to attach.getThumbnail.\nMy testing result is they are the same.", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454737752", "createdAt": "2020-07-15T01:33:22Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczODU3OQ==", "bodyText": "Yeah, i agree. Doing that will simplify things on the front end too", "url": "https://github.com/openequella/openEQUELLA/pull/2052#discussion_r454738579", "createdAt": "2020-07-15T01:36:20Z", "author": {"login": "mrblippy"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -199,19 +201,43 @@ object SearchHelper {\n   /**\n     * Convert a list of AttachmentBean to a list of SearchResultAttachment\n     */\n-  def convertToAttachment(\n-      attachmentBeans: java.util.List[AttachmentBean]): List[SearchResultAttachment] = {\n+  def convertToAttachment(attachmentBeans: java.util.List[AttachmentBean],\n+                          itemKey: ItemIdKey): List[SearchResultAttachment] = {\n     attachmentBeans.asScala\n       .map(\n         att =>\n-          SearchResultAttachment(att.getRawAttachmentType,\n-                                 att.getUuid,\n-                                 Option(att.getDescription),\n-                                 att.isPreview,\n-                                 getLinksFromBean(att)))\n+          SearchResultAttachment(\n+            att.getRawAttachmentType,\n+            att.getUuid,\n+            Option(att.getDescription),\n+            att.isPreview,\n+            getMimetypeForAttachment(att),\n+            !thumbExists(itemKey, att.getUuid),\n+            getLinksFromBean(att)\n+        ))\n       .toList\n   }\n \n+  /**\n+    * Determines if attachment contains a generated thumbnail in filestore\n+    */\n+  def thumbExists(itemKey: ItemIdKey, attachUuid: String): Boolean = {\n+    val item   = LegacyGuice.viewableItemFactory.createNewViewableItem(itemKey)\n+    val attach = item.getAttachmentByUuid(attachUuid)\n+    LegacyGuice.fileSystemService.fileExists(item.getFileHandle, attach.getThumbnail)\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzA3NA=="}, "originalCommit": {"oid": "967d58e9d28568789badbe9c9c6bd10b6c0689f2"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1282, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}