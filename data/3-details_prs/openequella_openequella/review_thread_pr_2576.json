{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTg4NjAw", "number": 2576, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzozNzozN1rOE_Ykkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MzowOVrOE_cH8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODk4MzIzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzozNzozN1rOH9EQfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzozNzozN1rOH9EQfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NDk0Mw==", "bodyText": "There's a small chance here that this test could pass even though no search results have been marked draggable. This is because the expect block is in a function that will only be called if there are 'results'.\nNow obviously we're sure that results has entries, but.... Nowhere here have we confirmed that, so if that mock gets messed up somewhere else we'll never know. Maybe it'd be valid to have an expect above line 725 which confirms getSearchResult.results has a size greater than zero. \ud83e\udd14\nUp to you.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533794943", "createdAt": "2020-12-01T23:37:37Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -703,3 +706,26 @@ describe(\"conversion of parameters to SearchPageOptions\", () => {\n     );\n   });\n });\n+\n+describe(\"In Selection Session\", () => {\n+  const mockGlobalCourseList = jest.spyOn(\n+    LegacySelectionSessionModule,\n+    \"getGlobalCourseList\"\n+  );\n+  mockGlobalCourseList.mockReturnValue({\n+    updateCourseList: jest.fn(),\n+    prepareDraggableAndBind: jest.fn(),\n+  });\n+\n+  it(\"should make each Search result Item draggable\", async () => {\n+    updateMockGetRenderData(basicRenderData);\n+    mockSearch.mockResolvedValue(getSearchResult);\n+    await renderSearchPage();\n+\n+    getSearchResult.results.forEach(({ uuid }) => {\n+      expect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODk4OTkyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/SearchResult.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0MDowN1rOH9EUMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0MDowN1rOH9EUMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5NTg5MQ==", "bodyText": "Similar concern as above with potential for expect never being called.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533795891", "createdAt": "2020-12-01T23:40:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/SearchResult.test.tsx", "diffHunk": "@@ -306,5 +310,15 @@ describe(\"<SearchResult/>\", () => {\n       expect(expandedAttachment.queryByText(\"image.png\")).toBeVisible();\n       expect(collapsedAttachment.queryByText(\"config.json\")).not.toBeVisible();\n     });\n+\n+    it(\"should make each attachment draggable\", async () => {\n+      updateMockGetRenderData(basicRenderData);\n+      await renderSearchResult(mockData.attachSearchObj);\n+      mockData.attachSearchObj.attachments!.forEach((attachment) => {\n+        expect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTAwMzkyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0NTo0N1rOH9EcQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0NTo0N1rOH9EcQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5Nzk1Mw==", "bodyText": "This is a super minor thing - so feel free to ignore - but, do we really need to prefix the classes (which end up in the DOM and on the React side) with New. Could these just be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n          \n          \n            \n            \t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n          \n          \n            \n            \t\tvar newSearchPageItemSelector = '.SearchPage-Item';\n          \n          \n            \n            \t\tvar newSearchPageAttachmentSelector = '.SearchPage-Attachment';", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533797953", "createdAt": "2020-12-01T23:45:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTAwNzY3OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0NzoyNFrOH9EehQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0NzoyNFrOH9EehQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5ODUzMw==", "bodyText": "To keep things tight.... Should we attempt to use the class directly from CourseList - once it's added to the declare etc?", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533798533", "createdAt": "2020-12-01T23:47:24Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -329,9 +341,17 @@ export default function SearchResult({\n           filePath\n         );\n         return (\n-          <ListItem key={id} button className={classes.nested}>\n+          <ListItem\n+            key={id}\n+            id={id}\n+            button\n+            className={`${classes.nested} NewSearchPage-Attachment`} // Give a class so each attachment can be dropped to the course list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTAwODE1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0Nzo0MFrOH9Eezw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMzo0Nzo0MFrOH9Eezw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5ODYwNw==", "bodyText": "As above:\n\nTo keep things tight.... Should we attempt to use the class directly from CourseList - once it's added to the declare etc?", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533798607", "createdAt": "2020-12-01T23:47:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -452,7 +472,19 @@ export default function SearchResult({\n \n   const itemPrimaryContent =\n     inSelectionSession && !isSelectSummaryButtonDisabled() ? (\n-      <Grid container alignItems=\"center\">\n+      <Grid\n+        id={uuid}\n+        container\n+        alignItems=\"center\"\n+        className=\"NewSearchPage-Item\" // Give a class so each item can be dropped to the course list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTA1OTYwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowNzo0N1rOH9E73A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMjo0Mjo0M1rOH9IIDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjA0NA==", "bodyText": "I have a sneaky suspicion that eslint will throw an exhaustive-deps warning for useEffects like these - since you refer to inSelectionSession and prepareDraggable without them being in the dependencies array. \ud83e\udd14 Though it is likely that adding either of them will change functionality - probably in a way that doesn't work out.\nI don't have a recommendation on how to avoid that - just noting that it adds to the work to be addressed on squashing those warnings.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806044", "createdAt": "2020-12-02T00:07:47Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -182,6 +185,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     });\n   }, [filterExpansion, pagedSearchResult]);\n \n+  // In Selection Session, once a new search result is returned, make each\n+  // new search result Item draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      pagedSearchResult.results.forEach(({ uuid }) => {\n+        prepareDraggable(uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1MjkwMw==", "bodyText": "Yes I see this warning React Hook useEffect has a missing dependency: 'inSelectionSession'. Either include it or remove the dependency array.\nBut since inSelectionSession is not in state, I can't see why we need to include it in the dependency array.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533852903", "createdAt": "2020-12-02T02:24:55Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -182,6 +185,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     });\n   }, [filterExpansion, pagedSearchResult]);\n \n+  // In Selection Session, once a new search result is returned, make each\n+  // new search result Item draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      pagedSearchResult.results.forEach(({ uuid }) => {\n+        prepareDraggable(uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjA0NA=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1Mzg4NQ==", "bodyText": "I can move the declaration of inSelectionSession inside the useEffect to avoid this warning though.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533853885", "createdAt": "2020-12-02T02:28:18Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -182,6 +185,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     });\n   }, [filterExpansion, pagedSearchResult]);\n \n+  // In Selection Session, once a new search result is returned, make each\n+  // new search result Item draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      pagedSearchResult.results.forEach(({ uuid }) => {\n+        prepareDraggable(uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjA0NA=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1ODMxOA==", "bodyText": "Yup, cool. So long as that all works it'll be happy.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533858318", "createdAt": "2020-12-02T02:42:43Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -182,6 +185,16 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n     });\n   }, [filterExpansion, pagedSearchResult]);\n \n+  // In Selection Session, once a new search result is returned, make each\n+  // new search result Item draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      pagedSearchResult.results.forEach(({ uuid }) => {\n+        prepareDraggable(uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjA0NA=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTA2MDI5OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowODowOFrOH9E8Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowODowOFrOH9E8Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjE1MQ==", "bodyText": "Same as above.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806151", "createdAt": "2020-12-02T00:08:08Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -218,6 +221,15 @@ export default function SearchResult({\n     };\n   }, [attachments, getViewerDetails]);\n \n+  // In Selection Session, make each attachment draggable.\n+  useEffect(() => {\n+    if (inSelectionSession) {\n+      attachmentsWithViewerDetails.forEach(({ attachment }) => {\n+        prepareDraggable(attachment.id, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTA2MzYyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowOToyN1rOH9E-Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDowOTo1M1rOH9E-ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjYzMA==", "bodyText": "Indenting looks pretty wacky here - I could be wrong.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806630", "createdAt": "2020-12-02T00:09:27Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjc3OA==", "bodyText": "Actually scratch that, it does line up. The nesting above threw me off.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533806778", "createdAt": "2020-12-02T00:09:53Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNjYzMA=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTA2NzAwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMDoxMDo0OFrOH9FACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MDozN1rOH9JXjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg==", "bodyText": "Wondering if there is a more concise way to construct this string - but feel free to ignore.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533807112", "createdAt": "2020-12-02T00:10:48Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1NDg0Ng==", "bodyText": "We can put these strings into an array and then use join().", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533854846", "createdAt": "2020-12-02T02:31:16Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1NDk4MA==", "bodyText": "I'm happy for this to stay as is for no other reason then to minimise any impact on the good ol' days.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533854980", "createdAt": "2020-12-02T02:31:42Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg2MTg1Mg==", "bodyText": "Ah do you want me to revert 46cbf5f ?", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533861852", "createdAt": "2020-12-02T02:54:08Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODY3MA==", "bodyText": "Up to you. Just make sure you check the \"good ol' days\". \ud83d\ude09", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533878670", "createdAt": "2020-12-02T03:50:37Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -63,115 +63,148 @@ var CourseList = {\n \t\tvar itemResultSelector = '.selectable.' + itemResultClass;\n \t\tvar itemSummarySelector = \"h2.\" + itemSummaryClass;\n \t\tvar attachmentSelector = '.selectable .attachmentrow.with-select';\n+\t\tvar newSearchPageItemSelector = '.NewSearchPage-Item';\n+\t\tvar newSearchPageAttachmentSelector = '.NewSearchPage-Attachment';\n \n-\t\tvar dropCallback = function(event, ui)\n-\t\t{\n-\t\t\tvar $res = $(ui.draggable);\n-\t\t\tvar $data = $res.find('[data-itemuuid]');\n-\t\t\tif ($data.length == 0)\n-\t\t\t{\n-\t\t\t\t$data = $res;\n-\t\t\t}\n-\t\t\tvar uuid = $data.attr('data-itemuuid');\n-\t\t\tvar version = 0 + $data.attr('data-itemversion');\n-\t\t\tvar attachmentUuid = $data.attr('data-attachmentuuid');\n-\t\t\tvar type = (attachmentUuid ? 'a' : 'p');\n-\t\t\tvar extensionType = $data.attr('data-extensiontype');\n-\n-\t\t\tvar $target = $(this);\n-\t\t\tvar folder = $target.attr('data-folderid');\n-\n-\t\t\tif (ajaxDropCallback)\n-\t\t\t{\n-\t\t\t\tajaxDropCallback(\n-\t\t\t\t\tJSON.stringify({\n-\t\t\t\t\t\t\"uuid\": uuid,\n-\t\t\t\t\t\t\"version\": version,\n-\t\t\t\t\t\t\"type\": type,\n-\t\t\t\t\t\t\"attachmentUuid\": attachmentUuid,\n-\t\t\t\t\t\t\"folderId\": folder,\n-\t\t\t\t\t\t\"extensionType\": extensionType}),\n-\t\t\t\t\tfolder);\n-\t\t\t}\n-\t\t}\n-\t\tvar makeHelper = function()\n-\t\t{\n-\t\t\tvar $dragged = $(this);\n-\t\t\tvar $div = $dragged.clone();\n-\t\t\t$div.find('button').remove();\n-\t\t\tdebug('dw' + $dragged.width());\n-\t\t\tdebug('dh' + $dragged.height());\n-\t\t\t$div.width($dragged.width());\n-\t\t\t$div.height($dragged.height());\n-\t\t\t$div.zIndex(10000);\n-\t\t\treturn $div;\n-\t\t};\n-\t\tvar draggableOpts = {\n-\t\t\t\tcursor: 'move',\n-\t\t\t\tdistance: 10,\n-\t\t\t\thelper: makeHelper,\n-\t\t\t\topacity: 0.8,\n-\t\t\t\trevert: 'invalid',\n-\t\t\t\tscroll: false\n-\t\t\t};\n-\n-\t\tif (doItems)\n-\t\t{\n-\t\t\tvar itemListWatcher = function()\n-\t\t\t{\n-\t\t\t\t$(listSelector + ' ' + itemResultSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(itemListWatcher);\n-\t\t\t$(document).bind('equella_searchresults.courselist', itemListWatcher);\n-\n-\t\t\t$(function()\n-\t\t\t{\n-\t\t\t\t$(itemSummarySelector).draggable(draggableOpts);\n-\t\t\t});\n-\t\t}\n+    var dropCallback = function(event, ui)\n+    {\n+      var $res = $(ui.draggable);\n+      var $data = $res.find('[data-itemuuid]');\n+      if ($data.length == 0)\n+      {\n+        $data = $res;\n+      }\n+      var uuid = $data.attr('data-itemuuid');\n+      var version = 0 + $data.attr('data-itemversion');\n+      var attachmentUuid = $data.attr('data-attachmentuuid');\n+      var type = (attachmentUuid ? 'a' : 'p');\n+      var extensionType = $data.attr('data-extensiontype');\n+\n+      var $target = $(this);\n+      var folder = $target.attr('data-folderid');\n+\n+      if (ajaxDropCallback)\n+      {\n+        ajaxDropCallback(\n+          JSON.stringify({\n+            \"uuid\": uuid,\n+            \"version\": version,\n+            \"type\": type,\n+            \"attachmentUuid\": attachmentUuid,\n+            \"folderId\": folder,\n+            \"extensionType\": extensionType}),\n+          folder);\n+      }\n+    }\n+\t\tif(doItems) {\n+      CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n+      // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n+      CourseList.prepareDraggable(itemSummarySelector);\n+    }\n \n-\t\tif (doAttachments)\n-\t\t{\n-\t\t\tvar attachmentWatcher = function()\n-\t\t\t{\n-\t\t\t\t\t$(attachmentSelector).draggable(draggableOpts);\n-\t\t\t};\n-\t\t\t$(attachmentWatcher);\n-\t\t\t$(document).bind('equella_showattachments.courselist', attachmentWatcher);\n-\t\t}\n+\t\tif(doAttachments) {\n+      CourseList.prepareDraggableAndBind(attachmentSelector, false)\n+    }\n \n-\t\tvar droppableOpts = {\n-\t\t\t\taccept: itemResultSelector + ', ' + attachmentSelector + ', ' + itemSummarySelector,\n-\t\t\t\tactiveClass: 'droptarget',\n-\t\t\t\thoverClass: 'hover',\n-\t\t\t\ttolerance: 'pointer',\n-\t\t\t\tdrop: dropCallback\n-\t\t\t};\n-\t\tvar courseListWatcher = function()\n-\t\t{\n-\t\t\t$('.targetfolder').droppable(droppableOpts).on('click.courselist', function()\n-\t\t\t\t\t{\n-\t\t\t\t\t\tvar $t = $(this);\n-\t\t\t\t\t\t$('.targetfolder').removeClass('selected');\n-\t\t\t\t\t\t//Don't call click(), you get stuck in a nasty event loop\n-\t\t\t\t\t\t$t.find('input[type=radio]').attr('checked', true);\n-\t\t\t\t\t\t$t.addClass('selected');\n-\t\t\t\t\t\tif (clickFolderCallback)\n-\t\t\t\t\t\t{\n-\t\t\t\t\t\t\tclickFolderCallback(function(){});\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t);\n-\t\t};\n-\t\t$(courseListWatcher);\n-\t\t$(document).bind('equella_courselistupdate.courselist', courseListWatcher);\n+    CourseList.prepareDroppable(\n+      itemResultSelector +\n+      ', ' + attachmentSelector +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgwNzExMg=="}, "originalCommit": {"oid": "ce33c093845ca533e26cdf5a6f48fa2b359f0022"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTU2NTMwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MzowOVrOH9JaEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDowMTo0N1rOH9JjjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3OTMxNA==", "bodyText": "Just note that now you've gone from a separator of comma and space, to just comma. So as long as that space was to just make things pretty, then that's fine.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533879314", "createdAt": "2020-12-02T03:53:09Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -97,23 +97,20 @@ var CourseList = {\n           folder);\n       }\n     }\n-\t\tif(doItems) {\n+    if (doItems) {\n       CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n       // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n       CourseList.prepareDraggable(itemSummarySelector);\n     }\n \n-\t\tif(doAttachments) {\n+    if (doAttachments) {\n       CourseList.prepareDraggableAndBind(attachmentSelector, false)\n     }\n \n-    CourseList.prepareDroppable(\n-      itemResultSelector +\n-      ', ' + attachmentSelector +\n-      ', ' + itemSummarySelector +\n-      ', ' + newSearchPageItemSelector +\n-      ', ' + newSearchPageAttachmentSelector, // Also accept draggables made in new Search UI.\n-      dropCallback, clickFolderCallback)\n+    var droppableSelectors =\n+      [itemResultSelector, attachmentSelector, itemSummarySelector,\n+        newSearchPageItemSelector, newSearchPageAttachmentSelector].join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4MTc0MA==", "bodyText": "Yeah I have confirmed that removing the space does not break anything.", "url": "https://github.com/openequella/openEQUELLA/pull/2576#discussion_r533881740", "createdAt": "2020-12-02T04:01:47Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/resources/web/scripts/courselist.js", "diffHunk": "@@ -97,23 +97,20 @@ var CourseList = {\n           folder);\n       }\n     }\n-\t\tif(doItems) {\n+    if (doItems) {\n       CourseList.prepareDraggableAndBind(listSelector + ' ' + itemResultSelector, true);\n       // According to the existing code, there is no need to bind any handler to drag events happening in the ItemSummary page.\n       CourseList.prepareDraggable(itemSummarySelector);\n     }\n \n-\t\tif(doAttachments) {\n+    if (doAttachments) {\n       CourseList.prepareDraggableAndBind(attachmentSelector, false)\n     }\n \n-    CourseList.prepareDroppable(\n-      itemResultSelector +\n-      ', ' + attachmentSelector +\n-      ', ' + itemSummarySelector +\n-      ', ' + newSearchPageItemSelector +\n-      ', ' + newSearchPageAttachmentSelector, // Also accept draggables made in new Search UI.\n-      dropCallback, clickFolderCallback)\n+    var droppableSelectors =\n+      [itemResultSelector, attachmentSelector, itemSummarySelector,\n+        newSearchPageItemSelector, newSearchPageAttachmentSelector].join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3OTMxNA=="}, "originalCommit": {"oid": "46cbf5ffc9eefe44b3d040c68f96e28fc154cdd9"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1605, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}