{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDQ1Njgy", "number": 1749, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMzoxNVrOD-aXKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo0NTowM1rOD-lW5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcwMjE4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMzoxNVrOGYf5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMzoxNVrOGYf5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTY5MA==", "bodyText": "Obviously when we do this properly we don't need r.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428341690", "createdAt": "2020-05-20T22:23:15Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -448,14 +448,15 @@ class LegacyContentApi {\n         info.preventGET()\n         info.getRootRenderContext.setRootResultListener(new LegacyResponseListener(info))\n         LegacyContentController.execute(info)\n-        redirectResponse(info)\n+        val r = redirectResponse(info)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcwOTg0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNTo1N1rOGYf-Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNTo1N1rOGYf-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0Mjg0Ng==", "bodyText": "I acknowledge I'm the guilty party for this, but when we polish it we should probably do similar to the below with Option / filter / map so that we only include it if there is a form.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428342846", "createdAt": "2020-05-20T22:25:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -491,12 +492,19 @@ class LegacyContentApi {\n           val body = SectionUtils.renderToString(\n             context,\n             wrapBody(context, tr.getNamedResult(context, \"body\")))\n+          val form = context.getForm\n+          val formString: String =\n+            if (form.getAction != null) {\n+              SectionUtils.renderToString(context, form)\n+            } else \"\"\n+\n           val upperbody =\n             SectionUtils.renderToString(context, tr.getNamedResult(context, \"upperbody\"))\n           val scrops = renderScreenOptions(context)\n           val crumbs = renderCrumbs(context, decs).map(SectionUtils.renderToString(context, _))\n           Iterable(\n             Some(\"body\"                                          -> body),\n+            Some(\"form\"                                          -> formString),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcxNDc1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNzo1N1rOGYgBRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNzo1N1rOGYgBRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MzYyMw==", "bodyText": "Hopefully we can use a more idiomatic scala construct for this to. Maybe a for / yield, or an Option which will make it more straight forward below. (Again, I acknowledge I'm critiquing my own code.)", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428343623", "createdAt": "2020-05-20T22:27:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/LegacyContentApi.scala", "diffHunk": "@@ -491,12 +492,19 @@ class LegacyContentApi {\n           val body = SectionUtils.renderToString(\n             context,\n             wrapBody(context, tr.getNamedResult(context, \"body\")))\n+          val form = context.getForm\n+          val formString: String =\n+            if (form.getAction != null) {\n+              SectionUtils.renderToString(context, form)\n+            } else \"\"\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcyMjg2OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjozMTowN1rOGYgGGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDowMjozM1rOGYh48w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NDg1OA==", "bodyText": "I wonder if it matters that this is after LegacyForm where as in the legacy UI this 'form' seemed to get rendered before the 'body'. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428344858", "createdAt": "2020-05-20T22:31:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +218,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && <div dangerouslySetInnerHTML={{ __html: form }} />}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NTEwMg==", "bodyText": "Do you mean the div that has an ID called body?  If yes, the body is part of this form in Old UI.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428365102", "createdAt": "2020-05-20T23:32:17Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +218,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && <div dangerouslySetInnerHTML={{ __html: form }} />}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NDg1OA=="}, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3NDI1OQ==", "bodyText": "Oh, I see. I thought it was:\n\nform\ndiv id=body\nscript\n\nI just reformatted the code, and now see it's actually:\n\nform\n\ndiv id=body\n\n\nscript\n\nCool, so as long as we maintain that structure - and with the input fields etc at the top within the form, then that should be okay. Either-way, the test suite is passing, so....", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428374259", "createdAt": "2020-05-21T00:02:33Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +218,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && <div dangerouslySetInnerHTML={{ __html: form }} />}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NDg1OA=="}, "originalCommit": {"oid": "bd2f08422b7ef20e025b43f6fba581e7f12ade06"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTUwMzczOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo0NTowNFrOGYxa3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoyMTo1NFrOGZF_hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyODcwMw==", "bodyText": "Is cross site scripting a concern here?\nThis library does not sanitize inputs.\nhttps://github.com/remarkablemark/html-react-parser#is-this-library-xss-safe", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428628703", "createdAt": "2020-05-21T12:45:04Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +217,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && HtmlParser(form)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1NTE3NQ==", "bodyText": "I don't believe so, as this is just a form which is normally server side rendered and we're attempting to bring it across to be rendered as part of the New UI. But it's also deep in the depths of Sections and Legacy Content wrapping so I can't say I'm 100% across where else (and how) these forms are used.\nIn this case - that we're attempting to fix - it's a form with is pragmatically built up server side with some hidden fields (with LTI values) which are then submitted via JS so as to complete the Canvas submission. It feels like this is the primary way this 'form' element is used, and hence why to date nothing else has broken with it being absent from the legacy content wrapping. I think.... \ud83e\udd1e", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428955175", "createdAt": "2020-05-21T22:45:48Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +217,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && HtmlParser(form)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyODcwMw=="}, "originalCommit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2Mzc1OA==", "bodyText": "BTW, the library we use is react-html-parser but not html-react-parser.  react-html-parser hasn't been updated for three years.", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428963758", "createdAt": "2020-05-21T23:14:25Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +217,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && HtmlParser(form)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyODcwMw=="}, "originalCommit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2NTc2Ng==", "bodyText": "heh, that naming's not confusing at all. \ud83d\ude2c", "url": "https://github.com/openequella/openEQUELLA/pull/1749#discussion_r428965766", "createdAt": "2020-05-21T23:21:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/mainui/index.tsx", "diffHunk": "@@ -218,11 +217,20 @@ function IndexPage() {\n               {routeSwitch(content)}\n             </Template>\n           );\n-          return !content || content.noForm ? (\n-            template\n-          ) : (\n-            <LegacyForm state={content.state}>{template}</LegacyForm>\n-          );\n+          const render = () => {\n+            if (!content || content.noForm) {\n+              return template;\n+            } else {\n+              const { form } = content.html;\n+              return (\n+                <>\n+                  <LegacyForm state={content.state}>{template}</LegacyForm>\n+                  {form && HtmlParser(form)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyODcwMw=="}, "originalCommit": {"oid": "1b08bc737d4acde55e64386ceff64d9c869aceff"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1460, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}