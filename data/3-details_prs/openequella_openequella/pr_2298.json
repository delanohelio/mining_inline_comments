{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NDI1MTU3", "number": 2298, "title": "Highlight search terms in the results", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n\nDescription of change\n\nThis change highlights search terms in the title and description of search result items in the same way (algorithmically) as the Legacy Search UI. The algorithm around this was mainly in java class com.tle.web.sections.render.TextUtils. As a result, a key part of this PR was to convert that to TS (utils/TextUtils.ts).\nOnce that was in place, it was just a matter of weaving it in, integrating with the 'highlight' list returned as part of #2225.\nTo assist testing, I also refactored the SearchResult.stories.tsx to Storybook 6 before adding an additional story.\n#1306", "createdAt": "2020-09-17T05:55:48Z", "url": "https://github.com/openequella/openEQUELLA/pull/2298", "merged": true, "mergeCommit": {"oid": "f090589642d257eec0f9a77e81369fc8f7b179a9"}, "closed": true, "closedAt": "2020-09-18T23:46:56Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJqL6tgH2gAyNDg4NDI1MTU3OjY0ZWIwYTE2M2EzNTM1MGExNGI0MTRmZTI4ZjM2MDIzZTM5MDA3YjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ_xNDgH2gAyNDg4NDI1MTU3OmViNWM2MTUyNTQ4YmNkNjE5MjJjZjc0ODg5NTdiZDZmNTdjNzI2OWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64eb0a163a35350a14b414fe28f36023e39007b5", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/64eb0a163a35350a14b414fe28f36023e39007b5", "committedDate": "2020-09-17T05:31:35Z", "message": "front-end: Convert java TextUtils to Typescript\n\nThis contains the core of what the Legacy UI uses to highlight search results. So to ensure consistency with what users are used to, let's simply do a conversion for now."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3a92d1c5ed88a6bab058ff3dff195d8ae30bbc", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/3b3a92d1c5ed88a6bab058ff3dff195d8ae30bbc", "committedDate": "2020-09-17T05:31:35Z", "message": "front-end: Refactor SearchResult.stories.tsx to use SB 6\n\nAlso added a story to show keyword found in attachment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/4a03d923898663962d7ad456ae6d1b7754819f6a", "committedDate": "2020-09-17T05:31:35Z", "message": "front-end: Highlight title and description of search results"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjYzNzE3", "url": "https://github.com/openequella/openEQUELLA/pull/2298#pullrequestreview-490263717", "createdAt": "2020-09-17T05:57:27Z", "commit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1NzoyN1rOHTSg0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1NzoyN1rOHTSg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4ODMwNw==", "bodyText": "Just fixing a typo.", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r489988307", "createdAt": "2020-09-17T05:57:27Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchResult.tsx", "diffHunk": "@@ -79,34 +80,51 @@ const useStyles = makeStyles((theme: Theme) => {\n       color: theme.palette.secondary.main,\n       borderRadius: \"50%\",\n     },\n+    highlight: {\n+      color: theme.palette.secondary.main,\n+    },\n   };\n });\n \n+export interface SearchResultProps {\n+  /**\n+   * The details of the items to display.\n+   */\n+  item: OEQ.Search.SearchResultItem;\n+\n+  /**\n+   * The list of words which should be highlighted.\n+   */\n+  highlights: string[];\n+}\n+\n export default function SearchResult({\n-  name,\n-  version,\n-  uuid,\n-  description,\n-  displayFields,\n-  modifiedDate,\n-  status,\n-  displayOptions,\n-  attachments,\n-  keywordFoundInAttachment,\n-  links,\n-}: OEQ.Search.SearchResultItem) {\n+  item: {\n+    name,\n+    version,\n+    uuid,\n+    description,\n+    displayFields,\n+    modifiedDate,\n+    status,\n+    displayOptions,\n+    attachments,\n+    keywordFoundInAttachment,\n+  },\n+  highlights,\n+}: SearchResultProps) {\n   const classes = useStyles();\n \n   const searchResultStrings = languageStrings.searchpage.searchresult;\n \n-  const [attachExapanded, setAttachExpanded] = React.useState(\n+  const [attachExpanded, setAttachExpanded] = React.useState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjY2ODQ4", "url": "https://github.com/openequella/openEQUELLA/pull/2298#pullrequestreview-490266848", "createdAt": "2020-09-17T06:04:52Z", "commit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDUyNTk4", "url": "https://github.com/openequella/openEQUELLA/pull/2298#pullrequestreview-491052598", "createdAt": "2020-09-17T23:23:04Z", "commit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyMzowNVrOHT4v9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyODozN1rOHT42aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNDc3NA==", "bodyText": "Is it possible to type args?", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r490614774", "createdAt": "2020-09-17T23:23:05Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/SearchResult.stories.tsx", "diffHunk": "@@ -15,131 +15,64 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+import type { Story } from \"@storybook/react\";\n import * as React from \"react\";\n import * as mockData from \"../../__mocks__/searchresult_mock_data\";\n-import SearchResult from \"../../tsrc/search/components/SearchResult\";\n-import { boolean, number, object, text } from \"@storybook/addon-knobs\";\n+import SearchResult, {\n+  SearchResultProps,\n+} from \"../../tsrc/search/components/SearchResult\";\n \n export default {\n   title: \"Search/SearchResult\",\n   component: SearchResult,\n };\n-const defaultItemName = \"Item Name\";\n-const defaultItemDescription = \"Item Description\";\n \n-export const BasicSearchResultComponent = () => (\n-  <SearchResult\n-    name={text(\"name\", mockData.basicSearchObj.name || defaultItemName)}\n-    version={number(\"version\", mockData.basicSearchObj.version)}\n-    uuid={text(\"uuid\", mockData.basicSearchObj.uuid)}\n-    description={text(\n-      \"description\",\n-      mockData.basicSearchObj.description || defaultItemDescription\n-    )}\n-    displayFields={object(\"display fields\", [\n-      ...mockData.basicSearchObj.displayFields,\n-    ])}\n-    modifiedDate={object(\"modified date\", mockData.basicSearchObj.modifiedDate)}\n-    createdDate={object(\"created date\", mockData.basicSearchObj.createdDate)}\n-    status={text(\"item status\", mockData.basicSearchObj.status)}\n-    displayOptions={object(\n-      \"display options\",\n-      mockData.basicSearchObj.displayOptions\n-    )}\n-    attachments={object(\"attachments\", [\n-      ...mockData.basicSearchObj.attachments,\n-    ])}\n-    links={object(\"links\", mockData.basicSearchObj.links)}\n-    collectionId={text(\"collection ID\", mockData.basicSearchObj.collectionId)}\n-    commentCount={number(\"comment count\", mockData.basicSearchObj.commentCount)}\n-    thumbnail={text(\"thumbnail\", mockData.basicSearchObj.thumbnail)}\n-    keywordFoundInAttachment={boolean(\n-      \"keywordFoundInAttachment\",\n-      mockData.basicSearchObj.keywordFoundInAttachment\n-    )}\n-  />\n+export const BasicSearchResult: Story<SearchResultProps> = (args) => (\n+  <SearchResult {...args} />\n );\n+BasicSearchResult.args = {\n+  item: {\n+    ...mockData.basicSearchObj,\n+  },\n+  highlights: [],\n+};\n+\n+export const AttachmentSearchResult: Story<SearchResultProps> = (args) => (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNTQzNQ==", "bodyText": "If you are using spread here with no modifiers, surely you can just use it directly?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      item={{ ...itemResult }}\n          \n          \n            \n                      item={ itemResult }", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r490615435", "createdAt": "2020-09-17T23:25:12Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/SearchResult.test.tsx", "diffHunk": "@@ -29,7 +29,11 @@ describe(\"<SearchResult/>\", () => {\n     return render(\n       //This needs to be wrapped inside a BrowserRouter, to prevent an `Invariant failed: You should not use <Link> outside a <Router>` error  because of the <Link/> tag within SearchResult\n       <BrowserRouter>\n-        <SearchResult {...itemResult} key={itemResult.uuid} />\n+        <SearchResult\n+          key={itemResult.uuid}\n+          item={{ ...itemResult }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNjQyNw==", "bodyText": "Do we need tests for the functions in this file?", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r490616427", "createdAt": "2020-09-17T23:28:37Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/TextUtils.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ * Based on work from com.tle.web.sections.render.TextUtils\n+ */\n+\n+const removeNonWordCharacters = (highlight: string): string =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd6ccb92ad6acab171923ec2f54d1985162586f9", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/fd6ccb92ad6acab171923ec2f54d1985162586f9", "committedDate": "2020-09-18T00:04:21Z", "message": "front-end: Remove redundant spread operators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDYzNDU4", "url": "https://github.com/openequella/openEQUELLA/pull/2298#pullrequestreview-491063458", "createdAt": "2020-09-17T23:56:06Z", "commit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NjowNlrOHT5Vvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzo1NjowNlrOHT5Vvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYyNDQ0Nw==", "bodyText": "I can basically imagine what string this regex will match, but can we have a simple example here?", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r490624447", "createdAt": "2020-09-17T23:56:06Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/TextUtils.ts", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+/**\n+ * Based on work from com.tle.web.sections.render.TextUtils\n+ */\n+\n+const removeNonWordCharacters = (highlight: string): string =>\n+  highlight\n+    .replace(/\\\\/g, \"\")\n+    .replace(/\\./g, \"\")\n+    .replace(/\\(/g, \"\")\n+    .replace(/\\)/g, \"\")\n+    .replace(/\\[/g, \"\")\n+    .replace(/]/g, \"\")\n+    .replace(/\\+/g, \"\")\n+    .replace(/\\?/g, \".?\")\n+    .replace(/\\*/g, \"\\\\w*\")\n+    .replace(/\\|/g, \"\");\n+\n+const highlightsAsRegex = (highlights: string[]) =>\n+  highlights\n+    .map((h) => h.trim())\n+    .filter((h) => h.length > 0)\n+    .map((h) => removeNonWordCharacters(h))\n+    .filter((h) => h.length > 0)\n+    .join(\"|\");\n+\n+/**\n+ * Takes a line of text and a list of words which should be highlighted within that line. It returns\n+ * a `string` which contains the text, and the listed words encapsulated within `span`s\n+ * having the specified `class`.\n+ *\n+ * @param text Plain text to be highlighted\n+ * @param highlights A list of words to highlight\n+ * @param cssClass The CSS class to apply to the highlighting spans\n+ */\n+export const highlight = (\n+  text: string,\n+  highlights: string[],\n+  cssClass: string\n+): string => {\n+  const highlightsRegex = highlightsAsRegex(highlights);\n+  if (highlights.length < 1) {\n+    // Nothing to highlight\n+    return text;\n+  }\n+\n+  const re = new RegExp(\"^(.*?)\\\\b(\" + highlightsRegex + \")\\\\b(.*)$\", \"is\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a03d923898663962d7ad456ae6d1b7754819f6a"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDcxNDY4", "url": "https://github.com/openequella/openEQUELLA/pull/2298#pullrequestreview-491071468", "createdAt": "2020-09-18T00:21:59Z", "commit": {"oid": "fd6ccb92ad6acab171923ec2f54d1985162586f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDoyMjowMFrOHT5yIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMDoyMjowMFrOHT5yIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzMTcxMw==", "bodyText": "If my understanding is right, I won't see\n<span class=\"${className}\">knives</span>\nif I search knife* ? oEQ's highlight approach does not include any stemming analyzer.", "url": "https://github.com/openequella/openEQUELLA/pull/2298#discussion_r490631713", "createdAt": "2020-09-18T00:22:00Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/util/TextUtils.test.ts", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { highlight } from \"../../../tsrc/util/TextUtils\";\n+\n+describe(\"Highlighting of Text\", () => {\n+  const className = \"highlighted\";\n+  it.each([\n+    [\n+      \"The quick brown fox jumps over the lazy dog\",\n+      [\"The\", \"fox\", \"dog\"],\n+      `<span class=\"${className}\">The</span> quick brown <span class=\"${className}\">fox</span> jumps over <span class=\"${className}\">the</span> lazy <span class=\"${className}\">dog</span>`,\n+    ],\n+    [\n+      \"The life of kelpies explained\",\n+      [\"kelp*\"],\n+      `The life of <span class=\"${className}\">kelpies</span> explained`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd6ccb92ad6acab171923ec2f54d1985162586f9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5c6152548bcd61922cf7488957bd6f57c7269c", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/eb5c6152548bcd61922cf7488957bd6f57c7269c", "committedDate": "2020-09-18T06:40:19Z", "message": "front-end: Document highlighting regular expression"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 476, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}