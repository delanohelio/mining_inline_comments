{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2ODg2NTU3", "number": 2108, "title": "Feature/pagination actions", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n screenshots are included showing significant UI changes\n\nDescription of change\n\n#1306\nThis PR adds in additional Paging options to the mui TablePagination component, allowing for navigating to the first and last page of search results", "createdAt": "2020-07-27T04:16:19Z", "url": "https://github.com/openequella/openEQUELLA/pull/2108", "merged": true, "mergeCommit": {"oid": "0e5f2437dd5be7c79c1f57aa86c5066c2f1723a9"}, "closed": true, "closedAt": "2020-08-09T22:52:29Z", "author": {"login": "mrblippy"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc36fj4gH2gAyNDU2ODg2NTU3Ojc0MDBjY2ExZjk3ZTUwY2Y5ODg2Nzc5YmNkNDQ5MmNiMzk0ZWNhYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8d_ZhAH2gAyNDU2ODg2NTU3OjNmZDhiZjc5YTNjMmQ2NTQ4NzNhNjM1NzBlYTM4NDUyNGZlMzg1Yjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7400cca1f97e50cf9886779bcd4492cb394ecaa2", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/7400cca1f97e50cf9886779bcd4492cb394ecaa2", "committedDate": "2020-07-24T02:20:53Z", "message": "Add First/Last page Navigation actions to SearchPagination component.\n\nBy default, the MUI TablePagination component only allows for Previous/Next page navigation. Any further customisation must be implemented inside a separate component, which gets passed to the MUI ActionsComponent prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae6fd55e72a15110b6a714650e40fee942f7a5c8", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/ae6fd55e72a15110b6a714650e40fee942f7a5c8", "committedDate": "2020-07-24T02:36:06Z", "message": "Remove irrelevant, empty prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e370a2c01389581c970f988c709254a11278fd34", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/e370a2c01389581c970f988c709254a11278fd34", "committedDate": "2020-07-27T00:09:24Z", "message": "Remove unnecessary console.log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01df8ba34b91218bbe67cd678521be6e77999a2a", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/01df8ba34b91218bbe67cd678521be6e77999a2a", "committedDate": "2020-07-27T04:10:10Z", "message": "update SearchPage tests to reflect new pagination controls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/26b7d10d329deb854b80f37f7e1f25d7c6c79017", "committedDate": "2020-07-27T04:27:04Z", "message": "Merge branch 'component/new-search-page' into feature/pagination-actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDc2MzE5", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-455476319", "createdAt": "2020-07-27T05:16:32Z", "commit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNToxNjozMlrOG3T60w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNToyNjozNlrOG3UELg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MTIxOQ==", "bodyText": "Is this necessary? What caused this to be added?", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460651219", "createdAt": "2020-07-27T05:16:32Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -1,3 +1,4 @@\n+// @ts-nocheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MTczNQ==", "bodyText": "This .find chain seems very fragile. Is there a better way to find it with IDs?", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460651735", "createdAt": "2020-07-27T05:18:54Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -150,7 +151,11 @@ describe(\"<SearchPage/>\", () => {\n \n   it(\"should support changing the number of items displayed per page\", async () => {\n     // Initial items per page is 10\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MTk2NQ==", "bodyText": "This string is used multiple times. Should be a constant.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460651965", "createdAt": "2020-07-27T05:19:50Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);\n     const nextPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n+      .at(2);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();\n     await awaitAct(() => prevPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    expect(pageCount.text()).toContain(\"1-10 of 12\");\n+  });\n+\n+  it(\"should support navigating to first/last page of results\", async () => {\n+    mockSearch.mockImplementation(() =>\n+      Promise.resolve(getSearchResultsCustom(30))\n+    );\n+    await querySearch(\"\");\n+    component.update();\n+    const firstPageButton = component\n+      .find(\".MuiTablePagination-actions button\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1Mjc3MQ==", "bodyText": "I'm not sure the component update is necessary here. The querysearch already has a wait.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460652771", "createdAt": "2020-07-27T05:22:54Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MjgxNQ==", "bodyText": "As above.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460652815", "createdAt": "2020-07-27T05:23:09Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);\n     const nextPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n+      .at(2);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1Mjg2Ng==", "bodyText": "As above.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460652866", "createdAt": "2020-07-27T05:23:22Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);\n     const nextPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n+      .at(2);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();\n     await awaitAct(() => prevPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    expect(pageCount.text()).toContain(\"1-10 of 12\");\n+  });\n+\n+  it(\"should support navigating to first/last page of results\", async () => {\n+    mockSearch.mockImplementation(() =>\n+      Promise.resolve(getSearchResultsCustom(30))\n+    );\n+    await querySearch(\"\");\n+    component.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MjkxNA==", "bodyText": "As above.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460652914", "createdAt": "2020-07-27T05:23:32Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);\n     const nextPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n+      .at(2);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();\n     await awaitAct(() => prevPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    expect(pageCount.text()).toContain(\"1-10 of 12\");\n+  });\n+\n+  it(\"should support navigating to first/last page of results\", async () => {\n+    mockSearch.mockImplementation(() =>\n+      Promise.resolve(getSearchResultsCustom(30))\n+    );\n+    await querySearch(\"\");\n+    component.update();\n+    const firstPageButton = component\n+      .find(\".MuiTablePagination-actions button\")\n+      .at(0);\n+    const lastPageButton = component\n+      .find(\".MuiTablePagination-actions button\")\n+      .at(3);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n+      .at(1);\n+    await awaitAct(() => lastPageButton.simulate(\"click\"));\n+    expect(pageCount.text()).toContain(\"21-30 of 30\");\n+    await querySearch(\"\");\n+    component.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MzYxNA==", "bodyText": "Similar to the consts on 76 and 77, could these values passed into onPageChange be named?\nEg\nconst lastPage = Math.max(0, numberOfPages() -1;\n......\nonClick = {() => onPageChange(lastPage))}", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460653614", "createdAt": "2020-07-27T05:26:36Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchPagination.tsx", "diffHunk": "@@ -46,6 +59,68 @@ export const SearchPagination = ({\n       onChangeRowsPerPage={(event) =>\n         onRowsPerPageChange(parseInt(event.target.value))\n       }\n+      ActionsComponent={PaginationActions}\n     />\n   );\n+\n+  /**\n+   * Provides pagination navigation controls.\n+   * @return {ReactElement} IconButtons for navigating to First, Previous, Next, and Last Page of results\n+   */\n+  function PaginationActions() {\n+    const theme = createMuiTheme();\n+\n+    const numberOfPages = () => {\n+      return Math.ceil(count / rowsPerPage);\n+    };\n+    const isFirstPage = currentPage == 0;\n+    const isLastPage = currentPage >= numberOfPages() - 1;\n+\n+    return (\n+      <Grid\n+        container\n+        direction=\"row\"\n+        justify=\"center\"\n+        wrap=\"nowrap\"\n+        style={{ marginLeft: theme.spacing(2) }}\n+      >\n+        <Grid item>\n+          <IconButton\n+            onClick={() => onPageChange(0)}\n+            disabled={isFirstPage}\n+            aria-label={paginationStrings.firstPageButton}\n+          >\n+            <FirstPage />\n+          </IconButton>\n+        </Grid>\n+        <Grid item>\n+          <IconButton\n+            onClick={() => onPageChange(currentPage - 1)}\n+            aria-label={paginationStrings.previousPageButton}\n+            disabled={isFirstPage}\n+          >\n+            <KeyboardArrowLeft />\n+          </IconButton>\n+        </Grid>\n+        <Grid item>\n+          <IconButton\n+            onClick={() => onPageChange(currentPage + 1)}\n+            aria-label={paginationStrings.nextPageButton}\n+            disabled={isLastPage}\n+          >\n+            <KeyboardArrowRight />\n+          </IconButton>\n+        </Grid>\n+        <Grid item>\n+          <IconButton\n+            onClick={() => onPageChange(Math.max(0, numberOfPages() - 1))}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDY2NTIy", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-455466522", "createdAt": "2020-07-27T04:38:17Z", "commit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNDozODoxN1rOG3TY0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTowMTowOFrOG3Ts3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0MjUxNA==", "bodyText": "Something is a amiss here. length and/or available should be matching numberOfResults. But I'm gather the fact they're not means the test is doing something rather odd. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460642514", "createdAt": "2020-07-27T04:38:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +286,32 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+exports.getSearchResultsCustom = (numberOfResults) => {\n+  const { v4: uuidv4 } = require(\"uuid\");\n+  let results = [];\n+\n+  for (let i = 0; i < numberOfResults; i++) {\n+    let currentResult = {\n+      uuid: uuidv4(),\n+      name: `item ${i}`,\n+      version: 1,\n+      status: \"live\",\n+      createdDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+      modifiedDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+      collectionId: \"9a1ddb24-6bf5-db3d-d8fe-4fca20ecf69c\",\n+      commentCount: 0,\n+      attachments: [],\n+      thumbnail: \"initial\",\n+      displayFields: [],\n+      links: {\n+        view:\n+          \"http://localhost:8080/rest/items/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n+        self:\n+          \"http://localhost:8080/rest/api/item/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n+      },\n+    };\n+    results.push(currentResult);\n+  }\n+  return { start: 0, length: 10, available: 30, results };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NDExNw==", "bodyText": "It'd be nice to see this function done more declaratively rather than imperatively. To do so (using lodash) you'd probably end up with something like:\nconst { v4: uuidv4 } = require(\"uuid\");\nexports.getSearchResultsCustom = (numberOfResults) =>\n  {\n    start: 0,\n    length: 10,\n    available: 30,\n    _.range(numberOfResults).map( (i) => {\n      uuid: uuidv4(),\n      name: `item ${i}`,\n      version: 1,\n      status: \"live\",\n      createdDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n      modifiedDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n      collectionId: \"9a1ddb24-6bf5-db3d-d8fe-4fca20ecf69c\",\n      commentCount: 0,\n      attachments: [],\n      thumbnail: \"initial\",\n      displayFields: [],\n      links: {\n        view:\n          \"http://localhost:8080/rest/items/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n        self:\n          \"http://localhost:8080/rest/api/item/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n      },\n  };\nMakes for less error prone code. But that said, as per comment below I'm not sure what's going on with start/length/available here. So YMMV.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460644117", "createdAt": "2020-07-27T04:45:57Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +286,32 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+exports.getSearchResultsCustom = (numberOfResults) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NjM1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const isFirstPage = currentPage == 0;\n          \n          \n            \n                const isFirstPage = currentPage === 0;", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460646352", "createdAt": "2020-07-27T04:55:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchPagination.tsx", "diffHunk": "@@ -46,6 +59,68 @@ export const SearchPagination = ({\n       onChangeRowsPerPage={(event) =>\n         onRowsPerPageChange(parseInt(event.target.value))\n       }\n+      ActionsComponent={PaginationActions}\n     />\n   );\n+\n+  /**\n+   * Provides pagination navigation controls.\n+   * @return {ReactElement} IconButtons for navigating to First, Previous, Next, and Last Page of results\n+   */\n+  function PaginationActions() {\n+    const theme = createMuiTheme();\n+\n+    const numberOfPages = () => {\n+      return Math.ceil(count / rowsPerPage);\n+    };\n+    const isFirstPage = currentPage == 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NjQ4NQ==", "bodyText": "No need for braces and return:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const numberOfPages = () => {\n          \n          \n            \n                  return Math.ceil(count / rowsPerPage);\n          \n          \n            \n                };\n          \n          \n            \n                const numberOfPages = () => Math.ceil(count / rowsPerPage);\n          \n      \n    \n    \n  \n\nMay also want to consider whether you need a function. Could it just be a constant of:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const numberOfPages = () => {\n          \n          \n            \n                  return Math.ceil(count / rowsPerPage);\n          \n          \n            \n                };\n          \n          \n            \n                const numberOfPages = Math.ceil(count / rowsPerPage);", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460646485", "createdAt": "2020-07-27T04:56:18Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchPagination.tsx", "diffHunk": "@@ -46,6 +59,68 @@ export const SearchPagination = ({\n       onChangeRowsPerPage={(event) =>\n         onRowsPerPageChange(parseInt(event.target.value))\n       }\n+      ActionsComponent={PaginationActions}\n     />\n   );\n+\n+  /**\n+   * Provides pagination navigation controls.\n+   * @return {ReactElement} IconButtons for navigating to First, Previous, Next, and Last Page of results\n+   */\n+  function PaginationActions() {\n+    const theme = createMuiTheme();\n+\n+    const numberOfPages = () => {\n+      return Math.ceil(count / rowsPerPage);\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NzM2OQ==", "bodyText": "All these ats make for brittle code. It'd be better to throw an ID on each button, and then simply do component.find('#prevPageButton').", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460647369", "createdAt": "2020-07-27T05:00:02Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NzY0Ng==", "bodyText": "This test mentions 'results', but it's only checking the content of the paging control. What if the results are still showing the first page?", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r460647646", "createdAt": "2020-07-27T05:01:08Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,52 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n+    await querySearch(\"\");\n+    component.update();\n     const prevPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n+      .at(1);\n     const nextPageButton = component\n       .find(\".MuiTablePagination-actions button\")\n+      .at(2);\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();\n     await awaitAct(() => prevPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    expect(pageCount.text()).toContain(\"1-10 of 12\");\n+  });\n+\n+  it(\"should support navigating to first/last page of results\", async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500164bfc66c46788c41afd556ebae0ba99e60f8", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/500164bfc66c46788c41afd556ebae0ba99e60f8", "committedDate": "2020-07-28T00:01:48Z", "message": "Add id props to SearchPagination action buttons. This allows for more reliable autotests, as well as giving oEQ admins more flexibility in custom ui styling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjM3Mzkw", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-456237390", "createdAt": "2020-07-28T01:15:45Z", "commit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMToxNTo0NVrOG35EpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMToxNTo0NVrOG35EpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI1OTk0MA==", "bodyText": "other parts of the code leverage makeStyles, would it make sense to use that here as well?", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r461259940", "createdAt": "2020-07-28T01:15:45Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/SearchPagination.tsx", "diffHunk": "@@ -46,6 +59,68 @@ export const SearchPagination = ({\n       onChangeRowsPerPage={(event) =>\n         onRowsPerPageChange(parseInt(event.target.value))\n       }\n+      ActionsComponent={PaginationActions}\n     />\n   );\n+\n+  /**\n+   * Provides pagination navigation controls.\n+   * @return {ReactElement} IconButtons for navigating to First, Previous, Next, and Last Page of results\n+   */\n+  function PaginationActions() {\n+    const theme = createMuiTheme();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "277f6c14e6db12cfadab9a3838ff24c3fb31b9a0", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/277f6c14e6db12cfadab9a3838ff24c3fb31b9a0", "committedDate": "2020-08-05T01:16:48Z", "message": "Write unit test for SearchPagination Component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e73a2acb3ad3e6210f2596b161dc342271e7132d", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/e73a2acb3ad3e6210f2596b161dc342271e7132d", "committedDate": "2020-08-05T01:53:51Z", "message": "make better use of constants inside SearchPagination component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8037e96f848b7f23348b7458639d2110e349ef", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/5d8037e96f848b7f23348b7458639d2110e349ef", "committedDate": "2020-08-05T04:38:39Z", "message": "Alter SearchPage test to better support pagination functionality\n\n* Generate mock search results using lodash\n* Use ids for pagination button selectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/8813f5ca12a422718e7e7ddd325cfec62e5ce75e", "committedDate": "2020-08-05T04:43:50Z", "message": "Merge branch 'feature/pagination-actions' of https://github.com/mrblippy/Charliequella into feature/pagination-actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzQ2MDU2", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-461346056", "createdAt": "2020-08-05T05:17:25Z", "commit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToxNzoyNlrOG76img==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToxNzoyNlrOG76img==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ3ODI5OA==", "bodyText": "You should be about to do \".MuiTablePagination-toolbar > p\" in the first .find() rather than two finds. That returns all <p/> tags that are direct children of .MuiTablePagination-toolbar (unless it isn't a direct child in which case your solution is better).", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r465478298", "createdAt": "2020-08-05T05:17:26Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -150,7 +151,11 @@ describe(\"<SearchPage/>\", () => {\n \n   it(\"should support changing the number of items displayed per page\", async () => {\n     // Initial items per page is 10\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MTczNQ=="}, "originalCommit": {"oid": "26b7d10d329deb854b80f37f7e1f25d7c6c79017"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMTEwMDY3", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-462110067", "createdAt": "2020-08-06T00:29:49Z", "commit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDoyOTo0OVrOG8fFdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo0MTowN1rOG8fRMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NzA0NQ==", "bodyText": "I'm must've missed this before. But.... Should this URL use the UUID being used for this item? Or maybe these URLs aren't really relevant in this context. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466077045", "createdAt": "2020-08-06T00:29:49Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +287,30 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+const { v4: uuidv4 } = require(\"uuid\");\n+const _ = require(\"lodash\");\n+exports.getSearchResultsCustom = (numberOfResults) => ({\n+  start: 0,\n+  length: 10,\n+  available: 30,\n+  results: _.range(numberOfResults).map((i) => ({\n+    uuid: uuidv4(),\n+    name: `item ${i}`,\n+    version: 1,\n+    status: \"live\",\n+    createdDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+    modifiedDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+    collectionId: \"9a1ddb24-6bf5-db3d-d8fe-4fca20ecf69c\",\n+    commentCount: 0,\n+    attachments: [],\n+    thumbnail: \"initial\",\n+    displayFields: [],\n+    links: {\n+      view:\n+        \"http://localhost:8080/rest/items/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n+      self:\n+        \"http://localhost:8080/rest/api/item/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NzMzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              length: 10,\n          \n          \n            \n              length: numberOfResults,", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466077338", "createdAt": "2020-08-06T00:30:51Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +287,30 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+const { v4: uuidv4 } = require(\"uuid\");\n+const _ = require(\"lodash\");\n+exports.getSearchResultsCustom = (numberOfResults) => ({\n+  start: 0,\n+  length: 10,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MDA0OQ==", "bodyText": "This is repeated from above. How about a function such as:\nconst paginatorControls = (component: ReactWrapper) => [\n  component.find(\"#firstPageButton button\"),\n  component.find(\"#lastPageButton button\"),\n  component\n    .find(\".MuiTablePagination-toolbar\")\n    .find(\"p\")\n    .at(1)\n];\nThen you could simply use it with\nconst [firstPageButton, lastPageButton, pageCount] = paginatorControls(component);\nArguably, that function could sit over in SearchPagination.test.tsx and also be used over there. And now if that paginator changes later, we have all this handling in one nice place.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466080049", "createdAt": "2020-08-06T00:41:07Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/SearchPage.test.tsx", "diffHunk": "@@ -161,20 +166,45 @@ describe(\"<SearchPage/>\", () => {\n       ...defaultSearchOptions,\n       rowsPerPage: 25,\n     });\n-    expect(component.html()).toContain(\"1-12 of 12\");\n+    expect(pageCount.text()).toContain(\"1-12 of 12\");\n   });\n \n   it(\"should support navigating to previous/next page\", async () => {\n-    const prevPageButton = component\n-      .find(\".MuiTablePagination-actions button\")\n-      .at(0);\n-    const nextPageButton = component\n-      .find(\".MuiTablePagination-actions button\")\n+    await querySearch(\"\");\n+    component.update();\n+    const prevPageButton = component.find(\"#previousPageButton button\");\n+    const nextPageButton = component.find(\"#nextPageButton button\");\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n       .at(1);\n     await awaitAct(() => nextPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"11-12 of 12\");\n+    expect(pageCount.text()).toContain(\"11-12 of 12\");\n+    await querySearch(\"\");\n+    component.update();\n     await awaitAct(() => prevPageButton.simulate(\"click\"));\n-    expect(component.html()).toContain(\"1-10 of 12\");\n+    expect(pageCount.text()).toContain(\"1-10 of 12\");\n+  });\n+\n+  it(\"should support navigating to first/last page of results\", async () => {\n+    mockSearch.mockImplementation(() =>\n+      Promise.resolve(getSearchResultsCustom(30))\n+    );\n+\n+    await querySearch(\"\");\n+    component.update();\n+    const firstPageButton = component.find(\"#firstPageButton button\");\n+    const lastPageButton = component.find(\"#lastPageButton button\");\n+    const pageCount = component\n+      .find(\".MuiTablePagination-toolbar\")\n+      .find(\"p\")\n+      .at(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee332045da2601698743abfe299690da2f280720", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/ee332045da2601698743abfe299690da2f280720", "committedDate": "2020-08-06T04:21:48Z", "message": "Change number of available results value to use parameter, instead of being hardcoded to 30"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2277cfdad7356732d408648de9032b8f2d15822", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/d2277cfdad7356732d408648de9032b8f2d15822", "committedDate": "2020-08-06T06:41:48Z", "message": "Added helper function for easy access to Pagination controls for testing purposes. And use it inside SearchPage and SearchPagination tests\n\nOrigianlly I tried exporting the function from the SearchPagination test. But eslint enforces the jest/no-export rule, so it had to go inside its own ts file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzA3MjQx", "url": "https://github.com/openequella/openEQUELLA/pull/2108#pullrequestreview-462307241", "createdAt": "2020-08-06T08:44:11Z", "commit": {"oid": "d2277cfdad7356732d408648de9032b8f2d15822"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODo0NDoxMVrOG8pP1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODo0Njo0MFrOG8pVnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI0MzU0Mw==", "bodyText": "It seems you've done it to available rather than here on length. available from server represents total available on server, however length === results.length. So hence here length === numberOfResults.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466243543", "createdAt": "2020-08-06T08:44:11Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +287,30 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+const { v4: uuidv4 } = require(\"uuid\");\n+const _ = require(\"lodash\");\n+exports.getSearchResultsCustom = (numberOfResults) => ({\n+  start: 0,\n+  length: 10,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NzMzOA=="}, "originalCommit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI0MzcwMg==", "bodyText": "Cool, fine to leave for now then.", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466243702", "createdAt": "2020-08-06T08:44:28Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/getSearchResult.js", "diffHunk": "@@ -285,3 +287,30 @@ exports.getSearchResult = {\n     },\n   ],\n };\n+\n+const { v4: uuidv4 } = require(\"uuid\");\n+const _ = require(\"lodash\");\n+exports.getSearchResultsCustom = (numberOfResults) => ({\n+  start: 0,\n+  length: 10,\n+  available: 30,\n+  results: _.range(numberOfResults).map((i) => ({\n+    uuid: uuidv4(),\n+    name: `item ${i}`,\n+    version: 1,\n+    status: \"live\",\n+    createdDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+    modifiedDate: new Date(\"2020-07-10T09:31:08.557+10:00\"),\n+    collectionId: \"9a1ddb24-6bf5-db3d-d8fe-4fca20ecf69c\",\n+    commentCount: 0,\n+    attachments: [],\n+    thumbnail: \"initial\",\n+    displayFields: [],\n+    links: {\n+      view:\n+        \"http://localhost:8080/rest/items/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",\n+      self:\n+        \"http://localhost:8080/rest/api/item/266bb0ff-a730-4658-aec0-c68bbefc227c/1/\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NzA0NQ=="}, "originalCommit": {"oid": "8813f5ca12a422718e7e7ddd325cfec62e5ce75e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI0NTAyMA==", "bodyText": "Needs JSDoc.\nAlso, seeing how many there are now, this would probably be helped to have an interface and return an object. It also make it more readable where you're chosing to skip the first few and you're doing things like [, , , nextPageButton] = ....", "url": "https://github.com/openequella/openEQUELLA/pull/2108#discussion_r466245020", "createdAt": "2020-08-06T08:46:40Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/components/SearchPaginationTestHelper.ts", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { ReactWrapper } from \"enzyme\";\n+\n+export const paginatorControls = (component: ReactWrapper) => [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2277cfdad7356732d408648de9032b8f2d15822"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1340852d0182eaf6692953db7f0c1278360542ad", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/1340852d0182eaf6692953db7f0c1278360542ad", "committedDate": "2020-08-07T00:18:11Z", "message": "Merge branch 'component/new-search-page' into feature/pagination-actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaa2de1b60f5482d9df8c8d8af1d785ced75ddf8", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/aaa2de1b60f5482d9df8c8d8af1d785ced75ddf8", "committedDate": "2020-08-07T00:32:13Z", "message": "Remove unusaed import from SearchPagination test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f082b42fa7316251683c918eb9333f4793311d8f", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/f082b42fa7316251683c918eb9333f4793311d8f", "committedDate": "2020-08-07T01:39:42Z", "message": "Make SearchPaginationTestHelper return an object, as opposed to an array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aef7bd17730d994d017e7770495f3bd5417ee29", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/2aef7bd17730d994d017e7770495f3bd5417ee29", "committedDate": "2020-08-07T01:48:22Z", "message": "Alter jest config to only include .test and .spec files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9166d768c10e04538d961f73ccfce2ebb048d63", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/a9166d768c10e04538d961f73ccfce2ebb048d63", "committedDate": "2020-08-07T05:51:52Z", "message": "Alter SearchPage test to better support pagination controls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4504576b8efd2ef0faeafb9321613c3583faf5b5", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/4504576b8efd2ef0faeafb9321613c3583faf5b5", "committedDate": "2020-08-07T05:56:22Z", "message": "Merge branch 'feature/pagination-actions' of https://github.com/mrblippy/Charliequella into feature/pagination-actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd8bf79a3c2d654873a63570ea384524fe385b9", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/3fd8bf79a3c2d654873a63570ea384524fe385b9", "committedDate": "2020-08-07T05:58:02Z", "message": "Merge branch 'component/new-search-page' into feature/pagination-actions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4852, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}