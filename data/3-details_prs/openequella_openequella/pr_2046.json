{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTMxNzc4", "number": 2046, "title": "Add support for GET /api/collection to API module", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n\nDescription of change\n\nThis adds support for the main GET endpoint to list oEQ Collections. This is initially needed so that we can provide a list of collections to filter search results by, however full support is provided here (including the use of the full flag).\nThis is very similar to the Schema endpoint, and so we have a pattern now emerging. I think any BaseEntity related Resources will more or less follow this. But we'll want to see more - especially as we start to also edit them (so far we've only done retrievals).", "createdAt": "2020-07-13T22:28:28Z", "url": "https://github.com/openequella/openEQUELLA/pull/2046", "merged": true, "mergeCommit": {"oid": "489a5892a39eecc1b1455e78466f06abc455e3de"}, "closed": true, "closedAt": "2020-07-14T02:41:33Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0cikvgH2gAyNDQ4NTMxNzc4OjU1N2ZlYTI3MWUxNjVjY2M4NGE0ZTRjNGEzOGIyOTdkZmRjM2I3NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0rKXXgH2gAyNDQ4NTMxNzc4OjFiMTM1MTk1YzI1ZjJlNmYwMDc1N2RlMjliYWYwMTQ3ZThjZWVkNmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "557fea271e165ccc84a4e4c4a38b297dfdc3b771", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/557fea271e165ccc84a4e4c4a38b297dfdc3b771", "committedDate": "2020-07-13T07:45:15Z", "message": "Add support to API module for listing Collections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65b647291081d042a3737bd513a006e94cd72c5c", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/65b647291081d042a3737bd513a006e94cd72c5c", "committedDate": "2020-07-13T22:21:16Z", "message": "chore: Tidy up formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Njg3MzQz", "url": "https://github.com/openequella/openEQUELLA/pull/2046#pullrequestreview-447687343", "createdAt": "2020-07-13T23:41:45Z", "commit": {"oid": "65b647291081d042a3737bd513a006e94cd72c5c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MTo0NVrOGw-o5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MTo0NVrOGw-o5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTExMA==", "bodyText": "Since params is optional,  I think we can just pass params.", "url": "https://github.com/openequella/openEQUELLA/pull/2046#discussion_r454011110", "createdAt": "2020-07-13T23:41:45Z", "author": {"login": "PenghaiZhang"}, "path": "oeq-ts-rest-api/src/Collection.ts", "diffHunk": "@@ -0,0 +1,48 @@\n+import * as Common from './Common';\n+import { GET } from './AxiosInstance';\n+import * as Security from './Security';\n+import { is } from 'typescript-is';\n+\n+export interface CollectionSecurity extends Security.BaseEntitySecurity {\n+  dynamicRules: Security.DynamicRule[];\n+  metadata: Record<string, Security.ItemMetadataSecurity>;\n+  statuses: Record<string, Security.TargetListEntry[]>;\n+}\n+\n+export interface Collection extends Common.BaseEntity {\n+  schema: Common.BaseEntityReference;\n+  workflow?: Common.BaseEntityReference;\n+  reviewPeriod?: number;\n+  security: CollectionSecurity;\n+  filestoreId: string;\n+}\n+\n+const isPagedCollection = (\n+  instance: unknown\n+): instance is Common.PagedResult<Collection> =>\n+  is<Common.PagedResult<Collection>>(instance);\n+\n+const COLLECTION_ROOT_PATH = '/collection';\n+\n+/**\n+ * List all available collections which the currently authenticated user has access to. Results can\n+ * be customised based on params, and if the `full` param is specified then the return value is\n+ * actually `Collection` with all details.\n+ *\n+ * @param apiBasePath Base URI to the oEQ institution and API\n+ * @param params Query parameters to customize (and/or page) result\n+ */\n+export const listCollections = (\n+  apiBasePath: string,\n+  params?: Common.ListCommonParams\n+): Promise<Common.PagedResult<Common.BaseEntity>> => {\n+  // Only if the `full` param is specified do you get a whole Collection definition, otherwise\n+  // it's the bare minimum of BaseEntity.\n+  const validator = params?.full ? isPagedCollection : Common.isPagedBaseEntity;\n+\n+  return GET<Common.PagedResult<Common.BaseEntity>>(\n+    apiBasePath + COLLECTION_ROOT_PATH,\n+    validator,\n+    params ?? undefined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b647291081d042a3737bd513a006e94cd72c5c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b135195c25f2e6f00757de29baf0147e8ceed6b", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1b135195c25f2e6f00757de29baf0147e8ceed6b", "committedDate": "2020-07-14T00:47:23Z", "message": "Remove unnecessary nullish coalescing operator\n\nThis was a hangover from back when listSchemas accepted `| null`. Was\nraised as part of PR #2046."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4954, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}