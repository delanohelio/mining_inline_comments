{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNDAwNTQy", "number": 2581, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNDoxN1rOFAnVIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNTozNFrOFAnWPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg4NzA0OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNDoxN1rOH-_38g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNDoxN1rOH-_38g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDI3NA==", "bodyText": "My initial reaction here is that it'd be great to see these use Java 8 features, and specifically Stream. However I appreciate it's calling a recursive function and so you want it to end execution on the first match (to avoid unnecessary tree walking).\nBut it would still be great if you could use the Java 8 forEach and perhaps an Optional around the search with findFolder. Just helps to make the code a bit more robust.", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820274", "createdAt": "2020-12-04T04:04:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg4OTg4OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNTozNFrOH-_5fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMzozOToyNlrOH_mGgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY2OQ==", "bodyText": "Rather than returning the ol' \"null if not found\", in Java 8 there's usefulness of Optional and all it brings to the calling code. And imagine how nice it'd read here:\nOptional<ConnectorFolder> possibleSubFolder = findFolder(subFolder, folderId);\nif(possibleSubFolder.isPresent()) {\n  return possibleSubFolder.get();\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r535820669", "createdAt": "2020-12-04T04:05:34Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }\n+\n+  /**\n+   * Recursively searches for a folder with the given ID\n+   *\n+   * @param folder\n+   * @param folderId\n+   * @return null if not found, the children of the folder if found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ0NjU5Mw==", "bodyText": "good point, that is cleaner", "url": "https://github.com/openequella/openEQUELLA/pull/2581#discussion_r536446593", "createdAt": "2020-12-04T23:39:26Z", "author": {"login": "cbeach47"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/connectors/blackboard/service/impl/BlackboardRESTConnectorServiceImpl.java", "diffHunk": "@@ -299,46 +326,161 @@ private Content getContentBean(Connector connector, String courseID, String fold\n   public List<ConnectorFolder> getFoldersForCourse(\n       Connector connector, String username, String courseId, boolean management)\n       throws LmsUserNotFoundException {\n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents\";\n \n-    return retrieveFolders(connector, url, courseId, management);\n+    return retrieveFolders(connector, courseId, management);\n   }\n \n   @Override\n   public List<ConnectorFolder> getFoldersForFolder(\n       Connector connector, String username, String courseId, String folderId, boolean management) {\n     // Username not needed to since we authenticate via 3LO.\n \n-    final String url = API_ROOT_V1 + \"courses/\" + courseId + \"/contents/\" + folderId + \"/children/\";\n+    List<ConnectorFolder> folders = retrieveFolders(connector, courseId, management);\n+    for (ConnectorFolder folder : folders) {\n+      ConnectorFolder foundFolder = findFolder(folder, folderId);\n+      if (foundFolder != null) {\n+        return foundFolder.getFolders();\n+      }\n+    }\n+\n+    // Cache of folders exist, but folderId was not found\n+    return null;\n+  }\n+\n+  /**\n+   * Recursively searches for a folder with the given ID\n+   *\n+   * @param folder\n+   * @param folderId\n+   * @return null if not found, the children of the folder if found", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY2OQ=="}, "originalCommit": {"oid": "1db86f0e806f78619b2575a2e208bed4fc7a1972"}, "originalPosition": 148}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1611, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}