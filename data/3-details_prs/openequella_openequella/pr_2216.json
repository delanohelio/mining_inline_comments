{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNDIwODUx", "number": 2216, "title": "Feature/Facet Selector", "bodyText": "#1306\nChecklist\n\n the [contributor license agreement][] is signed\n commit message follows [commit guidelines][]\n tests are included\n screenshots are included showing significant UI changes\n documentation is changed or added\n\nDescription of change\nHere is another refine control - Facet Selector.  A new type representing Search page specific Classifications was firstly added in SearchPage.tsx.  A function transforming standard Classifications to the Search page Classifications was also added in and will be consumed in the next integration.\nThe component does not have its own state so at this stage only props changes can trigger a re-render.\nJest tests and Storybooks for this component are also included.", "createdAt": "2020-08-21T05:55:06Z", "url": "https://github.com/openequella/openEQUELLA/pull/2216", "merged": true, "mergeCommit": {"oid": "9cf648fd47738832c39f5825a749075fb04747c2"}, "closed": true, "closedAt": "2020-08-25T22:52:56Z", "author": {"login": "PenghaiZhang"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA9-6tAH2gAyNDcxNDIwODUxOjJjNTEwN2M4Zjg2MzE4ZDdlZTQ5MzM3YjBiOTQ1ZjcwYmNlOWVhNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCQ1d_AFqTQ3NDE1NzUxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c5107c8f86318d7ee49337b0b945f70bce9ea59", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/2c5107c8f86318d7ee49337b0b945f70bce9ea59", "committedDate": "2020-08-21T05:30:10Z", "message": "Create a new interface and function in Search page for Classification.\n\nThis includes :\n1. Add a interface to represent Search page specific Classification type;\n2. Add a function to transform standard Classifications to Search page\n   Classifications, which will be called after Classifications are retrieved\n   from server."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c416744ba2fa669aa26202ca65fd3c5b2b1b95c", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/3c416744ba2fa669aa26202ca65fd3c5b2b1b95c", "committedDate": "2020-08-21T05:41:45Z", "message": "Create a new component as Facet Selector.\n\nThis component is basically a list of Classifications. Each item of the\nlist has a nested list representing categories, and may or may not have\na 'SHOW MORE' button. The list of categories consist of facets which show\ntheir terms and counts of related Items."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b258fc4052a2792285ffc4889c28b24257a4a4d7", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b258fc4052a2792285ffc4889c28b24257a4a4d7", "committedDate": "2020-08-21T05:42:35Z", "message": "Add Storybook and mock data for Facet Selector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5694fd201ce1d6747e3613fa3fb65ee20d711d1", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/c5694fd201ce1d6747e3613fa3fb65ee20d711d1", "committedDate": "2020-08-21T05:44:56Z", "message": "Add Jest tests for Facet Selector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/247f74f191fa905770c92958decfb1f72e8fa29a", "committedDate": "2020-08-21T06:08:16Z", "message": "Remove the transform function which is not used now to pass NPM checks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMTY5Njky", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-472169692", "createdAt": "2020-08-21T06:09:06Z", "commit": {"oid": "c5694fd201ce1d6747e3613fa3fb65ee20d711d1"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjowOTowNlrOHEcxrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjoxNjo0NVrOHEc67g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyNzgyMA==", "bodyText": "It's probably worth having a really long name in one of these to show the wrapping.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474427820", "createdAt": "2020-08-21T06:09:06Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/FacetSelector.mock.ts", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { SearchPageClassification } from \"../tsrc/search/SearchPage\";\n+\n+export const classifications: SearchPageClassification[] = [\n+  {\n+    name: \"Language\",\n+    categories: [\n+      {\n+        term: \"scala\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5694fd201ce1d6747e3613fa3fb65ee20d711d1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyODE1NA==", "bodyText": "nit: comments don't need full stops", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474428154", "createdAt": "2020-08-21T06:10:05Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyODc1Mg==", "bodyText": "For single styles, didn't we decide to just add a style prop inline?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474428752", "createdAt": "2020-08-21T06:11:58Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+  facetListItem: {\n+    padding: 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyOTIwOQ==", "bodyText": "Language string missing here.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474429209", "createdAt": "2020-08-21T06:13:40Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+  facetListItem: {\n+    padding: 0,\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            Show more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyOTc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // The number of displayed facets Depends on whether to show more\n          \n          \n            \n                // The number of displayed facets depends on whether to show more", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474429793", "createdAt": "2020-08-21T06:15:25Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+  facetListItem: {\n+    padding: 0,\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            Show more\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem\n+      className={classes.facetListItem}\n+      key={`${facet.term} ${facet.count}`}\n+    >\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.indexOf(facet.term) !== -1 : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets Depends on whether to show more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzMDE5MA==", "bodyText": "I'd avoid these single character parameter names - it would improve readability to have a meaningful identifier.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474430190", "createdAt": "2020-08-21T06:16:45Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+  facetListItem: {\n+    padding: 0,\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            Show more\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem\n+      className={classes.facetListItem}\n+      key={`${facet.term} ${facet.count}`}\n+    >\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.indexOf(facet.term) !== -1 : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets Depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.\n+   * For each Classification, a scroll bar and a 'Show more' button may or may not\n+   * be added, depending on whether a classification has more categories to show or not.\n+   */\n+  const renderClassifications = classifications\n+    .filter((c) => c.categories.length > 0)\n+    .sort((c1, c2) => c1.orderIndex - c2.orderIndex)\n+    .map((c) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247f74f191fa905770c92958decfb1f72e8fa29a"}, "originalPosition": 167}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08868823bf966d2b27660c6a4a454ca65fdb8200", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/08868823bf966d2b27660c6a4a454ca65fdb8200", "committedDate": "2020-08-21T06:20:17Z", "message": "Add one more Jest test for selecting facets."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/66a1568916d608082be25fa736ad23274aec6ec9", "committedDate": "2020-08-21T07:10:58Z", "message": "Tweaks for Facet Selector\n\n1. Use a very long name in mock data.\n2. Put the text of Show more button in language strings.\n3. Apply inline CSS style on ListItem for facets.\n4. Improve readability by using proper variable names."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTc2MTYy", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-472576162", "createdAt": "2020-08-21T15:13:50Z", "commit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNToxMzo1MFrOHExJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNToxOTozMlrOHExXCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc2MTU3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { SearchPageClassification } from \"../tsrc/search/SearchPage\";\n          \n          \n            \n            import type { SearchPageClassification } from \"../tsrc/search/SearchPage\";", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474761577", "createdAt": "2020-08-21T15:13:50Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/__mocks__/FacetSelector.mock.ts", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { SearchPageClassification } from \"../tsrc/search/SearchPage\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc2MjcwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { SearchPageClassification } from \"../SearchPage\";\n          \n          \n            \n            import type { SearchPageClassification } from \"../SearchPage\";", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474762706", "createdAt": "2020-08-21T15:15:39Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { SearchPageClassification } from \"../SearchPage\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc2NTA2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          selectedTerms ? selectedTerms.indexOf(facet.term) !== -1 : false\n          \n          \n            \n                          selectedTerms ? selectedTerms.includes(facet.term) : false\n          \n      \n    \n    \n  \n\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r474765065", "createdAt": "2020-08-21T15:19:32Z", "author": {"login": "ChristianMurphy"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.indexOf(facet.term) !== -1 : false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/483c380b6ed795f819cf5a2caf28dfdde1c12ba4", "committedDate": "2020-08-24T01:35:32Z", "message": "Two tweaks for Facet Selector\r\n\r\n1. Only import the type definition of SearchPageClassification.\r\n2. Use Array.includes to check if an element exists in the array.\n\nCo-authored-by: Christian Murphy <christian.murphy.42@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4d2a74d5bc4f4c733b2c856f15ae144954240f8", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/c4d2a74d5bc4f4c733b2c856f15ae144954240f8", "committedDate": "2020-08-24T01:52:23Z", "message": "Further simplify how to check if a term is selected or not."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDcyMDkz", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-473072093", "createdAt": "2020-08-24T01:32:10Z", "commit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMTozMjoxMVrOHFR7mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMjowMzozNlrOHFSUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5ODcxMw==", "bodyText": "Could you please check in with @mrblippy on this so that we can start using the new Args and Controls approach?\nObviously we also have @ChristianMurphy 's #2182 coming on develop too, but let's do all the new ones with that in mind.\nAlso, I know you have mock data that has showMore as true and false, however it could be worthwhile to have two a stories which demonstrates this explicitly. That is, have a single Classification, and render once with it having showMore as true, and then another with it as false. Then you can click between the two stories and see the effect.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475298713", "createdAt": "2020-08-24T01:32:11Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/FacetSelector.stories.tsx", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { action } from \"@storybook/addon-actions\";\n+import * as React from \"react\";\n+import { FacetSelector } from \"../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../__mocks__/FacetSelector.mock\";\n+\n+export default {\n+  title: \"Search/FacetSelector\",\n+  component: FacetSelector,\n+};\n+const commonProps = {\n+  classifications: FacetSelectorMock.classifications,\n+  onSelectTermsChange: action(\"on select terms\"),\n+  onShowMore: action(\"on Show more\"),\n+};\n+export const termsSelected = () => (\n+  <FacetSelector selectedTerms={[\"scala\", \"QLD\"]} {...commonProps} />\n+);\n+\n+export const noTermsSelected = () => <FacetSelector {...commonProps} />;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5OTYyOA==", "bodyText": "I've got a feeling that if you change the function signature to specify the return type:\n  const getClassificationByName = (container: HTMLElement, name: string): HTMLElement => {\nThen you wont need the as coercion.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475299628", "createdAt": "2020-08-24T01:36:47Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks\n+  const onSelectTermsChange = jest.fn();\n+  const onShowMore = jest.fn();\n+\n+  // Mocked Classifications\n+  const CITY = \"City\";\n+  const LANGUAGE = \"Language\";\n+  const COLOR = \"Color\";\n+  // Mocked facet\n+  const HOBART = \"Hobart\";\n+  // The text of 'SHOW MORE' button\n+  const SHOW_MORE = \"Show more\";\n+\n+  const renderFacetSelector = () =>\n+    render(\n+      <FacetSelector\n+        classifications={FacetSelectorMock.classifications}\n+        onSelectTermsChange={onSelectTermsChange}\n+        onShowMore={onShowMore}\n+      />\n+    );\n+\n+  // Return a 'li' that represents a Classification.\n+  const getClassificationByName = (container: HTMLElement, name: string) => {\n+    const id = `#classification_${name}`;\n+    const classification = container.querySelector(id);\n+    if (!classification) {\n+      throw new Error(`Unable to find Classification ${name}`);\n+    }\n+    return classification as HTMLElement;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5OTczMQ==", "bodyText": "Be good to pull that from the matching language string.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475299731", "createdAt": "2020-08-24T01:37:14Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks\n+  const onSelectTermsChange = jest.fn();\n+  const onShowMore = jest.fn();\n+\n+  // Mocked Classifications\n+  const CITY = \"City\";\n+  const LANGUAGE = \"Language\";\n+  const COLOR = \"Color\";\n+  // Mocked facet\n+  const HOBART = \"Hobart\";\n+  // The text of 'SHOW MORE' button\n+  const SHOW_MORE = \"Show more\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66a1568916d608082be25fa736ad23274aec6ec9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5OTg2Mg==", "bodyText": "Is that needed?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475299862", "createdAt": "2020-08-24T01:37:55Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks\n+  const onSelectTermsChange = jest.fn();\n+  const onShowMore = jest.fn();\n+\n+  // Mocked Classifications\n+  const CITY = \"City\";\n+  const LANGUAGE = \"Language\";\n+  const COLOR = \"Color\";\n+  // Mocked facet\n+  const HOBART = \"Hobart\";\n+  // The text of 'SHOW MORE' button\n+  const SHOW_MORE = \"Show more\";\n+\n+  const renderFacetSelector = () =>\n+    render(\n+      <FacetSelector\n+        classifications={FacetSelectorMock.classifications}\n+        onSelectTermsChange={onSelectTermsChange}\n+        onShowMore={onShowMore}\n+      />\n+    );\n+\n+  // Return a 'li' that represents a Classification.\n+  const getClassificationByName = (container: HTMLElement, name: string) => {\n+    const id = `#classification_${name}`;\n+    const classification = container.querySelector(id);\n+    if (!classification) {\n+      throw new Error(`Unable to find Classification ${name}`);\n+    }\n+    return classification as HTMLElement;\n+  };\n+\n+  // Return a Classification's 'SHOW MORE' button.\n+  const getShowMoreButton = (\n+    container: HTMLElement,\n+    classificationName: string\n+  ) => {\n+    const classification = getClassificationByName(\n+      container,\n+      classificationName\n+    );\n+    return queryByText(classification, SHOW_MORE);\n+  };\n+\n+  let page: RenderResult;\n+  beforeEach(() => {\n+    page = renderFacetSelector();\n+  });\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+  });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMDExMQ==", "bodyText": "There's no real need to be putting this into a variable.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475300111", "createdAt": "2020-08-24T01:39:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks\n+  const onSelectTermsChange = jest.fn();\n+  const onShowMore = jest.fn();\n+\n+  // Mocked Classifications\n+  const CITY = \"City\";\n+  const LANGUAGE = \"Language\";\n+  const COLOR = \"Color\";\n+  // Mocked facet\n+  const HOBART = \"Hobart\";\n+  // The text of 'SHOW MORE' button\n+  const SHOW_MORE = \"Show more\";\n+\n+  const renderFacetSelector = () =>\n+    render(\n+      <FacetSelector\n+        classifications={FacetSelectorMock.classifications}\n+        onSelectTermsChange={onSelectTermsChange}\n+        onShowMore={onShowMore}\n+      />\n+    );\n+\n+  // Return a 'li' that represents a Classification.\n+  const getClassificationByName = (container: HTMLElement, name: string) => {\n+    const id = `#classification_${name}`;\n+    const classification = container.querySelector(id);\n+    if (!classification) {\n+      throw new Error(`Unable to find Classification ${name}`);\n+    }\n+    return classification as HTMLElement;\n+  };\n+\n+  // Return a Classification's 'SHOW MORE' button.\n+  const getShowMoreButton = (\n+    container: HTMLElement,\n+    classificationName: string\n+  ) => {\n+    const classification = getClassificationByName(\n+      container,\n+      classificationName\n+    );\n+    return queryByText(classification, SHOW_MORE);\n+  };\n+\n+  let page: RenderResult;\n+  beforeEach(() => {\n+    page = renderFacetSelector();\n+  });\n+\n+  afterEach(() => {\n+    jest.clearAllMocks();\n+  });\n+\n+  it(\"should display a list of classifications that have categories\", () => {\n+    // Language and City should be displayed.\n+    [CITY, LANGUAGE].forEach((name) => {\n+      expect(getByText(page.container, name)).toBeInTheDocument();\n+    });\n+    // Color should not be displayed because it does not have categories.\n+    expect(queryByText(page.container, COLOR)).not.toBeInTheDocument();\n+  });\n+\n+  it(\"should display the 'SHOW MORE' button when 'showMore' is true\", () => {\n+    let showMoreButton;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMDUzNA==", "bodyText": "We should try and matching the React Testing Library function signatures. So this function should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const getShowMoreButton = (\n          \n          \n            \n              const queryShowMoreButton = (", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475300534", "createdAt": "2020-08-24T01:41:21Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/__tests__/tsrc/search/components/FacetSelector.test.tsx", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import {\n+  render,\n+  queryByText,\n+  getByText,\n+  fireEvent,\n+  RenderResult,\n+  getAllByRole,\n+} from \"@testing-library/react\";\n+import { FacetSelector } from \"../../../../tsrc/search/components/FacetSelector\";\n+import * as FacetSelectorMock from \"../../../../__mocks__/FacetSelector.mock\";\n+import \"@testing-library/jest-dom/extend-expect\";\n+\n+describe(\"<FacetSelector />\", () => {\n+  // Mocked callbacks\n+  const onSelectTermsChange = jest.fn();\n+  const onShowMore = jest.fn();\n+\n+  // Mocked Classifications\n+  const CITY = \"City\";\n+  const LANGUAGE = \"Language\";\n+  const COLOR = \"Color\";\n+  // Mocked facet\n+  const HOBART = \"Hobart\";\n+  // The text of 'SHOW MORE' button\n+  const SHOW_MORE = \"Show more\";\n+\n+  const renderFacetSelector = () =>\n+    render(\n+      <FacetSelector\n+        classifications={FacetSelectorMock.classifications}\n+        onSelectTermsChange={onSelectTermsChange}\n+        onShowMore={onShowMore}\n+      />\n+    );\n+\n+  // Return a 'li' that represents a Classification.\n+  const getClassificationByName = (container: HTMLElement, name: string) => {\n+    const id = `#classification_${name}`;\n+    const classification = container.querySelector(id);\n+    if (!classification) {\n+      throw new Error(`Unable to find Classification ${name}`);\n+    }\n+    return classification as HTMLElement;\n+  };\n+\n+  // Return a Classification's 'SHOW MORE' button.\n+  const getShowMoreButton = (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMTE0Mw==", "bodyText": "It feels to me that this actually belongs over in FacetSelector.tsx. This really sticks out, as it's not even needed here yet, but most certainly is over in FacetSelector.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475301143", "createdAt": "2020-08-24T01:44:17Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -61,6 +62,16 @@ export interface SearchPageOptions extends SearchOptions {\n   dateRangeQuickModeEnabled: boolean;\n }\n \n+/**\n+ * Represents a Classification that is specific to Search page.\n+ */\n+export interface SearchPageClassification extends Classification {\n+  /**\n+   * A boolean indicating if a classification has hidden categories to show.\n+   */\n+  showMore: boolean;\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMTU3Mw==", "bodyText": "Is string[] specific enough. What if I have the same term in multiple Classifications? Sure the search will work the same, but the UI will not look correct.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475301573", "createdAt": "2020-08-24T01:46:14Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMjAxNQ==", "bodyText": "What if classificationName has spaces?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475302015", "createdAt": "2020-08-24T01:48:32Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMjMyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n          \n          \n            \n              const facetListItem = (facet: OEQ.SearchFacets.Facet) => (", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475302326", "createdAt": "2020-08-24T01:50:01Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMjUwMA==", "bodyText": "This is not rendering, just building.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Render a MUI Checkbox and a Label for a facet.\n          \n          \n            \n               * Build a ListItem consisting of a MUI Checkbox and a Label for a facet.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475302500", "createdAt": "2020-08-24T01:50:54Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMjYzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const renderCategories = (classification: SearchPageClassification) => {\n          \n          \n            \n              const listCategories = (classification: SearchPageClassification): ListItem[] => {", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475302636", "createdAt": "2020-08-24T01:51:39Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.includes(facet.term) : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMjc4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Render a list for a Classification's categories. Some categories\n          \n          \n            \n               * Build a list for a Classification's categories. Some categories", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475302784", "createdAt": "2020-08-24T01:52:21Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.includes(facet.term) : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwMzA5MA==", "bodyText": "Bit redundant, maybe we flesh it out a bit.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param classification A Classification..\n          \n          \n            \n               * @param classification A fully defined Classification with a list of terms to build into a list - including metadata detailing how many to include.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475303090", "createdAt": "2020-08-24T01:53:51Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.includes(facet.term) : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNDEwMg==", "bodyText": "You don't need to bother building for items you're then just going to throw away:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const facets = categories.map((facet) => renderFacet(facet));\n          \n          \n            \n                // The number of displayed facets depends on whether to show more\n          \n          \n            \n                // and the maximum display number.\n          \n          \n            \n                return facets.slice(0, showMore ? maxDisplay : undefined);\n          \n          \n            \n                return categories.slice( 0, showMore ? maxDisplay : undefined)\n          \n          \n            \n                  .map(facet) => renderFacet(facet));\n          \n      \n    \n    \n  \n\nWhen you do that though, then the return is redundant:\nconst listCategories = ({categories, maxDisplay, showMore}: SearchPageClassification): ListItem[] =>\n  categories.slice( 0, showMore ? maxDisplay : undefined)\n      .map(facet) => renderFacet(facet));", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475304102", "createdAt": "2020-08-24T01:58:49Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.includes(facet.term) : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNDI1Mw==", "bodyText": "Blank line to make this final bit stand out.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              return <List>{renderClassifications}</List>;\n          \n          \n            \n            \n          \n          \n            \n              return <List>{renderClassifications}</List>;", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475304253", "createdAt": "2020-08-24T01:59:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={\n+              selectedTerms ? selectedTerms.includes(facet.term) : false\n+            }\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.\n+   * For each Classification, a scroll bar and a 'Show more' button may or may not\n+   * be added, depending on whether a classification has more categories to show or not.\n+   */\n+  const renderClassifications = classifications\n+    .filter((classification) => classification.categories.length > 0)\n+    .sort(\n+      (prevClassification, nextClassification) =>\n+        prevClassification.orderIndex - nextClassification.orderIndex\n+    )\n+    .map((classification) => {\n+      const { name, showMore } = classification;\n+      return (\n+        <ListItem divider key={name} id={`classification_${name}`}>\n+          <Grid container direction=\"column\">\n+            <Grid item>\n+              <Typography variant=\"subtitle1\">{name}</Typography>\n+            </Grid>\n+            <Grid item>\n+              <List\n+                dense\n+                className={!showMore ? classes.classificationList : \"\"}\n+              >\n+                {renderCategories(classification)}\n+                {showMore && showMoreButton(name)}\n+              </List>\n+            </Grid>\n+          </Grid>\n+        </ListItem>\n+      );\n+    });\n+  return <List>{renderClassifications}</List>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "483c380b6ed795f819cf5a2caf28dfdde1c12ba4"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNDYwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Sort and render Classifications that have categories.\n          \n          \n            \n               * Sort and build Classifications that have categories.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475304604", "createdAt": "2020-08-24T02:01:13Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={selectedTerms?.includes(facet.term) ?? false}\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d2a74d5bc4f4c733b2c856f15ae144954240f8"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNDY2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const renderClassifications = classifications\n          \n          \n            \n              const buildClassifications = classifications", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475304664", "createdAt": "2020-08-24T02:01:26Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={selectedTerms?.includes(facet.term) ?? false}\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.\n+   * For each Classification, a scroll bar and a 'Show more' button may or may not\n+   * be added, depending on whether a classification has more categories to show or not.\n+   */\n+  const renderClassifications = classifications", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d2a74d5bc4f4c733b2c856f15ae144954240f8"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNTAyMw==", "bodyText": "Why not combine these two lines?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475305023", "createdAt": "2020-08-24T02:03:08Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={selectedTerms?.includes(facet.term) ?? false}\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.\n+   * For each Classification, a scroll bar and a 'Show more' button may or may not\n+   * be added, depending on whether a classification has more categories to show or not.\n+   */\n+  const renderClassifications = classifications\n+    .filter((classification) => classification.categories.length > 0)\n+    .sort(\n+      (prevClassification, nextClassification) =>\n+        prevClassification.orderIndex - nextClassification.orderIndex\n+    )\n+    .map((classification) => {\n+      const { name, showMore } = classification;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d2a74d5bc4f4c733b2c856f15ae144954240f8"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNTEyOQ==", "bodyText": "What happens if name has spaces?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475305129", "createdAt": "2020-08-24T02:03:36Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { languageStrings } from \"../../util/langstrings\";\n+import type { SearchPageClassification } from \"../SearchPage\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A list of selected facets.\n+   */\n+  selectedTerms?: string[];\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: string[]) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   *\n+   * @param term The selected or unselected term.\n+   */\n+  const handleSelectTerms = (term: string) => {\n+    const copiedSelectedTerms = selectedTerms ? [...selectedTerms] : [];\n+    const termIndex = copiedSelectedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedSelectedTerms.push(term);\n+    } else {\n+      copiedSelectedTerms.splice(termIndex, 1);\n+    }\n+    onSelectTermsChange(copiedSelectedTerms);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string) => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button\n+            id={`${classificationName}_show_more`}\n+            variant=\"text\"\n+            onClick={() => onShowMore(classificationName)}\n+          >\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param facet A facet\n+   */\n+  const facetLabel = (facet: OEQ.SearchFacets.Facet) => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{facet.term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${facet.count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Render a MUI Checkbox and a Label for a facet.\n+   * @param facet A facet.\n+   */\n+  const renderFacet = (facet: OEQ.SearchFacets.Facet) => (\n+    <ListItem key={`${facet.term} ${facet.count}`} style={{ padding: 0 }}>\n+      <FormControlLabel\n+        control={\n+          <Checkbox\n+            checked={selectedTerms?.includes(facet.term) ?? false}\n+            onChange={() => handleSelectTerms(facet.term)}\n+          />\n+        }\n+        label={facetLabel(facet)}\n+      />\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Render a list for a Classification's categories. Some categories\n+   * may have facets not displayed due to the configured maximum display number.\n+   * @param classification A Classification..\n+   */\n+  const renderCategories = (classification: SearchPageClassification) => {\n+    const { categories, maxDisplay, showMore } = classification;\n+    const facets = categories.map((facet) => renderFacet(facet));\n+    // The number of displayed facets depends on whether to show more\n+    // and the maximum display number.\n+    return facets.slice(0, showMore ? maxDisplay : undefined);\n+  };\n+\n+  /**\n+   * Sort and render Classifications that have categories.\n+   * For each Classification, a scroll bar and a 'Show more' button may or may not\n+   * be added, depending on whether a classification has more categories to show or not.\n+   */\n+  const renderClassifications = classifications\n+    .filter((classification) => classification.categories.length > 0)\n+    .sort(\n+      (prevClassification, nextClassification) =>\n+        prevClassification.orderIndex - nextClassification.orderIndex\n+    )\n+    .map((classification) => {\n+      const { name, showMore } = classification;\n+      return (\n+        <ListItem divider key={name} id={`classification_${name}`}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4d2a74d5bc4f4c733b2c856f15ae144954240f8"}, "originalPosition": 166}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56400f00221c4d5e37269aeb6c7e38b3df906d9", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b56400f00221c4d5e37269aeb6c7e38b3df906d9", "committedDate": "2020-08-24T04:45:15Z", "message": "Refactor Facet Selector's Jest tests\n\n1. Reuse language strings.\n2. Specify the return type of function 'getClassificationByName'.\n3. Rename function 'getShowMoreButton' to 'queryShowMoreButton' to match\n   the framework's naming conventions.\n4. Remove afterEach and redundant variables."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b29bcd14a6e6ed05b0b9aba1ce2a3793cd60e76f", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b29bcd14a6e6ed05b0b9aba1ce2a3793cd60e76f", "committedDate": "2020-08-24T05:01:28Z", "message": "Move interface SearchPageClassification's definition to FacetSelector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a536b0b636fcc4fa4260fb84c970dba269a06126", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/a536b0b636fcc4fa4260fb84c970dba269a06126", "committedDate": "2020-08-24T05:02:33Z", "message": "Properly reword comments and rename functions for Facet Selector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62d6a17deeef9cc3502bff4834e052839c1508ce", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/62d6a17deeef9cc3502bff4834e052839c1508ce", "committedDate": "2020-08-24T05:27:50Z", "message": "Simplify function 'listCategories' and change its signature."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b331f81992a2b9ee67c2da8bf0bf94ce81fc52e0", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/b331f81992a2b9ee67c2da8bf0bf94ce81fc52e0", "committedDate": "2020-08-24T06:13:03Z", "message": "Refactor function 'getClassificationByName' and remove useless IDs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ff924bea801c74a942695cf6b465d5e427926f2", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/9ff924bea801c74a942695cf6b465d5e427926f2", "committedDate": "2020-08-24T06:45:24Z", "message": "Use Storybook 6 to rewrite Facet Selector's stories."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b37674035fdd6fc87caf6f771a156e5b7aca49", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/a6b37674035fdd6fc87caf6f771a156e5b7aca49", "committedDate": "2020-08-24T10:24:37Z", "message": "Change the type of selectedTerms to Map\n\nWhen facets from different Classifications have the same terms,\nuse Map to help remember which Classification the term comes\nfrom. Hence, also update signature of some functions to\ntake a Classification's name as a parameter. A few simple tweaks\nare also included."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczOTkzMDk0", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-473993094", "createdAt": "2020-08-24T23:25:00Z", "commit": {"oid": "9ff924bea801c74a942695cf6b465d5e427926f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzoyNTowMFrOHF6BaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzoyNTowMFrOHF6BaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk1NTU2MQ==", "bodyText": "I am repeating this pattern to create stories:  creating a story and configuring its args. I probably can create a template to reduce duplication\n.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r475955561", "createdAt": "2020-08-24T23:25:00Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/__stories__/search/FacetSelector.stories.tsx", "diffHunk": "@@ -15,22 +15,52 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-import { action } from \"@storybook/addon-actions\";\n import * as React from \"react\";\n-import { FacetSelector } from \"../../tsrc/search/components/FacetSelector\";\n+import {\n+  FacetSelector,\n+  FacetSelectorProps,\n+} from \"../../tsrc/search/components/FacetSelector\";\n import * as FacetSelectorMock from \"../../__mocks__/FacetSelector.mock\";\n+import type { Meta, Story } from \"@storybook/react\";\n \n export default {\n   title: \"Search/FacetSelector\",\n   component: FacetSelector,\n+  argType: {\n+    onSelectTermsChange: { action: \"on select terms\" },\n+    onShowMore: { action: \"on Show more\" },\n+  },\n+} as Meta<FacetSelectorProps>;\n+\n+export const termsSelected: Story<FacetSelectorProps> = (args) => (\n+  <FacetSelector {...args} />\n+);\n+termsSelected.args = {\n+  classifications: FacetSelectorMock.classifications,\n+  selectedTerms: [\"scala\", \"QLD\"],\n };\n-const commonProps = {\n+\n+export const noTermsSelected: Story<FacetSelectorProps> = (args) => (\n+  <FacetSelector {...args} />\n+);\n+noTermsSelected.args = {\n   classifications: FacetSelectorMock.classifications,\n-  onSelectTermsChange: action(\"on select terms\"),\n-  onShowMore: action(\"on Show more\"),\n };\n-export const termsSelected = () => (\n-  <FacetSelector selectedTerms={[\"scala\", \"QLD\"]} {...commonProps} />\n+\n+export const showMore: Story<FacetSelectorProps> = (args) => (\n+  <FacetSelector {...args} />\n );\n+showMore.args = {\n+  classifications: [\n+    { ...FacetSelectorMock.classifications[0], showMore: true },\n+  ],\n+};\n \n-export const noTermsSelected = () => <FacetSelector {...commonProps} />;\n+export const notShowMore: Story<FacetSelectorProps> = (args) => (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ff924bea801c74a942695cf6b465d5e427926f2"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ee35b6e98107cbca33017484cec6f09d0aea6d6", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/7ee35b6e98107cbca33017484cec6f09d0aea6d6", "committedDate": "2020-08-24T23:46:41Z", "message": "Reduce code duplication for the Storybook of Facet Selector."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab7a8469f7613ae70996b6c1f8cce4a132499274", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/ab7a8469f7613ae70996b6c1f8cce4a132499274", "committedDate": "2020-08-25T03:03:35Z", "message": "The key of each facetListItem should consist its term and count."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTI0NDU4", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-474124458", "createdAt": "2020-08-25T04:21:45Z", "commit": {"oid": "ab7a8469f7613ae70996b6c1f8cce4a132499274"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDoyMTo0NVrOHGF_Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDoyNDozMVrOHGGG8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MTU5NA==", "bodyText": "Hmmm, I'm reluctant to mention this - as this is so close. But... I wonder if in SearchFacetsModule.Classification we should be bringing in the UUID from the server. \ud83e\udd14 (I'm not sure why I didn't in the first place.)\nThen we'd use the UUID rather than the name for the key here, but also when doing the handlers etc. That way if someone does decide to have two Classifications/Facets with the same name, we'll be safe.\nWhat do you think?", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r476151594", "createdAt": "2020-08-25T04:21:45Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { ReactElement } from \"react\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { Classification } from \"../../modules/SearchFacetsModule\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+/**\n+ * Represents a Classification that is specific to Search page.\n+ */\n+export interface SearchPageClassification extends Classification {\n+  /**\n+   * A boolean indicating if a classification has hidden categories to show.\n+   */\n+  showMore: boolean;\n+}\n+\n+export interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A map where the key is a Classification's name and value is\n+   * a list of terms.\n+   */\n+  selectedClassificationTerms?: Map<string, string[]>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7a8469f7613ae70996b6c1f8cce4a132499274"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1MzU4NA==", "bodyText": "Interesting. Did realise you could have spaces in the key, but I guess at the end of the day internally React is probably just using the string.\nI assume this all works, so no need to change anything. Just observing.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r476153584", "createdAt": "2020-08-25T04:24:31Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/FacetSelector.tsx", "diffHunk": "@@ -0,0 +1,221 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import {\n+  Button,\n+  Checkbox,\n+  FormControlLabel,\n+  Grid,\n+  List,\n+  ListItem,\n+  Typography,\n+} from \"@material-ui/core\";\n+import { makeStyles } from \"@material-ui/core/styles\";\n+import { ReactElement } from \"react\";\n+import * as React from \"react\";\n+import * as OEQ from \"@openequella/rest-api-client\";\n+import { Classification } from \"../../modules/SearchFacetsModule\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+const useStyles = makeStyles({\n+  classificationList: {\n+    maxHeight: 500,\n+    overflow: \"auto\",\n+  },\n+});\n+\n+/**\n+ * Represents a Classification that is specific to Search page.\n+ */\n+export interface SearchPageClassification extends Classification {\n+  /**\n+   * A boolean indicating if a classification has hidden categories to show.\n+   */\n+  showMore: boolean;\n+}\n+\n+export interface FacetSelectorProps {\n+  /**\n+   * A list of Classifications.\n+   */\n+  classifications: SearchPageClassification[];\n+  /**\n+   * A map where the key is a Classification's name and value is\n+   * a list of terms.\n+   */\n+  selectedClassificationTerms?: Map<string, string[]>;\n+  /**\n+   * Handler for selecting/deselecting Classification terms.\n+   * @param terms A list of currently selected terms.\n+   */\n+  onSelectTermsChange: (terms: Map<string, string[]>) => void;\n+  /**\n+   * Handler for clicking a 'SHOW MORE' button.\n+   * @param classificationName The name of a Classification.\n+   */\n+  onShowMore: (classificationName: string) => void;\n+}\n+\n+export const FacetSelector = ({\n+  classifications,\n+  selectedClassificationTerms,\n+  onSelectTermsChange,\n+  onShowMore,\n+}: FacetSelectorProps) => {\n+  const classes = useStyles();\n+\n+  /**\n+   * Updates the list of selected Classification terms. If the term exists then remove it\n+   * from the list. Add it to the list otherwise.\n+   * A copy of the map and a copy of the array of terms are created internally\n+   * to avoid mutating parent component's state.\n+   *\n+   * @param classificationName The name of a Classification\n+   * @param term The selected or unselected term\n+   */\n+  const handleSelectTerms = (classificationName: string, term: string) => {\n+    const terms = selectedClassificationTerms?.get(classificationName);\n+    const copiedTerms = terms ? [...terms] : [];\n+    const termIndex = copiedTerms.indexOf(term);\n+    if (termIndex === -1) {\n+      copiedTerms.push(term);\n+    } else {\n+      copiedTerms.splice(termIndex, 1);\n+    }\n+    const copiedMap = new Map(selectedClassificationTerms ?? []);\n+    copiedMap.set(classificationName, copiedTerms);\n+    onSelectTermsChange(copiedMap);\n+  };\n+\n+  /**\n+   * Render a 'SHOW MORE' button for each Classification.\n+   * @param classificationName The name of a Classification.\n+   */\n+  const showMoreButton = (classificationName: string): ReactElement => (\n+    <ListItem>\n+      <Grid container justify=\"center\">\n+        <Grid item>\n+          <Button variant=\"text\" onClick={() => onShowMore(classificationName)}>\n+            {languageStrings.searchpage.facetSelector.showMoreButton}\n+          </Button>\n+        </Grid>\n+      </Grid>\n+    </ListItem>\n+  );\n+\n+  /**\n+   * Generate texts in the format of 'term (count)' for displaying a facet.\n+   * @param term The term of a facet\n+   * @param count The count of a facet\n+   */\n+  const facetLabel = ({\n+    term,\n+    count,\n+  }: OEQ.SearchFacets.Facet): ReactElement => (\n+    <Grid container spacing={1}>\n+      <Grid item>\n+        <Typography>{term}</Typography>\n+      </Grid>\n+      <Grid item>\n+        <Typography color=\"textSecondary\">{`(${count})`}</Typography>\n+      </Grid>\n+    </Grid>\n+  );\n+\n+  /**\n+   * Build a ListItem consisting of a MUI Checkbox and a Label for a facet.\n+   * @param classificationName The name of a Classification\n+   * @param facet A facet\n+   */\n+  const facetListItem = (\n+    classificationName: string,\n+    facet: OEQ.SearchFacets.Facet\n+  ): ReactElement => {\n+    const { term, count } = facet;\n+    return (\n+      <ListItem key={`${term} ${count}`} style={{ padding: 0 }}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7a8469f7613ae70996b6c1f8cce4a132499274"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1473ff618f7f5df5b2222a4a0789f0dca39a0ce4", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1473ff618f7f5df5b2222a4a0789f0dca39a0ce4", "committedDate": "2020-08-25T04:57:58Z", "message": "Add id to the definition of Classification and use id as ListItem key."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e9ad1ef609f72a76552c10b2ba39c29cba3780c", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1e9ad1ef609f72a76552c10b2ba39c29cba3780c", "committedDate": "2020-08-25T05:31:24Z", "message": "Update map 'selectedClassificationTerms' and handlers to use ID."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f5824598aaa523503ff5f8a9bc914c54269ff4", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/14f5824598aaa523503ff5f8a9bc914c54269ff4", "committedDate": "2020-08-25T05:36:38Z", "message": "Update SearchFacetsModule test to use Classification ID."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21fe1630bb11ee4739adb15d072cb9cafffc1259", "author": {"user": {"login": "PenghaiZhang", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/21fe1630bb11ee4739adb15d072cb9cafffc1259", "committedDate": "2020-08-25T05:38:00Z", "message": "Ensure the uniqueness of each facetListItem's key."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTU3NTEy", "url": "https://github.com/openequella/openEQUELLA/pull/2216#pullrequestreview-474157512", "createdAt": "2020-08-25T06:01:39Z", "commit": {"oid": "21fe1630bb11ee4739adb15d072cb9cafffc1259"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowMTozOVrOHGIvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNjowMTozOVrOHGIvnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE5Njc2Nw==", "bodyText": "Hmmm, so it's only undefined if it's dirty. We should not have any 'dirty' entries here, so perhaps we should throw an error. If we leave like this it will probably be fine, but if we ever get corrupt data this could compound the situation.\nUp to you.", "url": "https://github.com/openequella/openEQUELLA/pull/2216#discussion_r476196767", "createdAt": "2020-08-25T06:01:39Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/modules/SearchFacetsModule.ts", "diffHunk": "@@ -94,7 +98,10 @@ export const listClassifications = async (\n ): Promise<Classification[]> =>\n   Promise.all(\n     (await getFacetsFromServer()).map<Promise<Classification>>(\n-      async (settings) => ({\n+      async (settings, index) => ({\n+        // We know IDs won't be undefined here, but due to its type being number | undefined,\n+        // we have to do a nullish coalescing\n+        id: settings.id ?? index,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21fe1630bb11ee4739adb15d072cb9cafffc1259"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 516, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}