{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTQ2MTg3", "number": 2612, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzowOToyN1rOFGCX-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo1NDoyNFrOFGf13Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODc0NjgwOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/useError.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzowOToyN1rOIG2oLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzowOToyN1rOIG2oLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA1NzM4OA==", "bodyText": "I did also ponder this taking an optional deps, however at the time it wasn't needed. Now I wonder if maybe it is for the cases where's it passed an anonymous function using updateTemplate. \ud83e\udd14", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544057388", "createdAt": "2020-12-16T07:09:27Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/util/useError.ts", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import { useEffect, useState } from \"react\";\n+\n+/**\n+ * A custom hook to assist with the management of of state (and effect dependencies) for the\n+ * displaying of errors within the New UI Template. Ideally long term this will be replaced\n+ * possibly through the centralising of this via a Context with `useContent`. Further, the\n+ * project will start to make use of Error Boundaries (possibly via `react-error-boundary`).\n+ *\n+ * But for now, we have this...\n+ *\n+ * @param onError A function which typically calls out to updateTemplate to trigger the error\n+ *                mechanisms, but often passed in via props\n+ */\n+export const useError = (\n+  onError: (error: Error) => void\n+): ((error: Error) => void) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzU2NTgyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetDialog.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo1MDo0OVrOIHiRGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzo0NzowNVrOIHjZIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MjM3Nw==", "bodyText": "If this effect depends on open, do we need to put line 89 - 91 in a if statement ?\nif(open) {\n    setName(facet?.name ?? \"\");\n    setSchemaNode(facet?.schemaNode ?? \"\");\n    setMaxResults(facet?.maxResults);\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544772377", "createdAt": "2020-12-17T02:50:49Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetDialog.tsx", "diffHunk": "@@ -83,13 +83,13 @@ const FacetDialog = ({\n   const isSchemaNodeInvalid = validateFacetFields(schemaNode);\n \n   /**\n-   * Initialise textfields' values, depending on 'onClose'.\n+   * Initialise `textfields` values when the dialog is opened.\n    */\n   useEffect(() => {\n     setName(facet?.name ?? \"\");\n     setSchemaNode(facet?.schemaNode ?? \"\");\n     setMaxResults(facet?.maxResults);\n-  }, [onClose]);\n+  }, [open, facet]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc5MDgxOQ==", "bodyText": "Wouldn't be a bad idea as an optimisation.... Actually, might suppress a visual oddity... I'll go add that. \ud83d\udc4d", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544790819", "createdAt": "2020-12-17T03:47:05Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetDialog.tsx", "diffHunk": "@@ -83,13 +83,13 @@ const FacetDialog = ({\n   const isSchemaNodeInvalid = validateFacetFields(schemaNode);\n \n   /**\n-   * Initialise textfields' values, depending on 'onClose'.\n+   * Initialise `textfields` values when the dialog is opened.\n    */\n   useEffect(() => {\n     setName(facet?.name ?? \"\");\n     setSchemaNode(facet?.schemaNode ?? \"\");\n     setMaxResults(facet?.maxResults);\n-  }, [onClose]);\n+  }, [open, facet]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MjM3Nw=="}, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzU3NDY5OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetedSearchSettingsPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo1NDoyNFrOIHiV6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzo0MjozNlrOIHjUCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MzYxMQ==", "bodyText": "If a language string is changed, users must fresh the page to see the new language string, which means this component will get re-rendered. So is it really useful to make this effect depend on facetedsearchsettingStrings.name?", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544773611", "createdAt": "2020-12-17T02:54:24Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetedSearchSettingsPage.tsx", "diffHunk": "@@ -106,13 +111,12 @@ const FacetedSearchSettingsPage = ({ updateTemplate }: TemplateUpdateProps) => {\n       ...templateDefaults(facetedsearchsettingStrings.name)(tp),\n       backRoute: routes.Settings.to,\n     }));\n-    getFacets();\n-  }, []);\n+  }, [updateTemplate, facetedsearchsettingStrings.name]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc4OTUxMg==", "bodyText": "Yup, it's a fair point. But that's an implementation detail that is correct right now. In the future we could suddenly be doing something more dynamic - even if, that's very unlikely.\nBut the idea of dependencies are more abstract than that. That is, any external variable (incl. function) could be irrelevant/changed due to the enclosing function having been destroyed/recreated, so by making sure they're included the anonymous function in the effect is still closing over relative data.\nHowever, in the real world when you read this you can find yourself asking... What's the point, that'll never change - and in that case, then we could use the eslint suppress comment, but seems like it's better to just declare it when you know it.", "url": "https://github.com/openequella/openEQUELLA/pull/2612#discussion_r544789512", "createdAt": "2020-12-17T03:42:36Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/settings/Search/facetedsearch/FacetedSearchSettingsPage.tsx", "diffHunk": "@@ -106,13 +111,12 @@ const FacetedSearchSettingsPage = ({ updateTemplate }: TemplateUpdateProps) => {\n       ...templateDefaults(facetedsearchsettingStrings.name)(tp),\n       backRoute: routes.Settings.to,\n     }));\n-    getFacets();\n-  }, []);\n+  }, [updateTemplate, facetedsearchsettingStrings.name]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3MzYxMQ=="}, "originalCommit": {"oid": "18cbd416b5203005f3eeec91ecd2123c969ea426"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1634, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}