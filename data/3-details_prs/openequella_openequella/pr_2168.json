{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1ODc1NTk1", "number": 2168, "title": "Add flag to Search2 api, indicating if search term was found in item attachments", "bodyText": "Add flag to Search2 api, indicating if search term was found in item attachments\n\nChecklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n\nDescription of change\n\n#1306\nThis was not as straight forward as originally envisioned. SearchResource.scala was previously performing a search using the searchIds method in FreeTextService\nas opposed to\nsearch method in FreeTextService,  which returns an FreetextResult object with the keywordFoundInAttachment data required", "createdAt": "2020-08-11T05:31:10Z", "url": "https://github.com/openequella/openEQUELLA/pull/2168", "merged": true, "mergeCommit": {"oid": "97eaddc66530120b09373353329ef1ee8ea8118f"}, "closed": true, "closedAt": "2020-08-14T03:28:42Z", "author": {"login": "mrblippy"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9vqpdgH2gAyNDY1ODc1NTk1OmZjZTU4NTg4NDZlYmJkYjQ2M2Q1ZmJhZjAyNjI2MjI2MmRjN2FkMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-qXlzAH2gAyNDY1ODc1NTk1OmE5ZmQ3ODBkNDFhY2ZkYWRiNmI1NDMzNzk1YWViNDAwZjJjOThlNjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/fce5858846ebbdb463d5fbaf026262262dc7ad26", "committedDate": "2020-08-11T05:07:35Z", "message": "Add flag to Search2 api, indicating if search term was found in item attachment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzcyMzEy", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-464772312", "createdAt": "2020-08-11T06:08:05Z", "commit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjowODowNVrOG-pn2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjozMDo1OVrOG-qH-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0Njg0MQ==", "bodyText": "There is one more blank line added above.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468346841", "createdAt": "2020-08-11T06:08:05Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchHelper.scala", "diffHunk": "@@ -39,6 +40,7 @@ import com.tle.web.api.item.equella.interfaces.beans.{\n }\n import com.tle.web.api.item.interfaces.beans.AttachmentBean\n import com.tle.web.api.search.model.{SearchParam, SearchResultAttachment, SearchResultItem}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0NzE0Nw==", "bodyText": "Better to keep the type of this variable.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468347147", "createdAt": "2020-08-11T06:08:56Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchResource.scala", "diffHunk": "@@ -44,23 +45,28 @@ class SearchResource {\n     response = classOf[SearchResult[SearchResultItem]],\n   )\n   def searchItems(@BeanParam params: SearchParam): Response = {\n-    val searchResults: SearchResults[ItemIdKey] =\n-      LegacyGuice.freeTextService.searchIds(createSearch(params), params.start, params.length)\n-    val itemIds: List[ItemIdKey] = searchResults.getResults.asScala.toList\n-    val serializer               = createSerializer(itemIds)\n-    val items: List[(ItemIdKey, EquellaItemBean)] = for { itemId <- itemIds } yield {\n+    val searchResults: FreetextSearchResults[FreetextResult] =\n+      LegacyGuice.freeTextService.search(createSearch(params), params.start, params.length)\n+    val itemIds = for { item <- searchResults.getSearchResults.asScala } yield {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM1MjcyNg==", "bodyText": "Above two for comprehensives can be refactored to:\nval itemIdsAndItems: : List[(ItemIdKey, FreetextResult)] = searchResults.getSearchResults.asScala.map(result => (result.getItemIdKey, result)).toList\nval serializer = createSerializer(itemIdsAndItems.map(_._1))\nval items = itemIdsAndItems.map{\n  case (itemIdKey, freeTextResult) =>\n    val keyFound = freeTextResult.isKeywordFoundInAttachment\n    val itemBean = new EquellaItemBean\n    itemBean.setKeyWordFoundInAttachment(keyFound)\n    itemBean.setUuid(itemIdKey.getUuid)\n    itemBean.setVersion(itemIdKey.getVersion)\n    serializer.writeItemBeanResult(itemBean, itemIdKey.getKey)\n    LegacyGuice.itemLinkService.addLinks(itemBean)\n    itemIdKey -> itemBean\n}", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468352726", "createdAt": "2020-08-11T06:24:40Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchResource.scala", "diffHunk": "@@ -44,23 +45,28 @@ class SearchResource {\n     response = classOf[SearchResult[SearchResultItem]],\n   )\n   def searchItems(@BeanParam params: SearchParam): Response = {\n-    val searchResults: SearchResults[ItemIdKey] =\n-      LegacyGuice.freeTextService.searchIds(createSearch(params), params.start, params.length)\n-    val itemIds: List[ItemIdKey] = searchResults.getResults.asScala.toList\n-    val serializer               = createSerializer(itemIds)\n-    val items: List[(ItemIdKey, EquellaItemBean)] = for { itemId <- itemIds } yield {\n+    val searchResults: FreetextSearchResults[FreetextResult] =\n+      LegacyGuice.freeTextService.search(createSearch(params), params.start, params.length)\n+    val itemIds = for { item <- searchResults.getSearchResults.asScala } yield {\n+      item.getItemIdKey\n+    }\n+    val serializer = createSerializer(itemIds.toList)\n+    val items = for { resultData <- searchResults.getSearchResults.asScala } yield {\n+      val keyFound = resultData.isKeywordFoundInAttachment\n+      val itemId   = resultData.getItemIdKey\n       val itemBean = new EquellaItemBean\n+      itemBean.setKeyWordFoundInAttachment(keyFound)\n       itemBean.setUuid(itemId.getUuid)\n       itemBean.setVersion(itemId.getVersion)\n       serializer.writeItemBeanResult(itemBean, itemId.getKey)\n       LegacyGuice.itemLinkService.addLinks(itemBean)\n       itemId -> itemBean\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM1NDM0OA==", "bodyText": "I think this field does not have to be a Option. A Boolean should be enough. And Javadoc for this field is missing.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468354348", "createdAt": "2020-08-11T06:29:05Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/model/SearchResultItem.scala", "diffHunk": "@@ -53,6 +53,7 @@ case class SearchResultItem(\n     thumbnail: String,\n     displayFields: List[DisplayField],\n     displayOptions: Option[DisplayOptions],\n+    keywordFoundInAttachment: Option[Boolean],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM1NTA2Nw==", "bodyText": "This method seems to be unused so we can remove it.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468355067", "createdAt": "2020-08-11T06:30:59Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/services/item/StdFreetextResults.java", "diffHunk": "@@ -50,6 +50,10 @@ public StdFreetextResults(ItemService itemService, SearchResults<T> results, Sea\n     return items;\n   }\n \n+  public SearchResults<T> getSearchResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0ODUwMDI1", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-464850025", "createdAt": "2020-08-11T08:22:25Z", "commit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMjoyNVrOG-tbqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyMjoyNVrOG-tbqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQwOTI1Ng==", "bodyText": "So wouldn't this then modify the model returned from the existing search API? Do we need it here, or can we leave it just in the SearchResultItem on the scala side?", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468409256", "createdAt": "2020-08-11T08:22:25Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.base/src/com/tle/web/api/item/interfaces/beans/ItemBean.java", "diffHunk": "@@ -194,4 +195,12 @@ public ItemExportBean getExportDetails() {\n   public void setExportDetails(ItemExportBean exportDetails) {\n     this.exportDetails = exportDetails;\n   }\n+\n+  public boolean isKeyWordFoundInAttachment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTA3OTE2", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-465507916", "createdAt": "2020-08-12T00:07:41Z", "commit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowNzo0MVrOG_NU5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMDowNzo0MVrOG_NU5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkzMTgxNQ==", "bodyText": "Because there is so much confusion in this class, I also suggest we put some comments here to explain why we added this new method and why the one in TopicDisplaySection.java returns null.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r468931815", "createdAt": "2020-08-12T00:07:41Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/src/com/tle/core/services/item/StdFreetextResults.java", "diffHunk": "@@ -63,6 +67,11 @@ public ItemKey getItemKey(int index) {\n     return results.getResults().get(index).getItemKey();\n   }\n \n+  @Override\n+  public List<T> getSearchResults() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fce5858846ebbdb463d5fbaf026262262dc7ad26"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9b05690559e7eb429b02c1d6ce7bfadb1f1e305", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/a9b05690559e7eb429b02c1d6ce7bfadb1f1e305", "committedDate": "2020-08-12T02:15:59Z", "message": "Remove isKeywordFoundInAttachment boolean from ItemBean, and refactor SearchHelper and SearchResource.\n\nThis ensures that the keywordFoundInAttachment boolean is only returned for the Search2 rest api. The Search api result structure is left alone"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NTg4MzY3", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-465588367", "createdAt": "2020-08-12T04:48:58Z", "commit": {"oid": "a9b05690559e7eb429b02c1d6ce7bfadb1f1e305"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNDo0ODo1OFrOG_RrAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNDo1Njo0N1rOG_RylQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwMzAwOQ==", "bodyText": "object SearchItem {\n  def apply(item: FreetextResult, serializer: ItemSerializerItemBean) : SearchItem = {\n            val keywordFoundInAttachment = item.isKeywordFoundInAttachment\n            val itemId                   = item.getItemIdKey\n            val itemBean                 = new EquellaItemBean\n            itemBean.setUuid(itemId.getUuid)\n            itemBean.setVersion(itemId.getVersion)\n            serializer.writeItemBeanResult(itemBean, itemId.getKey)\n            LegacyGuice.itemLinkService.addLinks(itemBean)\n            itemId -> itemBean\n            SearchItem(itemId, itemBean, keywordFoundInAttachment)\n  }\n}\nI suggest we add a company object for this case class and then add a apply function.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r469003009", "createdAt": "2020-08-12T04:48:58Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchResource.scala", "diffHunk": "@@ -51,22 +50,32 @@ class SearchResource {\n       item.getItemIdKey\n     }\n     val serializer = createSerializer(itemIds.toList)\n-    val items = for { resultData <- searchResults.getSearchResults.asScala } yield {\n-      val keyFound = resultData.isKeywordFoundInAttachment\n-      val itemId   = resultData.getItemIdKey\n-      val itemBean = new EquellaItemBean\n-      itemBean.setKeyWordFoundInAttachment(keyFound)\n-      itemBean.setUuid(itemId.getUuid)\n-      itemBean.setVersion(itemId.getVersion)\n-      serializer.writeItemBeanResult(itemBean, itemId.getKey)\n-      LegacyGuice.itemLinkService.addLinks(itemBean)\n-      itemId -> itemBean\n+    val items: List[SearchItem] = {\n+      val items = for { resultData <- searchResults.getSearchResults.asScala } yield {\n+        val keywordFoundInAttachment = resultData.isKeywordFoundInAttachment\n+        val itemId                   = resultData.getItemIdKey\n+        val itemBean                 = new EquellaItemBean\n+        itemBean.setUuid(itemId.getUuid)\n+        itemBean.setVersion(itemId.getVersion)\n+        serializer.writeItemBeanResult(itemBean, itemId.getKey)\n+        LegacyGuice.itemLinkService.addLinks(itemBean)\n+        itemId -> itemBean\n+        SearchItem(itemId, itemBean, keywordFoundInAttachment)\n+      }\n+      items.toList\n     }\n-\n     val result = SearchResult(searchResults.getOffset,\n                               searchResults.getCount,\n                               searchResults.getAvailable,\n-                              items.toList.map(convertToItem))\n+                              items.map(convertToItem))\n     Response.ok.entity(result).build()\n   }\n }\n+\n+/**\n+  * This class provides general information of an Item to be used inside a SearchResult.\n+  * @param idKey\n+  * @param bean An EquellaItemBean\n+  * @param keywordFound Indicates if a search term has been found inside attachment content\n+  */\n+case class SearchItem(idKey: ItemIdKey, bean: EquellaItemBean, keywordFound: Boolean)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9b05690559e7eb429b02c1d6ce7bfadb1f1e305"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAwNDk0OQ==", "bodyText": "We can simplify this function by doing this.\n    val freetextResults = searchResults.getSearchResults.asScala.toList\n    val itemIds = freetextResults.map(_.getItemIdKey)\n    val serializer = createSerializer(itemIds)\n    val items : List[SearchItem] = freetextResults.map(result => SearchItem(result, serializer))", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r469004949", "createdAt": "2020-08-12T04:56:47Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/scalasrc/com/tle/web/api/search/SearchResource.scala", "diffHunk": "@@ -51,22 +50,32 @@ class SearchResource {\n       item.getItemIdKey\n     }\n     val serializer = createSerializer(itemIds.toList)\n-    val items = for { resultData <- searchResults.getSearchResults.asScala } yield {\n-      val keyFound = resultData.isKeywordFoundInAttachment\n-      val itemId   = resultData.getItemIdKey\n-      val itemBean = new EquellaItemBean\n-      itemBean.setKeyWordFoundInAttachment(keyFound)\n-      itemBean.setUuid(itemId.getUuid)\n-      itemBean.setVersion(itemId.getVersion)\n-      serializer.writeItemBeanResult(itemBean, itemId.getKey)\n-      LegacyGuice.itemLinkService.addLinks(itemBean)\n-      itemId -> itemBean\n+    val items: List[SearchItem] = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9b05690559e7eb429b02c1d6ce7bfadb1f1e305"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "210e86b10193af77aa22f028f8896951e9b0bc32", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/210e86b10193af77aa22f028f8896951e9b0bc32", "committedDate": "2020-08-12T06:33:04Z", "message": "Create SearchItem, make use of the apply method. Credit for this mainly goes to @PenghaiZhang"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjM0NTg3", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-465634587", "createdAt": "2020-08-12T06:51:46Z", "commit": {"oid": "210e86b10193af77aa22f028f8896951e9b0bc32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Njc1NDY1", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-465675465", "createdAt": "2020-08-12T07:56:18Z", "commit": {"oid": "210e86b10193af77aa22f028f8896951e9b0bc32"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1NjoxOFrOG_WDxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1NjoxOFrOG_WDxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NDg4Nw==", "bodyText": "I must be missing something. But... Where is this now set? (I only see it being read.)", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r469074887", "createdAt": "2020-08-12T07:56:18Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.base/src/com/tle/web/api/item/interfaces/beans/ItemBean.java", "diffHunk": "@@ -47,6 +47,7 @@\n   private List<AttachmentBean> attachments;\n   private NavigationTreeBean navigation;\n   private DrmBean drm;\n+  private boolean isKeyWordFoundInAttachment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "210e86b10193af77aa22f028f8896951e9b0bc32"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ab33914f289ba14c98f3566d6298cef91c77d6", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/09ab33914f289ba14c98f3566d6298cef91c77d6", "committedDate": "2020-08-13T01:37:50Z", "message": "Remove unused boolean variable from ItemBean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "200cb864c91fe423daf151ce910f570d06af2eb3", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/200cb864c91fe423daf151ce910f570d06af2eb3", "committedDate": "2020-08-13T05:40:40Z", "message": "Update Search2 api test to check for eywordFoundInAttachment boolean flag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjIxOTkz", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-467221993", "createdAt": "2020-08-13T23:59:51Z", "commit": {"oid": "200cb864c91fe423daf151ce910f570d06af2eb3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8770f34c73ca60acfb21d5f05583b14c6a2678ba", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/8770f34c73ca60acfb21d5f05583b14c6a2678ba", "committedDate": "2020-08-14T00:22:33Z", "message": "Add negative test for searching within attachment content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjUxNDY4", "url": "https://github.com/openequella/openEQUELLA/pull/2168#pullrequestreview-467251468", "createdAt": "2020-08-14T01:20:07Z", "commit": {"oid": "8770f34c73ca60acfb21d5f05583b14c6a2678ba"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMToyMDowN1rOHAkf8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMToyMDowN1rOHAkf8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2MDA0OQ==", "bodyText": "As discussed, let's add a comment to further explain what's going on here - i.e. using the same item, but now searching for a value in the item vs the attachment.", "url": "https://github.com/openequella/openEQUELLA/pull/2168#discussion_r470360049", "createdAt": "2020-08-14T01:20:07Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/rest/Search2ApiTest.java", "diffHunk": "@@ -75,6 +75,21 @@ public void startLengthTest() throws IOException {\n     assertEquals(result.get(\"results\").size(), 2);\n   }\n \n+  @Test(description = \"Search for a term that is found inside an attachment\")\n+  public void termFoundInAttachmentTest() throws IOException {\n+    JsonNode itemResult = doSearch(200, new NameValuePair(\"query\", \"frogs\")).get(\"results\").get(0);\n+    assertEquals(itemResult.get(\"keywordFoundInAttachment\").asBoolean(), true);\n+  }\n+\n+  @Test(description = \"Search for a term that is not found inside an attachment\")\n+  public void noTermFoundInAttachmentTest() throws IOException {\n+    JsonNode itemResult =\n+        doSearch(200, new NameValuePair(\"query\", \"Keyword found in attachment test item\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8770f34c73ca60acfb21d5f05583b14c6a2678ba"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9fd780d41acfdadb6b5433795aeb400f2c98e62", "author": {"user": {"login": "mrblippy", "name": "Nick Charles"}}, "url": "https://github.com/openequella/openEQUELLA/commit/a9fd780d41acfdadb6b5433795aeb400f2c98e62", "committedDate": "2020-08-14T01:31:10Z", "message": "Remove duplicated id from institution data, and add additional comments to aid in test readability"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4894, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}