{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NjAwOTYz", "number": 2113, "title": "oeq-ts-rest-api: Add support for /userquery/search", "bodyText": "Checklist\n\n\n the contributor license agreement is signed\n commit message follows commit guidelines\n tests are included\n\nDescription of change\n\nPrimarily the change here was to add support for the /userquery/search endpoint in the form of UserQuery.ts. But then when I noticed the formatting on my commits was not correct I added that support to the oeq-ts-rest-api module by applying the final tweaks tooeq-ts-rest-api/package.json and oeq-ts-rest-api/.eslintrc.js. On running that, suddenly I found many other files were also a bit out of wack.\nSo unfortunately this PR now contains a lot more noise than I'd like. Here is a run down to the help:\nFeature (ccf789a):\n\nUserQuery.ts\nUserQuery.test.ts\nAuxillary: Common.ts, index.ts, TestConfig.ts\n\nRan the tests:\nTest Suites: 7 passed, 7 total\nTests:       23 passed, 23 total\nSnapshots:   0 total\nTime:        4.905 s\nRan all test suites.", "createdAt": "2020-07-28T07:06:41Z", "url": "https://github.com/openequella/openEQUELLA/pull/2113", "merged": true, "mergeCommit": {"oid": "fbbd7f0d2f7760c85559292a6774e491449595b6"}, "closed": true, "closedAt": "2020-07-29T03:56:37Z", "author": {"login": "edalex-ian"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5QhtcAH2gAyNDU3NjAwOTYzOmNjZjc4OWE1ZjBmNTBhZGNiYjZlMmFmZGM3MTliNDFlOTJjZWJhM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5hDyPAFqTQ1NzEzMzU1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccf789a5f0f50adcbb6e2afdc719b41e92ceba3d", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/ccf789a5f0f50adcbb6e2afdc719b41e92ceba3d", "committedDate": "2020-07-28T06:35:04Z", "message": "oeq-ts-rest-api: Add support for /userquery/search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a463251b94a639c7b9ddd0baa8e94419f3e4a83", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/1a463251b94a639c7b9ddd0baa8e94419f3e4a83", "committedDate": "2020-07-28T06:52:16Z", "message": "oeq-ts-rest-api: Add eslint/prettier formatting support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4", "author": {"user": {"login": "edalex-ian", "name": null}}, "url": "https://github.com/openequella/openEQUELLA/commit/a602ad979872b85c35595dd761bfc3a054d6fab4", "committedDate": "2020-07-28T06:55:16Z", "message": "oeq-ts-rest-api: Apply formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDYwNTE3", "url": "https://github.com/openequella/openEQUELLA/pull/2113#pullrequestreview-457060517", "createdAt": "2020-07-28T22:02:33Z", "commit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowMjozM1rOG4g-OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMjowMjozM1rOG4g-OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkxMzY1Ng==", "bodyText": "If uuid the string is different from other strings, would it make sense to make it an opaque type?\nhttps://codemix.com/opaque-types-in-javascript\nhttps://github.com/sindresorhus/type-fest", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461913656", "createdAt": "2020-07-28T22:02:33Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/src/Common.ts", "diffHunk": "@@ -5,6 +5,8 @@ export type i18nString = string;\n \n export type I18nStrings = Record<string, string>;\n \n+export type UuidString = string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTA2MzE4", "url": "https://github.com/openequella/openEQUELLA/pull/2113#pullrequestreview-457106318", "createdAt": "2020-07-28T23:55:35Z", "commit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzo1NTozNVrOG4jwnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzo1NTozNVrOG4jwnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTMyNw==", "bodyText": "what parts of the node env are being used?", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461959327", "createdAt": "2020-07-28T23:55:35Z", "author": {"login": "ChristianMurphy"}, "path": "oeq-ts-rest-api/.eslintrc.js", "diffHunk": "@@ -1,6 +1,7 @@\n module.exports = {\n   root: true,\n   env: {\n+    node: true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTMzNTUx", "url": "https://github.com/openequella/openEQUELLA/pull/2113#pullrequestreview-457133551", "createdAt": "2020-07-29T01:25:32Z", "commit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMToyNTozMlrOG4lQrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMTo0Nzo0M1rOG4ln6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4MzkxNg==", "bodyText": "Since this type is specific to uuid, should we update types of uuid for other objects later ? such as uuid of BaseEntity and SearchResultItem", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461983916", "createdAt": "2020-07-29T01:25:32Z", "author": {"login": "PenghaiZhang"}, "path": "oeq-ts-rest-api/src/Common.ts", "diffHunk": "@@ -5,6 +5,8 @@ export type i18nString = string;\n \n export type I18nStrings = Record<string, string>;\n \n+export type UuidString = string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk4OTg2Nw==", "bodyText": "Is params optional ?  If we want to get all users, groups and roles we probably don't need to pass params", "url": "https://github.com/openequella/openEQUELLA/pull/2113#discussion_r461989867", "createdAt": "2020-07-29T01:47:43Z", "author": {"login": "PenghaiZhang"}, "path": "oeq-ts-rest-api/src/UserQuery.ts", "diffHunk": "@@ -0,0 +1,66 @@\n+import { GET } from './AxiosInstance';\n+import { is } from 'typescript-is';\n+import { UuidString } from './Common';\n+\n+export interface UserDetails {\n+  id: UuidString;\n+  username: string;\n+  firstName: string;\n+  lastName: string;\n+  email?: string;\n+}\n+\n+export interface GroupDetails {\n+  id: UuidString;\n+  name: string;\n+}\n+\n+export interface RoleDetails {\n+  id: UuidString;\n+  name: string;\n+}\n+\n+/**\n+ * Results for the Search operation, where lists will be populated based on Search criteria. If\n+ * the Search criteria results in no results for one of the lists, then they will be returned as\n+ * an empty list.\n+ *\n+ * Based on com.tle.web.api.users.LookupQueryResult\n+ */\n+export interface SearchResult {\n+  users: UserDetails[];\n+  groups: GroupDetails[];\n+  roles: RoleDetails[];\n+}\n+\n+export interface SearchParams {\n+  /** Wildcard supporting text string to filter results by. */\n+  q?: string;\n+  /** Include groups in the results. */\n+  groups: boolean;\n+  /** Include roles in the results. */\n+  roles: boolean;\n+  /** Include users in the results. */\n+  users: boolean;\n+}\n+\n+const isSearchResult = (instance: unknown): instance is SearchResult =>\n+  is<SearchResult>(instance);\n+\n+const USERQUERY_ROOT_PATH = '/userquery';\n+\n+/**\n+ * Search for users and related entities (i.e. groups and roles).\n+ *\n+ * @param apiBasePath Base URI to the oEQ institution and API\n+ * @param params Query parameters to customize result\n+ */\n+export const search = (\n+  apiBasePath: string,\n+  params: SearchParams", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a602ad979872b85c35595dd761bfc3a054d6fab4"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}