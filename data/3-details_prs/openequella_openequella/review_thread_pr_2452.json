{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NjI3MjU5", "number": 2452, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDozMjozNVrOEw_fjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTo0OFrOEx_p1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODA3MzcyOnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMDozMjozNVrOHm4dGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowMjowOFrOHm_LoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzMjg5MA==", "bodyText": "I wonder if people want to add this annotation on class level. Adding it on method level gives more flexibility though.", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r510532890", "createdAt": "2020-10-23T00:32:35Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @SkipTest(skipOldUI = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6752dfe3786d8939e866db3b7771663d2b2a85de"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0MzEwNA==", "bodyText": "Depends. If this class is dedicated to newUI, I'd say put it at the class level.", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r510643104", "createdAt": "2020-10-23T06:02:08Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @SkipTest(skipOldUI = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDUzMjg5MA=="}, "originalCommit": {"oid": "6752dfe3786d8939e866db3b7771663d2b2a85de"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODc5MDk0OnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/src/test/java/testng/TestAnnotationTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowNTo0N1rOHm_ZtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowNTo0N1rOHm_ZtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0NjcwOQ==", "bodyText": "Arguably these should be split out into two methods:\n\ncheckRetryAnnotation; and\ncheckSkipTestAnnotation.", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r510646709", "createdAt": "2020-10-23T06:05:47Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/testng/TestAnnotationTransformer.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package testng;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+import org.testng.IAnnotationTransformer;\n+import org.testng.annotations.ITestAnnotation;\n+import testng.annotation.RetryTest;\n+import testng.annotation.SkipTest;\n+\n+public class TestAnnotationTransformer implements IAnnotationTransformer {\n+  private static final String OLD_TEST_NEWUI = \"OLD_TEST_NEWUI\";\n+\n+  @Override\n+  public void transform(\n+      ITestAnnotation annotation, Class testClass, Constructor testConstructor, Method testMethod) {\n+    if (testMethod == null) return;\n+\n+    RetryTest maxRetryCount = testMethod.getAnnotation(RetryTest.class);\n+    if (maxRetryCount != null && maxRetryCount.value() > 1) {\n+      annotation.setRetryAnalyzer(FailureRetryAnalyzer.class);\n+    }\n+\n+    SkipTest skipTest = testMethod.getAnnotation(SkipTest.class);\n+    // Read the configuration of using new UI or not from environment variable.\n+    boolean isNewUIEnabled = Boolean.parseBoolean(System.getProperty(OLD_TEST_NEWUI));\n+    // Skip tests that should not run against Old UI when CI is running in Old UI.\n+    if (skipTest != null && skipTest.skipOldUI() && !isNewUIEnabled) {\n+      annotation.setEnabled(false);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e8ea9c228c17ff0ce1cc3c2ee3809effe0f6975"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODgwNDIyOnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/src/test/java/testng/annotation/SkipTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowODoyNlrOHm_jKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowODoyNlrOHm_jKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0OTEzMQ==", "bodyText": "Seeing this annotation is just about skipping base on old vs new, should we maybe go with naming like NewUiOnly? And have a simple value so that then you can have:\n@NewUiOnly(true)\n@Test\nclass NewUiTests {", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r510649131", "createdAt": "2020-10-23T06:08:26Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/src/test/java/testng/annotation/SkipTest.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package testng.annotation;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface SkipTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e8ea9c228c17ff0ce1cc3c2ee3809effe0f6975"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5ODgwNzc4OnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/testng-codebuild.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowOTowMlrOHm_llg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjowOTowMlrOHm_llg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY0OTc1MA==", "bodyText": "Nice work dude! Shame our retry tests appear to have not been running on CI.", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r510649750", "createdAt": "2020-10-23T06:09:02Z", "author": {"login": "edalex-ian"}, "path": "autotest/OldTests/testng-codebuild.yaml", "diffHunk": "@@ -1,6 +1,7 @@\n name: SingleSuite\n threadCount: 1\n-\n+listeners:\n+  - testng.TestAnnotationTransformer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e8ea9c228c17ff0ce1cc3c2ee3809effe0f6975"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODU4NTgyOnYy", "diffSide": "RIGHT", "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTo0OFrOHoZBFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzoxMDo1MlrOHoluFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDk2NQ==", "bodyText": "out of curiosity, why does this need to be passed true?\nWouldn't it default to true?", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r512114965", "createdAt": "2020-10-26T16:51:48Z", "author": {"login": "ChristianMurphy"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @NewUIOnly(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b44fb0cabdaa83ea2dc81c9878f75025ee9ea0f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwOTQzOQ==", "bodyText": "Oh I thought it defaults to false \ud83e\udd14  I might be wrong.", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r512309439", "createdAt": "2020-10-26T22:34:35Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @NewUIOnly(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDk2NQ=="}, "originalCommit": {"oid": "5b44fb0cabdaa83ea2dc81c9878f75025ee9ea0f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMDQ5NQ==", "bodyText": "Okay, and why is the default false?\nIf it shouldn't run in NewUIOnly, wouldn't it not have the NewUIOnly annotation?\nIt seems like false would be the exception, not the rule?\nUnless I'm missing some context here", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r512310495", "createdAt": "2020-10-26T22:37:29Z", "author": {"login": "ChristianMurphy"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @NewUIOnly(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDk2NQ=="}, "originalCommit": {"oid": "5b44fb0cabdaa83ea2dc81c9878f75025ee9ea0f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMyMzA5NA==", "bodyText": "I think you are right!", "url": "https://github.com/openequella/openEQUELLA/pull/2452#discussion_r512323094", "createdAt": "2020-10-26T23:10:52Z", "author": {"login": "PenghaiZhang"}, "path": "autotest/OldTests/src/test/java/io/github/openequella/search/NewSearchPageTest.java", "diffHunk": "@@ -18,13 +19,15 @@ protected void prepareBrowserSession() {\n   }\n \n   @Test(description = \"open the new Search page and wait for initial search completed\")\n+  @NewUIOnly(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDk2NQ=="}, "originalCommit": {"oid": "5b44fb0cabdaa83ea2dc81c9878f75025ee9ea0f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1646, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}