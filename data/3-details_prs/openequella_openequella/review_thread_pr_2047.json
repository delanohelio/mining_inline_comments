{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTgwMjUz", "number": 2047, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxODoyNFrOEOEujA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTowMDowNFrOEOGhgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTkyOTcyOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxODoyNFrOGxBeOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxODoyNFrOGxBeOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NzUzMA==", "bodyText": "Wowsers, this return has now become a bit incomprehensible. Let's refactor, and try and ensure it concisely captures the page layout and key elements.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454057530", "createdAt": "2020-07-14T02:18:24Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -150,65 +151,82 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   );\n \n   return (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTkzMTAzOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoxOToxMFrOGxBfAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTozOTowM1rOGxE49g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NzcyOQ==", "bodyText": "I'm not sure we really need this. Does the panel have to be 100%. I'm kind of happy if it's just as big as its contents.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454057729", "createdAt": "2020-07-14T02:19:10Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExMzUyNg==", "bodyText": "No it does not have to be 100%. I had a talk with Charlie regarding this and we both seem to like 100% height, but I am happy to change it.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454113526", "createdAt": "2020-07-14T05:39:03Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1NzcyOQ=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTkzNDQ1OnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMjoyMDo1OFrOGxBg9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTo0MzozN1rOGxE-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1ODIyOA==", "bodyText": "We don't want the divider on the last one.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454058228", "createdAt": "2020-07-14T02:20:58Z", "author": {"login": "edalex-ian"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});\n+\n+export const RefineSearchPanel = ({ children }: RefinePanelProps) => {\n+  const classes = useStyles();\n+  const { title } = languageStrings.searchpage.refineSearchPanel;\n+  return (\n+    <Card className={classes.refineSearchPanel}>\n+      <CardHeader title={title} />\n+      <CardContent>\n+        <List>\n+          {React.Children.map(children, (child) => (\n+            <ListItem divider>{child}</ListItem>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMjQ2OQ==", "bodyText": "Yeah. If you can get an index out of that map, you should be able to go\ndivider={index != React.Children.count-1}", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454102469", "createdAt": "2020-07-14T05:03:36Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});\n+\n+export const RefineSearchPanel = ({ children }: RefinePanelProps) => {\n+  const classes = useStyles();\n+  const { title } = languageStrings.searchpage.refineSearchPanel;\n+  return (\n+    <Card className={classes.refineSearchPanel}>\n+      <CardHeader title={title} />\n+      <CardContent>\n+        <List>\n+          {React.Children.map(children, (child) => (\n+            <ListItem divider>{child}</ListItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1ODIyOA=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExNDI0MA==", "bodyText": "Yep I will change it, but may I ask why we want the divider on the last Search result item ? Also on the Facet search setting page, we have a divider for the last classification as well.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454114240", "createdAt": "2020-07-14T05:41:21Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});\n+\n+export const RefineSearchPanel = ({ children }: RefinePanelProps) => {\n+  const classes = useStyles();\n+  const { title } = languageStrings.searchpage.refineSearchPanel;\n+  return (\n+    <Card className={classes.refineSearchPanel}>\n+      <CardHeader title={title} />\n+      <CardContent>\n+        <List>\n+          {React.Children.map(children, (child) => (\n+            <ListItem divider>{child}</ListItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1ODIyOA=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExNDk2Mw==", "bodyText": "We don't want the last divider because its a divider between an item and nothing. As of the Facet Page, that probably shouldn't have a last one either.\nWe want:\n1\n2\n3\nas opposed to:\n1\n2\n3", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454114963", "createdAt": "2020-07-14T05:43:37Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/components/RefineSearchPanel.tsx", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * The Apereo Foundation licenses this file to you under the Apache License,\n+ * Version 2.0, (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import * as React from \"react\";\n+import { ReactNode } from \"react\";\n+import {\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  List,\n+  ListItem,\n+  makeStyles,\n+} from \"@material-ui/core\";\n+import { languageStrings } from \"../../util/langstrings\";\n+\n+interface RefinePanelProps {\n+  /**\n+   * Child components rendered inside this panel.\n+   */\n+  children: ReactNode;\n+}\n+\n+const useStyles = makeStyles({\n+  refineSearchPanel: {\n+    height: \"100%\", // Ensure Card always takes the item grid's full height.\n+  },\n+});\n+\n+export const RefineSearchPanel = ({ children }: RefinePanelProps) => {\n+  const classes = useStyles();\n+  const { title } = languageStrings.searchpage.refineSearchPanel;\n+  return (\n+    <Card className={classes.refineSearchPanel}>\n+      <CardHeader title={title} />\n+      <CardContent>\n+        <List>\n+          {React.Children.map(children, (child) => (\n+            <ListItem divider>{child}</ListItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA1ODIyOA=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjIyNDAxOnYy", "diffSide": "RIGHT", "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNTowMDowNFrOGxEI2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowODoxMVrOGxFfXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMTIwOQ==", "bodyText": "Is this worth fleshing out a little?\nI'm aware its just a placeholder, but we are going to need to populate this panel with some sort of component made for it - eg. something along the lines of a new <SearchRefineControl/> component.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454101209", "createdAt": "2020-07-14T05:00:04Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -150,65 +151,82 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   );\n \n   return (\n-    <Grid container direction=\"column\" spacing={2}>\n+    <Grid container spacing={2}>\n       <Grid item xs={9}>\n-        <Card>\n-          <CardContent>\n-            <SearchBar onChange={handleQueryChanged} />\n-          </CardContent>\n-        </Card>\n-      </Grid>\n-      <Grid item xs={9}>\n-        <Card>\n-          <CardHeader\n-            title={searchStrings.subtitle}\n-            action={\n-              <SearchOrderSelect\n-                value={searchOptions.sortOrder}\n-                onChange={handleSortOrderChanged}\n-              />\n-            }\n-          />\n-          {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n-          <CardContent style={{ textAlign: \"center\" }}>\n-            {showSpinner && (\n-              <CircularProgress\n-                variant=\"indeterminate\"\n-                className={\n-                  pagedSearchResult.results.length > 0\n-                    ? classes.centralSpinner\n-                    : \"\"\n+        <Grid container spacing={2}>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardContent>\n+                <SearchBar onChange={handleQueryChanged} />\n+              </CardContent>\n+            </Card>\n+          </Grid>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardHeader\n+                title={searchStrings.subtitle}\n+                action={\n+                  <SearchOrderSelect\n+                    value={searchOptions.sortOrder}\n+                    onChange={handleSortOrderChanged}\n+                  />\n                 }\n               />\n-            )}\n-            {searchResultList}\n-          </CardContent>\n-\n-          <CardActions>\n-            <Grid container justify=\"center\">\n-              <Grid item>\n-                <TablePagination\n-                  component=\"div\"\n-                  count={pagedSearchResult.available}\n-                  page={searchOptions.currentPage}\n-                  onChangePage={(_, page: number) =>\n-                    setSearchOptions({ ...searchOptions, currentPage: page })\n-                  }\n-                  rowsPerPageOptions={[10, 25, 50]}\n-                  labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n-                  rowsPerPage={searchOptions.rowsPerPage}\n-                  onChangeRowsPerPage={(event) =>\n-                    setSearchOptions({\n-                      ...searchOptions,\n-                      currentPage: 0,\n-                      rowsPerPage: parseInt(event.target.value),\n-                    })\n-                  }\n-                />\n-              </Grid>\n-            </Grid>\n-          </CardActions>\n-        </Card>\n+              {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n+              <CardContent style={{ textAlign: \"center\" }}>\n+                {showSpinner && (\n+                  <CircularProgress\n+                    variant=\"indeterminate\"\n+                    className={\n+                      pagedSearchResult.results.length > 0\n+                        ? classes.centralSpinner\n+                        : \"\"\n+                    }\n+                  />\n+                )}\n+                {searchResultList}\n+              </CardContent>\n+\n+              <CardActions>\n+                <Grid container justify=\"center\">\n+                  <Grid item>\n+                    <TablePagination\n+                      component=\"div\"\n+                      count={pagedSearchResult.available}\n+                      page={searchOptions.currentPage}\n+                      onChangePage={(_, page: number) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: page,\n+                        })\n+                      }\n+                      rowsPerPageOptions={[10, 25, 50]}\n+                      labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n+                      rowsPerPage={searchOptions.rowsPerPage}\n+                      onChangeRowsPerPage={(event) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: 0,\n+                          rowsPerPage: parseInt(event.target.value),\n+                        })\n+                      }\n+                    />\n+                  </Grid>\n+                </Grid>\n+              </CardActions>\n+            </Card>\n+          </Grid>\n+        </Grid>\n+      </Grid>\n+\n+      <Grid item xs={3}>\n+        <RefineSearchPanel>\n+          <Typography>place holder 1</Typography>\n+          <Typography>place holder 2</Typography>\n+          <Typography>place holder 3</Typography>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMTU4Ng==", "bodyText": "That said, if that's outside the scope of this PR that's fine too.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454101586", "createdAt": "2020-07-14T05:00:59Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -150,65 +151,82 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   );\n \n   return (\n-    <Grid container direction=\"column\" spacing={2}>\n+    <Grid container spacing={2}>\n       <Grid item xs={9}>\n-        <Card>\n-          <CardContent>\n-            <SearchBar onChange={handleQueryChanged} />\n-          </CardContent>\n-        </Card>\n-      </Grid>\n-      <Grid item xs={9}>\n-        <Card>\n-          <CardHeader\n-            title={searchStrings.subtitle}\n-            action={\n-              <SearchOrderSelect\n-                value={searchOptions.sortOrder}\n-                onChange={handleSortOrderChanged}\n-              />\n-            }\n-          />\n-          {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n-          <CardContent style={{ textAlign: \"center\" }}>\n-            {showSpinner && (\n-              <CircularProgress\n-                variant=\"indeterminate\"\n-                className={\n-                  pagedSearchResult.results.length > 0\n-                    ? classes.centralSpinner\n-                    : \"\"\n+        <Grid container spacing={2}>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardContent>\n+                <SearchBar onChange={handleQueryChanged} />\n+              </CardContent>\n+            </Card>\n+          </Grid>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardHeader\n+                title={searchStrings.subtitle}\n+                action={\n+                  <SearchOrderSelect\n+                    value={searchOptions.sortOrder}\n+                    onChange={handleSortOrderChanged}\n+                  />\n                 }\n               />\n-            )}\n-            {searchResultList}\n-          </CardContent>\n-\n-          <CardActions>\n-            <Grid container justify=\"center\">\n-              <Grid item>\n-                <TablePagination\n-                  component=\"div\"\n-                  count={pagedSearchResult.available}\n-                  page={searchOptions.currentPage}\n-                  onChangePage={(_, page: number) =>\n-                    setSearchOptions({ ...searchOptions, currentPage: page })\n-                  }\n-                  rowsPerPageOptions={[10, 25, 50]}\n-                  labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n-                  rowsPerPage={searchOptions.rowsPerPage}\n-                  onChangeRowsPerPage={(event) =>\n-                    setSearchOptions({\n-                      ...searchOptions,\n-                      currentPage: 0,\n-                      rowsPerPage: parseInt(event.target.value),\n-                    })\n-                  }\n-                />\n-              </Grid>\n-            </Grid>\n-          </CardActions>\n-        </Card>\n+              {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n+              <CardContent style={{ textAlign: \"center\" }}>\n+                {showSpinner && (\n+                  <CircularProgress\n+                    variant=\"indeterminate\"\n+                    className={\n+                      pagedSearchResult.results.length > 0\n+                        ? classes.centralSpinner\n+                        : \"\"\n+                    }\n+                  />\n+                )}\n+                {searchResultList}\n+              </CardContent>\n+\n+              <CardActions>\n+                <Grid container justify=\"center\">\n+                  <Grid item>\n+                    <TablePagination\n+                      component=\"div\"\n+                      count={pagedSearchResult.available}\n+                      page={searchOptions.currentPage}\n+                      onChangePage={(_, page: number) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: page,\n+                        })\n+                      }\n+                      rowsPerPageOptions={[10, 25, 50]}\n+                      labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n+                      rowsPerPage={searchOptions.rowsPerPage}\n+                      onChangeRowsPerPage={(event) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: 0,\n+                          rowsPerPage: parseInt(event.target.value),\n+                        })\n+                      }\n+                    />\n+                  </Grid>\n+                </Grid>\n+              </CardActions>\n+            </Card>\n+          </Grid>\n+        </Grid>\n+      </Grid>\n+\n+      <Grid item xs={3}>\n+        <RefineSearchPanel>\n+          <Typography>place holder 1</Typography>\n+          <Typography>place holder 2</Typography>\n+          <Typography>place holder 3</Typography>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMTIwOQ=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDExOTY4MA==", "bodyText": "I think the new component belongs to next PR \ud83d\ude03", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454119680", "createdAt": "2020-07-14T05:57:43Z", "author": {"login": "PenghaiZhang"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -150,65 +151,82 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   );\n \n   return (\n-    <Grid container direction=\"column\" spacing={2}>\n+    <Grid container spacing={2}>\n       <Grid item xs={9}>\n-        <Card>\n-          <CardContent>\n-            <SearchBar onChange={handleQueryChanged} />\n-          </CardContent>\n-        </Card>\n-      </Grid>\n-      <Grid item xs={9}>\n-        <Card>\n-          <CardHeader\n-            title={searchStrings.subtitle}\n-            action={\n-              <SearchOrderSelect\n-                value={searchOptions.sortOrder}\n-                onChange={handleSortOrderChanged}\n-              />\n-            }\n-          />\n-          {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n-          <CardContent style={{ textAlign: \"center\" }}>\n-            {showSpinner && (\n-              <CircularProgress\n-                variant=\"indeterminate\"\n-                className={\n-                  pagedSearchResult.results.length > 0\n-                    ? classes.centralSpinner\n-                    : \"\"\n+        <Grid container spacing={2}>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardContent>\n+                <SearchBar onChange={handleQueryChanged} />\n+              </CardContent>\n+            </Card>\n+          </Grid>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardHeader\n+                title={searchStrings.subtitle}\n+                action={\n+                  <SearchOrderSelect\n+                    value={searchOptions.sortOrder}\n+                    onChange={handleSortOrderChanged}\n+                  />\n                 }\n               />\n-            )}\n-            {searchResultList}\n-          </CardContent>\n-\n-          <CardActions>\n-            <Grid container justify=\"center\">\n-              <Grid item>\n-                <TablePagination\n-                  component=\"div\"\n-                  count={pagedSearchResult.available}\n-                  page={searchOptions.currentPage}\n-                  onChangePage={(_, page: number) =>\n-                    setSearchOptions({ ...searchOptions, currentPage: page })\n-                  }\n-                  rowsPerPageOptions={[10, 25, 50]}\n-                  labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n-                  rowsPerPage={searchOptions.rowsPerPage}\n-                  onChangeRowsPerPage={(event) =>\n-                    setSearchOptions({\n-                      ...searchOptions,\n-                      currentPage: 0,\n-                      rowsPerPage: parseInt(event.target.value),\n-                    })\n-                  }\n-                />\n-              </Grid>\n-            </Grid>\n-          </CardActions>\n-        </Card>\n+              {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n+              <CardContent style={{ textAlign: \"center\" }}>\n+                {showSpinner && (\n+                  <CircularProgress\n+                    variant=\"indeterminate\"\n+                    className={\n+                      pagedSearchResult.results.length > 0\n+                        ? classes.centralSpinner\n+                        : \"\"\n+                    }\n+                  />\n+                )}\n+                {searchResultList}\n+              </CardContent>\n+\n+              <CardActions>\n+                <Grid container justify=\"center\">\n+                  <Grid item>\n+                    <TablePagination\n+                      component=\"div\"\n+                      count={pagedSearchResult.available}\n+                      page={searchOptions.currentPage}\n+                      onChangePage={(_, page: number) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: page,\n+                        })\n+                      }\n+                      rowsPerPageOptions={[10, 25, 50]}\n+                      labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n+                      rowsPerPage={searchOptions.rowsPerPage}\n+                      onChangeRowsPerPage={(event) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: 0,\n+                          rowsPerPage: parseInt(event.target.value),\n+                        })\n+                      }\n+                    />\n+                  </Grid>\n+                </Grid>\n+              </CardActions>\n+            </Card>\n+          </Grid>\n+        </Grid>\n+      </Grid>\n+\n+      <Grid item xs={3}>\n+        <RefineSearchPanel>\n+          <Typography>place holder 1</Typography>\n+          <Typography>place holder 2</Typography>\n+          <Typography>place holder 3</Typography>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMTIwOQ=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyMzM1OA==", "bodyText": "Cool! thats fair enough then.", "url": "https://github.com/openequella/openEQUELLA/pull/2047#discussion_r454123358", "createdAt": "2020-07-14T06:08:11Z", "author": {"login": "SammyIsConfused"}, "path": "Source/Plugins/Core/com.equella.core/js/tsrc/search/SearchPage.tsx", "diffHunk": "@@ -150,65 +151,82 @@ const SearchPage = ({ updateTemplate }: TemplateUpdateProps) => {\n   );\n \n   return (\n-    <Grid container direction=\"column\" spacing={2}>\n+    <Grid container spacing={2}>\n       <Grid item xs={9}>\n-        <Card>\n-          <CardContent>\n-            <SearchBar onChange={handleQueryChanged} />\n-          </CardContent>\n-        </Card>\n-      </Grid>\n-      <Grid item xs={9}>\n-        <Card>\n-          <CardHeader\n-            title={searchStrings.subtitle}\n-            action={\n-              <SearchOrderSelect\n-                value={searchOptions.sortOrder}\n-                onChange={handleSortOrderChanged}\n-              />\n-            }\n-          />\n-          {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n-          <CardContent style={{ textAlign: \"center\" }}>\n-            {showSpinner && (\n-              <CircularProgress\n-                variant=\"indeterminate\"\n-                className={\n-                  pagedSearchResult.results.length > 0\n-                    ? classes.centralSpinner\n-                    : \"\"\n+        <Grid container spacing={2}>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardContent>\n+                <SearchBar onChange={handleQueryChanged} />\n+              </CardContent>\n+            </Card>\n+          </Grid>\n+          <Grid item xs={12}>\n+            <Card>\n+              <CardHeader\n+                title={searchStrings.subtitle}\n+                action={\n+                  <SearchOrderSelect\n+                    value={searchOptions.sortOrder}\n+                    onChange={handleSortOrderChanged}\n+                  />\n                 }\n               />\n-            )}\n-            {searchResultList}\n-          </CardContent>\n-\n-          <CardActions>\n-            <Grid container justify=\"center\">\n-              <Grid item>\n-                <TablePagination\n-                  component=\"div\"\n-                  count={pagedSearchResult.available}\n-                  page={searchOptions.currentPage}\n-                  onChangePage={(_, page: number) =>\n-                    setSearchOptions({ ...searchOptions, currentPage: page })\n-                  }\n-                  rowsPerPageOptions={[10, 25, 50]}\n-                  labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n-                  rowsPerPage={searchOptions.rowsPerPage}\n-                  onChangeRowsPerPage={(event) =>\n-                    setSearchOptions({\n-                      ...searchOptions,\n-                      currentPage: 0,\n-                      rowsPerPage: parseInt(event.target.value),\n-                    })\n-                  }\n-                />\n-              </Grid>\n-            </Grid>\n-          </CardActions>\n-        </Card>\n+              {/*Add an inline style to make the spinner display at the Card's horizontal center.*/}\n+              <CardContent style={{ textAlign: \"center\" }}>\n+                {showSpinner && (\n+                  <CircularProgress\n+                    variant=\"indeterminate\"\n+                    className={\n+                      pagedSearchResult.results.length > 0\n+                        ? classes.centralSpinner\n+                        : \"\"\n+                    }\n+                  />\n+                )}\n+                {searchResultList}\n+              </CardContent>\n+\n+              <CardActions>\n+                <Grid container justify=\"center\">\n+                  <Grid item>\n+                    <TablePagination\n+                      component=\"div\"\n+                      count={pagedSearchResult.available}\n+                      page={searchOptions.currentPage}\n+                      onChangePage={(_, page: number) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: page,\n+                        })\n+                      }\n+                      rowsPerPageOptions={[10, 25, 50]}\n+                      labelRowsPerPage={searchStrings.pagination.itemsPerPage}\n+                      rowsPerPage={searchOptions.rowsPerPage}\n+                      onChangeRowsPerPage={(event) =>\n+                        setSearchOptions({\n+                          ...searchOptions,\n+                          currentPage: 0,\n+                          rowsPerPage: parseInt(event.target.value),\n+                        })\n+                      }\n+                    />\n+                  </Grid>\n+                </Grid>\n+              </CardActions>\n+            </Card>\n+          </Grid>\n+        </Grid>\n+      </Grid>\n+\n+      <Grid item xs={3}>\n+        <RefineSearchPanel>\n+          <Typography>place holder 1</Typography>\n+          <Typography>place holder 2</Typography>\n+          <Typography>place holder 3</Typography>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEwMTIwOQ=="}, "originalCommit": {"oid": "8e77b39977d2177239b9fa8c53d49000634c330f"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1276, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}