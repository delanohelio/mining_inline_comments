{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTE5MTk5", "number": 697, "title": "[CXF-8346] TCK Changes for URI and hasEntity checks", "bodyText": "Fixes various \"hasEntity\" TCK tests where the entityStream is non-null, but empty.  Also fixes an issue with ContainerRequestContext.setRequestUri(...) methods.\nResolves CXF-8346.", "createdAt": "2020-09-22T18:29:19Z", "url": "https://github.com/apache/cxf/pull/697", "merged": true, "mergeCommit": {"oid": "8a0944f64336c04ee9ce3fbfc35fdaa8a7f5e8a6"}, "closed": true, "closedAt": "2020-09-24T21:49:00Z", "author": {"login": "andymc12"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLhbxMAFqTQ5MzkzMTkxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMIIHhAFqTQ5NTk2NjA1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTMxOTEz", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-493931913", "createdAt": "2020-09-23T00:27:36Z", "commit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDoyNzozNlrOHWQzsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDoyNzozNlrOHWQzsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwNjA5Ng==", "bodyText": "This would modify the state of the stream, correct? May be it would be simpler to check/construct the PushbackInputStream and than do read / unread?", "url": "https://github.com/apache/cxf/pull/697#discussion_r493106096", "createdAt": "2020-09-23T00:27:36Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java", "diffHunk": "@@ -137,22 +143,70 @@ public Object getActualEntity() {\n         return lastEntity != null ? lastEntity : entity;\n     }\n \n+    @Override\n     public Object getEntity() {\n         return InjectionUtils.getEntity(getActualEntity());\n     }\n \n+    @Override\n     public boolean hasEntity() {\n-        return getActualEntity() != null;\n+        // per spec, need to check if the stream exists and if it has data.\n+        Object actualEntity = getActualEntity();\n+        if (actualEntity == null) {\n+            return false;\n+        } else if (actualEntity instanceof InputStream) {\n+            final InputStream is = (InputStream) actualEntity;\n+            try {\n+                if (is.markSupported()) {\n+                    is.mark(1);\n+                    int i = is.read();\n+                    is.reset();\n+                    return i != -1;\n+                } else {\n+                    try {\n+                        if (is.available() > 0) {\n+                            return true;\n+                        }\n+                    } catch (IOException ioe) {\n+                        //Do nothing\n+                    }\n+                    int b = is.read();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTM0MDY4", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-493934068", "createdAt": "2020-09-23T00:35:03Z", "commit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDozNTowM1rOHWQ7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDozNTowM1rOHWQ7bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODA3Ng==", "bodyText": "Unfamiliar with this part, do you have insights about lastEntity vs entity?", "url": "https://github.com/apache/cxf/pull/697#discussion_r493108076", "createdAt": "2020-09-23T00:35:03Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java", "diffHunk": "@@ -137,22 +143,70 @@ public Object getActualEntity() {\n         return lastEntity != null ? lastEntity : entity;\n     }\n \n+    @Override\n     public Object getEntity() {\n         return InjectionUtils.getEntity(getActualEntity());\n     }\n \n+    @Override\n     public boolean hasEntity() {\n-        return getActualEntity() != null;\n+        // per spec, need to check if the stream exists and if it has data.\n+        Object actualEntity = getActualEntity();\n+        if (actualEntity == null) {\n+            return false;\n+        } else if (actualEntity instanceof InputStream) {\n+            final InputStream is = (InputStream) actualEntity;\n+            try {\n+                if (is.markSupported()) {\n+                    is.mark(1);\n+                    int i = is.read();\n+                    is.reset();\n+                    return i != -1;\n+                } else {\n+                    try {\n+                        if (is.available() > 0) {\n+                            return true;\n+                        }\n+                    } catch (IOException ioe) {\n+                        //Do nothing\n+                    }\n+                    int b = is.read();\n+                    if (b == -1) {\n+                        return false;\n+                    }\n+                    PushbackInputStream pbis;\n+                    if (is instanceof PushbackInputStream) {\n+                        pbis = (PushbackInputStream) is;\n+                    } else {\n+                        pbis = new PushbackInputStream(is, 1);\n+                        if (lastEntity != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTM1MTQ5", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-493935149", "createdAt": "2020-09-23T00:38:54Z", "commit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDozODo1NVrOHWQ_WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDozODo1NVrOHWQ_WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwOTA4MQ==", "bodyText": "Sorry, why the outMessage.get(Message.REQUEST_URI) got removed?", "url": "https://github.com/apache/cxf/pull/697#discussion_r493109081", "createdAt": "2020-09-23T00:38:55Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java", "diffHunk": "@@ -218,42 +274,46 @@ private Date doGetDate(String dateHeader) {\n             : HttpUtils.getHttpDate(value.toString());\n     }\n \n+    @Override\n     public EntityTag getEntityTag() {\n         Object header = metadata.getFirst(HttpHeaders.ETAG);\n         return header == null || header instanceof EntityTag ? (EntityTag)header\n             : EntityTag.valueOf(header.toString());\n     }\n \n+    @Override\n     public Locale getLanguage() {\n         Object header = metadata.getFirst(HttpHeaders.CONTENT_LANGUAGE);\n         return header == null || header instanceof Locale ? (Locale)header\n             : HttpUtils.getLocale(header.toString());\n     }\n \n+    @Override\n     public Date getLastModified() {\n         return doGetDate(HttpHeaders.LAST_MODIFIED);\n     }\n \n+    @Override\n     public int getLength() {\n         Object header = metadata.getFirst(HttpHeaders.CONTENT_LENGTH);\n         return HttpUtils.getContentLength(header == null ? null : header.toString());\n     }\n \n+    @Override\n     public URI getLocation() {\n         Object header = metadata.getFirst(HttpHeaders.LOCATION);\n-        if (header == null && outMessage != null) {\n-            header = outMessage.get(Message.REQUEST_URI);\n-        }\n-        return header == null || header instanceof URI ? (URI) header\n+        return header == null || header instanceof URI ? (URI)header", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "originalPosition": 180}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTM2Mzg2", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-493936386", "createdAt": "2020-09-23T00:43:11Z", "commit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo0MzoxMVrOHWRDvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo0MzoxMVrOHWRDvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMDIwNQ==", "bodyText": "Shouldn't AutoCloseable also be checked?", "url": "https://github.com/apache/cxf/pull/697#discussion_r493110205", "createdAt": "2020-09-23T00:43:11Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java", "diffHunk": "@@ -400,12 +472,30 @@ private Link makeAbsoluteLink(Link link) {\n                 responseMessage.put(Message.PROTOCOL_HEADERS, getHeaders());\n \n                 lastEntity = JAXRSUtils.readFromMessageBodyReader(readers, cls, t,\n-                                                                       anns,\n-                                                                       entityStream,\n-                                                                       mediaType,\n-                                                                       responseMessage);\n-                autoClose(cls, false);\n-                return castLastEntity();\n+                                                                  anns,\n+                                                                  entityStream,\n+                                                                  mediaType,\n+                                                                  responseMessage);\n+                // close the entity after readEntity is called.\n+                T tCastLastEntity = castLastEntity();\n+                shouldClose = shouldClose && !(tCastLastEntity instanceof Closeable)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "originalPosition": 284}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTQwNDU3", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-493940457", "createdAt": "2020-09-23T00:57:21Z", "commit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo1NzoyMVrOHWRSIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo1NzoyMVrOHWRSIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMzg4OA==", "bodyText": "You probably could reduce it to return type.isPrimitive() || Number.class.isAssignableFrom(type) || Boolean.class.isAssignableFrom(type) || Char.class.isAssignableFrom(type));  (PrimitiveTypes is not really needed in this case).", "url": "https://github.com/apache/cxf/pull/697#discussion_r493113888", "createdAt": "2020-09-23T00:57:21Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ResponseImpl.java", "diffHunk": "@@ -527,10 +621,47 @@ public String getReasonPhrase() {\n                 return statusEnum != null ? statusEnum.getReasonPhrase() : \"\";\n             }\n \n+            @Override\n             public int getStatusCode() {\n                 return statusCode;\n             }\n \n         };\n     }\n-}\n+\n+    private enum PrimitiveTypes {\n+        BYTE(Byte.class, byte.class) { },\n+        SHORT(Short.class, short.class) { },\n+        INTEGER(Integer.class, int.class) { },\n+        LONG(Long.class, long.class) { },\n+        FLOAT(Float.class, float.class) { },\n+        DOUBLE(Double.class, double.class) { },\n+        BOOLEAN(Boolean.class, boolean.class) { },\n+        CHAR(Character.class, char.class) { };\n+\n+        private final Class<?> wrapper;\n+        private final Class<?> primitive;\n+\n+        PrimitiveTypes(Class<?> wrapper, Class<?> primitive) {\n+            this.wrapper = wrapper;\n+            this.primitive = primitive;\n+        }\n+\n+        public static PrimitiveTypes forType(Class<?> type) {\n+            for (PrimitiveTypes primitive : PrimitiveTypes.values()) {\n+                if (primitive.supports(type)) {\n+                    return primitive;\n+                }\n+            }\n+            return null;\n+        }\n+\n+        public boolean supports(Class<?> type) {\n+            return type == wrapper || type == primitive;\n+        }\n+    }\n+\n+    private static boolean isBasicType(Class<?> type) {\n+        return PrimitiveTypes.forType(type) != null || Number.class.isAssignableFrom(type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0"}, "originalPosition": 380}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13459f1f5a935e498c36b93b8b70e8b3c1a6180e", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/13459f1f5a935e498c36b93b8b70e8b3c1a6180e", "committedDate": "2020-09-23T20:33:49Z", "message": "TCK Changes for URI and hasEntity checks\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f9a223ecaa7f05dfb632076447ed46c258f0061", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/7f9a223ecaa7f05dfb632076447ed46c258f0061", "committedDate": "2020-09-24T00:18:33Z", "message": "Code review comments\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90a1c094d71036f8ca2c24a9b721a1ac813702b0", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/90a1c094d71036f8ca2c24a9b721a1ac813702b0", "committedDate": "2020-09-22T14:38:48Z", "message": "TCK Changes for URI and hasEntity checks\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "7f9a223ecaa7f05dfb632076447ed46c258f0061", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/7f9a223ecaa7f05dfb632076447ed46c258f0061", "committedDate": "2020-09-24T00:18:33Z", "message": "Code review comments\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTY2MDU4", "url": "https://github.com/apache/cxf/pull/697#pullrequestreview-495966058", "createdAt": "2020-09-24T21:32:26Z", "commit": {"oid": "7f9a223ecaa7f05dfb632076447ed46c258f0061"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2130, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}