{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNjIwNDU3", "number": 677, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyMToxMVrOEDcZHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyMToxMVrOEDcZHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQ2MzY2OnYy", "diffSide": "RIGHT", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyMToxMVrOGgds-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDozMToyOVrOGg0ycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDI2Ng==", "bodyText": "Minor suggestion - you could replace the if-check and this line with return Optional.ofNullable(pm);", "url": "https://github.com/apache/cxf/pull/677#discussion_r436694266", "createdAt": "2020-06-08T13:21:11Z", "author": {"login": "andymc12"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java", "diffHunk": "@@ -539,21 +547,32 @@ private static RuntimeException createParamConversionException(ParameterType pTy\n         }\n         return ExceptionUtils.toBadRequestException(ex, null);\n     }\n-    public static <T> T createFromParameterHandler(String value,\n-                                                    Class<T> pClass,\n-                                                    Type genericType,\n-                                                    Annotation[] anns,\n-                                                    Message message) {\n-        T result = null;\n+    \n+    public static <T> Optional<ParamConverter<T>> getParamConverter(Class<T> pClass,\n+            Type genericType, Annotation[] anns, Message message) {\n+        \n         if (message != null) {\n             ServerProviderFactory pf = ServerProviderFactory.getInstance(message);\n             ParamConverter<T> pm = pf.createParameterHandler(pClass, genericType, anns, message);\n             if (pm != null) {\n-                result = pm.fromString(value);\n+                return Optional.of(pm);\n             }\n         }\n-        return result;\n+        \n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2fa6f36bf0a9db1b0c178a221e4398086143f5d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3MjQ5Ng==", "bodyText": "Surely, less code, thanks @andymc12!", "url": "https://github.com/apache/cxf/pull/677#discussion_r437072496", "createdAt": "2020-06-09T00:31:29Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/InjectionUtils.java", "diffHunk": "@@ -539,21 +547,32 @@ private static RuntimeException createParamConversionException(ParameterType pTy\n         }\n         return ExceptionUtils.toBadRequestException(ex, null);\n     }\n-    public static <T> T createFromParameterHandler(String value,\n-                                                    Class<T> pClass,\n-                                                    Type genericType,\n-                                                    Annotation[] anns,\n-                                                    Message message) {\n-        T result = null;\n+    \n+    public static <T> Optional<ParamConverter<T>> getParamConverter(Class<T> pClass,\n+            Type genericType, Annotation[] anns, Message message) {\n+        \n         if (message != null) {\n             ServerProviderFactory pf = ServerProviderFactory.getInstance(message);\n             ParamConverter<T> pm = pf.createParameterHandler(pClass, genericType, anns, message);\n             if (pm != null) {\n-                result = pm.fromString(value);\n+                return Optional.of(pm);\n             }\n         }\n-        return result;\n+        \n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5NDI2Ng=="}, "originalCommit": {"oid": "c2fa6f36bf0a9db1b0c178a221e4398086143f5d"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3577, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}