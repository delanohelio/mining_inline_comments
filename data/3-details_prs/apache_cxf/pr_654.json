{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTM3NDY5", "number": 654, "title": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call", "bodyText": "Replacing CXF's future implementation with Java 8 CompletableFuture delegate.", "createdAt": "2020-03-22T00:35:07Z", "url": "https://github.com/apache/cxf/pull/654", "merged": true, "mergeCommit": {"oid": "3921fc29c265addfa36d0b4260903eef96ac1e25"}, "closed": true, "closedAt": "2020-03-28T20:32:34Z", "author": {"login": "reta"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRRx3jgBqjMxNjYzMzkyMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSJj69AFqTM4MzMzNjk1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f14187fa5871e8badbead7b09b7ec1b6759adcf", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/5f14187fa5871e8badbead7b09b7ec1b6759adcf", "committedDate": "2020-03-22T00:32:20Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}, "afterCommit": {"oid": "02ab15ffa6dbc72f73c1632ad0600be769ae4942", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/02ab15ffa6dbc72f73c1632ad0600be769ae4942", "committedDate": "2020-03-26T01:25:05Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02ab15ffa6dbc72f73c1632ad0600be769ae4942", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/02ab15ffa6dbc72f73c1632ad0600be769ae4942", "committedDate": "2020-03-26T01:25:05Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}, "afterCommit": {"oid": "83aed8cf371d94c5add039405ab1d385f1f4bcd3", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/83aed8cf371d94c5add039405ab1d385f1f4bcd3", "committedDate": "2020-03-26T03:05:41Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8bde23d871977d26eb28a14bec75a62045e827", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/2f8bde23d871977d26eb28a14bec75a62045e827", "committedDate": "2020-03-28T14:35:07Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83aed8cf371d94c5add039405ab1d385f1f4bcd3", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/83aed8cf371d94c5add039405ab1d385f1f4bcd3", "committedDate": "2020-03-26T03:05:41Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}, "afterCommit": {"oid": "2f8bde23d871977d26eb28a14bec75a62045e827", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/2f8bde23d871977d26eb28a14bec75a62045e827", "committedDate": "2020-03-28T14:35:07Z", "message": "CXF-8242: Stop blocking executor thread on microprofile rest asynchronous call"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzM2OTU2", "url": "https://github.com/apache/cxf/pull/654#pullrequestreview-383336956", "createdAt": "2020-03-28T18:23:31Z", "commit": {"oid": "2f8bde23d871977d26eb28a14bec75a62045e827"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxODoyMzozMVrOF9LWBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxODoyMzozMVrOF9LWBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzMxNg==", "bodyText": "Is it possible for the tests to inherit from the ClientCallbackTest?  There might be subtle differences that I'm missing, but it might be nice to consolidate a lot of this test code in the base test class and then have the other tests (Jaxws, Jaxrs, MP, etc.) just offer their own sub-class instance of the callback.", "url": "https://github.com/apache/cxf/pull/654#discussion_r399693316", "createdAt": "2020-03-28T18:23:31Z", "author": {"login": "andymc12"}, "path": "rt/frontend/jaxws/src/test/java/org/apache/cxf/jaxws/JaxwsClientCallbackTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.jaxws;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.CyclicBarrier;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import javax.xml.ws.AsyncHandler;\n+import javax.xml.ws.Response;\n+\n+import org.apache.cxf.message.MessageImpl;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertThrows;\n+\n+public class JaxwsClientCallbackTest {\n+    private Map<String, Object> ctx;\n+    private JaxwsClientCallback<String> callback;\n+    private AsyncHandler<String> handler;\n+    private ScheduledExecutorService executor;\n+    \n+    @Before\n+    public void setUp() {\n+        executor = Executors.newSingleThreadScheduledExecutor();\n+        handler = new AsyncHandler<String>() {\n+            @Override\n+            public void handleResponse(Response<String> res) {\n+            }\n+        };\n+        \n+        callback = new JaxwsClientCallback<String>(handler, null);\n+        ctx = new HashMap<String, Object>();\n+    }\n+    \n+    @After\n+    public void tearDown() throws Exception {\n+        executor.shutdown();\n+        executor.awaitTermination(5, TimeUnit.SECONDS);\n+    }\n+    \n+    @Test\n+    public void testHandleResponseCallback() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f8bde23d871977d26eb28a14bec75a62045e827"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2225, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}