{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDc5NDAz", "number": 703, "title": "Fix systests to account for fix in CXF-8346", "bodyText": "This should resolve 4 errors/failures in systests that resulted from runtime changes in CXF-8346 / PR #697.\nThe first change is to remove query parameters.  These should need to be \"replaced\" as the query parameter was specified on the original request.  By replacing them, it actually appended them, making the request URI look something like: http://localhost:8080/bookstore/books/check2?a=b?a=b which is not allowed (the extra question mark).\nThe other changes were to re-acquire the Response object rather than just re-using them.  This was a clear test bug, since it was previously checking the response from the first request twice rather than checking the response from both requests.\nThis should resolve 8 failures in the master builds since these 4 tests are run twice (once for Java 8 and once for Java 11).", "createdAt": "2020-10-02T18:52:45Z", "url": "https://github.com/apache/cxf/pull/703", "merged": true, "mergeCommit": {"oid": "da472857769fd2426871757a9dde1c764f3ae6ad"}, "closed": true, "closedAt": "2020-10-07T16:34:26Z", "author": {"login": "andymc12"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPApfUgFqTUwMTU3MjQ5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQOY2LABqjM4NTEwNjE4Mjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTcyNDk0", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-501572494", "createdAt": "2020-10-03T20:31:25Z", "commit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMToyNVrOHcDgmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMToyNVrOHcDgmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTY3NA==", "bodyText": "Seems like  ... and the client will re-use the cached payload is not correct anymore?", "url": "https://github.com/apache/cxf/pull/703#discussion_r499179674", "createdAt": "2020-10-03T20:31:25Z", "author": {"login": "reta"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerBookTest.java", "diffHunk": "@@ -926,15 +926,12 @@ public void testCachingExpiresUsingETag() throws Exception {\n         // Now make a second call. The value in the clients cache will have expired, so it should call\n         // out to the service, which will return 304, and the client will re-use the cached payload", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTcyNTA3", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-501572507", "createdAt": "2020-10-03T20:31:41Z", "commit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMTo0MVrOHcDgqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMTo0MVrOHcDgqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTY4OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cxf/pull/703#discussion_r499179689", "createdAt": "2020-10-03T20:31:41Z", "author": {"login": "reta"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerBookTest.java", "diffHunk": "@@ -840,7 +840,7 @@ public void testCaching() throws Exception {\n         assertTrue(cacheControl.toString().contains(\"max-age=100000\"));\n \n         // Now make a second call. This should be retrieved from the client's cache\n-        target.request().get();\n+        response = target.request().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTcyNTEx", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-501572511", "createdAt": "2020-10-03T20:31:47Z", "commit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMTo0N1rOHcDgrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDozMTo0N1rOHcDgrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTY5NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cxf/pull/703#discussion_r499179694", "createdAt": "2020-10-03T20:31:47Z", "author": {"login": "reta"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerBookTest.java", "diffHunk": "@@ -883,7 +883,7 @@ public void testCachingExpires() throws Exception {\n         // Now make a second call. The value in the cache will have expired, so\n         // it should call the service again\n         Thread.sleep(1500L);\n-        target.request().get();\n+        response = target.request().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTczMjgy", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-501573282", "createdAt": "2020-10-03T20:47:45Z", "commit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo0Nzo0NlrOHcDkug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo0Nzo0NlrOHcDkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MDczMA==", "bodyText": "I was debugging this failure and it seems like the change with respect to Request URI\n HttpUtils.resetRequestURI(m, requestUri.toString());\n\nviolates some CXF flow (it does not mean the flow is correct, it just probably means we need changes in other places).\nIn the nutshell, my findings are as such:\n\nCXF assumes the m.get(Message.REQUEST_URI) has only URI raw path component\nCXF assumes the m.get(Message.QUERY_STRING) has only URI query string component\n\nThe fact that we now set the full URI (with a query string) breaks the way CXF treats the  m.get(Message.REQUEST_URI) and test fails because as you correctly pointing out,  the query string is messed up /bookstore/books/check2?a=b?a=b.\nI think although your change does fix the test, the flow is broken by and large, please correct me if I am wrong. The user should be able to change the Request URI in pre-matching filter, including the query string component, but she won't be able to do that from now on.", "url": "https://github.com/apache/cxf/pull/703#discussion_r499180730", "createdAt": "2020-10-03T20:47:46Z", "author": {"login": "reta"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookServer20.java", "diffHunk": "@@ -227,7 +227,7 @@ public void filter(ContainerRequestContext context) throws IOException {\n             } else if (path.endsWith(\"books/check2\")) {\n                 replaceStream(context);\n             } else if (path.endsWith(\"books/checkNQuery\")) {\n-                URI requestURI = URI.create(path.replace(\"NQuery\", \"2?a=b\"));\n+                URI requestURI = URI.create(path.replace(\"NQuery\", \"2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e58b31e4cb0a8aca19bf3e086c7dfffc2c59d61"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDEzNjkw", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-503413690", "createdAt": "2020-10-06T22:51:24Z", "commit": {"oid": "8a2e347cb3041cfa4abf9d5bfe133deaa5248b44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1MToyNFrOHdco-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1MToyNFrOHdco-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzOTk5NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cxf/pull/703#discussion_r500639994", "createdAt": "2020-10-06T22:51:24Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/ContainerRequestContextImpl.java", "diffHunk": "@@ -123,8 +123,9 @@ public void setRequestUri(URI requestUri) throws IllegalStateException {\n \n     protected void doSetRequestUri(URI requestUri) throws IllegalStateException {\n         checkNotPreMatch();\n-        // The JAX-RS TCK requires the full uri toString() rather than just the raw path:\n-        HttpUtils.resetRequestURI(m, requestUri.toString());\n+        // TODO: The JAX-RS TCK requires the full uri toString() rather than just the raw path, but\n+        // changing to toString() seems to have adverse effects downstream. Needs more investigation.\n+        HttpUtils.resetRequestURI(m, requestUri.getRawPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2e347cb3041cfa4abf9d5bfe133deaa5248b44"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a2e347cb3041cfa4abf9d5bfe133deaa5248b44", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/8a2e347cb3041cfa4abf9d5bfe133deaa5248b44", "committedDate": "2020-10-06T22:02:55Z", "message": "Reverting part of #697 to avoid preventing user...\n\nfrom overwriting query parameter in pre match filters.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/c32f3c75f4019ef93eb322dde32967ee16c37b92", "committedDate": "2020-10-07T00:48:38Z", "message": "Update test to expect null rather than exception\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDYxNDgw", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-503461480", "createdAt": "2020-10-07T01:16:21Z", "commit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMToxNjoyMVrOHdfMTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMToxNjoyMVrOHdfMTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4MTgwNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cxf/pull/703#discussion_r500681806", "createdAt": "2020-10-07T01:16:21Z", "author": {"login": "reta"}, "path": "systests/rs-security/src/test/java/org/apache/cxf/systest/jaxrs/security/oidc/OIDCNegativeTest.java", "diffHunk": "@@ -113,12 +114,7 @@ public void testImplicitFlowPromptNone() throws Exception {\n         client.path(\"authorize-implicit/\");\n         Response response = client.get();\n \n-        try {\n-            response.readEntity(OAuthAuthorizationData.class);\n-            fail(\"Failure expected on a bad prompt\");\n-        } catch (Exception ex) {\n-            // expected\n-        }\n+        assertNull(response.readEntity(OAuthAuthorizationData.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDYxNTU0", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-503461554", "createdAt": "2020-10-07T01:16:37Z", "commit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDYyMTE2", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-503462116", "createdAt": "2020-10-07T01:18:25Z", "commit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMToxODoyNVrOHdfOYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMToxODoyNVrOHdfOYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4MjMzOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cxf/pull/703#discussion_r500682339", "createdAt": "2020-10-07T01:18:25Z", "author": {"login": "reta"}, "path": "systests/rs-security/src/test/java/org/apache/cxf/systest/jaxrs/security/oidc/OIDCNegativeTest.java", "diffHunk": "@@ -196,12 +192,7 @@ public void testImplicitFlowNoNonce() throws Exception {\n         client.path(\"authorize-implicit/\");\n         Response response = client.get();\n \n-        try {\n-            response.readEntity(OAuthAuthorizationData.class);\n-            fail(\"Failure expected on no nonce\");\n-        } catch (Exception ex) {\n-            // expected\n-        }\n+        assertNull(response.readEntity(OAuthAuthorizationData.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c32f3c75f4019ef93eb322dde32967ee16c37b92"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjI2ODE2", "url": "https://github.com/apache/cxf/pull/703#pullrequestreview-503626816", "createdAt": "2020-10-07T08:11:27Z", "commit": {"oid": "d54efc879b999bff491276ad7b4da2341e46e92b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91cb6d0f8f4d1e76320de4fe89e202367a1b8fd5", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/91cb6d0f8f4d1e76320de4fe89e202367a1b8fd5", "committedDate": "2020-10-07T15:01:34Z", "message": "Fix systests to account for fix in CXF-8346\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13a6bf1ca7efdd4b1f0816aabd935dfac7f5689f", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/13a6bf1ca7efdd4b1f0816aabd935dfac7f5689f", "committedDate": "2020-10-07T15:05:40Z", "message": "Additional assertions per code review comments\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78a503d8bf1105ff441645d4784ed3306a9418ee", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/78a503d8bf1105ff441645d4784ed3306a9418ee", "committedDate": "2020-10-07T15:05:40Z", "message": "Reverting part of #697 to avoid preventing user...\n\nfrom overwriting query parameter in pre match filters.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a29109410e8427d1fb8edf5fb88c955aaca0b79a", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/a29109410e8427d1fb8edf5fb88c955aaca0b79a", "committedDate": "2020-10-07T15:05:40Z", "message": "Update test to expect null rather than exception\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ed01aa4708a81be37833ba2a2da29ae63f47c1", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/d1ed01aa4708a81be37833ba2a2da29ae63f47c1", "committedDate": "2020-10-07T15:05:40Z", "message": "Test fix: Need to bufferEntity if reading twice\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d54efc879b999bff491276ad7b4da2341e46e92b", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/d54efc879b999bff491276ad7b4da2341e46e92b", "committedDate": "2020-10-07T03:18:48Z", "message": "Test fix: Need to bufferEntity if reading twice\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "d1ed01aa4708a81be37833ba2a2da29ae63f47c1", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/d1ed01aa4708a81be37833ba2a2da29ae63f47c1", "committedDate": "2020-10-07T15:05:40Z", "message": "Test fix: Need to bufferEntity if reading twice\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2134, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}