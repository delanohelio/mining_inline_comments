{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMzQ2ODEw", "number": 684, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0NzoyNVrOEQIZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyNDozOFrOEQ7C2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MzUwMjgxOnYy", "diffSide": "RIGHT", "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpClientPipelineFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0NzoyNVrOG0H92w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0NzoyNVrOG0H92w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMwOTY1OQ==", "bodyText": "I think it would be better to configure this in the same way as for readTimeout etc., by passing an int value through to this class, and in NettyHttpConduit checking the CXF Message for the value, e.g. see: \n  \n    \n      cxf/rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java\n    \n    \n         Line 617\n      in\n      b8e2419\n    \n    \n    \n    \n\n        \n          \n           protected static int determineReceiveTimeout(Message message,", "url": "https://github.com/apache/cxf/pull/684#discussion_r457309659", "createdAt": "2020-07-20T11:47:25Z", "author": {"login": "coheigea"}, "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpClientPipelineFactory.java", "diffHunk": "@@ -42,18 +43,22 @@\n \n public class NettyHttpClientPipelineFactory extends ChannelInitializer<Channel> {\n \n+    public static final String MAX_CONTENT_LENGTH = \"org.apache.cxf.transport.http.netty.aggregator.maxContentLength\";\n     private static final Logger LOG =\n         LogUtils.getL7dLogger(NettyHttpClientPipelineFactory.class);\n+\n     private final TLSClientParameters tlsClientParameters;\n     private final int readTimeout;\n-    \n+    private final int maxContentLength;\n+\n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters) {\n         this(clientParameters, 0);\n     }\n \n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters, int readTimeout) {\n         this.tlsClientParameters = clientParameters;\n         this.readTimeout = readTimeout;\n+        this.maxContentLength = SystemPropertyAction.getInteger(MAX_CONTENT_LENGTH, 1048576);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc1a45cb032b82718e078447a90656531b24d99e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzYyNTMwOnYy", "diffSide": "RIGHT", "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODo0Mjo1NVrOG0uIUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTo0NzowN1rOG0wd8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNDkzMQ==", "bodyText": "We should probably default instead to 1048576, which was the previous default. Maybe extract this number to a constant.", "url": "https://github.com/apache/cxf/pull/684#discussion_r457934931", "createdAt": "2020-07-21T08:42:55Z", "author": {"login": "coheigea"}, "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "diffHunk": "@@ -652,6 +652,25 @@ protected static int determineConnectionTimeout(Message message,\n         return (int)ctimeout;\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message,\n+                                                 HTTPClientPolicy csPolicy) {\n+        Integer maxResponseContentLength = csPolicy.getMaxResponseContentLength();\n+        if (message.get(Message.MAX_RESPONSE_CONTENT_LENGTH) != null) {\n+            Object obj = message.get(Message.MAX_RESPONSE_CONTENT_LENGTH);\n+            try {\n+                maxResponseContentLength = Integer.parseInt(obj.toString());\n+            } catch (NumberFormatException e) {\n+                LOG.log(Level.WARNING, \"INVALID_TIMEOUT_FORMAT\", new Object[] {\n+                    Message.MAX_RESPONSE_CONTENT_LENGTH, obj.toString()\n+                });\n+            }\n+        }\n+        if (maxResponseContentLength == null) {\n+            maxResponseContentLength = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3MzIzMw==", "bodyText": "change default to 1048576, extracted constant", "url": "https://github.com/apache/cxf/pull/684#discussion_r457973233", "createdAt": "2020-07-21T09:47:07Z", "author": {"login": "vladikM"}, "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "diffHunk": "@@ -652,6 +652,25 @@ protected static int determineConnectionTimeout(Message message,\n         return (int)ctimeout;\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message,\n+                                                 HTTPClientPolicy csPolicy) {\n+        Integer maxResponseContentLength = csPolicy.getMaxResponseContentLength();\n+        if (message.get(Message.MAX_RESPONSE_CONTENT_LENGTH) != null) {\n+            Object obj = message.get(Message.MAX_RESPONSE_CONTENT_LENGTH);\n+            try {\n+                maxResponseContentLength = Integer.parseInt(obj.toString());\n+            } catch (NumberFormatException e) {\n+                LOG.log(Level.WARNING, \"INVALID_TIMEOUT_FORMAT\", new Object[] {\n+                    Message.MAX_RESPONSE_CONTENT_LENGTH, obj.toString()\n+                });\n+            }\n+        }\n+        if (maxResponseContentLength == null) {\n+            maxResponseContentLength = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNDkzMQ=="}, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzYyNzkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/cxf/message/Message.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODo0MzozNVrOG0uJ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTo0NzoyOVrOG0weoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTMzMQ==", "bodyText": "I think it's probably better to restrict this configuration variable to Netty instead of the CXF Message object, as it only applies to Netty.", "url": "https://github.com/apache/cxf/pull/684#discussion_r457935331", "createdAt": "2020-07-21T08:43:35Z", "author": {"login": "coheigea"}, "path": "core/src/main/java/org/apache/cxf/message/Message.java", "diffHunk": "@@ -196,6 +196,12 @@\n      */\n     String THREAD_SAFE_STAX_FACTORIES = Message.class.getName() + \".THREAD_SAFE_STAX_FACTORIES\";\n \n+\n+    /**\n+     * Integer property to specify how much bytes client must be able to handle.\n+     */\n+    String MAX_RESPONSE_CONTENT_LENGTH = Message.class.getName() + \".MAX_RESPONSE_CONTENT_LENGTH\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3MzQwOQ==", "bodyText": "removed from Message", "url": "https://github.com/apache/cxf/pull/684#discussion_r457973409", "createdAt": "2020-07-21T09:47:29Z", "author": {"login": "vladikM"}, "path": "core/src/main/java/org/apache/cxf/message/Message.java", "diffHunk": "@@ -196,6 +196,12 @@\n      */\n     String THREAD_SAFE_STAX_FACTORIES = Message.class.getName() + \".THREAD_SAFE_STAX_FACTORIES\";\n \n+\n+    /**\n+     * Integer property to specify how much bytes client must be able to handle.\n+     */\n+    String MAX_RESPONSE_CONTENT_LENGTH = Message.class.getName() + \".MAX_RESPONSE_CONTENT_LENGTH\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTMzMQ=="}, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzYyOTM5OnYy", "diffSide": "RIGHT", "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODo0Mzo1OFrOG0uKwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTo0NzozNlrOG0we1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTU1Mg==", "bodyText": "Move into Netty subclass.", "url": "https://github.com/apache/cxf/pull/684#discussion_r457935552", "createdAt": "2020-07-21T08:43:58Z", "author": {"login": "coheigea"}, "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "diffHunk": "@@ -652,6 +652,25 @@ protected static int determineConnectionTimeout(Message message,\n         return (int)ctimeout;\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3MzQ2Mg==", "bodyText": "moved", "url": "https://github.com/apache/cxf/pull/684#discussion_r457973462", "createdAt": "2020-07-21T09:47:36Z", "author": {"login": "vladikM"}, "path": "rt/transports/http/src/main/java/org/apache/cxf/transport/http/HTTPConduit.java", "diffHunk": "@@ -652,6 +652,25 @@ protected static int determineConnectionTimeout(Message message,\n         return (int)ctimeout;\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTU1Mg=="}, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzYzMDM3OnYy", "diffSide": "RIGHT", "path": "rt/transports/http/src/main/resources/schemas/wsdl/http-conf.xsd", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODo0NDoxNlrOG0uLZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwOTo0NTozMVrOG0waVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTcxNw==", "bodyText": "I don't think this is required.", "url": "https://github.com/apache/cxf/pull/684#discussion_r457935717", "createdAt": "2020-07-21T08:44:16Z", "author": {"login": "coheigea"}, "path": "rt/transports/http/src/main/resources/schemas/wsdl/http-conf.xsd", "diffHunk": "@@ -390,6 +390,13 @@\n                 </xs:documentation>\n             </xs:annotation>      \n         </xs:attribute>\n+        <xs:attribute name=\"MaxResponseContentLength\" type=\"ptp:ParameterizedInt\" use=\"optional\" >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3MjMwOA==", "bodyText": "removed", "url": "https://github.com/apache/cxf/pull/684#discussion_r457972308", "createdAt": "2020-07-21T09:45:31Z", "author": {"login": "vladikM"}, "path": "rt/transports/http/src/main/resources/schemas/wsdl/http-conf.xsd", "diffHunk": "@@ -390,6 +390,13 @@\n                 </xs:documentation>\n             </xs:annotation>      \n         </xs:attribute>\n+        <xs:attribute name=\"MaxResponseContentLength\" type=\"ptp:ParameterizedInt\" use=\"optional\" >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTcxNw=="}, "originalCommit": {"oid": "df31f6d19be080ac169ff3decaafb62d1c686d37"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTc5NzQxOnYy", "diffSide": "RIGHT", "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpClientPipelineFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyMzozN1rOG1V9kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTozNjowMFrOG1xTrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUzOQ==", "bodyText": "Could we just refer to a single constant value (DEFAULT_MAX_RESPONSE_CONTENT_LENGTH)?", "url": "https://github.com/apache/cxf/pull/684#discussion_r458587539", "createdAt": "2020-07-22T07:23:37Z", "author": {"login": "coheigea"}, "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpClientPipelineFactory.java", "diffHunk": "@@ -44,16 +44,24 @@\n \n     private static final Logger LOG =\n         LogUtils.getL7dLogger(NettyHttpClientPipelineFactory.class);\n+\n     private final TLSClientParameters tlsClientParameters;\n     private final int readTimeout;\n-    \n+    private final int maxContentLength;\n+\n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters) {\n         this(clientParameters, 0);\n     }\n \n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters, int readTimeout) {\n+        this(clientParameters, readTimeout, 1048576);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc872ebc52de0d4b11c176fd0418df3a1b9b871"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzNTU2Ng==", "bodyText": "replaced with constant", "url": "https://github.com/apache/cxf/pull/684#discussion_r459035566", "createdAt": "2020-07-22T19:36:00Z", "author": {"login": "vladikM"}, "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpClientPipelineFactory.java", "diffHunk": "@@ -44,16 +44,24 @@\n \n     private static final Logger LOG =\n         LogUtils.getL7dLogger(NettyHttpClientPipelineFactory.class);\n+\n     private final TLSClientParameters tlsClientParameters;\n     private final int readTimeout;\n-    \n+    private final int maxContentLength;\n+\n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters) {\n         this(clientParameters, 0);\n     }\n \n     public NettyHttpClientPipelineFactory(TLSClientParameters clientParameters, int readTimeout) {\n+        this(clientParameters, readTimeout, 1048576);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NzUzOQ=="}, "originalCommit": {"oid": "dfc872ebc52de0d4b11c176fd0418df3a1b9b871"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTgwMDU3OnYy", "diffSide": "RIGHT", "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpConduit.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoyNDozOFrOG1V_kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTozNTo0M1rOG1xTIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4ODA0OQ==", "bodyText": "I don't think the system property is necessary, as determineConnection/ReceiveTimeout don't check it, only the message.", "url": "https://github.com/apache/cxf/pull/684#discussion_r458588049", "createdAt": "2020-07-22T07:24:38Z", "author": {"login": "coheigea"}, "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpConduit.java", "diffHunk": "@@ -651,5 +660,24 @@ public void postShutdown() {\n     public void preShutdown() {\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message) {\n+        Integer maxResponseContentLength = null;\n+        if (message.get(MAX_RESPONSE_CONTENT_LENGTH) != null) {\n+            Object obj = message.get(MAX_RESPONSE_CONTENT_LENGTH);\n+            try {\n+                maxResponseContentLength = Integer.parseInt(obj.toString());\n+            } catch (NumberFormatException e) {\n+                LOG.log(Level.WARNING, \"INVALID_TIMEOUT_FORMAT\", new Object[] {\n+                    MAX_RESPONSE_CONTENT_LENGTH, obj.toString()\n+                });\n+            }\n+        }\n+        if (maxResponseContentLength == null) {\n+            maxResponseContentLength = SystemPropertyAction.getInteger(MAX_RESPONSE_CONTENT_LENGTH,\n+                DEFAULT_MAX_RESPONSE_CONTENT_LENGTH);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc872ebc52de0d4b11c176fd0418df3a1b9b871"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzNTQyNQ==", "bodyText": "removed", "url": "https://github.com/apache/cxf/pull/684#discussion_r459035425", "createdAt": "2020-07-22T19:35:43Z", "author": {"login": "vladikM"}, "path": "rt/transports/http-netty/netty-client/src/main/java/org/apache/cxf/transport/http/netty/client/NettyHttpConduit.java", "diffHunk": "@@ -651,5 +660,24 @@ public void postShutdown() {\n     public void preShutdown() {\n     }\n \n+    protected static int determineMaxResponseContentLength(Message message) {\n+        Integer maxResponseContentLength = null;\n+        if (message.get(MAX_RESPONSE_CONTENT_LENGTH) != null) {\n+            Object obj = message.get(MAX_RESPONSE_CONTENT_LENGTH);\n+            try {\n+                maxResponseContentLength = Integer.parseInt(obj.toString());\n+            } catch (NumberFormatException e) {\n+                LOG.log(Level.WARNING, \"INVALID_TIMEOUT_FORMAT\", new Object[] {\n+                    MAX_RESPONSE_CONTENT_LENGTH, obj.toString()\n+                });\n+            }\n+        }\n+        if (maxResponseContentLength == null) {\n+            maxResponseContentLength = SystemPropertyAction.getInteger(MAX_RESPONSE_CONTENT_LENGTH,\n+                DEFAULT_MAX_RESPONSE_CONTENT_LENGTH);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4ODA0OQ=="}, "originalCommit": {"oid": "dfc872ebc52de0d4b11c176fd0418df3a1b9b871"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3590, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}