{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NTgxOTA5", "number": 713, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNjozNzoyNVrOExrW4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNjozNzoyNVrOExrW4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTI2MDUwOnYy", "diffSide": "LEFT", "path": "rt/features/logging/src/main/java/org/apache/cxf/ext/logging/MaskSensitiveHelper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNjozNzoyNVrOHn6ygQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzo0OTozM1rOHsa8TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxOTcxMw==", "bodyText": "Why this condition was removed? It is exactly what will be returned on line https://github.com/apache/cxf/pull/713/files#diff-042c9128e111e120c63cbb7404cdc5d2d2e3c4377b40e01c097d4b8e7315191dR80 but with unnecessary use of Optional::ofNullable(message)?", "url": "https://github.com/apache/cxf/pull/713#discussion_r511619713", "createdAt": "2020-10-25T16:37:25Z", "author": {"login": "reta"}, "path": "rt/features/logging/src/main/java/org/apache/cxf/ext/logging/MaskSensitiveHelper.java", "diffHunk": "@@ -70,15 +71,19 @@ public String maskSensitiveElements(\n             final Message message,\n             final String originalLogString) {\n         if (replacementsXML.isEmpty() && replacementsJSON.isEmpty()\n-                || message == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4a36ea8ab2c23b8ccfd9522a948b5aca3fe39c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5NDQ5Ng==", "bodyText": "The statement \"contentType = Optional.ofNullable(message).map(m -> (String) m.get(Message.CONTENT_TYPE))\" handles null message out of the box. Null check on top is redundant. The contentType must be checked on null as well", "url": "https://github.com/apache/cxf/pull/713#discussion_r515494496", "createdAt": "2020-10-31T12:53:57Z", "author": {"login": "ashakirin"}, "path": "rt/features/logging/src/main/java/org/apache/cxf/ext/logging/MaskSensitiveHelper.java", "diffHunk": "@@ -70,15 +71,19 @@ public String maskSensitiveElements(\n             final Message message,\n             final String originalLogString) {\n         if (replacementsXML.isEmpty() && replacementsJSON.isEmpty()\n-                || message == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxOTcxMw=="}, "originalCommit": {"oid": "2f4a36ea8ab2c23b8ccfd9522a948b5aca3fe39c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUwNDY4MQ==", "bodyText": "That is correct, so the question becomes: why do you need Optional at all? With the previous check in place, just:\nfinal String contentType = (String) m.get(Message.CONTENT_TYPE));\nif (contentType  == null) {\n      return originalLogString;\n}\n\nIt looks as straightforward as it gets (no need to create unnecessary instances).", "url": "https://github.com/apache/cxf/pull/713#discussion_r515504681", "createdAt": "2020-10-31T14:51:23Z", "author": {"login": "reta"}, "path": "rt/features/logging/src/main/java/org/apache/cxf/ext/logging/MaskSensitiveHelper.java", "diffHunk": "@@ -70,15 +71,19 @@ public String maskSensitiveElements(\n             final Message message,\n             final String originalLogString) {\n         if (replacementsXML.isEmpty() && replacementsJSON.isEmpty()\n-                || message == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxOTcxMw=="}, "originalCommit": {"oid": "2f4a36ea8ab2c23b8ccfd9522a948b5aca3fe39c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0MDgxMg==", "bodyText": "Matter of taste, for me Optional alternative is a bit compacter", "url": "https://github.com/apache/cxf/pull/713#discussion_r516340812", "createdAt": "2020-11-02T23:49:33Z", "author": {"login": "ashakirin"}, "path": "rt/features/logging/src/main/java/org/apache/cxf/ext/logging/MaskSensitiveHelper.java", "diffHunk": "@@ -70,15 +71,19 @@ public String maskSensitiveElements(\n             final Message message,\n             final String originalLogString) {\n         if (replacementsXML.isEmpty() && replacementsJSON.isEmpty()\n-                || message == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxOTcxMw=="}, "originalCommit": {"oid": "2f4a36ea8ab2c23b8ccfd9522a948b5aca3fe39c"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3618, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}