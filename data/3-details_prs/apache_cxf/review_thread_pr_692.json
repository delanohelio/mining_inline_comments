{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDE4MjU3", "number": 692, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozOTowMVrOEhu4DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NToyM1rOEhvD5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODA2NDc2OnYy", "diffSide": "RIGHT", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozOTowMVrOHPNbBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMTo1NDoyMVrOHPbpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxMDU5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private HttpServletRequest request;\n          \n          \n            \n                    private final HttpServletRequest request;\n          \n      \n    \n    \n  \n\nit looks like this is not intended to be changed, so we could explicitly mark it as final.", "url": "https://github.com/apache/cxf/pull/692#discussion_r485710598", "createdAt": "2020-09-09T15:39:01Z", "author": {"login": "andymc12"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java", "diffHunk": "@@ -41,6 +46,60 @@ public static PropertyHolder getPropertyHolder(Message m) {\n         void setProperty(String name, Object value);\n         Collection<String> getPropertyNames();\n     }\n+    \n+    private static class ServletRequestPropertyHolder extends MessagePropertyHolder {\n+        private static final String ENDPOINT_ADDRESS_PROPERTY = \"org.apache.cxf.transport.endpoint.address\";\n+        private HttpServletRequest request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0MzYxNw==", "bodyText": "\ud83d\udc4d correct, thank you!", "url": "https://github.com/apache/cxf/pull/692#discussion_r485943617", "createdAt": "2020-09-09T21:54:21Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java", "diffHunk": "@@ -41,6 +46,60 @@ public static PropertyHolder getPropertyHolder(Message m) {\n         void setProperty(String name, Object value);\n         Collection<String> getPropertyNames();\n     }\n+    \n+    private static class ServletRequestPropertyHolder extends MessagePropertyHolder {\n+        private static final String ENDPOINT_ADDRESS_PROPERTY = \"org.apache.cxf.transport.endpoint.address\";\n+        private HttpServletRequest request;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxMDU5OA=="}, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODA5Mjc4OnYy", "diffSide": "RIGHT", "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NDo1NFrOHPNsBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMjo1MTowNFrOHPc6dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNDk1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Header\", property);\n          \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Response-Header\", property);\n          \n      \n    \n    \n  \n\nJust a suggestion, but IIUC, the intent is to show that property set from the request filter is propagated to the writer interceptor (in the response flow).  By using a different header in the response, it makes it clear that the test is not just propagating headers from the request back to the response.", "url": "https://github.com/apache/cxf/pull/692#discussion_r485714951", "createdAt": "2020-09-09T15:44:54Z", "author": {"login": "andymc12"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java", "diffHunk": "@@ -106,6 +106,12 @@ public void setDefaultId(List<String> ids) {\n         public void aroundWriteTo(WriterInterceptorContext context) throws IOException,\n             WebApplicationException {\n             context.getHeaders().putSingle(\"BookWriter\", \"TheBook\");\n+            \n+            final Object property = context.getProperty(\"x-book\");\n+            if (property != null) {\n+                context.getHeaders().putSingle(\"X-Book-Header\", property);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2NDQwNw==", "bodyText": "Completely agree, rewrote the test to reflect its purpose, thanks a lot!", "url": "https://github.com/apache/cxf/pull/692#discussion_r485964407", "createdAt": "2020-09-09T22:51:04Z", "author": {"login": "reta"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java", "diffHunk": "@@ -106,6 +106,12 @@ public void setDefaultId(List<String> ids) {\n         public void aroundWriteTo(WriterInterceptorContext context) throws IOException,\n             WebApplicationException {\n             context.getHeaders().putSingle(\"BookWriter\", \"TheBook\");\n+            \n+            final Object property = context.getProperty(\"x-book\");\n+            if (property != null) {\n+                context.getHeaders().putSingle(\"X-Book-Header\", property);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNDk1MQ=="}, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODA5NTA5OnYy", "diffSide": "RIGHT", "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NToyM1rOHPNtaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NToyM1rOHPNtaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNTMwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));\n          \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Response-Header\"));\n          \n      \n    \n    \n  \n\nsee previous comment", "url": "https://github.com/apache/cxf/pull/692#discussion_r485715305", "createdAt": "2020-09-09T15:45:23Z", "author": {"login": "andymc12"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java", "diffHunk": "@@ -186,17 +186,33 @@ public void testGetBook123Application11PerRequest() throws Exception {\n             doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\");\n         assertEquals(\"TheBook\", r.getHeaderString(\"BookWriter\"));\n     }\n+    \n+    @Test\n+    public void testGetBook123Application11PerRequestWithHeader() throws Exception {\n+        Response r = \n+            doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\", \n+                \"PropValue\");\n+        assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3603, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}