{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODA1NDQw", "number": 630, "title": "CXF-8201 add additional check for file scheme in setUriParts", "bodyText": "This additional check enables path appends for file URIs to work as it has done in previous versions of CXF, for example, with this patch:\nUriBuilder.fromUri(\"file:///~/calendar\").path(\"extra\").build() will return file:///calendar/extra as opposed to file:////calendar.\nThis has been discussed on the mailing list here: https://mail-archives.apache.org/mod_mbox/cxf-dev/202001.mbox/%3cCAGRgoZhuKXoYW_JtxyDH=u7Qqqcbeo6-9BXa0dxB8L+iGB4J4g@mail.gmail.com%3e", "createdAt": "2020-01-24T12:03:20Z", "url": "https://github.com/apache/cxf/pull/630", "merged": true, "mergeCommit": {"oid": "6c2778a871114d5ba5ede0774ed39a8330e2ac63"}, "closed": true, "closedAt": "2020-01-30T01:07:00Z", "author": {"login": "jgallimore"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9JEteAH2gAyMzY2ODA1NDQwOmI0ZjI0OGUyZWUwYWY5NGI5MjY1YWEyMWY3M2FhYTY5ODU1ZDA2MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_FTp0gH2gAyMzY2ODA1NDQwOjI5NWYxZGJjY2QxZGI0MmMyMjhhMTVkMzg3ZTY1MmNkOTZjYzlhM2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b4f248e2ee0af94b9265aa21f73aaa69855d062b", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/b4f248e2ee0af94b9265aa21f73aaa69855d062b", "committedDate": "2020-01-23T11:58:36Z", "message": "Adding unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab792a48795df552190128eecfe28d366b51f7a", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/6ab792a48795df552190128eecfe28d366b51f7a", "committedDate": "2020-01-24T11:20:14Z", "message": "Merge remote-tracking branch 'apache/master' into uribuilderimpltest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9059a7eaa8d95a5e7b64bb7a84816d29151e01ee", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/9059a7eaa8d95a5e7b64bb7a84816d29151e01ee", "committedDate": "2020-01-24T11:24:57Z", "message": "CXF-8201 additional check for file scheme to enable appending paths to file URIs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzA4NDk4", "url": "https://github.com/apache/cxf/pull/630#pullrequestreview-348308498", "createdAt": "2020-01-25T03:55:26Z", "commit": {"oid": "9059a7eaa8d95a5e7b64bb7a84816d29151e01ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMzo1NToyN1rOFhuq3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMzo1NToyN1rOFhuq3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMTk2Ng==", "bodyText": "Hi @jgallimore, thanks for the PR. I think CXF should not assume any intrinsic knowledge about the URI scheme and handle it in a specific way. For example,  what about handling jar:file? Or any other custom schemes?\nAlthough the reply on spec list (https://www.eclipse.org/lists/jaxrs-dev/msg00774.html) explicitly mentions that JAX-RS context is REST-over-HTTP (the CXF case), we could certainly make UriBuilder more flexible if the general solution could be found.\nHope it makes sense, thank you.", "url": "https://github.com/apache/cxf/pull/630#discussion_r370911966", "createdAt": "2020-01-25T03:55:27Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -651,8 +651,8 @@ private void setUriParts(URI uri) {\n         } else {\n             schemeSpecificPart = uri.getSchemeSpecificPart();\n         }\n-        if (scheme != null && host == null && (query == null || query.isEmpty()) && userInfo == null\n-            && uri.getSchemeSpecificPart() != null) {\n+        if (scheme != null && !\"file\".equalsIgnoreCase(scheme) && host == null && (query == null || query.isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9059a7eaa8d95a5e7b64bb7a84816d29151e01ee"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c53951fc42b080d6d1e9d3e0490752715f3a388", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/5c53951fc42b080d6d1e9d3e0490752715f3a388", "committedDate": "2020-01-27T10:46:29Z", "message": "Merge Remote-tracking branch 'apache/master' into uribuilderimpltest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/70c056a50c79f390f4e777bf717c693adfd5b124", "committedDate": "2020-01-27T13:37:26Z", "message": "CXF-8201 attempting to make this a more generic check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDg1MjA5", "url": "https://github.com/apache/cxf/pull/630#pullrequestreview-349085209", "createdAt": "2020-01-28T01:29:54Z", "commit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToyOTo1NFrOFiW8eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToyOTo1NFrOFiW8eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MTgzNA==", "bodyText": "We have a helper method for it,  CollectionUtils.isEmpty(query) from org.apache.cxf.common.util", "url": "https://github.com/apache/cxf/pull/630#discussion_r371571834", "createdAt": "2020-01-28T01:29:54Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTE0MTQx", "url": "https://github.com/apache/cxf/pull/630#pullrequestreview-349114141", "createdAt": "2020-01-28T03:37:06Z", "commit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMzozNzowNlrOFiYbpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMzozNzowNlrOFiYbpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5NjE5OA==", "bodyText": "It would be good to check if uri.getPath() is not null, otherwise \"//\" + uri.getPath() becomes something like //null", "url": "https://github.com/apache/cxf/pull/630#discussion_r371596198", "createdAt": "2020-01-28T03:37:06Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();\n+    }\n+\n+    private boolean sspMatchessPath(final URI uri) {\n+        return uri.getRawSchemeSpecificPart() != null && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTE0MzE5", "url": "https://github.com/apache/cxf/pull/630#pullrequestreview-349114319", "createdAt": "2020-01-28T03:38:08Z", "commit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMzozODowOFrOFiYcOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMzozODowOFrOFiYcOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5NjM0Ng==", "bodyText": "Matchess is misspelled, schemeSpecificPartMatchesUriPath would be probably better name (despite being long).", "url": "https://github.com/apache/cxf/pull/630#discussion_r371596346", "createdAt": "2020-01-28T03:38:08Z", "author": {"login": "reta"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();\n+    }\n+\n+    private boolean sspMatchessPath(final URI uri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c7d1caf13c4df6cf5c36b5bc621a80d2c37544b", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/3c7d1caf13c4df6cf5c36b5bc621a80d2c37544b", "committedDate": "2020-01-29T12:23:54Z", "message": "Merge remote-tracking branch 'apache/master' into uribuilderimpltest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295f1dbccd1db42c228a15d387e652cd96cc9a3d", "author": {"user": {"login": "jgallimore", "name": "Jonathan Gallimore"}}, "url": "https://github.com/apache/cxf/commit/295f1dbccd1db42c228a15d387e652cd96cc9a3d", "committedDate": "2020-01-29T12:43:09Z", "message": "CXF-8201 incorporate feedback on PR. Use CollectionUtils to check map/collection is empty, null check and better name for checking the scheme specific part against the path."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2180, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}