{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMDY5MzIz", "number": 726, "title": "CXF-8367: Micrometer always reports outcome=UNKNOWN on success cases", "bodyText": "Reusing the logic from AbstractHTTPDestination to come up with the response status code if it is not set.", "createdAt": "2020-11-17T01:02:46Z", "url": "https://github.com/apache/cxf/pull/726", "merged": true, "mergeCommit": {"oid": "c4e1d0ef71d4a86e5dc641c4a793cf294ac59509"}, "closed": true, "closedAt": "2020-11-20T13:55:45Z", "author": {"login": "reta"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddO8WtAFqTUzMTk0NTkzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddQmgpgBqjQwMDMzNTA3Mjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTQ1OTM5", "url": "https://github.com/apache/cxf/pull/726#pullrequestreview-531945939", "createdAt": "2020-11-17T01:05:37Z", "commit": {"oid": "8e13c6aac7e82610131d4dff0bf5623e326cd280"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTowNTozOFrOH0gWOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTowNTozOFrOH0gWOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxNzk3Ng==", "bodyText": "@shark300 sorry for pinging, I've removed In Message (and Out Message) from the fault code resolution. It seems like it is used by some features and interceptors, however the fault logic only relies on In Fault / Out Fault. Do you have any concerns with this change? Thank you.", "url": "https://github.com/apache/cxf/pull/726#discussion_r524817976", "createdAt": "2020-11-17T01:05:38Z", "author": {"login": "reta"}, "path": "rt/features/metrics/src/main/java/org/apache/cxf/metrics/micrometer/provider/jaxws/JaxwsFaultCodeProvider.java", "diffHunk": "@@ -26,20 +26,17 @@\n     \n     public String getFaultCode(Exchange ex, boolean client) {\n         FaultMode fm = ex.get(FaultMode.class);\n+        // We check OutFaultMessage/InFaultMessage only because some features propagate the\n+        // fault mode using InMessage/OutMessage (which may not end-up with a fault), for\n+        // example check MAPAggregatorImpl.\n         if (client) {\n             if (fm == null && ex.getInFaultMessage() != null) {\n                 fm = ex.getInFaultMessage().get(FaultMode.class);\n             }\n-            if (fm == null && ex.getOutMessage() != null) {\n-                fm = ex.getOutMessage().get(FaultMode.class);\n-            }\n         } else {\n             if (fm == null && ex.getOutFaultMessage() != null) {\n                 fm = ex.getOutFaultMessage().get(FaultMode.class);\n             }\n-            if (fm == null && ex.getInMessage() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e13c6aac7e82610131d4dff0bf5623e326cd280"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b1472db8325d7eca14121074018b2d17ca4a756", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/8b1472db8325d7eca14121074018b2d17ca4a756", "committedDate": "2020-11-17T03:00:43Z", "message": "CXF-8367: Micrometer always reports outcome=UNKNOWN on success cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e13c6aac7e82610131d4dff0bf5623e326cd280", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/8e13c6aac7e82610131d4dff0bf5623e326cd280", "committedDate": "2020-11-17T01:02:00Z", "message": "CXF-8367: Micrometer always reports outcome=UNKNOWN on success cases"}, "afterCommit": {"oid": "8b1472db8325d7eca14121074018b2d17ca4a756", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/8b1472db8325d7eca14121074018b2d17ca4a756", "committedDate": "2020-11-17T03:00:43Z", "message": "CXF-8367: Micrometer always reports outcome=UNKNOWN on success cases"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2152, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}