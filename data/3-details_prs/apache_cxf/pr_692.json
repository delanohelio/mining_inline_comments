{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDE4MjU3", "number": 692, "title": "CXF-8227: Failure to comply with JAX-RS spec with ContainerRequestContext and WriterInterceptorContext", "bodyText": "For some reasons, the implementation branched off into request / message property holders. If the request was available in the message context, all properties were mapped to request attributes, otherwise to message properties container. In order to preserve the compatibility, the fix still supports request attributes however at the same time populates message properties container.", "createdAt": "2020-09-09T01:48:12Z", "url": "https://github.com/apache/cxf/pull/692", "merged": true, "mergeCommit": {"oid": "6d5fddfa467cb7d9a54c066029b2a6d055fb5546"}, "closed": true, "closedAt": "2020-09-10T00:02:13Z", "author": {"login": "reta"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHCGq2AH2gAyNDgyNDE4MjU3OjNjYWViNjQzMDY4ZWU2YTljYWZiODQ5ZGVlZTZiZDdiYzY3ZjJlZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHU40WAH2gAyNDgyNDE4MjU3OjRlNzM4NjdjYzg2Mjk4M2U2NGNjNTBkZDE2NTBhZTAzMTU4ODA5MGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "committedDate": "2020-09-09T01:41:48Z", "message": "CXF-8227: Failure to comply with JAX-RS spec with ContainerRequestContext and WriterInterceptorContext"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTQwMjEw", "url": "https://github.com/apache/cxf/pull/692#pullrequestreview-485140210", "createdAt": "2020-09-09T15:39:01Z", "commit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTozOTowMVrOHPNbBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTo0NToyM1rOHPNtaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxMDU5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private HttpServletRequest request;\n          \n          \n            \n                    private final HttpServletRequest request;\n          \n      \n    \n    \n  \n\nit looks like this is not intended to be changed, so we could explicitly mark it as final.", "url": "https://github.com/apache/cxf/pull/692#discussion_r485710598", "createdAt": "2020-09-09T15:39:01Z", "author": {"login": "andymc12"}, "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java", "diffHunk": "@@ -41,6 +46,60 @@ public static PropertyHolder getPropertyHolder(Message m) {\n         void setProperty(String name, Object value);\n         Collection<String> getPropertyNames();\n     }\n+    \n+    private static class ServletRequestPropertyHolder extends MessagePropertyHolder {\n+        private static final String ENDPOINT_ADDRESS_PROPERTY = \"org.apache.cxf.transport.endpoint.address\";\n+        private HttpServletRequest request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNDk1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Header\", property);\n          \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Response-Header\", property);\n          \n      \n    \n    \n  \n\nJust a suggestion, but IIUC, the intent is to show that property set from the request filter is propagated to the writer interceptor (in the response flow).  By using a different header in the response, it makes it clear that the test is not just propagating headers from the request back to the response.", "url": "https://github.com/apache/cxf/pull/692#discussion_r485714951", "createdAt": "2020-09-09T15:44:54Z", "author": {"login": "andymc12"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java", "diffHunk": "@@ -106,6 +106,12 @@ public void setDefaultId(List<String> ids) {\n         public void aroundWriteTo(WriterInterceptorContext context) throws IOException,\n             WebApplicationException {\n             context.getHeaders().putSingle(\"BookWriter\", \"TheBook\");\n+            \n+            final Object property = context.getProperty(\"x-book\");\n+            if (property != null) {\n+                context.getHeaders().putSingle(\"X-Book-Header\", property);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNTMwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));\n          \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Response-Header\"));\n          \n      \n    \n    \n  \n\nsee previous comment", "url": "https://github.com/apache/cxf/pull/692#discussion_r485715305", "createdAt": "2020-09-09T15:45:23Z", "author": {"login": "andymc12"}, "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java", "diffHunk": "@@ -186,17 +186,33 @@ public void testGetBook123Application11PerRequest() throws Exception {\n             doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\");\n         assertEquals(\"TheBook\", r.getHeaderString(\"BookWriter\"));\n     }\n+    \n+    @Test\n+    public void testGetBook123Application11PerRequestWithHeader() throws Exception {\n+        Response r = \n+            doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\", \n+                \"PropValue\");\n+        assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e73867cc862983e64cc50dd1650ae031588090b", "author": {"user": {"login": "reta", "name": "Andriy Redko"}}, "url": "https://github.com/apache/cxf/commit/4e73867cc862983e64cc50dd1650ae031588090b", "committedDate": "2020-09-09T23:34:52Z", "message": "Addressing review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}