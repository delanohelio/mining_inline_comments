{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjU0Mzc3", "number": 619, "title": "CXF-8188: Inject into ClientHeadersFactory", "bodyText": "Implements CXF-8188 - injecting @Context and @Inject into custom ClientHeadersFactory implementations.\nThis tests JAX-RS injection.  The MP Rest Client 2.0 TCK will test CDI injection.", "createdAt": "2020-01-04T22:57:32Z", "url": "https://github.com/apache/cxf/pull/619", "merged": true, "mergeCommit": {"oid": "700f95cbaac85b3965297e3d2533d8d36672ec8d"}, "closed": true, "closedAt": "2020-01-16T19:08:23Z", "author": {"login": "andymc12"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3aEM0gFqTMzODQwOTQxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6v102ABqjI5NTI4NzY5NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDA5NDEw", "url": "https://github.com/apache/cxf/pull/619#pullrequestreview-338409410", "createdAt": "2020-01-05T16:22:52Z", "commit": {"oid": "04aaa804496dac07b5da13d2accb4c80e96b2a04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNjoyMjo1M1rOFaSDUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNjoyMjo1M1rOFaSDUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMzA1OA==", "bodyText": "Debug leftovers?  ;-)", "url": "https://github.com/apache/cxf/pull/619#discussion_r363103058", "createdAt": "2020-01-05T16:22:53Z", "author": {"login": "reta"}, "path": "systests/microprofile/client/jaxrs/src/test/java/org/apache/cxf/systest/microprofile/rest/client/InjectClientHeadersFactory.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.cxf.systest.microprofile.rest.client;\n+\n+import javax.ws.rs.core.Context;\n+import javax.ws.rs.core.MultivaluedHashMap;\n+import javax.ws.rs.core.MultivaluedMap;\n+import javax.ws.rs.core.Request;\n+\n+import org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory;\n+\n+public class InjectClientHeadersFactory implements ClientHeadersFactory {\n+\n+    @Context\n+    Request jaxrsRequest;\n+\n+    @Override\n+    public MultivaluedMap<String, String> update(MultivaluedMap<String, String> incomingHeaders,\n+                                                 MultivaluedMap<String, String> clientOutgoingHeaders) {\n+\n+        System.out.println(\"InjectClientHeadersFactory update\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04aaa804496dac07b5da13d2accb4c80e96b2a04"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04aaa804496dac07b5da13d2accb4c80e96b2a04", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/04aaa804496dac07b5da13d2accb4c80e96b2a04", "committedDate": "2020-01-04T22:54:40Z", "message": "CXF-8188: Inject into ClientHeadersFactory\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5", "committedDate": "2020-01-07T23:10:11Z", "message": "CXF-8188: Inject into ClientHeadersFactory\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTk2NzMy", "url": "https://github.com/apache/cxf/pull/619#pullrequestreview-341596732", "createdAt": "2020-01-12T20:22:51Z", "commit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMDoyMjo1MVrOFcq8iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMDoyMjo1MVrOFcq8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwODA3Mw==", "bodyText": "this is a slow operation, it should likely not be done at runtime but the BM should be bound (at least boundable) to CXF bus as an extension probably", "url": "https://github.com/apache/cxf/pull/619#discussion_r365608073", "createdAt": "2020-01-12T20:22:51Z", "author": {"login": "rmannibucau"}, "path": "rt/rs/microprofile-client/src/main/java/org/apache/cxf/microprofile/client/cdi/CDIUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.microprofile.client.cdi;\n+\n+import java.util.NoSuchElementException;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.BeanManager;\n+import javax.enterprise.inject.spi.CDI;\n+\n+public final class CDIUtils {\n+\n+    private CDIUtils() {\n+    }\n+\n+    public static <T> T getInstanceFromCDI(Class<T> clazz) {\n+        T t;\n+        try {\n+            t = findBean(clazz);\n+        } catch (ExceptionInInitializerError | NoClassDefFoundError | IllegalStateException ex) {\n+            // expected if no CDI implementation is available\n+            t = null;\n+        } catch (NoSuchElementException ex) {\n+            // expected if ClientHeadersFactory is not managed by CDI\n+            t = null;\n+        }\n+        return t;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static <T> T findBean(Class<T> clazz) {\n+        BeanManager beanManager = CDI.current().getBeanManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTk2NzU0", "url": "https://github.com/apache/cxf/pull/619#pullrequestreview-341596754", "createdAt": "2020-01-12T20:23:18Z", "commit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMDoyMzoxOFrOFcq8pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMDoyMzoxOFrOFcq8pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwODEwMg==", "bodyText": "if !beanManager.isNormalScope(bean.getScope()) then ctx must be released to not leak", "url": "https://github.com/apache/cxf/pull/619#discussion_r365608102", "createdAt": "2020-01-12T20:23:18Z", "author": {"login": "rmannibucau"}, "path": "rt/rs/microprofile-client/src/main/java/org/apache/cxf/microprofile/client/cdi/CDIUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.microprofile.client.cdi;\n+\n+import java.util.NoSuchElementException;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.BeanManager;\n+import javax.enterprise.inject.spi.CDI;\n+\n+public final class CDIUtils {\n+\n+    private CDIUtils() {\n+    }\n+\n+    public static <T> T getInstanceFromCDI(Class<T> clazz) {\n+        T t;\n+        try {\n+            t = findBean(clazz);\n+        } catch (ExceptionInInitializerError | NoClassDefFoundError | IllegalStateException ex) {\n+            // expected if no CDI implementation is available\n+            t = null;\n+        } catch (NoSuchElementException ex) {\n+            // expected if ClientHeadersFactory is not managed by CDI\n+            t = null;\n+        }\n+        return t;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static <T> T findBean(Class<T> clazz) {\n+        BeanManager beanManager = CDI.current().getBeanManager();\n+        Bean<?> bean = beanManager.getBeans(clazz).iterator().next();\n+        CreationalContext<?> ctx = beanManager.createCreationalContext(bean);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/0a62f121eaf7617e9cd4a39ff1a82b5a71357fd5", "committedDate": "2020-01-07T23:10:11Z", "message": "CXF-8188: Inject into ClientHeadersFactory\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "62566ce869a33d2400004ff90ab469451d33580d", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/62566ce869a33d2400004ff90ab469451d33580d", "committedDate": "2020-01-13T22:59:08Z", "message": "CXF-8188: Code review comments\n\n- Caches BeanManager on the bus\n- Centralizes CDI-accessing mechanism in CDIUtils/CDIFacade\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568fbb4a9b5edbd054ff9f38ac3b166d8aae5ffe", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/568fbb4a9b5edbd054ff9f38ac3b166d8aae5ffe", "committedDate": "2020-01-15T19:47:48Z", "message": "CXF-8188: Inject into ClientHeadersFactory\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d90d3849fa986e66ff8963d0f47300beeda178c9", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/d90d3849fa986e66ff8963d0f47300beeda178c9", "committedDate": "2020-01-15T19:47:48Z", "message": "CXF-8188: Code review comments\n\n- Caches BeanManager on the bus\n- Centralizes CDI-accessing mechanism in CDIUtils/CDIFacade\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18949a3c9516524acf9a7f294b2406bbabccc758", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/18949a3c9516524acf9a7f294b2406bbabccc758", "committedDate": "2020-01-14T22:46:56Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "e72f483b8f3b4cce5ea9b5e3d86535b140db3019", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/e72f483b8f3b4cce5ea9b5e3d86535b140db3019", "committedDate": "2020-01-15T19:47:48Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e72f483b8f3b4cce5ea9b5e3d86535b140db3019", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/e72f483b8f3b4cce5ea9b5e3d86535b140db3019", "committedDate": "2020-01-15T19:47:48Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "b0bd49f868994ee6f7c7bb5f0995b3b92622678a", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/b0bd49f868994ee6f7c7bb5f0995b3b92622678a", "committedDate": "2020-01-15T22:05:19Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjE4NjYw", "url": "https://github.com/apache/cxf/pull/619#pullrequestreview-343618660", "createdAt": "2020-01-16T00:59:49Z", "commit": {"oid": "b0bd49f868994ee6f7c7bb5f0995b3b92622678a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo1OTo0OVrOFeLKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo1OTo0OVrOFeLKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE4NDQzNQ==", "bodyText": "Minor, Optional.empty() would be the thing you are looking for :)", "url": "https://github.com/apache/cxf/pull/619#discussion_r367184435", "createdAt": "2020-01-16T00:59:49Z", "author": {"login": "reta"}, "path": "rt/rs/microprofile-client/src/main/java/org/apache/cxf/microprofile/client/cdi/CDIFacade.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.cxf.microprofile.client.cdi;\n+\n+import java.util.Optional;\n+import java.util.concurrent.Callable;\n+\n+import org.apache.cxf.Bus;\n+\n+\n+public final class CDIFacade {\n+\n+    private static final boolean CDI_AVAILABLE;\n+\n+    private CDIFacade() {\n+    }\n+\n+    static {\n+        boolean b;\n+        try {\n+            Class.forName(\"javax.enterprise.inject.spi.BeanManager\");\n+            b = true;\n+        } catch (Throwable t) {\n+            b = false;\n+        }\n+        CDI_AVAILABLE = b;\n+    }\n+\n+    public static Optional<Object> getBeanManager(Bus b) {\n+        return nullableOptional(() -> CDIUtils.getCurrentBeanManager(b));\n+    }\n+\n+    public static Optional<Object> getBeanManager() {\n+        try {\n+            return nullableOptional(() -> CDIUtils.getCurrentBeanManager());\n+        } catch (Throwable t) {\n+            t.printStackTrace();\n+            return Optional.ofNullable(null);\n+        }\n+    }\n+\n+    public static <T> Optional<Instance<T>> getInstanceFromCDI(Class<T> clazz, Bus b) {\n+        return nullableOptional(() -> CDIUtils.getInstanceFromCDI(clazz, b));\n+    }\n+\n+    public static <T> Optional<Instance<T>> getInstanceFromCDI(Class<T> clazz) {\n+        return nullableOptional(() -> CDIUtils.getInstanceFromCDI(clazz));\n+    }\n+\n+    private static <T> Optional<T> nullableOptional(Callable<T> callable) {\n+        if (!CDI_AVAILABLE) {\n+            return Optional.ofNullable(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0bd49f868994ee6f7c7bb5f0995b3b92622678a"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5134b3e8ece850c718429d3449b587afcd89795a", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/5134b3e8ece850c718429d3449b587afcd89795a", "committedDate": "2020-01-16T01:26:40Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0bd49f868994ee6f7c7bb5f0995b3b92622678a", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/b0bd49f868994ee6f7c7bb5f0995b3b92622678a", "committedDate": "2020-01-15T22:05:19Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}, "afterCommit": {"oid": "5134b3e8ece850c718429d3449b587afcd89795a", "author": {"user": {"login": "andymc12", "name": "Andy McCright"}}, "url": "https://github.com/apache/cxf/commit/5134b3e8ece850c718429d3449b587afcd89795a", "committedDate": "2020-01-16T01:26:40Z", "message": "CXF-8188: Ensure CreationalContexts are released\n\nCode review comment - releasing contexts when the client\nproxy is closed.\n\nSigned-off-by: Andy McCright <j.andrew.mccright@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2167, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}