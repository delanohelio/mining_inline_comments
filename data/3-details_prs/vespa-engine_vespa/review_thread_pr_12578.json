{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjE2ODQ3", "number": 12578, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzowMDozNFrODoUpBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyMzozMVrODoWwQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjA3ODEyOnYy", "diffSide": "RIGHT", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzowMDozNFrOF2zKHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzo1MTowMFrOF21BDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw==", "bodyText": "Remove", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393005597", "createdAt": "2020-03-16T13:00:34Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java", "diffHunk": "@@ -141,4 +145,33 @@ public void testAutoscalingAws() {\n                                tester.autoscale(application1, cluster1));\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71695b9269d820b72966b6de5f81385b73e3cbd0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNjA0Nw==", "bodyText": "tx", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393036047", "createdAt": "2020-03-16T13:51:00Z", "author": {"login": "bratseth"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/AutoscalingTest.java", "diffHunk": "@@ -141,4 +145,33 @@ public void testAutoscalingAws() {\n                                tester.autoscale(application1, cluster1));\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw=="}, "originalCommit": {"oid": "71695b9269d820b72966b6de5f81385b73e3cbd0"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjQyNDMyOnYy", "diffSide": "RIGHT", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoyMzozMVrOF22lrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTowMjo0MFrOF24Zqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw==", "bodyText": "Why did this happen?", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393061807", "createdAt": "2020-03-16T14:23:31Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "diffHunk": "@@ -18,15 +18,15 @@ public void testNodeMetricsDb() {\n         NodeMetricsDb db = new NodeMetricsDb();\n         List<NodeMetrics.MetricValue> values = new ArrayList<>();\n         for (int i = 0; i < 40; i++) {\n-            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().toEpochMilli(), 0.9f));\n+            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().getEpochSecond(), 0.9f));\n             clock.advance(Duration.ofHours(1));\n         }\n         db.add(values);\n \n-        assertEquals(30, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());\n+        assertEquals(29, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4628eeaa4f467500c36f8fe7caf91b666846f302"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4NTQ3NA==", "bodyText": "We're now going through an API which uses seconds which round the current time to the nearest thousand, which causes the window to end up right at the boundary of the 30th value.", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393085474", "createdAt": "2020-03-16T14:54:26Z", "author": {"login": "bratseth"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "diffHunk": "@@ -18,15 +18,15 @@ public void testNodeMetricsDb() {\n         NodeMetricsDb db = new NodeMetricsDb();\n         List<NodeMetrics.MetricValue> values = new ArrayList<>();\n         for (int i = 0; i < 40; i++) {\n-            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().toEpochMilli(), 0.9f));\n+            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().getEpochSecond(), 0.9f));\n             clock.advance(Duration.ofHours(1));\n         }\n         db.add(values);\n \n-        assertEquals(30, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());\n+        assertEquals(29, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}, "originalCommit": {"oid": "4628eeaa4f467500c36f8fe7caf91b666846f302"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4Njk4Mw==", "bodyText": "Oh, so there was 1/1000 chance this test would fail before? If it ran exactly on the second?", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393086983", "createdAt": "2020-03-16T14:56:30Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "diffHunk": "@@ -18,15 +18,15 @@ public void testNodeMetricsDb() {\n         NodeMetricsDb db = new NodeMetricsDb();\n         List<NodeMetrics.MetricValue> values = new ArrayList<>();\n         for (int i = 0; i < 40; i++) {\n-            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().toEpochMilli(), 0.9f));\n+            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().getEpochSecond(), 0.9f));\n             clock.advance(Duration.ofHours(1));\n         }\n         db.add(values);\n \n-        assertEquals(30, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());\n+        assertEquals(29, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}, "originalCommit": {"oid": "4628eeaa4f467500c36f8fe7caf91b666846f302"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTQ5OQ==", "bodyText": "Yes, I think so. \"Problem\" here is I don't really care precisely how many ends up in the window ..", "url": "https://github.com/vespa-engine/vespa/pull/12578#discussion_r393091499", "createdAt": "2020-03-16T15:02:40Z", "author": {"login": "bratseth"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/autoscale/NodeMetricsDbTest.java", "diffHunk": "@@ -18,15 +18,15 @@ public void testNodeMetricsDb() {\n         NodeMetricsDb db = new NodeMetricsDb();\n         List<NodeMetrics.MetricValue> values = new ArrayList<>();\n         for (int i = 0; i < 40; i++) {\n-            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().toEpochMilli(), 0.9f));\n+            values.add(new NodeMetrics.MetricValue(\"host0\", \"cpu.util\", clock.instant().getEpochSecond(), 0.9f));\n             clock.advance(Duration.ofHours(1));\n         }\n         db.add(values);\n \n-        assertEquals(30, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());\n+        assertEquals(29, db.getWindow(clock.instant().minus(Duration.ofHours(30)), Resource.cpu,    List.of(\"host0\")).measurementCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2MTgwNw=="}, "originalCommit": {"oid": "4628eeaa4f467500c36f8fe7caf91b666846f302"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2266, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}