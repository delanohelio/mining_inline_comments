{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDk2Mjcx", "number": 12750, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDowODo1MVrODsUbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDozODowNFrODsUj5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk4NjEwOnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeRepositoryProvisioner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDowODo1MVrOF9JtQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDowODo1MVrOF9JtQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NjQ5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** Returns the current resources of this cluster, if it'1s already depoyed and inside the requested limits */\n          \n          \n            \n                /** Returns the current resources of this cluster, if it's already deployed and inside the requested limits */", "url": "https://github.com/vespa-engine/vespa/pull/12750#discussion_r399666498", "createdAt": "2020-03-28T14:08:51Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeRepositoryProvisioner.java", "diffHunk": "@@ -138,6 +141,39 @@ public void remove(NestedTransaction transaction, ApplicationId application) {\n         loadBalancerProvisioner.ifPresent(lbProvisioner -> lbProvisioner.deactivate(application, transaction));\n     }\n \n+    /**\n+     * Returns the target cluster resources, a value between the min and max in the requested capacity,\n+     * and updates the application store with the received min and max,\n+     */\n+    private ClusterResources decideTargetResources(ApplicationId applicationId, ClusterSpec.Id clusterId, Capacity requested) {\n+        try (Mutex lock = nodeRepository.lock(applicationId)) {\n+            Application application = nodeRepository.applications().get(applicationId, true);\n+            application.setClusterLimits(clusterId, requested.minResources(), requested.maxResources(), lock);\n+            return application.cluster(clusterId).targetResources()\n+                    .orElse(currentResources(applicationId, clusterId, requested)\n+                    .orElse(requested.minResources()));\n+        }\n+    }\n+\n+    /** Returns the current resources of this cluster, if it'1s already depoyed and inside the requested limits */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcaf74cc7cddd26f315ea9c60ceb8a5f9b665168"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Nzk4NzU5OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeRepositoryProvisioner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoxMDo1MVrOF9Jt_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDoxMDo1MVrOF9Jt_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NjY4Nw==", "bodyText": "Consider orElseGet to avoid having to do NodeRepostiory::getNodes every time.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .orElse(currentResources(applicationId, clusterId, requested)\n          \n          \n            \n                                .orElseGet(() -> currentResources(applicationId, clusterId, requested)", "url": "https://github.com/vespa-engine/vespa/pull/12750#discussion_r399666687", "createdAt": "2020-03-28T14:10:51Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeRepositoryProvisioner.java", "diffHunk": "@@ -138,6 +141,39 @@ public void remove(NestedTransaction transaction, ApplicationId application) {\n         loadBalancerProvisioner.ifPresent(lbProvisioner -> lbProvisioner.deactivate(application, transaction));\n     }\n \n+    /**\n+     * Returns the target cluster resources, a value between the min and max in the requested capacity,\n+     * and updates the application store with the received min and max,\n+     */\n+    private ClusterResources decideTargetResources(ApplicationId applicationId, ClusterSpec.Id clusterId, Capacity requested) {\n+        try (Mutex lock = nodeRepository.lock(applicationId)) {\n+            Application application = nodeRepository.applications().get(applicationId, true);\n+            application.setClusterLimits(clusterId, requested.minResources(), requested.maxResources(), lock);\n+            return application.cluster(clusterId).targetResources()\n+                    .orElse(currentResources(applicationId, clusterId, requested)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcaf74cc7cddd26f315ea9c60ceb8a5f9b665168"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODAwODA3OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/MaintenanceDeployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDozODowNFrOF9J3_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNDozODowNFrOF9J3_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2OTI0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (closed) throw new IllegalStateException(this + \"is closed\");\n          \n          \n            \n                    if (closed) throw new IllegalStateException(this + \" is closed\");", "url": "https://github.com/vespa-engine/vespa/pull/12750#discussion_r399669244", "createdAt": "2020-03-28T14:38:04Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/MaintenanceDeployment.java", "diffHunk": "@@ -52,6 +50,16 @@ public boolean isValid() {\n         return deployment.isPresent();\n     }\n \n+    /**\n+     * Returns the application lock held by this, or empty if it is not held.\n+     *\n+     * @throws IllegalStateException id this is called when closed\n+     */\n+    public Optional<Mutex> applicationLock() {\n+        if (closed) throw new IllegalStateException(this + \"is closed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b18e2939b6632e7bf02cc12dea096dabecb9e754"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2151, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}