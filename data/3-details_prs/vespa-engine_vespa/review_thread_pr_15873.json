{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzM4NjQ4", "number": 15873, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoyNDo1MFrOFIj5vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDoxNDozMVrOFK6G6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTIxMTQ5OnYy", "diffSide": "LEFT", "path": "vespaclient-container-plugin/src/main/java/com/yahoo/document/restapi/resource/DocumentV1ApiHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoyNDo1MFrOIKjN6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMjoyNDo1MFrOIKjN6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkzMzY3Mg==", "bodyText": "Oops, not intended to be here, but this is just removal of dead code that shouldn't be there in the first place.", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r547933672", "createdAt": "2020-12-23T12:24:50Z", "author": {"login": "jonmv"}, "path": "vespaclient-container-plugin/src/main/java/com/yahoo/document/restapi/resource/DocumentV1ApiHandler.java", "diffHunk": "@@ -377,10 +377,6 @@ private DocumentOperationParameters parametersFromRequest(HttpRequest request, S\n                                                           .map(parameters::withRoute)\n                                                           .orElse(parameters);\n                 break;\n-            case CONDITION:\n-                parameters = getProperty(request, ROUTE).map(parameters::withRoute)\n-                                                        .orElse(parameters);\n-                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d37f395ccb4db43ad6cb813412e7df5683363219"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTU5NTA4OnYy", "diffSide": "RIGHT", "path": "documentapi/src/vespa/documentapi/messagebus/documentprotocol.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMzowNjo1NFrOINxDeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDozNTo0M1rOINz50A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwNjEwNA==", "bodyText": "Consider adding a note in the comment on when this can be done so major version cleanup greps can find it", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551306104", "createdAt": "2021-01-04T13:06:54Z", "author": {"login": "vekterli"}, "path": "documentapi/src/vespa/documentapi/messagebus/documentprotocol.cpp", "diffHunk": "@@ -32,14 +32,14 @@ DocumentProtocol::DocumentProtocol(std::shared_ptr<const DocumentTypeRepo> repo,\n     // When adding factories to this list, please KEEP THEM ORDERED alphabetically like they are now.\n     putRoutingPolicyFactory(\"AND\", std::make_shared<RoutingPolicyFactories::AndPolicyFactory>());\n     putRoutingPolicyFactory(\"Content\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>());\n-    putRoutingPolicyFactory(\"MessageType\", std::make_shared<RoutingPolicyFactories::MessageTypePolicyFactory>());\n+    putRoutingPolicyFactory(\"Storage\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>()); // TODO: remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MjUwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                putRoutingPolicyFactory(\"Storage\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>()); // TODO: remove\n          \n          \n            \n                putRoutingPolicyFactory(\"Storage\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>()); // TODO Vespa 8: remove", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551352509", "createdAt": "2021-01-04T14:35:15Z", "author": {"login": "jonmv"}, "path": "documentapi/src/vespa/documentapi/messagebus/documentprotocol.cpp", "diffHunk": "@@ -32,14 +32,14 @@ DocumentProtocol::DocumentProtocol(std::shared_ptr<const DocumentTypeRepo> repo,\n     // When adding factories to this list, please KEEP THEM ORDERED alphabetically like they are now.\n     putRoutingPolicyFactory(\"AND\", std::make_shared<RoutingPolicyFactories::AndPolicyFactory>());\n     putRoutingPolicyFactory(\"Content\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>());\n-    putRoutingPolicyFactory(\"MessageType\", std::make_shared<RoutingPolicyFactories::MessageTypePolicyFactory>());\n+    putRoutingPolicyFactory(\"Storage\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>()); // TODO: remove", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwNjEwNA=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1Mjc4NA==", "bodyText": "Yes. Major version is a good idea, since this kills the \"Storage\" policy.", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551352784", "createdAt": "2021-01-04T14:35:43Z", "author": {"login": "jonmv"}, "path": "documentapi/src/vespa/documentapi/messagebus/documentprotocol.cpp", "diffHunk": "@@ -32,14 +32,14 @@ DocumentProtocol::DocumentProtocol(std::shared_ptr<const DocumentTypeRepo> repo,\n     // When adding factories to this list, please KEEP THEM ORDERED alphabetically like they are now.\n     putRoutingPolicyFactory(\"AND\", std::make_shared<RoutingPolicyFactories::AndPolicyFactory>());\n     putRoutingPolicyFactory(\"Content\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>());\n-    putRoutingPolicyFactory(\"MessageType\", std::make_shared<RoutingPolicyFactories::MessageTypePolicyFactory>());\n+    putRoutingPolicyFactory(\"Storage\", std::make_shared<RoutingPolicyFactories::ContentPolicyFactory>()); // TODO: remove", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMwNjEwNA=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2OTgyMTIzOnYy", "diffSide": "RIGHT", "path": "documentapi/src/tests/policies/policies_test.cpp", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDoxNDozMVrOINzIWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjowNTo1MlrOIN3TNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDEyMg==", "bodyText": "Should we retain at least one test per language that tests that Storage still works?", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551340122", "createdAt": "2021-01-04T14:14:31Z", "author": {"login": "vekterli"}, "path": "documentapi/src/tests/policies/policies_test.cpp", "diffHunk": "@@ -83,10 +83,10 @@ class Test : public vespalib::TestApp {\n     void requireThatExternPolicyWithUnknownPatternSelectsNone();\n     void requireThatExternPolicySelectsFromExternSlobrok();\n     void requireThatExternPolicyMergesOneReplyAsProtocol();\n-    void requireThatStoragePolicyWithIllegalParamIsAnErrorPolicy();\n-    void requireThatStoragePolicyIsRandomWithoutState();\n-    void requireThatStoragePolicyIsTargetedWithState();\n-    void requireThatStoragePolicyCombinesSystemAndSlobrokState();\n+    void requireThatContentPolicyWithIllegalParamIsAnErrorPolicy();\n+    void requireThatContentPolicyIsRandomWithoutState();\n+    void requireThatContentPolicyIsTargetedWithState();\n+    void requireThatContentPolicyCombinesSystemAndSlobrokState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MzEwMw==", "bodyText": "Yes.", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551353103", "createdAt": "2021-01-04T14:36:14Z", "author": {"login": "jonmv"}, "path": "documentapi/src/tests/policies/policies_test.cpp", "diffHunk": "@@ -83,10 +83,10 @@ class Test : public vespalib::TestApp {\n     void requireThatExternPolicyWithUnknownPatternSelectsNone();\n     void requireThatExternPolicySelectsFromExternSlobrok();\n     void requireThatExternPolicyMergesOneReplyAsProtocol();\n-    void requireThatStoragePolicyWithIllegalParamIsAnErrorPolicy();\n-    void requireThatStoragePolicyIsRandomWithoutState();\n-    void requireThatStoragePolicyIsTargetedWithState();\n-    void requireThatStoragePolicyCombinesSystemAndSlobrokState();\n+    void requireThatContentPolicyWithIllegalParamIsAnErrorPolicy();\n+    void requireThatContentPolicyIsRandomWithoutState();\n+    void requireThatContentPolicyIsTargetedWithState();\n+    void requireThatContentPolicyCombinesSystemAndSlobrokState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDEyMg=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1Njc4Mw==", "bodyText": "I think there weren't any tests that \"Content\" worked, before ... \ud83d\ude40", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551356783", "createdAt": "2021-01-04T14:42:34Z", "author": {"login": "jonmv"}, "path": "documentapi/src/tests/policies/policies_test.cpp", "diffHunk": "@@ -83,10 +83,10 @@ class Test : public vespalib::TestApp {\n     void requireThatExternPolicyWithUnknownPatternSelectsNone();\n     void requireThatExternPolicySelectsFromExternSlobrok();\n     void requireThatExternPolicyMergesOneReplyAsProtocol();\n-    void requireThatStoragePolicyWithIllegalParamIsAnErrorPolicy();\n-    void requireThatStoragePolicyIsRandomWithoutState();\n-    void requireThatStoragePolicyIsTargetedWithState();\n-    void requireThatStoragePolicyCombinesSystemAndSlobrokState();\n+    void requireThatContentPolicyWithIllegalParamIsAnErrorPolicy();\n+    void requireThatContentPolicyIsRandomWithoutState();\n+    void requireThatContentPolicyIsTargetedWithState();\n+    void requireThatContentPolicyCombinesSystemAndSlobrokState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDEyMg=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwNzQ5NA==", "bodyText": "So in Java-land there is no test of this setup \u2014 only a mock setup where some random string (\"storage\") is used as the policy name.\nIn C++ land there is a test which involves getting a policy from a semi-real mbus. The simplest thing to do would probably just be to verify that whatever policy was returned for \"Storage\" was the same as what was returned for \"Content\" \u2014 do you feel the call?", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551407494", "createdAt": "2021-01-04T16:04:13Z", "author": {"login": "jonmv"}, "path": "documentapi/src/tests/policies/policies_test.cpp", "diffHunk": "@@ -83,10 +83,10 @@ class Test : public vespalib::TestApp {\n     void requireThatExternPolicyWithUnknownPatternSelectsNone();\n     void requireThatExternPolicySelectsFromExternSlobrok();\n     void requireThatExternPolicyMergesOneReplyAsProtocol();\n-    void requireThatStoragePolicyWithIllegalParamIsAnErrorPolicy();\n-    void requireThatStoragePolicyIsRandomWithoutState();\n-    void requireThatStoragePolicyIsTargetedWithState();\n-    void requireThatStoragePolicyCombinesSystemAndSlobrokState();\n+    void requireThatContentPolicyWithIllegalParamIsAnErrorPolicy();\n+    void requireThatContentPolicyIsRandomWithoutState();\n+    void requireThatContentPolicyIsTargetedWithState();\n+    void requireThatContentPolicyCombinesSystemAndSlobrokState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDEyMg=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwODQzOA==", "bodyText": "It's really a trivial thing, though. Not absolutely convinced we need it.", "url": "https://github.com/vespa-engine/vespa/pull/15873#discussion_r551408438", "createdAt": "2021-01-04T16:05:52Z", "author": {"login": "jonmv"}, "path": "documentapi/src/tests/policies/policies_test.cpp", "diffHunk": "@@ -83,10 +83,10 @@ class Test : public vespalib::TestApp {\n     void requireThatExternPolicyWithUnknownPatternSelectsNone();\n     void requireThatExternPolicySelectsFromExternSlobrok();\n     void requireThatExternPolicyMergesOneReplyAsProtocol();\n-    void requireThatStoragePolicyWithIllegalParamIsAnErrorPolicy();\n-    void requireThatStoragePolicyIsRandomWithoutState();\n-    void requireThatStoragePolicyIsTargetedWithState();\n-    void requireThatStoragePolicyCombinesSystemAndSlobrokState();\n+    void requireThatContentPolicyWithIllegalParamIsAnErrorPolicy();\n+    void requireThatContentPolicyIsRandomWithoutState();\n+    void requireThatContentPolicyIsTargetedWithState();\n+    void requireThatContentPolicyCombinesSystemAndSlobrokState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM0MDEyMg=="}, "originalCommit": {"oid": "6eede0d2c93cd086a980d2bed5c5cc5d1eca9712"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2072, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}