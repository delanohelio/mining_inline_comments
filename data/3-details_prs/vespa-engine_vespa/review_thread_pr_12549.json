{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MjI2MjU3", "number": 12549, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjowMVrODnerrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowODoxN1rODnevXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIzNzU4OnYy", "diffSide": "RIGHT", "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjowMVrOF1gCwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1MjowNVrOF1h_oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0Mzg0MQ==", "bodyText": "Suppressing \"unused\" should be unnecessary when you have the Inject annotation.", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391643841", "createdAt": "2020-03-12T14:06:01Z", "author": {"login": "gjoranv"}, "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "diffHunk": "@@ -1,5 +1,32 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package ai.vespa.cloud;\n \n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+\n+/**\n+ * Provides information about the system in which this container is running.\n+ * This is available and can be injected when running in a cloud environment.\n+ *\n+ * @author bratseth\n+ */\n public class SystemInfo {\n+\n+    private final Zone zone;\n+\n+    /** Do not use */\n+    @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NTgwOQ==", "bodyText": "IntelliJ don't think so, but I guess it's clear enough with the annotation anyway.", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391675809", "createdAt": "2020-03-12T14:52:05Z", "author": {"login": "bratseth"}, "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "diffHunk": "@@ -1,5 +1,32 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package ai.vespa.cloud;\n \n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+\n+/**\n+ * Provides information about the system in which this container is running.\n+ * This is available and can be injected when running in a cloud environment.\n+ *\n+ * @author bratseth\n+ */\n public class SystemInfo {\n+\n+    private final Zone zone;\n+\n+    /** Do not use */\n+    @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0Mzg0MQ=="}, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzI0MTU5OnYy", "diffSide": "RIGHT", "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNzowMFrOF1gFUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1Mjo0NlrOF1iBgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDQ5Nw==", "bodyText": "I suggest to skip this comment. What does it mean?", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391644497", "createdAt": "2020-03-12T14:07:00Z", "author": {"login": "gjoranv"}, "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "diffHunk": "@@ -1,5 +1,32 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package ai.vespa.cloud;\n \n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+\n+/**\n+ * Provides information about the system in which this container is running.\n+ * This is available and can be injected when running in a cloud environment.\n+ *\n+ * @author bratseth\n+ */\n public class SystemInfo {\n+\n+    private final Zone zone;\n+\n+    /** Do not use */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NjI5MQ==", "bodyText": "It means to not use it ... I probably want to switch to another config later which will break any who use this method.", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391676291", "createdAt": "2020-03-12T14:52:46Z", "author": {"login": "bratseth"}, "path": "container-core/src/main/java/ai/vespa/cloud/SystemInfo.java", "diffHunk": "@@ -1,5 +1,32 @@\n // Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package ai.vespa.cloud;\n \n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+\n+/**\n+ * Provides information about the system in which this container is running.\n+ * This is available and can be injected when running in a cloud environment.\n+ *\n+ * @author bratseth\n+ */\n public class SystemInfo {\n+\n+    private final Zone zone;\n+\n+    /** Do not use */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDQ5Nw=="}, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzI0NzAxOnYy", "diffSide": "RIGHT", "path": "container-core/src/main/java/ai/vespa/cloud/Zone.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowODoxN1rOF1gIrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1MzoyNlrOF1iDhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM1Nw==", "bodyText": "Perhaps this should be e.g. \u00b4stringValue()\u00b4, and return a String that is less tempting to parse from toString.", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391645357", "createdAt": "2020-03-12T14:08:17Z", "author": {"login": "gjoranv"}, "path": "container-core/src/main/java/ai/vespa/cloud/Zone.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package ai.vespa.cloud;\n+\n+import java.util.Objects;\n+\n+/**\n+ * The zone in which a cloud deployment may be running.\n+ * A zone is a combination of an environment and a region.\n+ *\n+ * @author bratseth\n+ */\n+public class Zone {\n+\n+    private final Environment environment;\n+\n+    private final String region;\n+\n+    public Zone(Environment environment, String region) {\n+        this.environment = environment;\n+        this.region = region;\n+    }\n+\n+    public Environment environment() { return environment; }\n+    public String region() { return region; }\n+\n+    /** Returns the string environment.region */\n+    @Override\n+    public String toString() { return environment + \".\" + region; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NjgwNg==", "bodyText": "I would agree if this was further in but I think this is fine for an \"edge API\" class.", "url": "https://github.com/vespa-engine/vespa/pull/12549#discussion_r391676806", "createdAt": "2020-03-12T14:53:26Z", "author": {"login": "bratseth"}, "path": "container-core/src/main/java/ai/vespa/cloud/Zone.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package ai.vespa.cloud;\n+\n+import java.util.Objects;\n+\n+/**\n+ * The zone in which a cloud deployment may be running.\n+ * A zone is a combination of an environment and a region.\n+ *\n+ * @author bratseth\n+ */\n+public class Zone {\n+\n+    private final Environment environment;\n+\n+    private final String region;\n+\n+    public Zone(Environment environment, String region) {\n+        this.environment = environment;\n+        this.region = region;\n+    }\n+\n+    public Environment environment() { return environment; }\n+    public String region() { return region; }\n+\n+    /** Returns the string environment.region */\n+    @Override\n+    public String toString() { return environment + \".\" + region; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM1Nw=="}, "originalCommit": {"oid": "85e39e75026b09a936516c6234b438069b8b1859"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2256, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}