{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTMyODM3", "number": 14768, "title": "Use -Wnoexcept", "bodyText": "@toregge PR\nI get some very odd messages with this one. It would be good if you could take a look.\nIn file included from /home/balder/git/vespa/staging_vespalib/src/tests/metrics/simple_metrics_test.cpp:9:\n/home/balder/git/vespa/staging_vespalib/src/tests/metrics/mock_tick.h: In constructor \u2018vespalib::metrics::MockTick::MockTick(vespalib::metrics::TimeStamp)\u2019:\n/home/balder/git/vespa/staging_vespalib/src/tests/metrics/mock_tick.h:59:85: error: noexcept-expression evaluates to \u2018false\u2019 because of a call to \u2018constexpr std::chrono::duration<_Rep, _Period>::duration(const _Rep2&) [with _Rep2 = double; <template-parameter-2-2> = void; _Rep = double; _Period = std::ratio<1>]\u2019 [-Werror=noexcept]\n   59 |         : _first_value(first_value), _lock(), _cond(), _alive(true), _prev(), _next() {}\n      |                                                                                     ^\n/opt/rh/devtoolset-9/root/usr/include/c++/9/ext/new_allocator.h: In instantiation of \u2018void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = vespalib::metrics::MockTick; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; _Tp = vespalib::metrics::MockTick]\u2019:\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/alloc_traits.h:482:2:   required from \u2018static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = vespalib::metrics::MockTick; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; _Tp = vespalib::metrics::MockTick; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<vespalib::metrics::MockTick>]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr_base.h:548:39:   required from \u2018std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; _Tp = vespalib::metrics::MockTick; _Alloc = std::allocator<vespalib::metrics::MockTick>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr_base.h:679:16:   required from \u2018std::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = vespalib::metrics::MockTick; _Alloc = std::allocator<vespalib::metrics::MockTick>; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr_base.h:1344:71:   required from \u2018std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<vespalib::metrics::MockTick>; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; _Tp = vespalib::metrics::MockTick; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr.h:359:59:   required from \u2018std::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<vespalib::metrics::MockTick>; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}; _Tp = vespalib::metrics::MockTick]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr.h:701:14:   required from \u2018std::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = vespalib::metrics::MockTick; _Alloc = std::allocator<vespalib::metrics::MockTick>; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}]\u2019\n/opt/rh/devtoolset-9/root/usr/include/c++/9/bits/shared_ptr.h:717:39:   required from \u2018std::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = vespalib::metrics::MockTick; _Args = {std::chrono::duration<double, std::ratio<1, 1> >}]\u2019\n/home/balder/git/vespa/staging_vespalib/src/tests/metrics/simple_metrics_test.cpp:125:81:   required from here\n/home/balder/git/vespa/staging_vespalib/src/tests/metrics/mock_tick.h:58:14: error: but \u2018vespalib::metrics::MockTick::MockTick(vespalib::metrics::TimeStamp)\u2019 does not throw; perhaps it should be declared \u2018noexcept\u2019 [-Werror=noexcept]\n   58 |     explicit MockTick(TimeStamp first_value)", "createdAt": "2020-10-07T21:42:12Z", "url": "https://github.com/vespa-engine/vespa/pull/14768", "merged": true, "mergeCommit": {"oid": "3acc8a7761d2f16366fd3ad888d191e805d57abf"}, "closed": true, "closedAt": "2020-10-08T09:35:35Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQUBLsgH2gAyNDk5NTMyODM3OmQ0ZDMwZWI1ZGYxYjUxOTkzOWNhMTU3YzM3M2JhNTM2NTUwOGJjODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQeNnjgFqTUwNDU5NzQzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d4d30eb5df1b519939ca157c373ba5365508bc82", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/d4d30eb5df1b519939ca157c373ba5365508bc82", "committedDate": "2020-10-07T21:39:25Z", "message": "Use -Wnoexcept"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTM1NzMx", "url": "https://github.com/vespa-engine/vespa/pull/14768#pullrequestreview-504535731", "createdAt": "2020-10-08T08:19:43Z", "commit": {"oid": "d4d30eb5df1b519939ca157c373ba5365508bc82"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoxOTo0NFrOHeTKOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoxOTo0NFrOHeTKOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzMzI0Mg==", "bodyText": "This option is not supported on Clang.", "url": "https://github.com/vespa-engine/vespa/pull/14768#discussion_r501533242", "createdAt": "2020-10-08T08:19:44Z", "author": {"login": "toregge"}, "path": "build_settings.cmake", "diffHunk": "@@ -36,7 +36,7 @@ endif()\n # Warnings that are specific to C++ compilation\n # Note: this is not a union of C_WARN_OPTS, since CMAKE_CXX_FLAGS already includes CMAKE_C_FLAGS, which in turn includes C_WARN_OPTS transitively\n if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n-  set(CXX_SPECIFIC_WARN_OPTS \"-Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")\n+  set(CXX_SPECIFIC_WARN_OPTS \"-Wnoexcept -Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4d30eb5df1b519939ca157c373ba5365508bc82"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0029b01ea76687ff84db17eeba19446bf63742b4", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/0029b01ea76687ff84db17eeba19446bf63742b4", "committedDate": "2020-10-08T09:14:14Z", "message": "Add default constructor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTk3NDM3", "url": "https://github.com/vespa-engine/vespa/pull/14768#pullrequestreview-504597437", "createdAt": "2020-10-08T09:32:03Z", "commit": {"oid": "0029b01ea76687ff84db17eeba19446bf63742b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2477, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}