{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MjA0NDY4", "number": 12941, "title": "Add metrics for enqueued and processed coredumps ", "bodyText": "", "createdAt": "2020-04-16T08:39:51Z", "url": "https://github.com/vespa-engine/vespa/pull/12941", "merged": true, "mergeCommit": {"oid": "ae0146d910c77ad2c4e99fdbf73c24dc7afcc50c"}, "closed": true, "closedAt": "2020-04-17T08:04:50Z", "author": {"login": "olaaun"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYIj3mgH2gAyNDA0MjA0NDY4OjhiZWJlODg1MjZlNDQ5YmJjYTA1MTRkOGJkZmM4NzM5MGNiMjZkYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYLMrUAFqTM5NDU1MDAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4", "author": {"user": {"login": "olaaun", "name": "Ola Aunr\u00f8nning"}}, "url": "https://github.com/vespa-engine/vespa/commit/8bebe88526e449bbca0514d8bdfc87390cb26db4", "committedDate": "2020-04-16T08:38:41Z", "message": "Add metrics for enqueued and processed coredumps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDM0MTIz", "url": "https://github.com/vespa-engine/vespa/pull/12941#pullrequestreview-394434123", "createdAt": "2020-04-16T09:00:28Z", "commit": {"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowMDoyOFrOGGbjcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowOToxNlrOGGb5bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5NjA4Mg==", "bodyText": "I'd recommend using UnixPath in the test methods to easily create parent directories and/or files you need, the before method should only create directories are guaranteed to always exist, otherwise the tests might not catch that a certain directory is not created as expected.", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409396082", "createdAt": "2020-04-16T09:00:28Z", "author": {"login": "freva"}, "path": "node-admin/src/test/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandlerTest.java", "diffHunk": "@@ -206,13 +209,28 @@ public void process_single_coredump_test() throws IOException {\n         verify(coreCollector, never()).collect(any(), any());\n         verify(coredumpReporter, times(1)).reportCoredump(eq(\"id-123\"), eq(\"metadata\"));\n         assertFalse(Files.exists(coredumpDirectory));\n-        assertFolderContents(doneCoredumpsPath, \"id-123\");\n-        assertFolderContents(doneCoredumpsPath.resolve(\"id-123\"), \"metadata.json\", \"dump_bash.core.431.lz4\");\n+        assertFolderContents(doneCoredumpsPath.resolve(\"container-123\"), \"id-123\");\n+        assertFolderContents(doneCoredumpsPath.resolve(\"container-123\").resolve(\"id-123\"), \"metadata.json\", \"dump_bash.core.431.lz4\");\n+    }\n+\n+    @Test\n+    public void report_enqueued_and_processed_metrics() throws IOException {\n+        Files.createFile(crashPathInContainer.resolve(\"dump-1\"));\n+        Files.createFile(crashPathInContainer.resolve(\"dump-2\"));\n+        Files.createFile(doneCoredumpsPath.resolve(\"container-123\").resolve(\"dump-3\"));\n+\n+        coredumpHandler.updateMetrics(context, crashPathInContainer);\n+        List<DimensionMetrics> updatedMetrics = metrics.getMetricsByType(Metrics.DimensionType.PRETAGGED);\n+        assertEquals(1, updatedMetrics.size());\n+        Map<String, Number> values = updatedMetrics.get(0).getMetrics();\n+        assertEquals(2, values.get(\"coredumps.enqueued\").intValue());\n+        assertEquals(1, values.get(\"coredumps.processed\").intValue());\n     }\n \n     @Before\n     public void setup() throws IOException {\n-        Files.createDirectories(donePath);\n+        Files.createDirectories(donePath.resolve(\"container-123\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMDk5Nw==", "bodyText": "The processing directory may contain multiple files, at least the core file and metadata.json. You probably want to limit max-depth here, but then you'll be off by 1 if there is a coredump being processed right now...", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409400997", "createdAt": "2020-04-16T09:08:12Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandler.java", "diffHunk": "@@ -194,4 +204,47 @@ Path findCoredumpFileInProcessingDirectory(Path coredumpProccessingDirectory) {\n                 .orElseThrow(() -> new IllegalStateException(\n                         \"No coredump file found in processing directory \" + coredumpProccessingDirectory));\n     }\n+\n+    void updateMetrics(NodeAgentContext context, Path containerCrashPathOnHost) {\n+        Dimensions dimensions = generateDimensions(context);\n+\n+        // Unprocessed coredumps\n+        int numberOfUnprocessedCoredumps = FileFinder.files(containerCrashPathOnHost)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwMTcxMA==", "bodyText": "Same problem here, should be .directories() instead of .files() and limit max-depth to 1", "url": "https://github.com/vespa-engine/vespa/pull/12941#discussion_r409401710", "createdAt": "2020-04-16T09:09:16Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/maintenance/coredump/CoredumpHandler.java", "diffHunk": "@@ -194,4 +204,47 @@ Path findCoredumpFileInProcessingDirectory(Path coredumpProccessingDirectory) {\n                 .orElseThrow(() -> new IllegalStateException(\n                         \"No coredump file found in processing directory \" + coredumpProccessingDirectory));\n     }\n+\n+    void updateMetrics(NodeAgentContext context, Path containerCrashPathOnHost) {\n+        Dimensions dimensions = generateDimensions(context);\n+\n+        // Unprocessed coredumps\n+        int numberOfUnprocessedCoredumps = FileFinder.files(containerCrashPathOnHost)\n+                .match(nameStartsWith(\".\").negate())\n+                .list().size();\n+\n+        metrics.declareGauge(Metrics.APPLICATION_NODE, \"coredumps.enqueued\", dimensions, Metrics.DimensionType.PRETAGGED).sample(numberOfUnprocessedCoredumps);\n+\n+        // Processed coredumps\n+        Path processedCoredumpsPath = doneCoredumpsPath.resolve(context.containerName().asString());\n+        int numberOfProcessedCoredumps = FileFinder.files(processedCoredumpsPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bebe88526e449bbca0514d8bdfc87390cb26db4"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a93471efcdb1c764c46b5f030ad9b4a07ec47c2", "author": {"user": {"login": "olaaun", "name": "Ola Aunr\u00f8nning"}}, "url": "https://github.com/vespa-engine/vespa/commit/9a93471efcdb1c764c46b5f030ad9b4a07ec47c2", "committedDate": "2020-04-16T11:13:48Z", "message": "Filter hs_err files. Limit depth when counting coredumps. Create folders using UnixPath in tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTQzNjMy", "url": "https://github.com/vespa-engine/vespa/pull/12941#pullrequestreview-394543632", "createdAt": "2020-04-16T11:32:27Z", "commit": {"oid": "9a93471efcdb1c764c46b5f030ad9b4a07ec47c2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aec59aee348699b4253ed2650d0155215b8cdbc", "author": {"user": {"login": "olaaun", "name": "Ola Aunr\u00f8nning"}}, "url": "https://github.com/vespa-engine/vespa/commit/2aec59aee348699b4253ed2650d0155215b8cdbc", "committedDate": "2020-04-16T11:36:34Z", "message": "Update metrics before processing coredumps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTUwMDM3", "url": "https://github.com/vespa-engine/vespa/pull/12941#pullrequestreview-394550037", "createdAt": "2020-04-16T11:43:04Z", "commit": {"oid": "2aec59aee348699b4253ed2650d0155215b8cdbc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3424, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}