{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODY3MDcz", "number": 15586, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoxODowMlrOE_l6oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoxODowMlrOE_l6oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTE2OTYwOnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/application/DefaultClusterReindexingStatusClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoxODowMlrOH9YS7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMjoxODowMlrOH9YS7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEyMzI0NQ==", "bodyText": "This is always there, but can fix later.", "url": "https://github.com/vespa-engine/vespa/pull/15586#discussion_r534123245", "createdAt": "2020-12-02T12:18:02Z", "author": {"login": "jonmv"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/application/DefaultClusterReindexingStatusClient.java", "diffHunk": "@@ -105,10 +106,18 @@ private static ClusterReindexing toClusterReindexing(byte[] requestBody) throws\n         for (JsonNode statusJson : jsonNode.get(\"status\")) {\n             String type = statusJson.get(\"type\").textValue();\n             Instant startedMillis = Instant.ofEpochMilli(statusJson.get(\"startedMillis\").longValue());\n-            Instant endedMillis = Instant.ofEpochMilli(statusJson.get(\"endedMillis\").longValue());\n-            String progressToken = statusJson.get(\"progress\").textValue();\n-            ClusterReindexing.State state = ClusterReindexing.State.fromString(statusJson.get(\"state\").textValue());\n-            String message = statusJson.get(\"message\").textValue();\n+            Instant endedMillis = Optional.ofNullable(statusJson.get(\"endedMillis\"))\n+                    .map(json -> Instant.ofEpochMilli(json.longValue()))\n+                    .orElse(null);\n+            String progressToken = Optional.ofNullable(statusJson.get(\"progress\"))\n+                    .map(JsonNode::textValue)\n+                    .orElse(null);\n+            ClusterReindexing.State state = Optional.ofNullable(statusJson.get(\"state\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "124608092189eba3a27de7463a647191f236a1f6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 764, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}