{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzA4MDY4", "number": 14239, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjo0M1rOEfY6Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjo0M1rOEfY6Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzQ5NDQ2OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/tensor/direct_tensor_store.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMDoyMjo0M1rOHLoqww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMTo0MTo1NVrOHLrNlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk2MjY5MQ==", "bodyText": "I would prefer making the shared_ptr as TensorSP(std::move(tensor)) instead of using release().", "url": "https://github.com/vespa-engine/vespa/pull/14239#discussion_r481962691", "createdAt": "2020-09-02T10:22:43Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/vespa/searchlib/tensor/direct_tensor_store.cpp", "diffHunk": "@@ -31,8 +57,7 @@ EntryRef\n DirectTensorStore::store_tensor(std::unique_ptr<Tensor> tensor)\n {\n     assert(tensor);\n-    // TODO: Account for heap allocated memory\n-    return _concrete_store.addEntry(TensorSP(tensor.release()));\n+    return add_entry(TensorSP(tensor.release()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b3c7f8d19b779351dc6e9a7bd77f14f3fe8266a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAwNDM3NA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/14239#discussion_r482004374", "createdAt": "2020-09-02T11:41:55Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/tensor/direct_tensor_store.cpp", "diffHunk": "@@ -31,8 +57,7 @@ EntryRef\n DirectTensorStore::store_tensor(std::unique_ptr<Tensor> tensor)\n {\n     assert(tensor);\n-    // TODO: Account for heap allocated memory\n-    return _concrete_store.addEntry(TensorSP(tensor.release()));\n+    return add_entry(TensorSP(tensor.release()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk2MjY5MQ=="}, "originalCommit": {"oid": "5b3c7f8d19b779351dc6e9a7bd77f14f3fe8266a"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1432, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}