{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NDExMDMx", "number": 15463, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzowMTo1OVrOE9Uatg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzowMTo1OVrOE9Uatg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzMzMTEwOnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzowMTo1OVrOH58jTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODozMjo1OVrOH6QoCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUyMjk1Nw==", "bodyText": "What about total cost/additional line items?", "url": "https://github.com/vespa-engine/vespa/pull/15463#discussion_r530522957", "createdAt": "2020-11-25T17:01:59Z", "author": {"login": "olaaun"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java", "diffHunk": "@@ -101,10 +105,28 @@ private HttpResponse handleGET(HttpRequest request, Path path, String userId) {\n         if (path.matches(\"/billing/v1/tenant/{tenant}/billing\")) return getBilling(path.get(\"tenant\"), request.getProperty(\"until\"));\n         if (path.matches(\"/billing/v1/tenant/{tenant}/plan\")) return getPlan(path.get(\"tenant\"));\n         if (path.matches(\"/billing/v1/billing\")) return getBillingAllTenants(request.getProperty(\"until\"));\n+        if (path.matches(\"/billing/v1/invoice/export\")) return getAllInvoices();\n         if (path.matches(\"/billing/v1/invoice/tenant/{tenant}/line-item\")) return getLineItems(path.get(\"tenant\"));\n         return ErrorResponse.notFoundError(\"Nothing at \" + path);\n     }\n \n+    private HttpResponse getAllInvoices() {\n+        var invoices = billingController.getInvoices();\n+        var headers = new String[]{ \"ID\", \"Tenant\", \"From\", \"To\", \"CpuHours\", \"MemoryHours\", \"DiskHours\", \"Cpu\", \"Memory\", \"Disk\" };\n+        var rows = invoices.stream()\n+                .map(invoice -> {\n+                    return new Object[] {\n+                            invoice.id().value(), invoice.tenant().value(),\n+                            invoice.getStartTime().format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                            invoice.getEndTime().format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                            invoice.sumCpuHours(), invoice.sumMemoryHours(), invoice.sumDiskHours(),\n+                            invoice.sumCpuCost(), invoice.sumMemoryCost(), invoice.sumDiskCost()\n+                    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b07d83f7c04ce8774e91f8202fffdecf21adac1d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1MTg0OA==", "bodyText": "Not supported in the downstream process, yet. But I will add them here so that we know they're there at least.", "url": "https://github.com/vespa-engine/vespa/pull/15463#discussion_r530851848", "createdAt": "2020-11-26T08:32:59Z", "author": {"login": "oyving"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java", "diffHunk": "@@ -101,10 +105,28 @@ private HttpResponse handleGET(HttpRequest request, Path path, String userId) {\n         if (path.matches(\"/billing/v1/tenant/{tenant}/billing\")) return getBilling(path.get(\"tenant\"), request.getProperty(\"until\"));\n         if (path.matches(\"/billing/v1/tenant/{tenant}/plan\")) return getPlan(path.get(\"tenant\"));\n         if (path.matches(\"/billing/v1/billing\")) return getBillingAllTenants(request.getProperty(\"until\"));\n+        if (path.matches(\"/billing/v1/invoice/export\")) return getAllInvoices();\n         if (path.matches(\"/billing/v1/invoice/tenant/{tenant}/line-item\")) return getLineItems(path.get(\"tenant\"));\n         return ErrorResponse.notFoundError(\"Nothing at \" + path);\n     }\n \n+    private HttpResponse getAllInvoices() {\n+        var invoices = billingController.getInvoices();\n+        var headers = new String[]{ \"ID\", \"Tenant\", \"From\", \"To\", \"CpuHours\", \"MemoryHours\", \"DiskHours\", \"Cpu\", \"Memory\", \"Disk\" };\n+        var rows = invoices.stream()\n+                .map(invoice -> {\n+                    return new Object[] {\n+                            invoice.id().value(), invoice.tenant().value(),\n+                            invoice.getStartTime().format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                            invoice.getEndTime().format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                            invoice.sumCpuHours(), invoice.sumMemoryHours(), invoice.sumDiskHours(),\n+                            invoice.sumCpuCost(), invoice.sumMemoryCost(), invoice.sumDiskCost()\n+                    };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUyMjk1Nw=="}, "originalCommit": {"oid": "b07d83f7c04ce8774e91f8202fffdecf21adac1d"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 802, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}