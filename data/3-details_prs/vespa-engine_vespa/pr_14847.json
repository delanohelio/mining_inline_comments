{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyOTU0Mjc1", "number": 14847, "title": "Balder/monitor 2 mutex and cond 4", "bodyText": "@vekterli PR", "createdAt": "2020-10-13T23:02:29Z", "url": "https://github.com/vespa-engine/vespa/pull/14847", "merged": true, "mergeCommit": {"oid": "bb7814f7e0619a8b481969b407275b7b4c709385"}, "closed": true, "closedAt": "2020-10-14T11:06:27Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSOwRSAH2gAyNTAyOTU0Mjc1OjcxYzEwOTM5YjE5YmU4ZWExMTVjZGE5ZWNkZGNhZDc3NDliMmMyMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSbJAogH2gAyNTAyOTU0Mjc1OmUyNDNiZmEwMTdmYTc4ZGI3NTZlZGMzZTkwZWUxY2EwNjUzNTM0MGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71c10939b19be8ea115cda9ecddcad7749b2c20d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/71c10939b19be8ea115cda9ecddcad7749b2c20d", "committedDate": "2020-10-13T20:39:16Z", "message": "Use std::mutex/std::condition_variable over vespalib::Monitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "001bdf0053ba9cb02e20afcceb9d0f7ed63f1178", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/001bdf0053ba9cb02e20afcceb9d0f7ed63f1178", "committedDate": "2020-10-13T22:56:14Z", "message": "Use std::mutex and std:.condition_variable and GC some unused code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTM4OTkz", "url": "https://github.com/vespa-engine/vespa/pull/14847#pullrequestreview-508138993", "createdAt": "2020-10-14T09:01:39Z", "commit": {"oid": "001bdf0053ba9cb02e20afcceb9d0f7ed63f1178"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTowMTozOVrOHhJUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyNzoyOFrOHhKUSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUxNzY0Mw==", "bodyText": "I'm not sure if I understand how the original destruction logic here is meant to work. Seems like we'll just be very rapidly increasing _count as long as someone is waiting on the semaphore? Replace with the assertion mentioned in the comment instead? Unless I'm greatly misunderstanding something, which might be the case \ud83d\ude42", "url": "https://github.com/vespa-engine/vespa/pull/14847#discussion_r504517643", "createdAt": "2020-10-14T09:01:39Z", "author": {"login": "vekterli"}, "path": "document/src/vespa/document/util/queue.h", "diffHunk": "@@ -16,35 +16,32 @@ class Semaphore\n private:\n     int _count;\n     int _numWaiters;\n-    vespalib::Monitor _sync;\n-\n-    // assignment would be unsafe\n-    Semaphore& operator= (const Semaphore& other);\n+    std::mutex _lock;\n+    std::condition_variable _cond;\n public:\n-    // XXX is it really safe to just copy other._count here?\n-    Semaphore(const Semaphore& other) : _count(other._count), _numWaiters(0), _sync() {}\n-\n-    Semaphore(int count=0) : _count(count), _numWaiters(0), _sync() { }\n+    Semaphore(int count=0) : _count(count), _numWaiters(0), _lock() { }\n \n-    virtual ~Semaphore() {\n+    ~Semaphore() {\n         // XXX alternative: assert(_numWaiters == 0)\n         while (true) {\n-            vespalib::MonitorGuard guard(_sync);\n-            if (_numWaiters == 0) break;\n-            _count++;\n-            guard.signal();\n+            {\n+                std::lock_guard guard(_lock);\n+                if (_numWaiters == 0) break;\n+                _count++;\n+            }\n+            _cond.notify_one();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001bdf0053ba9cb02e20afcceb9d0f7ed63f1178"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyMTYxMQ==", "bodyText": "Extra indentation level intended?", "url": "https://github.com/vespa-engine/vespa/pull/14847#discussion_r504521611", "createdAt": "2020-10-14T09:07:37Z", "author": {"login": "vekterli"}, "path": "messagebus/src/vespa/messagebus/messenger.cpp", "diffHunk": "@@ -157,22 +156,23 @@ class DiscardRecurrentTasks : public SyncTask {\n namespace mbus {\n \n Messenger::Messenger(bool skip_request_thread, bool skip_reply_thread) :\n-    _monitor(),\n-    _pool(128000),\n-    _children(),\n-    _queue(),\n-    _closed(false),\n-    _skip_request_thread(skip_request_thread),\n-    _skip_reply_thread(skip_reply_thread)\n+        _lock(),\n+        _pool(128000),\n+        _children(),\n+        _queue(),\n+        _closed(false),\n+        _skip_request_thread(skip_request_thread),\n+        _skip_reply_thread(skip_reply_thread)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001bdf0053ba9cb02e20afcceb9d0f7ed63f1178"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNDA5MQ==", "bodyText": "Should this be == std::cv_status::timeout instead to have the same semantics as before?", "url": "https://github.com/vespa-engine/vespa/pull/14847#discussion_r504534091", "createdAt": "2020-10-14T09:27:28Z", "author": {"login": "vekterli"}, "path": "messagebus/src/vespa/messagebus/routablequeue.cpp", "diffHunk": "@@ -43,9 +44,9 @@ RoutableQueue::dequeue(duration timeout)\n {\n     steady_clock::time_point startTime = steady_clock::now();\n     duration left = timeout;\n-    vespalib::MonitorGuard guard(_monitor);\n+    std::unique_lock guard(_lock);\n     while (_queue.size() == 0 && left > duration::zero()) {\n-        if (!guard.wait(left) || _queue.size() > 0) {\n+        if ((_cond.wait_for(guard, left) == std::cv_status::no_timeout) || (_queue.size() > 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001bdf0053ba9cb02e20afcceb9d0f7ed63f1178"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73871d40a7c2731a0e2ada3b8df1500c86023420", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/73871d40a7c2731a0e2ada3b8df1500c86023420", "committedDate": "2020-10-14T11:03:56Z", "message": "Assert instead of silently fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd751971740a4a3b986fc73841a5c6283a0de6f3", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/bd751971740a4a3b986fc73841a5c6283a0de6f3", "committedDate": "2020-10-14T11:04:36Z", "message": "Reindent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e243bfa017fa78db756edc3e90ee1ca06535340e", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/e243bfa017fa78db756edc3e90ee1ca06535340e", "committedDate": "2020-10-14T11:05:09Z", "message": "Fix inverted logic"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2368, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}