{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDQ0ODAz", "number": 15394, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyMToyN1rOE7etmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjo0MToxNFrOE7vFDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODA0NjM1OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/reference/dummy_gid_to_lid_change_handler.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyMToyN1rOH3JuDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyMToyN1rOH3JuDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5Mjk3NA==", "bodyText": "Consider return {}; instead.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r527592974", "createdAt": "2020-11-20T10:21:27Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/reference/dummy_gid_to_lid_change_handler.cpp", "diffHunk": "@@ -18,9 +19,10 @@ DummyGidToLidChangeHandler::notifyRemove(IDestructorCallbackSP , GlobalId, Seria\n {\n }\n \n-void\n-DummyGidToLidChangeHandler::notifyRemoveDone(GlobalId, SerialNum)\n+std::unique_ptr<IPendingGidToLidChanges>\n+DummyGidToLidChangeHandler::grab_pending_changes()\n {\n+    return std::unique_ptr<IPendingGidToLidChanges>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f83ab6dbf0912cf53885b65991aa63d5a41fcc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODA2MDY1OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/reference/gid_to_lid_change_handler.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyNToxNlrOH3J2qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyNToxNlrOH3J2qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5NTE3Ng==", "bodyText": "Consider return {}; instead.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r527595176", "createdAt": "2020-11-20T10:25:16Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/reference/gid_to_lid_change_handler.cpp", "diffHunk": "@@ -96,6 +105,16 @@ GidToLidChangeHandler::notifyRemoveDone(GlobalId gid, SerialNum serialNum)\n     }\n }\n \n+std::unique_ptr<IPendingGidToLidChanges>\n+GidToLidChangeHandler::grab_pending_changes()\n+{\n+    lock_guard guard(_lock);\n+    if (_pending_changes.empty()) {\n+        return std::unique_ptr<IPendingGidToLidChanges>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f83ab6dbf0912cf53885b65991aa63d5a41fcc"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODA2ODg4OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/reference/i_gid_to_lid_change_handler.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyNzoxMlrOH3J7ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDoyNzoxMlrOH3J7ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU5NjM4OA==", "bodyText": "Consider updating comment to reflect that it is batched and applied later.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r527596388", "createdAt": "2020-11-20T10:27:12Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/reference/i_gid_to_lid_change_handler.h", "diffHunk": "@@ -38,9 +40,9 @@ class IGidToLidChangeHandler\n     /**\n      * Notify gid to lid mapping change.\n      */\n-    virtual void notifyPutDone(IDestructorCallbackSP context, GlobalId gid, uint32_t lid, SerialNum serialNum) = 0;\n+    virtual void notifyPut(IDestructorCallbackSP context, GlobalId gid, uint32_t lid, SerialNum serial_num) = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f83ab6dbf0912cf53885b65991aa63d5a41fcc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODA5NTQzOnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/test/mock_gid_to_lid_change_handler.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDozNDoxOVrOH3KLQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDozNDoxOVrOH3KLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwMDQ1MQ==", "bodyText": "Consider return {}; instead.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r527600451", "createdAt": "2020-11-20T10:34:19Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/test/mock_gid_to_lid_change_handler.h", "diffHunk": "@@ -42,9 +43,9 @@ class MockGidToLidChangeHandler : public IGidToLidChangeHandler {\n         _removes.emplace_back(docTypeName, keepNames);\n     }\n \n-    void notifyPutDone(IDestructorCallbackSP, document::GlobalId, uint32_t, SerialNum)  override { }\n+    void notifyPut(IDestructorCallbackSP, document::GlobalId, uint32_t, SerialNum)  override { }\n     void notifyRemove(IDestructorCallbackSP, document::GlobalId, SerialNum)  override { }\n-    void notifyRemoveDone(document::GlobalId, SerialNum)  override { }\n+    std::unique_ptr<IPendingGidToLidChanges> grab_pending_changes() override { return std::unique_ptr<IPendingGidToLidChanges>(); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67f83ab6dbf0912cf53885b65991aa63d5a41fcc"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDcyNzgwOnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/reference/pending_gid_to_lid_change.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjo0MToxNFrOH3jGJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjo0OTo0NFrOH3jRCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwODc0MA==", "bodyText": "Move _serial_num up before the gid to avoid unused bytes due to alignment and smaller object size.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r528008740", "createdAt": "2020-11-20T22:41:14Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/reference/pending_gid_to_lid_change.h", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/common/idestructorcallback.h>\n+#include <vespa/document/base/globalid.h>\n+#include <vespa/searchlib/common/serialnum.h>\n+\n+namespace proton {\n+\n+/*\n+ * Class for a gid to lid change awaiting a force commit.\n+ */\n+class PendingGidToLidChange\n+{\n+    using Context = std::shared_ptr<search::IDestructorCallback>;\n+    using GlobalId = document::GlobalId;\n+    using SerialNum = search::SerialNum;\n+\n+    Context   _context;\n+    GlobalId  _gid;\n+    uint32_t  _lid;\n+    SerialNum _serial_num;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1908604cb3e0d32120be68b22f0798d0db253c30"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAxMTUyOQ==", "bodyText": "Fixed.", "url": "https://github.com/vespa-engine/vespa/pull/15394#discussion_r528011529", "createdAt": "2020-11-20T22:49:44Z", "author": {"login": "toregge"}, "path": "searchcore/src/vespa/searchcore/proton/reference/pending_gid_to_lid_change.h", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/common/idestructorcallback.h>\n+#include <vespa/document/base/globalid.h>\n+#include <vespa/searchlib/common/serialnum.h>\n+\n+namespace proton {\n+\n+/*\n+ * Class for a gid to lid change awaiting a force commit.\n+ */\n+class PendingGidToLidChange\n+{\n+    using Context = std::shared_ptr<search::IDestructorCallback>;\n+    using GlobalId = document::GlobalId;\n+    using SerialNum = search::SerialNum;\n+\n+    Context   _context;\n+    GlobalId  _gid;\n+    uint32_t  _lid;\n+    SerialNum _serial_num;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwODc0MA=="}, "originalCommit": {"oid": "1908604cb3e0d32120be68b22f0798d0db253c30"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 881, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}