{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjU3MzI4", "number": 14849, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowNDoyOVrOEtc1GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowNDoyOVrOEtc1GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDkzNzIwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowNDoyOVrOHhPp4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjo1NDoyN1rOHhRh1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyMTUzOA==", "bodyText": "Could potentially just check the queue size for the thread's stripe, but getQueueSize() is a superset of that stripe so shouldn't matter in practice.", "url": "https://github.com/vespa-engine/vespa/pull/14849#discussion_r504621538", "createdAt": "2020-10-14T12:04:29Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -950,22 +949,15 @@ PersistenceThread::run(framework::ThreadHandle& thread)\n         if (lock.first) {\n             processLockedMessage(std::move(lock));\n         }\n-\n-        vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-        flushMonitorGuard.broadcast();\n     }\n     LOG(debug, \"Closing down persistence thread\");\n-    vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-    _closed = true;\n-    flushMonitorGuard.broadcast();\n }\n \n void\n PersistenceThread::flush()\n {\n-    vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-    if (!_closed) {\n-        flushMonitorGuard.wait();\n+    while (_env._fileStorHandler.getQueueSize() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24dd0d9445e072fe3de5c146b92f75605e140da9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1MjI0Ng==", "bodyText": "I will add an api for that after disk concept is removed.", "url": "https://github.com/vespa-engine/vespa/pull/14849#discussion_r504652246", "createdAt": "2020-10-14T12:54:27Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -950,22 +949,15 @@ PersistenceThread::run(framework::ThreadHandle& thread)\n         if (lock.first) {\n             processLockedMessage(std::move(lock));\n         }\n-\n-        vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-        flushMonitorGuard.broadcast();\n     }\n     LOG(debug, \"Closing down persistence thread\");\n-    vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-    _closed = true;\n-    flushMonitorGuard.broadcast();\n }\n \n void\n PersistenceThread::flush()\n {\n-    vespalib::MonitorGuard flushMonitorGuard(_flushMonitor);\n-    if (!_closed) {\n-        flushMonitorGuard.wait();\n+    while (_env._fileStorHandler.getQueueSize() != 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyMTUzOA=="}, "originalCommit": {"oid": "24dd0d9445e072fe3de5c146b92f75605e140da9"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1155, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}