{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNjg5Njg4", "number": 13570, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoyNzoxMVrOEFFBwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoyNzoxMVrOEFFBwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzYwNzA2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/dense/dense_xw_product_function.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoyNzoxMVrOGjGDIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxMjozMDozMVrOGjXVig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1MjQ0OQ==", "bodyText": "could probably typify more? (common_inner)", "url": "https://github.com/vespa-engine/vespa/pull/13570#discussion_r439452449", "createdAt": "2020-06-12T14:27:11Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/dense/dense_xw_product_function.cpp", "diffHunk": "@@ -92,7 +92,9 @@ eval::InterpretedFunction::op_function my_select2(CellType lct, CellType rct) {\n             return my_cblas_float_xw_product_op<common_inner>;\n         }\n     }\n-    return select_2<MyXWProductOp<common_inner>>(lct, rct);\n+    using Target = MyXWProductOp<common_inner>;\n+    using MyTypify = eval::TypifyCellType;\n+    return typify_invoke<2,MyTypify,Target>(lct, rct);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88fe841de3fd25b28392d1bb1b0d17f45e209f7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczNTY5MA==", "bodyText": "please use same strategy as suggested for matmul in\n#13571", "url": "https://github.com/vespa-engine/vespa/pull/13570#discussion_r439735690", "createdAt": "2020-06-13T12:30:31Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/dense/dense_xw_product_function.cpp", "diffHunk": "@@ -92,7 +92,9 @@ eval::InterpretedFunction::op_function my_select2(CellType lct, CellType rct) {\n             return my_cblas_float_xw_product_op<common_inner>;\n         }\n     }\n-    return select_2<MyXWProductOp<common_inner>>(lct, rct);\n+    using Target = MyXWProductOp<common_inner>;\n+    using MyTypify = eval::TypifyCellType;\n+    return typify_invoke<2,MyTypify,Target>(lct, rct);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1MjQ0OQ=="}, "originalCommit": {"oid": "b88fe841de3fd25b28392d1bb1b0d17f45e209f7"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1932, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}