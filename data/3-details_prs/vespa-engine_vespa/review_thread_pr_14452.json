{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzU1NTcy", "number": 14452, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwODo1ODoyMVrOElaD0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwODo1ODoyMVrOElaD0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjU5NzI5OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeCandidate.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwODo1ODoyMVrOHU5K1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOTo0NTo1NFrOHVID5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3MDIyOQ==", "bodyText": "I think this should be after the active node preference?", "url": "https://github.com/vespa-engine/vespa/pull/14452#discussion_r491670229", "createdAt": "2020-09-20T08:58:21Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeCandidate.java", "diffHunk": "@@ -57,14 +62,18 @@\n     /**\n      * Compare this candidate to another\n      *\n-     * @return negative if first priority is higher than second node\n+     * @return negative if this should be preferred over other\n      */\n     @Override\n     public int compareTo(NodeCandidate other) {\n         // First always pick nodes without violation above nodes with violations\n         if (!this.violatesSpares && other.violatesSpares) return -1;\n         if (!other.violatesSpares && this.violatesSpares) return 1;\n \n+        // Prefer node on exclusive switch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5ad821dcb6a96d5a5229d76d5975edefddd841"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNzE1Mw==", "bodyText": "It should? That means we'll never prefer a new node on a exclusive switch over an existing active node.", "url": "https://github.com/vespa-engine/vespa/pull/14452#discussion_r491837153", "createdAt": "2020-09-21T07:25:56Z", "author": {"login": "mpolden"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeCandidate.java", "diffHunk": "@@ -57,14 +62,18 @@\n     /**\n      * Compare this candidate to another\n      *\n-     * @return negative if first priority is higher than second node\n+     * @return negative if this should be preferred over other\n      */\n     @Override\n     public int compareTo(NodeCandidate other) {\n         // First always pick nodes without violation above nodes with violations\n         if (!this.violatesSpares && other.violatesSpares) return -1;\n         if (!other.violatesSpares && this.violatesSpares) return 1;\n \n+        // Prefer node on exclusive switch", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3MDIyOQ=="}, "originalCommit": {"oid": "dc5ad821dcb6a96d5a5229d76d5975edefddd841"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTc3MA==", "bodyText": "The way it is now we'll always (if this code gets its way) prefer new nodes to existing ones if the switch distribution is not optimal. I don't think we want that but instead want to do a controlled retire attempt node by node initiated by a maintainer?", "url": "https://github.com/vespa-engine/vespa/pull/14452#discussion_r491861770", "createdAt": "2020-09-21T08:14:52Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeCandidate.java", "diffHunk": "@@ -57,14 +62,18 @@\n     /**\n      * Compare this candidate to another\n      *\n-     * @return negative if first priority is higher than second node\n+     * @return negative if this should be preferred over other\n      */\n     @Override\n     public int compareTo(NodeCandidate other) {\n         // First always pick nodes without violation above nodes with violations\n         if (!this.violatesSpares && other.violatesSpares) return -1;\n         if (!other.violatesSpares && this.violatesSpares) return 1;\n \n+        // Prefer node on exclusive switch", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3MDIyOQ=="}, "originalCommit": {"oid": "dc5ad821dcb6a96d5a5229d76d5975edefddd841"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxNDIxMw==", "bodyText": "To spread out retiring in time? OK, I buy that.", "url": "https://github.com/vespa-engine/vespa/pull/14452#discussion_r491914213", "createdAt": "2020-09-21T09:45:54Z", "author": {"login": "mpolden"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodeCandidate.java", "diffHunk": "@@ -57,14 +62,18 @@\n     /**\n      * Compare this candidate to another\n      *\n-     * @return negative if first priority is higher than second node\n+     * @return negative if this should be preferred over other\n      */\n     @Override\n     public int compareTo(NodeCandidate other) {\n         // First always pick nodes without violation above nodes with violations\n         if (!this.violatesSpares && other.violatesSpares) return -1;\n         if (!other.violatesSpares && this.violatesSpares) return 1;\n \n+        // Prefer node on exclusive switch", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3MDIyOQ=="}, "originalCommit": {"oid": "dc5ad821dcb6a96d5a5229d76d5975edefddd841"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1354, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}