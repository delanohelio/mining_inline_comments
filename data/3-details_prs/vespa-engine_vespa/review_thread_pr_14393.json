{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NDgzMDMy", "number": 14393, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MjowNlrOEjDHjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MjowNlrOEjDHjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg2NzAwOnYy", "diffSide": "RIGHT", "path": "jdisc_http_service/src/test/java/com/yahoo/jdisc/http/server/jetty/HttpServerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MjowNlrOHRMSaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjo1NzoxMlrOHRzYnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ==", "bodyText": "I cannot find use of this class outside unit tests", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r487789161", "createdAt": "2020-09-14T09:52:06Z", "author": {"login": "bjorncs"}, "path": "jdisc_http_service/src/test/java/com/yahoo/jdisc/http/server/jetty/HttpServerTest.java", "diffHunk": "@@ -959,23 +1003,38 @@ public ContentChannel handleRequest(final Request request, final ResponseHandler\n     }\n \n     private static class ParameterPrinterRequestHandler extends AbstractRequestHandler {\n+\n         private static final CompletionHandler NULL_COMPLETION_HANDLER = null;\n \n         @Override\n-        public ContentChannel handleRequest(final Request request, final ResponseHandler handler) {\n-            final Map<String, List<String>> parameters =\n-                    new TreeMap<>(((HttpRequest)request).parameters());\n-            final ContentChannel responseContentChannel\n-                    = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n-            responseContentChannel.write(\n-                    ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n-                    NULL_COMPLETION_HANDLER);\n+        public ContentChannel handleRequest(Request request, ResponseHandler handler) {\n+            Map<String, List<String>> parameters = new TreeMap<>(((HttpRequest)request).parameters());\n+            ContentChannel responseContentChannel = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n+            responseContentChannel.write(ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n+                                         NULL_COMPLETION_HANDLER);\n \n             // Have the request content written back to the response.\n             return responseContentChannel;\n         }\n     }\n \n+    private static class RequestTypeHandler extends AbstractRequestHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6a4e2d89afc8f299506ec3c97c9b3613dd26950"}, "originalPosition": 506}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0NzI2OA==", "bodyText": "It's in a test class so I hope not :-)", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r488047268", "createdAt": "2020-09-14T16:00:47Z", "author": {"login": "bratseth"}, "path": "jdisc_http_service/src/test/java/com/yahoo/jdisc/http/server/jetty/HttpServerTest.java", "diffHunk": "@@ -959,23 +1003,38 @@ public ContentChannel handleRequest(final Request request, final ResponseHandler\n     }\n \n     private static class ParameterPrinterRequestHandler extends AbstractRequestHandler {\n+\n         private static final CompletionHandler NULL_COMPLETION_HANDLER = null;\n \n         @Override\n-        public ContentChannel handleRequest(final Request request, final ResponseHandler handler) {\n-            final Map<String, List<String>> parameters =\n-                    new TreeMap<>(((HttpRequest)request).parameters());\n-            final ContentChannel responseContentChannel\n-                    = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n-            responseContentChannel.write(\n-                    ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n-                    NULL_COMPLETION_HANDLER);\n+        public ContentChannel handleRequest(Request request, ResponseHandler handler) {\n+            Map<String, List<String>> parameters = new TreeMap<>(((HttpRequest)request).parameters());\n+            ContentChannel responseContentChannel = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n+            responseContentChannel.write(ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n+                                         NULL_COMPLETION_HANDLER);\n \n             // Have the request content written back to the response.\n             return responseContentChannel;\n         }\n     }\n \n+    private static class RequestTypeHandler extends AbstractRequestHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ=="}, "originalCommit": {"oid": "a6a4e2d89afc8f299506ec3c97c9b3613dd26950"}, "originalPosition": 506}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyOTcyNw==", "bodyText": "Oops, my fault", "url": "https://github.com/vespa-engine/vespa/pull/14393#discussion_r488429727", "createdAt": "2020-09-15T06:57:12Z", "author": {"login": "bjorncs"}, "path": "jdisc_http_service/src/test/java/com/yahoo/jdisc/http/server/jetty/HttpServerTest.java", "diffHunk": "@@ -959,23 +1003,38 @@ public ContentChannel handleRequest(final Request request, final ResponseHandler\n     }\n \n     private static class ParameterPrinterRequestHandler extends AbstractRequestHandler {\n+\n         private static final CompletionHandler NULL_COMPLETION_HANDLER = null;\n \n         @Override\n-        public ContentChannel handleRequest(final Request request, final ResponseHandler handler) {\n-            final Map<String, List<String>> parameters =\n-                    new TreeMap<>(((HttpRequest)request).parameters());\n-            final ContentChannel responseContentChannel\n-                    = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n-            responseContentChannel.write(\n-                    ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n-                    NULL_COMPLETION_HANDLER);\n+        public ContentChannel handleRequest(Request request, ResponseHandler handler) {\n+            Map<String, List<String>> parameters = new TreeMap<>(((HttpRequest)request).parameters());\n+            ContentChannel responseContentChannel = ResponseDispatch.newInstance(Response.Status.OK).connect(handler);\n+            responseContentChannel.write(ByteBuffer.wrap(parameters.toString().getBytes(StandardCharsets.UTF_8)),\n+                                         NULL_COMPLETION_HANDLER);\n \n             // Have the request content written back to the response.\n             return responseContentChannel;\n         }\n     }\n \n+    private static class RequestTypeHandler extends AbstractRequestHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTE2MQ=="}, "originalCommit": {"oid": "a6a4e2d89afc8f299506ec3c97c9b3613dd26950"}, "originalPosition": 506}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1338, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}