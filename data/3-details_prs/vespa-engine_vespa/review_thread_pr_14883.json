{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTg5MzQ2", "number": 14883, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxNTozM1rOEt5oWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0NToxMlrOEt72rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTY1NTkyOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxNTozM1rOHh-RYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDowOTo0NVrOHiAnbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NTMxMg==", "bodyText": "prefer using new types directly in the code to avoid confusion with old concepts", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505385312", "createdAt": "2020-10-15T09:15:33Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -35,6 +34,8 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n {\n public:\n     using init_fun_t = std::function<int(Runnable&)>;\n+    using LockGuard = std::unique_lock<std::mutex>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzcyNQ==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505423725", "createdAt": "2020-10-15T10:09:45Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -35,6 +34,8 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n {\n public:\n     using init_fun_t = std::function<int(Runnable&)>;\n+    using LockGuard = std::unique_lock<std::mutex>;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NTMxMg=="}, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTY1NzM1OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxNTo1NFrOHh-SPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMDoyN1rOHiApDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NTUzNA==", "bodyText": "same as above", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505385534", "createdAt": "2020-10-15T09:15:54Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -35,6 +34,8 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n {\n public:\n     using init_fun_t = std::function<int(Runnable&)>;\n+    using LockGuard = std::unique_lock<std::mutex>;\n+    using MonitorGuard = std::unique_lock<std::mutex>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyNDE0Mg==", "bodyText": "Fixed, MonitorGuard -> unique_lock", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505424142", "createdAt": "2020-10-15T10:10:27Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -35,6 +34,8 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n {\n public:\n     using init_fun_t = std::function<int(Runnable&)>;\n+    using LockGuard = std::unique_lock<std::mutex>;\n+    using MonitorGuard = std::unique_lock<std::mutex>;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NTUzNA=="}, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTY2OTAyOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxODozMVrOHh-ZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDowOToyMFrOHiAmjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NzM4OQ==", "bodyText": "Prefer calling this one '_lock' as the other places, since a monitor is both a lock and a condition_variable", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505387389", "createdAt": "2020-10-15T09:18:31Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -78,16 +80,20 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n \n     struct BlockedThread {\n         const uint32_t wait_task_count;\n-        Monitor monitor;\n+        mutable std::mutex monitor;\n+        mutable std::condition_variable cond;\n         bool blocked;\n         BlockedThread(uint32_t wait_task_count_in)\n-            : wait_task_count(wait_task_count_in), monitor(), blocked(true) {}\n+            : wait_task_count(wait_task_count_in), monitor(), cond(), blocked(true) {}\n         void wait() const;\n         void unblock();\n     };\n \n     std::unique_ptr<FastOS_ThreadPool>   _pool;\n-    Monitor                              _monitor;\n+    mutable std::mutex                   _monitor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzUwMg==", "bodyText": "Done, I did no renaming to make it easier to see the changes.", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505423502", "createdAt": "2020-10-15T10:09:20Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -78,16 +80,20 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n \n     struct BlockedThread {\n         const uint32_t wait_task_count;\n-        Monitor monitor;\n+        mutable std::mutex monitor;\n+        mutable std::condition_variable cond;\n         bool blocked;\n         BlockedThread(uint32_t wait_task_count_in)\n-            : wait_task_count(wait_task_count_in), monitor(), blocked(true) {}\n+            : wait_task_count(wait_task_count_in), monitor(), cond(), blocked(true) {}\n         void wait() const;\n         void unblock();\n     };\n \n     std::unique_ptr<FastOS_ThreadPool>   _pool;\n-    Monitor                              _monitor;\n+    mutable std::mutex                   _monitor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NzM4OQ=="}, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTY3MTUyOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxOTowOFrOHh-bDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDowODozOVrOHiAlBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4Nzc5MQ==", "bodyText": "prefer passing this in addition to the held lock in wakeup to avoid protected fields", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505387791", "createdAt": "2020-10-15T09:19:08Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -78,16 +80,20 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n \n     struct BlockedThread {\n         const uint32_t wait_task_count;\n-        Monitor monitor;\n+        mutable std::mutex monitor;\n+        mutable std::condition_variable cond;\n         bool blocked;\n         BlockedThread(uint32_t wait_task_count_in)\n-            : wait_task_count(wait_task_count_in), monitor(), blocked(true) {}\n+            : wait_task_count(wait_task_count_in), monitor(), cond(), blocked(true) {}\n         void wait() const;\n         void unblock();\n     };\n \n     std::unique_ptr<FastOS_ThreadPool>   _pool;\n-    Monitor                              _monitor;\n+    mutable std::mutex                   _monitor;\n+protected:\n+    std::condition_variable              _cond;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzEwOA==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505423108", "createdAt": "2020-10-15T10:08:39Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -78,16 +80,20 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n \n     struct BlockedThread {\n         const uint32_t wait_task_count;\n-        Monitor monitor;\n+        mutable std::mutex monitor;\n+        mutable std::condition_variable cond;\n         bool blocked;\n         BlockedThread(uint32_t wait_task_count_in)\n-            : wait_task_count(wait_task_count_in), monitor(), blocked(true) {}\n+            : wait_task_count(wait_task_count_in), monitor(), cond(), blocked(true) {}\n         void wait() const;\n         void unblock();\n     };\n \n     std::unique_ptr<FastOS_ThreadPool>   _pool;\n-    Monitor                              _monitor;\n+    mutable std::mutex                   _monitor;\n+protected:\n+    std::condition_variable              _cond;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4Nzc5MQ=="}, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTcwNzMzOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToyNzozMFrOHh-xZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDowODoyNlrOHiAkkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM5MzUwOQ==", "bodyText": "prefer 'lock' over 'monitor' (lock/cond/guard seems to match what is done elsewhere in our code)", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505393509", "createdAt": "2020-10-15T09:27:30Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -56,13 +57,14 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n     };\n \n     struct Worker {\n-        Monitor    monitor;\n+        std::mutex              monitor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMjk5Mw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505422993", "createdAt": "2020-10-15T10:08:26Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.h", "diffHunk": "@@ -56,13 +57,14 @@ class ThreadStackExecutorBase : public SyncableThreadExecutor,\n     };\n \n     struct Worker {\n-        Monitor    monitor;\n+        std::mutex              monitor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM5MzUwOQ=="}, "originalCommit": {"oid": "c6b7ba31a5b4f1df51c3454985d5b3833f42635c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjAxMDc2OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0MjoxN1rOHiBv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTowMjo0MlrOHiCbFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjI3OA==", "bodyText": "this should probably also be called guard", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505442278", "createdAt": "2020-10-15T10:42:17Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -72,22 +72,22 @@ ThreadStackExecutorBase::unblock_threads(const MonitorGuard &)\n void\n ThreadStackExecutorBase::assignTask(TaggedTask task, Worker &worker)\n {\n-    MonitorGuard monitor(worker.monitor);\n+    unique_lock monitor(worker.lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ1MzMzMw==", "bodyText": "#14896", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505453333", "createdAt": "2020-10-15T11:02:42Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -72,22 +72,22 @@ ThreadStackExecutorBase::unblock_threads(const MonitorGuard &)\n void\n ThreadStackExecutorBase::assignTask(TaggedTask task, Worker &worker)\n {\n-    MonitorGuard monitor(worker.monitor);\n+    unique_lock monitor(worker.lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjI3OA=="}, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjAxMzQ5OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0MzowMlrOHiBxrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTowMjoyOVrOHiCaqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjczMw==", "bodyText": "and this", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505442733", "createdAt": "2020-10-15T10:43:02Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -72,22 +72,22 @@ ThreadStackExecutorBase::unblock_threads(const MonitorGuard &)\n void\n ThreadStackExecutorBase::assignTask(TaggedTask task, Worker &worker)\n {\n-    MonitorGuard monitor(worker.monitor);\n+    unique_lock monitor(worker.lock);\n     worker.verify(/* idle: */ true);\n     worker.idle = false;\n     worker.task = std::move(task);\n-    monitor.signal();\n+    worker.cond.notify_one();\n }\n \n bool\n ThreadStackExecutorBase::obtainTask(Worker &worker)\n {\n     {\n-        MonitorGuard monitor(_monitor);\n+        unique_lock monitor(_lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ1MzIyNg==", "bodyText": "#14896", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505453226", "createdAt": "2020-10-15T11:02:29Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -72,22 +72,22 @@ ThreadStackExecutorBase::unblock_threads(const MonitorGuard &)\n void\n ThreadStackExecutorBase::assignTask(TaggedTask task, Worker &worker)\n {\n-    MonitorGuard monitor(worker.monitor);\n+    unique_lock monitor(worker.lock);\n     worker.verify(/* idle: */ true);\n     worker.idle = false;\n     worker.task = std::move(task);\n-    monitor.signal();\n+    worker.cond.notify_one();\n }\n \n bool\n ThreadStackExecutorBase::obtainTask(Worker &worker)\n {\n     {\n-        MonitorGuard monitor(_monitor);\n+        unique_lock monitor(_lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjczMw=="}, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjAxNDUyOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0MzoyNFrOHiByaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTowMjo1OFrOHiCbrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjkyMA==", "bodyText": "and this", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505442920", "createdAt": "2020-10-15T10:43:24Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -105,9 +105,9 @@ ThreadStackExecutorBase::obtainTask(Worker &worker)\n         _workers.push(&worker);\n     }\n     {\n-        MonitorGuard monitor(worker.monitor);\n+        unique_lock monitor(worker.lock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ1MzQ4NQ==", "bodyText": "#14896", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505453485", "createdAt": "2020-10-15T11:02:58Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -105,9 +105,9 @@ ThreadStackExecutorBase::obtainTask(Worker &worker)\n         _workers.push(&worker);\n     }\n     {\n-        MonitorGuard monitor(worker.monitor);\n+        unique_lock monitor(worker.lock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MjkyMA=="}, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjAyMDI5OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0NToxMlrOHiB2BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTowMzowOVrOHiCcFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0Mzg0NA==", "bodyText": "should also initialize _cond", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505443844", "createdAt": "2020-10-15T10:45:12Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -138,7 +138,7 @@ ThreadStackExecutorBase::ThreadStackExecutorBase(uint32_t stackSize,\n     : SyncableThreadExecutor(),\n       Runnable(),\n       _pool(std::make_unique<FastOS_ThreadPool>(stackSize)),\n-      _monitor(),\n+      _lock(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ1MzU4OA==", "bodyText": "#14896", "url": "https://github.com/vespa-engine/vespa/pull/14883#discussion_r505453588", "createdAt": "2020-10-15T11:03:09Z", "author": {"login": "baldersheim"}, "path": "vespalib/src/vespa/vespalib/util/threadstackexecutorbase.cpp", "diffHunk": "@@ -138,7 +138,7 @@ ThreadStackExecutorBase::ThreadStackExecutorBase(uint32_t stackSize,\n     : SyncableThreadExecutor(),\n       Runnable(),\n       _pool(std::make_unique<FastOS_ThreadPool>(stackSize)),\n-      _monitor(),\n+      _lock(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0Mzg0NA=="}, "originalCommit": {"oid": "88232fd29c093e6609bb6cbd6df1e0dd1f1d69f5"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1172, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}