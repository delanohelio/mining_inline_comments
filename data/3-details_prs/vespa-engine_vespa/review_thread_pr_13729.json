{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjkzMTA1", "number": 13729, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMTo1MToxOFrOEJnyPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMTo1MToxOFrOEJnyPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTI0NDc3OnYy", "diffSide": "RIGHT", "path": "logd/src/logd/proto_converter.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMTo1MToxOFrOGqNP5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo0MDoxNlrOGqvvKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkxMDQzOA==", "bodyText": "Consider moving the filtering to a helper function to make the code easier to read.", "url": "https://github.com/vespa-engine/vespa/pull/13729#discussion_r446910438", "createdAt": "2020-06-29T11:51:18Z", "author": {"login": "geirst"}, "path": "logd/src/logd/proto_converter.cpp", "diffHunk": "@@ -59,7 +60,20 @@ ProtoConverter::log_message_to_proto(const LogMessage& message, ProtoLogMessage&\n     proto.set_service(message.service());\n     proto.set_component(message.component());\n     proto.set_level(convert_level(message.level()));\n-    proto.set_payload(message.payload());\n+    const std::string &payload = message.payload();\n+    vespalib::Utf8Reader reader(payload.c_str(), payload.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c5ffc933056386947eb8d2a2cdff940a68dfc1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3NTQ5OQ==", "bodyText": "please take another look now", "url": "https://github.com/vespa-engine/vespa/pull/13729#discussion_r447475499", "createdAt": "2020-06-30T07:40:16Z", "author": {"login": "arnej27959"}, "path": "logd/src/logd/proto_converter.cpp", "diffHunk": "@@ -59,7 +60,20 @@ ProtoConverter::log_message_to_proto(const LogMessage& message, ProtoLogMessage&\n     proto.set_service(message.service());\n     proto.set_component(message.component());\n     proto.set_level(convert_level(message.level()));\n-    proto.set_payload(message.payload());\n+    const std::string &payload = message.payload();\n+    vespalib::Utf8Reader reader(payload.c_str(), payload.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkxMDQzOA=="}, "originalCommit": {"oid": "e0c5ffc933056386947eb8d2a2cdff940a68dfc1"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1914, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}