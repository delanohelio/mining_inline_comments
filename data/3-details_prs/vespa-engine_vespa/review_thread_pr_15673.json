{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTAzMDY1", "number": 15673, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozMzowMVrOFAx3qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozODo1NFrOFAyA8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzYxMzg0OnYy", "diffSide": "RIGHT", "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozMzowMVrOH_O7_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozOTowN1rOH_PJsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2NzA3MA==", "bodyText": "This seems too long. How about 30 seconds? Typically there will only be one config change and subsequent reconfigs on other nodes will effectively be no-ops.", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536067070", "createdAt": "2020-12-04T12:33:01Z", "author": {"login": "mpolden"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -26,6 +27,7 @@\n \n     private static final Logger log = java.util.logging.Logger.getLogger(Reconfigurer.class.getName());\n     private static final Duration sessionTimeout = Duration.ofSeconds(30);\n+    private static final Duration retryReconfigurationPeriod = Duration.ofMinutes(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3MDU3Ng==", "bodyText": "Yes, I have no idea how long this should be. But we can try 30 seconds", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536070576", "createdAt": "2020-12-04T12:39:07Z", "author": {"login": "hmusum"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -26,6 +27,7 @@\n \n     private static final Logger log = java.util.logging.Logger.getLogger(Reconfigurer.class.getName());\n     private static final Duration sessionTimeout = Duration.ofSeconds(30);\n+    private static final Duration retryReconfigurationPeriod = Duration.ofMinutes(5);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2NzA3MA=="}, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzYyNDUzOnYy", "diffSide": "RIGHT", "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozNTozNlrOH_PB0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzowMjo1MlrOH_P-lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2ODU2MQ==", "bodyText": "Consider making the sleeper configurable by having an instance of Consumer<Duration> in this class, then the unit test doesn't actually have to sleep.", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536068561", "createdAt": "2020-12-04T12:35:36Z", "author": {"login": "mpolden"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -86,7 +88,26 @@ private void reconfigure(ZookeeperServerConfig newConfig) {\n         joiningServers = joiningServers.isEmpty() ? null : joiningServers;\n         log.log(Level.INFO, \"Will reconfigure ZooKeeper cluster. Joining servers: \" + joiningServers +\n                             \", leaving servers: \" + leavingServers);\n-        zooKeeperReconfigure(connectionSpec(activeConfig), joiningServers, leavingServers);\n+\n+        String connectionSpec = connectionSpec(activeConfig);\n+        boolean reconfigured = false;\n+        Instant end = Instant.now().plus(retryReconfigurationPeriod);\n+        // Loop reconfiguring since we might need to wait until another reconfiguration is finished before we can succeed\n+        while ( ! reconfigured && Instant.now().isBefore(end)) {\n+            try {\n+                zooKeeperReconfigure(connectionSpec, joiningServers, leavingServers);\n+                reconfigured = true;\n+            } catch (KeeperException e) {\n+                if ( ! (e instanceof KeeperException.ReconfigInProgress))\n+                    throw new RuntimeException(e);\n+                log.log(Level.INFO, \"Will retry in 1 second\");\n+                try {\n+                    Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2OTY3NQ==", "bodyText": "Consider extracting a constant for the sleep period that is used both in the log message and sleep parameter.", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536069675", "createdAt": "2020-12-04T12:37:27Z", "author": {"login": "mpolden"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -86,7 +88,26 @@ private void reconfigure(ZookeeperServerConfig newConfig) {\n         joiningServers = joiningServers.isEmpty() ? null : joiningServers;\n         log.log(Level.INFO, \"Will reconfigure ZooKeeper cluster. Joining servers: \" + joiningServers +\n                             \", leaving servers: \" + leavingServers);\n-        zooKeeperReconfigure(connectionSpec(activeConfig), joiningServers, leavingServers);\n+\n+        String connectionSpec = connectionSpec(activeConfig);\n+        boolean reconfigured = false;\n+        Instant end = Instant.now().plus(retryReconfigurationPeriod);\n+        // Loop reconfiguring since we might need to wait until another reconfiguration is finished before we can succeed\n+        while ( ! reconfigured && Instant.now().isBefore(end)) {\n+            try {\n+                zooKeeperReconfigure(connectionSpec, joiningServers, leavingServers);\n+                reconfigured = true;\n+            } catch (KeeperException e) {\n+                if ( ! (e instanceof KeeperException.ReconfigInProgress))\n+                    throw new RuntimeException(e);\n+                log.log(Level.INFO, \"Will retry in 1 second\");\n+                try {\n+                    Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2ODU2MQ=="}, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4NDExOQ==", "bodyText": "Good suggestions, will implement", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536084119", "createdAt": "2020-12-04T13:02:52Z", "author": {"login": "hmusum"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -86,7 +88,26 @@ private void reconfigure(ZookeeperServerConfig newConfig) {\n         joiningServers = joiningServers.isEmpty() ? null : joiningServers;\n         log.log(Level.INFO, \"Will reconfigure ZooKeeper cluster. Joining servers: \" + joiningServers +\n                             \", leaving servers: \" + leavingServers);\n-        zooKeeperReconfigure(connectionSpec(activeConfig), joiningServers, leavingServers);\n+\n+        String connectionSpec = connectionSpec(activeConfig);\n+        boolean reconfigured = false;\n+        Instant end = Instant.now().plus(retryReconfigurationPeriod);\n+        // Loop reconfiguring since we might need to wait until another reconfiguration is finished before we can succeed\n+        while ( ! reconfigured && Instant.now().isBefore(end)) {\n+            try {\n+                zooKeeperReconfigure(connectionSpec, joiningServers, leavingServers);\n+                reconfigured = true;\n+            } catch (KeeperException e) {\n+                if ( ! (e instanceof KeeperException.ReconfigInProgress))\n+                    throw new RuntimeException(e);\n+                log.log(Level.INFO, \"Will retry in 1 second\");\n+                try {\n+                    Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2ODU2MQ=="}, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzYzNzYyOnYy", "diffSide": "RIGHT", "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozODo1NFrOH_PJPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozOTozMlrOH_PKxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3MDQ2MA==", "bodyText": "Consider logging how long reconfig took, so that we can fine-tune the timeouts.", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536070460", "createdAt": "2020-12-04T12:38:54Z", "author": {"login": "mpolden"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -86,7 +88,26 @@ private void reconfigure(ZookeeperServerConfig newConfig) {\n         joiningServers = joiningServers.isEmpty() ? null : joiningServers;\n         log.log(Level.INFO, \"Will reconfigure ZooKeeper cluster. Joining servers: \" + joiningServers +\n                             \", leaving servers: \" + leavingServers);\n-        zooKeeperReconfigure(connectionSpec(activeConfig), joiningServers, leavingServers);\n+\n+        String connectionSpec = connectionSpec(activeConfig);\n+        boolean reconfigured = false;\n+        Instant end = Instant.now().plus(retryReconfigurationPeriod);\n+        // Loop reconfiguring since we might need to wait until another reconfiguration is finished before we can succeed\n+        while ( ! reconfigured && Instant.now().isBefore(end)) {\n+            try {\n+                zooKeeperReconfigure(connectionSpec, joiningServers, leavingServers);\n+                reconfigured = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3MDg1Mw==", "bodyText": "Yes, good idea", "url": "https://github.com/vespa-engine/vespa/pull/15673#discussion_r536070853", "createdAt": "2020-12-04T12:39:32Z", "author": {"login": "hmusum"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/Reconfigurer.java", "diffHunk": "@@ -86,7 +88,26 @@ private void reconfigure(ZookeeperServerConfig newConfig) {\n         joiningServers = joiningServers.isEmpty() ? null : joiningServers;\n         log.log(Level.INFO, \"Will reconfigure ZooKeeper cluster. Joining servers: \" + joiningServers +\n                             \", leaving servers: \" + leavingServers);\n-        zooKeeperReconfigure(connectionSpec(activeConfig), joiningServers, leavingServers);\n+\n+        String connectionSpec = connectionSpec(activeConfig);\n+        boolean reconfigured = false;\n+        Instant end = Instant.now().plus(retryReconfigurationPeriod);\n+        // Loop reconfiguring since we might need to wait until another reconfiguration is finished before we can succeed\n+        while ( ! reconfigured && Instant.now().isBefore(end)) {\n+            try {\n+                zooKeeperReconfigure(connectionSpec, joiningServers, leavingServers);\n+                reconfigured = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3MDQ2MA=="}, "originalCommit": {"oid": "4e360658e832106ccff64f49d9f591841fe7a51d"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2129, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}