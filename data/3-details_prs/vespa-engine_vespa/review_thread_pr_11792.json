{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMDg2Njk2", "number": 11792, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMTo1Njo0NlrODYJp8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowNjoxNVrODYJy3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjUwNjEwOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMTo1Njo0NlrOFd1-Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjoxMzoxNFrOFd2Wew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgzNzM0Ng==", "bodyText": "Remove this import", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366837346", "createdAt": "2020-01-15T11:56:46Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "diffHunk": "@@ -20,6 +20,7 @@\n import com.yahoo.vespa.model.container.http.Binding;\n import org.w3c.dom.Element;\n \n+import javax.management.loading.MLetMBean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0MzUxNQ==", "bodyText": "Done - thanks", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366843515", "createdAt": "2020-01-15T12:13:14Z", "author": {"login": "bratseth"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "diffHunk": "@@ -20,6 +20,7 @@\n import com.yahoo.vespa.model.container.http.Binding;\n import org.w3c.dom.Element;\n \n+import javax.management.loading.MLetMBean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgzNzM0Ng=="}, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjUxNTU3OnYy", "diffSide": "RIGHT", "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowMDo1M1rOFd2EVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowMDo1M1rOFd2EVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgzODg3MQ==", "bodyText": "Consider using ExpectedException.", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366838871", "createdAt": "2020-01-15T12:00:53Z", "author": {"login": "bjorncs"}, "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "diffHunk": "@@ -1313,6 +1314,28 @@ public void testThatStandaloneSyntaxWorksOnHostedVespa() {\n         assertEquals(1, model.getContainerClusters().size());\n     }\n \n+    @Test\n+    public void testThatStandaloneSyntaxOnHostedVespaRequiresDefaultPort() {\n+        try {\n+            String services =\n+                    \"<?xml version='1.0' encoding='utf-8' ?>\" +\n+                    \"<container id='foo' version='1.0'>\" +\n+                    \"  <http>\" +\n+                    \"    <server id='server1' port='8095' />\" +\n+                    \"  </http>\" +\n+                    \"</container>\";\n+            VespaModelTester tester = new VespaModelTester();\n+            tester.addHosts(1);\n+            VespaModel model = tester.createModel(services, true);\n+            fail(\"Expected exception\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Success\n+            assertEquals(\"Illegal port 8095 in http server 'server1': Port must be set to \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjUyMjAyOnYy", "diffSide": "RIGHT", "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/ContainerModelBuilderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowMzoxN1rOFd2IGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowMzoxN1rOFd2IGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgzOTgzNA==", "bodyText": "Consider using ExpectedException.", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366839834", "createdAt": "2020-01-15T12:03:17Z", "author": {"login": "bjorncs"}, "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/ContainerModelBuilderTest.java", "diffHunk": "@@ -133,29 +134,35 @@ public void http_server_port_is_configurable_and_does_not_affect_other_ports() {\n     }\n \n     @Test\n-    public void fail_if_http_port_is_not_4080_in_hosted_vespa() throws Exception {\n-        String servicesXml =\n-                \"<services>\" +\n-                \"<admin version='3.0'>\" +\n-                \"    <nodes count='1'/>\" +\n-                \"</admin>\" +\n-                \"<container version='1.0'>\" +\n-                \"  <http>\" +\n-                \"    <server port='9000' id='foo' />\" +\n-                \"  </http>\" +\n-                nodesXml +\n-                \"</container>\" +\n-                \"</services>\";\n-        ApplicationPackage applicationPackage = new MockApplicationPackage.Builder().withServices(servicesXml).build();\n-        // Need to create VespaModel to make deploy properties have effect\n-        final TestLogger logger = new TestLogger();\n-        new VespaModel(new NullConfigModelRegistry(), new DeployState.Builder()\n-                .applicationPackage(applicationPackage)\n-                .deployLogger(logger)\n-                .properties(new TestProperties().setHostedVespa(true))\n-                .build());\n-        assertFalse(logger.msgs.isEmpty());\n-        assertThat(logger.msgs.get(0).getSecond(), containsString(String.format(\"You cannot set port to anything else than %d\", Container.BASEPORT)));\n+    public void fail_if_http_port_is_not_default_in_hosted_vespa() throws Exception {\n+        try {\n+            String servicesXml =\n+                    \"<services>\" +\n+                    \"<admin version='3.0'>\" +\n+                    \"    <nodes count='1'/>\" +\n+                    \"</admin>\" +\n+                    \"<container version='1.0'>\" +\n+                    \"  <http>\" +\n+                    \"    <server port='9000' id='foo' />\" +\n+                    \"  </http>\" +\n+                    nodesXml +\n+                    \"</container>\" +\n+                    \"</services>\";\n+            ApplicationPackage applicationPackage = new MockApplicationPackage.Builder().withServices(servicesXml).build();\n+            // Need to create VespaModel to make deploy properties have effect\n+            TestLogger logger = new TestLogger();\n+            new VespaModel(new NullConfigModelRegistry(), new DeployState.Builder()\n+                                                                  .applicationPackage(applicationPackage)\n+                                                                  .deployLogger(logger)\n+                                                                  .properties(new TestProperties().setHostedVespa(true))\n+                                                                  .build());\n+            fail(\"Expected exception\");\n+        }\n+        catch (IllegalArgumentException e) {\n+            // Success\n+            assertEquals(\"Illegal port 9000 in http server 'foo': Port must be set to \" + Defaults.getDefaults().vespaWebServicePort(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjUyODk0OnYy", "diffSide": "RIGHT", "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjowNjoxNVrOFd2MhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjoxNzozM1rOFd2dJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0MDk2NQ==", "bodyText": "Consider removing \"hosted Vespa\" from test name as this test does not use a hosted specific model.", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366840965", "createdAt": "2020-01-15T12:06:15Z", "author": {"login": "bjorncs"}, "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "diffHunk": "@@ -1313,6 +1314,28 @@ public void testThatStandaloneSyntaxWorksOnHostedVespa() {\n         assertEquals(1, model.getContainerClusters().size());\n     }\n \n+    @Test\n+    public void testThatStandaloneSyntaxOnHostedVespaRequiresDefaultPort() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0Mzk5MQ==", "bodyText": "True, but it is evaluated in an environment set up as hosted Vespa (otherwise the test would fail).", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366843991", "createdAt": "2020-01-15T12:14:23Z", "author": {"login": "bratseth"}, "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "diffHunk": "@@ -1313,6 +1314,28 @@ public void testThatStandaloneSyntaxWorksOnHostedVespa() {\n         assertEquals(1, model.getContainerClusters().size());\n     }\n \n+    @Test\n+    public void testThatStandaloneSyntaxOnHostedVespaRequiresDefaultPort() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0MDk2NQ=="}, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0NTIyMw==", "bodyText": "Nvm, I did not know that VespaModelTester defaults to creating a hosted specific model.", "url": "https://github.com/vespa-engine/vespa/pull/11792#discussion_r366845223", "createdAt": "2020-01-15T12:17:33Z", "author": {"login": "bjorncs"}, "path": "config-model/src/test/java/com/yahoo/config/model/provision/ModelProvisioningTest.java", "diffHunk": "@@ -1313,6 +1314,28 @@ public void testThatStandaloneSyntaxWorksOnHostedVespa() {\n         assertEquals(1, model.getContainerClusters().size());\n     }\n \n+    @Test\n+    public void testThatStandaloneSyntaxOnHostedVespaRequiresDefaultPort() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg0MDk2NQ=="}, "originalCommit": {"oid": "dc71d1f9878ec9b32a5432409a2a1f3beadab289"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2641, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}