{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTAzOTE2", "number": 11619, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozNTozMlrODVcwAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0Nzo1NlrODVc5YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE3NzMwOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozNTozMlrOFZrrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMTowNToxNFrOFZ1JUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NDMxMw==", "bodyText": "since strictness is handled externally, maybe this function should only be about hit ratios?", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362474313", "createdAt": "2020-01-02T13:35:32Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -308,6 +317,13 @@ IntermediateBlueprint::calculateState() const\n     return state;\n }\n \n+ExecuteInfo\n+IntermediateBlueprint::computeNext(const Blueprint & child, const ExecuteInfo & execInfo) const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyOTQ1Ng==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362629456", "createdAt": "2020-01-02T21:05:14Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -308,6 +317,13 @@ IntermediateBlueprint::calculateState() const\n     return state;\n }\n \n+ExecuteInfo\n+IntermediateBlueprint::computeNext(const Blueprint & child, const ExecuteInfo & execInfo) const", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NDMxMw=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE4MDkxOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozNzoyNVrOFZrtbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozNzoyNVrOFZrtbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NDg2Mg==", "bodyText": "minor consistency issue: asking if a non-existing child should inherit strictness. (not an actual issue in foreseeable future)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362474862", "createdAt": "2020-01-02T13:37:25Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -403,11 +419,13 @@ IntermediateBlueprint::visitMembers(vespalib::ObjectVisitor &visitor) const\n }\n \n void\n-IntermediateBlueprint::fetchPostings(bool strict)\n+IntermediateBlueprint::fetchPostings(const ExecuteInfo &execInfo)\n {\n+    ExecuteInfo childInfo = ExecuteInfo(execInfo.isStrict() && inheritStrict(0), execInfo.hitRate());\n     for (size_t i = 0; i < _children.size(); ++i) {\n-        bool strictChild = (strict && inheritStrict(i));\n-        _children[i]->fetchPostings(strictChild);\n+        Blueprint & child = *_children[i];\n+        child.fetchPostings(childInfo);\n+        childInfo = computeNext(child, ExecuteInfo(execInfo.isStrict() && inheritStrict(i+1), childInfo.hitRate()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE4NTA1OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozOTo0NVrOFZrv6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxNjoxMTowOVrOFZvC7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTQ5Nw==", "bodyText": "Maybe the FALSE one should actually be false.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362475497", "createdAt": "2020-01-02T13:39:45Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.cpp", "diffHunk": "@@ -0,0 +1,20 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"executeinfo.h\"\n+\n+namespace search::queryeval {\n+\n+const ExecuteInfo ExecuteInfo::TRUE(true, 1.0);\n+const ExecuteInfo ExecuteInfo::FALSE(true, 1.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUyOTUxOQ==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362529519", "createdAt": "2020-01-02T16:11:09Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.cpp", "diffHunk": "@@ -0,0 +1,20 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"executeinfo.h\"\n+\n+namespace search::queryeval {\n+\n+const ExecuteInfo ExecuteInfo::TRUE(true, 1.0);\n+const ExecuteInfo ExecuteInfo::FALSE(true, 1.0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTQ5Nw=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE5MzYxOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0Mzo1OVrOFZr0-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxMDoxMjozOFrOFZ9DAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njc5Mw==", "bodyText": "consider using 0.0 as default (is this only needed by tests?)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362476793", "createdAt": "2020-01-02T13:43:59Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUzMjI3MQ==", "bodyText": "Why 0.0 ? 1.0 sounds like a better(more conservative) value.\nOnly used in tests.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362532271", "createdAt": "2020-01-02T16:18:30Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njc5Mw=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1ODkxNQ==", "bodyText": "reason for comment: false is the default for bool and 0.0 is the default for double.\nI think it would be better to just remove it if possible.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362758915", "createdAt": "2020-01-03T10:12:38Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njc5Mw=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODE5NDU0OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0NDozM1rOFZr1lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxNjoxMTo0NFrOFZvD1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njk1MA==", "bodyText": "consider hiding this if the create function is preferred.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362476950", "createdAt": "2020-01-02T13:44:33Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }\n+    ExecuteInfo(bool strict, double hitRate_in)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUyOTc0OA==", "bodyText": "Hidden", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362529748", "createdAt": "2020-01-02T16:11:44Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }\n+    ExecuteInfo(bool strict, double hitRate_in)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njk1MA=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODIwMTI4OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0Nzo1NlrOFZr5cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxNjoxODo0OFrOFZvOLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NzkzOA==", "bodyText": "the blueprint already has a function called hit_ratio that does this conversion (estimate to ratio)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362477938", "createdAt": "2020-01-02T13:47:56Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.cpp", "diffHunk": "@@ -243,6 +243,11 @@ AndBlueprint::createIntermediateSearch(const MultiSearch::Children &subSearches,\n     return SearchIterator::UP(search);\n }\n \n+ExecuteInfo\n+AndBlueprint::computeNext(const Blueprint & child, const ExecuteInfo &execInfo) const {\n+    return ExecuteInfo(execInfo.isStrict(), (execInfo.hitRate()*child.getState().estimate().estHits)/get_docid_limit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjUzMjM5Nw==", "bodyText": "Done, using that.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362532397", "createdAt": "2020-01-02T16:18:48Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.cpp", "diffHunk": "@@ -243,6 +243,11 @@ AndBlueprint::createIntermediateSearch(const MultiSearch::Children &subSearches,\n     return SearchIterator::UP(search);\n }\n \n+ExecuteInfo\n+AndBlueprint::computeNext(const Blueprint & child, const ExecuteInfo &execInfo) const {\n+    return ExecuteInfo(execInfo.isStrict(), (execInfo.hitRate()*child.getState().estimate().estHits)/get_docid_limit());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NzkzOA=="}, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2716, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}