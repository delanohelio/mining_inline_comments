{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODE3MDIw", "number": 12084, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoxODo1M1rODdqaOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoxODo1M1rODdqaOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDMwMTM2OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index_base.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoxODo1M1rOFmZIog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzozMTowOFrOFmbDAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwMjAxOA==", "bodyText": "i found it easier to have level as \"int\" always.  that also allows _entry_level = -1 to signal no valid level.", "url": "https://github.com/vespa-engine/vespa/pull/12084#discussion_r375802018", "createdAt": "2020-02-06T12:18:53Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index_base.h", "diffHunk": "@@ -72,29 +78,47 @@ class HnswIndexBase : public NearestNeighborIndex {\n     using LinkArray = vespalib::Array<uint32_t>;\n \n     const DocVectorAccess& _vectors;\n+    RandomLevelGenerator& _level_generator;\n     Config _cfg;\n     NodeRefVector _node_refs;\n     NodeStore _nodes;\n     LinkStore _links;\n     uint32_t _entry_docid;\n+    uint32_t _entry_level;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96711356c10d90670bc71ccbfc82dd71d8b5b6c1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzMzM0Nw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/12084#discussion_r375833347", "createdAt": "2020-02-06T13:31:08Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index_base.h", "diffHunk": "@@ -72,29 +78,47 @@ class HnswIndexBase : public NearestNeighborIndex {\n     using LinkArray = vespalib::Array<uint32_t>;\n \n     const DocVectorAccess& _vectors;\n+    RandomLevelGenerator& _level_generator;\n     Config _cfg;\n     NodeRefVector _node_refs;\n     NodeStore _nodes;\n     LinkStore _links;\n     uint32_t _entry_docid;\n+    uint32_t _entry_level;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwMjAxOA=="}, "originalCommit": {"oid": "96711356c10d90670bc71ccbfc82dd71d8b5b6c1"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2511, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}