{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5ODkzMjg4", "number": 13704, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowMjo1NFrOEIv_gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowMjo1NFrOEIv_gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjEwMzcwOnYy", "diffSide": "RIGHT", "path": "staging_vespalib/src/vespa/vespalib/util/adaptive_sequenced_executor.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowMjo1NFrOGo5nZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowODo0OVrOGo54pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0MDE5Nw==", "bodyText": "this bypasses a lot of magic implemented in the 'interface'; is that intentional? if yes, move magic to the other subclass. If no, move magic to utility function that can be called from this one.", "url": "https://github.com/vespa-engine/vespa/pull/13704#discussion_r445540197", "createdAt": "2020-06-25T13:02:54Z", "author": {"login": "havardpe"}, "path": "staging_vespalib/src/vespa/vespalib/util/adaptive_sequenced_executor.cpp", "diffHunk": "@@ -256,6 +256,11 @@ AdaptiveSequencedExecutor::~AdaptiveSequencedExecutor()\n     assert(_worker_stack.empty());\n }\n \n+ISequencedTaskExecutor::ExecutorId\n+AdaptiveSequencedExecutor::getExecutorId(uint64_t component) const {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8004167e964b1eb12a67777ec9d70d57a5dbbfed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0NDYxMg==", "bodyText": "Yes, that is intentional. I planned to move the magic out of the interface in a separate PR. I can put it in this one if you prefer that.", "url": "https://github.com/vespa-engine/vespa/pull/13704#discussion_r445544612", "createdAt": "2020-06-25T13:08:49Z", "author": {"login": "baldersheim"}, "path": "staging_vespalib/src/vespa/vespalib/util/adaptive_sequenced_executor.cpp", "diffHunk": "@@ -256,6 +256,11 @@ AdaptiveSequencedExecutor::~AdaptiveSequencedExecutor()\n     assert(_worker_stack.empty());\n }\n \n+ISequencedTaskExecutor::ExecutorId\n+AdaptiveSequencedExecutor::getExecutorId(uint64_t component) const {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0MDE5Nw=="}, "originalCommit": {"oid": "8004167e964b1eb12a67777ec9d70d57a5dbbfed"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1886, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}