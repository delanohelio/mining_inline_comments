{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MDM1NzA5", "number": 12324, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxNDozN1rODiXNEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxNDozN1rODiXNEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzU4MzU0OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/server/threading_service_config.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToxNDozN1rOFtkN4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzo1Nzo0N1rOFtqMeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMzYxOQ==", "bodyText": "Please add a description on why we do the capping. Otherwise ok.", "url": "https://github.com/vespa-engine/vespa/pull/12324#discussion_r383323619", "createdAt": "2020-02-24T15:14:37Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/server/threading_service_config.cpp", "diffHunk": "@@ -22,7 +22,7 @@ namespace {\n uint32_t\n calculateIndexingThreads(uint32_t cfgIndexingThreads, double concurrency, const HwInfo::Cpu &cpuInfo)\n {\n-    double scaledCores = cpuInfo.cores() * concurrency;\n+    double scaledCores = std::min(12.0, cpuInfo.cores() * concurrency);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1f88c1b2e948598edd083dd200fdcfad8c86c26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQyMTU2MA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/12324#discussion_r383421560", "createdAt": "2020-02-24T17:57:47Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/server/threading_service_config.cpp", "diffHunk": "@@ -22,7 +22,7 @@ namespace {\n uint32_t\n calculateIndexingThreads(uint32_t cfgIndexingThreads, double concurrency, const HwInfo::Cpu &cpuInfo)\n {\n-    double scaledCores = cpuInfo.cores() * concurrency;\n+    double scaledCores = std::min(12.0, cpuInfo.cores() * concurrency);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMyMzYxOQ=="}, "originalCommit": {"oid": "b1f88c1b2e948598edd083dd200fdcfad8c86c26"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2348, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}