{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTk4MzIw", "number": 13378, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMToxMVrOD_r_AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMTo1NVrOD_sAKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTA3NTIxOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMToxMVrOGafrgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxMzo1NVrOGagRTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNTIwMg==", "bodyText": "Consider reducing verbosity of function name. get_phrase_splitter() should be sufficient.", "url": "https://github.com/vespa-engine/vespa/pull/13378#discussion_r430435202", "createdAt": "2020-05-26T14:01:11Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35345d4574228e201942bceaebd348e4518a4107"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NDg3Nw==", "bodyText": "That would cause the result of get_phrase_splitter() to be passed as argument to phrase splitter constructor.", "url": "https://github.com/vespa-engine/vespa/pull/13378#discussion_r430444877", "createdAt": "2020-05-26T14:13:55Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNTIwMg=="}, "originalCommit": {"oid": "35345d4574228e201942bceaebd348e4518a4107"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTA3ODE5OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMTo1NVrOGafthg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxOTo0OFrOGagiRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNTcxOA==", "bodyText": "Consider reducing verbosity of function name. get_computer_shared_state() should be sufficient.", "url": "https://github.com/vespa-engine/vespa/pull/13378#discussion_r430435718", "createdAt": "2020-05-26T14:01:55Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }\n+    const fieldmatch::ComputerSharedState &get_field_match_computer_shared_state() const { return _cmp_shared_state; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35345d4574228e201942bceaebd348e4518a4107"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0OTIyMw==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/13378#discussion_r430449223", "createdAt": "2020-05-26T14:19:48Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }\n+    const fieldmatch::ComputerSharedState &get_field_match_computer_shared_state() const { return _cmp_shared_state; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNTcxOA=="}, "originalCommit": {"oid": "35345d4574228e201942bceaebd348e4518a4107"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1525, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}