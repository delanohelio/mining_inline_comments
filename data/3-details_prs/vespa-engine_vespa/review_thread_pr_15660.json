{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDIwMjk4", "number": 15660, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxMjo0MVrOFAuggw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxMjo0MVrOFAuggw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzA2MzA3OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/attribute/integerbase.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxMjo0MVrOH_KBjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTowMTozM1rOH_L40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4NjU3Mw==", "bodyText": "consider checking ec to avoid returning unspecified results.", "url": "https://github.com/vespa-engine/vespa/pull/15660#discussion_r535986573", "createdAt": "2020-12-04T10:12:41Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/attribute/integerbase.cpp", "diffHunk": "@@ -49,18 +59,19 @@ uint32_t IntegerAttribute::get(DocId doc, WeightedConstChar * v, uint32_t sz) co\n }\n const char *\n IntegerAttribute::getString(DocId doc, char * s, size_t sz) const {\n-    largeint_t v = getInt(doc);\n-    snprintf(s, sz, \"%\" PRId64, v);\n+    if (sz > 1) {\n+        largeint_t v = getInt(doc);\n+        auto res = std::to_chars(s, s + sz - 1, v, 10);\n+        res.ptr[0] = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "275ac97c80b786958962c77bdd6cc731bce87872"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxNzEwNQ==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15660#discussion_r536017105", "createdAt": "2020-12-04T11:01:33Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/attribute/integerbase.cpp", "diffHunk": "@@ -49,18 +59,19 @@ uint32_t IntegerAttribute::get(DocId doc, WeightedConstChar * v, uint32_t sz) co\n }\n const char *\n IntegerAttribute::getString(DocId doc, char * s, size_t sz) const {\n-    largeint_t v = getInt(doc);\n-    snprintf(s, sz, \"%\" PRId64, v);\n+    if (sz > 1) {\n+        largeint_t v = getInt(doc);\n+        auto res = std::to_chars(s, s + sz - 1, v, 10);\n+        res.ptr[0] = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4NjU3Mw=="}, "originalCommit": {"oid": "275ac97c80b786958962c77bdd6cc731bce87872"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2121, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}