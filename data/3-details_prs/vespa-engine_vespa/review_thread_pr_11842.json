{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjA4Njcy", "number": 11842, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozMDoxMVrODZHhIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozMDo0N1rODZHhfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjY0MTYwOnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateRetriever.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozMDoxMVrOFfVU7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOToyMzo0M1rOFfX13w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5OTU5Nw==", "bodyText": "We've had cases where the version of private key and cert were incompatible. Would it make sense to validate that the cert is indeed issued using the private key?", "url": "https://github.com/vespa-engine/vespa/pull/11842#discussion_r368399597", "createdAt": "2020-01-20T07:30:11Z", "author": {"login": "tokle"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateRetriever.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.config.server.tenant;\n+\n+import com.yahoo.config.model.api.EndpointCertificateMetadata;\n+import com.yahoo.config.model.api.EndpointCertificateSecrets;\n+import com.yahoo.container.jdisc.secretstore.SecretStore;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Used to retrieve actual endpoint certificate/key from secret store.\n+ *\n+ * @author andreer\n+ */\n+public class EndpointCertificateRetriever {\n+\n+    private final SecretStore secretStore;\n+\n+    public EndpointCertificateRetriever(SecretStore secretStore) {\n+        this.secretStore = secretStore;\n+    }\n+\n+    public Optional<EndpointCertificateSecrets> readEndpointCertificateSecrets(EndpointCertificateMetadata metadata) {\n+        return Optional.of(readFromSecretStore(metadata));\n+    }\n+\n+    private EndpointCertificateSecrets readFromSecretStore(EndpointCertificateMetadata endpointCertificateMetadata) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e66e0ba2ccd2b973a13eff8645af66073eba31ed"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ0MDc5OQ==", "bodyText": "Yes, I think I have a ticket on this too. Might as well add it now.", "url": "https://github.com/vespa-engine/vespa/pull/11842#discussion_r368440799", "createdAt": "2020-01-20T09:23:43Z", "author": {"login": "andreer"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateRetriever.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.config.server.tenant;\n+\n+import com.yahoo.config.model.api.EndpointCertificateMetadata;\n+import com.yahoo.config.model.api.EndpointCertificateSecrets;\n+import com.yahoo.container.jdisc.secretstore.SecretStore;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Used to retrieve actual endpoint certificate/key from secret store.\n+ *\n+ * @author andreer\n+ */\n+public class EndpointCertificateRetriever {\n+\n+    private final SecretStore secretStore;\n+\n+    public EndpointCertificateRetriever(SecretStore secretStore) {\n+        this.secretStore = secretStore;\n+    }\n+\n+    public Optional<EndpointCertificateSecrets> readEndpointCertificateSecrets(EndpointCertificateMetadata metadata) {\n+        return Optional.of(readFromSecretStore(metadata));\n+    }\n+\n+    private EndpointCertificateSecrets readFromSecretStore(EndpointCertificateMetadata endpointCertificateMetadata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5OTU5Nw=="}, "originalCommit": {"oid": "e66e0ba2ccd2b973a13eff8645af66073eba31ed"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjY0MjU0OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateMetadataSerializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzozMDo0N1rOFfVVfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOToyNTo0NFrOFfX53A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5OTc0Mw==", "bodyText": "Won't this violate the principle of \"serialized on version N+1 can be read by version N\"?", "url": "https://github.com/vespa-engine/vespa/pull/11842#discussion_r368399743", "createdAt": "2020-01-20T07:30:47Z", "author": {"login": "tokle"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateMetadataSerializer.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.yahoo.vespa.config.server.tenant;\n+\n+import com.yahoo.config.model.api.EndpointCertificateMetadata;\n+import com.yahoo.slime.Cursor;\n+import com.yahoo.slime.Inspector;\n+import com.yahoo.slime.Slime;\n+\n+/**\n+ * (de)serializes endpoint certificate metadata\n+ *\n+ * @author andreer\n+ */\n+public class EndpointCertificateMetadataSerializer {\n+\n+    // WARNING: Since there are multiple servers in a ZooKeeper cluster and they upgrade one by one\n+    //          (and rewrite all nodes on startup), changes to the serialized format must be made\n+    //          such that what is serialized on version N+1 can be read by version N:\n+    //          - ADDING FIELDS: Always ok\n+    //          - REMOVING FIELDS: Stop reading the field first. Stop writing it on a later version.\n+    //          - CHANGING THE FORMAT OF A FIELD: Don't do it bro.\n+\n+    private final static String keyNameField = \"keyName\";\n+    private final static String certNameField = \"certName\";\n+    private final static String versionField = \"version\";\n+\n+    public static void toSlime(EndpointCertificateMetadata metadata, Cursor object) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e66e0ba2ccd2b973a13eff8645af66073eba31ed"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ0MTgyMA==", "bodyText": "The configserver can already read this format: https://github.com/vespa-engine/vespa/blob/master/configserver/src/test/java/com/yahoo/vespa/config/server/tenant/TlsSecretsKeysTest.java#L49-L58\nWe only start writing it now.", "url": "https://github.com/vespa-engine/vespa/pull/11842#discussion_r368441820", "createdAt": "2020-01-20T09:25:44Z", "author": {"login": "andreer"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/tenant/EndpointCertificateMetadataSerializer.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.yahoo.vespa.config.server.tenant;\n+\n+import com.yahoo.config.model.api.EndpointCertificateMetadata;\n+import com.yahoo.slime.Cursor;\n+import com.yahoo.slime.Inspector;\n+import com.yahoo.slime.Slime;\n+\n+/**\n+ * (de)serializes endpoint certificate metadata\n+ *\n+ * @author andreer\n+ */\n+public class EndpointCertificateMetadataSerializer {\n+\n+    // WARNING: Since there are multiple servers in a ZooKeeper cluster and they upgrade one by one\n+    //          (and rewrite all nodes on startup), changes to the serialized format must be made\n+    //          such that what is serialized on version N+1 can be read by version N:\n+    //          - ADDING FIELDS: Always ok\n+    //          - REMOVING FIELDS: Stop reading the field first. Stop writing it on a later version.\n+    //          - CHANGING THE FORMAT OF A FIELD: Don't do it bro.\n+\n+    private final static String keyNameField = \"keyName\";\n+    private final static String certNameField = \"certName\";\n+    private final static String versionField = \"version\";\n+\n+    public static void toSlime(EndpointCertificateMetadata metadata, Cursor object) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5OTc0Mw=="}, "originalCommit": {"oid": "e66e0ba2ccd2b973a13eff8645af66073eba31ed"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2579, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}