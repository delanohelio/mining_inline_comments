{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NjMxMTA3", "number": 14965, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDozMDowMlrOEvtUJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTozNToxNVrOEvu0xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDYwOTY1OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/filestorage/filestormanager.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDozMDowMlrOHk1mMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDo1MTo0N1rOHk2aNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4ODkxMw==", "bodyText": "How do we ensure the _persistenceHandlers.size() < _metrics->disks[0]->threads.size() invariant holds when an \"arbitrary\" number of handlers can be registered?", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508388913", "createdAt": "2020-10-20T10:30:02Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/filestorage/filestormanager.cpp", "diffHunk": "@@ -127,6 +130,14 @@ FileStorManager::createRegisteredHandler(ServiceLayerComponent & component)\n                                                  *_bucketOwnershipNotifier, *_metrics->disks[0]->threads[index]));\n     return *_persistenceHandlers.back();\n }\n+\n+PersistenceHandler &\n+FileStorManager::getThreadLocalHandler() {\n+    if (_G_threadLocalHandler == nullptr) {\n+        _G_threadLocalHandler = & createRegisteredHandler(_component);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30a86bc16d6582a6fa9cb34a225e49869613d48c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwMjIyOA==", "bodyText": "The assumption is that this code will only be invoked from network threads and response threads.\nThose are accounted for in the last commit.", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508402228", "createdAt": "2020-10-20T10:51:47Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/filestorage/filestormanager.cpp", "diffHunk": "@@ -127,6 +130,14 @@ FileStorManager::createRegisteredHandler(ServiceLayerComponent & component)\n                                                  *_bucketOwnershipNotifier, *_metrics->disks[0]->threads[index]));\n     return *_persistenceHandlers.back();\n }\n+\n+PersistenceHandler &\n+FileStorManager::getThreadLocalHandler() {\n+    if (_G_threadLocalHandler == nullptr) {\n+        _G_threadLocalHandler = & createRegisteredHandler(_component);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4ODkxMw=="}, "originalCommit": {"oid": "30a86bc16d6582a6fa9cb34a225e49869613d48c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDg1NzAwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/config/stor-communicationmanager.def", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTozNToxNVrOHk367w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTo0OToyMlrOHk4Zow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNjk5MQ==", "bodyText": "Typo: devolpers -> developers", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508426991", "createdAt": "2020-10-20T11:35:15Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/config/stor-communicationmanager.def", "diffHunk": "@@ -68,6 +68,8 @@ rpc.num_network_threads int default=1\n ## The bucket id associated with a message is used to select the RPC target.\n ## This ensures the same RPC target is used for all messages to the same bucket to the same node,\n ## and the RPC target itself handles sequencing of these messages.\n+## NB !! It is vital that this number is kept in sync with stor-filestor:num_network_threads.\n+## Only skilled vespa core devolpers should touch this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b2863244a34f1ceebc90e28678ff9000ad82c15"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzNDg1MQ==", "bodyText": "Fixed in #14970", "url": "https://github.com/vespa-engine/vespa/pull/14965#discussion_r508434851", "createdAt": "2020-10-20T11:49:22Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/config/stor-communicationmanager.def", "diffHunk": "@@ -68,6 +68,8 @@ rpc.num_network_threads int default=1\n ## The bucket id associated with a message is used to select the RPC target.\n ## This ensures the same RPC target is used for all messages to the same bucket to the same node,\n ## and the RPC target itself handles sequencing of these messages.\n+## NB !! It is vital that this number is kept in sync with stor-filestor:num_network_threads.\n+## Only skilled vespa core devolpers should touch this.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNjk5MQ=="}, "originalCommit": {"oid": "6b2863244a34f1ceebc90e28678ff9000ad82c15"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1098, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}