{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Mjc4MzQw", "number": 13942, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTowOTowM1rOEZYq0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDowMDo0M1rOEZZ1HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDU0MDMzOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/component/SystemBindingPattern.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTowOTowM1rOHCKk1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTo0NDo0MFrOHCPo6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzMjQ3MA==", "bodyText": "This seems to be inconsistent with fromHttpPath, unless the paths are semantically different?", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472032470", "createdAt": "2020-08-18T09:09:03Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/component/SystemBindingPattern.java", "diffHunk": "@@ -13,6 +13,7 @@\n \n     public static SystemBindingPattern fromHttpPath(String path) { return new SystemBindingPattern(\"http\", \"*\", null, path);}\n     public static SystemBindingPattern fromPattern(String binding) { return new SystemBindingPattern(binding);}\n+    public static SystemBindingPattern fromPortAndPath(String port, String path) { return new SystemBindingPattern(\"http\", \"*\", port, path); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9953983bbc43ebfbf62b353aa043543c7b3ef5c9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExNTQzNQ==", "bodyText": "I agree, let's rename it to fromHttpPortAndPath.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472115435", "createdAt": "2020-08-18T11:44:40Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/component/SystemBindingPattern.java", "diffHunk": "@@ -13,6 +13,7 @@\n \n     public static SystemBindingPattern fromHttpPath(String path) { return new SystemBindingPattern(\"http\", \"*\", null, path);}\n     public static SystemBindingPattern fromPattern(String binding) { return new SystemBindingPattern(binding);}\n+    public static SystemBindingPattern fromPortAndPath(String port, String path) { return new SystemBindingPattern(\"http\", \"*\", port, path); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzMjQ3MA=="}, "originalCommit": {"oid": "9953983bbc43ebfbf62b353aa043543c7b3ef5c9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDYzODE3OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTozNToxMFrOHCLhJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoxODo1OFrOHCQxeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ==", "bodyText": "Suggest to use a more descriptive name. This is not to configure the AccessControl object, but add a lot of stuff to the given Http. Perhaps this should be done in the Http object itself?", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472047911", "createdAt": "2020-08-18T09:35:10Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExNTE5MQ==", "bodyText": "Perhaps rename it to something like configureAccessControlFilterChains?\nI would like to contain the logic for setting up filter chains and bindings inside the AccessControl class.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472115191", "createdAt": "2020-08-18T11:44:21Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}, "originalCommit": {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExOTExNA==", "bodyText": "Isn't configureAccessControl enough? I'm ok with with either. I agree with containing the logic.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472119114", "createdAt": "2020-08-18T11:51:26Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}, "originalCommit": {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDAxMA==", "bodyText": "Renamed to configureHttpFilterChains.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472134010", "createdAt": "2020-08-18T12:18:58Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA0NzkxMQ=="}, "originalCommit": {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDY2NTQ2OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0Mjo0MlrOHCLyUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0Mjo0MlrOHCLyUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1MjMwNQ==", "bodyText": "Adding this to a given object is less modular than doing it on the outside, or having a configure/use/addAccessControl in Http.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472052305", "createdAt": "2020-08-18T09:42:42Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -84,69 +85,75 @@ public AccessControl build() {\n     public final boolean writeEnabled;\n     private final Set<BindingPattern> excludedBindings;\n     private final Collection<Handler<?>> handlers;\n-    private final Collection<Servlet> servlets;\n \n     private AccessControl(String domain,\n                           boolean writeEnabled,\n                           boolean readEnabled,\n                           Set<BindingPattern> excludedBindings,\n-                          Collection<Servlet> servlets,\n                           Collection<Handler<?>> handlers) {\n         this.domain = domain;\n         this.readEnabled = readEnabled;\n         this.writeEnabled = writeEnabled;\n         this.excludedBindings = Collections.unmodifiableSet(excludedBindings);\n         this.handlers = handlers;\n-        this.servlets = servlets;\n     }\n \n-    public List<FilterBinding> getBindings() {\n-        return Stream.concat(getHandlerBindings(), getServletBindings())\n-                .collect(Collectors.toCollection(ArrayList::new));\n+    public void configure(Http http) {\n+        http.setAccessControl(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca57e9c2cf1b72701f3ed2d454f0d59c7f56a63a"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDY4MzY3OnYy", "diffSide": "RIGHT", "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/AccessControlTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo0Nzo1MVrOHCL9nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoxODoyOVrOHCQwdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1NTE5OQ==", "bodyText": "Why not add the embedding container element in createModelAndGetHttp?", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472055199", "createdAt": "2020-08-18T09:47:51Z", "author": {"login": "gjoranv"}, "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/AccessControlTest.java", "diffHunk": "@@ -44,15 +42,14 @@\n \n     @Test\n     public void access_control_filter_chains_are_set_up() {\n-        Element clusterElem = DomBuilderTest.parse(\n+        Http http = createModelAndGetHttp(\n+                \"<container version='1.0'>\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0479417622405fbf20290748be8dc5c3513334a5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzMzc1MA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472133750", "createdAt": "2020-08-18T12:18:29Z", "author": {"login": "bjorncs"}, "path": "config-model/src/test/java/com/yahoo/vespa/model/container/xml/AccessControlTest.java", "diffHunk": "@@ -44,15 +42,14 @@\n \n     @Test\n     public void access_control_filter_chains_are_set_up() {\n-        Element clusterElem = DomBuilderTest.parse(\n+        Http http = createModelAndGetHttp(\n+                \"<container version='1.0'>\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1NTE5OQ=="}, "originalCommit": {"oid": "0479417622405fbf20290748be8dc5c3513334a5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDcxMTk5OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwOTo1NTozMFrOHCMO8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoxMTowOFrOHCQhHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1OTYzNA==", "bodyText": "Perhaps we could start this method by creating a map from binding->id?", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472059634", "createdAt": "2020-08-18T09:55:30Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -137,6 +139,22 @@ private void addAccessControlExcludedChain(Http http) {\n         }\n     }\n \n+    // Remove bindings from access control chain that have binding pattern as a different filter chain\n+    private void removeDuplicateBindingsFromAccessControlChain(Http http) {\n+        Set<FilterBinding> duplicateBindings = new HashSet<>();\n+        for (FilterBinding binding : http.getBindings()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b8fd053051bd0f462ca7d400f0407c7961969f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEyOTgyMw==", "bodyText": "There are multiple strategies to solve this specific problem, but I don't think creating a mapping will be significantly better.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472129823", "createdAt": "2020-08-18T12:11:08Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -137,6 +139,22 @@ private void addAccessControlExcludedChain(Http http) {\n         }\n     }\n \n+    // Remove bindings from access control chain that have binding pattern as a different filter chain\n+    private void removeDuplicateBindingsFromAccessControlChain(Http http) {\n+        Set<FilterBinding> duplicateBindings = new HashSet<>();\n+        for (FilterBinding binding : http.getBindings()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA1OTYzNA=="}, "originalCommit": {"oid": "40b8fd053051bd0f462ca7d400f0407c7961969f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDczMDUyOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDowMDo0M1rOHCMauw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDowMDo0M1rOHCMauw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA2MjY1MQ==", "bodyText": "BTW, is filterId() the correct name? Sounds like it should be chainId.", "url": "https://github.com/vespa-engine/vespa/pull/13942#discussion_r472062651", "createdAt": "2020-08-18T10:00:43Z", "author": {"login": "gjoranv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -137,6 +139,22 @@ private void addAccessControlExcludedChain(Http http) {\n         }\n     }\n \n+    // Remove bindings from access control chain that have binding pattern as a different filter chain\n+    private void removeDuplicateBindingsFromAccessControlChain(Http http) {\n+        Set<FilterBinding> duplicateBindings = new HashSet<>();\n+        for (FilterBinding binding : http.getBindings()) {\n+            if (binding.filterId().toId().equals(ACCESS_CONTROL_CHAIN_ID)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40b8fd053051bd0f462ca7d400f0407c7961969f"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1821, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}