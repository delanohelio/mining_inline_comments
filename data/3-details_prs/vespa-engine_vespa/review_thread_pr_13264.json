{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDk5NTEy", "number": 13264, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0MjowNVrOD82wCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1Mjo1MVrOD84XvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTM4MTg1OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/fef/termmatchdatamerger.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0MjowNVrOGWDMwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzozNDoxN1rOGWFGJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDI3Mw==", "bodyText": "Please extend searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp with new test cases for the new functionality that is added.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425774273", "createdAt": "2020-05-15T12:42:05Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/fef/termmatchdatamerger.cpp", "diffHunk": "@@ -41,31 +41,52 @@ TermMatchDataMerger::merge(uint32_t docid,\n {\n     _scratch.clear();\n     bool wasMatch = false;\n+    bool needs_normal_features = out.needs_normal_features();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgwNTM1MA==", "bodyText": "term match data merger test has been extended.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425805350", "createdAt": "2020-05-15T13:34:17Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/fef/termmatchdatamerger.cpp", "diffHunk": "@@ -41,31 +41,52 @@ TermMatchDataMerger::merge(uint32_t docid,\n {\n     _scratch.clear();\n     bool wasMatch = false;\n+    bool needs_normal_features = out.needs_normal_features();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDI3Mw=="}, "originalCommit": {"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTYyNDU2OnYy", "diffSide": "RIGHT", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo0NzoyN1rOGWFleA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo0NzoyN1rOGWFleA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxMzM2OA==", "bodyText": "Typo? dected -> detected", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425813368", "createdAt": "2020-05-15T13:47:27Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(2u, out.getNumOccs());\n+    EXPECT_EQ(30u, out.getFieldLength());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features_with_dected_duplicate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTYzMzY1OnYy", "diffSide": "RIGHT", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo0OTo0N1rOGWFrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo0OTo0N1rOGWFrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNDgyOA==", "bodyText": "Consider using different value than a so that max of field lengths are tested.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425814828", "createdAt": "2020-05-15T13:49:47Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTY0NzMzOnYy", "diffSide": "RIGHT", "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1Mjo1MVrOGWFzdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1Mjo1MVrOGWFzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjk1MQ==", "bodyText": "These 3 tests share basically the same setup, from line 250 to 260. The only difference is which bools are set on out. I suggest putting the shared code into a test class with an init() function (or similar) that takes the two bools and instantiate the merger.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425816951", "createdAt": "2020-05-15T13:52:51Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1565, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}