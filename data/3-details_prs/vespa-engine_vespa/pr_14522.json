{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMzU3NjE3", "number": 14522, "title": "Store vespa version in ZooKeeper as well", "bodyText": "Use version in ZooKeeper if configserver-distribute-application-package is true,\nfallback to version in file. Will always write to ZooKeeper so this can be\nthe only source in the future.\nThis means that if configserver-distribute-application-package is true\nand version data is found in ZooKeeper, redeployment of appplication packages\nwill only be done on one config server.", "createdAt": "2020-09-24T10:49:14Z", "url": "https://github.com/vespa-engine/vespa/pull/14522", "merged": true, "mergeCommit": {"oid": "46ef6aebe55da0499b4691de13a79d973fc69417"}, "closed": true, "closedAt": "2020-09-24T13:17:34Z", "author": {"login": "hmusum"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL-4pBgH2gAyNDkyMzU3NjE3OmE0YzRkOTA3NWZhMWE2YmQ5ZDIzY2FjM2M3MmFjNTcwNzE0OTNmY2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMASn0AFqTQ5NTUxMzI3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf", "author": {"user": {"login": "hmusum", "name": "Harald Musum"}}, "url": "https://github.com/vespa-engine/vespa/commit/a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf", "committedDate": "2020-09-24T10:46:23Z", "message": "Store vespa version in ZooKeeper as well\n\nUse version in ZooKeeper if configserver-distribute-application-package is true,\nfallback to version in file. Will always write to ZooKeeper so this can be\nthe only source in the future.\n\nThis means that if configserver-distribute-application-package is true\nand version data is found in ZooKeeper, redeployment of appplication packages\nwill only be done on one config server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NDk3NTkx", "url": "https://github.com/vespa-engine/vespa/pull/14522#pullrequestreview-495497591", "createdAt": "2020-09-24T12:03:56Z", "commit": {"oid": "a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowMzo1NlrOHXXLpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowNTowMlrOHXXOKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTEwOA==", "bodyText": "Remove or log", "url": "https://github.com/vespa-engine/vespa/pull/14522#discussion_r494259108", "createdAt": "2020-09-24T12:03:56Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/version/VersionState.java", "diffHunk": "@@ -5,45 +5,78 @@\n import com.yahoo.cloud.config.ConfigserverConfig;\n import com.yahoo.component.Version;\n import com.yahoo.io.IOUtils;\n+import com.yahoo.path.Path;\n+import com.yahoo.text.Utf8;\n+import com.yahoo.vespa.curator.Curator;\n import com.yahoo.vespa.defaults.Defaults;\n+import com.yahoo.vespa.flags.BooleanFlag;\n+import com.yahoo.vespa.flags.FlagSource;\n+import com.yahoo.vespa.flags.Flags;\n \n import java.io.File;\n import java.io.FileReader;\n import java.io.FileWriter;\n import java.io.IOException;\n+import java.util.Optional;\n \n /**\n- * Contains version information for this configserver.\n+ *\n+ * Contains version information for this configserver. Stored both in file system and in ZooKeeper (uses\n+ * data in ZooKeeper if distributeApplicationPackage and data found in ZooKeeper)\n  *\n  * @author Ulf Lilleengen\n  */\n public class VersionState {\n \n+    static final Path versionPath = Path.fromString(\"/config/v2/vespa_version\");\n+\n     private final File versionFile;\n+    private final Curator curator;\n+    private final BooleanFlag distributeApplicationPackage;\n \n     @Inject\n-    public VersionState(ConfigserverConfig config) {\n-        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"));\n+    public VersionState(ConfigserverConfig config, Curator curator, FlagSource flagsource) {\n+        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"), curator, flagsource);\n     }\n \n-    public VersionState(File versionFile) {\n+    public VersionState(File versionFile, Curator curator, FlagSource flagSource) {\n         this.versionFile = versionFile;\n+        this.curator = curator;\n+        this.distributeApplicationPackage = Flags.CONFIGSERVER_DISTRIBUTE_APPLICATION_PACKAGE.bindTo(flagSource);\n     }\n \n     public boolean isUpgraded() {\n+        System.out.println(\"current version: \" + currentVersion() + \", stored version: \" + storedVersion());\n         return currentVersion().compareTo(storedVersion()) > 0;\n     }\n \n     public void saveNewVersion() {\n+        saveNewVersion(currentVersion().toFullString());\n+    }\n+\n+    public void saveNewVersion(String vespaVersion) {\n+        curator.set(versionPath, Utf8.toBytes(vespaVersion));\n         try (FileWriter writer = new FileWriter(versionFile)) {\n-            writer.write(currentVersion().toFullString());\n+            writer.write(vespaVersion);\n         } catch (IOException e) {\n             throw new RuntimeException(e);\n         }\n     }\n \n     public Version storedVersion() {\n+        if (distributeApplicationPackage.value()) {\n+            Optional<byte[]> version = curator.getData(versionPath);\n+            if(version.isPresent()) {\n+                System.out.println(\"Found version in zk \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTY0OQ==", "bodyText": "Consider falling back to the file.", "url": "https://github.com/vespa-engine/vespa/pull/14522#discussion_r494259649", "createdAt": "2020-09-24T12:04:54Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/version/VersionState.java", "diffHunk": "@@ -5,45 +5,78 @@\n import com.yahoo.cloud.config.ConfigserverConfig;\n import com.yahoo.component.Version;\n import com.yahoo.io.IOUtils;\n+import com.yahoo.path.Path;\n+import com.yahoo.text.Utf8;\n+import com.yahoo.vespa.curator.Curator;\n import com.yahoo.vespa.defaults.Defaults;\n+import com.yahoo.vespa.flags.BooleanFlag;\n+import com.yahoo.vespa.flags.FlagSource;\n+import com.yahoo.vespa.flags.Flags;\n \n import java.io.File;\n import java.io.FileReader;\n import java.io.FileWriter;\n import java.io.IOException;\n+import java.util.Optional;\n \n /**\n- * Contains version information for this configserver.\n+ *\n+ * Contains version information for this configserver. Stored both in file system and in ZooKeeper (uses\n+ * data in ZooKeeper if distributeApplicationPackage and data found in ZooKeeper)\n  *\n  * @author Ulf Lilleengen\n  */\n public class VersionState {\n \n+    static final Path versionPath = Path.fromString(\"/config/v2/vespa_version\");\n+\n     private final File versionFile;\n+    private final Curator curator;\n+    private final BooleanFlag distributeApplicationPackage;\n \n     @Inject\n-    public VersionState(ConfigserverConfig config) {\n-        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"));\n+    public VersionState(ConfigserverConfig config, Curator curator, FlagSource flagsource) {\n+        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"), curator, flagsource);\n     }\n \n-    public VersionState(File versionFile) {\n+    public VersionState(File versionFile, Curator curator, FlagSource flagSource) {\n         this.versionFile = versionFile;\n+        this.curator = curator;\n+        this.distributeApplicationPackage = Flags.CONFIGSERVER_DISTRIBUTE_APPLICATION_PACKAGE.bindTo(flagSource);\n     }\n \n     public boolean isUpgraded() {\n+        System.out.println(\"current version: \" + currentVersion() + \", stored version: \" + storedVersion());\n         return currentVersion().compareTo(storedVersion()) > 0;\n     }\n \n     public void saveNewVersion() {\n+        saveNewVersion(currentVersion().toFullString());\n+    }\n+\n+    public void saveNewVersion(String vespaVersion) {\n+        curator.set(versionPath, Utf8.toBytes(vespaVersion));\n         try (FileWriter writer = new FileWriter(versionFile)) {\n-            writer.write(currentVersion().toFullString());\n+            writer.write(vespaVersion);\n         } catch (IOException e) {\n             throw new RuntimeException(e);\n         }\n     }\n \n     public Version storedVersion() {\n+        if (distributeApplicationPackage.value()) {\n+            Optional<byte[]> version = curator.getData(versionPath);\n+            if(version.isPresent()) {\n+                System.out.println(\"Found version in zk \");\n+                try {\n+                    return Version.fromString(Utf8.toString(version.get()));\n+                } catch (Exception e) {\n+                    return new Version(0, 0, 0); // Use an old value to signal we don't know", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTc1NA==", "bodyText": "Remove or log", "url": "https://github.com/vespa-engine/vespa/pull/14522#discussion_r494259754", "createdAt": "2020-09-24T12:05:02Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/version/VersionState.java", "diffHunk": "@@ -5,45 +5,78 @@\n import com.yahoo.cloud.config.ConfigserverConfig;\n import com.yahoo.component.Version;\n import com.yahoo.io.IOUtils;\n+import com.yahoo.path.Path;\n+import com.yahoo.text.Utf8;\n+import com.yahoo.vespa.curator.Curator;\n import com.yahoo.vespa.defaults.Defaults;\n+import com.yahoo.vespa.flags.BooleanFlag;\n+import com.yahoo.vespa.flags.FlagSource;\n+import com.yahoo.vespa.flags.Flags;\n \n import java.io.File;\n import java.io.FileReader;\n import java.io.FileWriter;\n import java.io.IOException;\n+import java.util.Optional;\n \n /**\n- * Contains version information for this configserver.\n+ *\n+ * Contains version information for this configserver. Stored both in file system and in ZooKeeper (uses\n+ * data in ZooKeeper if distributeApplicationPackage and data found in ZooKeeper)\n  *\n  * @author Ulf Lilleengen\n  */\n public class VersionState {\n \n+    static final Path versionPath = Path.fromString(\"/config/v2/vespa_version\");\n+\n     private final File versionFile;\n+    private final Curator curator;\n+    private final BooleanFlag distributeApplicationPackage;\n \n     @Inject\n-    public VersionState(ConfigserverConfig config) {\n-        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"));\n+    public VersionState(ConfigserverConfig config, Curator curator, FlagSource flagsource) {\n+        this(new File(Defaults.getDefaults().underVespaHome(config.configServerDBDir()), \"vespa_version\"), curator, flagsource);\n     }\n \n-    public VersionState(File versionFile) {\n+    public VersionState(File versionFile, Curator curator, FlagSource flagSource) {\n         this.versionFile = versionFile;\n+        this.curator = curator;\n+        this.distributeApplicationPackage = Flags.CONFIGSERVER_DISTRIBUTE_APPLICATION_PACKAGE.bindTo(flagSource);\n     }\n \n     public boolean isUpgraded() {\n+        System.out.println(\"current version: \" + currentVersion() + \", stored version: \" + storedVersion());\n         return currentVersion().compareTo(storedVersion()) > 0;\n     }\n \n     public void saveNewVersion() {\n+        saveNewVersion(currentVersion().toFullString());\n+    }\n+\n+    public void saveNewVersion(String vespaVersion) {\n+        curator.set(versionPath, Utf8.toBytes(vespaVersion));\n         try (FileWriter writer = new FileWriter(versionFile)) {\n-            writer.write(currentVersion().toFullString());\n+            writer.write(vespaVersion);\n         } catch (IOException e) {\n             throw new RuntimeException(e);\n         }\n     }\n \n     public Version storedVersion() {\n+        if (distributeApplicationPackage.value()) {\n+            Optional<byte[]> version = curator.getData(versionPath);\n+            if(version.isPresent()) {\n+                System.out.println(\"Found version in zk \");\n+                try {\n+                    return Version.fromString(Utf8.toString(version.get()));\n+                } catch (Exception e) {\n+                    return new Version(0, 0, 0); // Use an old value to signal we don't know\n+                }\n+            }\n+        }\n         try (FileReader reader = new FileReader(versionFile)) {\n+            System.out.println(\"Found version in file \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c4d9075fa1a6bd9d23cac3c72ac57071493fcf"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b859701325b84fe7372c0d17c729c349a14de2d2", "author": {"user": {"login": "hmusum", "name": "Harald Musum"}}, "url": "https://github.com/vespa-engine/vespa/commit/b859701325b84fe7372c0d17c729c349a14de2d2", "committedDate": "2020-09-24T12:14:23Z", "message": "Remove debug logging and fallback to file if we fail to read from zk"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTEzMjc1", "url": "https://github.com/vespa-engine/vespa/pull/14522#pullrequestreview-495513275", "createdAt": "2020-09-24T12:24:40Z", "commit": {"oid": "b859701325b84fe7372c0d17c729c349a14de2d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4194, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}