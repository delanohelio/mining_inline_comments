{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTQ1NDY5", "number": 14740, "title": "Stop taking config lock exclusively in node-repository", "bodyText": "We believe we've identified how locking should behave, at least in the\nshort-term:\n\n\nMigrate existing use of /config/v2/locks/<application-id> inside\nnode-repository to only use /provision/v1/locks/<application-id>. This ensures\nthat prepare only acquires /provision/v1/locks/<application-id> on the\nnode-repository side. Locks and node repo writes always happen together, i.e.\nwe're not building a list of transactions that are committed at some later point.\n\n\nEnsure that transactional operations such as active and deactivate holds\nboth /config/v2/locks/<application-id> and\n/provision/v1/locks/<application-id> until the transaction is committed.\n\n\n@hakonhall\nFYI @hmusum", "createdAt": "2020-10-06T13:26:28Z", "url": "https://github.com/vespa-engine/vespa/pull/14740", "merged": true, "mergeCommit": {"oid": "b09f95f1d811b4a14f727a8f6fcde989dcf9b67c"}, "closed": true, "closedAt": "2020-10-07T07:07:50Z", "author": {"login": "mpolden"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP4U90gH2gAyNDk4NTQ1NDY5OjNhZWRiZGZjMjc1ZmQxNjA4MWM3OGIxZmVlMGI5NWZmOGZkMDk5MGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP5IW4gFqTUwMzAxNDY5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3aedbdfc275fd16081c78b1fee0b95ff8fd0990b", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/3aedbdfc275fd16081c78b1fee0b95ff8fd0990b", "committedDate": "2020-10-06T13:23:41Z", "message": "Stop taking config lock exclusively in node-repository\n\nWe believe we've identified how locking should behave, at least in the\nshort-term:\n\n1) Migrate existing use of `/config/v2/locks/<application-id>` inside\nnode-repository to only use `/provision/v1/locks/<application-id>`. This ensures\nthat prepare only acquires `/provision/v1/locks/<application-id>` on the\nnode-repository side. Locks and node repo writes always happen together, i.e.\nwe're not building a list of transaction that are committed at some later point.\n\n2) Ensure that transactional operations such as `active` and `deactivate` holds\nboth `/config/v2/locks/<application-id>` and\n`/provision/v1/locks/<application-id>` until the transaction is committed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMDE0Njky", "url": "https://github.com/vespa-engine/vespa/pull/14740#pullrequestreview-503014692", "createdAt": "2020-10-06T14:17:45Z", "commit": {"oid": "3aedbdfc275fd16081c78b1fee0b95ff8fd0990b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxNzo0NVrOHdJQuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxNzo0NVrOHdJQuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyMjQ4OQ==", "bodyText": "This code is executed on bootstrap, so if a big deployment is happening concurrently the above db.lock() will time out.  But bootstrap redeployments are also vulnerable to this.", "url": "https://github.com/vespa-engine/vespa/pull/14740#discussion_r500322489", "createdAt": "2020-10-06T14:17:45Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/LoadBalancerProvisioner.java", "diffHunk": "@@ -60,8 +60,11 @@ public LoadBalancerProvisioner(NodeRepository nodeRepository, LoadBalancerServic\n         // Read and write all load balancers to make sure they are stored in the latest version of the serialization format\n         for (var id : db.readLoadBalancerIds()) {\n             try (var lock = db.lock(id.application())) {\n-                var loadBalancer = db.readLoadBalancer(id);\n-                loadBalancer.ifPresent(db::writeLoadBalancer);\n+                // TODO(mpolden): Remove inner lock\n+                try (var innerLock = db.configLock(id.application())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aedbdfc275fd16081c78b1fee0b95ff8fd0990b"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2448, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}