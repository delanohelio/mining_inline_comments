{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NzYwMzk1", "number": 13848, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0Mjo1NlrOEM10fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowNDo1OFrOEM2O4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAwMTU4OnYy", "diffSide": "RIGHT", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0Mjo1NlrOGvLsJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0Mjo1NlrOGvLsJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNzc4MQ==", "bodyText": "Please fix comment above.", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452127781", "createdAt": "2020-07-09T10:42:56Z", "author": {"login": "toregge"}, "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69c84f46fae6c13b01b085738882e16bc7f11024"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAxNTM5OnYy", "diffSide": "RIGHT", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0NzoyMlrOGvL0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0NzoyMlrOGvL0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTg3Mw==", "bodyText": "Please fix comment above.", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452129873", "createdAt": "2020-07-09T10:47:22Z", "author": {"login": "toregge"}, "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */\n+    static inline ItemCreator GetCreator(uint8_t type) { return static_cast<ItemCreator>((type >> 3) & 0x01); }\n+    /** The old item type now uses only the lower 12 bits in a backward compatible way) */\n+    static inline ItemType GetType(uint8_t type) { return static_cast<ItemType>(type & 0x1F); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69c84f46fae6c13b01b085738882e16bc7f11024"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTA1NTQxOnYy", "diffSide": "RIGHT", "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowMDoyMlrOGvMM0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowMDoyMlrOGvMM0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzNjE0NA==", "bodyText": "Please fix argument name above, it should be flags instead of type.", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452136144", "createdAt": "2020-07-09T11:00:22Z", "author": {"login": "toregge"}, "path": "searchsummary/src/tests/extractkeywords/simplequerystackitem.h", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/query/weight.h>\n+#include <vespa/searchlib/util/rawbuf.h>\n+#include <vespa/vespalib/stllike/string.h>\n+#include <vespa/searchlib/parsequery/parse.h>\n+\n+namespace search {\n+\n+/**\n+ * An item on the simple query stack.\n+ *\n+ * An object of this class represents a single item\n+ * on the simple query stack. It has a type, which corresponds\n+ * to the different query stack execution operations. It also\n+ * provides an arity, and the string values indexName and term, to\n+ * accomodate the different needs of the operations.\n+ */\n+class SimpleQueryStackItem : public ParseItem\n+{\n+private:\n+    SimpleQueryStackItem(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem& operator=(const SimpleQueryStackItem &) = delete;\n+    SimpleQueryStackItem();\n+public:\n+    /** Pointer to next item in a linked list. */\n+    SimpleQueryStackItem *_next;\n+\n+private:\n+    query::Weight _weight;\n+    uint32_t      _uniqueId;\n+    uint32_t      _arg1;\n+    double        _arg2;\n+    double        _arg3;\n+    uint8_t       _type;\n+    uint8_t       _flags;\n+\n+public:\n+    /** Extra information on each item (creator id) coded in bits 12-19 of _type */\n+    static inline ItemCreator GetCreator(uint8_t type) { return static_cast<ItemCreator>((type >> 3) & 0x01); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69c84f46fae6c13b01b085738882e16bc7f11024"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTA2OTE0OnYy", "diffSide": "RIGHT", "path": "container-search/src/main/java/com/yahoo/prelude/query/Item.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowNDo1OFrOGvMVLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTowNDo1OFrOGvMVLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzODI4NQ==", "bodyText": "Need to update abi\n[ERROR] Class com.yahoo.prelude.query.Item$ItemType: Extra field public static final enum com.yahoo.prelude.query.Item$ItemType LOCATION_TERM", "url": "https://github.com/vespa-engine/vespa/pull/13848#discussion_r452138285", "createdAt": "2020-07-09T11:04:58Z", "author": {"login": "baldersheim"}, "path": "container-search/src/main/java/com/yahoo/prelude/query/Item.java", "diffHunk": "@@ -60,7 +60,8 @@\n         PREDICATE_QUERY(23),\n         REGEXP(24),\n         WORD_ALTERNATIVES(25),\n-        NEAREST_NEIGHBOR(26);\n+        NEAREST_NEIGHBOR(26),\n+        LOCATION_TERM(27);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69c84f46fae6c13b01b085738882e16bc7f11024"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1864, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}