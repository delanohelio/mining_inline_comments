{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjY0MTEw", "number": 11631, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwNzoyMDowNFrODVmkWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwNzoyMTowMFrODVmkrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTc4NTg1OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/JobRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwNzoyMDowNFrOFZ6x4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1NToxNlrOFaYQDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTc2Mw==", "bodyText": "All Maintainers have access to the controller's clock through controller().clock() already.", "url": "https://github.com/vespa-engine/vespa/pull/11631#discussion_r362721763", "createdAt": "2020-01-03T07:20:04Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/JobRunner.java", "diffHunk": "@@ -34,18 +34,21 @@\n     private final JobController jobs;\n     private final ExecutorService executors;\n     private final StepRunner runner;\n+    private final Clock clock;\n \n-    public JobRunner(Controller controller, Duration duration, JobControl jobControl) {\n-        this(controller, duration, jobControl, Executors.newFixedThreadPool(32), new InternalStepRunner(controller));\n+    public JobRunner(Controller controller, Duration duration, JobControl jobControl, Clock clock) {\n+        this(controller, duration, jobControl, Executors.newFixedThreadPool(32), new InternalStepRunner(controller), clock);\n     }\n \n     @TestOnly\n-    public JobRunner(Controller controller, Duration duration, JobControl jobControl, ExecutorService executors, StepRunner runner) {\n+    public JobRunner(Controller controller, Duration duration, JobControl jobControl, ExecutorService executors,\n+                     StepRunner runner, Clock clock) {\n         super(controller, duration, jobControl);\n         this.jobs = controller.jobController();\n         this.jobs.setRunner(this::advance);\n         this.executors = executors;\n         this.runner = runner;\n+        this.clock = clock;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31ce2034d1ce8e6826b89adcc12f3009fc460b03"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwNDYyMA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11631#discussion_r363204620", "createdAt": "2020-01-06T08:55:16Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/JobRunner.java", "diffHunk": "@@ -34,18 +34,21 @@\n     private final JobController jobs;\n     private final ExecutorService executors;\n     private final StepRunner runner;\n+    private final Clock clock;\n \n-    public JobRunner(Controller controller, Duration duration, JobControl jobControl) {\n-        this(controller, duration, jobControl, Executors.newFixedThreadPool(32), new InternalStepRunner(controller));\n+    public JobRunner(Controller controller, Duration duration, JobControl jobControl, Clock clock) {\n+        this(controller, duration, jobControl, Executors.newFixedThreadPool(32), new InternalStepRunner(controller), clock);\n     }\n \n     @TestOnly\n-    public JobRunner(Controller controller, Duration duration, JobControl jobControl, ExecutorService executors, StepRunner runner) {\n+    public JobRunner(Controller controller, Duration duration, JobControl jobControl, ExecutorService executors,\n+                     StepRunner runner, Clock clock) {\n         super(controller, duration, jobControl);\n         this.jobs = controller.jobController();\n         this.jobs.setRunner(this::advance);\n         this.executors = executors;\n         this.runner = runner;\n+        this.clock = clock;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTc2Mw=="}, "originalCommit": {"oid": "31ce2034d1ce8e6826b89adcc12f3009fc460b03"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTc4NjY5OnYy", "diffSide": "RIGHT", "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/deployment/DeploymentTester.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwNzoyMTowMFrOFZ6yXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1Njo1OFrOFaYR_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTg4NQ==", "bodyText": "And the tester's clock is the same as the controller's, in this case.", "url": "https://github.com/vespa-engine/vespa/pull/11631#discussion_r362721885", "createdAt": "2020-01-03T07:21:00Z", "author": {"login": "jonmv"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/deployment/DeploymentTester.java", "diffHunk": "@@ -90,7 +87,7 @@ public DeploymentTester(ControllerTester controllerTester) {\n         cloud = (MockTesterCloud) tester.controller().jobController().cloud();\n         var jobControl = new JobControl(tester.controller().curator());\n         runner = new JobRunner(tester.controller(), Duration.ofDays(1), jobControl,\n-                               JobRunnerTest.inThreadExecutor(), new InternalStepRunner(tester.controller()));\n+                               JobRunnerTest.inThreadExecutor(), new InternalStepRunner(tester.controller()), tester.clock());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31ce2034d1ce8e6826b89adcc12f3009fc460b03"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwNTExOA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11631#discussion_r363205118", "createdAt": "2020-01-06T08:56:58Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/deployment/DeploymentTester.java", "diffHunk": "@@ -90,7 +87,7 @@ public DeploymentTester(ControllerTester controllerTester) {\n         cloud = (MockTesterCloud) tester.controller().jobController().cloud();\n         var jobControl = new JobControl(tester.controller().curator());\n         runner = new JobRunner(tester.controller(), Duration.ofDays(1), jobControl,\n-                               JobRunnerTest.inThreadExecutor(), new InternalStepRunner(tester.controller()));\n+                               JobRunnerTest.inThreadExecutor(), new InternalStepRunner(tester.controller()), tester.clock());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcyMTg4NQ=="}, "originalCommit": {"oid": "31ce2034d1ce8e6826b89adcc12f3009fc460b03"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2677, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}