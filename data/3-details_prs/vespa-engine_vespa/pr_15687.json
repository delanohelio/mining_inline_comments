{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjI1MzA1", "number": 15687, "title": "Arnej/untangle onnx from dense tensor ", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-12-04T16:01:24Z", "url": "https://github.com/vespa-engine/vespa/pull/15687", "merged": true, "mergeCommit": {"oid": "b7133833ca2ab63ebe388b65d645f463e228a461"}, "closed": true, "closedAt": "2020-12-08T12:14:58Z", "author": {"login": "arnej27959"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjmTTuABqjQwNzY5MzM4OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkGpnuAFqTU0NjkzMjU4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c8b9060eaa10b5c72d82868ba6b947c7dfeaac3", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/5c8b9060eaa10b5c72d82868ba6b947c7dfeaac3", "committedDate": "2020-12-04T23:09:14Z", "message": "need reference to persistent type"}, "afterCommit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/ea1305d578ca3ff11503eb30109a408f6c150fcb", "committedDate": "2020-12-06T19:59:46Z", "message": "use DenseCellsValue in NearestNeighborBlueprint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ecf2793233d3fa44fa6316e27be2220dce883ab", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/6ecf2793233d3fa44fa6316e27be2220dce883ab", "committedDate": "2020-12-06T19:59:45Z", "message": "add utility for wrapping cells vector as dense value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9785734e2bf04e063cb693a54f6d769a1a83704", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/c9785734e2bf04e063cb693a54f6d769a1a83704", "committedDate": "2020-12-06T19:59:45Z", "message": "untangle ONNX integration from old DenseTensor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/ea1305d578ca3ff11503eb30109a408f6c150fcb", "committedDate": "2020-12-06T19:59:46Z", "message": "use DenseCellsValue in NearestNeighborBlueprint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTY2MjMz", "url": "https://github.com/vespa-engine/vespa/pull/15687#pullrequestreview-545966233", "createdAt": "2020-12-07T09:28:42Z", "commit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo0MlrOIAddbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo1OFrOIAdeKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM1MzU4Mw==", "bodyText": "should also add space used by vector", "url": "https://github.com/vespa-engine/vespa/pull/15687#discussion_r537353583", "createdAt": "2020-12-07T09:28:42Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/eval/eval/value.h>\n+#include <cassert>\n+\n+namespace vespalib::eval {\n+\n+/**\n+ * A dense-only value that just owns a vector of cells.\n+ **/\n+template<typename T>\n+class DenseCellsValue : public Value {\n+private:\n+    const ValueType &_type;\n+    std::vector<T> _cells;\n+public:\n+    DenseCellsValue(const ValueType &type_ref, std::vector<T> cells)\n+      : _type(type_ref), _cells(std::move(cells))\n+    {\n+        assert(check_cell_type<T>(_type.cell_type()));\n+    }\n+    const ValueType &type() const override { return _type; }\n+    TypedCells cells() const override { return TypedCells(_cells); }\n+    const Index &index() const override { return TrivialIndex::get(); }\n+    MemoryUsage get_memory_usage() const override {\n+        return self_memory_usage<DenseCellsValue<T>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM1Mzc3MA==", "bodyText": "I strongly suggest we also own the type here", "url": "https://github.com/vespa-engine/vespa/pull/15687#discussion_r537353770", "createdAt": "2020-12-07T09:28:58Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/eval/eval/value.h>\n+#include <cassert>\n+\n+namespace vespalib::eval {\n+\n+/**\n+ * A dense-only value that just owns a vector of cells.\n+ **/\n+template<typename T>\n+class DenseCellsValue : public Value {\n+private:\n+    const ValueType &_type;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a27cdab6ab2c946e2ad61a429f96ebf23e0167ca", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/a27cdab6ab2c946e2ad61a429f96ebf23e0167ca", "committedDate": "2020-12-08T08:48:20Z", "message": "review follow-ups\n\n* own a copy of the type\n* account for cells memory\n* also assert on number of cells"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2OTMyNTg0", "url": "https://github.com/vespa-engine/vespa/pull/15687#pullrequestreview-546932584", "createdAt": "2020-12-08T09:23:24Z", "commit": {"oid": "a27cdab6ab2c946e2ad61a429f96ebf23e0167ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3802, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}