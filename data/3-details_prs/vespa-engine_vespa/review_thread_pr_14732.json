{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4Mzg4Nzcx", "number": 14732, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDowOFrOEqq8gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowODowMlrOEquFFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTc5MjY3OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/i_store.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDowOFrOHdAlrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1Nzo1N1rOHdA2vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MDM5OQ==", "bodyText": "Do you need this when you are using uint64_t instead of SerialNum", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500180399", "createdAt": "2020-10-06T10:50:08Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/i_store.h", "diffHunk": "@@ -6,6 +6,7 @@\n #include <vespa/document/base/globalid.h>\n #include <vespa/document/bucket/bucketid.h>\n #include <persistence/spi/types.h>\n+#include <vespa/searchlib/common/serialnum.h>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cf58d24470e3c0cc85ec43a3bf8f314cd29c99"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4NDc2Nw==", "bodyText": "No. Removed.", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500184767", "createdAt": "2020-10-06T10:57:57Z", "author": {"login": "toregge"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/i_store.h", "diffHunk": "@@ -6,6 +6,7 @@\n #include <vespa/document/base/globalid.h>\n #include <vespa/document/bucket/bucketid.h>\n #include <persistence/spi/types.h>\n+#include <vespa/searchlib/common/serialnum.h>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MDM5OQ=="}, "originalCommit": {"oid": "43cf58d24470e3c0cc85ec43a3bf8f314cd29c99"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTgzNDE2OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMTowMjowM1rOHdA_Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMTowOToyNlrOHdBN5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4NjkyMw==", "bodyText": "Wait with takeGuard untial after validLid check ?", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500186923", "createdAt": "2020-10-06T11:02:03Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.cpp", "diffHunk": "@@ -536,40 +538,44 @@ DocumentMetaStore::updateMetaData(DocId lid,\n     return true;\n }\n \n-bool\n-DocumentMetaStore::remove(DocId lid, BucketDBOwner::Guard &bucketGuard)\n+void\n+DocumentMetaStore::remove(DocId lid, uint64_t prepare_serial_num, BucketDBOwner::Guard &bucketGuard)\n {\n-    if (!validLid(lid)) {\n-        return false;\n-    }\n     const GlobalId & gid = getRawGid(lid);\n     KeyComp comp(gid, _metaDataStore, *_gidCompare);\n-    if (!_gidToLidMap.remove(lid, comp)) {\n+    auto& itr = _gid_to_lid_map_write_itr;\n+    if (prepare_serial_num == 0u || _gid_to_lid_map_write_itr_prepare_serial_num != prepare_serial_num) {\n+        itr.lower_bound(_gidToLidMap.getRoot(), lid, comp);\n+    }\n+    if (!itr.valid() || comp(lid, itr.getKey())) {\n         throw IllegalStateException(make_string(\n                         \"document meta data store corrupted,\"\n                         \" cannot remove\"\n                         \" document with lid '%u' and gid '%s'\",\n                         lid, gid.toString().c_str()));\n     }\n+    _gidToLidMap.remove(itr);\n     _lidAlloc.unregisterLid(lid);\n     RawDocumentMetaData &oldMetaData = _metaDataStore[lid];\n     bucketGuard->remove(oldMetaData.getGid(),\n                         oldMetaData.getBucketId().stripUnused(),\n                         oldMetaData.getTimestamp(), oldMetaData.getDocSize(),\n                         _subDbType);\n-    return true;\n }\n \n bool\n-DocumentMetaStore::remove(DocId lid)\n+DocumentMetaStore::remove(DocId lid, uint64_t prepare_serial_num)\n {\n     BucketDBOwner::Guard bucketGuard = _bucketDB->takeGuard();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43cf58d24470e3c0cc85ec43a3bf8f314cd29c99"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE5MDY5Mw==", "bodyText": "Fixed.", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500190693", "createdAt": "2020-10-06T11:09:26Z", "author": {"login": "toregge"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.cpp", "diffHunk": "@@ -536,40 +538,44 @@ DocumentMetaStore::updateMetaData(DocId lid,\n     return true;\n }\n \n-bool\n-DocumentMetaStore::remove(DocId lid, BucketDBOwner::Guard &bucketGuard)\n+void\n+DocumentMetaStore::remove(DocId lid, uint64_t prepare_serial_num, BucketDBOwner::Guard &bucketGuard)\n {\n-    if (!validLid(lid)) {\n-        return false;\n-    }\n     const GlobalId & gid = getRawGid(lid);\n     KeyComp comp(gid, _metaDataStore, *_gidCompare);\n-    if (!_gidToLidMap.remove(lid, comp)) {\n+    auto& itr = _gid_to_lid_map_write_itr;\n+    if (prepare_serial_num == 0u || _gid_to_lid_map_write_itr_prepare_serial_num != prepare_serial_num) {\n+        itr.lower_bound(_gidToLidMap.getRoot(), lid, comp);\n+    }\n+    if (!itr.valid() || comp(lid, itr.getKey())) {\n         throw IllegalStateException(make_string(\n                         \"document meta data store corrupted,\"\n                         \" cannot remove\"\n                         \" document with lid '%u' and gid '%s'\",\n                         lid, gid.toString().c_str()));\n     }\n+    _gidToLidMap.remove(itr);\n     _lidAlloc.unregisterLid(lid);\n     RawDocumentMetaData &oldMetaData = _metaDataStore[lid];\n     bucketGuard->remove(oldMetaData.getGid(),\n                         oldMetaData.getBucketId().stripUnused(),\n                         oldMetaData.getTimestamp(), oldMetaData.getDocSize(),\n                         _subDbType);\n-    return true;\n }\n \n bool\n-DocumentMetaStore::remove(DocId lid)\n+DocumentMetaStore::remove(DocId lid, uint64_t prepare_serial_num)\n {\n     BucketDBOwner::Guard bucketGuard = _bucketDB->takeGuard();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4NjkyMw=="}, "originalCommit": {"oid": "43cf58d24470e3c0cc85ec43a3bf8f314cd29c99"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjMwMzU4OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowNzoyNlrOHdFdmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowNzoyNlrOHdFdmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2MDI1MA==", "bodyText": "Consider adding a helper function for this, e.g. update_gid_to_lid_map_write_itr(prepare_serial_num). Same check is used in three places.", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500260250", "createdAt": "2020-10-06T13:07:26Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.cpp", "diffHunk": "@@ -462,20 +462,23 @@ DocumentMetaStore::put(const GlobalId &gid,\n                        const BucketId &bucketId,\n                        const Timestamp &timestamp,\n                        uint32_t docSize,\n-                       DocId lid)\n+                       DocId lid,\n+                       uint64_t prepare_serial_num)\n {\n     Result res;\n     RawDocumentMetaData metaData(gid, bucketId, timestamp, docSize);\n     KeyComp comp(metaData, _metaDataStore, *_gidCompare);\n-    TreeType::Iterator itr = _gidToLidMap.lowerBound(KeyComp::FIND_DOC_ID,\n-            comp);\n+    auto& itr = _gid_to_lid_map_write_itr;\n+    if (prepare_serial_num == 0u || _gid_to_lid_map_write_itr_prepare_serial_num != prepare_serial_num) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fa42f01249386655f6018184b5b4e562e9af81a"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjMwNjE1OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowODowMlrOHdFfMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzowODowMlrOHdFfMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2MDY1Ng==", "bodyText": "Consider adding a comment on how this serial num relates to _gid_to_lid_map_write_itr.", "url": "https://github.com/vespa-engine/vespa/pull/14732#discussion_r500260656", "createdAt": "2020-10-06T13:08:02Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.h", "diffHunk": "@@ -68,6 +68,8 @@ class DocumentMetaStore final : public DocumentMetaStoreAttribute,\n \n     MetaDataStore       _metaDataStore;\n     TreeType            _gidToLidMap;\n+    Iterator            _gid_to_lid_map_write_itr; // Iterator used for all updates of _gidToLidMap\n+    SerialNum           _gid_to_lid_map_write_itr_prepare_serial_num;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fa42f01249386655f6018184b5b4e562e9af81a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1203, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}