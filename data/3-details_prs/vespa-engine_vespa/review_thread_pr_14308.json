{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzQ0NjEw", "number": 14308, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxMTozNVrOEhGExw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjo0OTowMVrOEhGszw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTM3OTkxOnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java.orig", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoxMTozNVrOHOOCqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjoyMzozNlrOHOOVbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3MjE2OA==", "bodyText": "Does not compile \ud83e\udd16", "url": "https://github.com/vespa-engine/vespa/pull/14308#discussion_r484672168", "createdAt": "2020-09-08T06:11:35Z", "author": {"login": "jonmv"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java.orig", "diffHunk": "@@ -0,0 +1,1100 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.config.server;\n+\n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+import com.yahoo.component.Version;\n+import com.yahoo.config.FileReference;\n+import com.yahoo.config.application.api.ApplicationFile;\n+import com.yahoo.config.application.api.ApplicationMetaData;\n+import com.yahoo.config.application.api.DeployLogger;\n+import com.yahoo.config.model.api.HostInfo;\n+import com.yahoo.config.model.api.ServiceInfo;\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.Environment;\n+import com.yahoo.config.provision.HostFilter;\n+import com.yahoo.config.provision.InfraDeployer;\n+import com.yahoo.config.provision.Provisioner;\n+import com.yahoo.config.provision.RegionName;\n+import com.yahoo.config.provision.SystemName;\n+import com.yahoo.config.provision.TenantName;\n+import com.yahoo.config.provision.Zone;\n+import com.yahoo.container.jdisc.HttpResponse;\n+import com.yahoo.docproc.jdisc.metric.NullMetric;\n+import com.yahoo.io.IOUtils;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.path.Path;\n+import com.yahoo.slime.Slime;\n+import com.yahoo.transaction.NestedTransaction;\n+import com.yahoo.transaction.Transaction;\n+import com.yahoo.vespa.config.server.application.Application;\n+import com.yahoo.vespa.config.server.application.ApplicationSet;\n+import com.yahoo.vespa.config.server.application.CompressedApplicationInputStream;\n+import com.yahoo.vespa.config.server.application.ConfigConvergenceChecker;\n+import com.yahoo.vespa.config.server.application.FileDistributionStatus;\n+import com.yahoo.vespa.config.server.application.HttpProxy;\n+import com.yahoo.vespa.config.server.application.TenantApplications;\n+import com.yahoo.vespa.config.server.configchange.ConfigChangeActions;\n+import com.yahoo.vespa.config.server.configchange.RefeedActions;\n+import com.yahoo.vespa.config.server.configchange.RestartActions;\n+import com.yahoo.vespa.config.server.deploy.DeployHandlerLogger;\n+import com.yahoo.vespa.config.server.deploy.Deployment;\n+import com.yahoo.vespa.config.server.deploy.InfraDeployerProvider;\n+import com.yahoo.vespa.config.server.http.InternalServerException;\n+import com.yahoo.vespa.config.server.http.LogRetriever;\n+import com.yahoo.vespa.config.server.http.SimpleHttpFetcher;\n+import com.yahoo.vespa.config.server.http.TesterClient;\n+import com.yahoo.vespa.config.server.http.v2.DeploymentMetricsResponse;\n+import com.yahoo.vespa.config.server.http.v2.PrepareResult;\n+import com.yahoo.vespa.config.server.http.v2.ProtonMetricsResponse;\n+import com.yahoo.vespa.config.server.metrics.DeploymentMetricsRetriever;\n+import com.yahoo.vespa.config.server.metrics.ProtonMetricsRetriever;\n+import com.yahoo.vespa.config.server.provision.HostProvisionerProvider;\n+import com.yahoo.vespa.config.server.session.LocalSession;\n+import com.yahoo.vespa.config.server.session.PrepareParams;\n+import com.yahoo.vespa.config.server.session.RemoteSession;\n+import com.yahoo.vespa.config.server.session.Session;\n+import com.yahoo.vespa.config.server.session.SessionRepository;\n+import com.yahoo.vespa.config.server.session.SilentDeployLogger;\n+import com.yahoo.vespa.config.server.tenant.ApplicationRolesStore;\n+import com.yahoo.vespa.config.server.tenant.ContainerEndpointsCache;\n+import com.yahoo.vespa.config.server.tenant.EndpointCertificateMetadataStore;\n+import com.yahoo.vespa.config.server.tenant.Tenant;\n+import com.yahoo.vespa.config.server.tenant.TenantMetaData;\n+import com.yahoo.vespa.config.server.tenant.TenantRepository;\n+import com.yahoo.vespa.curator.Curator;\n+import com.yahoo.vespa.curator.Lock;\n+import com.yahoo.vespa.defaults.Defaults;\n+import com.yahoo.vespa.flags.FlagSource;\n+import com.yahoo.vespa.flags.InMemoryFlagSource;\n+import com.yahoo.vespa.orchestrator.Orchestrator;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UncheckedIOException;\n+import java.net.URI;\n+import java.nio.file.Files;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+import static com.yahoo.config.model.api.container.ContainerServiceType.CLUSTERCONTROLLER_CONTAINER;\n+import static com.yahoo.config.model.api.container.ContainerServiceType.CONTAINER;\n+import static com.yahoo.config.model.api.container.ContainerServiceType.LOGSERVER_CONTAINER;\n+import static com.yahoo.vespa.config.server.filedistribution.FileDistributionUtil.fileReferenceExistsOnDisk;\n+import static com.yahoo.vespa.config.server.filedistribution.FileDistributionUtil.getFileReferencesOnDisk;\n+import static com.yahoo.vespa.config.server.tenant.TenantRepository.HOSTED_VESPA_TENANT;\n+import static com.yahoo.vespa.curator.Curator.CompletionWaiter;\n+import static com.yahoo.yolean.Exceptions.uncheck;\n+import static java.nio.file.Files.readAttributes;\n+\n+/**\n+ * The API for managing applications.\n+ *\n+ * @author bratseth\n+ */\n+// TODO: Move logic for dealing with applications here from the HTTP layer and make this the persistent component\n+//       owning the rest of the state\n+public class ApplicationRepository implements com.yahoo.config.provision.Deployer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29de4a867577220a6afb838175fe73c39f1bccd"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3Njk3NQ==", "bodyText": "Urgh, thanks for fixing.", "url": "https://github.com/vespa-engine/vespa/pull/14308#discussion_r484676975", "createdAt": "2020-09-08T06:23:36Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java.orig", "diffHunk": "@@ -0,0 +1,1100 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.config.server;\n+\n+import com.google.inject.Inject;\n+import com.yahoo.cloud.config.ConfigserverConfig;\n+import com.yahoo.component.Version;\n+import com.yahoo.config.FileReference;\n+import com.yahoo.config.application.api.ApplicationFile;\n+import com.yahoo.config.application.api.ApplicationMetaData;\n+import com.yahoo.config.application.api.DeployLogger;\n+import com.yahoo.config.model.api.HostInfo;\n+import com.yahoo.config.model.api.ServiceInfo;\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.Environment;\n+import com.yahoo.config.provision.HostFilter;\n+import com.yahoo.config.provision.InfraDeployer;\n+import com.yahoo.config.provision.Provisioner;\n+import com.yahoo.config.provision.RegionName;\n+import com.yahoo.config.provision.SystemName;\n+import com.yahoo.config.provision.TenantName;\n+import com.yahoo.config.provision.Zone;\n+import com.yahoo.container.jdisc.HttpResponse;\n+import com.yahoo.docproc.jdisc.metric.NullMetric;\n+import com.yahoo.io.IOUtils;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.path.Path;\n+import com.yahoo.slime.Slime;\n+import com.yahoo.transaction.NestedTransaction;\n+import com.yahoo.transaction.Transaction;\n+import com.yahoo.vespa.config.server.application.Application;\n+import com.yahoo.vespa.config.server.application.ApplicationSet;\n+import com.yahoo.vespa.config.server.application.CompressedApplicationInputStream;\n+import com.yahoo.vespa.config.server.application.ConfigConvergenceChecker;\n+import com.yahoo.vespa.config.server.application.FileDistributionStatus;\n+import com.yahoo.vespa.config.server.application.HttpProxy;\n+import com.yahoo.vespa.config.server.application.TenantApplications;\n+import com.yahoo.vespa.config.server.configchange.ConfigChangeActions;\n+import com.yahoo.vespa.config.server.configchange.RefeedActions;\n+import com.yahoo.vespa.config.server.configchange.RestartActions;\n+import com.yahoo.vespa.config.server.deploy.DeployHandlerLogger;\n+import com.yahoo.vespa.config.server.deploy.Deployment;\n+import com.yahoo.vespa.config.server.deploy.InfraDeployerProvider;\n+import com.yahoo.vespa.config.server.http.InternalServerException;\n+import com.yahoo.vespa.config.server.http.LogRetriever;\n+import com.yahoo.vespa.config.server.http.SimpleHttpFetcher;\n+import com.yahoo.vespa.config.server.http.TesterClient;\n+import com.yahoo.vespa.config.server.http.v2.DeploymentMetricsResponse;\n+import com.yahoo.vespa.config.server.http.v2.PrepareResult;\n+import com.yahoo.vespa.config.server.http.v2.ProtonMetricsResponse;\n+import com.yahoo.vespa.config.server.metrics.DeploymentMetricsRetriever;\n+import com.yahoo.vespa.config.server.metrics.ProtonMetricsRetriever;\n+import com.yahoo.vespa.config.server.provision.HostProvisionerProvider;\n+import com.yahoo.vespa.config.server.session.LocalSession;\n+import com.yahoo.vespa.config.server.session.PrepareParams;\n+import com.yahoo.vespa.config.server.session.RemoteSession;\n+import com.yahoo.vespa.config.server.session.Session;\n+import com.yahoo.vespa.config.server.session.SessionRepository;\n+import com.yahoo.vespa.config.server.session.SilentDeployLogger;\n+import com.yahoo.vespa.config.server.tenant.ApplicationRolesStore;\n+import com.yahoo.vespa.config.server.tenant.ContainerEndpointsCache;\n+import com.yahoo.vespa.config.server.tenant.EndpointCertificateMetadataStore;\n+import com.yahoo.vespa.config.server.tenant.Tenant;\n+import com.yahoo.vespa.config.server.tenant.TenantMetaData;\n+import com.yahoo.vespa.config.server.tenant.TenantRepository;\n+import com.yahoo.vespa.curator.Curator;\n+import com.yahoo.vespa.curator.Lock;\n+import com.yahoo.vespa.defaults.Defaults;\n+import com.yahoo.vespa.flags.FlagSource;\n+import com.yahoo.vespa.flags.InMemoryFlagSource;\n+import com.yahoo.vespa.orchestrator.Orchestrator;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UncheckedIOException;\n+import java.net.URI;\n+import java.nio.file.Files;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+import static com.yahoo.config.model.api.container.ContainerServiceType.CLUSTERCONTROLLER_CONTAINER;\n+import static com.yahoo.config.model.api.container.ContainerServiceType.CONTAINER;\n+import static com.yahoo.config.model.api.container.ContainerServiceType.LOGSERVER_CONTAINER;\n+import static com.yahoo.vespa.config.server.filedistribution.FileDistributionUtil.fileReferenceExistsOnDisk;\n+import static com.yahoo.vespa.config.server.filedistribution.FileDistributionUtil.getFileReferencesOnDisk;\n+import static com.yahoo.vespa.config.server.tenant.TenantRepository.HOSTED_VESPA_TENANT;\n+import static com.yahoo.vespa.curator.Curator.CompletionWaiter;\n+import static com.yahoo.yolean.Exceptions.uncheck;\n+import static java.nio.file.Files.readAttributes;\n+\n+/**\n+ * The API for managing applications.\n+ *\n+ * @author bratseth\n+ */\n+// TODO: Move logic for dealing with applications here from the HTTP layer and make this the persistent component\n+//       owning the rest of the state\n+public class ApplicationRepository implements com.yahoo.config.provision.Deployer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3MjE2OA=="}, "originalCommit": {"oid": "d29de4a867577220a6afb838175fe73c39f1bccd"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTQ4MjM5OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNjo0OTowMVrOHOO-zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODoyNzo1NFrOHOSU9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY4NzU2Ng==", "bodyText": "Sure this shouldn't be synchronized, but more fine-grained than on the session repository shared by all sessions?", "url": "https://github.com/vespa-engine/vespa/pull/14308#discussion_r484687566", "createdAt": "2020-09-08T06:49:01Z", "author": {"login": "jonmv"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -394,13 +402,84 @@ private void loadSessionIfActive(RemoteSession session) {\n         for (ApplicationId applicationId : applicationRepo.activeApplications()) {\n             if (applicationRepo.requireActiveSessionOf(applicationId) == session.getSessionId()) {\n                 log.log(Level.FINE, () -> \"Found active application for session \" + session.getSessionId() + \" , loading it\");\n-                applicationRepo.reloadConfig(session.ensureApplicationLoaded());\n+                applicationRepo.reloadConfig(ensureApplicationLoaded(session));\n                 log.log(Level.INFO, session.logPre() + \"Application activated successfully: \" + applicationId + \" (generation \" + session.getSessionId() + \")\");\n                 return;\n             }\n         }\n     }\n \n+    void prepareRemoteSession(RemoteSession session) {\n+        SessionZooKeeperClient sessionZooKeeperClient = createSessionZooKeeperClient(session.getSessionId());\n+        Curator.CompletionWaiter waiter = sessionZooKeeperClient.getPrepareWaiter();\n+        ensureApplicationLoaded(session);\n+        notifyCompletion(waiter, session);\n+    }\n+\n+    public ApplicationSet ensureApplicationLoaded(RemoteSession session) {\n+        Optional<ApplicationSet> applicationSet = session.applicationSet();\n+        if (applicationSet.isPresent()) {\n+            return applicationSet.get();\n+        }\n+\n+        ApplicationSet newApplicationSet = loadApplication(session);\n+        RemoteSession newSession = new RemoteSession(session.getTenantName(),\n+                                    session.getSessionId(),\n+                                    session.getSessionZooKeeperClient(),\n+                                    Optional.of(newApplicationSet));\n+        remoteSessionCache.putSession(newSession);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2f6dd4bcfe2f37656ed2b95336006ab42857d38"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc0MjM4OQ==", "bodyText": "Yes, I think you are right. Need to look into that.", "url": "https://github.com/vespa-engine/vespa/pull/14308#discussion_r484742389", "createdAt": "2020-09-08T08:27:54Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionRepository.java", "diffHunk": "@@ -394,13 +402,84 @@ private void loadSessionIfActive(RemoteSession session) {\n         for (ApplicationId applicationId : applicationRepo.activeApplications()) {\n             if (applicationRepo.requireActiveSessionOf(applicationId) == session.getSessionId()) {\n                 log.log(Level.FINE, () -> \"Found active application for session \" + session.getSessionId() + \" , loading it\");\n-                applicationRepo.reloadConfig(session.ensureApplicationLoaded());\n+                applicationRepo.reloadConfig(ensureApplicationLoaded(session));\n                 log.log(Level.INFO, session.logPre() + \"Application activated successfully: \" + applicationId + \" (generation \" + session.getSessionId() + \")\");\n                 return;\n             }\n         }\n     }\n \n+    void prepareRemoteSession(RemoteSession session) {\n+        SessionZooKeeperClient sessionZooKeeperClient = createSessionZooKeeperClient(session.getSessionId());\n+        Curator.CompletionWaiter waiter = sessionZooKeeperClient.getPrepareWaiter();\n+        ensureApplicationLoaded(session);\n+        notifyCompletion(waiter, session);\n+    }\n+\n+    public ApplicationSet ensureApplicationLoaded(RemoteSession session) {\n+        Optional<ApplicationSet> applicationSet = session.applicationSet();\n+        if (applicationSet.isPresent()) {\n+            return applicationSet.get();\n+        }\n+\n+        ApplicationSet newApplicationSet = loadApplication(session);\n+        RemoteSession newSession = new RemoteSession(session.getTenantName(),\n+                                    session.getSessionId(),\n+                                    session.getSessionZooKeeperClient(),\n+                                    Optional.of(newApplicationSet));\n+        remoteSessionCache.putSession(newSession);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY4NzU2Ng=="}, "originalCommit": {"oid": "f2f6dd4bcfe2f37656ed2b95336006ab42857d38"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1389, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}