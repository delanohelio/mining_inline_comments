{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDQzNTc1", "number": 13506, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MToyM1rOEDc97A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MToyM1rOEDc97A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDU1Nzg4OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MToyM1rOGgen_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozODoxOVrOGgkUEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwOTM3Mw==", "bodyText": "Why should it, any consequences?", "url": "https://github.com/vespa-engine/vespa/pull/13506#discussion_r436709373", "createdAt": "2020-06-08T13:41:23Z", "author": {"login": "gjoranv"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionFactory.java", "diffHunk": "@@ -161,23 +164,47 @@ private LocalSession create(File applicationFile, ApplicationId applicationId, l\n                                 boolean internalRedeploy, TimeoutBudget timeoutBudget) {\n         long sessionId = getNextSessionId();\n         try {\n-            ensureSessionPathDoesNotExist(sessionId);\n+            ApplicationPackage app = createApplicationPackage(applicationFile, applicationId,\n+                                                              sessionId, currentlyActiveSessionId, internalRedeploy);\n+            return createSessionFromApplication(app, sessionId, timeoutBudget, clock);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Error creating session \" + sessionId, e);\n+        }\n+    }\n+\n+    /**\n+     * This method is used when creating a session based on a remote session and the distributed application package\n+     * It does not wait for session being created on other servers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a95f1ce7879669ce0c5ec109835fe35cd7a5b2fb"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjU3OA==", "bodyText": "The other methods will do that because at that point the session is created for the first time and we want to wait until it is created on all servers. In this method we know that has already happened. Doing so would just be unnecessary (probably not an error, though, I haven't looked int it)", "url": "https://github.com/vespa-engine/vespa/pull/13506#discussion_r436802578", "createdAt": "2020-06-08T15:38:19Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/session/SessionFactory.java", "diffHunk": "@@ -161,23 +164,47 @@ private LocalSession create(File applicationFile, ApplicationId applicationId, l\n                                 boolean internalRedeploy, TimeoutBudget timeoutBudget) {\n         long sessionId = getNextSessionId();\n         try {\n-            ensureSessionPathDoesNotExist(sessionId);\n+            ApplicationPackage app = createApplicationPackage(applicationFile, applicationId,\n+                                                              sessionId, currentlyActiveSessionId, internalRedeploy);\n+            return createSessionFromApplication(app, sessionId, timeoutBudget, clock);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Error creating session \" + sessionId, e);\n+        }\n+    }\n+\n+    /**\n+     * This method is used when creating a session based on a remote session and the distributed application package\n+     * It does not wait for session being created on other servers", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwOTM3Mw=="}, "originalCommit": {"oid": "a95f1ce7879669ce0c5ec109835fe35cd7a5b2fb"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2003, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}