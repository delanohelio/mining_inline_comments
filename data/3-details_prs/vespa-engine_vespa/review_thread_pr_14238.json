{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NjU3ODky", "number": 14238, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMDozM1rOEfV9aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMjoyNFrOEfWBgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzAxMDk5OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMDozM1rOHLj7qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODo0MDo1NVrOHLkgcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTA5OA==", "bodyText": "How about comparing the types, instead of assuming this is a request type?", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481885098", "createdAt": "2020-09-02T08:30:33Z", "author": {"login": "jonmv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -154,14 +153,17 @@ private void removeDuplicateBindingsFromChain(Http http, ComponentId chainId) {\n         duplicateBindings.forEach(http.getBindings()::remove);\n     }\n \n-    private static boolean effectivelyDuplicateOf(BindingPattern accessControlBinding, BindingPattern other) {\n-        return accessControlBinding.equals(other)\n-                || (accessControlBinding.path().equals(other.path()) && other.matchesAnyPort());\n+    private static boolean effectivelyDuplicateOf(FilterBinding accessControlBinding, FilterBinding other) {\n+        if (accessControlBinding.chainId().equals(other.chainId())) return false; // Same filter chain\n+        if (other.type() == FilterBinding.Type.RESPONSE) return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NzAwNA==", "bodyText": "The first parameter is assumed to be an access control binding, meaning it cannot be a response filter binding.", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481887004", "createdAt": "2020-09-02T08:32:38Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -154,14 +153,17 @@ private void removeDuplicateBindingsFromChain(Http http, ComponentId chainId) {\n         duplicateBindings.forEach(http.getBindings()::remove);\n     }\n \n-    private static boolean effectivelyDuplicateOf(BindingPattern accessControlBinding, BindingPattern other) {\n-        return accessControlBinding.equals(other)\n-                || (accessControlBinding.path().equals(other.path()) && other.matchesAnyPort());\n+    private static boolean effectivelyDuplicateOf(FilterBinding accessControlBinding, FilterBinding other) {\n+        if (accessControlBinding.chainId().equals(other.chainId())) return false; // Same filter chain\n+        if (other.type() == FilterBinding.Type.RESPONSE) return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTA5OA=="}, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5NDUxNA==", "bodyText": "Well, it's a private in the AccessControl class, so I guess that's OK.", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481894514", "createdAt": "2020-09-02T08:40:55Z", "author": {"login": "jonmv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/AccessControl.java", "diffHunk": "@@ -154,14 +153,17 @@ private void removeDuplicateBindingsFromChain(Http http, ComponentId chainId) {\n         duplicateBindings.forEach(http.getBindings()::remove);\n     }\n \n-    private static boolean effectivelyDuplicateOf(BindingPattern accessControlBinding, BindingPattern other) {\n-        return accessControlBinding.equals(other)\n-                || (accessControlBinding.path().equals(other.path()) && other.matchesAnyPort());\n+    private static boolean effectivelyDuplicateOf(FilterBinding accessControlBinding, FilterBinding other) {\n+        if (accessControlBinding.chainId().equals(other.chainId())) return false; // Same filter chain\n+        if (other.type() == FilterBinding.Type.RESPONSE) return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTA5OA=="}, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzAxNjQwOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/FilterBinding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMToyOFrOHLj--w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMzoyMlrOHLkFhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTk0Nw==", "bodyText": "I assume this code isn't called by older versions of code, in the config server ... ?", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481885947", "createdAt": "2020-09-02T08:31:28Z", "author": {"login": "jonmv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/FilterBinding.java", "diffHunk": "@@ -11,16 +11,20 @@\n  */\n public class FilterBinding {\n \n+    public enum Type {REQUEST, RESPONSE}\n+\n+    private final Type type;\n     private final ComponentSpecification chainId;\n     private final BindingPattern binding;\n \n-    private FilterBinding(ComponentSpecification chainId, BindingPattern binding) {\n+    private FilterBinding(Type type, ComponentSpecification chainId, BindingPattern binding) {\n+        this.type = type;\n         this.chainId = chainId;\n         this.binding = binding;\n     }\n \n-    public static FilterBinding create(ComponentSpecification chainId, BindingPattern binding) {\n-        return new FilterBinding(chainId, binding);\n+    public static FilterBinding create(Type type, ComponentSpecification chainId, BindingPattern binding) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NzYyMA==", "bodyText": "Nope, this method is only used inside config-model module.", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481887620", "createdAt": "2020-09-02T08:33:22Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/FilterBinding.java", "diffHunk": "@@ -11,16 +11,20 @@\n  */\n public class FilterBinding {\n \n+    public enum Type {REQUEST, RESPONSE}\n+\n+    private final Type type;\n     private final ComponentSpecification chainId;\n     private final BindingPattern binding;\n \n-    private FilterBinding(ComponentSpecification chainId, BindingPattern binding) {\n+    private FilterBinding(Type type, ComponentSpecification chainId, BindingPattern binding) {\n+        this.type = type;\n         this.chainId = chainId;\n         this.binding = binding;\n     }\n \n-    public static FilterBinding create(ComponentSpecification chainId, BindingPattern binding) {\n-        return new FilterBinding(chainId, binding);\n+    public static FilterBinding create(Type type, ComponentSpecification chainId, BindingPattern binding) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTk0Nw=="}, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzAyMTQ1OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMjoyNFrOHLkCTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODo0MDo1MVrOHLkgOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4Njc5OA==", "bodyText": "Would prefer explicit check for \"response-chain\" and throw otherwise, just to be absolutely future-proff.", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481886798", "createdAt": "2020-09-02T08:32:24Z", "author": {"login": "jonmv"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "diffHunk": "@@ -121,7 +121,8 @@ private static AthenzDomain getAccessControlDomain(DeployState deployState, Elem\n \n                 for (Element bindingSpec: XML.getChildren(child, \"binding\")) {\n                     String binding = XML.getValue(bindingSpec);\n-                    result.add(FilterBinding.create(chainId, UserBindingPattern.fromPattern(binding)));\n+                    FilterBinding.Type type = tagName.equals(\"request-chain\") ? FilterBinding.Type.REQUEST : FilterBinding.Type.RESPONSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5NDQ1OQ==", "bodyText": "I have improved the logic in new commit.", "url": "https://github.com/vespa-engine/vespa/pull/14238#discussion_r481894459", "createdAt": "2020-09-02T08:40:51Z", "author": {"login": "bjorncs"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/container/http/xml/HttpBuilder.java", "diffHunk": "@@ -121,7 +121,8 @@ private static AthenzDomain getAccessControlDomain(DeployState deployState, Elem\n \n                 for (Element bindingSpec: XML.getChildren(child, \"binding\")) {\n                     String binding = XML.getValue(bindingSpec);\n-                    result.add(FilterBinding.create(chainId, UserBindingPattern.fromPattern(binding)));\n+                    FilterBinding.Type type = tagName.equals(\"request-chain\") ? FilterBinding.Type.REQUEST : FilterBinding.Type.RESPONSE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4Njc5OA=="}, "originalCommit": {"oid": "0c96e5a85ffa61c5c922beeb18f84ddd1ae6599e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1429, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}