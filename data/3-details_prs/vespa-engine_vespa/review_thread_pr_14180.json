{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NjcwMjQz", "number": 14180, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzoxNzo1OFrOEdN8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODoxMDowN1rOEdh8yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDcyNjc3OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/wrapped_simple_tensor.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzoxNzo1OFrOHIP7lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0MDowM1rOHIQ2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxMTY3MQ==", "bodyText": "this will greatly underestimate the actual memory used since most of the address will not be included. probably not a big deal.", "url": "https://github.com/vespa-engine/vespa/pull/14180#discussion_r478411671", "createdAt": "2020-08-27T13:17:58Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/wrapped_simple_tensor.cpp", "diffHunk": "@@ -54,6 +54,17 @@ WrappedSimpleTensor::accept(TensorVisitor &visitor) const\n     }\n }\n \n+size_t\n+WrappedSimpleTensor::count_memory_used() const\n+{\n+    size_t result = sizeof(WrappedSimpleTensor);\n+    if (_space) {\n+        result += sizeof(SimpleTensor);\n+        result += _tensor.cells().size() * sizeof(SimpleTensor::Cell);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11a466a1fa59ca5ee5e08e609b43bdce2ab13f45"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNjcxNw==", "bodyText": "on second thought; the size of the Label struct multiplied by the number of dimensions in the tensor would be a good estimation for space used for the address part.", "url": "https://github.com/vespa-engine/vespa/pull/14180#discussion_r478426717", "createdAt": "2020-08-27T13:40:03Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/wrapped_simple_tensor.cpp", "diffHunk": "@@ -54,6 +54,17 @@ WrappedSimpleTensor::accept(TensorVisitor &visitor) const\n     }\n }\n \n+size_t\n+WrappedSimpleTensor::count_memory_used() const\n+{\n+    size_t result = sizeof(WrappedSimpleTensor);\n+    if (_space) {\n+        result += sizeof(SimpleTensor);\n+        result += _tensor.cells().size() * sizeof(SimpleTensor::Cell);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxMTY3MQ=="}, "originalCommit": {"oid": "11a466a1fa59ca5ee5e08e609b43bdce2ab13f45"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDAwMzkzOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/simple_tensor.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODoxMDowN1rOHIvA_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODoxMDowN1rOHIvA_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkyMDk1OA==", "bodyText": "Address -> Label", "url": "https://github.com/vespa-engine/vespa/pull/14180#discussion_r478920958", "createdAt": "2020-08-28T08:10:07Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/simple_tensor.cpp", "diffHunk": "@@ -769,5 +769,14 @@ SimpleTensor::decode(nbostream &input)\n     return builder.build();\n }\n \n+size_t\n+SimpleTensor::count_memory_used() const {\n+    size_t result = sizeof(SimpleTensor);\n+    size_t addr_size = sizeof(Address) * _type.dimensions().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec2a74bad25fc36ae55b4415fdb253d5c9945546"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1501, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}