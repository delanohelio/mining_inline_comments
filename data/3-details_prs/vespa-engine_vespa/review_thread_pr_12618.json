{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjA5OTk4", "number": 12618, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1MDo1OVrODphAfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1MDo1OVrODphAfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODU5MDA2OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/dotproductfeature.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1MDo1OVrOF4vTdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDozMDowOFrOF4xFiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAzOTYwNg==", "bodyText": "could let auto resolve to a value here and move it into the constructor", "url": "https://github.com/vespa-engine/vespa/pull/12618#discussion_r395039606", "createdAt": "2020-03-19T13:50:59Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/features/dotproductfeature.cpp", "diffHunk": "@@ -584,6 +655,10 @@ createForDirectWSetImpl(const IAttributeVector * attribute, V && vector, vespali\n     if (!attribute->isImported() && (iattr != nullptr) && supportsGetRawValues<A, VT>(*iattr)) {\n         auto * exactA = dynamic_cast<const ExactA *>(iattr);\n         if (exactA != nullptr) {\n+            if (extractSize(vector) == 1) {\n+                const auto & elem = extractElem(vector, 0ul);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b72d9e3a5765de1b5b1af1c14058218a356e79"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA2ODgwOQ==", "bodyText": "Just removed the temporary.", "url": "https://github.com/vespa-engine/vespa/pull/12618#discussion_r395068809", "createdAt": "2020-03-19T14:30:08Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/features/dotproductfeature.cpp", "diffHunk": "@@ -584,6 +655,10 @@ createForDirectWSetImpl(const IAttributeVector * attribute, V && vector, vespali\n     if (!attribute->isImported() && (iattr != nullptr) && supportsGetRawValues<A, VT>(*iattr)) {\n         auto * exactA = dynamic_cast<const ExactA *>(iattr);\n         if (exactA != nullptr) {\n+            if (extractSize(vector) == 1) {\n+                const auto & elem = extractElem(vector, 0ul);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAzOTYwNg=="}, "originalCommit": {"oid": "67b72d9e3a5765de1b5b1af1c14058218a356e79"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2293, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}