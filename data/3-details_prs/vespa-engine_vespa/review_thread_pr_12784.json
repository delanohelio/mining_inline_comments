{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Mzk2Mzk4", "number": 12784, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoyNjoyOFrODtaHYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoyNzoyNFrODtaIfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTQwMzg0OnYy", "diffSide": "RIGHT", "path": "document/src/vespa/document/select/parser.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoyNjoyOFrOF-z8lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo0Njo0OFrOF-2tPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzEyNg==", "bodyText": "Consider adding the size and limit to the exception message.", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401407126", "createdAt": "2020-04-01T07:26:28Z", "author": {"login": "geirst"}, "path": "document/src/vespa/document/select/parser.cpp", "diffHunk": "@@ -8,7 +9,18 @@\n \n namespace document::select {\n \n+namespace {\n+\n+void verify_expression_not_too_large(const std::string& expr) {\n+    if (expr.size() > ParserLimits::MaxSelectionByteSize) {\n+        throw ParsingFailedException(\"expression is too large to be parsed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc693476136615bb44b9c4705cd959e53fee1afd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MjM1MQ==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401452351", "createdAt": "2020-04-01T08:46:48Z", "author": {"login": "vekterli"}, "path": "document/src/vespa/document/select/parser.cpp", "diffHunk": "@@ -8,7 +9,18 @@\n \n namespace document::select {\n \n+namespace {\n+\n+void verify_expression_not_too_large(const std::string& expr) {\n+    if (expr.size() > ParserLimits::MaxSelectionByteSize) {\n+        throw ParsingFailedException(\"expression is too large to be parsed\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzEyNg=="}, "originalCommit": {"oid": "bc693476136615bb44b9c4705cd959e53fee1afd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTQwNjcwOnYy", "diffSide": "RIGHT", "path": "document/src/vespa/document/select/parser_limits.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoyNzoyNFrOF-z-VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo1MDozN1rOF-22lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzU3Mw==", "bodyText": "Consider adding the depth and max depth limit to the exception message.", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401407573", "createdAt": "2020-04-01T07:27:24Z", "author": {"login": "geirst"}, "path": "document/src/vespa/document/select/parser_limits.cpp", "diffHunk": "@@ -0,0 +1,11 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#include \"parser_limits.h\"\n+#include \"parsing_failed_exception.h\"\n+\n+namespace document::select {\n+\n+void throw_max_depth_exceeded_exception() {\n+    throw ParsingFailedException(\"expression is too deeply nested\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc693476136615bb44b9c4705cd959e53fee1afd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NDc0MA==", "bodyText": "Added limit to message. We cannot know the actual depth of the input AST as we terminate parsing immediately when hitting the limit.", "url": "https://github.com/vespa-engine/vespa/pull/12784#discussion_r401454740", "createdAt": "2020-04-01T08:50:37Z", "author": {"login": "vekterli"}, "path": "document/src/vespa/document/select/parser_limits.cpp", "diffHunk": "@@ -0,0 +1,11 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#include \"parser_limits.h\"\n+#include \"parsing_failed_exception.h\"\n+\n+namespace document::select {\n+\n+void throw_max_depth_exceeded_exception() {\n+    throw ParsingFailedException(\"expression is too deeply nested\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNzU3Mw=="}, "originalCommit": {"oid": "bc693476136615bb44b9c4705cd959e53fee1afd"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2164, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}