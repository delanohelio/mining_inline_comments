{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNDM2MzYy", "number": 15369, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNDowNlrOE6CjHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNzo0N1rOE6Cqcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjk0NjIyOnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNDowNlrOH03O9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDo0OTo1OFrOH04d6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA==", "bodyText": "Consider\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    Inspector addressesField = object.field(containersKey);\n          \n          \n            \n                    if (addressesField.children() == 0)\n          \n          \n            \n                        return List.of();\n          \n          \n            \n                    List<Address> addresses = new ArrayList<>(addressesField.children());\n          \n          \n            \n                    addressesField.traverse((ArrayTraverser) (i, elem) ->\n          \n          \n            \n                            addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n          \n          \n            \n                    return addresses;\n          \n          \n            \n                }\n          \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    return SlimeUtils.entriesStream(object.field(containersKey))\n          \n          \n            \n                            .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\n          \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                }", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525192950", "createdAt": "2020-11-17T14:24:06Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "diffHunk": "@@ -358,6 +371,16 @@ private ClusterMembership clusterMembershipFromSlime(Inspector object) {\n         return ipAddresses.build();\n     }\n \n+    private List<Address> addressesFromSlime(Inspector object) {\n+        Inspector addressesField = object.field(containersKey);\n+        if (addressesField.children() == 0)\n+            return List.of();\n+        List<Address> addresses = new ArrayList<>(addressesField.children());\n+        addressesField.traverse((ArrayTraverser) (i, elem) ->\n+                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n+        return addresses;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIxMzE2MQ==", "bodyText": "Sure", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525213161", "createdAt": "2020-11-17T14:49:58Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "diffHunk": "@@ -358,6 +371,16 @@ private ClusterMembership clusterMembershipFromSlime(Inspector object) {\n         return ipAddresses.build();\n     }\n \n+    private List<Address> addressesFromSlime(Inspector object) {\n+        Inspector addressesField = object.field(containersKey);\n+        if (addressesField.children() == 0)\n+            return List.of();\n+        List<Address> addresses = new ArrayList<>(addressesField.children());\n+        addressesField.traverse((ArrayTraverser) (i, elem) ->\n+                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n+        return addresses;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA=="}, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjk2NDk4OnYy", "diffSide": "RIGHT", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNzo0N1rOH03aZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDo0MTo0NlrOH04Dfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng==", "bodyText": "Disable wildcard imports for javax.swing.*", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525195876", "createdAt": "2020-11-17T14:27:47Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "diffHunk": "@@ -11,8 +11,9 @@\n import com.yahoo.vespa.hosted.provision.NodeList;\n import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n+import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.JFrame;\n+import javax.swing.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNjM5OQ==", "bodyText": "huh, that was a weird exception in IntelliJ - removed and fixed.", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525206399", "createdAt": "2020-11-17T14:41:46Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "diffHunk": "@@ -11,8 +11,9 @@\n import com.yahoo.vespa.hosted.provision.NodeList;\n import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n+import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.JFrame;\n+import javax.swing.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng=="}, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 869, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}