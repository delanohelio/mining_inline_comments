{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzAwODU3", "number": 13390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowMjo1M1rOD__-zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowMjo1M1rOD__-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDM1MTUxOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowMjo1M1rOGbAHDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOToyNjo0M1rOGbBBaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2NjU0MQ==", "bodyText": "This is not needed, consider removing", "url": "https://github.com/vespa-engine/vespa/pull/13390#discussion_r430966541", "createdAt": "2020-05-27T09:02:53Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }\n+    const fieldmatch::ComputerSharedState &get_computer_shared_state() const { return _cmp_shared_state; }\n+};\n+\n+FieldMatchExecutorSharedState::FieldMatchExecutorSharedState(const IQueryEnvironment& query_env,\n+                                                             const FieldInfo& field,\n+                                                             const fieldmatch::Params& params)\n+    : Anything(),\n+      _splitter_env(query_env, field.id()),\n+      _cmp_shared_state(vespalib::make_string(\"fieldMatch(%s)\", field.name().c_str()), _splitter_env, field, params)\n+{\n+    // empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "041116aae2c8882b1dcd4e72d15036fd441a36ba"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk4MTQ4MA==", "bodyText": "Removed.", "url": "https://github.com/vespa-engine/vespa/pull/13390#discussion_r430981480", "createdAt": "2020-05-27T09:26:43Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/features/fieldmatchfeature.cpp", "diffHunk": "@@ -18,35 +18,50 @@ using CollectionType = FieldInfo::CollectionType;\n \n namespace search::features {\n \n+class FieldMatchExecutorSharedState : public Anything {\n+private:\n+    PhraseSplitterQueryEnv _splitter_env;\n+    fieldmatch::ComputerSharedState _cmp_shared_state;\n+public:\n+    FieldMatchExecutorSharedState(const fef::IQueryEnvironment& query_env,\n+                                  const fef::FieldInfo& field,\n+                                  const fieldmatch::Params& params);\n+    ~FieldMatchExecutorSharedState() override;\n+    const PhraseSplitterQueryEnv& get_phrase_splitter_query_env() const { return _splitter_env; }\n+    const fieldmatch::ComputerSharedState &get_computer_shared_state() const { return _cmp_shared_state; }\n+};\n+\n+FieldMatchExecutorSharedState::FieldMatchExecutorSharedState(const IQueryEnvironment& query_env,\n+                                                             const FieldInfo& field,\n+                                                             const fieldmatch::Params& params)\n+    : Anything(),\n+      _splitter_env(query_env, field.id()),\n+      _cmp_shared_state(vespalib::make_string(\"fieldMatch(%s)\", field.name().c_str()), _splitter_env, field, params)\n+{\n+    // empty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2NjU0MQ=="}, "originalCommit": {"oid": "041116aae2c8882b1dcd4e72d15036fd441a36ba"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1535, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}