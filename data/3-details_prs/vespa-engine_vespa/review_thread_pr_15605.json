{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDUwODYw", "number": 15605, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyNjoyNlrOE_pMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyNjoyNlrOE_pMnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTcwNzE2OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostSwitchUpdater.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoyNjoyNlrOH9daPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo0MDoxN1rOH9eGCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwNzAzNg==", "bodyText": "Could also limit this to yahoo cloud zones...", "url": "https://github.com/vespa-engine/vespa/pull/15605#discussion_r534207036", "createdAt": "2020-12-02T14:26:26Z", "author": {"login": "freva"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostSwitchUpdater.java", "diffHunk": "@@ -31,14 +36,22 @@ protected boolean maintain() {\n         Map<String, NodeEntity> nodeEntities = controller().serviceRegistry().entityService().listNodes().stream()\n                                                            .collect(Collectors.toMap(NodeEntity::hostname,\n                                                                                      Function.identity()));\n-        for (var zone : controller().zoneRegistry().zones().controllerUpgraded().all().ids()) {\n-            for (var node : nodeRepository.list(zone)) {\n-                NodeEntity nodeEntity = nodeEntities.get(node.hostname().value());\n-                if (!shouldUpdate(node, nodeEntity)) continue;\n-\n-                NodeRepositoryNode updatedNode = new NodeRepositoryNode();\n-                updatedNode.setSwitchHostname(nodeEntity.switchHostname().get());\n-                nodeRepository.patchNode(zone, node.hostname().value(), updatedNode);\n+        int nodesUpdated = 0;\n+        try {\n+            for (var zone : controller().zoneRegistry().zones().controllerUpgraded().all().ids()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bcfff52bf4982e214e31a75cab31651b03490c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxODI0OQ==", "bodyText": "Yes, but that's not available here so would have to use string. \ud83d\ude1e", "url": "https://github.com/vespa-engine/vespa/pull/15605#discussion_r534218249", "createdAt": "2020-12-02T14:40:17Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/HostSwitchUpdater.java", "diffHunk": "@@ -31,14 +36,22 @@ protected boolean maintain() {\n         Map<String, NodeEntity> nodeEntities = controller().serviceRegistry().entityService().listNodes().stream()\n                                                            .collect(Collectors.toMap(NodeEntity::hostname,\n                                                                                      Function.identity()));\n-        for (var zone : controller().zoneRegistry().zones().controllerUpgraded().all().ids()) {\n-            for (var node : nodeRepository.list(zone)) {\n-                NodeEntity nodeEntity = nodeEntities.get(node.hostname().value());\n-                if (!shouldUpdate(node, nodeEntity)) continue;\n-\n-                NodeRepositoryNode updatedNode = new NodeRepositoryNode();\n-                updatedNode.setSwitchHostname(nodeEntity.switchHostname().get());\n-                nodeRepository.patchNode(zone, node.hostname().value(), updatedNode);\n+        int nodesUpdated = 0;\n+        try {\n+            for (var zone : controller().zoneRegistry().zones().controllerUpgraded().all().ids()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwNzAzNg=="}, "originalCommit": {"oid": "99bcfff52bf4982e214e31a75cab31651b03490c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 775, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}