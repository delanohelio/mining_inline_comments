{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjg1Mjgx", "number": 11818, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozMDoxMFrODYiuzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozNTowNFrODYi2Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDYxNDU1OnYy", "diffSide": "RIGHT", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozMDoxMFrOFedapA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozMDoxMFrOFedapA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4MzU1Ng==", "bodyText": "there is already a log() above so this can be removed.", "url": "https://github.com/vespa-engine/vespa/pull/11818#discussion_r367483556", "createdAt": "2020-01-16T15:30:10Z", "author": {"login": "hakonhall"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -205,15 +209,18 @@ private void startContainer(NodeAgentContext context) {\n     private Optional<Container> removeContainerIfNeededUpdateContainerState(\n             NodeAgentContext context, Optional<Container> existingContainer) {\n         if (existingContainer.isPresent()) {\n-            Optional<String> reason = shouldRemoveContainer(context, existingContainer.get());\n-            if (reason.isPresent()) {\n-                removeContainer(context, existingContainer.get(), reason.get(), false);\n+            List<String> reasons = shouldRemoveContainer(context, existingContainer.get());\n+            if (!reasons.isEmpty()) {\n+                removeContainer(context, existingContainer.get(), reasons, false);\n                 return Optional.empty();\n             }\n \n             shouldRestartServices(context, existingContainer.get()).ifPresent(restartReason -> {\n                 context.log(logger, \"Will restart services: \" + restartReason);\n-                restartServices(context, existingContainer.get());\n+                orchestratorSuspendNode(context);\n+\n+                dockerOperations.restartVespa(context);\n+                context.log(logger, \"Restarted services\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDYzMzI2OnYy", "diffSide": "RIGHT", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozNTowNFrOFedmJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTozNTowNFrOFedmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ4NjUwMQ==", "bodyText": "I'd vote for comma-separated rather than newline, as the latter is not so good with grep and is visually extravagant.", "url": "https://github.com/vespa-engine/vespa/pull/11818#discussion_r367486501", "createdAt": "2020-01-16T15:35:04Z", "author": {"login": "hakonhall"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -286,31 +277,40 @@ public void suspend(NodeAgentContext context) {\n         }\n     }\n \n-    private Optional<String> shouldRemoveContainer(NodeAgentContext context, Container existingContainer) {\n+    private List<String> shouldRemoveContainer(NodeAgentContext context, Container existingContainer) {\n         final NodeState nodeState = context.node().state();\n-        if (nodeState == NodeState.dirty || nodeState == NodeState.provisioned) {\n-            return Optional.of(\"Node in state \" + nodeState + \", container should no longer be running\");\n-        }\n+        List<String> reasons = new ArrayList<>();\n+        if (nodeState == NodeState.dirty || nodeState == NodeState.provisioned)\n+            reasons.add(\"Node in state \" + nodeState + \", container should no longer be running\");\n+\n         if (context.node().wantedDockerImage().isPresent() &&\n                 !context.node().wantedDockerImage().get().equals(existingContainer.image)) {\n-            return Optional.of(\"The node is supposed to run a new Docker image: \"\n+            reasons.add(\"The node is supposed to run a new Docker image: \"\n                     + existingContainer.image.asString() + \" -> \" + context.node().wantedDockerImage().get().asString());\n         }\n-        if (!existingContainer.state.isRunning()) {\n-            return Optional.of(\"Container no longer running\");\n-        }\n+\n+        if (!existingContainer.state.isRunning())\n+            reasons.add(\"Container no longer running\");\n \n         if (currentRebootGeneration < context.node().wantedRebootGeneration()) {\n-            return Optional.of(String.format(\"Container reboot wanted. Current: %d, Wanted: %d\",\n+            reasons.add(String.format(\"Container reboot wanted. Current: %d, Wanted: %d\",\n                     currentRebootGeneration, context.node().wantedRebootGeneration()));\n         }\n \n-        if (containerState == STARTING) return Optional.of(\"Container failed to start\");\n-        return Optional.empty();\n+        ContainerResources wantedContainerResources = getContainerResources(context);\n+        if (!wantedContainerResources.equalsMemory(existingContainer.resources)) {\n+            reasons.add(\"Container should be running with different memory allocation, wanted: \" +\n+                    wantedContainerResources.toStringMemory() + \", actual: \" + existingContainer.resources.toStringMemory());\n+        }\n+\n+        if (containerState == STARTING)\n+            reasons.add(\"Container failed to start\");\n+\n+        return reasons;\n     }\n \n-    private void removeContainer(NodeAgentContext context, Container existingContainer, String reason, boolean alreadySuspended) {\n-        context.log(logger, \"Will remove container: \" + reason);\n+    private void removeContainer(NodeAgentContext context, Container existingContainer, List<String> reasons, boolean alreadySuspended) {\n+        context.log(logger, \"Will remove container: \" + (reasons.size() == 1 ? reasons.get(0) : \"\\n\" + String.join(\"\\n\", reasons)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abcb7bf04aff13d0390d44fbaf0fe8b88c2325d4"}, "originalPosition": 135}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2666, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}