{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTc1NDIx", "number": 15437, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NTozMVrOE8sBSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NTozMVrOE8sBSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDcxMjQxOnYy", "diffSide": "RIGHT", "path": "messagebus_test/src/tests/speed/cpp-client.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NTozMVrOH49evw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzowMzoxN1rOH4_14Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4OTU5OQ==", "bodyText": "Consider wrapping in a temporary string, data() isn't guaranteed to be null-terminated", "url": "https://github.com/vespa-engine/vespa/pull/15437#discussion_r529489599", "createdAt": "2020-11-24T11:55:31Z", "author": {"login": "vekterli"}, "path": "messagebus_test/src/tests/speed/cpp-client.cpp", "diffHunk": "@@ -76,7 +77,7 @@ Client::handleReply(Reply::UP reply) {\n         for (uint32_t i = 0; i < reply->getNumErrors(); ++i) {\n             fprintf(stderr, \"ERR[%d]: code=%d, msg=%s\\n\", i,\n                     reply->getError(i).getCode(),\n-                    reply->getError(i).getMessage().c_str());\n+                    reply->getError(i).getMessage().data());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2f13c7052267680696ed192a3789e756746c08"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUyODI4OQ==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15437#discussion_r529528289", "createdAt": "2020-11-24T13:03:17Z", "author": {"login": "baldersheim"}, "path": "messagebus_test/src/tests/speed/cpp-client.cpp", "diffHunk": "@@ -76,7 +77,7 @@ Client::handleReply(Reply::UP reply) {\n         for (uint32_t i = 0; i < reply->getNumErrors(); ++i) {\n             fprintf(stderr, \"ERR[%d]: code=%d, msg=%s\\n\", i,\n                     reply->getError(i).getCode(),\n-                    reply->getError(i).getMessage().c_str());\n+                    reply->getError(i).getMessage().data());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4OTU5OQ=="}, "originalCommit": {"oid": "3e2f13c7052267680696ed192a3789e756746c08"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 786, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}