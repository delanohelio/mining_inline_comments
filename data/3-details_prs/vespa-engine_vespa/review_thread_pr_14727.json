{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3ODUwNTUy", "number": 14727, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNzozMVrOEqUVqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNzozMVrOEqUVqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODA4ODcyOnYy", "diffSide": "RIGHT", "path": "filedistribution/src/main/java/com/yahoo/vespa/filedistribution/FileReceiver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNzozMVrOHcdA3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo0MjowNlrOHcdoPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5NzUzMw==", "bodyText": "Consider catching the particular subclass of IOException thrown when the file already exists (FileAlreadyExistsException?), and only try deletion etc then.", "url": "https://github.com/vespa-engine/vespa/pull/14727#discussion_r499597533", "createdAt": "2020-10-05T13:27:31Z", "author": {"login": "hakonhall"}, "path": "filedistribution/src/main/java/com/yahoo/vespa/filedistribution/FileReceiver.java", "diffHunk": "@@ -96,9 +96,12 @@ void addPart(int partId, byte [] part) {\n             try {\n                 Files.write(inprogressFile.toPath(), part, StandardOpenOption.WRITE, StandardOpenOption.APPEND);\n             } catch (IOException e) {\n-                log.log(Level.SEVERE, \"Failed writing to file (\" + inprogressFile.toPath() + \"): \" + e.getMessage(), e);\n-                inprogressFile.delete();\n-                throw new RuntimeException(\"Failed writing to file (\" + inprogressFile.toPath() + \"): \", e);\n+                String message = \"Failed writing to file (\" + inprogressFile.toPath() + \"): \";\n+                log.log(Level.SEVERE, message + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c67bb78209add1586b488da041a8f762926c5a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwNTQ3NA==", "bodyText": "If we fail to write to the file we need to cleanup (we append to the file, so if it fails we have no idea of what has been written). So the change is just logging if we were unable to delete the file, we always need to delete no matter what the IOException was.", "url": "https://github.com/vespa-engine/vespa/pull/14727#discussion_r499605474", "createdAt": "2020-10-05T13:38:57Z", "author": {"login": "hmusum"}, "path": "filedistribution/src/main/java/com/yahoo/vespa/filedistribution/FileReceiver.java", "diffHunk": "@@ -96,9 +96,12 @@ void addPart(int partId, byte [] part) {\n             try {\n                 Files.write(inprogressFile.toPath(), part, StandardOpenOption.WRITE, StandardOpenOption.APPEND);\n             } catch (IOException e) {\n-                log.log(Level.SEVERE, \"Failed writing to file (\" + inprogressFile.toPath() + \"): \" + e.getMessage(), e);\n-                inprogressFile.delete();\n-                throw new RuntimeException(\"Failed writing to file (\" + inprogressFile.toPath() + \"): \", e);\n+                String message = \"Failed writing to file (\" + inprogressFile.toPath() + \"): \";\n+                log.log(Level.SEVERE, message + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5NzUzMw=="}, "originalCommit": {"oid": "46c67bb78209add1586b488da041a8f762926c5a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwNzYxNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/vespa-engine/vespa/pull/14727#discussion_r499607615", "createdAt": "2020-10-05T13:42:06Z", "author": {"login": "hakonhall"}, "path": "filedistribution/src/main/java/com/yahoo/vespa/filedistribution/FileReceiver.java", "diffHunk": "@@ -96,9 +96,12 @@ void addPart(int partId, byte [] part) {\n             try {\n                 Files.write(inprogressFile.toPath(), part, StandardOpenOption.WRITE, StandardOpenOption.APPEND);\n             } catch (IOException e) {\n-                log.log(Level.SEVERE, \"Failed writing to file (\" + inprogressFile.toPath() + \"): \" + e.getMessage(), e);\n-                inprogressFile.delete();\n-                throw new RuntimeException(\"Failed writing to file (\" + inprogressFile.toPath() + \"): \", e);\n+                String message = \"Failed writing to file (\" + inprogressFile.toPath() + \"): \";\n+                log.log(Level.SEVERE, message + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5NzUzMw=="}, "originalCommit": {"oid": "46c67bb78209add1586b488da041a8f762926c5a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1198, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}