{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTg1MDg4", "number": 13230, "title": "Use syncronized to make the loadbalancer semantically thread safe.", "bodyText": "Use a cache to avoid parsing a string to get an index.\nMove test to same package to avoid public access to internal details.\n@vekterli PR\n@yngveaasheim FYI", "createdAt": "2020-05-12T21:39:46Z", "url": "https://github.com/vespa-engine/vespa/pull/13230", "merged": true, "mergeCommit": {"oid": "798b6768616d74a274677cd5be3671a3acea9244"}, "closed": true, "closedAt": "2020-05-13T10:35:05Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgrQEuAH2gAyNDE2OTg1MDg4OmNmMjE0ZDYyZTJlYWJhMGI0MTNmZWVjMGZjNTI1MTQyNjk4YThmZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg2YAMgH2gAyNDE2OTg1MDg4OjFmZjNkZjJhMDkxZTk5NTQwZDBiZDdkMjYxOWQ1NzFkNmQ3ZTNlZDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf214d62e2eaba0b413feec0fc525142698a8fda", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/cf214d62e2eaba0b413feec0fc525142698a8fda", "committedDate": "2020-05-12T21:35:08Z", "message": "Use syncronized to make the loadbalancer semantically thread safe.\nUse a cache to avoid parsing a string to get an index.\nMove test to same package to avoid public access to internal details."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNzAzODYx", "url": "https://github.com/vespa-engine/vespa/pull/13230#pullrequestreview-410703861", "createdAt": "2020-05-13T08:32:16Z", "commit": {"oid": "cf214d62e2eaba0b413feec0fc525142698a8fda"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODozMjoxNlrOGUnFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwOTowMDoxMVrOGUoL8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2NTE1Mw==", "bodyText": "Could use cachedIndex.computeIfAbsent here instead of explicit branch (though not needing a lambda might be faster?)", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424265153", "createdAt": "2020-05-13T08:32:16Z", "author": {"login": "vekterli"}, "path": "documentapi/src/main/java/com/yahoo/documentapi/messagebus/protocol/LoadBalancer.java", "diffHunk": "@@ -54,6 +55,14 @@ public int getIndex(String nodeName) {\n             throw new IllegalArgumentException(err, e);\n         }\n     }\n+    private int getCachedIndex(String nodeName) {\n+        Integer index = cachedIndex.get(nodeName);\n+        if (index == null) {\n+            index = getIndex(nodeName);\n+            cachedIndex.put(nodeName, index);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf214d62e2eaba0b413feec0fc525142698a8fda"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MzEyMw==", "bodyText": "The returned NodeMetrics object is shared and thus may be read outside the lock whilst concurrently being updated by another thread. Is this a problem? Should we deep-copy the metrics to make sure they're internally consistent? This is not something introduced by this PR, but just a general observation.", "url": "https://github.com/vespa-engine/vespa/pull/13230#discussion_r424283123", "createdAt": "2020-05-13T09:00:11Z", "author": {"login": "vekterli"}, "path": "documentapi/src/main/java/com/yahoo/documentapi/messagebus/protocol/LoadBalancer.java", "diffHunk": "@@ -68,24 +77,24 @@ public Node getRecipient(List<Mirror.Entry> choices) {\n \n         double weightSum = 0.0;\n         Node selectedNode = null;\n-        double position = safePosition.get();\n-        for (Mirror.Entry entry : choices) {\n-            NodeMetrics nodeMetrics = getNodeMetrics(entry);\n+        synchronized (this) {\n+            for (Mirror.Entry entry : choices) {\n+                NodeMetrics nodeMetrics = getNodeMetrics(entry);\n \n-            weightSum += nodeMetrics.weight;\n+                weightSum += nodeMetrics.weight;\n \n-            if (weightSum > position) {\n-                selectedNode = new Node(entry, nodeMetrics);\n-                break;\n+                if (weightSum > position) {\n+                    selectedNode = new Node(entry, nodeMetrics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf214d62e2eaba0b413feec0fc525142698a8fda"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ff3df2a091e99540d0bd7d2619d571d6d7e3ed8", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/1ff3df2a091e99540d0bd7d2619d571d6d7e3ed8", "committedDate": "2020-05-13T10:32:45Z", "message": "Use computeIfAbsent"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3236, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}