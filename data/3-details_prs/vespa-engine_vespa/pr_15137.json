{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTYyNDk2", "number": 15137, "title": "Apply diff entries using async spi methods during bucket merge.", "bodyText": "@vekterli : please review\n@baldersheim : FYI", "createdAt": "2020-11-02T10:36:09Z", "url": "https://github.com/vespa-engine/vespa/pull/15137", "merged": true, "mergeCommit": {"oid": "178ed0f20f5f93fba4258ace0c4d9e7905608b53"}, "closed": true, "closedAt": "2020-11-02T16:47:35Z", "author": {"login": "toregge"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYh_pKAH2gAyNTEzOTYyNDk2OmU2YTFlMjFmMWY3ZTNjNTRkMjg3MjNhZjA4YjkwYWEwYTc2YTgwMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYlvTDAFqTUyMTY5NjM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6a1e21f1f7e3c54d28723af08b90aa0a76a8028", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/e6a1e21f1f7e3c54d28723af08b90aa0a76a8028", "committedDate": "2020-11-02T10:27:48Z", "message": "Apply diff entries using async spi methods during bucket merge."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjE1NDI2", "url": "https://github.com/vespa-engine/vespa/pull/15137#pullrequestreview-521615426", "createdAt": "2020-11-02T13:13:34Z", "commit": {"oid": "e6a1e21f1f7e3c54d28723af08b90aa0a76a8028"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMzozNVrOHsD0ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxODowNlrOHsD_Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MTk3OQ==", "bodyText": "Consider calling this something like wait_and_check_result() to indicate it also waits for the result to be available (or split into two functions)", "url": "https://github.com/vespa-engine/vespa/pull/15137#discussion_r515961979", "createdAt": "2020-11-02T13:13:35Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/apply_bucket_diff_entry_result.h", "diffHunk": "@@ -0,0 +1,30 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/document/base/documentid.h>\n+#include <vespa/persistence/spi/bucket.h>\n+#include <future>\n+\n+namespace storage::spi { class Result; }\n+\n+namespace storage {\n+\n+/*\n+ * Result of a bucket diff entry spi operation (putAsync or removeAsync)\n+ */\n+class ApplyBucketDiffEntryResult {\n+    using FutureResult = std::future<std::unique_ptr<spi::Result>>;\n+    FutureResult         _future_result;\n+    spi::Bucket          _bucket;\n+    document::DocumentId _doc_id;\n+    const char*          _op;\n+\n+public:\n+    ApplyBucketDiffEntryResult(FutureResult future_result, spi::Bucket bucket, document::DocumentId doc_id, const char *op);\n+    ApplyBucketDiffEntryResult(ApplyBucketDiffEntryResult &&rhs);\n+    ~ApplyBucketDiffEntryResult();\n+    void check_result();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6a1e21f1f7e3c54d28723af08b90aa0a76a8028"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MjQ5MQ==", "bodyText": "Should we split this into two phases (wait phase and check_result phase) to ensure all async ops have completed before potentially throwing an exception out of this method?", "url": "https://github.com/vespa-engine/vespa/pull/15137#discussion_r515962491", "createdAt": "2020-11-02T13:14:27Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/mergehandler.cpp", "diffHunk": "@@ -617,9 +607,12 @@ MergeHandler::applyDiffLocally(\n         LOG(spam, \"ApplyBucketDiff(%s): Adding slot %s\",\n             bucket.toString().c_str(), e.toString().c_str());\n \n-        applyDiffEntry(bucket, e, context, repo);\n+        async_results.push_back(applyDiffEntry(bucket, e, context, repo));\n         byteCount += e._headerBlob.size() + e._bodyBlob.size();\n     }\n+    for (auto &result_to_check : async_results) {\n+        result_to_check.check_result();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6a1e21f1f7e3c54d28723af08b90aa0a76a8028"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2NDY4Mw==", "bodyText": "Can onComplete for different document instances in the same merge be called from multiple threads concurrently? If so, this might race. Consider passing the elapsed time to the result future and aggregate this as part of the async result processing in the main merge handling thread.", "url": "https://github.com/vespa-engine/vespa/pull/15137#discussion_r515964683", "createdAt": "2020-11-02T13:18:06Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/apply_bucket_diff_entry_complete.cpp", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"apply_bucket_diff_entry_complete.h\"\n+#include <cassert>\n+\n+namespace storage {\n+\n+ApplyBucketDiffEntryComplete::ApplyBucketDiffEntryComplete(ResultPromise result_promise, const framework::Clock& clock, metrics::DoubleAverageMetric& latency_metric)\n+    : _result_handler(nullptr),\n+      _result_promise(std::move(result_promise)),\n+      _start_time(clock),\n+      _latency_metric(latency_metric)\n+{\n+}\n+\n+ApplyBucketDiffEntryComplete::~ApplyBucketDiffEntryComplete() = default;\n+\n+void\n+ApplyBucketDiffEntryComplete::onComplete(std::unique_ptr<spi::Result> result)\n+{\n+    if (_result_handler != nullptr) {\n+        _result_handler->handle(*result);\n+    }\n+    _result_promise.set_value(std::move(result));\n+    _latency_metric.addValue(_start_time.getElapsedTimeAsDouble());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6a1e21f1f7e3c54d28723af08b90aa0a76a8028"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7713d8cccb1d5a2d852f4910706642029c02c4e", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/b7713d8cccb1d5a2d852f4910706642029c02c4e", "committedDate": "2020-11-02T14:05:51Z", "message": "Move wait out of check_result.\nPass elapsed time along with result and update metric after having\nchecked the result."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjk2MzQz", "url": "https://github.com/vespa-engine/vespa/pull/15137#pullrequestreview-521696343", "createdAt": "2020-11-02T14:49:34Z", "commit": {"oid": "b7713d8cccb1d5a2d852f4910706642029c02c4e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2094, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}