{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTEyMjM5", "number": 13592, "title": "Two phase put in attribute writer", "bodyText": "@toregge please review\n@baldersheim @arnej27959 FYI", "createdAt": "2020-06-15T12:36:44Z", "url": "https://github.com/vespa-engine/vespa/pull/13592", "merged": true, "mergeCommit": {"oid": "6ee498d929b54202ea4b8881336bc6aa6dda7aa4"}, "closed": true, "closedAt": "2020-06-15T14:32:28Z", "author": {"login": "geirst"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrcDYwAH2gAyNDM0NTEyMjM5OjU4N2RjZmI3NWM4NDBmNjBlZDc2ZTRhZjZmNWIwNmE0MjhkMWZlZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrg_TgAFqTQzMDY2MjczNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "587dcfb75c840f60ed76e4af6f5b06a428d1fef5", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/587dcfb75c840f60ed76e4af6f5b06a428d1fef5", "committedDate": "2020-06-15T08:05:52Z", "message": "Simplify attribute writer tests by using mock attribute manager."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a600b2141c93c668d0f6aa4c2b5bc680e8eaf380", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/a600b2141c93c668d0f6aa4c2b5bc680e8eaf380", "committedDate": "2020-06-15T08:05:52Z", "message": "Rename variable '_m' -> '_mgr'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0fa90a06966d7f6411e915b7c0d6906c53b130", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/8c0fa90a06966d7f6411e915b7c0d6906c53b130", "committedDate": "2020-06-15T08:05:53Z", "message": "Implement initial support for two-phase puts in attribute writer.\n\nThis is only turned on for tensor attributes with a hnsw index that allows multi-threaded indexing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ce676f7de72f90cd5919c33d2fa3fb6ec76c4f", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/f0ce676f7de72f90cd5919c33d2fa3fb6ec76c4f", "committedDate": "2020-06-15T12:00:36Z", "message": "Test that attribute writer can handle put in two phases."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b17ee23a6fd3c81ffc5ca8505b74ac922a6f6165", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/b17ee23a6fd3c81ffc5ca8505b74ac922a6f6165", "committedDate": "2020-06-15T12:34:58Z", "message": "Remove default tensor spec in doctype builder."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjI4NDI5", "url": "https://github.com/vespa-engine/vespa/pull/13592#pullrequestreview-430628429", "createdAt": "2020-06-15T13:11:46Z", "commit": {"oid": "b17ee23a6fd3c81ffc5ca8505b74ac922a6f6165"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxMTo0NlrOGjxggg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzoxMTo0NlrOGjxggg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE2NDQ4Mg==", "bodyText": "This will hang if promise is never set, e.g. when PreparePutTask::run() doesn't set promise due to field value not being set.", "url": "https://github.com/vespa-engine/vespa/pull/13592#discussion_r440164482", "createdAt": "2020-06-15T13:11:46Z", "author": {"login": "toregge"}, "path": "searchcore/src/vespa/searchcore/proton/attribute/attribute_writer.cpp", "diffHunk": "@@ -303,6 +351,101 @@ PutTask::run()\n     }\n }\n \n+\n+class PreparePutTask : public vespalib::Executor::Task {\n+private:\n+    const SerialNum _serial_num;\n+    const uint32_t _docid;\n+    AttributeVector& _attr;\n+    FieldValue::SP _field_value;\n+    std::promise<std::unique_ptr<PrepareResult>> _result_promise;\n+\n+public:\n+    PreparePutTask(SerialNum serial_num_in,\n+                   uint32_t docid_in,\n+                   const AttributeWriter::WriteField& field,\n+                   std::shared_ptr<DocumentFieldExtractor> field_extractor);\n+    ~PreparePutTask() override;\n+    void run() override;\n+    SerialNum serial_num() const { return _serial_num; }\n+    uint32_t docid() const { return _docid; }\n+    AttributeVector& attr() { return _attr; }\n+    FieldValue::SP field_value() { return _field_value; }\n+    std::future<std::unique_ptr<PrepareResult>> result_future() {\n+        return _result_promise.get_future();\n+    }\n+};\n+\n+PreparePutTask::PreparePutTask(SerialNum serial_num_in,\n+                               uint32_t docid_in,\n+                               const AttributeWriter::WriteField& field,\n+                               std::shared_ptr<DocumentFieldExtractor> field_extractor)\n+    : _serial_num(serial_num_in),\n+      _docid(docid_in),\n+      _attr(field.getAttribute()),\n+      _field_value(),\n+      _result_promise()\n+{\n+    // Note: No need to store the field extractor as we are not extracting struct fields.\n+    auto value = field_extractor->getFieldValue(field.getFieldPath());\n+    _field_value.reset(value.release());\n+}\n+\n+PreparePutTask::~PreparePutTask() = default;\n+\n+void\n+PreparePutTask::run()\n+{\n+    if (_attr.getStatus().getLastSyncToken() < _serial_num) {\n+        if (_field_value.get()) {\n+            _result_promise.set_value(AttributeUpdater::prepare_set_value(_attr, _docid, *_field_value));\n+        }\n+    }\n+}\n+\n+class CompletePutTask : public vespalib::Executor::Task {\n+private:\n+    const SerialNum _serial_num;\n+    const uint32_t _docid;\n+    AttributeVector& _attr;\n+    FieldValue::SP _field_value;\n+    std::future<std::unique_ptr<PrepareResult>> _result_future;\n+    const bool _immediate_commit;\n+    std::remove_reference_t<AttributeWriter::OnWriteDoneType> _on_write_done;\n+\n+public:\n+    CompletePutTask(PreparePutTask& prepare_task,\n+                    bool immediate_commit,\n+                    AttributeWriter::OnWriteDoneType on_write_done);\n+    ~CompletePutTask() override;\n+    void run() override;\n+};\n+\n+CompletePutTask::CompletePutTask(PreparePutTask& prepare_task,\n+                                 bool immediate_commit,\n+                                 AttributeWriter::OnWriteDoneType on_write_done)\n+    : _serial_num(prepare_task.serial_num()),\n+      _docid(prepare_task.docid()),\n+      _attr(prepare_task.attr()),\n+      _field_value(prepare_task.field_value()),\n+      _result_future(prepare_task.result_future()),\n+      _immediate_commit(immediate_commit),\n+      _on_write_done(on_write_done)\n+{\n+}\n+\n+CompletePutTask::~CompletePutTask() = default;\n+\n+void\n+CompletePutTask::run()\n+{\n+    if (_attr.getStatus().getLastSyncToken() < _serial_num) {\n+        auto result = _result_future.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17ee23a6fd3c81ffc5ca8505b74ac922a6f6165"}, "originalPosition": 248}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a507d071f8c5f5922351e55fc23a7b12ab9c3968", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/a507d071f8c5f5922351e55fc23a7b12ab9c3968", "committedDate": "2020-06-15T13:31:54Z", "message": "Avoid deadlock if field value is not set in two phase put."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjYyNzM3", "url": "https://github.com/vespa-engine/vespa/pull/13592#pullrequestreview-430662737", "createdAt": "2020-06-15T13:50:56Z", "commit": {"oid": "a507d071f8c5f5922351e55fc23a7b12ab9c3968"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3643, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}