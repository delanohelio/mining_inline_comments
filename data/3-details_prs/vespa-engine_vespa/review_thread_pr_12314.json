{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzI4NzE3", "number": 12314, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzo1MToxNlrODiKxcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyODozOFrODiQYKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTU0NjcyOnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNzo1MToxNlrOFtR9ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxODo1MjozNVrOFtSO8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNDU0Nw==", "bodyText": "What if activate() throws?", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383024547", "createdAt": "2020-02-23T17:51:16Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java", "diffHunk": "@@ -51,9 +51,19 @@ public InfraDeployerImpl(NodeRepository nodeRepository, Provisioner provisioner,\n     }\n \n     @Override\n-    public Map<ApplicationId, Deployment> getSupportedInfraDeployments() {\n-        return duperModel.getSupportedInfraApplications().stream()\n-                .collect(Collectors.toMap(InfraApplicationApi::getApplicationId, InfraDeployment::new));\n+    public void activateAllSupportedInfraApplications() {\n+        duperModel.getSupportedInfraApplications().forEach(api -> {\n+            var application = api.getApplicationId();\n+            var deployment = new InfraDeployment(api);\n+            try {\n+                deployment.activate();\n+            } catch (RuntimeException e) {\n+                logger.log(LogLevel.INFO, \"Failed to activate \" + application, e);\n+                // loop around to activate the next application\n+            }\n+        });\n+\n+        duperModel.infraApplicationsIsNowComplete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "988131792a9bf0cd22072622ec3ffd2d62efa62d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyODk3Nw==", "bodyText": "I'm not sure. On one hand we do not want to mark the duper model as complete. But on the other hand, it would be wrong to start the config server without the required infra apps. But failing construction might also be a bit dangerous if the failure is triggered by zk data it is hard to inspect as the zk server is brought down if the config server goes down.\nSo we should trigger deploy in InfrastructureProvisioner constructor and let RuntimeException propagate there (but not in maintain()) after a delay of say 1m, to fail config server startup?", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383028977", "createdAt": "2020-02-23T18:52:35Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/InfraDeployerImpl.java", "diffHunk": "@@ -51,9 +51,19 @@ public InfraDeployerImpl(NodeRepository nodeRepository, Provisioner provisioner,\n     }\n \n     @Override\n-    public Map<ApplicationId, Deployment> getSupportedInfraDeployments() {\n-        return duperModel.getSupportedInfraApplications().stream()\n-                .collect(Collectors.toMap(InfraApplicationApi::getApplicationId, InfraDeployment::new));\n+    public void activateAllSupportedInfraApplications() {\n+        duperModel.getSupportedInfraApplications().forEach(api -> {\n+            var application = api.getApplicationId();\n+            var deployment = new InfraDeployment(api);\n+            try {\n+                deployment.activate();\n+            } catch (RuntimeException e) {\n+                logger.log(LogLevel.INFO, \"Failed to activate \" + application, e);\n+                // loop around to activate the next application\n+            }\n+        });\n+\n+        duperModel.infraApplicationsIsNowComplete();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNDU0Nw=="}, "originalCommit": {"oid": "988131792a9bf0cd22072622ec3ffd2d62efa62d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjQ2NTA0OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOToyODozOFrOFtZ2Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTozNTo1MlrOFtaD_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzY3NA==", "bodyText": "Consider moving this to NodeRepositoryMaintenance or remove \n  \n    \n      vespa/node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeRepositoryMaintenance.java\n    \n    \n         Line 90\n      in\n      6c122d4\n    \n    \n    \n    \n\n        \n          \n           infrastructureProvisioner.maintain();", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383153674", "createdAt": "2020-02-24T09:28:38Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java", "diffHunk": "@@ -23,17 +23,22 @@\n     InfrastructureProvisioner(NodeRepository nodeRepository, InfraDeployer infraDeployer, Duration interval) {\n         super(nodeRepository, interval);\n         this.infraDeployer = infraDeployer;\n+\n+        // If this fails, we fail the component graph construction and bootstrap of config server,\n+        // which is what we want.\n+        try {\n+            infraDeployer.activateAllSupportedInfraApplications(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "515c4ff32934e98fef121c7388f2f3703f09d897"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1NzI0Ng==", "bodyText": "Nice catch. I renamed and kept the call from NodeRepositoryMaintenance().", "url": "https://github.com/vespa-engine/vespa/pull/12314#discussion_r383157246", "createdAt": "2020-02-24T09:35:52Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/InfrastructureProvisioner.java", "diffHunk": "@@ -23,17 +23,22 @@\n     InfrastructureProvisioner(NodeRepository nodeRepository, InfraDeployer infraDeployer, Duration interval) {\n         super(nodeRepository, interval);\n         this.infraDeployer = infraDeployer;\n+\n+        // If this fails, we fail the component graph construction and bootstrap of config server,\n+        // which is what we want.\n+        try {\n+            infraDeployer.activateAllSupportedInfraApplications(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MzY3NA=="}, "originalCommit": {"oid": "515c4ff32934e98fef121c7388f2f3703f09d897"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}