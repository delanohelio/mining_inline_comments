{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDkwMzA1", "number": 15533, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjoyMDo1OFrOE-oP_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjoyMTo0MFrOE-oQ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTA2NjIyOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/test/reference_evaluation.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjoyMDo1OFrOH74sTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxODoyM1rOH76r6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1Njg3OA==", "bodyText": "should no longer normalize here, since it is done in eval_node instead", "url": "https://github.com/vespa-engine/vespa/pull/15533#discussion_r532556878", "createdAt": "2020-11-30T12:20:58Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/test/reference_evaluation.cpp", "diffHunk": "@@ -135,7 +130,7 @@ struct EvalNode : public NodeVisitor {\n                 }\n             }\n         }\n-        result = ReferenceOperations::peek(param, spec, children).normalize();\n+        result = ReferenceOperations::peek(spec, children).normalize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c12600e5f86cdcd8ae66f88dc3ad5b0f383ceca"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4OTU0Ng==", "bodyText": "fixed by rebasing and resolving conflicts", "url": "https://github.com/vespa-engine/vespa/pull/15533#discussion_r532589546", "createdAt": "2020-11-30T13:18:23Z", "author": {"login": "arnej27959"}, "path": "eval/src/vespa/eval/eval/test/reference_evaluation.cpp", "diffHunk": "@@ -135,7 +130,7 @@ struct EvalNode : public NodeVisitor {\n                 }\n             }\n         }\n-        result = ReferenceOperations::peek(param, spec, children).normalize();\n+        result = ReferenceOperations::peek(spec, children).normalize();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1Njg3OA=="}, "originalCommit": {"oid": "4c12600e5f86cdcd8ae66f88dc3ad5b0f383ceca"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTA2ODY3OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/test/reference_operations.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjoyMTo0MFrOH74txQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxODozNlrOH76saA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NzI1Mw==", "bodyText": "should also check for empty children", "url": "https://github.com/vespa-engine/vespa/pull/15533#discussion_r532557253", "createdAt": "2020-11-30T12:21:40Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/test/reference_operations.cpp", "diffHunk": "@@ -175,14 +175,15 @@ TensorSpec ReferenceOperations::merge(const TensorSpec &a, const TensorSpec &b,\n }\n \n \n-TensorSpec ReferenceOperations::peek(const TensorSpec &param, const PeekSpec &peek_spec, const std::vector<TensorSpec> &children) {\n+TensorSpec ReferenceOperations::peek(const PeekSpec &peek_spec, const std::vector<TensorSpec> &children) {\n     if (peek_spec.empty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c12600e5f86cdcd8ae66f88dc3ad5b0f383ceca"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4OTY3Mg==", "bodyText": "fixed", "url": "https://github.com/vespa-engine/vespa/pull/15533#discussion_r532589672", "createdAt": "2020-11-30T13:18:36Z", "author": {"login": "arnej27959"}, "path": "eval/src/vespa/eval/eval/test/reference_operations.cpp", "diffHunk": "@@ -175,14 +175,15 @@ TensorSpec ReferenceOperations::merge(const TensorSpec &a, const TensorSpec &b,\n }\n \n \n-TensorSpec ReferenceOperations::peek(const TensorSpec &param, const PeekSpec &peek_spec, const std::vector<TensorSpec> &children) {\n+TensorSpec ReferenceOperations::peek(const PeekSpec &peek_spec, const std::vector<TensorSpec> &children) {\n     if (peek_spec.empty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NzI1Mw=="}, "originalCommit": {"oid": "4c12600e5f86cdcd8ae66f88dc3ad5b0f383ceca"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 743, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}