{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwOTM0NDcx", "number": 15589, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1MzoyOFrOE_lXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1MzoyOFrOE_lXfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTA3OTY1OnYy", "diffSide": "RIGHT", "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/ZooKeeperRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1MzoyOFrOH9Xb9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMTo1OToyM1rOH9Xp0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwOTE3Mg==", "bodyText": "Wait for shutdown?", "url": "https://github.com/vespa-engine/vespa/pull/15589#discussion_r534109172", "createdAt": "2020-12-02T11:53:28Z", "author": {"login": "mpolden"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/ZooKeeperRunner.java", "diffHunk": "@@ -18,31 +25,42 @@\n public class ZooKeeperRunner implements Runnable {\n     private static final Logger log = java.util.logging.Logger.getLogger(ZooKeeperRunner.class.getName());\n \n-    private final Thread zkServerThread;\n+    private final ExecutorService executorService;\n     private final ZookeeperServerConfig zookeeperServerConfig;\n \n     public ZooKeeperRunner(ZookeeperServerConfig zookeeperServerConfig) {\n         this.zookeeperServerConfig = zookeeperServerConfig;\n         new Configurator(zookeeperServerConfig).writeConfigToDisk(TransportSecurityUtils.getOptions());\n-        zkServerThread = new Thread(this, \"zookeeper server\");\n-        zkServerThread.start();\n+        executorService = Executors.newSingleThreadExecutor(new DaemonThreadFactory(\"zookeeper server\"));\n+        executorService.submit(this);\n     }\n \n     void shutdown() {\n-        zkServerThread.interrupt();\n-        try {\n-            zkServerThread.join();\n-        } catch (InterruptedException e) {\n-            log.log(Level.WARNING, \"Error joining server thread on shutdown\", e);\n-        }\n+        executorService.shutdownNow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f49e6fd076a82050a9b3937d542a8518e89306"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDExMjcyMw==", "bodyText": "Yep.", "url": "https://github.com/vespa-engine/vespa/pull/15589#discussion_r534112723", "createdAt": "2020-12-02T11:59:23Z", "author": {"login": "hmusum"}, "path": "zookeeper-server/zookeeper-server-3.5.6/src/main/java/com/yahoo/vespa/zookeeper/ZooKeeperRunner.java", "diffHunk": "@@ -18,31 +25,42 @@\n public class ZooKeeperRunner implements Runnable {\n     private static final Logger log = java.util.logging.Logger.getLogger(ZooKeeperRunner.class.getName());\n \n-    private final Thread zkServerThread;\n+    private final ExecutorService executorService;\n     private final ZookeeperServerConfig zookeeperServerConfig;\n \n     public ZooKeeperRunner(ZookeeperServerConfig zookeeperServerConfig) {\n         this.zookeeperServerConfig = zookeeperServerConfig;\n         new Configurator(zookeeperServerConfig).writeConfigToDisk(TransportSecurityUtils.getOptions());\n-        zkServerThread = new Thread(this, \"zookeeper server\");\n-        zkServerThread.start();\n+        executorService = Executors.newSingleThreadExecutor(new DaemonThreadFactory(\"zookeeper server\"));\n+        executorService.submit(this);\n     }\n \n     void shutdown() {\n-        zkServerThread.interrupt();\n-        try {\n-            zkServerThread.join();\n-        } catch (InterruptedException e) {\n-            log.log(Level.WARNING, \"Error joining server thread on shutdown\", e);\n-        }\n+        executorService.shutdownNow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEwOTE3Mg=="}, "originalCommit": {"oid": "f0f49e6fd076a82050a9b3937d542a8518e89306"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 767, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}