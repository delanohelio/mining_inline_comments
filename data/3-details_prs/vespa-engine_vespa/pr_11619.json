{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTAzOTE2", "number": 11619, "title": "Balder/add executeinfo", "bodyText": "@havardpe and @geirst PR\nThe intention is to provide more information to fetchPostings making it easier to make smarter decisions.", "createdAt": "2020-01-01T17:17:07Z", "url": "https://github.com/vespa-engine/vespa/pull/11619", "merged": true, "mergeCommit": {"oid": "3e38f14c1231e0278010fb24c348df504c64dcbc"}, "closed": true, "closedAt": "2020-01-02T21:04:59Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb1yuN5gH2gAyMzU4NTAzOTE2OjdkN2I0NmYwMTJiNGY5YmJkNDE2ZjE3YTk0NTIwNGFjYzI4YzZhZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb2fNHEgH2gAyMzU4NTAzOTE2OmJiZDlmMTA5NjhmOTI5Y2U0YjFmYjgxZmZiNTE5YWU0ZDhiZjY5NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d7b46f012b4f9bbd416f17a945204acc28c6ae5", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/7d7b46f012b4f9bbd416f17a945204acc28c6ae5", "committedDate": "2019-12-31T15:58:39Z", "message": "Add ExecutionInfo to propagate more information than just strictness to fetchPostings.\nThe estimated hitrate that each iterator will will enable smarter query evaluation.\nEspecially will it be possible to figure out if static up front cost can be avoided."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064f0df79bf38da6e9c372096e25a818c2561ae3", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/064f0df79bf38da6e9c372096e25a818c2561ae3", "committedDate": "2020-01-01T17:12:26Z", "message": "Reduce code visibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ba19f37f37d22262b32da29372e94f87f3a97f5", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/1ba19f37f37d22262b32da29372e94f87f3a97f5", "committedDate": "2020-01-01T17:12:44Z", "message": "Add test for AndBlueprint.fetchPostings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce77fff993f6bab999bcf70cdcc255dbeb161d19", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/ce77fff993f6bab999bcf70cdcc255dbeb161d19", "committedDate": "2020-01-01T17:12:45Z", "message": "Implement AndBlueprint.fetchPostings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5be349db2d4bef3f53be62fd7cbee9f8a8b9cd", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/4f5be349db2d4bef3f53be62fd7cbee9f8a8b9cd", "committedDate": "2020-01-01T21:41:30Z", "message": "Consider estimated hitrate."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "882f1e57e3b48d53be0806f94bcb013be26cd576", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/882f1e57e3b48d53be0806f94bcb013be26cd576", "committedDate": "2020-01-01T22:23:32Z", "message": "Add definition to avoid missing symbols at -O0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/34191ac5578bb8d1fb487382a831d6901644db8d", "committedDate": "2020-01-02T09:38:54Z", "message": "Specify fast search explicit in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NjU5NjU5", "url": "https://github.com/vespa-engine/vespa/pull/11619#pullrequestreview-337659659", "createdAt": "2020-01-02T13:35:32Z", "commit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzozNTozMlrOFZrrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxMzo0Nzo1NlrOFZr5cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NDMxMw==", "bodyText": "since strictness is handled externally, maybe this function should only be about hit ratios?", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362474313", "createdAt": "2020-01-02T13:35:32Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -308,6 +317,13 @@ IntermediateBlueprint::calculateState() const\n     return state;\n }\n \n+ExecuteInfo\n+IntermediateBlueprint::computeNext(const Blueprint & child, const ExecuteInfo & execInfo) const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NDg2Mg==", "bodyText": "minor consistency issue: asking if a non-existing child should inherit strictness. (not an actual issue in foreseeable future)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362474862", "createdAt": "2020-01-02T13:37:25Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -403,11 +419,13 @@ IntermediateBlueprint::visitMembers(vespalib::ObjectVisitor &visitor) const\n }\n \n void\n-IntermediateBlueprint::fetchPostings(bool strict)\n+IntermediateBlueprint::fetchPostings(const ExecuteInfo &execInfo)\n {\n+    ExecuteInfo childInfo = ExecuteInfo(execInfo.isStrict() && inheritStrict(0), execInfo.hitRate());\n     for (size_t i = 0; i < _children.size(); ++i) {\n-        bool strictChild = (strict && inheritStrict(i));\n-        _children[i]->fetchPostings(strictChild);\n+        Blueprint & child = *_children[i];\n+        child.fetchPostings(childInfo);\n+        childInfo = computeNext(child, ExecuteInfo(execInfo.isStrict() && inheritStrict(i+1), childInfo.hitRate()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NTQ5Nw==", "bodyText": "Maybe the FALSE one should actually be false.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362475497", "createdAt": "2020-01-02T13:39:45Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.cpp", "diffHunk": "@@ -0,0 +1,20 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"executeinfo.h\"\n+\n+namespace search::queryeval {\n+\n+const ExecuteInfo ExecuteInfo::TRUE(true, 1.0);\n+const ExecuteInfo ExecuteInfo::FALSE(true, 1.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njc5Mw==", "bodyText": "consider using 0.0 as default (is this only needed by tests?)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362476793", "createdAt": "2020-01-02T13:43:59Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3Njk1MA==", "bodyText": "consider hiding this if the create function is preferred.", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362476950", "createdAt": "2020-01-02T13:44:33Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/executeinfo.h", "diffHunk": "@@ -0,0 +1,29 @@\n+// Copyright 2019 Oath inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+namespace search::queryeval {\n+\n+    /**\n+     * Holds information about how query will be executed and how large part of corpus will pass through.\n+     * @author baldersheim\n+     */\n+class ExecuteInfo {\n+public:\n+    ExecuteInfo() : ExecuteInfo(false, 1.0) { }\n+    ExecuteInfo(bool strict, double hitRate_in)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3NzkzOA==", "bodyText": "the blueprint already has a function called hit_ratio that does this conversion (estimate to ratio)", "url": "https://github.com/vespa-engine/vespa/pull/11619#discussion_r362477938", "createdAt": "2020-01-02T13:47:56Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.cpp", "diffHunk": "@@ -243,6 +243,11 @@ AndBlueprint::createIntermediateSearch(const MultiSearch::Children &subSearches,\n     return SearchIterator::UP(search);\n }\n \n+ExecuteInfo\n+AndBlueprint::computeNext(const Blueprint & child, const ExecuteInfo &execInfo) const {\n+    return ExecuteInfo(execInfo.isStrict(), (execInfo.hitRate()*child.getState().estimate().estHits)/get_docid_limit());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34191ac5578bb8d1fb487382a831d6901644db8d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbd9f10968f929ce4b1fb81ffb519ae4d8bf6973", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/bbd9f10968f929ce4b1fb81ffb519ae4d8bf6973", "committedDate": "2020-01-02T19:48:13Z", "message": "Follow up review comments."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4999, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}