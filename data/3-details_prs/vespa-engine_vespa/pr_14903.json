{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTA2MDcx", "number": 14903, "title": "There will always be a sequencer.", "bodyText": "@vekterli or @geirst PR", "createdAt": "2020-10-15T13:29:49Z", "url": "https://github.com/vespa-engine/vespa/pull/14903", "merged": true, "mergeCommit": {"oid": "7b9f1598f5125dc792bb451ae5e4bd9fd44f8c55"}, "closed": true, "closedAt": "2020-10-15T14:09:40Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSxyQlgH2gAyNTA0MTA2MDcxOmU0ZTYxYzk2MzgxMjQ3OWM5MGM1NzZmMDI5MTA0M2EwZDE2ZDhlNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSyM5qgFqTUwOTQwNzE2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e4e61c963812479c90c576f0291043a0d16d8e5d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/e4e61c963812479c90c576f0291043a0d16d8e5d", "committedDate": "2020-10-15T13:28:07Z", "message": "There will always be a sequencer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDA3MTYz", "url": "https://github.com/vespa-engine/vespa/pull/14903#pullrequestreview-509407163", "createdAt": "2020-10-15T13:56:17Z", "commit": {"oid": "e4e61c963812479c90c576f0291043a0d16d8e5d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo1NjoxOFrOHiJIWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo1NjoxOFrOHiJIWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU2MzIyNg==", "bodyText": "Intentional change?", "url": "https://github.com/vespa-engine/vespa/pull/14903#discussion_r505563226", "createdAt": "2020-10-15T13:56:18Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/persistence/filestorage/filestormanager.cpp", "diffHunk": "@@ -86,7 +86,7 @@ FileStorManager::print(std::ostream& out, bool verbose, const std::string& inden\n namespace {\n \n uint32_t computeNumResponseThreads(int configured) {\n-    return (configured < 0) ? std::max(1u, std::thread::hardware_concurrency()/4) : configured;\n+    return (configured <= 0) ? std::max(1u, std::thread::hardware_concurrency()/4) : configured;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e61c963812479c90c576f0291043a0d16d8e5d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2426, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}