{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODI2ODE5", "number": 12597, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowMzoxMlrODpBYpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowMzoxMlrODpBYpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzQwOTAyOnYy", "diffSide": "RIGHT", "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/ControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowMzoxMlrOF37rBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowMzoxMlrOF37rBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5MzY3MA==", "bodyText": "Perhaps add a test with a deployment scenario, where one app is unreadable?", "url": "https://github.com/vespa-engine/vespa/pull/12597#discussion_r394193670", "createdAt": "2020-03-18T09:03:12Z", "author": {"login": "jonmv"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/ControllerTest.java", "diffHunk": "@@ -939,4 +941,25 @@ public void testChangeEndpointCluster() {\n                                                        .rotations().get(0).clusterId());\n     }\n \n+    @Test\n+    public void testReadableApplications() {\n+        var db = new MockCuratorDb();\n+        var tester = new DeploymentTester(new ControllerTester(db));\n+\n+        // Create two applications\n+        tester.newDeploymentContext(\"t1\", \"a1\", \"default\");\n+        tester.newDeploymentContext(\"t2\", \"a2\", \"default\");\n+        assertEquals(2, tester.applications().readable().size());\n+\n+        // Write invalid data to one application\n+        db.curator().set(Path.fromString(\"/controller/v1/applications/t2:a2\"), new byte[]{(byte) 0xDE, (byte) 0xAD});\n+        assertEquals(1, tester.applications().readable().size());\n+\n+        try {\n+            tester.applications().asList();\n+            fail(\"Expected exception\");\n+        } catch (Exception ignored) {\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77f6a2fb86fc4368306d123626f120b179fc6f57"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2278, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}