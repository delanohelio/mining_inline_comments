{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MTA5NTgw", "number": 15489, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNzowNFrOE9qEnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowMzowMVrOE9q86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDg3OTAwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNzowNFrOH6dmlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxODoyMzoxOVrOH6ks8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2NDQ2OA==", "bodyText": "I wonder about this verbosity >= 2 which triggers copying and constitutes 2/3 of the remaining complexity.\nIs that necessary or could it be removed too ? Less is more.", "url": "https://github.com/vespa-engine/vespa/pull/15489#discussion_r531064468", "createdAt": "2020-11-26T14:27:04Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "diffHunk": "@@ -155,160 +75,76 @@ StatusMetricConsumer::reportStatus(std::ostream& out,\n             updateSnapshotHooks ? \", calling snapshot hooks too\" : \".\");\n         _manager.updateMetrics(updateSnapshotHooks);\n     } else {\n-        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option \"\n-                   \"has been given\");\n+        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option has been given\");\n     }\n     framework::SecondTime currentTime(_component.getClock().getTimeInSeconds());\n-    bool html = (!path.hasAttribute(\"format\")\n-                 || path.getAttribute(\"format\") == \"html\");\n-    bool xml = (!html && path.getAttribute(\"format\") == \"xml\");\n-    bool json = (!html && path.getAttribute(\"format\") == \"json\");\n+    bool xml = (path.getAttribute(\"format\") == \"xml\");\n+    bool json = (path.getAttribute(\"format\") == \"json\");\n \n     int verbosity(path.get(\"verbosity\", 0));\n         // We have to copy unset values if using HTML as HTML version gathers\n         // metrics for calculations and thus needs unset values.\n-    bool copyUnset = (html || verbosity >= 2);\n+    bool copyUnset = (verbosity >= 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba800af4e06a51b9ddca0d5b5368cb27afd0dd0c"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA3MTIyNw==", "bodyText": "It's useful if you want a list of all metrics registered in the process instead of just the ones that have been written to. Aside from that, not much point to it. So it could probably be removed without any tears being shed.", "url": "https://github.com/vespa-engine/vespa/pull/15489#discussion_r531071227", "createdAt": "2020-11-26T14:37:40Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "diffHunk": "@@ -155,160 +75,76 @@ StatusMetricConsumer::reportStatus(std::ostream& out,\n             updateSnapshotHooks ? \", calling snapshot hooks too\" : \".\");\n         _manager.updateMetrics(updateSnapshotHooks);\n     } else {\n-        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option \"\n-                   \"has been given\");\n+        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option has been given\");\n     }\n     framework::SecondTime currentTime(_component.getClock().getTimeInSeconds());\n-    bool html = (!path.hasAttribute(\"format\")\n-                 || path.getAttribute(\"format\") == \"html\");\n-    bool xml = (!html && path.getAttribute(\"format\") == \"xml\");\n-    bool json = (!html && path.getAttribute(\"format\") == \"json\");\n+    bool xml = (path.getAttribute(\"format\") == \"xml\");\n+    bool json = (path.getAttribute(\"format\") == \"json\");\n \n     int verbosity(path.get(\"verbosity\", 0));\n         // We have to copy unset values if using HTML as HTML version gathers\n         // metrics for calculations and thus needs unset values.\n-    bool copyUnset = (html || verbosity >= 2);\n+    bool copyUnset = (verbosity >= 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2NDQ2OA=="}, "originalCommit": {"oid": "ba800af4e06a51b9ddca0d5b5368cb27afd0dd0c"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE4MDc4Nw==", "bodyText": "K, I will leave this as is for now.", "url": "https://github.com/vespa-engine/vespa/pull/15489#discussion_r531180787", "createdAt": "2020-11-26T18:23:19Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "diffHunk": "@@ -155,160 +75,76 @@ StatusMetricConsumer::reportStatus(std::ostream& out,\n             updateSnapshotHooks ? \", calling snapshot hooks too\" : \".\");\n         _manager.updateMetrics(updateSnapshotHooks);\n     } else {\n-        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option \"\n-                   \"has been given\");\n+        LOG(debug, \"Not calling update hooks as dontcallupdatehooks option has been given\");\n     }\n     framework::SecondTime currentTime(_component.getClock().getTimeInSeconds());\n-    bool html = (!path.hasAttribute(\"format\")\n-                 || path.getAttribute(\"format\") == \"html\");\n-    bool xml = (!html && path.getAttribute(\"format\") == \"xml\");\n-    bool json = (!html && path.getAttribute(\"format\") == \"json\");\n+    bool xml = (path.getAttribute(\"format\") == \"xml\");\n+    bool json = (path.getAttribute(\"format\") == \"json\");\n \n     int verbosity(path.get(\"verbosity\", 0));\n         // We have to copy unset values if using HTML as HTML version gathers\n         // metrics for calculations and thus needs unset values.\n-    bool copyUnset = (html || verbosity >= 2);\n+    bool copyUnset = (verbosity >= 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2NDQ2OA=="}, "originalCommit": {"oid": "ba800af4e06a51b9ddca0d5b5368cb27afd0dd0c"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTAyMzE0OnYy", "diffSide": "LEFT", "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTowMzowMVrOH6e-QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxODoyNDoyMVrOH6kuAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjkxMg==", "bodyText": "It would be good to have some form of output on the main metrics page that gives the parameters to use for text metrics dump of the past 1 minute, 5 minutes and all-time. This can be hard-coded. It's just hard to remember the URLs by heart...!", "url": "https://github.com/vespa-engine/vespa/pull/15489#discussion_r531086912", "createdAt": "2020-11-26T15:03:01Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "diffHunk": "@@ -62,85 +60,7 @@ StatusMetricConsumer::getReportContentType(const framework::HttpUrlPath& path) c\n         return \"application/json\";\n     }\n \n-    return \"text/html\";\n-}\n-\n-namespace {\n-    void addSnapshotAsTableRow(const metrics::MetricSnapshot& snapshot,\n-                               const metrics::MetricSnapshotSet* building,\n-                               std::ostream& out,\n-                               int32_t interval = -3)\n-    {\n-        if (interval == -3) interval = snapshot.getPeriod();\n-        std::string name(snapshot.getName());\n-        if (interval == -1) {\n-            name = \"Clone of total metrics with active metrics added\";\n-        }\n-        std::vector<char> buffer(40);\n-        out << \"  <tr>\\n\"\n-            << \"    <td>\" << name << \"</td>\\n\";\n-        //if (snapshot.getToTime() != 0 || interval < 0 || building != 0)\n-        for (uint32_t format=0; format<4; ++format) {\n-                // 0 XML - 1 HTML - 2 text, 3 JSON\n-            out << \"    <td>\";\n-            bool linked = false;\n-            for (uint32_t tmp=0; tmp<2; ++tmp) { // 0 last - 1 temp\n-                if (tmp == 1) {\n-                    if (building == 0 || !building->hasTemporarySnapshot()\n-                        || building->getBuilderCount() == 0)\n-                    {\n-                        continue;\n-                    }\n-                } else {\n-                    if ((snapshot.getToTime() == 0 && interval >= 0)\n-                        || snapshot.getToTime() == snapshot.getFromTime())\n-                    {\n-                        continue;\n-                    }\n-                }\n-                if (tmp == 1) out << \"&nbsp;&nbsp;\";\n-\n-                const char* formatStr = \"xml\";\n-                const char* consumer = \"status\";\n-                switch (format) {\n-                case 0:\n-                    formatStr = \"xml\";\n-                    break;\n-                case 1:\n-                    formatStr = \"html\";\n-                    break;\n-                case 2:\n-                    formatStr = \"text\";\n-                    break;\n-                case 3:\n-                    formatStr = \"json\";\n-                    consumer = \"yamas\";\n-                    break;\n-                }\n-\n-                linked = true;\n-                out << \"<a href=\\\"\"\n-                    << \"?interval=\" << interval\n-                    << \"&format=\" << formatStr\n-                    << \"&consumer=\" << consumer\n-                    << \"&verbosity=0\"\n-                    << \"&pattern=.*\"\n-                    << \"&callsnapshothooks=0\"\n-                    << \"&tmpsnapshot=\" << tmp\n-                    << \"\\\">\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba800af4e06a51b9ddca0d5b5368cb27afd0dd0c"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE4MTA1OQ==", "bodyText": "I will merge this one now, and we can discuss the details for a fixed text tomorrow.", "url": "https://github.com/vespa-engine/vespa/pull/15489#discussion_r531181059", "createdAt": "2020-11-26T18:24:21Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/common/statusmetricconsumer.cpp", "diffHunk": "@@ -62,85 +60,7 @@ StatusMetricConsumer::getReportContentType(const framework::HttpUrlPath& path) c\n         return \"application/json\";\n     }\n \n-    return \"text/html\";\n-}\n-\n-namespace {\n-    void addSnapshotAsTableRow(const metrics::MetricSnapshot& snapshot,\n-                               const metrics::MetricSnapshotSet* building,\n-                               std::ostream& out,\n-                               int32_t interval = -3)\n-    {\n-        if (interval == -3) interval = snapshot.getPeriod();\n-        std::string name(snapshot.getName());\n-        if (interval == -1) {\n-            name = \"Clone of total metrics with active metrics added\";\n-        }\n-        std::vector<char> buffer(40);\n-        out << \"  <tr>\\n\"\n-            << \"    <td>\" << name << \"</td>\\n\";\n-        //if (snapshot.getToTime() != 0 || interval < 0 || building != 0)\n-        for (uint32_t format=0; format<4; ++format) {\n-                // 0 XML - 1 HTML - 2 text, 3 JSON\n-            out << \"    <td>\";\n-            bool linked = false;\n-            for (uint32_t tmp=0; tmp<2; ++tmp) { // 0 last - 1 temp\n-                if (tmp == 1) {\n-                    if (building == 0 || !building->hasTemporarySnapshot()\n-                        || building->getBuilderCount() == 0)\n-                    {\n-                        continue;\n-                    }\n-                } else {\n-                    if ((snapshot.getToTime() == 0 && interval >= 0)\n-                        || snapshot.getToTime() == snapshot.getFromTime())\n-                    {\n-                        continue;\n-                    }\n-                }\n-                if (tmp == 1) out << \"&nbsp;&nbsp;\";\n-\n-                const char* formatStr = \"xml\";\n-                const char* consumer = \"status\";\n-                switch (format) {\n-                case 0:\n-                    formatStr = \"xml\";\n-                    break;\n-                case 1:\n-                    formatStr = \"html\";\n-                    break;\n-                case 2:\n-                    formatStr = \"text\";\n-                    break;\n-                case 3:\n-                    formatStr = \"json\";\n-                    consumer = \"yamas\";\n-                    break;\n-                }\n-\n-                linked = true;\n-                out << \"<a href=\\\"\"\n-                    << \"?interval=\" << interval\n-                    << \"&format=\" << formatStr\n-                    << \"&consumer=\" << consumer\n-                    << \"&verbosity=0\"\n-                    << \"&pattern=.*\"\n-                    << \"&callsnapshothooks=0\"\n-                    << \"&tmpsnapshot=\" << tmp\n-                    << \"\\\">\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjkxMg=="}, "originalCommit": {"oid": "ba800af4e06a51b9ddca0d5b5368cb27afd0dd0c"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 828, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}