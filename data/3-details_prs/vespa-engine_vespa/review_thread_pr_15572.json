{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMzc1Mzcx", "number": 15572, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NToxNFrOE_ifXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMTo0N1rOE_jeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDYwODMwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NToxNVrOH9S8tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NToxNVrOH9S8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTYzNg==", "bodyText": "Could consider making a helper function for this, taking the command is input.", "url": "https://github.com/vespa-engine/vespa/pull/15572#discussion_r534035636", "createdAt": "2020-12-02T09:55:15Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "diffHunk": "@@ -250,11 +253,26 @@ IMPL_MSG_COMMAND_H(ExternalOperationHandler, Put)\n         cmd->setTimestamp(getUniqueTimestamp());\n     }\n \n-    auto handle = _mutationSequencer.try_acquire(cmd->getDocumentId());\n-    if (allowMutation(handle)) {\n-        document::BucketSpace bucketSpace = cmd->getBucket().getBucketSpace();\n+    const auto bucket_space = cmd->getBucket().getBucketSpace();\n+    auto handle = _operation_sequencer.try_acquire(bucket_space, cmd->getDocumentId());\n+    bool allow = allowMutation(handle);\n+    const auto& tas_cond = cmd->getCondition();\n+    const bool bypass_bucket_lock = (tas_cond.isPresent()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb96b6e254ef367428374eb4f254c248666bcd11"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDYyNTIyOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1OTowMVrOH9THLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1OTowMVrOH9THLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzODMxNg==", "bodyText": "Consider adding a is_blocked_by() to SequencingHandle taking the BlockedBy enum to simplify this if statement.", "url": "https://github.com/vespa-engine/vespa/pull/15572#discussion_r534038316", "createdAt": "2020-12-02T09:59:01Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "diffHunk": "@@ -250,11 +253,26 @@ IMPL_MSG_COMMAND_H(ExternalOperationHandler, Put)\n         cmd->setTimestamp(getUniqueTimestamp());\n     }\n \n-    auto handle = _mutationSequencer.try_acquire(cmd->getDocumentId());\n-    if (allowMutation(handle)) {\n-        document::BucketSpace bucketSpace = cmd->getBucket().getBucketSpace();\n+    const auto bucket_space = cmd->getBucket().getBucketSpace();\n+    auto handle = _operation_sequencer.try_acquire(bucket_space, cmd->getDocumentId());\n+    bool allow = allowMutation(handle);\n+    const auto& tas_cond = cmd->getCondition();\n+    const bool bypass_bucket_lock = (tas_cond.isPresent()\n+                                     && (tas_cond.getSelection() == reindexing_bucket_lock_bypass_value()));\n+    if (bypass_bucket_lock) {\n+        if (!allow && handle.was_blocked() && (handle.blocked_by() == SequencingHandle::BlockedBy::LockedBucket)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb96b6e254ef367428374eb4f254c248666bcd11"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDc2NTU5OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/pendingmessagetracker.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMDo1OFrOH9UdBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMDo1OFrOH9UdBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MDI5Mw==", "bodyText": "Consider adding class comment.", "url": "https://github.com/vespa-engine/vespa/pull/15572#discussion_r534060293", "createdAt": "2020-12-02T10:30:58Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/pendingmessagetracker.h", "diffHunk": "@@ -15,22 +15,48 @@\n #include <boost/multi_index/ordered_index.hpp>\n #include <boost/multi_index/sequenced_index.hpp>\n #include <boost/multi_index/composite_key.hpp>\n-\n #include <set>\n #include <unordered_map>\n #include <chrono>\n #include <mutex>\n \n namespace storage::distributor {\n \n-class PendingMessageTracker : public framework::HtmlStatusReporter\n-{\n+enum class TaskRunState {\n+    OK,\n+    Aborted,\n+    BucketLost\n+};\n+\n+struct DeferredTask {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb96b6e254ef367428374eb4f254c248666bcd11"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDc2NjQ5OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/pendingmessagetracker.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMToxMVrOH9Udgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMToxMVrOH9Udgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MDQxOA==", "bodyText": "Consider adding class comment.", "url": "https://github.com/vespa-engine/vespa/pull/15572#discussion_r534060418", "createdAt": "2020-12-02T10:31:11Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/pendingmessagetracker.h", "diffHunk": "@@ -15,22 +15,48 @@\n #include <boost/multi_index/ordered_index.hpp>\n #include <boost/multi_index/sequenced_index.hpp>\n #include <boost/multi_index/composite_key.hpp>\n-\n #include <set>\n #include <unordered_map>\n #include <chrono>\n #include <mutex>\n \n namespace storage::distributor {\n \n-class PendingMessageTracker : public framework::HtmlStatusReporter\n-{\n+enum class TaskRunState {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb96b6e254ef367428374eb4f254c248666bcd11"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDc2ODc2OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/visiting/reindexing_visitor.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMTo0N1rOH9Ue8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDozMTo0N1rOH9Ue8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2MDc4NQ==", "bodyText": "Consider adding class comment.", "url": "https://github.com/vespa-engine/vespa/pull/15572#discussion_r534060785", "createdAt": "2020-12-02T10:31:47Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/visiting/reindexing_visitor.h", "diffHunk": "@@ -0,0 +1,27 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"visitor.h\"\n+\n+namespace storage {\n+\n+class ReindexingVisitor : public Visitor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb96b6e254ef367428374eb4f254c248666bcd11"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 758, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}