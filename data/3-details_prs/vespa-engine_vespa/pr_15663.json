{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDI0NDg1", "number": 15663, "title": "Separate loks so the same lock is not used for multiple things.", "bodyText": "@havardpe PR", "createdAt": "2020-12-04T10:01:46Z", "url": "https://github.com/vespa-engine/vespa/pull/15663", "merged": true, "mergeCommit": {"oid": "8e025fe6d338b2a52c9f3e6eddb8ee295cecbe21"}, "closed": true, "closedAt": "2020-12-04T11:35:18Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi0x-zgH2gAyNTMyNDI0NDg1OmM5OTI3ZGNkOGNiNjNjZTJlZDZlMWMzNWQ4NTFmNjg3YzBmZTc2NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi2FvKAH2gAyNTMyNDI0NDg1OmI3OWRjOGQ0Mzg1NDAyNDZkMDY1NDAzZWE0NDBlMjIxNTkyYmU1YTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c", "committedDate": "2020-12-04T10:00:19Z", "message": "Separate loks so the same lock is not used for multiple things."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODI1OTA0", "url": "https://github.com/vespa-engine/vespa/pull/15663#pullrequestreview-544825904", "createdAt": "2020-12-04T10:15:59Z", "commit": {"oid": "c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxNTo1OVrOH_KJsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxODoxN1rOH_KPaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4ODY1Ng==", "bodyText": "do not use relaxed memory order here.", "url": "https://github.com/vespa-engine/vespa/pull/15663#discussion_r535988656", "createdAt": "2020-12-04T10:15:59Z", "author": {"login": "havardpe"}, "path": "fnet/src/vespa/fnet/transport_thread.cpp", "diffHunk": "@@ -234,7 +235,7 @@ FNET_TransportThread::~FNET_TransportThread()\n     {\n         std::lock_guard<std::mutex> guard(_lock);\n     }\n-    if (_started && !_finished) {\n+    if (_started.load(std::memory_order_relaxed) && !_finished) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4OTkyMQ==", "bodyText": "you should rename this lock instead of the other lock", "url": "https://github.com/vespa-engine/vespa/pull/15663#discussion_r535989921", "createdAt": "2020-12-04T10:17:57Z", "author": {"login": "havardpe"}, "path": "fnet/src/vespa/fnet/transport_thread.h", "diffHunk": "@@ -43,10 +43,11 @@ class FNET_TransportThread : public FastOS_Runnable\n     Selector                 _selector;       // I/O event generator\n     FNET_PacketQueue_NoLock  _queue;          // outer event queue\n     FNET_PacketQueue_NoLock  _myQueue;        // inner event queue\n-    std::mutex               _lock;           // used for synchronization\n-    std::condition_variable  _cond;           // used for synchronization\n+    std::mutex               _qLock;          // protects the Q\n+    std::mutex               _lock;           // used for synchronization during shutdown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5MDEyMA==", "bodyText": "also rename this to make it match the renamed lock", "url": "https://github.com/vespa-engine/vespa/pull/15663#discussion_r535990120", "createdAt": "2020-12-04T10:18:17Z", "author": {"login": "havardpe"}, "path": "fnet/src/vespa/fnet/transport_thread.h", "diffHunk": "@@ -43,10 +43,11 @@ class FNET_TransportThread : public FastOS_Runnable\n     Selector                 _selector;       // I/O event generator\n     FNET_PacketQueue_NoLock  _queue;          // outer event queue\n     FNET_PacketQueue_NoLock  _myQueue;        // inner event queue\n-    std::mutex               _lock;           // used for synchronization\n-    std::condition_variable  _cond;           // used for synchronization\n+    std::mutex               _qLock;          // protects the Q\n+    std::mutex               _lock;           // used for synchronization during shutdown\n+    std::condition_variable  _cond;           // used for synchronization during shutdown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9927dcd8cb63ce2ed6e1c35d851f687c0fe764c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff80a28fe335379099ef561ee652f825aeb396c", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/cff80a28fe335379099ef561ee652f825aeb396c", "committedDate": "2020-12-04T10:38:56Z", "message": "_lock -> _shutdownLock, _qLock -> _lock and no std::memory_order_relaxed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODc2MTM3", "url": "https://github.com/vespa-engine/vespa/pull/15663#pullrequestreview-544876137", "createdAt": "2020-12-04T11:26:35Z", "commit": {"oid": "cff80a28fe335379099ef561ee652f825aeb396c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMToyNjozNVrOH_MurA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMToyNjozNVrOH_MurA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzMDg5Mg==", "bodyText": "consider some extra cleanup by removing _waitFinished altogether and always notifying all.", "url": "https://github.com/vespa-engine/vespa/pull/15663#discussion_r536030892", "createdAt": "2020-12-04T11:26:35Z", "author": {"login": "havardpe"}, "path": "fnet/src/vespa/fnet/transport_thread.cpp", "diffHunk": "@@ -556,10 +549,10 @@ FNET_TransportThread::endEventLoop() {\n            _myQueue.IsEmpty_NoLock());\n \n     {\n-        std::lock_guard<std::mutex> guard(_lock);\n+        std::lock_guard<std::mutex> guard(_shutdownLock);\n         _finished = true;\n         if (_waitFinished) {\n-            _cond.notify_all();\n+            _shutdownCond.notify_all();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff80a28fe335379099ef561ee652f825aeb396c"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b79dc8d438540246d065403ea440e221592be5a0", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/b79dc8d438540246d065403ea440e221592be5a0", "committedDate": "2020-12-04T11:31:48Z", "message": "GC _waitFinished"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3853, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}