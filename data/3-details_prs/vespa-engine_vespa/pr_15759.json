{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MjI3MDg3", "number": 15759, "title": "Add option to only include flag data files relevant for a system", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-12-09T14:39:22Z", "url": "https://github.com/vespa-engine/vespa/pull/15759", "merged": true, "mergeCommit": {"oid": "a4b297165caca7c8875e560a83614446c31c7b16"}, "closed": true, "closedAt": "2020-12-10T10:51:20Z", "author": {"login": "bjorncs"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkfpWiAH2gAyNTM1MjI3MDg3OjBlNGYxMDZjOGY1NjJmYjNkN2UwMWI2OGRlYTBkOWRmOWZjMjQxZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkwMCZAFqTU0OTAxNzA1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e4f106c8f562fb3d7e01b68dea0d9df9fc241ef", "author": {"user": {"login": "bjorncs", "name": "Bj\u00f8rn Christian Seime"}}, "url": "https://github.com/vespa-engine/vespa/commit/0e4f106c8f562fb3d7e01b68dea0d9df9fc241ef", "committedDate": "2020-12-09T14:30:44Z", "message": "Add option to only include flag data files relevant for a system"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MDE3MDUz", "url": "https://github.com/vespa-engine/vespa/pull/15759#pullrequestreview-549017053", "createdAt": "2020-12-10T09:46:57Z", "commit": {"oid": "0e4f106c8f562fb3d7e01b68dea0d9df9fc241ef"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTo0Njo1N1rOIDAYIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTo0Njo1N1rOIDAYIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAyMjgxOA==", "bodyText": "Consider replacing SimpleZone with (a method that defines) a mock(ZoneApi.class) that has when() defined on getSystemName() and getId()?", "url": "https://github.com/vespa-engine/vespa/pull/15759#discussion_r540022818", "createdAt": "2020-12-10T09:46:57Z", "author": {"login": "hakonhall"}, "path": "controller-api/src/test/java/com/yahoo/vespa/hosted/controller/api/systemflags/v1/SystemFlagsDataArchiveTest.java", "diffHunk": "@@ -260,6 +269,30 @@ public void normalize_json_fail_on_invalid_tenant_id() {\n         }\n     }\n \n+    @Test\n+    public void ignores_files_not_related_to_specified_system_definition() {\n+        ZoneRegistry registry = createZoneRegistryMock();\n+        Path testDirectory = Paths.get(\"src/test/resources/system-flags-for-multiple-systems/\");\n+        var archive = SystemFlagsDataArchive.fromDirectoryAndSystem(testDirectory, registry);\n+        assertFlagDataHasValue(archive, MY_TEST_FLAG, cdControllerTarget, \"default\"); // Would be 'cd.controller' if files for CD system were included\n+        assertFlagDataHasValue(archive, MY_TEST_FLAG, mainControllerTarget, \"default\");\n+        assertFlagDataHasValue(archive, MY_TEST_FLAG, prodUsWestCfgTarget, \"main.prod.us-west-1\");\n+    }\n+\n+    @SuppressWarnings(\"unchecked\") // workaround for mocking a method for generic return type\n+    private static ZoneRegistry createZoneRegistryMock() {\n+        // Cannot use the standard registry mock as it's located in controller-server module\n+        ZoneRegistry registryMock = mock(ZoneRegistry.class);\n+        when(registryMock.system()).thenReturn(SystemName.main);\n+        when(registryMock.getConfigServerVipUri(any())).thenReturn(URI.create(\"http://localhost:8080/\"));\n+        when(registryMock.getConfigServerHttpsIdentity(any())).thenReturn(new AthenzService(\"domain\", \"servicename\"));\n+        ZoneList zoneListMock = mock(ZoneList.class);\n+        when(zoneListMock.reachable()).thenReturn(zoneListMock);\n+        when(zoneListMock.zones()).thenReturn((List)List.of(new SimpleZone(\"prod.us-west-1\"), new SimpleZone(\"prod.us-east-3\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e4f106c8f562fb3d7e01b68dea0d9df9fc241ef"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3821, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}