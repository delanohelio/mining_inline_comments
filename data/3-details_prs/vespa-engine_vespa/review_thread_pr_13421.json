{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NTEwNDc3", "number": 13421, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo0MzoyNFrOEAipUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo0MzoyNFrOEAipUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDAzMDg5OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo0MzoyNFrOGb4oNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo1NTowNFrOGcPqqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5MjUzMg==", "bodyText": "This is a slippery slope that could lead to templated and/or multiple inheritance real fast. I would prefer utility functions for creating AND/OR filter searches that are called from explicit implementations over this.", "url": "https://github.com/vespa-engine/vespa/pull/13421#discussion_r431892532", "createdAt": "2020-05-28T14:43:24Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.h", "diffHunk": "@@ -103,7 +105,14 @@ class WeakAndBlueprint : public IntermediateBlueprint\n \n //-----------------------------------------------------------------------------\n \n-class NearBlueprint : public IntermediateBlueprint\n+/** shared implementation for operators that degrade to AND when creating filter for upper-bound case */\n+class FilterUpperAndBlueprint : public IntermediateBlueprint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6366e23e0f46b4ddb0488e4541c46cfcc126a2e4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTk5Mw==", "bodyText": "Agree", "url": "https://github.com/vespa-engine/vespa/pull/13421#discussion_r432269993", "createdAt": "2020-05-29T05:55:04Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/queryeval/intermediate_blueprints.h", "diffHunk": "@@ -103,7 +105,14 @@ class WeakAndBlueprint : public IntermediateBlueprint\n \n //-----------------------------------------------------------------------------\n \n-class NearBlueprint : public IntermediateBlueprint\n+/** shared implementation for operators that degrade to AND when creating filter for upper-bound case */\n+class FilterUpperAndBlueprint : public IntermediateBlueprint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5MjUzMg=="}, "originalCommit": {"oid": "6366e23e0f46b4ddb0488e4541c46cfcc126a2e4"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1553, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}