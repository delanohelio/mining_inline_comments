{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNDM2MzYy", "number": 15369, "title": "Introduce node IP address pool", "bodyText": "A host that is supposed to run containers has a non-empty IP pool: A set of\nIPv4 and/or IPv6 addresses that can be assigned to containers.\nThis PR adds a list of hostnames to this pool.  The intent is that the\nhostnames and IPs match through resolving, but resolution may not yet be\navailable (until DNS changes propagate).\nFor now, only a list of hostnames are specified.  We may want to specify\n(hostname, IP address) pairs or (hostname, IPv4, IPv6) triplets later, and the\nserialization format allows for that by storing the hsotnames in an array of\nobjects, the object having a \"hostname\" field.\nHowever the REST API is kept simpler for now: it exposes and allows patching of\nan array of strings of a \"additionalHostnames\" field.", "createdAt": "2020-11-17T14:05:59Z", "url": "https://github.com/vespa-engine/vespa/pull/15369", "merged": true, "mergeCommit": {"oid": "977e935102e7bd2c0bb0c8a8ab5278589e0c9a63"}, "closed": true, "closedAt": "2020-11-17T18:42:33Z", "author": {"login": "hakonhall"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddZ_M_AH2gAyNTIyNDM2MzYyOjc2NmUxM2U0YjgyMGY1M2FjZDQ4ODZkNzYzZTdmYmI5Y2JjMTE2MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddcigKAH2gAyNTIyNDM2MzYyOjg5MmNmMGNhYTlmNGQ4NDM2NDNhN2RmZTNjNmY4NGM3OTZiY2FiYmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601", "author": {"user": {"login": "hakonhall", "name": "H\u00e5kon Hallingstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/766e13e4b820f53acd4886d763e7fbb9cbc11601", "committedDate": "2020-11-17T13:57:42Z", "message": "Introduce node IP address pool\n\nA host that is supposed to run containers has a non-empty IP pool: A set of\nIPv4 and/or IPv6 addresses that can be assigned to containers.\n\nThis PR adds a list of hostnames to this pool.  The intent is that the\nhostnames and IPs match through resolving, but resolution may not yet be\navailable (until DNS changes propagate).\n\nFor now, only a list of hostnames are specified.  We may want to specify\n(hostname, IP address) pairs or (hostname, IPv4, IPv6) triplets later, and the\nserialization format allows for that by storing the hsotnames in an array of\nobjects, the object having a \"hostname\" field.\n\nHowever the REST API is kept simpler for now: it exposes and allows patching of\nan array of strings of a \"additionalHostnames\" field."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNDEyMzEz", "url": "https://github.com/vespa-engine/vespa/pull/15369#pullrequestreview-532412313", "createdAt": "2020-11-17T14:24:05Z", "commit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNDowNlrOH03O9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoyNzo0N1rOH03aZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5Mjk1MA==", "bodyText": "Consider\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    Inspector addressesField = object.field(containersKey);\n          \n          \n            \n                    if (addressesField.children() == 0)\n          \n          \n            \n                        return List.of();\n          \n          \n            \n                    List<Address> addresses = new ArrayList<>(addressesField.children());\n          \n          \n            \n                    addressesField.traverse((ArrayTraverser) (i, elem) ->\n          \n          \n            \n                            addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n          \n          \n            \n                    return addresses;\n          \n          \n            \n                }\n          \n          \n            \n                private List<Address> addressesFromSlime(Inspector object) {\n          \n          \n            \n                    return SlimeUtils.entriesStream(object.field(containersKey))\n          \n          \n            \n                            .map(elem -> new Address(elem.field(containerHostnameKey).asString()))\n          \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                }", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525192950", "createdAt": "2020-11-17T14:24:06Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java", "diffHunk": "@@ -358,6 +371,16 @@ private ClusterMembership clusterMembershipFromSlime(Inspector object) {\n         return ipAddresses.build();\n     }\n \n+    private List<Address> addressesFromSlime(Inspector object) {\n+        Inspector addressesField = object.field(containersKey);\n+        if (addressesField.children() == 0)\n+            return List.of();\n+        List<Address> addresses = new ArrayList<>(addressesField.children());\n+        addressesField.traverse((ArrayTraverser) (i, elem) ->\n+                addresses.add(new Address(elem.field(containerHostnameKey).asString())));\n+        return addresses;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE5NTg3Ng==", "bodyText": "Disable wildcard imports for javax.swing.*", "url": "https://github.com/vespa-engine/vespa/pull/15369#discussion_r525195876", "createdAt": "2020-11-17T14:27:47Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/provisioning/AllocationSimulator.java", "diffHunk": "@@ -11,8 +11,9 @@\n import com.yahoo.vespa.hosted.provision.NodeList;\n import com.yahoo.vespa.hosted.provision.node.Allocation;\n import com.yahoo.vespa.hosted.provision.node.Generation;\n+import com.yahoo.vespa.hosted.provision.node.IP;\n \n-import javax.swing.JFrame;\n+import javax.swing.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "766e13e4b820f53acd4886d763e7fbb9cbc11601"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34384b2927e88a6affa6e1d754fb7b8b5284dc06", "author": {"user": {"login": "hakonhall", "name": "H\u00e5kon Hallingstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/34384b2927e88a6affa6e1d754fb7b8b5284dc06", "committedDate": "2020-11-17T14:41:12Z", "message": "Replace on-demand import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "author": {"user": {"login": "hakonhall", "name": "H\u00e5kon Hallingstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b", "committedDate": "2020-11-17T14:50:12Z", "message": "Update node-repository/src/main/java/com/yahoo/vespa/hosted/provision/persistence/NodeSerializer.java\n\nCo-authored-by: Valerij Fredriksen <freva@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNDQ2OTEx", "url": "https://github.com/vespa-engine/vespa/pull/15369#pullrequestreview-532446911", "createdAt": "2020-11-17T14:56:17Z", "commit": {"oid": "dc9f0a0ccc3820e269bfd0b0bb19e63bb413581b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "author": {"user": {"login": "hakonhall", "name": "H\u00e5kon Hallingstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/892cf0caa9f4d843643a7dfe3c6f84c796bcabbb", "committedDate": "2020-11-17T16:56:04Z", "message": "Add import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1952, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}