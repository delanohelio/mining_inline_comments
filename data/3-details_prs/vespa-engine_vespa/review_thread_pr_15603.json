{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDQyODAw", "number": 15603, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMjo0NVrOFAGcnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjoxMjo1MlrOFANd-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjQ5OTUxOnYy", "diffSide": "RIGHT", "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMjo0NVrOH-M1CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMjo0NVrOH-M1CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4Mzk0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * which satisfy <code>log10(1 / latency) % 1 = e</code>, for some constant <code>0 < e < 1</code>. Weird? Most certainly!\n          \n          \n            \n             * which satisfy <code>log10(1 / latency) % 1 = e</code>, for some constant <code>0 &lt; e &lt; 1</code>. Weird? Most certainly!", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r534983945", "createdAt": "2020-12-03T09:12:45Z", "author": {"login": "jonmv"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -8,11 +8,43 @@\n \n /**\n  * This is an implementation of the {@link ThrottlePolicy} that offers dynamic limits to the number of pending messages a\n- * {@link SourceSession} is allowed to have.\n- *\n- * <b>NOTE:</b> By context, \"pending\" is referring to the number of sent messages that have not been replied to yet.\n+ * {@link SourceSession} is allowed to have. Pending means the number of sent messages that have not been replied to yet.\n+ * <p>\n+ * The algorithm works by increasing the number of messages allowed to be pending, the <em>winidow size</em>, until\n+ * this no longer increases throughput. At this point, the algorithm is driven by synthetic attraction towards latencies\n+ * which satisfy <code>log10(1 / latency) % 1 = e</code>, for some constant <code>0 < e < 1</code>. Weird? Most certainly!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac5041033b8782e2cb8b1f64f880f004c510bea6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzQ2NTUyOnYy", "diffSide": "RIGHT", "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTo0MTowMVrOH-Wslg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0NToyN1rOH-fj-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0NTYyMg==", "bodyText": "s/winidow/window", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535145622", "createdAt": "2020-12-03T11:41:01Z", "author": {"login": "vekterli"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -8,11 +8,43 @@\n \n /**\n  * This is an implementation of the {@link ThrottlePolicy} that offers dynamic limits to the number of pending messages a\n- * {@link SourceSession} is allowed to have.\n- *\n- * <b>NOTE:</b> By context, \"pending\" is referring to the number of sent messages that have not been replied to yet.\n+ * {@link SourceSession} is allowed to have. Pending means the number of sent messages that have not been replied to yet.\n+ * <p>\n+ * The algorithm works by increasing the number of messages allowed to be pending, the <em>winidow size</em>, until", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MDI1OA==", "bodyText": "Thanks!", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535290258", "createdAt": "2020-12-03T14:44:55Z", "author": {"login": "jonmv"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -8,11 +8,43 @@\n \n /**\n  * This is an implementation of the {@link ThrottlePolicy} that offers dynamic limits to the number of pending messages a\n- * {@link SourceSession} is allowed to have.\n- *\n- * <b>NOTE:</b> By context, \"pending\" is referring to the number of sent messages that have not been replied to yet.\n+ * {@link SourceSession} is allowed to have. Pending means the number of sent messages that have not been replied to yet.\n+ * <p>\n+ * The algorithm works by increasing the number of messages allowed to be pending, the <em>winidow size</em>, until", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0NTYyMg=="}, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MDg3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The algorithm works by increasing the number of messages allowed to be pending, the <em>winidow size</em>, until\n          \n          \n            \n             * The algorithm works by increasing the number of messages allowed to be pending, the <em>window size</em>, until", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535290873", "createdAt": "2020-12-03T14:45:27Z", "author": {"login": "jonmv"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -8,11 +8,43 @@\n \n /**\n  * This is an implementation of the {@link ThrottlePolicy} that offers dynamic limits to the number of pending messages a\n- * {@link SourceSession} is allowed to have.\n- *\n- * <b>NOTE:</b> By context, \"pending\" is referring to the number of sent messages that have not been replied to yet.\n+ * {@link SourceSession} is allowed to have. Pending means the number of sent messages that have not been replied to yet.\n+ * <p>\n+ * The algorithm works by increasing the number of messages allowed to be pending, the <em>winidow size</em>, until", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0NTYyMg=="}, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzY0OTg0OnYy", "diffSide": "RIGHT", "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMjoxMjo1MlrOH-Yi8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0NTo0MVrOH-flUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NTkyMA==", "bodyText": "This is probably not intended to be included", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535175920", "createdAt": "2020-12-03T12:12:52Z", "author": {"login": "vekterli"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -96,30 +129,31 @@ public void processMessage(Message message) {\n         numSent = 0;\n         numOk = 0;\n \n-\n         if (maxThroughput > 0 && throughput > maxThroughput * 0.95) {\n             // No need to increase window when we're this close to max.\n-        } else if (throughput >= localMaxThroughput) {\n+            // TODO jonmv: Not so sure \u2014 what if we're too high, and should back off?\n+        } else if (throughput > localMaxThroughput) {\n             localMaxThroughput = throughput;\n-            windowSize += weight*windowSizeIncrement;\n+            windowSize += weight * windowSizeIncrement;\n             if (log.isLoggable(Level.FINE)) {\n                 log.log(Level.FINE, \"windowSize \" + windowSize + \" throughput \" + throughput + \" local max \" + localMaxThroughput);\n             }\n         } else {\n             // scale up/down throughput for comparing to window size\n             double period = 1;\n-            while(throughput * period/windowSize < 2) {\n+            while(throughput * period / windowSize < 2) {\n                 period *= 10;\n             }\n-            while(throughput * period/windowSize > 2) {\n+            while(throughput * period / windowSize > 2) {\n                 period *= 0.1;\n             }\n-            double efficiency = throughput*period/windowSize;\n+            double efficiency = throughput * period / windowSize; // \"efficiency\" is a strange name. This is where on the level it is.\n+            if (Math.random() < 1e-2) System.err.println(efficiency);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MDM5MQ==", "bodyText": "Absolutely not.", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535290391", "createdAt": "2020-12-03T14:45:01Z", "author": {"login": "jonmv"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -96,30 +129,31 @@ public void processMessage(Message message) {\n         numSent = 0;\n         numOk = 0;\n \n-\n         if (maxThroughput > 0 && throughput > maxThroughput * 0.95) {\n             // No need to increase window when we're this close to max.\n-        } else if (throughput >= localMaxThroughput) {\n+            // TODO jonmv: Not so sure \u2014 what if we're too high, and should back off?\n+        } else if (throughput > localMaxThroughput) {\n             localMaxThroughput = throughput;\n-            windowSize += weight*windowSizeIncrement;\n+            windowSize += weight * windowSizeIncrement;\n             if (log.isLoggable(Level.FINE)) {\n                 log.log(Level.FINE, \"windowSize \" + windowSize + \" throughput \" + throughput + \" local max \" + localMaxThroughput);\n             }\n         } else {\n             // scale up/down throughput for comparing to window size\n             double period = 1;\n-            while(throughput * period/windowSize < 2) {\n+            while(throughput * period / windowSize < 2) {\n                 period *= 10;\n             }\n-            while(throughput * period/windowSize > 2) {\n+            while(throughput * period / windowSize > 2) {\n                 period *= 0.1;\n             }\n-            double efficiency = throughput*period/windowSize;\n+            double efficiency = throughput * period / windowSize; // \"efficiency\" is a strange name. This is where on the level it is.\n+            if (Math.random() < 1e-2) System.err.println(efficiency);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NTkyMA=="}, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MTIxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (Math.random() < 1e-2) System.err.println(efficiency);", "url": "https://github.com/vespa-engine/vespa/pull/15603#discussion_r535291218", "createdAt": "2020-12-03T14:45:41Z", "author": {"login": "jonmv"}, "path": "messagebus/src/main/java/com/yahoo/messagebus/DynamicThrottlePolicy.java", "diffHunk": "@@ -96,30 +129,31 @@ public void processMessage(Message message) {\n         numSent = 0;\n         numOk = 0;\n \n-\n         if (maxThroughput > 0 && throughput > maxThroughput * 0.95) {\n             // No need to increase window when we're this close to max.\n-        } else if (throughput >= localMaxThroughput) {\n+            // TODO jonmv: Not so sure \u2014 what if we're too high, and should back off?\n+        } else if (throughput > localMaxThroughput) {\n             localMaxThroughput = throughput;\n-            windowSize += weight*windowSizeIncrement;\n+            windowSize += weight * windowSizeIncrement;\n             if (log.isLoggable(Level.FINE)) {\n                 log.log(Level.FINE, \"windowSize \" + windowSize + \" throughput \" + throughput + \" local max \" + localMaxThroughput);\n             }\n         } else {\n             // scale up/down throughput for comparing to window size\n             double period = 1;\n-            while(throughput * period/windowSize < 2) {\n+            while(throughput * period / windowSize < 2) {\n                 period *= 10;\n             }\n-            while(throughput * period/windowSize > 2) {\n+            while(throughput * period / windowSize > 2) {\n                 period *= 0.1;\n             }\n-            double efficiency = throughput*period/windowSize;\n+            double efficiency = throughput * period / windowSize; // \"efficiency\" is a strange name. This is where on the level it is.\n+            if (Math.random() < 1e-2) System.err.println(efficiency);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE3NTkyMA=="}, "originalCommit": {"oid": "7005bf273d8ed242dcecd7775e5982262192ffbb"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 774, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}