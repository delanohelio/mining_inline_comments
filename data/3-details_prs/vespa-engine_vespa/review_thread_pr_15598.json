{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDAyOTcy", "number": 15598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo0MjoyNFrOE_n9EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo0MjoyNFrOE_n9EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTUwMzUzOnYy", "diffSide": "RIGHT", "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo0MjoyNFrOH9bc_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo0NjoyM1rOH9eY1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ==", "bodyText": "== should be used here?", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534174975", "createdAt": "2020-12-02T13:42:24Z", "author": {"login": "hakonhall"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "diffHunk": "@@ -39,4 +53,26 @@ public String getDescription() {\n     public String getModificationEffect() {\n         return modificationEffect;\n     }\n+\n+    public List<String> getOwners() { return owners; }\n+\n+    public Instant getCreatedAt() { return createdAt; }\n+\n+    public Instant getExpiresAt() { return expiresAt; }\n+\n+    private static void validate(List<String> owners, Instant createdAt, Instant expiresAt) {\n+        if (expiresAt.isBefore(createdAt)) {\n+            throw new IllegalArgumentException(\n+                    String.format(\n+                            \"Flag cannot expire before its creation date (createdAt='%s', expiresAt='%s')\",\n+                            createdAt, expiresAt));\n+        }\n+        if (owners.equals(PermanentFlags.OWNERS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a976d946e39067269d6aeabe78502d72616a490"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMjg2Mg==", "bodyText": "I don't like that for anything except enums. Defensive copying of collections in constructors is a common pattern in our code base. That would break a reference equality check.", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534202862", "createdAt": "2020-12-02T14:21:19Z", "author": {"login": "bjorncs"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "diffHunk": "@@ -39,4 +53,26 @@ public String getDescription() {\n     public String getModificationEffect() {\n         return modificationEffect;\n     }\n+\n+    public List<String> getOwners() { return owners; }\n+\n+    public Instant getCreatedAt() { return createdAt; }\n+\n+    public Instant getExpiresAt() { return expiresAt; }\n+\n+    private static void validate(List<String> owners, Instant createdAt, Instant expiresAt) {\n+        if (expiresAt.isBefore(createdAt)) {\n+            throw new IllegalArgumentException(\n+                    String.format(\n+                            \"Flag cannot expire before its creation date (createdAt='%s', expiresAt='%s')\",\n+                            createdAt, expiresAt));\n+        }\n+        if (owners.equals(PermanentFlags.OWNERS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}, "originalCommit": {"oid": "1a976d946e39067269d6aeabe78502d72616a490"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxNzMwNg==", "bodyText": "As it is now, the below if-block is unreachable because of this, since if owners.equals(PermanentFlags.OWNERS) then owners.isEmpty() is true.\nThis code should instead ask PermanentFlags if the Flag is owned by PermanentFlags, e.g. testing for reference-equals with a private static OWNERS, and then that class should validate the Flag instead of here.", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534217306", "createdAt": "2020-12-02T14:39:11Z", "author": {"login": "hakonhall"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "diffHunk": "@@ -39,4 +53,26 @@ public String getDescription() {\n     public String getModificationEffect() {\n         return modificationEffect;\n     }\n+\n+    public List<String> getOwners() { return owners; }\n+\n+    public Instant getCreatedAt() { return createdAt; }\n+\n+    public Instant getExpiresAt() { return expiresAt; }\n+\n+    private static void validate(List<String> owners, Instant createdAt, Instant expiresAt) {\n+        if (expiresAt.isBefore(createdAt)) {\n+            throw new IllegalArgumentException(\n+                    String.format(\n+                            \"Flag cannot expire before its creation date (createdAt='%s', expiresAt='%s')\",\n+                            createdAt, expiresAt));\n+        }\n+        if (owners.equals(PermanentFlags.OWNERS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}, "originalCommit": {"oid": "1a976d946e39067269d6aeabe78502d72616a490"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyMzA2MA==", "bodyText": "I agree, the code was confusing. I changed line 70 to use your suggestion to check if flag originates from PermanentFlags.", "url": "https://github.com/vespa-engine/vespa/pull/15598#discussion_r534223060", "createdAt": "2020-12-02T14:46:23Z", "author": {"login": "bjorncs"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/FlagDefinition.java", "diffHunk": "@@ -39,4 +53,26 @@ public String getDescription() {\n     public String getModificationEffect() {\n         return modificationEffect;\n     }\n+\n+    public List<String> getOwners() { return owners; }\n+\n+    public Instant getCreatedAt() { return createdAt; }\n+\n+    public Instant getExpiresAt() { return expiresAt; }\n+\n+    private static void validate(List<String> owners, Instant createdAt, Instant expiresAt) {\n+        if (expiresAt.isBefore(createdAt)) {\n+            throw new IllegalArgumentException(\n+                    String.format(\n+                            \"Flag cannot expire before its creation date (createdAt='%s', expiresAt='%s')\",\n+                            createdAt, expiresAt));\n+        }\n+        if (owners.equals(PermanentFlags.OWNERS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NDk3NQ=="}, "originalCommit": {"oid": "1a976d946e39067269d6aeabe78502d72616a490"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 771, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}