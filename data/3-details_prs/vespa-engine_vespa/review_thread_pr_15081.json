{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTczMTY4", "number": 15081, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTowMjo1NVrOEzPy8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTowMjo1NVrOEzPy8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTcxNjM1OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTowMjo1NVrOHqWsOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMToyODo1N1rOHqXiHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE3NDAwOA==", "bodyText": "Consider making an AutoCloseable class to replace these lines and the tenant.getApplicationRepo().lock().", "url": "https://github.com/vespa-engine/vespa/pull/15081#discussion_r514174008", "createdAt": "2020-10-29T11:02:55Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -719,20 +721,26 @@ private ServiceInfo getTesterServiceInfo(ApplicationId applicationId) {\n \n     // ---------------- Session operations ----------------------------------------------------------------\n \n-    public CompletionWaiter activate(Session session, Session previousActiveSession, ApplicationId applicationId, boolean force) {\n-        CompletionWaiter waiter = session.getSessionZooKeeperClient().createActiveWaiter();\n+    public Activation activate(Session session, ApplicationId applicationId, Tenant tenant, boolean force) {\n         NestedTransaction transaction = new NestedTransaction();\n-        transaction.add(deactivateCurrentActivateNew(previousActiveSession, session, force));\n-        if (hostProvisioner.isPresent()) {\n-            try (var applicationTransaction = new ApplicationTransaction(hostProvisioner.get().lock(applicationId), transaction)) {\n+        Optional<ApplicationTransaction> applicationTransaction = hostProvisioner.map(provisioner -> provisioner.lock(applicationId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzgwNg==", "bodyText": "Tried it, didn't make the flow clearer imo.", "url": "https://github.com/vespa-engine/vespa/pull/15081#discussion_r514187806", "createdAt": "2020-10-29T11:28:57Z", "author": {"login": "mpolden"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -719,20 +721,26 @@ private ServiceInfo getTesterServiceInfo(ApplicationId applicationId) {\n \n     // ---------------- Session operations ----------------------------------------------------------------\n \n-    public CompletionWaiter activate(Session session, Session previousActiveSession, ApplicationId applicationId, boolean force) {\n-        CompletionWaiter waiter = session.getSessionZooKeeperClient().createActiveWaiter();\n+    public Activation activate(Session session, ApplicationId applicationId, Tenant tenant, boolean force) {\n         NestedTransaction transaction = new NestedTransaction();\n-        transaction.add(deactivateCurrentActivateNew(previousActiveSession, session, force));\n-        if (hostProvisioner.isPresent()) {\n-            try (var applicationTransaction = new ApplicationTransaction(hostProvisioner.get().lock(applicationId), transaction)) {\n+        Optional<ApplicationTransaction> applicationTransaction = hostProvisioner.map(provisioner -> provisioner.lock(applicationId))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE3NDAwOA=="}, "originalCommit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1052, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}