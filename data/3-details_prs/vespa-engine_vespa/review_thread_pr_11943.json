{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTY2NTI1", "number": 11943, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoxOToxMVrODas9tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoyMDozOVrODas9zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI2MjYyOnYy", "diffSide": "RIGHT", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoxOToxMVrOFhymUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxNzowMlrOFh_O2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjMzNw==", "bodyText": "Remove comment for the removed argument as well", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r370976337", "createdAt": "2020-01-26T06:19:11Z", "author": {"login": "hmusum"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -42,8 +42,8 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n         {\n             Set<ConfiguredNode> nodes = FleetControllerTest.toNodes(0, 1, 2, 3);\n             ContentCluster cluster = new ContentCluster(\n-                    \"books\", nodes, distribution, 6 /* minStorageNodesUp*/, 0.9 /* minRatioOfStorageNodesUp */,\n-                    true /* determineBucketsFromBucketSpaceMetric */);\n+                    \"books\", nodes, distribution, 6 /* minStorageNodesUp*/, 0.9 /* minRatioOfStorageNodesUp */\n+                    /* determineBucketsFromBucketSpaceMetric */);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MzMyMg==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371183322", "createdAt": "2020-01-27T11:17:02Z", "author": {"login": "hakonhall"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -42,8 +42,8 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n         {\n             Set<ConfiguredNode> nodes = FleetControllerTest.toNodes(0, 1, 2, 3);\n             ContentCluster cluster = new ContentCluster(\n-                    \"books\", nodes, distribution, 6 /* minStorageNodesUp*/, 0.9 /* minRatioOfStorageNodesUp */,\n-                    true /* determineBucketsFromBucketSpaceMetric */);\n+                    \"books\", nodes, distribution, 6 /* minStorageNodesUp*/, 0.9 /* minRatioOfStorageNodesUp */\n+                    /* determineBucketsFromBucketSpaceMetric */);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjMzNw=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI2MjYzOnYy", "diffSide": "RIGHT", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoxOToxN1rOFhymUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMToxNzozNlrOFh_P4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjMzOA==", "bodyText": "Remove comment for the removed argument as well", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r370976338", "createdAt": "2020-01-26T06:19:17Z", "author": {"login": "hmusum"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -57,8 +57,8 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n             Set<ConfiguredNode> nodesInSlobrok = FleetControllerTest.toNodes(1, 3, 5, 7);\n \n             ContentCluster cluster = new ContentCluster(\n-                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */,\n-                    true /* determineBucketsFromBucketSpaceMetric */);\n+                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */\n+                    /* determineBucketsFromBucketSpaceMetric */);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MzU4NA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371183584", "createdAt": "2020-01-27T11:17:36Z", "author": {"login": "hakonhall"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -57,8 +57,8 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n             Set<ConfiguredNode> nodesInSlobrok = FleetControllerTest.toNodes(1, 3, 5, 7);\n \n             ContentCluster cluster = new ContentCluster(\n-                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */,\n-                    true /* determineBucketsFromBucketSpaceMetric */);\n+                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */\n+                    /* determineBucketsFromBucketSpaceMetric */);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjMzOA=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI2Mjg0OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNjoyMDozOVrOFhymcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMjowMToxOFrOFiAXGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjM3MA==", "bodyText": "Consider making a default implementation of the method in the interface, then you could remove this now", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r370976370", "createdAt": "2020-01-26T06:20:39Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -217,8 +214,9 @@ public String athenzDnsSuffix() {\n         @Override\n         public double defaultTermwiseLimit() { return defaultTermwiseLimit; }\n \n+        // TODO: Remove\n         @Override\n-        public boolean useBucketSpaceMetric() { return useBucketSpaceMetric; }\n+        public boolean useBucketSpaceMetric() { return true; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE5MTI4Mw==", "bodyText": "I don't think I can do that since the interface is in config-model-api: Old deployments would only see the old interface and therefore no default implementation.", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371191283", "createdAt": "2020-01-27T11:35:09Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -217,8 +214,9 @@ public String athenzDnsSuffix() {\n         @Override\n         public double defaultTermwiseLimit() { return defaultTermwiseLimit; }\n \n+        // TODO: Remove\n         @Override\n-        public boolean useBucketSpaceMetric() { return useBucketSpaceMetric; }\n+        public boolean useBucketSpaceMetric() { return true; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjM3MA=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE5Mjc2OQ==", "bodyText": "Maybe I don't get this, but old config models implement the method, so that should not be an issue. Anyway, this is nitpicking, so I wouldn't bother.", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371192769", "createdAt": "2020-01-27T11:38:49Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -217,8 +214,9 @@ public String athenzDnsSuffix() {\n         @Override\n         public double defaultTermwiseLimit() { return defaultTermwiseLimit; }\n \n+        // TODO: Remove\n         @Override\n-        public boolean useBucketSpaceMetric() { return useBucketSpaceMetric; }\n+        public boolean useBucketSpaceMetric() { return true; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjM3MA=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIwMDU2OA==", "bodyText": "The implementation is in ModelContextImpl, in the configserver bundle, and is always at the latest config server Vespa version, and independent on the particular version of the model running?", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371200568", "createdAt": "2020-01-27T11:58:12Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -217,8 +214,9 @@ public String athenzDnsSuffix() {\n         @Override\n         public double defaultTermwiseLimit() { return defaultTermwiseLimit; }\n \n+        // TODO: Remove\n         @Override\n-        public boolean useBucketSpaceMetric() { return useBucketSpaceMetric; }\n+        public boolean useBucketSpaceMetric() { return true; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjM3MA=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIwMTgxNg==", "bodyText": "You are completely right, I wrongly assumed this was in the model. Thanks.", "url": "https://github.com/vespa-engine/vespa/pull/11943#discussion_r371201816", "createdAt": "2020-01-27T12:01:18Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -217,8 +214,9 @@ public String athenzDnsSuffix() {\n         @Override\n         public double defaultTermwiseLimit() { return defaultTermwiseLimit; }\n \n+        // TODO: Remove\n         @Override\n-        public boolean useBucketSpaceMetric() { return useBucketSpaceMetric; }\n+        public boolean useBucketSpaceMetric() { return true; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3NjM3MA=="}, "originalCommit": {"oid": "7b99c625f39d334638b13f5a083c680e4ee3018b"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2532, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}