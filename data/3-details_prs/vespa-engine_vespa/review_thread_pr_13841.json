{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzgwODYy", "number": 13841, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODo1NzozNFrOEMzhyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTowNzoyMFrOEMzvtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODYyNjAwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/storageserver/communicationmanager.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODo1NzozNFrOGvIEyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToyOToxM1rOGvJNog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2ODU1NA==", "bodyText": "Consider renaming to something like process_or_enqueue since it's not immediately obvious from \"optionalEnqueue\" what happens if it doesn't enqueue", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452068554", "createdAt": "2020-07-09T08:57:34Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/storageserver/communicationmanager.cpp", "diffHunk": "@@ -437,6 +443,18 @@ CommunicationManager::process(const std::shared_ptr<api::StorageMessage>& msg)\n     }\n }\n \n+void\n+CommunicationManager::optionalEnqueue(std::shared_ptr<api::StorageMessage> msg)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4NzIwMg==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452087202", "createdAt": "2020-07-09T09:29:13Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/storageserver/communicationmanager.cpp", "diffHunk": "@@ -437,6 +443,18 @@ CommunicationManager::process(const std::shared_ptr<api::StorageMessage>& msg)\n     }\n }\n \n+void\n+CommunicationManager::optionalEnqueue(std::shared_ptr<api::StorageMessage> msg)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2ODU1NA=="}, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODYzOTQ0OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/common/storagelink.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTowMTowNFrOGvINBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDoxOToyMFrOGvK87w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3MDY2MA==", "bodyText": "Is it safe to remove these abort-branches? If the link is not in a state where it's safe to process certain types of messages, the behavior is likely undefined", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452070660", "createdAt": "2020-07-09T09:01:04Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/common/storagelink.cpp", "diffHunk": "@@ -165,9 +165,9 @@ void StorageLink::sendUp(const shared_ptr<StorageMessage> & msg)\n         default:\n             LOG(error, \"Link %s trying to send %s up while in state %s\",\n                 toString().c_str(), msg->toString(true).c_str(), stateToString(getState()));\n-            assert(false);\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjExNTY5NQ==", "bodyText": "It was initially removed, as there was a test failing in communication manager. However there is no longer need for this as the test itself was fixed.", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452115695", "createdAt": "2020-07-09T10:19:20Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/common/storagelink.cpp", "diffHunk": "@@ -165,9 +165,9 @@ void StorageLink::sendUp(const shared_ptr<StorageMessage> & msg)\n         default:\n             LOG(error, \"Link %s trying to send %s up while in state %s\",\n                 toString().c_str(), msg->toString(true).c_str(), stateToString(getState()));\n-            assert(false);\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3MDY2MA=="}, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODY2MTY3OnYy", "diffSide": "RIGHT", "path": "messagebus/src/vespa/messagebus/messagebus.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTowNzoyMFrOGvIa_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozMTozNlrOGvJTZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3NDIzNw==", "bodyText": "Is it currently safe to have thread-skipping be the default behavior for this constructor overload? Or should this be false, false instead?", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452074237", "createdAt": "2020-07-09T09:07:20Z", "author": {"login": "vekterli"}, "path": "messagebus/src/vespa/messagebus/messagebus.cpp", "diffHunk": "@@ -112,7 +112,7 @@ MessageBus::MessageBus(INetwork &net, const MessageBusParams &params) :\n     _routingTables(),\n     _sessions(),\n     _protocolRepository(std::make_unique<ProtocolRepository>()),\n-    _msn(std::make_unique<Messenger>()),\n+    _msn(std::make_unique<Messenger>(true, true)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4ODY3OQ==", "bodyText": "This constructor is only used by tests. My thought is that everything except distributor and proton should run with future defaults.", "url": "https://github.com/vespa-engine/vespa/pull/13841#discussion_r452088679", "createdAt": "2020-07-09T09:31:36Z", "author": {"login": "baldersheim"}, "path": "messagebus/src/vespa/messagebus/messagebus.cpp", "diffHunk": "@@ -112,7 +112,7 @@ MessageBus::MessageBus(INetwork &net, const MessageBusParams &params) :\n     _routingTables(),\n     _sessions(),\n     _protocolRepository(std::make_unique<ProtocolRepository>()),\n-    _msn(std::make_unique<Messenger>()),\n+    _msn(std::make_unique<Messenger>(true, true)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3NDIzNw=="}, "originalCommit": {"oid": "637de9a2313414da6930f703e2a63eae4637d0e6"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1856, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}