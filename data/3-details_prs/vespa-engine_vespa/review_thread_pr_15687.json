{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjI1MzA1", "number": 15687, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo0MlrOFBrikg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo1OFrOFBrjHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzA2MjU4OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo0MlrOIAddbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo0MlrOIAddbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM1MzU4Mw==", "bodyText": "should also add space used by vector", "url": "https://github.com/vespa-engine/vespa/pull/15687#discussion_r537353583", "createdAt": "2020-12-07T09:28:42Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/eval/eval/value.h>\n+#include <cassert>\n+\n+namespace vespalib::eval {\n+\n+/**\n+ * A dense-only value that just owns a vector of cells.\n+ **/\n+template<typename T>\n+class DenseCellsValue : public Value {\n+private:\n+    const ValueType &_type;\n+    std::vector<T> _cells;\n+public:\n+    DenseCellsValue(const ValueType &type_ref, std::vector<T> cells)\n+      : _type(type_ref), _cells(std::move(cells))\n+    {\n+        assert(check_cell_type<T>(_type.cell_type()));\n+    }\n+    const ValueType &type() const override { return _type; }\n+    TypedCells cells() const override { return TypedCells(_cells); }\n+    const Index &index() const override { return TrivialIndex::get(); }\n+    MemoryUsage get_memory_usage() const override {\n+        return self_memory_usage<DenseCellsValue<T>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzA2Mzk2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo1OFrOIAdeKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyODo1OFrOIAdeKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM1Mzc3MA==", "bodyText": "I strongly suggest we also own the type here", "url": "https://github.com/vespa-engine/vespa/pull/15687#discussion_r537353770", "createdAt": "2020-12-07T09:28:58Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/dense_cells_value.h", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/eval/eval/value.h>\n+#include <cassert>\n+\n+namespace vespalib::eval {\n+\n+/**\n+ * A dense-only value that just owns a vector of cells.\n+ **/\n+template<typename T>\n+class DenseCellsValue : public Value {\n+private:\n+    const ValueType &_type;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1305d578ca3ff11503eb30109a408f6c150fcb"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2078, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}