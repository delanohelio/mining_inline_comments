{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTg3MDgy", "number": 13190, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0MDozM1rOD6pOEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0Mzo0M1rOD6pSRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODE5MzQ2OnYy", "diffSide": "RIGHT", "path": "searchcore/src/tests/proton/attribute/attribute_initializer/attribute_initializer_test.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0MDozM1rOGSl7QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0MDozM1rOGSl7QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0ODkyOA==", "bodyText": "Could also consider testing that transient memory is zero for a non fast-search attribute.", "url": "https://github.com/vespa-engine/vespa/pull/13190#discussion_r422148928", "createdAt": "2020-05-08T13:40:33Z", "author": {"login": "geirst"}, "path": "searchcore/src/tests/proton/attribute/attribute_initializer/attribute_initializer_test.cpp", "diffHunk": "@@ -198,6 +212,22 @@ TEST(\"require that too old attribute is not loaded\")\n     EXPECT_EQUAL(1u, av->getNumDocs());\n }\n \n+TEST(\"require that transient memory usage for first time posting list attribute load after enabling posting lists\")\n+{\n+    saveAttr(\"a\", int32_wset, 10, 2);\n+    Fixture f;\n+    auto avi = f.createInitializer({\"a\", get_int32_wset_fs()}, 5);\n+    EXPECT_EQUAL(40u, avi->get_transient_memory_usage());\n+}\n+\n+TEST(\"require that transient memory usage for normal posting list attribute load\")\n+{\n+    saveAttr(\"a\", get_int32_wset_fs(), 10, 2);\n+    Fixture f;\n+    auto avi = f.createInitializer({\"a\", get_int32_wset_fs()}, 5);\n+    EXPECT_EQUAL(24u, avi->get_transient_memory_usage());\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bada2dfa33f583c54bd8691457c25c055d851c9"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODIwNDIxOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/attribute/attribute_header.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0Mzo0M1rOGSmBnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0Mzo0M1rOGSmBnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1MDU1Nw==", "bodyText": "Please test these two in verify_roundtrip_serialization() in attribute_header_test.cpp.", "url": "https://github.com/vespa-engine/vespa/pull/13190#discussion_r422150557", "createdAt": "2020-05-08T13:43:43Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/attribute/attribute_header.h", "diffHunk": "@@ -63,6 +63,8 @@ class AttributeHeader {\n     bool getEnumerated() const { return _enumerated; }\n     uint64_t getCreateSerialNum() const { return _createSerialNum; }\n     uint32_t getVersion() const  { return _version; }\n+    uint64_t get_total_value_count() const { return _totalValueCount; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bada2dfa33f583c54bd8691457c25c055d851c9"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1617, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}