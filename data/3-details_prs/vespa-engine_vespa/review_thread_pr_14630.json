{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzYzMDU0", "number": 14630, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0ODo1N1rOEo_kdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo1NDo1MlrOEo_sIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDIwMDIzOnYy", "diffSide": "RIGHT", "path": "config-model-api/src/main/java/com/yahoo/config/model/api/Quota.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0ODo1N1rOHaZvDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0ODo1N1rOHaZvDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NjY2OQ==", "bodyText": "Consider BigDecimal parameter instead of Optional. That way you avoid the initial problem where signatures with generic types cannot be overloaded. Same for the other method.", "url": "https://github.com/vespa-engine/vespa/pull/14630#discussion_r497446669", "createdAt": "2020-09-30T11:48:57Z", "author": {"login": "mpolden"}, "path": "config-model-api/src/main/java/com/yahoo/config/model/api/Quota.java", "diffHunk": "@@ -14,42 +16,57 @@\n  * @author ogronnesby\n  */\n public class Quota {\n+    private static final Quota UNLIMITED = new Quota(Optional.empty(), Optional.empty());\n \n+    /** The max size of a cluster inside application */\n     private final Optional<Integer> maxClusterSize;\n \n     /** The max budget in dollars per hour */\n-    private final Optional<Integer> budget;\n+    private final Optional<BigDecimal> budget;\n \n-    public Quota(Optional<Integer> maybeClusterSize, Optional<Integer> budget) {\n-        this.maxClusterSize = maybeClusterSize;\n-        this.budget = budget;\n+    // TODO: Remove constructor once Vespa < 7.300 is gone from production\n+    public Quota(Optional<Integer> maxClusterSize, Optional<Integer> budget) {\n+        this(maxClusterSize, budget.map(BigDecimal::new), true);\n+    }\n+\n+    private Quota(Optional<Integer> maxClusterSize, Optional<BigDecimal> budget, boolean isDecimal) {\n+        this.maxClusterSize = Objects.requireNonNull(maxClusterSize);\n+        this.budget = Objects.requireNonNull(budget);\n     }\n \n     public static Quota fromSlime(Inspector inspector) {\n         var clusterSize = SlimeUtils.optionalLong(inspector.field(\"clusterSize\"));\n-        var budget = SlimeUtils.optionalLong(inspector.field(\"budget\"));\n-        return new Quota(clusterSize.map(Long::intValue), budget.map(Long::intValue));\n+        var budget = budgetFromSlime(inspector.field(\"budget\"));\n+        return new Quota(clusterSize.map(Long::intValue), budget, true);\n+    }\n+\n+    public Quota withBudget(Optional<BigDecimal> budget) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef52f22d1a495ccd3497384d19feeebe70439378"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDIxOTg1OnYy", "diffSide": "RIGHT", "path": "config-model-api/src/test/java/com/yahoo/config/model/api/QuotaTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo1NDo1MlrOHaZ7Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo1NDo1MlrOHaZ7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0OTgyMw==", "bodyText": "Missing @author.", "url": "https://github.com/vespa-engine/vespa/pull/14630#discussion_r497449823", "createdAt": "2020-09-30T11:54:52Z", "author": {"login": "mpolden"}, "path": "config-model-api/src/test/java/com/yahoo/config/model/api/QuotaTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.config.model.api;\n+\n+import com.yahoo.slime.SlimeUtils;\n+import org.junit.Test;\n+\n+\n+import java.math.BigDecimal;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class QuotaTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef52f22d1a495ccd3497384d19feeebe70439378"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1266, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}