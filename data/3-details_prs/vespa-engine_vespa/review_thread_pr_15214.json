{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2ODAxMDEz", "number": 15214, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxMTo1M1rOE2qzeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxNTowNFrOE2q4ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzU5ODY2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/fast_value.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxMTo1M1rOHvlJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxMTo1M1rOHvlJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1MzY1Nw==", "bodyText": "this could be static inside HashedLabel since it might also be useful elsewhere", "url": "https://github.com/vespa-engine/vespa/pull/15214#discussion_r519653657", "createdAt": "2020-11-09T09:11:53Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/fast_value.hpp", "diffHunk": "@@ -331,6 +331,60 @@ FastValueIndex::sparse_full_overlap_join(const ValueType &res_type, const Fun &f\n \n //-----------------------------------------------------------------------------\n \n+template <typename LCT, typename RCT, typename OCT, typename Fun>\n+const Value &\n+FastValueIndex::sparse_no_overlap_join(const ValueType &res_type, const Fun &fun,\n+                                       const FastValueIndex &lhs, const FastValueIndex &rhs,\n+                                       const std::vector<JoinAddrSource> &addr_sources,\n+                                       ConstArrayRef<LCT> lhs_cells, ConstArrayRef<RCT> rhs_cells, Stash &stash)\n+{\n+    using HashedLabelRef = std::reference_wrapper<const FastSparseMap::HashedLabel>;\n+    size_t num_mapped_dims = addr_sources.size();\n+    auto &result = stash.create<FastValue<OCT>>(res_type, res_type.count_mapped_dimensions(), 1, lhs.map.size()*rhs.map.size());\n+    FastSparseMap::HashedLabel empty;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dafdec43bf328013f800d34462b7e5eb26a1a96c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzYxMTYyOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/fast_value.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxNTowNFrOHvlQuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxNTowNFrOHvlQuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1NTYxMQ==", "bodyText": "use num_mapped_dims from line above instead of counting dimensions again.", "url": "https://github.com/vespa-engine/vespa/pull/15214#discussion_r519655611", "createdAt": "2020-11-09T09:15:04Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/fast_value.hpp", "diffHunk": "@@ -331,6 +331,60 @@ FastValueIndex::sparse_full_overlap_join(const ValueType &res_type, const Fun &f\n \n //-----------------------------------------------------------------------------\n \n+template <typename LCT, typename RCT, typename OCT, typename Fun>\n+const Value &\n+FastValueIndex::sparse_no_overlap_join(const ValueType &res_type, const Fun &fun,\n+                                       const FastValueIndex &lhs, const FastValueIndex &rhs,\n+                                       const std::vector<JoinAddrSource> &addr_sources,\n+                                       ConstArrayRef<LCT> lhs_cells, ConstArrayRef<RCT> rhs_cells, Stash &stash)\n+{\n+    using HashedLabelRef = std::reference_wrapper<const FastSparseMap::HashedLabel>;\n+    size_t num_mapped_dims = addr_sources.size();\n+    auto &result = stash.create<FastValue<OCT>>(res_type, res_type.count_mapped_dimensions(), 1, lhs.map.size()*rhs.map.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dafdec43bf328013f800d34462b7e5eb26a1a96c"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1005, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}