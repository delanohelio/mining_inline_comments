{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDk5NTEy", "number": 13264, "title": "Unpack interleaved features if they are needed in equiv search.", "bodyText": "@geirst : please review", "createdAt": "2020-05-15T10:09:09Z", "url": "https://github.com/vespa-engine/vespa/pull/13264", "merged": true, "mergeCommit": {"oid": "aa28fc13c558ac2f81aa3b0ed0256db675d681db"}, "closed": true, "closedAt": "2020-05-16T11:34:39Z", "author": {"login": "toregge"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchfEyQAH2gAyNDE4NDk5NTEyOmE1YjQ5YmI5ZjI5Y2Q5NzI0Y2M1MzhiMTI4OTAxZTNiNjk4NTMzZjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchi9yxgFqTQxMjY5OTk3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/a5b49bb9f29cd9724cc538b128901e3b698533f8", "committedDate": "2020-05-15T09:57:52Z", "message": "Unpack interleaved features if they are needed in equiv search."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNjEyMjIy", "url": "https://github.com/vespa-engine/vespa/pull/13264#pullrequestreview-412612222", "createdAt": "2020-05-15T12:42:05Z", "commit": {"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0MjowNVrOGWDMwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0MjowNVrOGWDMwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDI3Mw==", "bodyText": "Please extend searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp with new test cases for the new functionality that is added.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425774273", "createdAt": "2020-05-15T12:42:05Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/fef/termmatchdatamerger.cpp", "diffHunk": "@@ -41,31 +41,52 @@ TermMatchDataMerger::merge(uint32_t docid,\n {\n     _scratch.clear();\n     bool wasMatch = false;\n+    bool needs_normal_features = out.needs_normal_features();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b49bb9f29cd9724cc538b128901e3b698533f8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e65f5cc1f099a339be26ee9b7de98f29dc32b85b", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/e65f5cc1f099a339be26ee9b7de98f29dc32b85b", "committedDate": "2020-05-15T13:09:05Z", "message": "Rewrite term match data merger test to use gtest."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e", "committedDate": "2020-05-15T13:27:23Z", "message": "Extend term match data merger test: merging of interleaved features."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNjY0Mjkz", "url": "https://github.com/vespa-engine/vespa/pull/13264#pullrequestreview-412664293", "createdAt": "2020-05-15T13:47:27Z", "commit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo0NzoyN1rOGWFleA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMzo1Mjo1MVrOGWFzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxMzM2OA==", "bodyText": "Typo? dected -> detected", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425813368", "createdAt": "2020-05-15T13:47:27Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(2u, out.getNumOccs());\n+    EXPECT_EQ(30u, out.getFieldLength());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features_with_dected_duplicate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNDgyOA==", "bodyText": "Consider using different value than a so that max of field lengths are tested.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425814828", "createdAt": "2020-05-15T13:49:47Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.appendPosition(make_pos(5));\n+\n+    b.reset(docid);\n+    b.appendPosition(make_pos(3));\n+\n+    merger.merge(docid);\n+    EXPECT_EQ(docid, out.getDocId());\n+    EXPECT_EQ(0u, out.size());\n+}\n+\n+TEST(TermMatchDataMergerTest, merge_interleaved_features)\n+{\n+    TermFieldMatchData a;\n+    TermFieldMatchData b;\n+    MDMIs input;\n+    input.push_back(MDMI(&a, 0.5));\n+    input.push_back(MDMI(&b, 1.5));\n+\n+    TermFieldMatchData out;\n+    TermFieldMatchDataArray output;\n+    output.add(&out);\n+    out.setNeedNormalFeatures(false);\n+    out.setNeedInterleavedFeatures(true);\n+    TermMatchDataMerger merger(input, output);\n+\n+    uint32_t docid = 5;\n+\n+    a.reset(docid);\n+    a.setNumOccs(1);\n+    a.setFieldLength(30);\n+\n+    b.reset(docid);\n+    b.setNumOccs(1);\n+    b.setFieldLength(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjk1MQ==", "bodyText": "These 3 tests share basically the same setup, from line 250 to 260. The only difference is which bools are set on out. I suggest putting the shared code into a test class with an init() function (or similar) that takes the two bools and instantiate the merger.", "url": "https://github.com/vespa-engine/vespa/pull/13264#discussion_r425816951", "createdAt": "2020-05-15T13:52:51Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/fef/termmatchdatamerger/termmatchdatamerger_test.cpp", "diffHunk": "@@ -245,5 +245,98 @@ TEST(TermMatchDataMergerTest, merge_max_element_length)\n     EXPECT_EQ(1000u, out.getIterator().getFieldLength());\n }\n \n+TEST(TermMatchDataMergerTest, merge_no_normal_features)\n+{\n+    TermFieldMatchData a;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ee00fdb032d28e2473c4eab2fa98cf8b2f2d3e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1b5bdb2538d5bfe2d354eb40c139af6f95cfc9", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/ce1b5bdb2538d5bfe2d354eb40c139af6f95cfc9", "committedDate": "2020-05-15T14:14:14Z", "message": "Move common code to new test class."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNjk5OTcw", "url": "https://github.com/vespa-engine/vespa/pull/13264#pullrequestreview-412699970", "createdAt": "2020-05-15T14:29:51Z", "commit": {"oid": "ce1b5bdb2538d5bfe2d354eb40c139af6f95cfc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3113, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}