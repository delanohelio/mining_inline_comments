{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODc4NDQx", "number": 11861, "title": "Emit metrics on job starts and ends, with status as name and job id a\u2026", "bodyText": "\u2026s dim.\n@mpolden please review.\nAny comments on metric names, @frodelu @yngveaasheim ?", "createdAt": "2020-01-20T15:03:35Z", "url": "https://github.com/vespa-engine/vespa/pull/11861", "merged": true, "mergeCommit": {"oid": "869cd731a091ec29869a75e0ffd0330b46f3c0a8"}, "closed": true, "closedAt": "2020-01-21T10:12:31Z", "author": {"login": "jonmv"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8N6WUgH2gAyMzY0ODc4NDQxOjc5MDAyNzA2Nzg3Y2E0YzFkZWY1ZTVlZjUwYzRlZTEzNDBlMDZkZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8eWOogFqTM0NTc2MjEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "79002706787ca4c1def5e5ef50c4ee1340e06dd0", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/79002706787ca4c1def5e5ef50c4ee1340e06dd0", "committedDate": "2020-01-20T15:02:53Z", "message": "Emit metrics on job starts and ends, with status as name and job id as dim."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjcwNDU0", "url": "https://github.com/vespa-engine/vespa/pull/11861#pullrequestreview-345670454", "createdAt": "2020-01-21T07:14:45Z", "commit": {"oid": "79002706787ca4c1def5e5ef50c4ee1340e06dd0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNzoxNDo0NVrOFfwPoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNzo0Njo0NVrOFfwzHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg0MDYwOQ==", "bodyText": "Typo.", "url": "https://github.com/vespa-engine/vespa/pull/11861#discussion_r368840609", "createdAt": "2020-01-21T07:14:45Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/JobMetrics.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.yahoo.vespa.hosted.controller.deployment;\n+\n+import com.yahoo.config.provision.SystemName;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.vespa.hosted.controller.api.integration.deployment.JobId;\n+\n+import java.util.Map;\n+\n+/**\n+ * Records metrics related to deployment jobs.\n+ *\n+ * @author jommv", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79002706787ca4c1def5e5ef50c4ee1340e06dd0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg0OTExMg==", "bodyText": "Missing copyright header:\n// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.", "url": "https://github.com/vespa-engine/vespa/pull/11861#discussion_r368849112", "createdAt": "2020-01-21T07:44:44Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/JobMetrics.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.yahoo.vespa.hosted.controller.deployment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79002706787ca4c1def5e5ef50c4ee1340e06dd0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg0OTY5NQ==", "bodyText": "Include the unexpected value in the message (or remove this case and let default handle it).", "url": "https://github.com/vespa-engine/vespa/pull/11861#discussion_r368849695", "createdAt": "2020-01-21T07:46:45Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/JobMetrics.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.yahoo.vespa.hosted.controller.deployment;\n+\n+import com.yahoo.config.provision.SystemName;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.vespa.hosted.controller.api.integration.deployment.JobId;\n+\n+import java.util.Map;\n+\n+/**\n+ * Records metrics related to deployment jobs.\n+ *\n+ * @author jommv\n+ */\n+public class JobMetrics {\n+\n+    public static final String start = \"deployment.start\";\n+    public static final String outOfCapacity = \"deployment.outOfCapacity\";\n+    public static final String deploymentFailure = \"deployment.deploymentFailure\";\n+    public static final String convergenceFailure = \"deployment.convergenceFailure\";\n+    public static final String testFailure = \"deployment.testFailure\";\n+    public static final String error = \"deployment.error\";\n+    public static final String abort = \"deployment.abort\";\n+    public static final String success = \"deployment.success\";\n+\n+    private final Metric metric;\n+    private final SystemName system;\n+\n+    public JobMetrics(Metric metric, SystemName system) {\n+        this.metric = metric;\n+        this.system = system;\n+    }\n+\n+    public void jobStarted(JobId id) {\n+        metric.add(start, 1, metric.createContext(contextOf(id)));\n+    }\n+\n+    public void jobFinished(JobId id, RunStatus status) {\n+        metric.add(valueOf(status), 1, metric.createContext(contextOf(id)));\n+    }\n+\n+    Map<String, String> contextOf(JobId id) {\n+        return Map.of(\"tenant\", id.application().tenant().value(),\n+                      \"application\", id.application().application().value(),\n+                      \"instance\", id.application().instance().value(),\n+                      \"job\", id.type().jobName(),\n+                      \"environment\", id.type().environment().value(),\n+                      \"region\", id.type().zone(system).region().value());\n+    }\n+\n+    static String valueOf(RunStatus status) {\n+        switch (status) {\n+            case outOfCapacity: return outOfCapacity;\n+            case deploymentFailed: return deploymentFailure;\n+            case installationFailed: return convergenceFailure;\n+            case testFailure: return testFailure;\n+            case error: return error;\n+            case aborted: return abort;\n+            case success: return success;\n+            case running: throw new IllegalArgumentException(\"Not supposed to get this value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79002706787ca4c1def5e5ef50c4ee1340e06dd0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43105be5a09fc15ff33013c711604e0b1df3fd1e", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/43105be5a09fc15ff33013c711604e0b1df3fd1e", "committedDate": "2020-01-21T08:36:57Z", "message": "Fix author name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73f1b28590558a39d1ac29ffeaa45448c5b08593", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/73f1b28590558a39d1ac29ffeaa45448c5b08593", "committedDate": "2020-01-21T08:37:39Z", "message": "Add copyright header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cdf8bf167755f70c127514bda16a40b568487c0", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/4cdf8bf167755f70c127514bda16a40b568487c0", "committedDate": "2020-01-21T08:38:49Z", "message": "Don't special-case pointlessly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NzYyMTMz", "url": "https://github.com/vespa-engine/vespa/pull/11861#pullrequestreview-345762133", "createdAt": "2020-01-21T10:11:49Z", "commit": {"oid": "4cdf8bf167755f70c127514bda16a40b568487c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3950, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}