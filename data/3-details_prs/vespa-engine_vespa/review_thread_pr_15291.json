{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjYwNjcx", "number": 15291, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjowNToxOFrOE3xNaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDozMzozMlrOE4sDiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTEzMzg1OnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/gid_to_lid_map_key.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjowNToxOVrOHxTnmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxNjo0NVrOHxUFxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2MzcwNw==", "bodyText": "I assume these should just be inlined and noexcept.", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r521463707", "createdAt": "2020-11-11T16:05:19Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/gid_to_lid_map_key.h", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <limits>\n+\n+namespace document { class GlobalId; }\n+\n+namespace proton::documentmetastore {\n+\n+/*\n+ * Class containing lid and the most significant portion of gid according\n+ * to compare functor (document::GlobalId::BucketOrderCmp).\n+ */\n+class GidToLidMapKey {\n+    uint32_t _lid;\n+    uint32_t _gid_key;\n+    static constexpr uint32_t FIND_DOC_ID = std::numeric_limits<uint32_t>::max();\n+\n+public:\n+    GidToLidMapKey();\n+    GidToLidMapKey(uint32_t lid, uint32_t gid_key);\n+    GidToLidMapKey(uint32_t lid, const document::GlobalId &gid);\n+    static GidToLidMapKey make_find_key(const document::GlobalId &gid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ceb83036383d9f5f02c33a55078b8b40a748c9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3MTQyOA==", "bodyText": "Not inlined as not frequently called.", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r521471428", "createdAt": "2020-11-11T16:16:45Z", "author": {"login": "baldersheim"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/gid_to_lid_map_key.h", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <limits>\n+\n+namespace document { class GlobalId; }\n+\n+namespace proton::documentmetastore {\n+\n+/*\n+ * Class containing lid and the most significant portion of gid according\n+ * to compare functor (document::GlobalId::BucketOrderCmp).\n+ */\n+class GidToLidMapKey {\n+    uint32_t _lid;\n+    uint32_t _gid_key;\n+    static constexpr uint32_t FIND_DOC_ID = std::numeric_limits<uint32_t>::max();\n+\n+public:\n+    GidToLidMapKey();\n+    GidToLidMapKey(uint32_t lid, uint32_t gid_key);\n+    GidToLidMapKey(uint32_t lid, const document::GlobalId &gid);\n+    static GidToLidMapKey make_find_key(const document::GlobalId &gid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2MzcwNw=="}, "originalCommit": {"oid": "97ceb83036383d9f5f02c33a55078b8b40a748c9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODc3NTEyOnYy", "diffSide": "RIGHT", "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDozMzozMlrOHywnQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDozMzozMlrOHywnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4NzMzMA==", "bodyText": "Consider updating the comment to reflect the new key type.", "url": "https://github.com/vespa-engine/vespa/pull/15291#discussion_r522987330", "createdAt": "2020-11-13T14:33:32Z", "author": {"login": "geirst"}, "path": "searchcore/src/vespa/searchcore/proton/documentmetastore/documentmetastore.h", "diffHunk": "@@ -60,7 +60,7 @@ class DocumentMetaStore final : public DocumentMetaStoreAttribute,\n     // Lids are stored as keys in the tree, sorted by their gid\n     // counterpart.  The LidGidKeyComparator class maps from lids -> metadata by\n     // using the metadata store.\n-    typedef vespalib::btree::BTree<DocId, vespalib::btree::BTreeNoLeafData,\n+    typedef vespalib::btree::BTree<documentmetastore::GidToLidMapKey, vespalib::btree::BTreeNoLeafData,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97ceb83036383d9f5f02c33a55078b8b40a748c9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 928, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}