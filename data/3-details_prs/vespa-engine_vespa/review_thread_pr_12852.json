{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NjI5ODAw", "number": 12852, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMTowNFrODvH9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMTowNFrODvH9QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQwMDMzOnYy", "diffSide": "RIGHT", "path": "fastos/src/vespa/fastos/unix_file.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzoyMTowNFrOGBXXWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozNzoyNVrOGBYEQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NDU2OA==", "bodyText": "should it be \"pread\" ?", "url": "https://github.com/vespa-engine/vespa/pull/12852#discussion_r404084568", "createdAt": "2020-04-06T13:21:04Z", "author": {"login": "baldersheim"}, "path": "fastos/src/vespa/fastos/unix_file.cpp", "diffHunk": "@@ -58,6 +72,12 @@ void FastOS_UNIX_File::ReadBuf(void *buffer, size_t length,\n     ssize_t readResult;\n \n     readResult = pread(_filedes, buffer, length, readOffset);\n+    if (readResult < 0 && _failedHandler != nullptr) {\n+        int error = errno;\n+        const char *fileName = GetFileName();\n+        _failedHandler(\"read\", fileName, error, readOffset, length, readResult);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004a355bf27d3edd82571dd0d086f7939e108df6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5NjA2NA==", "bodyText": "This reflects how it is done on linux and what the ioerrorhandler unit test expects.\nThe error reporting does not differentiate between pread and read, nor between pwrite and write.", "url": "https://github.com/vespa-engine/vespa/pull/12852#discussion_r404096064", "createdAt": "2020-04-06T13:37:25Z", "author": {"login": "toregge"}, "path": "fastos/src/vespa/fastos/unix_file.cpp", "diffHunk": "@@ -58,6 +72,12 @@ void FastOS_UNIX_File::ReadBuf(void *buffer, size_t length,\n     ssize_t readResult;\n \n     readResult = pread(_filedes, buffer, length, readOffset);\n+    if (readResult < 0 && _failedHandler != nullptr) {\n+        int error = errno;\n+        const char *fileName = GetFileName();\n+        _failedHandler(\"read\", fileName, error, readOffset, length, readResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA4NDU2OA=="}, "originalCommit": {"oid": "004a355bf27d3edd82571dd0d086f7939e108df6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1806, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}