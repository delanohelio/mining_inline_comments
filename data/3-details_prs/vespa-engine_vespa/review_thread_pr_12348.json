{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjA1Mzcx", "number": 12348, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0MjowNlrODjIKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NTowNFrODjIPvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYwNTQ1OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0MjowNlrOFuwt2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTowMjowOVrOFvJ8cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3Njk4NQ==", "bodyText": "Shouldn't we still differentiate between max links for level 0 and hierarchical levels?", "url": "https://github.com/vespa-engine/vespa/pull/12348#discussion_r384576985", "createdAt": "2020-02-26T15:42:06Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "diffHunk": "@@ -287,8 +325,8 @@ HnswIndex::add_document(uint32_t docid)\n     while (search_level >= 0) {\n         // TODO: Rename to search_level?\n         search_layer(input, _cfg.neighbors_to_explore_at_construction(), best_neighbors, search_level);\n-        auto neighbors = select_neighbors(best_neighbors.peek(), max_links_for_level(search_level));\n-        connect_new_node(docid, neighbors, search_level);\n+        auto neighbors = select_neighbors(best_neighbors.peek(), _cfg.max_links_at_hierarchic_levels());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eff781ae386d2f169dcde363ecf1f94e1397cd"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4MTczMA==", "bodyText": "yes and no; we're supposed to select (up to ) M neighbors on all layers when inserting, but the \"Mmax\" used when shrinking is differentiatied (Mmax = M while Mmax0 = 2 * M)", "url": "https://github.com/vespa-engine/vespa/pull/12348#discussion_r384981730", "createdAt": "2020-02-27T08:43:55Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "diffHunk": "@@ -287,8 +325,8 @@ HnswIndex::add_document(uint32_t docid)\n     while (search_level >= 0) {\n         // TODO: Rename to search_level?\n         search_layer(input, _cfg.neighbors_to_explore_at_construction(), best_neighbors, search_level);\n-        auto neighbors = select_neighbors(best_neighbors.peek(), max_links_for_level(search_level));\n-        connect_new_node(docid, neighbors, search_level);\n+        auto neighbors = select_neighbors(best_neighbors.peek(), _cfg.max_links_at_hierarchic_levels());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3Njk4NQ=="}, "originalCommit": {"oid": "b3eff781ae386d2f169dcde363ecf1f94e1397cd"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk5MDMyMw==", "bodyText": "Ok, I see", "url": "https://github.com/vespa-engine/vespa/pull/12348#discussion_r384990323", "createdAt": "2020-02-27T09:02:09Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "diffHunk": "@@ -287,8 +325,8 @@ HnswIndex::add_document(uint32_t docid)\n     while (search_level >= 0) {\n         // TODO: Rename to search_level?\n         search_layer(input, _cfg.neighbors_to_explore_at_construction(), best_neighbors, search_level);\n-        auto neighbors = select_neighbors(best_neighbors.peek(), max_links_for_level(search_level));\n-        connect_new_node(docid, neighbors, search_level);\n+        auto neighbors = select_neighbors(best_neighbors.peek(), _cfg.max_links_at_hierarchic_levels());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3Njk4NQ=="}, "originalCommit": {"oid": "b3eff781ae386d2f169dcde363ecf1f94e1397cd"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYxODUzOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NTowNFrOFuw2Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODo0NDowNFrOFvJbNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTEwNw==", "bodyText": "I guess we can remove the TODO on the next line?", "url": "https://github.com/vespa-engine/vespa/pull/12348#discussion_r384579107", "createdAt": "2020-02-26T15:45:04Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "diffHunk": "@@ -287,8 +325,8 @@ HnswIndex::add_document(uint32_t docid)\n     while (search_level >= 0) {\n         // TODO: Rename to search_level?\n         search_layer(input, _cfg.neighbors_to_explore_at_construction(), best_neighbors, search_level);\n-        auto neighbors = select_neighbors(best_neighbors.peek(), max_links_for_level(search_level));\n-        connect_new_node(docid, neighbors, search_level);\n+        auto neighbors = select_neighbors(best_neighbors.peek(), _cfg.max_links_at_hierarchic_levels());\n+        connect_new_node(docid, neighbors.used, search_level);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3eff781ae386d2f169dcde363ecf1f94e1397cd"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4MTgxMw==", "bodyText": "right!", "url": "https://github.com/vespa-engine/vespa/pull/12348#discussion_r384981813", "createdAt": "2020-02-27T08:44:04Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/vespa/searchlib/tensor/hnsw_index.cpp", "diffHunk": "@@ -287,8 +325,8 @@ HnswIndex::add_document(uint32_t docid)\n     while (search_level >= 0) {\n         // TODO: Rename to search_level?\n         search_layer(input, _cfg.neighbors_to_explore_at_construction(), best_neighbors, search_level);\n-        auto neighbors = select_neighbors(best_neighbors.peek(), max_links_for_level(search_level));\n-        connect_new_node(docid, neighbors, search_level);\n+        auto neighbors = select_neighbors(best_neighbors.peek(), _cfg.max_links_at_hierarchic_levels());\n+        connect_new_node(docid, neighbors.used, search_level);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTEwNw=="}, "originalCommit": {"oid": "b3eff781ae386d2f169dcde363ecf1f94e1397cd"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2361, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}