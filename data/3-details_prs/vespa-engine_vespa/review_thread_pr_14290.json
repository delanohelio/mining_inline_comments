{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NjcyOTEw", "number": 14290, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjowODo0M1rOEgcc_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjowODo0M1rOEgcc_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDU2MDYzOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjowODo0M1rOHNTyBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjo1Nzo1MlrOHNyYiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxNzYzNw==", "bodyText": "1 - A little comment about this not changing the hash value would be good.\n2 - I guess you can can also write it as\ncell.first = SparseTensorAddressRef(cell.first, stash);\nYou should see what effect it has on speed. The compiler might find it easier or harder.\nnoexcept on the SparseTensorAddressRef constructors might also make it easier on the optimizer.", "url": "https://github.com/vespa-engine/vespa/pull/14290#discussion_r483717637", "createdAt": "2020-09-04T16:08:43Z", "author": {"login": "baldersheim"}, "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor.cpp", "diffHunk": "@@ -29,10 +29,11 @@ using Cells = SparseTensor::Cells;\n void\n copyCells(Cells &cells, const Cells &cells_in, Stash &stash)\n {\n-    for (const auto &cell : cells_in) {\n+    cells = cells_in;\n+    for (auto &cell : cells) {\n         SparseTensorAddressRef oldRef = cell.first;\n         SparseTensorAddressRef newRef(oldRef, stash);\n-        cells[newRef] = cell.second;\n+        cell.first = newRef;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5648f551b6f8953a79fe4d31ce5ffeebe17609a8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIxOTAxOQ==", "bodyText": "added some comments.\ndoing 2) or adding noexcept didn't have any impact on the produced code, so I left it as-is.", "url": "https://github.com/vespa-engine/vespa/pull/14290#discussion_r484219019", "createdAt": "2020-09-07T06:57:52Z", "author": {"login": "arnej27959"}, "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor.cpp", "diffHunk": "@@ -29,10 +29,11 @@ using Cells = SparseTensor::Cells;\n void\n copyCells(Cells &cells, const Cells &cells_in, Stash &stash)\n {\n-    for (const auto &cell : cells_in) {\n+    cells = cells_in;\n+    for (auto &cell : cells) {\n         SparseTensorAddressRef oldRef = cell.first;\n         SparseTensorAddressRef newRef(oldRef, stash);\n-        cells[newRef] = cell.second;\n+        cell.first = newRef;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxNzYzNw=="}, "originalCommit": {"oid": "5648f551b6f8953a79fe4d31ce5ffeebe17609a8"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1378, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}