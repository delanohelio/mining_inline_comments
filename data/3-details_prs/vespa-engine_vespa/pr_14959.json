{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MjgwNjI5", "number": 14959, "title": "Balder/reduce persistenutils tentackles", "bodyText": "@vekterli and @geirst PR", "createdAt": "2020-10-19T21:12:08Z", "url": "https://github.com/vespa-engine/vespa/pull/14959", "merged": true, "mergeCommit": {"oid": "45c15e502a9655355071a59f529b0acf93af6a1c"}, "closed": true, "closedAt": "2020-10-20T08:54:33Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUKWNnAH2gAyNTA2MjgwNjI5OjM5ZjNmNzRkNjAxMDg3NDk1YTU4NjI4Y2NlODk1ODdhYWU2OThhZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUU_xugFqTUxMjQ2NTAzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39f3f74d601087495a58628cce89587aae698adb", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/39f3f74d601087495a58628cce89587aae698adb", "committedDate": "2020-10-19T20:39:02Z", "message": "- Avoid using PersitenceUtil as a global object that can reach everything. Only wire in what is needed.\n- GC unused code and make it explicit what is private and what is public.\n- Remove some traces of diskCount."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d2863fd9c341d3f576336d87198568933e8c364", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/6d2863fd9c341d3f576336d87198568933e8c364", "committedDate": "2020-10-19T21:06:59Z", "message": "Further reduce the semi global tentacles."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "973f3537f85d197cec229308fbe970950f4978fc", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/973f3537f85d197cec229308fbe970950f4978fc", "committedDate": "2020-10-20T04:50:06Z", "message": "Make component menber const"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d23550f0fa4b7547ea00d04e1a90822a6ae7f4d5", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/d23550f0fa4b7547ea00d04e1a90822a6ae7f4d5", "committedDate": "2020-10-20T04:52:30Z", "message": "Add a create and register method for creating PersistenceHandlers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "026648d68064a6158c6a4117fe84478912e6b5e6", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/026648d68064a6158c6a4117fe84478912e6b5e6", "committedDate": "2020-10-20T05:15:28Z", "message": "constify"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDc4MDg1", "url": "https://github.com/vespa-engine/vespa/pull/14959#pullrequestreview-512478085", "createdAt": "2020-10-20T08:52:22Z", "commit": {"oid": "026648d68064a6158c6a4117fe84478912e6b5e6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDY1MDMz", "url": "https://github.com/vespa-engine/vespa/pull/14959#pullrequestreview-512465033", "createdAt": "2020-10-20T08:37:44Z", "commit": {"oid": "026648d68064a6158c6a4117fe84478912e6b5e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODozNzo0NFrOHkxEUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODozNzo0NFrOHkxEUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMxNDcwNQ==", "bodyText": "Could this also use createHandler() ?", "url": "https://github.com/vespa-engine/vespa/pull/14959#discussion_r508314705", "createdAt": "2020-10-20T08:37:44Z", "author": {"login": "vekterli"}, "path": "storage/src/tests/persistence/mergehandlertest.cpp", "diffHunk": "@@ -199,7 +208,8 @@ MergeHandlerTest::setUpChain(ChainPos pos) {\n // Test a regular merge bucket command fetching data, including\n // puts, removes, unrevertable removes & duplicates.\n TEST_F(MergeHandlerTest, merge_bucket_command) {\n-    MergeHandler handler(getEnv(), getPersistenceProvider());\n+    MergeHandler handler(getEnv(), getPersistenceProvider(),\n+                         getEnv()._component.getClusterName(), getEnv()._component.getClock());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "026648d68064a6158c6a4117fe84478912e6b5e6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2292, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}