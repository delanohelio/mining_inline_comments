{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjc5MDUw", "number": 11782, "title": "Balder/bring your backing buffer along", "bodyText": "@vekterli PR\nShould be no semantic changes here.", "createdAt": "2020-01-14T14:57:12Z", "url": "https://github.com/vespa-engine/vespa/pull/11782", "merged": true, "mergeCommit": {"oid": "b324c19e007a7a57ba731ed72a01d35cd6937ed7"}, "closed": true, "closedAt": "2020-01-16T10:45:13Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6RSSjAH2gAyMzYyNjc5MDUwOjhhYjBkMTdmODZlZDRmNDY4MGYyYzMyMzdjNGI1ZGQ5OTM3YjNhZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb63ypTAH2gAyMzYyNjc5MDUwOjZiODE2MTk4YmQwZDhhNTE4NDY1YzgwMTVlNmRjOWVlNDAzOTljZDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ab0d17f86ed4f4680f2c3237c4b5dd9937b3adb", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/8ab0d17f86ed4f4680f2c3237c4b5dd9937b3adb", "committedDate": "2020-01-14T13:50:54Z", "message": "use std::move instead of swap to reduce simplify strange interfaces."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ddc242f9ab1331c9bf0d5ce373a7a4e3b153196", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/6ddc242f9ab1331c9bf0d5ce373a7a4e3b153196", "committedDate": "2020-01-14T13:50:54Z", "message": "GC constructor collapsed away."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a772cb05a682fd05fabd0d571417ec7976d0165d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/a772cb05a682fd05fabd0d571417ec7976d0165d", "committedDate": "2020-01-14T13:50:54Z", "message": "Avoid swap. Inline and use anonymous namespaces for better code generation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80835efd5c385b6f8e19212a7c032e57af1fd73d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/80835efd5c385b6f8e19212a7c032e57af1fd73d", "committedDate": "2020-01-14T14:56:03Z", "message": "Remove virtuality of DocumentId."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0636713bd57f443dd486ff10296465327b333a1", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/f0636713bd57f443dd486ff10296465327b333a1", "committedDate": "2020-01-14T15:04:17Z", "message": "GC unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e0c1731e36eb7048977ad14d6457182fb5ec4c1", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/7e0c1731e36eb7048977ad14d6457182fb5ec4c1", "committedDate": "2020-01-14T15:38:54Z", "message": "GC unused code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzE2MTky", "url": "https://github.com/vespa-engine/vespa/pull/11782#pullrequestreview-343316192", "createdAt": "2020-01-15T15:44:16Z", "commit": {"oid": "80835efd5c385b6f8e19212a7c032e57af1fd73d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0NDoxNlrOFd8yvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo1Mjo0NFrOFd9HKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0OTA1Mg==", "bodyText": "Is explicit toString needed since DocumentId instances are streamable? This question applies to other places where this is done in the PR", "url": "https://github.com/vespa-engine/vespa/pull/11782#discussion_r366949052", "createdAt": "2020-01-15T15:44:16Z", "author": {"login": "vekterli"}, "path": "document/src/vespa/document/fieldvalue/document.cpp", "diffHunk": "@@ -226,9 +226,9 @@ Document::print(std::ostream& out, bool verbose,\n                 const std::string& indent) const\n {\n     if (!verbose) {\n-        out << \"Document(\" << getId() << \", \" << getType() << \")\";\n+        out << \"Document(\" << getId().toString() << \", \" << getType() << \")\";\n     } else {\n-        out << \"Document(\" << getId() << \"\\n\" << indent << \"  \";\n+        out << \"Document(\" << getId().toString() << \"\\n\" << indent << \"  \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80835efd5c385b6f8e19212a7c032e57af1fd73d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk1NDI4Mw==", "bodyText": "Consider adding a comment that this type must be a compatible DocumentType instance. Or perhaps move the invocation of verifyDocumentType into this function (updating VespaDocumentDeserializer::readDocument accordingly)?", "url": "https://github.com/vespa-engine/vespa/pull/11782#discussion_r366954283", "createdAt": "2020-01-15T15:52:44Z", "author": {"login": "vekterli"}, "path": "document/src/vespa/document/fieldvalue/document.h", "diffHunk": "@@ -54,11 +56,10 @@ class Document : public StructuredFieldValue\n \n     Document& operator=(const Document&);\n \n-    void swap(Document & rhs);\n-\n     void accept(FieldValueVisitor &visitor) override { visitor.visit(*this); }\n     void accept(ConstFieldValueVisitor &visitor) const override { visitor.visit(*this); }\n \n+    void setType(const DataType & type) override;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a772cb05a682fd05fabd0d571417ec7976d0165d"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b816198bd0d8a518465c8015e6dc9ee40399cd2", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/6b816198bd0d8a518465c8015e6dc9ee40399cd2", "committedDate": "2020-01-16T10:42:38Z", "message": "Just use the stream method."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4000, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}