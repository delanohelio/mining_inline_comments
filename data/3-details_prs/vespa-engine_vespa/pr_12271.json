{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDQwOTI1", "number": 12271, "title": "Use a static connectionpool repo to reduce number of threads.", "bodyText": "@hmusum PR", "createdAt": "2020-02-19T23:01:10Z", "url": "https://github.com/vespa-engine/vespa/pull/12271", "merged": true, "mergeCommit": {"oid": "bbf4920054e3da58a71baa578df7786495df040a"}, "closed": true, "closedAt": "2020-02-20T09:41:43Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF-swNAH2gAyMzc3NDQwOTI1OjczMjNkMjY2ZGE1NTEzODJmMDg1ODJhMDQ5YWE5MDcyMGM4NDBmNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGH11hAFqTM2MTc1Mzc4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7323d266da551382f08582a049aa90720c840f4a", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/7323d266da551382f08582a049aa90720c840f4a", "committedDate": "2020-02-19T22:58:42Z", "message": "Use a static connectionpool repo to reduce number of threads."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjY2NTU0", "url": "https://github.com/vespa-engine/vespa/pull/12271#pullrequestreview-361666554", "createdAt": "2020-02-20T06:53:05Z", "commit": {"oid": "7323d266da551382f08582a049aa90720c840f4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNjo1MzowNlrOFsH91g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNjo1MzowNlrOFsH91g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgxMjE4Mg==", "bodyText": "Won't count be 2 then for a newly created CountedPool? So ContedPool should either start count on 0 or only increment in this place when countedPool is not null?", "url": "https://github.com/vespa-engine/vespa/pull/12271#discussion_r381812182", "createdAt": "2020-02-20T06:53:06Z", "author": {"login": "hmusum"}, "path": "config/src/main/java/com/yahoo/config/subscription/impl/JRTManagedConnectionPools.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.yahoo.config.subscription.impl;\n+\n+import com.yahoo.config.subscription.ConfigSourceSet;\n+import com.yahoo.vespa.config.JRTConnectionPool;\n+import com.yahoo.vespa.config.TimingValues;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.TimeUnit;\n+\n+public class JRTManagedConnectionPools {\n+    private static class JRTSourceThreadFactory implements ThreadFactory {\n+        @Override\n+        public Thread newThread(Runnable runnable) {\n+            Thread t = new Thread(runnable, String.format(\"jrt-config-requester-%d\", System.currentTimeMillis()));\n+            // We want a daemon thread to avoid hanging threads in case something goes wrong in the config system\n+            t.setDaemon(true);\n+            return t;\n+        }\n+    }\n+    private static class CountedPool {\n+        long count;\n+        final JRTConnectionPool pool;\n+        final ScheduledThreadPoolExecutor scheduler = new ScheduledThreadPoolExecutor(1, new JRTSourceThreadFactory());\n+        CountedPool(JRTConnectionPool requester) {\n+            this.pool = requester;\n+            count = 1;\n+        }\n+    }\n+    private Map<ConfigSourceSet, CountedPool> pools = new HashMap<>();\n+\n+    public synchronized JRTConfigRequester acquire(ConfigSourceSet sourceSet, TimingValues timingValues) {\n+        CountedPool countedPool = pools.get(sourceSet);\n+        if (countedPool == null) {\n+            countedPool = new CountedPool(new JRTConnectionPool(sourceSet));\n+            pools.put(sourceSet, countedPool);\n+        }\n+        countedPool.count++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7323d266da551382f08582a049aa90720c840f4a"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23eca521e7d728bb1e96b1e899e8a046cfd74bda", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/23eca521e7d728bb1e96b1e899e8a046cfd74bda", "committedDate": "2020-02-20T09:35:41Z", "message": "Add test and correct counting errors."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNzUzNzgz", "url": "https://github.com/vespa-engine/vespa/pull/12271#pullrequestreview-361753783", "createdAt": "2020-02-20T09:37:46Z", "commit": {"oid": "23eca521e7d728bb1e96b1e899e8a046cfd74bda"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}