{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTI5MTE2", "number": 14598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoyNzowNVrOEoFC7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoyNzowNVrOEoFC7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDYxMTY1OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/configchange/RestartActions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoyNzowNVrOHY9o8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoyNzowNVrOHY9o8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkzNzc3Ng==", "bodyText": "useForInternalRestart instead?", "url": "https://github.com/vespa-engine/vespa/pull/14598#discussion_r495937776", "createdAt": "2020-09-28T13:27:05Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/configchange/RestartActions.java", "diffHunk": "@@ -59,35 +66,44 @@ public String getServiceType() {\n \n     }\n \n-    private Entry addEntry(ServiceInfo service) {\n-        String clusterName = service.getProperty(\"clustername\").orElse(\"\");\n-        String clusterType = service.getProperty(\"clustertype\").orElse(\"\");\n-        String entryId = clusterType + \".\" + clusterName + \".\" + service.getServiceType();\n-        Entry entry = actions.get(entryId);\n-        if (entry == null) {\n-            entry = new Entry(clusterName, clusterType, service.getServiceType());\n-            actions.put(entryId, entry);\n-        }\n-        return entry;\n-    }\n-\n     private final Map<String, Entry> actions = new TreeMap<>();\n \n-    public RestartActions() {\n+    public RestartActions() { }\n+\n+    private RestartActions(Map<String, Entry> actions) {\n+        this.actions.putAll(actions);\n     }\n \n     public RestartActions(List<ConfigChangeAction> actions) {\n         for (ConfigChangeAction action : actions) {\n             if (action.getType().equals(ConfigChangeAction.Type.RESTART)) {\n                 for (ServiceInfo service : action.getServices()) {\n-                    addEntry(service).\n+                    addEntry(service, action.ignoreForInternalRedeploy()).\n                             addService(service).\n                             addMessage(action.getMessage());\n                 }\n             }\n         }\n     }\n \n+    private Entry addEntry(ServiceInfo service, boolean ignoreForInternalRedeploy) {\n+        String clusterName = service.getProperty(\"clustername\").orElse(\"\");\n+        String clusterType = service.getProperty(\"clustertype\").orElse(\"\");\n+        String entryId = clusterType + \".\" + clusterName + \".\" + service.getServiceType() + \".\" + ignoreForInternalRedeploy;\n+        Entry entry = actions.get(entryId);\n+        if (entry == null) {\n+            entry = new Entry(clusterName, clusterType, service.getServiceType(), ignoreForInternalRedeploy);\n+            actions.put(entryId, entry);\n+        }\n+        return entry;\n+    }\n+\n+    public RestartActions withoutIgnoreForInternalRestart(boolean withoutIgnoreForInternalRestart) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3182f6e4eac5f2c07691a79f855ab8bd5a8b03"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}