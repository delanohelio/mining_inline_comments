{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTc2MzY3", "number": 12242, "title": "Implement TLS client SNI and hostname validation in OpenSSL codec", "bodyText": "@havardpe please review\n@bjorncs FYI\nAlso adds disable-hostname-validation config entry to TLS JSON\nconfig file parsing in C++.\nFor the time being, hostname validation is implicitly disabled\nunless explicitly specified in the config file. This will be\ngradually changed over to be implicitly enabled by default.\nSNI is always sent when a valid connection spec is provided.", "createdAt": "2020-02-18T11:56:57Z", "url": "https://github.com/vespa-engine/vespa/pull/12242", "merged": true, "mergeCommit": {"oid": "acfb0463e55aa4878cc3087ffcee356696eabf2a"}, "closed": true, "closedAt": "2020-02-20T11:58:07Z", "author": {"login": "vekterli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFQFuJAH2gAyMzc2NTc2MzY3Ojc5ZWY2YjU0ZGEwMWU0ODE5MjkxYWUxMGZhYTBmZTVlODMyYWMxYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHwaU2gFqTM2NDA2ODM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2", "author": {"user": {"login": "vekterli", "name": "Tor Brede Vekterli"}}, "url": "https://github.com/vespa-engine/vespa/commit/79ef6b54da01e4819291ae10faa0fe5e832ac1a2", "committedDate": "2020-02-17T16:40:26Z", "message": "Implement TLS client SNI and hostname validation in OpenSSL codec\n\nAlso adds `disable-hostname-validation` config entry to TLS JSON\nconfig file parsing in C++.\n\nFor the time being, hostname validation is implicitly disabled\nunless explicitly specified in the config file. This will be\ngradually changed over to be implicitly enabled by default.\nSNI is always sent when a valid connection spec is provided."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxODQzNjc1", "url": "https://github.com/vespa-engine/vespa/pull/12242#pullrequestreview-361843675", "createdAt": "2020-02-20T11:57:02Z", "commit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDYwODQx", "url": "https://github.com/vespa-engine/vespa/pull/12242#pullrequestreview-364060841", "createdAt": "2020-02-25T11:14:19Z", "commit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToxNDoyMFrOFuCMmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToxNDoyMFrOFuCMmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxNDgxMQ==", "bodyText": "set hostname yes/no validation explicitly?", "url": "https://github.com/vespa-engine/vespa/pull/12242#discussion_r383814811", "createdAt": "2020-02-25T11:14:20Z", "author": {"login": "havardpe"}, "path": "vespalib/src/tests/net/tls/openssl_impl/openssl_impl_test.cpp", "diffHunk": "@@ -57,11 +57,23 @@ void print_decode_result(const char* mode, const DecodeResult& res) {\n             decode_state_to_str(res.state));\n }\n \n+TransportSecurityOptions ts_from_pems(vespalib::stringref ca_certs_pem,\n+                                      vespalib::stringref cert_chain_pem,\n+                                      vespalib::stringref private_key_pem)\n+{\n+    auto ts_builder = TransportSecurityOptions::Params().\n+            ca_certs_pem(ca_certs_pem).\n+            cert_chain_pem(cert_chain_pem).\n+            private_key_pem(private_key_pem).\n+            authorized_peers(AuthorizedPeers::allow_all_authenticated());\n+    return TransportSecurityOptions(std::move(ts_builder));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDY1Njc1", "url": "https://github.com/vespa-engine/vespa/pull/12242#pullrequestreview-364065675", "createdAt": "2020-02-25T11:22:53Z", "commit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToyMjo1M1rOFuCcBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToyMjo1M1rOFuCcBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxODc1Ng==", "bodyText": "consider using private ctor tag trick", "url": "https://github.com/vespa-engine/vespa/pull/12242#discussion_r383818756", "createdAt": "2020-02-25T11:22:53Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/net/tls/impl/openssl_crypto_codec_impl.cpp", "diffHunk": "@@ -230,6 +234,59 @@ OpenSslCryptoCodecImpl::OpenSslCryptoCodecImpl(std::shared_ptr<OpenSslTlsContext\n \n OpenSslCryptoCodecImpl::~OpenSslCryptoCodecImpl() = default;\n \n+std::unique_ptr<OpenSslCryptoCodecImpl>\n+OpenSslCryptoCodecImpl::make_client_codec(std::shared_ptr<OpenSslTlsContextImpl> ctx,\n+                                          const SocketSpec& peer_spec,\n+                                          const SocketAddress& peer_address)\n+{\n+    // Naked new due to private ctor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDY4MzQz", "url": "https://github.com/vespa-engine/vespa/pull/12242#pullrequestreview-364068343", "createdAt": "2020-02-25T11:27:44Z", "commit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToyNzo0NFrOFuCkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMToyNzo0NFrOFuCkmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyMDk1Mw==", "bodyText": "should giving an invalid peer spec fail the handshake if hostname validation is enabled?", "url": "https://github.com/vespa-engine/vespa/pull/12242#discussion_r383820953", "createdAt": "2020-02-25T11:27:44Z", "author": {"login": "havardpe"}, "path": "vespalib/src/vespa/vespalib/net/tls/impl/openssl_crypto_codec_impl.cpp", "diffHunk": "@@ -230,6 +234,59 @@ OpenSslCryptoCodecImpl::OpenSslCryptoCodecImpl(std::shared_ptr<OpenSslTlsContext\n \n OpenSslCryptoCodecImpl::~OpenSslCryptoCodecImpl() = default;\n \n+std::unique_ptr<OpenSslCryptoCodecImpl>\n+OpenSslCryptoCodecImpl::make_client_codec(std::shared_ptr<OpenSslTlsContextImpl> ctx,\n+                                          const SocketSpec& peer_spec,\n+                                          const SocketAddress& peer_address)\n+{\n+    // Naked new due to private ctor\n+    return std::unique_ptr<OpenSslCryptoCodecImpl>(\n+            new OpenSslCryptoCodecImpl(std::move(ctx), peer_spec, peer_address, Mode::Client));\n+}\n+std::unique_ptr<OpenSslCryptoCodecImpl>\n+OpenSslCryptoCodecImpl::make_server_codec(std::shared_ptr<OpenSslTlsContextImpl> ctx,\n+                                          const SocketAddress& peer_address)\n+{\n+    // Naked new due to private ctor\n+    return std::unique_ptr<OpenSslCryptoCodecImpl>(\n+            new OpenSslCryptoCodecImpl(std::move(ctx), SocketSpec::invalid, peer_address, Mode::Server));\n+}\n+\n+void OpenSslCryptoCodecImpl::enable_hostname_validation_if_requested() {\n+    if (_peer_spec.valid() && !_ctx->transport_security_options().disable_hostname_validation()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79ef6b54da01e4819291ae10faa0fe5e832ac1a2"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2902, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}