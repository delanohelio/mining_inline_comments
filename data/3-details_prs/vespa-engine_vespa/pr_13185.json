{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTMxNzM4", "number": 13185, "title": "Balder/handle operation with shorter vectors", "bodyText": "@havardpe PR\nOnly the second commit has any semantics. The first is just code maintenance.", "createdAt": "2020-05-07T21:33:39Z", "url": "https://github.com/vespa-engine/vespa/pull/13185", "merged": true, "mergeCommit": {"oid": "e342edc4fb7cdf8bf7b14e82cc8e26f801754cdf"}, "closed": true, "closedAt": "2020-05-09T12:01:22Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfBPe2gH2gAyNDE0OTMxNzM4OjkwZTNkYzM1OGNhZDQzOGIxMmU1OTQ4OTMwMmM3NDY1NDFjMWRkYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcflO40gH2gAyNDE0OTMxNzM4OmIxOTI1OTRkOTE0N2MyMGJhYjRlYzA4ZTgxZGZlNTEzMDE3MWNhYjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90e3dc358cad438b12e59489302c746541c1dda9", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/90e3dc358cad438b12e59489302c746541c1dda9", "committedDate": "2020-05-07T18:04:33Z", "message": "Code cleanup while reading code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b42b06208f31a120009adade2238d34ce228ed18", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/b42b06208f31a120009adade2238d34ce228ed18", "committedDate": "2020-05-07T21:14:40Z", "message": "In order to handle and/or/andnot where the left hand side is longer than the right hand size,\nwe handle it as if it had been false padded.\nThis is to handle the case where you end up below a SourceBlender, where the disk indexes\nhave different ages and docId limits. These padded bits will never be accessed, as they will never be chosen by the source blender.\nBut having well defined behavior is always good."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/4b071b048ee01b58ef920899a64e928bbb0d88cf", "committedDate": "2020-05-07T21:35:53Z", "message": "Rename after change of sematics."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTQzOTE3", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408143917", "createdAt": "2020-05-08T10:21:21Z", "commit": {"oid": "b42b06208f31a120009adade2238d34ce228ed18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMDoyMToyMVrOGSg13g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMDoyMToyMVrOGSg13g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA2NTYzMA==", "bodyText": "This should check if the right one ends before this one, since the right one could start before this one and also end before this one while still having greater size (should also add unit test for this case).", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422065630", "createdAt": "2020-05-08T10:21:21Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -178,8 +178,17 @@ void\n BitVector::orWith(const BitVector & right)\n {\n     verifyContains(*this, right);\n-    IAccelrated::getAccelrator().orBit(getActiveStart(), right.getWordIndex(getStartIndex()), getActiveBytes());\n \n+    if (right.size() < size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42b06208f31a120009adade2238d34ce228ed18"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTQ1MDMx", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408145031", "createdAt": "2020-05-08T10:23:46Z", "commit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTYyNzcw", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408562770", "createdAt": "2020-05-08T22:31:35Z", "commit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjozMTozNVrOGS1jkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjo1NDozNFrOGS16fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwNTAwOQ==", "bodyText": "Consider adjusting exception message to match new semantics.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422405009", "createdAt": "2020-05-08T22:31:35Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -20,11 +20,11 @@ using vespalib::alloc::Alloc;\n \n namespace {\n \n-void verifyContains(const search::BitVector & a, const search::BitVector & b) __attribute__((noinline));\n+void verifyInclusiveStart(const search::BitVector & a, const search::BitVector & b) __attribute__((noinline));\n \n-void verifyContains(const search::BitVector & a, const search::BitVector & b)\n+void verifyInclusiveStart(const search::BitVector & a, const search::BitVector & b)\n {\n-    if ((a.getStartIndex() < b.getStartIndex()) || (a.size() > b.size())) {\n+    if (a.getStartIndex() < b.getStartIndex()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwODE0MA==", "bodyText": "If right.size() is 0 then we get a wraparound and bad memory accesses. Note that bitvector have other methods that fails in a similar manner when size() is 0, e.g. clearIntervalNoInvalidation(), setInterval(), countInterval().", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422408140", "createdAt": "2020-05-08T22:43:08Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -177,9 +177,18 @@ BitVector::countInterval(Index start, Index end) const\n void\n BitVector::orWith(const BitVector & right)\n {\n-    verifyContains(*this, right);\n-    IAccelrated::getAccelrator().orBit(getActiveStart(), right.getWordIndex(getStartIndex()), getActiveBytes());\n+    verifyInclusiveStart(*this, right);\n \n+    if (right.size() < size()) {\n+        ssize_t commonBytes = numActiveBytes(getStartIndex(), right.size()) - sizeof(Word);\n+        if (commonBytes > 0) {\n+            IAccelrated::getAccelrator().orBit(getActiveStart(), right.getWordIndex(getStartIndex()), commonBytes);\n+        }\n+        Index last(right.size() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQxMDg3OQ==", "bodyText": "Note that repairEnds() fails to set guard bit if size() is 0. Although this should be harmless, since the guard bit should already have been set.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422410879", "createdAt": "2020-05-08T22:54:34Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -199,23 +208,36 @@ BitVector::repairEnds()\n void\n BitVector::andWith(const BitVector & right)\n {\n-    verifyContains(*this, right);\n+    verifyInclusiveStart(*this, right);\n \n-    IAccelrated::getAccelrator().andBit(getActiveStart(), right.getWordIndex(getStartIndex()), getActiveBytes());\n+    uint32_t commonBytes = std::min(getActiveBytes(), numActiveBytes(getStartIndex(), right.size()));\n+    IAccelrated::getAccelrator().andBit(getActiveStart(), right.getWordIndex(getStartIndex()), commonBytes);\n+    if (right.size() < size()) {\n+        clearInterval(right.size(), size());\n+    }\n \n-    setGuardBit();\n+    repairEnds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTcxMDc2", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408571076", "createdAt": "2020-05-08T23:00:03Z", "commit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMzowMDowM1rOGS1_dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMzowMDowM1rOGS1_dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQxMjE1MA==", "bodyText": "Wraparound when right.size() is 0, followed by bad memory access.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422412150", "createdAt": "2020-05-08T23:00:03Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -199,23 +208,36 @@ BitVector::repairEnds()\n void\n BitVector::andWith(const BitVector & right)\n {\n-    verifyContains(*this, right);\n+    verifyInclusiveStart(*this, right);\n \n-    IAccelrated::getAccelrator().andBit(getActiveStart(), right.getWordIndex(getStartIndex()), getActiveBytes());\n+    uint32_t commonBytes = std::min(getActiveBytes(), numActiveBytes(getStartIndex(), right.size()));\n+    IAccelrated::getAccelrator().andBit(getActiveStart(), right.getWordIndex(getStartIndex()), commonBytes);\n+    if (right.size() < size()) {\n+        clearInterval(right.size(), size());\n+    }\n \n-    setGuardBit();\n+    repairEnds();\n     invalidateCachedCount();\n }\n \n \n void\n BitVector::andNotWith(const BitVector& right)\n {\n-    verifyContains(*this, right);\n+    verifyInclusiveStart(*this, right);\n \n-    IAccelrated::getAccelrator().andNotBit(getActiveStart(), right.getWordIndex(getStartIndex()), getActiveBytes());\n+    if (right.size() < size()) {\n+        ssize_t commonBytes = numActiveBytes(getStartIndex(), right.size()) - sizeof(Word);\n+        if (commonBytes > 0) {\n+            IAccelrated::getAccelrator().andNotBit(getActiveStart(), right.getWordIndex(getStartIndex()), commonBytes);\n+        }\n+        Index last(right.size() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b071b048ee01b58ef920899a64e928bbb0d88cf"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1435d93b3d22f5c3819761246c564d6669cac54b", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/1435d93b3d22f5c3819761246c564d6669cac54b", "committedDate": "2020-05-08T23:33:15Z", "message": "Follow up on code PR comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fa23dc9f5530702d9f281b62e04ef8f4c3793c5", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/9fa23dc9f5530702d9f281b62e04ef8f4c3793c5", "committedDate": "2020-05-09T00:40:36Z", "message": "Add protection to avoid going out of bounds when handling an empty bitvector."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTk2MDc5", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408596079", "createdAt": "2020-05-09T01:07:05Z", "commit": {"oid": "1435d93b3d22f5c3819761246c564d6669cac54b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMTowNzowNVrOGS3aJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMTowNzowNVrOGS3aJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzNTM2Nw==", "bodyText": "Consider also checking that org.getStartIndex() is zero or adjusting constructor for AllocatedBitVector to handle\nthat case.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422435367", "createdAt": "2020-05-09T01:07:05Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -351,8 +351,8 @@ BitVector::create(Index start, Index end)\n BitVector::UP\n BitVector::create(const BitVector & org, Index start, Index end)\n {\n-    return (start == 0)\n-           ? create(end)\n+    return ((start == 0) && (end == org.size()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1435d93b3d22f5c3819761246c564d6669cac54b"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTk3MTUy", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408597152", "createdAt": "2020-05-09T01:16:38Z", "commit": {"oid": "9fa23dc9f5530702d9f281b62e04ef8f4c3793c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMToxNjozOVrOGS3d9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMToxNjozOVrOGS3d9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzNjM0MQ==", "bodyText": "This can be simplified if end is set to std::min(end, size()) before checking for start >= end.\nif end or size() is  0 then start >= end will evaluate to true, triggering the early return.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422436341", "createdAt": "2020-05-09T01:16:39Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -91,9 +91,10 @@ BitVector::clearInterval(Index start, Index end)\n }\n \n void\n-BitVector::clearIntervalNoInvalidation(Index start, Index end)\n+BitVector::clearIntervalNoInvalidation(Index start_in, Index end)\n {\n-    if (start >= end) { return; }\n+    Index start = std::max(start_in, getStartIndex());\n+    if (start >= end || end == 0 || size() == 0) { return; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fa23dc9f5530702d9f281b62e04ef8f4c3793c5"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/68709adeaefb2641974fc1e5d951e99254f001dd", "committedDate": "2020-05-09T10:31:55Z", "message": "Refactor and simplify range checking."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQxNjQ2", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408641646", "createdAt": "2020-05-09T11:18:59Z", "commit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxODo1OVrOGS6Z_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxODo1OVrOGS6Z_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDQ3OQ==", "bodyText": "Consider adding curly braces around return 0.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422484479", "createdAt": "2020-05-09T11:18:59Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -133,28 +133,28 @@ BitVector::setInterval(Index start_in, Index end)\n BitVector::Index\n BitVector::count() const\n {\n-    return countInterval(getStartIndex(), size());\n+    return countInterval(Range(getStartIndex(), size()));\n }\n \n BitVector::Index\n-BitVector::countInterval(Index start_in, Index end) const\n+BitVector::countInterval(Range range_in) const\n {\n-    Index start = std::max(start_in, getStartIndex());\n-    if (start >= end || end == 0 || size() == 0) { return 0; }\n+    Range range = sanitize(range_in);\n+    if ( ! range.validNonZero()) return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQxNjY4", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408641668", "createdAt": "2020-05-09T11:19:32Z", "commit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxOTozMlrOGS6aFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxOTozMlrOGS6aFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDUwMA==", "bodyText": "Consider adding curly braces around return statement.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422484500", "createdAt": "2020-05-09T11:19:32Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -85,46 +85,46 @@ BitVector::clear()\n void\n BitVector::clearInterval(Index start, Index end)\n {\n-    clearIntervalNoInvalidation(start, end);\n+    clearIntervalNoInvalidation(Range(start, end));\n \n     invalidateCachedCount();\n }\n \n void\n-BitVector::clearIntervalNoInvalidation(Index start_in, Index end)\n+BitVector::clearIntervalNoInvalidation(Range range_in)\n {\n-    Index start = std::max(start_in, getStartIndex());\n-    if (start >= end || end == 0 || size() == 0) { return; }\n+    Range range = sanitize(range_in);\n+    if ( ! range.validNonZero()) return;\n \n-    Index last = std::min(end, size()) - 1;\n-    Index startw = wordNum(start);\n+    Index last = range.end() - 1;\n+    Index startw = wordNum(range.start());\n     Index endw = wordNum(last);\n \n     if (endw > startw) {\n-        _words[startw++] &= startBits(start);\n+        _words[startw++] &= startBits(range.start());\n         memset(_words+startw, 0, sizeof(*_words)*(endw-startw));\n         _words[endw] &= endBits(last);\n     } else {\n-        _words[startw] &= (startBits(start) | endBits(last));\n+        _words[startw] &= (startBits(range.start()) | endBits(last));\n     }\n }\n \n void\n-BitVector::setInterval(Index start_in, Index end)\n+BitVector::setInterval(Index start_in, Index end_in)\n {\n-    Index start = std::max(start_in, getStartIndex());\n-    if (start >= end || end == 0 || size() == 0) { return; }\n+    Range range = sanitize(Range(start_in, end_in));\n+    if ( ! range.validNonZero()) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQxNjgy", "url": "https://github.com/vespa-engine/vespa/pull/13185#pullrequestreview-408641682", "createdAt": "2020-05-09T11:19:50Z", "commit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxOTo1MFrOGS6aHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMToxOTo1MFrOGS6aHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NDUwOQ==", "bodyText": "Consider adding curly braces around return statement.", "url": "https://github.com/vespa-engine/vespa/pull/13185#discussion_r422484509", "createdAt": "2020-05-09T11:19:50Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/common/bitvector.cpp", "diffHunk": "@@ -85,46 +85,46 @@ BitVector::clear()\n void\n BitVector::clearInterval(Index start, Index end)\n {\n-    clearIntervalNoInvalidation(start, end);\n+    clearIntervalNoInvalidation(Range(start, end));\n \n     invalidateCachedCount();\n }\n \n void\n-BitVector::clearIntervalNoInvalidation(Index start_in, Index end)\n+BitVector::clearIntervalNoInvalidation(Range range_in)\n {\n-    Index start = std::max(start_in, getStartIndex());\n-    if (start >= end || end == 0 || size() == 0) { return; }\n+    Range range = sanitize(range_in);\n+    if ( ! range.validNonZero()) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68709adeaefb2641974fc1e5d951e99254f001dd"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b192594d9147c20bab4ec08e81dfe5130171cab3", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/b192594d9147c20bab4ec08e81dfe5130171cab3", "committedDate": "2020-05-09T12:00:29Z", "message": "Add braces"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3190, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}