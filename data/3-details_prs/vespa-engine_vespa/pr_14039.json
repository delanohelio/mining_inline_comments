{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODE0NTM3", "number": 14039, "title": "- Do not do maintenance in the logger thread. That blocks both delive\u2026", "bodyText": "\u2026ry to the bound Q and holds objects in memory.\nInstead just signal that it might be a good idea to do maintenance.\n@arnej27959 PR", "createdAt": "2020-08-12T14:37:56Z", "url": "https://github.com/vespa-engine/vespa/pull/14039", "merged": true, "mergeCommit": {"oid": "ef583c1a6d51e3f6bd52b92b20088294047a66d4"}, "closed": true, "closedAt": "2020-08-12T15:58:42Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-MZQXAH2gAyNDY2ODE0NTM3OmE5ZjhjOWVhNDE2NzA0NDYzNGI2MmNlZGVjODA3MWI1ZmNiNTAwNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdClci4gFqTQ3NTE3MzQwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9f8c9ea4167044634b62cedec8071b5fcb5004d", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/a9f8c9ea4167044634b62cedec8071b5fcb5004d", "committedDate": "2020-08-12T14:35:50Z", "message": "- Do not do maintenance in the logger thread. That blocks both delivery to the bound Q and holds objects in memory.\n  Instead just signal that it might be a good idea to do maintenance."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTg3ODg2", "url": "https://github.com/vespa-engine/vespa/pull/14039#pullrequestreview-465987886", "createdAt": "2020-08-12T14:44:34Z", "commit": {"oid": "a9f8c9ea4167044634b62cedec8071b5fcb5004d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo0NDozNFrOG_knZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo0NzoyNVrOG_kvuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMzM4Mg==", "bodyText": "now you do the same anyway, this could be simpler:\n        while (true) {\n                maintenance();\n                waitForTrigger(2000);\n            }", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469313382", "createdAt": "2020-08-12T14:44:34Z", "author": {"login": "arnej27959"}, "path": "logserver/src/main/java/com/yahoo/logserver/handlers/archive/FilesArchived.java", "diffHunk": "@@ -30,21 +28,28 @@\n      */\n     private final File root;\n \n+    private final Object mutex = new Object();\n+\n     // known-existing files inside the archive directory\n     private List<LogFile> knownFiles;\n \n-    public final static long compressAfterMillis = 2L * 3600 * 1000;\n-    private long maxAgeDays = 30; // GDPR rules: max 30 days\n-    private long sizeLimit = 30L * (1L << 30); // 30 GB\n+    public static final long compressAfterMillis = 2L * 3600 * 1000;\n+    private static final long maxAgeDays = 30; // GDPR rules: max 30 days\n+    private static final long sizeLimit = 30L * (1L << 30); // 30 GB\n+\n+    private void waitForTrigger(long milliS) throws InterruptedException {\n+        synchronized (mutex) {\n+            mutex.wait(milliS);\n+        }\n+    }\n \n     private void run() {\n         try {\n-            Thread.sleep(125000); // 2 m 5 s\n             while (true) {\n                 while (maintenance()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f8c9ea4167044634b62cedec8071b5fcb5004d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxNTUxMg==", "bodyText": "why do you get() then set() the same thing?", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r469315512", "createdAt": "2020-08-12T14:47:25Z", "author": {"login": "arnej27959"}, "path": "logserver/src/main/java/com/yahoo/logserver/handlers/HandlerThread.java", "diffHunk": "@@ -201,10 +182,12 @@ public void run() {\n                 drainList.add(queue.take());\n                 queue.drainTo(drainList);\n \n-                for (ItemOrList o : drainList) {\n+                for (int i = 0; i < drainList.size(); i++) {\n                     // we can get two types of elements here: single log\n                     // messages or lists of log messages, so we need to\n                     // handle them accordingly.\n+                    ItemOrList o = drainList.get(i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f8c9ea4167044634b62cedec8071b5fcb5004d"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f643743ee64c101efb564758a11a3a8a970168", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/84f643743ee64c101efb564758a11a3a8a970168", "committedDate": "2020-08-12T15:03:06Z", "message": "Set to null to enable GC to collect."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDA5Njg3", "url": "https://github.com/vespa-engine/vespa/pull/14039#pullrequestreview-466009687", "createdAt": "2020-08-12T15:07:26Z", "commit": {"oid": "84f643743ee64c101efb564758a11a3a8a970168"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTczNDAx", "url": "https://github.com/vespa-engine/vespa/pull/14039#pullrequestreview-475173401", "createdAt": "2020-08-26T06:02:44Z", "commit": {"oid": "84f643743ee64c101efb564758a11a3a8a970168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjowMjo0NFrOHG9CBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNjowMjo0NFrOHG9CBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA1MzQ0NQ==", "bodyText": "RIP legmessage :'(", "url": "https://github.com/vespa-engine/vespa/pull/14039#discussion_r477053445", "createdAt": "2020-08-26T06:02:44Z", "author": {"login": "jonmv"}, "path": "logserver/src/main/java/com/yahoo/logserver/handlers/HandlerThread.java", "diffHunk": "@@ -191,8 +172,8 @@ public void run() {\n             throw new NullPointerException(\"channel is not allowed to be null\");\n         }\n \n-        // TODO: Make the legmessage elements some kind of composite structure to handle both individual messages and lists uniformly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f643743ee64c101efb564758a11a3a8a970168"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4480, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}