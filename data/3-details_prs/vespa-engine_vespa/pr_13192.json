{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTk5MzI3", "number": 13192, "title": "add set_global_filter API w/wiring and unit test", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.\n@geirst please review\n@havardpe @toregge FYI", "createdAt": "2020-05-08T12:00:06Z", "url": "https://github.com/vespa-engine/vespa/pull/13192", "merged": true, "mergeCommit": {"oid": "8a7d8caadd7be8c981c881e992252a4410dc3fd0"}, "closed": true, "closedAt": "2020-05-08T14:19:15Z", "author": {"login": "arnej27959"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfQnM3AH2gAyNDE1MTk5MzI3OmI5NmJiZDdkZjEwYmI5YTE1MWFjYjA3NDBmZjJiMzQ5NTZjMmM0MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfR_C7gFqTQwODI0MjE1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/b96bbd7df10bb9a151acb0740ff2b34956c2c432", "committedDate": "2020-05-08T11:59:02Z", "message": "add set_global_filter API w/wiring and unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MjA0NTc4", "url": "https://github.com/vespa-engine/vespa/pull/13192#pullrequestreview-408204578", "createdAt": "2020-05-08T12:32:03Z", "commit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjozMjowM1rOGSj7kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjozMjowM1rOGSj7kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExNjI0Mg==", "bodyText": "We should consider using a wrapper class (ex GlobalFilter) that owns the bitvector and implements shared_from_this to avoid over-copying the shared pointer.", "url": "https://github.com/vespa-engine/vespa/pull/13192#discussion_r422116242", "createdAt": "2020-05-08T12:32:03Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -365,6 +370,16 @@ IntermediateBlueprint::optimize(Blueprint* &self)\n     maybe_eliminate_self(self, get_replacement());\n }\n \n+void\n+IntermediateBlueprint::set_global_filter(std::shared_ptr<BitVector> global_filter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MjQyMTUw", "url": "https://github.com/vespa-engine/vespa/pull/13192#pullrequestreview-408242150", "createdAt": "2020-05-08T13:34:59Z", "commit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3197, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}