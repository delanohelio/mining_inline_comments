{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDI4NjY3", "number": 15664, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxNDo1MFrOFAukaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1ODoyN1rOFAyeyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzA3MzA1OnYy", "diffSide": "RIGHT", "path": "storage/src/tests/common/teststorageapp.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxNDo1MFrOH_KHAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoxNTozOFrOH_Suyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4Nzk3MQ==", "bodyText": "Consider adding noexcept", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r535987971", "createdAt": "2020-12-04T10:14:50Z", "author": {"login": "vekterli"}, "path": "storage/src/tests/common/teststorageapp.h", "diffHunk": "@@ -85,6 +87,7 @@ class TestStorageApp\n         { return _compReg.getDistribution(); }\n     TestNodeStateUpdater& getNodeStateUpdater() { return _nodeStateUpdater; }\n     uint16_t getIndex() const { return _compReg.getIndex(); }\n+    const NodeIdentity& node_identity() const { return _node_identity; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyOTIyNw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r536129227", "createdAt": "2020-12-04T14:15:38Z", "author": {"login": "geirst"}, "path": "storage/src/tests/common/teststorageapp.h", "diffHunk": "@@ -85,6 +87,7 @@ class TestStorageApp\n         { return _compReg.getDistribution(); }\n     TestNodeStateUpdater& getNodeStateUpdater() { return _nodeStateUpdater; }\n     uint16_t getIndex() const { return _compReg.getIndex(); }\n+    const NodeIdentity& node_identity() const { return _node_identity; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4Nzk3MQ=="}, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzcwMzMxOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/distributor_operation_context.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1NTo0NlrOH_Pukw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoxNTo0NVrOH_SvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDAxOQ==", "bodyText": "Consider making these (possibly except read_snapshot_for_bucket) noexcept", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r536080019", "createdAt": "2020-12-04T12:55:46Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/distributor/distributor_operation_context.h", "diffHunk": "@@ -31,11 +33,17 @@ class DistributorOperationContext {\n                                         uint32_t update_flags = 0) = 0;\n     virtual void remove_node_from_bucket_database(const document::Bucket& bucket, uint16_t node_index) = 0;\n     virtual const DistributorBucketSpaceRepo& bucket_space_repo() const = 0;\n+    virtual DistributorBucketSpaceRepo& bucket_space_repo() = 0;\n+    virtual const DistributorBucketSpaceRepo& read_only_bucket_space_repo() const = 0;\n+    virtual DistributorBucketSpaceRepo& read_only_bucket_space_repo() = 0;\n+    virtual document::BucketId make_split_bit_constrained_bucket_id(const document::DocumentId& docId) const = 0;\n \n+    virtual const DistributorConfiguration& distributor_config() const = 0;\n     virtual void send_inline_split_if_bucket_too_large(document::BucketSpace bucket_space,\n                                                        const BucketDatabase::Entry& entry,\n                                                        uint8_t pri) = 0;\n-    virtual const DistributorConfiguration& distributor_config() const = 0;\n+    virtual OperationRoutingSnapshot read_snapshot_for_bucket(const document::Bucket& bucket) const = 0;\n+    virtual PendingMessageTracker& pending_message_tracker() = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyOTMyMg==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r536129322", "createdAt": "2020-12-04T14:15:45Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/distributor_operation_context.h", "diffHunk": "@@ -31,11 +33,17 @@ class DistributorOperationContext {\n                                         uint32_t update_flags = 0) = 0;\n     virtual void remove_node_from_bucket_database(const document::Bucket& bucket, uint16_t node_index) = 0;\n     virtual const DistributorBucketSpaceRepo& bucket_space_repo() const = 0;\n+    virtual DistributorBucketSpaceRepo& bucket_space_repo() = 0;\n+    virtual const DistributorBucketSpaceRepo& read_only_bucket_space_repo() const = 0;\n+    virtual DistributorBucketSpaceRepo& read_only_bucket_space_repo() = 0;\n+    virtual document::BucketId make_split_bit_constrained_bucket_id(const document::DocumentId& docId) const = 0;\n \n+    virtual const DistributorConfiguration& distributor_config() const = 0;\n     virtual void send_inline_split_if_bucket_too_large(document::BucketSpace bucket_space,\n                                                        const BucketDatabase::Entry& entry,\n                                                        uint8_t pri) = 0;\n-    virtual const DistributorConfiguration& distributor_config() const = 0;\n+    virtual OperationRoutingSnapshot read_snapshot_for_bucket(const document::Bucket& bucket) const = 0;\n+    virtual PendingMessageTracker& pending_message_tracker() = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDAxOQ=="}, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzcxNDAwOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1ODoyN1rOH_P0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoxNTo1MlrOH_SvaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MTU2Mw==", "bodyText": "Consider removing explicit", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r536081563", "createdAt": "2020-12-04T12:58:27Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "diffHunk": "@@ -29,43 +29,52 @@ LOG_SETUP(\".distributor.manager\");\n namespace storage::distributor {\n \n class DirectDispatchSender : public DistributorMessageSender {\n-    Distributor& _distributor;\n+    DistributorNodeContext& _node_ctx;\n+    NonTrackingMessageSender& _msg_sender;\n public:\n-    explicit DirectDispatchSender(Distributor& distributor)\n-        : _distributor(distributor)\n+    explicit DirectDispatchSender(DistributorNodeContext& node_ctx,\n+                                  NonTrackingMessageSender& msg_sender)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyOTM4NQ==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15664#discussion_r536129385", "createdAt": "2020-12-04T14:15:52Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/distributor/externaloperationhandler.cpp", "diffHunk": "@@ -29,43 +29,52 @@ LOG_SETUP(\".distributor.manager\");\n namespace storage::distributor {\n \n class DirectDispatchSender : public DistributorMessageSender {\n-    Distributor& _distributor;\n+    DistributorNodeContext& _node_ctx;\n+    NonTrackingMessageSender& _msg_sender;\n public:\n-    explicit DirectDispatchSender(Distributor& distributor)\n-        : _distributor(distributor)\n+    explicit DirectDispatchSender(DistributorNodeContext& node_ctx,\n+                                  NonTrackingMessageSender& msg_sender)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MTU2Mw=="}, "originalCommit": {"oid": "269abb3011a0b7ee85760b497421ac241fca9891"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2126, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}