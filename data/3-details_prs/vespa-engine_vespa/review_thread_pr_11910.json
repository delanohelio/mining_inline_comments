{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDM5ODEx", "number": 11910, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1MjoyNVrODaaxig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOToxOToyMlrODabLTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI4MjM0OnYy", "diffSide": "RIGHT", "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1MjoyNVrOFhXFDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo0MzoyM1rOFhYTtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNTQ1Mg==", "bodyText": "Can be removed", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370525452", "createdAt": "2020-01-24T08:52:25Z", "author": {"login": "freva"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "diffHunk": "@@ -45,7 +48,7 @@\n     final static String HOST_STATUS_CACHE_COUNTER_PATH = \"/vespa/host-status-service-cache-counter\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0NTU4OQ==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370545589", "createdAt": "2020-01-24T09:43:23Z", "author": {"login": "hakonhall"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "diffHunk": "@@ -45,7 +48,7 @@\n     final static String HOST_STATUS_CACHE_COUNTER_PATH = \"/vespa/host-status-service-cache-counter\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyNTQ1Mg=="}, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDMxMzUwOnYy", "diffSide": "RIGHT", "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTowNToxNlrOFhXXmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo0NDo0NlrOFhYWFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMDIwMw==", "bodyText": "Filter for what's not already in hostInfos?", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370530203", "createdAt": "2020-01-24T09:05:16Z", "author": {"login": "freva"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "diffHunk": "@@ -247,6 +285,55 @@ public HostStatus getHostStatus(ApplicationInstanceReference applicationInstance\n         }\n     }\n \n+    /** Do not call this directly: should be called behind a cache. */\n+    private HostInfos getHostInfosFromZk(ApplicationInstanceReference application) {\n+        Map<HostName, HostInfo> hostInfos;\n+        String hostsRootPath = hostsPath(application);\n+        if (uncheck(() -> curator.framework().checkExists().forPath(hostsRootPath)) == null) {\n+            hostInfos = new HashMap<>();\n+        } else {\n+            List<String> hostnames = uncheck(() -> curator.framework().getChildren().forPath(hostsRootPath));\n+            hostInfos = new HashMap<>(hostnames.stream().collect(Collectors.toMap(\n+                    hostname -> new HostName(hostname),\n+                    hostname -> {\n+                        byte[] bytes = uncheck(() -> curator.framework().getData().forPath(hostsRootPath + \"/\" + hostname));\n+                        return WireHostInfo.deserialize(bytes);\n+                    })));\n+        }\n+\n+        // For backwards compatibility we'll add HostInfos from the old hosts-allowed-down ZK path,\n+        // using the creation time as the since path. The new hosts ZK path should contain a subset of\n+        // the hostnames under hosts-allowed-down ZK path. Eventually these sets should be identical.\n+        // Once that's true we can stop writing to hosts-allowed-down, remove this code, and all\n+        // data in hosts-allowed-down can be removed.\n+        Set<HostName> legacyHostsDown = hostsDownFor(application);\n+        Map<HostName, HostInfo> legacyHostInfos = legacyHostsDown.stream().collect(Collectors.toMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0NjE5Nw==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370546197", "createdAt": "2020-01-24T09:44:46Z", "author": {"login": "hakonhall"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/ZookeeperStatusService.java", "diffHunk": "@@ -247,6 +285,55 @@ public HostStatus getHostStatus(ApplicationInstanceReference applicationInstance\n         }\n     }\n \n+    /** Do not call this directly: should be called behind a cache. */\n+    private HostInfos getHostInfosFromZk(ApplicationInstanceReference application) {\n+        Map<HostName, HostInfo> hostInfos;\n+        String hostsRootPath = hostsPath(application);\n+        if (uncheck(() -> curator.framework().checkExists().forPath(hostsRootPath)) == null) {\n+            hostInfos = new HashMap<>();\n+        } else {\n+            List<String> hostnames = uncheck(() -> curator.framework().getChildren().forPath(hostsRootPath));\n+            hostInfos = new HashMap<>(hostnames.stream().collect(Collectors.toMap(\n+                    hostname -> new HostName(hostname),\n+                    hostname -> {\n+                        byte[] bytes = uncheck(() -> curator.framework().getData().forPath(hostsRootPath + \"/\" + hostname));\n+                        return WireHostInfo.deserialize(bytes);\n+                    })));\n+        }\n+\n+        // For backwards compatibility we'll add HostInfos from the old hosts-allowed-down ZK path,\n+        // using the creation time as the since path. The new hosts ZK path should contain a subset of\n+        // the hostnames under hosts-allowed-down ZK path. Eventually these sets should be identical.\n+        // Once that's true we can stop writing to hosts-allowed-down, remove this code, and all\n+        // data in hosts-allowed-down can be removed.\n+        Set<HostName> legacyHostsDown = hostsDownFor(application);\n+        Map<HostName, HostInfo> legacyHostInfos = legacyHostsDown.stream().collect(Collectors.toMap(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzMDIwMw=="}, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDM0ODMwOnYy", "diffSide": "RIGHT", "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/HostStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOToxOToyMlrOFhXsYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo1Mzo0M1rOFhYlfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzNTUyMg==", "bodyText": "Consider adding a method that returns true when the status is one of the down statuses to avoid doing != NO_REMARKS", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370535522", "createdAt": "2020-01-24T09:19:22Z", "author": {"login": "freva"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/HostStatus.java", "diffHunk": "@@ -2,11 +2,20 @@\n package com.yahoo.vespa.orchestrator.status;\n \n /**\n- * Enumeration of the different status' a host can have.\n+ * Enumeration of the different statuses a host can have.\n  *\n  * @author oyving\n  */\n public enum HostStatus {\n+    /** The services on the host is supposed to be up. */\n     NO_REMARKS,\n-    ALLOWED_TO_BE_DOWN;\n+\n+    /** The services on the host is allowed to be down. */\n+    ALLOWED_TO_BE_DOWN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU1MDE0Mg==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11910#discussion_r370550142", "createdAt": "2020-01-24T09:53:43Z", "author": {"login": "hakonhall"}, "path": "orchestrator/src/main/java/com/yahoo/vespa/orchestrator/status/HostStatus.java", "diffHunk": "@@ -2,11 +2,20 @@\n package com.yahoo.vespa.orchestrator.status;\n \n /**\n- * Enumeration of the different status' a host can have.\n+ * Enumeration of the different statuses a host can have.\n  *\n  * @author oyving\n  */\n public enum HostStatus {\n+    /** The services on the host is supposed to be up. */\n     NO_REMARKS,\n-    ALLOWED_TO_BE_DOWN;\n+\n+    /** The services on the host is allowed to be down. */\n+    ALLOWED_TO_BE_DOWN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzNTUyMg=="}, "originalCommit": {"oid": "967fe4dd3f5a3e418b0dd6b2bcd06fe5fd460290"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2622, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}