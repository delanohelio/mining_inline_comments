{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODYyMzkz", "number": 13526, "title": "Add APIs to support setting a tensor and update nearest neighbor inde\u2026", "bodyText": "\u2026x as two-phase operations.\nThis will enable using multiple threads to update the nearest neighbor index.\n@toregge and @arnej27959 please review", "createdAt": "2020-06-09T14:58:14Z", "url": "https://github.com/vespa-engine/vespa/pull/13526", "merged": true, "mergeCommit": {"oid": "fbc3461127b6edf235e11e231fdbde0b250dd4f4"}, "closed": true, "closedAt": "2020-06-10T08:34:33Z", "author": {"login": "geirst"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpm2aQAFqTQyNzI4NTkzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp0kR2AFqTQyNzc4MTE2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3Mjg1OTM2", "url": "https://github.com/vespa-engine/vespa/pull/13526#pullrequestreview-427285936", "createdAt": "2020-06-09T15:32:48Z", "commit": {"oid": "087d679c6e16f8794b26f474151b2703363b5392"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTozMjo0OFrOGhQYjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTozMjo0OFrOGhQYjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyNDYyMw==", "bodyText": "promise and future handling should be at a layer above this code. Consider using std::unique_ptr<PrepareResult>or PrepareResult&instead of std::future<std::unique_ptr<PrepareResult>>.", "url": "https://github.com/vespa-engine/vespa/pull/13526#discussion_r437524623", "createdAt": "2020-06-09T15:32:48Z", "author": {"login": "toregge"}, "path": "searchlib/src/vespa/searchlib/tensor/nearest_neighbor_index.h", "diffHunk": "@@ -36,6 +38,38 @@ class NearestNeighborIndex {\n     };\n     virtual ~NearestNeighborIndex() {}\n     virtual void add_document(uint32_t docid) = 0;\n+\n+    /**\n+     * Performs the prepare step in a two-phase operation to add a document to the index.\n+     *\n+     * This function can be called by any thread.\n+     * The document to add is represented by the given vector as it is _not_ stored in the enclosing tensor attribute at this point in time.\n+     * It should return the result of the costly and non-modifying part of this operation.\n+     * The given read guard must be kept in the result.\n+     */\n+    virtual std::unique_ptr<PrepareResult> prepare_add_document(uint32_t docid,\n+                                                                vespalib::tensor::TypedCells vector,\n+                                                                vespalib::GenerationHandler::Guard read_guard) const {\n+        // TODO: Make it pure virtual after more wiring is complete.\n+        (void) docid;\n+        (void) vector;\n+        (void) read_guard;\n+        return std::unique_ptr<PrepareResult>();\n+    }\n+\n+    /**\n+     * Performs the complete step in a two-phase operation to add a document to the index.\n+     *\n+     * This function is only called by the attribute writer thread.\n+     * It must wait for the result from the prepare step (via the future) before it does the modifying changes.\n+     */\n+    virtual void complete_add_document(uint32_t docid,\n+                                       std::future<std::unique_ptr<PrepareResult>> prepare_result) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "087d679c6e16f8794b26f474151b2703363b5392"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e669fde4007de7675295687882d20b73e12aed", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/87e669fde4007de7675295687882d20b73e12aed", "committedDate": "2020-06-10T07:28:41Z", "message": "Add APIs to support setting a tensor and update nearest neighbor index as two-phase operations.\nThis will enable using multiple threads to update the nearest neighbor index."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "087d679c6e16f8794b26f474151b2703363b5392", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/087d679c6e16f8794b26f474151b2703363b5392", "committedDate": "2020-06-09T14:53:30Z", "message": "Add APIs to support setting a tensor and update nearest neighbor index as two-phase operations.\n\nThis will enable using multiple threads to update the nearest neighbor index."}, "afterCommit": {"oid": "87e669fde4007de7675295687882d20b73e12aed", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/87e669fde4007de7675295687882d20b73e12aed", "committedDate": "2020-06-10T07:28:41Z", "message": "Add APIs to support setting a tensor and update nearest neighbor index as two-phase operations.\nThis will enable using multiple threads to update the nearest neighbor index."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzgxMTYz", "url": "https://github.com/vespa-engine/vespa/pull/13526#pullrequestreview-427781163", "createdAt": "2020-06-10T07:31:40Z", "commit": {"oid": "87e669fde4007de7675295687882d20b73e12aed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3726, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}