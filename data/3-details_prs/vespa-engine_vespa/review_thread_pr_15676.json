{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTE4MTAz", "number": 15676, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNTowMlrOFA0LzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNTowMlrOFA0LzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mzk5MzA5OnYy", "diffSide": "RIGHT", "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ModelContextImplTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDowNTowMlrOH_STvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNTowODo0OFrOH_U_oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMjMwMw==", "bodyText": "perhaps featureFlags() should be directly on the context?", "url": "https://github.com/vespa-engine/vespa/pull/15676#discussion_r536122303", "createdAt": "2020-12-04T14:05:02Z", "author": {"login": "hakonhall"}, "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ModelContextImplTest.java", "diffHunk": "@@ -89,11 +88,11 @@ public void testModelContextTest() {\n         assertEquals(Optional.empty(), context.wantedDockerImageRepo());\n         assertEquals(new Version(7), context.modelVespaVersion());\n         assertEquals(new Version(8), context.wantedNodeVespaVersion());\n-        assertEquals(1.0, context.properties().defaultTermwiseLimit(), 0.0);\n-        assertFalse(context.properties().useAsyncMessageHandlingOnSchedule());\n-        assertEquals(0, context.properties().contentNodeBucketDBStripeBits());\n-        assertEquals(0x400000, context.properties().mergeChunkSize());\n-        assertEquals(0.5, context.properties().feedConcurrency(), 0.0);\n+        assertEquals(1.0, context.properties().featureFlags().defaultTermwiseLimit(), 0.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aadfe998f5080855aada7feb862e0fd0a8614cb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE2NjMwNQ==", "bodyText": "That was my original plan, but it turned to out be too clunky to implement.", "url": "https://github.com/vespa-engine/vespa/pull/15676#discussion_r536166305", "createdAt": "2020-12-04T15:08:48Z", "author": {"login": "bjorncs"}, "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ModelContextImplTest.java", "diffHunk": "@@ -89,11 +88,11 @@ public void testModelContextTest() {\n         assertEquals(Optional.empty(), context.wantedDockerImageRepo());\n         assertEquals(new Version(7), context.modelVespaVersion());\n         assertEquals(new Version(8), context.wantedNodeVespaVersion());\n-        assertEquals(1.0, context.properties().defaultTermwiseLimit(), 0.0);\n-        assertFalse(context.properties().useAsyncMessageHandlingOnSchedule());\n-        assertEquals(0, context.properties().contentNodeBucketDBStripeBits());\n-        assertEquals(0x400000, context.properties().mergeChunkSize());\n-        assertEquals(0.5, context.properties().feedConcurrency(), 0.0);\n+        assertEquals(1.0, context.properties().featureFlags().defaultTermwiseLimit(), 0.0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEyMjMwMw=="}, "originalCommit": {"oid": "8aadfe998f5080855aada7feb862e0fd0a8614cb"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2131, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}