{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2ODk0NDQz", "number": 14683, "title": "Add support for multiple RPC targets per node when using Storage API \u2026", "bodyText": "\u2026over RPC.\nThis should allow for better parallelization and higher feed throughput.\nThe bucket id associated with a message is used to select the RPC target.\nThis ensures the same RPC target is used for all messages to the same bucket to the same node,\nand the RPC target itself handles sequencing of these messages.\n@vekterli please review\n@baldersheim @toregge FYI", "createdAt": "2020-10-02T13:04:45Z", "url": "https://github.com/vespa-engine/vespa/pull/14683", "merged": true, "mergeCommit": {"oid": "5dbb928c24bc6c3f2df934f5d353ca106d5a622c"}, "closed": true, "closedAt": "2020-10-04T19:10:38Z", "author": {"login": "geirst"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOlmp4gH2gAyNDk2ODk0NDQzOjlmNDEyOTBlN2Q5MGI3ZjEwMGM2YzdiZWQ0Nzg4NzNlZTczOTI0ZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOmMzSgFqTUwMTE0NTAzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f41290e7d90b7f100c6c7bed478873ee73924ef", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/9f41290e7d90b7f100c6c7bed478873ee73924ef", "committedDate": "2020-10-02T13:00:53Z", "message": "Add support for multiple RPC targets per node when using Storage API over RPC.\n\nThis should allow for better parallelization and higher feed throughput.\nThe bucket id associated with a message is used to select the RPC target.\nThis ensures the same RPC target is used for all messages to the same bucket to the same node,\nand the RPC target itself handles sequencing of these messages."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTQ1MDMy", "url": "https://github.com/vespa-engine/vespa/pull/14683#pullrequestreview-501145032", "createdAt": "2020-10-02T13:41:10Z", "commit": {"oid": "9f41290e7d90b7f100c6c7bed478873ee73924ef"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzo0MToxMFrOHbuE_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzo0MToxMFrOHbuE_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyODU0Mg==", "bodyText": "Before we can start using this in production I believe we must derive and use the superbucket here rather than the sub-bucket. This is because operations in flight can be remapped to other buckets when their original destination bucket is split or joined. Since RPC requests are bound to the target for the original, non-remapped bucket it's possible for sequencing to be broken for a single bucket when the replies are sent. Remapped buckets are always contained within the superbucket, so they will always be bound to the same RPC target if we use it instead.", "url": "https://github.com/vespa-engine/vespa/pull/14683#discussion_r498828542", "createdAt": "2020-10-02T13:41:10Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/storageserver/rpc/storage_api_rpc_service.cpp", "diffHunk": "@@ -216,7 +220,7 @@ void StorageApiRpcService::send_rpc_v1_request(std::shared_ptr<api::StorageComma\n         cmd->getType().getName().c_str(), cmd->getAddress()->toString().c_str());\n \n     assert(cmd->getAddress() != nullptr);\n-    auto target = _target_resolver->resolve_rpc_target(*cmd->getAddress());\n+    auto target = _target_resolver->resolve_rpc_target(*cmd->getAddress(), cmd->getBucketId().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f41290e7d90b7f100c6c7bed478873ee73924ef"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4172, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}