{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzU5ODE1", "number": 12700, "title": "add support for partial update/remove for tensor and map  ", "bodyText": "add partial update/remove to map and tensor structure\n\nI confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-03-25T03:13:36Z", "url": "https://github.com/vespa-engine/vespa/pull/12700", "merged": true, "mergeCommit": {"oid": "6c8775e83f0b5e8480eed1276bb757e3b5940ec4"}, "closed": true, "closedAt": "2020-04-02T14:06:24Z", "author": {"login": "jingtinghuang"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ-OZzgH2gAyMzkzMzU5ODE1OmEzNzU2NDgwYzc4ODZhZDAyOWRiNmYyZmJmYWFjYjA4OGQzZmZlZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTqSiLAH2gAyMzkzMzU5ODE1OmNkMTVjMGU5MDIxYmNlOTk4MzlmY2NjYjQwZDk0MDYwNTRkZTZjMDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1", "author": {"user": null}, "url": "https://github.com/vespa-engine/vespa/commit/a3756480c7886ad029db6f2fbfaacb088d3ffee1", "committedDate": "2020-03-25T02:38:43Z", "message": "add support for partial update tensor and map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODM0Njcx", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-380834671", "createdAt": "2020-03-25T03:16:32Z", "commit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTYzMjIz", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-380963223", "createdAt": "2020-03-25T09:07:09Z", "commit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTowNzowOVrOF7RrBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTo0MTo0N1rOF7S9Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY5OTg0Nw==", "bodyText": "I think this line is for debugging.\nRemove this.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397699847", "createdAt": "2020-03-25T09:07:09Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -107,7 +115,7 @@ public String exec(Tuple tuple) throws IOException {\n             Schema inputSchema = getInputSchema();\n             Map<String, Object> fields = TupleTools.tupleMap(inputSchema, tuple);\n             String docId = TupleTools.toString(fields, template);\n-\n+            System.out.println(docId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwODQ5Ng==", "bodyText": "is this an unused dependency?", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397708496", "createdAt": "2020-03-25T09:21:51Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/test/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperationTest.java", "diffHunk": "@@ -1,6 +1,7 @@\n // Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n package com.yahoo.vespa.hadoop.pig;\n \n+import com.google.gson.JsonArray;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxMTY5Nw==", "bodyText": "Can we separate removeTensor and add/create into two method since they are quite different?\nSince the common part is not much, two different purpose methods would be easier to read rather than a complex method with multiple functionalities.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397711697", "createdAt": "2020-03-25T09:26:59Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -408,45 +529,72 @@ private static boolean shouldWriteField(String name, Properties properties, int\n         return true;\n     }\n \n-    private static void writeTensor(Map<Object, Object> map, JsonGenerator g) throws IOException {\n-        g.writeFieldName(\"cells\");\n+    private static void writeTensor(Map<Object, Object> map, JsonGenerator g, Boolean isRemoveTensor) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 249}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNTQyMA==", "bodyText": "Can we merge isPartialOperation into writePartialUpdate?\nThe main purpose of isPartialOperation is to write assign to the output.\nAnd the purpose of isPartialOperation is to check it's a partial operation and write the operation to the output.\nI think the purpose of these two method is alike.\nIt's better to write the same purpose code into same place.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397715420", "createdAt": "2020-03-25T09:32:43Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -309,9 +351,32 @@ private static boolean shouldWritePartialUpdate(Operation op, int depth) {\n \n     private static void writePartialUpdate(Object value, Byte type, JsonGenerator g, String name, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         g.writeStartObject();\n-        g.writeFieldName(PARTIAL_UPDATE_ASSIGN); // TODO: lookup field name in a property to determine correct operation\n+        // look up which operation to do by checking names and their respected properties\n+        if (!isPartialOperation(REMOVE_TENSOR_FIELDS, name, properties, g, PARTIAL_UPDATE_REMOVE, true)\n+        && !isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties, g, PARTIAL_UPDATE_REMOVE, true)\n+                && !isPartialOperation(ADD_TENSOR_FIELDS, name, properties, g, PARTIAL_UPDATE_ADD, true)) {\n+            g.writeFieldName(PARTIAL_UPDATE_ASSIGN);\n+        }\n         writeValue(value, type, g, name, properties, schema, op, depth);\n         g.writeEndObject();\n+\n+\n+    }\n+\n+    private static boolean isPartialOperation(String label, String name, Properties properties, JsonGenerator g, String targetOperation, boolean writeFieldName) throws IOException{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNzYxMw==", "bodyText": "can we check it's a partial operation first, then generate the field name according to its data type?\ncurrently, u specifically check it's a remove/add _bag_as_map_fields, then transform the bag to field name directly.\nIt'll be more general to depend on data type than on field name.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397717613", "createdAt": "2020-03-25T09:36:30Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -182,12 +190,47 @@ public static String create(Operation op, String docId, Map<String, Object> fiel\n     @SuppressWarnings(\"unchecked\")\n     private static void writeField(String name, Object value, Byte type, JsonGenerator g, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         if (shouldWriteField(name, properties, depth)) {\n-            g.writeFieldName(name);\n-            if (shouldWritePartialUpdate(op, depth)) {\n-                writePartialUpdate(value, type, g, name, properties, schema, op, depth);\n-            } else {\n-                writeValue(value, type, g, name, properties, schema, op, depth);\n+            if (isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties, g, PARTIAL_UPDATE_REMOVE, false) ||\n+                    isPartialOperation(ADD_BAG_AS_MAP_FIELDS, name, properties, g, PARTIAL_UPDATE_ASSIGN, false)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcyMDgzOQ==", "bodyText": "From pig user perspective, remove/add-bag-as-map-fields may be confused.\nUsers need to know that there is a functionality to transform bag as map.\nThen he/she may know that these two feature is to add/remove a data in map.\nMost of the pig users don't need to know the detail of this Java UDF.\nIt's better to rename them so that pig users would understand what are these for easily.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r397720839", "createdAt": "2020-03-25T09:41:47Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -68,10 +68,18 @@ public static boolean valid(String text) {\n     private static final String SIMPLE_ARRAY_FIELDS = \"simple-array-fields\";\n     private static final String SIMPLE_OBJECT_FIELDS = \"simple-object-fields\";\n     private static final String CREATE_TENSOR_FIELDS = \"create-tensor-fields\";\n+    private static final String REMOVE_TENSOR_FIELDS = \"remove-tensor-fields\";\n+    private static final String ADD_TENSOR_FIELDS = \"add-tensor-fields\";\n+    private static final String REMOVE_BAG_AS_MAP_FIELDS = \"remove-bag-as-map-fields\";\n+    private static final String ADD_BAG_AS_MAP_FIELDS = \"add-bag-as-map-fields\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3756480c7886ad029db6f2fbfaacb088d3ffee1"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e", "author": {"user": {"login": "jingtinghuang", "name": "William"}}, "url": "https://github.com/vespa-engine/vespa/commit/4788d1fdaae9a49f4cde171066f589cc0d5e3f4e", "committedDate": "2020-03-31T06:53:18Z", "message": "pr review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDU0OTk2", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-384454996", "createdAt": "2020-03-31T07:10:07Z", "commit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNzoxMDowN1rOF-IEyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNzoxNTo0NFrOF-IPFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY4ODMyOQ==", "bodyText": "Don't comment out this line. This bug should be fixed in other PR.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400688329", "createdAt": "2020-03-31T07:10:07Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -6,16 +6,18 @@\n import com.fasterxml.jackson.core.JsonGenerator;\n import com.yahoo.vespa.hadoop.mapreduce.util.TupleTools;\n import com.yahoo.vespa.hadoop.mapreduce.util.VespaConfiguration;\n-import org.apache.commons.lang.exception.ExceptionUtils;\n+//import org.apache.commons.lang.exception.ExceptionUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY4ODk2MQ==", "bodyText": "Suggest to merge this two condition into one method.\nLike the one, shouldWritePartialUpdate.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400688961", "createdAt": "2020-03-31T07:11:30Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -182,12 +223,47 @@ public static String create(Operation op, String docId, Map<String, Object> fiel\n     @SuppressWarnings(\"unchecked\")\n     private static void writeField(String name, Object value, Byte type, JsonGenerator g, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         if (shouldWriteField(name, properties, depth)) {\n-            g.writeFieldName(name);\n-            if (shouldWritePartialUpdate(op, depth)) {\n-                writePartialUpdate(value, type, g, name, properties, schema, op, depth);\n-            } else {\n-                writeValue(value, type, g, name, properties, schema, op, depth);\n+            if (isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties) ||\n+                    isPartialOperation(ADD_BAG_AS_MAP_FIELDS, name, properties)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY4OTMzNw==", "bodyText": "Extract line 228~257 into a new method. This could increase the readability of method, writeField.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400689337", "createdAt": "2020-03-31T07:12:19Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -182,12 +223,47 @@ public static String create(Operation op, String docId, Map<String, Object> fiel\n     @SuppressWarnings(\"unchecked\")\n     private static void writeField(String name, Object value, Byte type, JsonGenerator g, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         if (shouldWriteField(name, properties, depth)) {\n-            g.writeFieldName(name);\n-            if (shouldWritePartialUpdate(op, depth)) {\n-                writePartialUpdate(value, type, g, name, properties, schema, op, depth);\n-            } else {\n-                writeValue(value, type, g, name, properties, schema, op, depth);\n+            if (isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties) ||\n+                    isPartialOperation(ADD_BAG_AS_MAP_FIELDS, name, properties)){\n+                schema = (schema != null) ? schema.getField(0).schema : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY4OTY1MA==", "bodyText": "Remove shouldWritePartialUpdate if-else because else won't be happen here.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400689650", "createdAt": "2020-03-31T07:12:57Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -182,12 +223,47 @@ public static String create(Operation op, String docId, Map<String, Object> fiel\n     @SuppressWarnings(\"unchecked\")\n     private static void writeField(String name, Object value, Byte type, JsonGenerator g, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         if (shouldWriteField(name, properties, depth)) {\n-            g.writeFieldName(name);\n-            if (shouldWritePartialUpdate(op, depth)) {\n-                writePartialUpdate(value, type, g, name, properties, schema, op, depth);\n-            } else {\n-                writeValue(value, type, g, name, properties, schema, op, depth);\n+            if (isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties) ||\n+                    isPartialOperation(ADD_BAG_AS_MAP_FIELDS, name, properties)){\n+                schema = (schema != null) ? schema.getField(0).schema : null;\n+                // extract the key of map and keys in map for writing json when partial updating maps\n+                Schema valueSchema = (schema != null) ? schema.getField(1).schema : null;\n+                // data format  { ( key; id, value: (abc,123,(123234,bbaa))) }\n+                // the first element of each tuple in the bag will be the map to update\n+                // the second element of each tuple in the bag will be the new value of the map\n+                DataBag bag = (DataBag) value;\n+                for (Tuple element : bag) {\n+                    if (element.size() != 2) {\n+                        continue;\n+                    }\n+                    String k = (String) element.get(0);\n+                    Object v = element.get(1);\n+                    Byte t = DataType.findType(v);\n+                    if (t == DataType.TUPLE) {\n+                        g.writeFieldName(name + \"{\" + k + \"}\");\n+                        if (isPartialOperation(REMOVE_BAG_AS_MAP_FIELDS, name, properties)) {\n+                            g.writeStartObject();\n+                            g.writeFieldName(PARTIAL_UPDATE_REMOVE);\n+                            g.writeNumber(0);\n+                            g.writeEndObject();\n+                        }else{\n+                            if (shouldWritePartialUpdate(op, depth)) {\n+                                writePartialUpdate(v, t, g, name, properties, valueSchema, op, depth);\n+                            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5MDc4OQ==", "bodyText": "Suggest to change the condition of writing assign operation.\nThere are two type of partial update: 1. single field partial update 2. whole document partial update\nThe 1st one is decided by property. The 2nd one is decided by operation name and the depth.\nIt's better to change the logic to the operation name and the depth so that we know this assign is added because of whole document partial update.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400690789", "createdAt": "2020-03-31T07:15:21Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -308,12 +387,38 @@ private static boolean shouldWritePartialUpdate(Operation op, int depth) {\n     }\n \n     private static void writePartialUpdate(Object value, Byte type, JsonGenerator g, String name, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n+        boolean isAssign = true;\n+\n         g.writeStartObject();\n-        g.writeFieldName(PARTIAL_UPDATE_ASSIGN); // TODO: lookup field name in a property to determine correct operation\n+        for (String label: operationMap.keySet()) {\n+            if (properties.getProperty(label) != null) {\n+                String[] p = properties.getProperty(label).split(\",\");\n+                if (Arrays.asList(p).contains(name)) {\n+                    g.writeFieldName(operationMap.get(label));\n+                    isAssign = false;\n+                }\n+            }\n+        }\n+        if (isAssign) {\n+            g.writeFieldName(PARTIAL_UPDATE_ASSIGN);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5MDk2Nw==", "bodyText": "coding style", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400690967", "createdAt": "2020-03-31T07:15:44Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -235,7 +311,11 @@ private static void writeValue(Object value, Byte type, JsonGenerator g, String\n                 g.writeStartObject();\n                 Map<Object, Object> map = (Map<Object, Object>) value;\n                 if (shouldCreateTensor(map, name, properties)) {\n-                    writeTensor(map, g);\n+                    if(isRemoveTensor(name,properties)){\n+                        writeRemoveTensor(map,g);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4788d1fdaae9a49f4cde171066f589cc0d5e3f4e"}, "originalPosition": 176}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d254707e6a9f5555321c108996cfd7b61c55f23d", "author": {"user": {"login": "jingtinghuang", "name": "William"}}, "url": "https://github.com/vespa-engine/vespa/commit/d254707e6a9f5555321c108996cfd7b61c55f23d", "committedDate": "2020-03-31T09:39:04Z", "message": "pr fix and add counter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTc4NTgz", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-384578583", "createdAt": "2020-03-31T09:57:16Z", "commit": {"oid": "d254707e6a9f5555321c108996cfd7b61c55f23d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NzoxNlrOF-OIOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1NzoxNlrOF-OIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4NzUxMw==", "bodyText": "coding style", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400787513", "createdAt": "2020-03-31T09:57:16Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -178,15 +219,72 @@ public static String create(Operation op, String docId, Map<String, Object> fiel\n         return out.toString();\n     }\n \n+    private static String getPartialOperation(Map<String, String> operationMap, String name, Properties properties) {\n+        // This function checks if the property of the name falls into the map provided\n+        // if yes, return the desired operation. if no, return null\n+        // for example, input:\n+        // operationMap map{\"update-map-fields\":\"assign\",\"remove-map-fields\":\"remove\"}\n+        // name date\n+        // properties \"update-map-fields\":\"date,month\"\n+        // output: assign\n+        for (String label: operationMap.keySet()) {\n+            if (properties.getProperty(label) != null) {\n+                String[] p = properties.getProperty(label).split(\",\");\n+                if (Arrays.asList(p).contains(name)) {\n+                    return operationMap.get(label);\n+                }\n+            }\n+        }\n+        return null;\n+    }\n \n     @SuppressWarnings(\"unchecked\")\n     private static void writeField(String name, Object value, Byte type, JsonGenerator g, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         if (shouldWriteField(name, properties, depth)) {\n-            g.writeFieldName(name);\n-            if (shouldWritePartialUpdate(op, depth)) {\n-                writePartialUpdate(value, type, g, name, properties, schema, op, depth);\n-            } else {\n-                writeValue(value, type, g, name, properties, schema, op, depth);\n+            String operation = getPartialOperation(mapPartialOperationMap, name, properties);\n+            // check if the name has the property update-map-fields/remove-map-fields\n+            // if yes, we need special treatments here as we need to loop through the tuple\n+            // be aware the the operation here is not vespa operation such as \"put\" and \"update\"\n+            // operation here are the field name we wish use to such as \"assign\" and \"remove\"\n+            if (operation != null) {\n+                writePartialUpdateAndRemoveMap(name ,value, g, properties, schema, op, depth, operation);\n+            }else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d254707e6a9f5555321c108996cfd7b61c55f23d"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTc5NDQ4", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-384579448", "createdAt": "2020-03-31T09:58:24Z", "commit": {"oid": "d254707e6a9f5555321c108996cfd7b61c55f23d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1ODoyNFrOF-OLQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTo1ODoyNFrOF-OLQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc4ODI5MQ==", "bodyText": "we can break here to reduce some time.", "url": "https://github.com/vespa-engine/vespa/pull/12700#discussion_r400788291", "createdAt": "2020-03-31T09:58:24Z", "author": {"login": "leisureshadow"}, "path": "vespa-hadoop/src/main/java/com/yahoo/vespa/hadoop/pig/VespaDocumentOperation.java", "diffHunk": "@@ -309,11 +410,32 @@ private static boolean shouldWritePartialUpdate(Operation op, int depth) {\n \n     private static void writePartialUpdate(Object value, Byte type, JsonGenerator g, String name, Properties properties, Schema schema, Operation op, int depth) throws IOException {\n         g.writeStartObject();\n-        g.writeFieldName(PARTIAL_UPDATE_ASSIGN); // TODO: lookup field name in a property to determine correct operation\n+        // here we check if the operation falls into the four partial operations we do on map/tensor structure\n+        // if no, we assume it's a update on the whole document and we write assign here\n+        // if yes, we write the desired operation here\n+        String operation = getPartialOperation(partialOperationMap, name, properties);\n+        if (operation != null) {\n+            g.writeFieldName(operation);\n+        }else{\n+            g.writeFieldName(PARTIAL_UPDATE_ASSIGN);\n+        }\n         writeValue(value, type, g, name, properties, schema, op, depth);\n         g.writeEndObject();\n     }\n \n+    private static boolean isPartialOperation(String label, String name, Properties properties) {\n+        // when dealing with partial update operations, write the desired operation\n+        // writeFieldName decides if a field name should be written when checking\n+        boolean isPartialOperation = false;\n+        if (properties.getProperty(label) != null) {\n+            String[] p = properties.getProperty(label).split(\",\");\n+            if (Arrays.asList(p).contains(name)) {\n+                isPartialOperation = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d254707e6a9f5555321c108996cfd7b61c55f23d"}, "originalPosition": 241}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c339a407bdcdd3a33e03628d593830dd66091072", "author": {"user": {"login": "jingtinghuang", "name": "William"}}, "url": "https://github.com/vespa-engine/vespa/commit/c339a407bdcdd3a33e03628d593830dd66091072", "committedDate": "2020-03-31T10:16:32Z", "message": "pr fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MjU1NDgy", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-386255482", "createdAt": "2020-04-02T09:29:54Z", "commit": {"oid": "c339a407bdcdd3a33e03628d593830dd66091072"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzEyNzgz", "url": "https://github.com/vespa-engine/vespa/pull/12700#pullrequestreview-386312783", "createdAt": "2020-04-02T10:51:48Z", "commit": {"oid": "c339a407bdcdd3a33e03628d593830dd66091072"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd15c0e9021bce99839fcccb40d9406054de6c08", "author": {"user": {"login": "lesters", "name": "Lester Solbakken"}}, "url": "https://github.com/vespa-engine/vespa/commit/cd15c0e9021bce99839fcccb40d9406054de6c08", "committedDate": "2020-04-02T11:06:54Z", "message": "Merge branch 'master' into partial_update_bag_as_map_and_tensor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2620, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}