{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Mjc0Mzk0", "number": 12725, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0MzozMFrODrvCHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0Nzo0MFrODrvJ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTg1OTQ4OnYy", "diffSide": "RIGHT", "path": "config-model/src/test/schema-test-files/services-hosted.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0MzozMFrOF8QKKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzoyMTo0NlrOF8R4mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMzYyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <nodes count=\"[10-20]\" flavor=\"large\" groups=\"[1-3]\">\n          \n          \n            \n                <nodes count=\"[10,20]\" flavor=\"large\" groups=\"[1,3]\">", "url": "https://github.com/vespa-engine/vespa/pull/12725#discussion_r398723624", "createdAt": "2020-03-26T16:43:30Z", "author": {"login": "freva"}, "path": "config-model/src/test/schema-test-files/services-hosted.xml", "diffHunk": "@@ -27,4 +27,11 @@\n     </nodes>\n   </content>\n \n+  <content id=\"ml\" version=\"1.0\">\n+    <redundancy>2</redundancy>\n+    <nodes count=\"[10-20]\" flavor=\"large\" groups=\"[1-3]\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77fa3b877833b8dc5957039ee02b1068cf0b0be6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1MTg5OQ==", "bodyText": "thanks!", "url": "https://github.com/vespa-engine/vespa/pull/12725#discussion_r398751899", "createdAt": "2020-03-26T17:21:46Z", "author": {"login": "bratseth"}, "path": "config-model/src/test/schema-test-files/services-hosted.xml", "diffHunk": "@@ -27,4 +27,11 @@\n     </nodes>\n   </content>\n \n+  <content id=\"ml\" version=\"1.0\">\n+    <redundancy>2</redundancy>\n+    <nodes count=\"[10-20]\" flavor=\"large\" groups=\"[1-3]\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyMzYyNA=="}, "originalCommit": {"oid": "77fa3b877833b8dc5957039ee02b1068cf0b0be6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTg3OTQ0OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/builder/xml/dom/NodesSpecification.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0Nzo0MFrOF8QW5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo0Nzo0MFrOF8QW5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcyNjg4NQ==", "bodyText": "Consider adding the message from e, useful when valueParser is parseGbAmount and users specify invalid unit.", "url": "https://github.com/vespa-engine/vespa/pull/12725#discussion_r398726885", "createdAt": "2020-03-26T16:47:40Z", "author": {"login": "freva"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/builder/xml/dom/NodesSpecification.java", "diffHunk": "@@ -344,9 +363,28 @@ private static IllegalArgumentException clusterReferenceNotFoundException(String\n         return dockerImageFromElement == null ? dockerImage : Optional.of(dockerImageFromElement);\n     }\n \n+    /** Parses a value (\"value\") or value range (\"[min-value, max-value]\") */\n+    private static <T> Pair<T, T> toRange(String s, T defaultValue, Function<String, T> valueParser) {\n+        try {\n+            if (s == null) return new Pair<>(defaultValue, defaultValue);\n+            s = s.trim();\n+            if (s.startsWith(\"[\") && s.endsWith(\"]\")) {\n+                String[] numbers = s.substring(1, s.length() - 1).split(\",\");\n+                if (numbers.length != 2) throw new IllegalArgumentException();\n+                return new Pair<>(valueParser.apply(numbers[0].trim()), valueParser.apply(numbers[1].trim()));\n+            } else {\n+                return new Pair<>(valueParser.apply(s), valueParser.apply(s));\n+            }\n+        }\n+        catch (IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"Expected a number or range on the form [min, max], but got '\" + s + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77fa3b877833b8dc5957039ee02b1068cf0b0be6"}, "originalPosition": 164}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2137, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}