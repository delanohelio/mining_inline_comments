{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjc2Njgy", "number": 14121, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowODoxMVrOEa2Ybw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowOTo0MlrOEa2bfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTg5NDIzOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowODoxMVrOHEhTYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTo0NTowOVrOHEmqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMTk4NA==", "bodyText": "consider start using the vespalib::make_string_short::fmt function", "url": "https://github.com/vespa-engine/vespa/pull/14121#discussion_r474501984", "createdAt": "2020-08-21T08:08:11Z", "author": {"login": "havardpe"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -8,13 +8,16 @@\n #include <vespa/storage/common/bucketoperationlogger.h>\n #include <vespa/document/fieldset/fieldsetrepo.h>\n #include <vespa/document/update/documentupdate.h>\n+#include <vespa/document/base/exceptions.h>\n #include <vespa/vespalib/util/exceptions.h>\n #include <vespa/vespalib/util/isequencedtaskexecutor.h>\n #include <vespa/vespalib/stllike/hash_map.hpp>\n \n #include <vespa/log/log.h>\n LOG_SETUP(\".persistence.thread\");\n \n+using vespalib::make_string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6203e47bcca5309f0865c7e6c02855c6224a1c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU4OTc3MQ==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/14121#discussion_r474589771", "createdAt": "2020-08-21T09:45:09Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -8,13 +8,16 @@\n #include <vespa/storage/common/bucketoperationlogger.h>\n #include <vespa/document/fieldset/fieldsetrepo.h>\n #include <vespa/document/update/documentupdate.h>\n+#include <vespa/document/base/exceptions.h>\n #include <vespa/vespalib/util/exceptions.h>\n #include <vespa/vespalib/util/isequencedtaskexecutor.h>\n #include <vespa/vespalib/stllike/hash_map.hpp>\n \n #include <vespa/log/log.h>\n LOG_SETUP(\".persistence.thread\");\n \n+using vespalib::make_string;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMTk4NA=="}, "originalCommit": {"oid": "6c6203e47bcca5309f0865c7e6c02855c6224a1c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTkwMjA2OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODowOTo0MlrOHEhYZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTo0NToxOFrOHEmq8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMzI2OQ==", "bodyText": "this sounds like the field is not found in the field set, when the field is already in the field set, but not found in the document.", "url": "https://github.com/vespa-engine/vespa/pull/14121#discussion_r474503269", "createdAt": "2020-08-21T08:09:42Z", "author": {"login": "havardpe"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -277,6 +280,22 @@ spi::ReadConsistency api_read_consistency_to_spi(api::InternalReadConsistency co\n     }\n }\n \n+document::FieldSet::SP\n+getFieldSet(const document::FieldSetRepo & repo, vespalib::stringref name, MessageTracker & tracker) {\n+    try {\n+        return repo.getFieldSet(name);\n+    } catch (document::FieldNotFoundException & e) {\n+        tracker.fail(storage::api::ReturnCode::ILLEGAL_PARAMETERS,\n+                     make_string(\"Field %s not found in fieldset %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6203e47bcca5309f0865c7e6c02855c6224a1c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU4OTkzNw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/14121#discussion_r474589937", "createdAt": "2020-08-21T09:45:18Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/persistencethread.cpp", "diffHunk": "@@ -277,6 +280,22 @@ spi::ReadConsistency api_read_consistency_to_spi(api::InternalReadConsistency co\n     }\n }\n \n+document::FieldSet::SP\n+getFieldSet(const document::FieldSetRepo & repo, vespalib::stringref name, MessageTracker & tracker) {\n+    try {\n+        return repo.getFieldSet(name);\n+    } catch (document::FieldNotFoundException & e) {\n+        tracker.fail(storage::api::ReturnCode::ILLEGAL_PARAMETERS,\n+                     make_string(\"Field %s not found in fieldset %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUwMzI2OQ=="}, "originalCommit": {"oid": "6c6203e47bcca5309f0865c7e6c02855c6224a1c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1480, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}