{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTUxNTM0", "number": 13008, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToyMDowNFrOD0p3-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToyMDowNFrOD0p3-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NTM4NjE3OnYy", "diffSide": "RIGHT", "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/persistence/ApplicationSerializerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToyMDowNFrOGJsW9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToyMDowNFrOGJsW9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNzE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    System.out.println(\"original id: \" + original.id());\n          \n          \n            \n                    System.out.println(\"serialized id: \" + serialized.id());", "url": "https://github.com/vespa-engine/vespa/pull/13008#discussion_r412817143", "createdAt": "2020-04-22T09:20:04Z", "author": {"login": "freva"}, "path": "node-repository/src/test/java/com/yahoo/vespa/hosted/provision/persistence/ApplicationSerializerTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.provision.persistence;\n+\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.ClusterResources;\n+import com.yahoo.config.provision.ClusterSpec;\n+import com.yahoo.config.provision.NodeResources;\n+import com.yahoo.vespa.hosted.provision.applications.Application;\n+import com.yahoo.vespa.hosted.provision.applications.Cluster;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNotSame;\n+\n+/**\n+ * @author bratseth\n+ */\n+public class ApplicationSerializerTest {\n+\n+    @Test\n+    public void testApplicationSerialization() {\n+        List<Cluster> clusters = new ArrayList<>();\n+        clusters.add(new Cluster(ClusterSpec.Id.from(\"c1\"),\n+                                 new ClusterResources( 8, 4, new NodeResources(1, 2,  3,  4)),\n+                                 new ClusterResources(12, 6, new NodeResources(3, 6, 21, 24)),\n+                                 Optional.empty()));\n+        clusters.add(new Cluster(ClusterSpec.Id.from(\"c2\"),\n+                                 new ClusterResources( 8, 4, new NodeResources(1, 2, 3, 4)),\n+                                 new ClusterResources(14, 7, new NodeResources(3, 6, 21, 24)),\n+                                 Optional.of(new ClusterResources(10, 5, new NodeResources(2, 4, 14, 16)))));\n+        Application original = new Application(ApplicationId.from(\"myTenant\", \"myApplication\", \"myInstance\"),\n+                                               clusters);\n+\n+        Application serialized = ApplicationSerializer.fromJson(ApplicationSerializer.toJson(original));\n+        assertNotSame(original, serialized);\n+        System.out.println(\"original id: \" + original.id());\n+        System.out.println(\"serialized id: \" + serialized.id());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23cf8b3afd927f5c99e475d3eb9d043360483d4"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1727, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}