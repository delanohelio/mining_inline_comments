{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTcxNTgx", "number": 12958, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo1NToxNFrODy31kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo1NToxNFrODy31kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjcwMjI1OnYy", "diffSide": "RIGHT", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/systemflags/v1/SystemFlagsDataArchive.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo1NToxNFrOGHLBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzoxODo0MFrOGHNl5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MzcyOQ==", "bodyText": "?", "url": "https://github.com/vespa-engine/vespa/pull/12958#discussion_r410173729", "createdAt": "2020-04-17T11:55:14Z", "author": {"login": "freva"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/systemflags/v1/SystemFlagsDataArchive.java", "diffHunk": "@@ -206,4 +236,44 @@ public SystemFlagsDataArchive build() {\n         }\n \n     }\n+\n+    private static class JsonAccessor {\n+        private final JsonNode jsonNode;\n+\n+        public JsonAccessor(JsonNode jsonNode) {\n+            this.jsonNode = jsonNode;\n+        }\n+\n+        public JsonAccessor get(String fieldName) {\n+            if (jsonNode == null) {\n+                return this;\n+            } else {\n+                return new JsonAccessor(jsonNode.get(fieldName));\n+            }\n+        }\n+\n+        public Optional<String> asString() {\n+            return jsonNode != null && jsonNode.isTextual() ? Optional.of(jsonNode.textValue()) : Optional.empty();\n+        }\n+\n+        public void forEachArrayElement(Consumer<JsonAccessor> consumer) {\n+            if (jsonNode != null && jsonNode.isArray()) {\n+                jsonNode.forEach(jsonNodeElement -> consumer.accept(new JsonAccessor(jsonNodeElement)));\n+            }\n+        }\n+\n+        public void removeCommentRecursively() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNTkwOA==", "bodyText": "PR on your way to remove this unused method", "url": "https://github.com/vespa-engine/vespa/pull/12958#discussion_r410215908", "createdAt": "2020-04-17T13:18:40Z", "author": {"login": "hakonhall"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/systemflags/v1/SystemFlagsDataArchive.java", "diffHunk": "@@ -206,4 +236,44 @@ public SystemFlagsDataArchive build() {\n         }\n \n     }\n+\n+    private static class JsonAccessor {\n+        private final JsonNode jsonNode;\n+\n+        public JsonAccessor(JsonNode jsonNode) {\n+            this.jsonNode = jsonNode;\n+        }\n+\n+        public JsonAccessor get(String fieldName) {\n+            if (jsonNode == null) {\n+                return this;\n+            } else {\n+                return new JsonAccessor(jsonNode.get(fieldName));\n+            }\n+        }\n+\n+        public Optional<String> asString() {\n+            return jsonNode != null && jsonNode.isTextual() ? Optional.of(jsonNode.textValue()) : Optional.empty();\n+        }\n+\n+        public void forEachArrayElement(Consumer<JsonAccessor> consumer) {\n+            if (jsonNode != null && jsonNode.isArray()) {\n+                jsonNode.forEach(jsonNodeElement -> consumer.accept(new JsonAccessor(jsonNodeElement)));\n+            }\n+        }\n+\n+        public void removeCommentRecursively() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MzcyOQ=="}, "originalCommit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1705, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}