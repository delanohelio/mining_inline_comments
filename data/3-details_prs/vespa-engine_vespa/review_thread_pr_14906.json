{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0Mzg4MDE0", "number": 14906, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozODo1NFrOEuXu3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDoyNDowNFrOEua_Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDU4NzgzOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozODo1NFrOHiuj0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozODo1NFrOHiuj0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3NjQ2Ng==", "bodyText": "consider renaming the function calculating the wanted chunk size to make us feel more safe about not always wanting to put everything into a single chunk.", "url": "https://github.com/vespa-engine/vespa/pull/14906#discussion_r506176466", "createdAt": "2020-10-16T08:38:54Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.cpp", "diffHunk": "@@ -199,10 +199,24 @@ SparseTensorIndex::SparseTensorIndex(size_t num_mapped_in)\n     : _stash(STASH_CHUNK_SIZE), _map(), _num_mapped_dims(num_mapped_in)\n {}\n \n-SparseTensorIndex::SparseTensorIndex(const SparseTensorIndex & index_in)\n-    : _stash(needed_memory_for(index_in)), _map(), _num_mapped_dims(index_in._num_mapped_dims)\n+SparseTensorIndex::SparseTensorIndex(size_t stash_size, const SparseTensorIndex &index_in)\n+    : _stash(stash_size), _map(), _num_mapped_dims(index_in._num_mapped_dims)\n {\n-    copyMap(_map, index_in._map, _stash);\n+    copyMap(_map, index_in._map, _stash);    \n+}\n+\n+SparseTensorIndex\n+SparseTensorIndex::shrunk_copy() const\n+{\n+    size_t want_mem = needed_memory_for(*this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f826338a8af1406e0e142dcd182ad4268f0040"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDY0NjA2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo1MTo0NFrOHivHhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODo1MTo0NFrOHivHhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE4NTYwNg==", "bodyText": "consider deleting the copy constructor to make sure it does not exist and force everyone to use copy/shrunk_copy.", "url": "https://github.com/vespa-engine/vespa/pull/14906#discussion_r506185606", "createdAt": "2020-10-16T08:51:44Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.h", "diffHunk": "@@ -40,6 +41,7 @@ class SparseTensorIndex : public vespalib::eval::Value::Index\n     IndexMap _map;\n     size_t _num_mapped_dims;\n     static size_t needed_memory_for(const SparseTensorIndex &other);\n+    SparseTensorIndex(size_t stash_size, const SparseTensorIndex &other);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29f826338a8af1406e0e142dcd182ad4268f0040"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTEyMDY2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDoyNDowNFrOHiz-EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDoyNDowNFrOHiz-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2NTEwNA==", "bodyText": "it is more important to mention chunk than stash", "url": "https://github.com/vespa-engine/vespa/pull/14906#discussion_r506265104", "createdAt": "2020-10-16T10:24:04Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/tensor/sparse/sparse_tensor_index.cpp", "diffHunk": "@@ -180,7 +180,7 @@ SparseTensorValueAllMappings::next_result(ConstArrayRef<vespalib::stringref*> ad\n //-----------------------------------------------------------------------------\n \n size_t\n-SparseTensorIndex::needed_memory_for(const SparseTensorIndex &other) {\n+SparseTensorIndex::wanted_stash_size_for(const SparseTensorIndex &other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f2465c1f9de50572b4a2aecb538b7fa911f6eb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1190, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}