{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTc2MTUw", "number": 15324, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo1MTo1MFrOE4lAcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo1NzozOVrOE4lIdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzYyMDM1OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailureStatusUpdater.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo1MTo1MFrOHyluFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOToxNjoyNFrOHymhsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwODg1Mw==", "bodyText": "Consider a shorter name. NodeHealthTracker?", "url": "https://github.com/vespa-engine/vespa/pull/15324#discussion_r522808853", "createdAt": "2020-11-13T08:51:50Z", "author": {"login": "mpolden"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailureStatusUpdater.java", "diffHunk": "@@ -0,0 +1,137 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.provision.maintenance;\n+\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.ApplicationLockException;\n+import com.yahoo.config.provision.HostLivenessTracker;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.transaction.Mutex;\n+import com.yahoo.vespa.applicationmodel.ServiceInstance;\n+import com.yahoo.vespa.applicationmodel.ServiceStatus;\n+import com.yahoo.vespa.hosted.provision.Node;\n+import com.yahoo.vespa.hosted.provision.NodeList;\n+import com.yahoo.vespa.hosted.provision.NodeRepository;\n+import com.yahoo.vespa.hosted.provision.node.Agent;\n+import com.yahoo.vespa.hosted.provision.node.History;\n+import com.yahoo.vespa.service.monitor.ServiceMonitor;\n+import com.yahoo.yolean.Exceptions;\n+\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.logging.Level;\n+import java.util.stream.Collectors;\n+\n+import static java.util.stream.Collectors.counting;\n+\n+/**\n+ * Checks if nodes are responding and updates their status accordingly\n+ *\n+ * @author bratseth\n+ */\n+public class NodeFailureStatusUpdater extends NodeRepositoryMaintainer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb05c22ac610c2f6cb59024edcc3c90586b1a7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgyMjA2NA==", "bodyText": "Good suggestion, I'll change it.", "url": "https://github.com/vespa-engine/vespa/pull/15324#discussion_r522822064", "createdAt": "2020-11-13T09:16:24Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/maintenance/NodeFailureStatusUpdater.java", "diffHunk": "@@ -0,0 +1,137 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.provision.maintenance;\n+\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.ApplicationLockException;\n+import com.yahoo.config.provision.HostLivenessTracker;\n+import com.yahoo.jdisc.Metric;\n+import com.yahoo.transaction.Mutex;\n+import com.yahoo.vespa.applicationmodel.ServiceInstance;\n+import com.yahoo.vespa.applicationmodel.ServiceStatus;\n+import com.yahoo.vespa.hosted.provision.Node;\n+import com.yahoo.vespa.hosted.provision.NodeList;\n+import com.yahoo.vespa.hosted.provision.NodeRepository;\n+import com.yahoo.vespa.hosted.provision.node.Agent;\n+import com.yahoo.vespa.hosted.provision.node.History;\n+import com.yahoo.vespa.service.monitor.ServiceMonitor;\n+import com.yahoo.yolean.Exceptions;\n+\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.logging.Level;\n+import java.util.stream.Collectors;\n+\n+import static java.util.stream.Collectors.counting;\n+\n+/**\n+ * Checks if nodes are responding and updates their status accordingly\n+ *\n+ * @author bratseth\n+ */\n+public class NodeFailureStatusUpdater extends NodeRepositoryMaintainer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwODg1Mw=="}, "originalCommit": {"oid": "ccbb05c22ac610c2f6cb59024edcc3c90586b1a7"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzY0MDg0OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/NodeRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo1NzozOVrOHyl6QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOToxNDowOFrOHymclQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgxMTk2OQ==", "bodyText": "Consider simplifying to (double)downNodes.size() / (double)activeNodes.size() <= 0.2.", "url": "https://github.com/vespa-engine/vespa/pull/15324#discussion_r522811969", "createdAt": "2020-11-13T08:57:39Z", "author": {"login": "mpolden"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/NodeRepository.java", "diffHunk": "@@ -385,6 +385,18 @@ private NodeAcl getNodeAcl(Node node, NodeList candidates) {\n         return List.of(getNodeAcl(node, candidates));\n     }\n \n+    /**\n+     * Returns whether the zone managed by this node repository seems to be working.\n+     * If too many nodes are not responding, there is probably some zone-wide issue\n+     * and we should probably refrain from making changes to it.\n+     */\n+    public boolean isWorking() {\n+        NodeList activeNodes = list(State.active);\n+        if (activeNodes.size() <= 5) return true; // Not enough data to decide\n+        NodeList downNodes = activeNodes.down();\n+        return ! ( (double)downNodes.size() / (double)activeNodes.size() > 0.2 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa0126ed6949e7897102dfaa713d76686246680"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgyMDc1Nw==", "bodyText": "I find \"working if not more than 20% fails\" is easier to get than the simpler one but that might just be me ...", "url": "https://github.com/vespa-engine/vespa/pull/15324#discussion_r522820757", "createdAt": "2020-11-13T09:14:08Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/NodeRepository.java", "diffHunk": "@@ -385,6 +385,18 @@ private NodeAcl getNodeAcl(Node node, NodeList candidates) {\n         return List.of(getNodeAcl(node, candidates));\n     }\n \n+    /**\n+     * Returns whether the zone managed by this node repository seems to be working.\n+     * If too many nodes are not responding, there is probably some zone-wide issue\n+     * and we should probably refrain from making changes to it.\n+     */\n+    public boolean isWorking() {\n+        NodeList activeNodes = list(State.active);\n+        if (activeNodes.size() <= 5) return true; // Not enough data to decide\n+        NodeList downNodes = activeNodes.down();\n+        return ! ( (double)downNodes.size() / (double)activeNodes.size() > 0.2 );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgxMTk2OQ=="}, "originalCommit": {"oid": "efa0126ed6949e7897102dfaa713d76686246680"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 849, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}