{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTg3MzA2", "number": 11940, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDoyMzozOFrODar3ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOToxMzoyOVrODatVMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzA4MjYxOnYy", "diffSide": "RIGHT", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/noderepository/NodeRepositoryNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDoyMzozOFrOFhxOwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDo0MzowOFrOFhxSOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MzkyMQ==", "bodyText": "Now that I see it - this needs to be called suspendedSinceMillis.", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370953921", "createdAt": "2020-01-25T20:23:38Z", "author": {"login": "hakonhall"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/noderepository/NodeRepositoryNode.java", "diffHunk": "@@ -76,6 +82,8 @@\n     private NodeHistory[] history;\n     @JsonProperty(\"allowedToBeDown\")\n     private Boolean allowedToBeDown;\n+    @JsonProperty(\"suspendedSince\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDgxMQ==", "bodyText": "Fair enough.", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370954811", "createdAt": "2020-01-25T20:43:08Z", "author": {"login": "jonmv"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/noderepository/NodeRepositoryNode.java", "diffHunk": "@@ -76,6 +82,8 @@\n     private NodeHistory[] history;\n     @JsonProperty(\"allowedToBeDown\")\n     private Boolean allowedToBeDown;\n+    @JsonProperty(\"suspendedSince\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1MzkyMQ=="}, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzA4NDQ1OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDoyODozNFrOFhxPqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMjoxMjo1OFrOFhxj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDE1NA==", "bodyText": "Instead of \"Some nodes\" - write the list or a sample node? (btw, I think you should write a util to convert a list of hosts to String, and write the full list if the number of elements is below some reasonable threshold, while otherwise write a prefix of the list and then something like ... (and X more hosts). You could use this util here.)", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370954154", "createdAt": "2020-01-25T20:28:34Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -346,20 +347,48 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n-        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n-        if (timedOut(id, deployment.get(), installationTimeout)) {\n+        boolean failed = false;\n+\n+        NodeList suspendedTooLong = nodeList.suspendedSince(controller.clock().instant().minus(installationTimeout));\n+        if ( ! suspendedTooLong.isEmpty()) {\n+            logger.log(INFO, \"Some nodes have been suspended for more than \" + installationTimeout.toMinutes() + \" minutes.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDc2Mg==", "bodyText": "Would the number of allowed down hosts ever exceed this threshold? For the start and end (with failure), I think all ghosts should be printed.", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370954762", "createdAt": "2020-01-25T20:42:12Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -346,20 +347,48 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n-        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n-        if (timedOut(id, deployment.get(), installationTimeout)) {\n+        boolean failed = false;\n+\n+        NodeList suspendedTooLong = nodeList.suspendedSince(controller.clock().instant().minus(installationTimeout));\n+        if ( ! suspendedTooLong.isEmpty()) {\n+            logger.log(INFO, \"Some nodes have been suspended for more than \" + installationTimeout.toMinutes() + \" minutes.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDE1NA=="}, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1OTMyMg==", "bodyText": "Possibly - I'm just thinking such a util might be used to dump out a lot of hosts - like all hosts or all but a few - but if that's not possible there is no point is making it complicated.", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370959322", "createdAt": "2020-01-25T22:12:58Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -346,20 +347,48 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n-        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n-        if (timedOut(id, deployment.get(), installationTimeout)) {\n+        boolean failed = false;\n+\n+        NodeList suspendedTooLong = nodeList.suspendedSince(controller.clock().instant().minus(installationTimeout));\n+        if ( ! suspendedTooLong.isEmpty()) {\n+            logger.log(INFO, \"Some nodes have been suspended for more than \" + installationTimeout.toMinutes() + \" minutes.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDE1NA=="}, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzA4NTIwOnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDozMDo0MlrOFhxQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQyMDo0MjoyOFrOFhxSGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDI1MQ==", "bodyText": "Should probably add some advise on what the customer should do next when the deployment fails?", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370954251", "createdAt": "2020-01-25T20:30:42Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -346,20 +347,48 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n-        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n-        if (timedOut(id, deployment.get(), installationTimeout)) {\n+        boolean failed = false;\n+\n+        NodeList suspendedTooLong = nodeList.suspendedSince(controller.clock().instant().minus(installationTimeout));\n+        if ( ! suspendedTooLong.isEmpty()) {\n+            logger.log(INFO, \"Some nodes have been suspended for more than \" + installationTimeout.toMinutes() + \" minutes.\");\n+            failed = true;\n+        }\n+\n+        if (run.noNodesDownSince()\n+               .map(since -> since.isBefore(controller.clock().instant().minus(installationTimeout)))\n+               .orElse(false)) {\n+            if (summary.needPlatformUpgrade() > 0 || summary.needReboot() > 0 || summary.needRestart() > 0)\n+                logger.log(INFO, \"No nodes allowed to suspend to progress installation for \" + installationTimeout.toMinutes() + \" minutes.\");\n+            else\n+                logger.log(INFO, \"Nodes not able to start with new application package.\");\n+            failed = true;\n+        }\n+\n+        Duration timeout = JobRunner.jobTimeout.minusHours(1); // Time out before job dies.\n+        if (timedOut(id, deployment.get(), timeout)) {\n+            logger.log(INFO, \"Installation failed to complete within \" + timeout.toHours() + \"hours!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDc3OA==", "bodyText": "Yes.", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370954778", "createdAt": "2020-01-25T20:42:28Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -346,20 +347,48 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n-        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n-        if (timedOut(id, deployment.get(), installationTimeout)) {\n+        boolean failed = false;\n+\n+        NodeList suspendedTooLong = nodeList.suspendedSince(controller.clock().instant().minus(installationTimeout));\n+        if ( ! suspendedTooLong.isEmpty()) {\n+            logger.log(INFO, \"Some nodes have been suspended for more than \" + installationTimeout.toMinutes() + \" minutes.\");\n+            failed = true;\n+        }\n+\n+        if (run.noNodesDownSince()\n+               .map(since -> since.isBefore(controller.clock().instant().minus(installationTimeout)))\n+               .orElse(false)) {\n+            if (summary.needPlatformUpgrade() > 0 || summary.needReboot() > 0 || summary.needRestart() > 0)\n+                logger.log(INFO, \"No nodes allowed to suspend to progress installation for \" + installationTimeout.toMinutes() + \" minutes.\");\n+            else\n+                logger.log(INFO, \"Nodes not able to start with new application package.\");\n+            failed = true;\n+        }\n+\n+        Duration timeout = JobRunner.jobTimeout.minusHours(1); // Time out before job dies.\n+        if (timedOut(id, deployment.get(), timeout)) {\n+            logger.log(INFO, \"Installation failed to complete within \" + timeout.toHours() + \"hours!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk1NDI1MQ=="}, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzMyMjcyOnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/persistence/RunSerializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOToxMzoyOVrOFhzEfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwOToxMzoyOVrOFhzEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NDA2Mw==", "bodyText": "Argh, forgot the previous, with 11 entries, was merged already >_<", "url": "https://github.com/vespa-engine/vespa/pull/11940#discussion_r370984063", "createdAt": "2020-01-26T09:13:29Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/persistence/RunSerializer.java", "diffHunk": "@@ -180,8 +180,8 @@ private ApplicationVersion applicationVersionFrom(Inspector versionObject) {\n         if ( ! summaryArray.valid())\n             return Optional.empty();\n \n-        if (summaryArray.entries() != 11)\n-            throw new IllegalArgumentException(\"Convergence summary must have 11 entries\");\n+        if (summaryArray.entries() != 12)\n+            throw new IllegalArgumentException(\"Convergence summary must have 12 entries\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d5b1c4b828b8c8a85c40ed0a507533e7c2aa47"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2527, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}