{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NTcyNDIy", "number": 15503, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoxNDo1MVrOE9-aow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoyODowOFrOE9-qKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDIxMjE5OnYy", "diffSide": "RIGHT", "path": "documentapi/src/vespa/documentapi/messagebus/routablerepository.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoxNDo1MVrOH68U8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDozODozMlrOH7AlhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU2Nzg1OA==", "bodyText": "Can remove explicit here", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531567858", "createdAt": "2020-11-27T12:14:51Z", "author": {"login": "vekterli"}, "path": "documentapi/src/vespa/documentapi/messagebus/routablerepository.h", "diffHunk": "@@ -40,15 +38,14 @@ class RoutableRepository {\n     mutable std::mutex   _lock;\n     TypeMap              _factoryTypes;\n     mutable FactoryCache _cache;\n-    const LoadTypeSet&   _loadTypes;\n \n public:\n     RoutableRepository(const RoutableRepository &) = delete;\n     RoutableRepository & operator = (const RoutableRepository &) = delete;\n     /**\n      * Constructs a new routable repository.\n      */\n-    explicit RoutableRepository(const LoadTypeSet& loadTypes);\n+    explicit RoutableRepository();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzNzYzNw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531637637", "createdAt": "2020-11-27T14:38:32Z", "author": {"login": "baldersheim"}, "path": "documentapi/src/vespa/documentapi/messagebus/routablerepository.h", "diffHunk": "@@ -40,15 +38,14 @@ class RoutableRepository {\n     mutable std::mutex   _lock;\n     TypeMap              _factoryTypes;\n     mutable FactoryCache _cache;\n-    const LoadTypeSet&   _loadTypes;\n \n public:\n     RoutableRepository(const RoutableRepository &) = delete;\n     RoutableRepository & operator = (const RoutableRepository &) = delete;\n     /**\n      * Constructs a new routable repository.\n      */\n-    explicit RoutableRepository(const LoadTypeSet& loadTypes);\n+    explicit RoutableRepository();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU2Nzg1OA=="}, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDIzOTk1OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/storageserver/rpc/message_codec_provider.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoyNDoyMlrOH68l5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDo0MDowMVrOH7Aocg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MjE5Ng==", "bodyText": "Consider adding explicit to WrappedCodec and MessageCodecProvider ctors", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531572196", "createdAt": "2020-11-27T12:24:22Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/storageserver/rpc/message_codec_provider.h", "diffHunk": "@@ -34,14 +31,12 @@ class MessageCodecProvider {\n     mutable std::shared_mutex _rw_mutex;\n     std::shared_ptr<WrappedCodec> _active_codec;\n public:\n-    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo,\n-                         std::shared_ptr<const documentapi::LoadTypeSet> load_type_set);\n+    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODM4Ng==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638386", "createdAt": "2020-11-27T14:40:01Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/storageserver/rpc/message_codec_provider.h", "diffHunk": "@@ -34,14 +31,12 @@ class MessageCodecProvider {\n     mutable std::shared_mutex _rw_mutex;\n     std::shared_ptr<WrappedCodec> _active_codec;\n public:\n-    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo,\n-                         std::shared_ptr<const documentapi::LoadTypeSet> load_type_set);\n+    MessageCodecProvider(std::shared_ptr<const document::DocumentTypeRepo> doc_type_repo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3MjE5Ng=="}, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDI1MDgzOnYy", "diffSide": "RIGHT", "path": "storageapi/src/vespa/storageapi/mbusprot/protocolserialization7.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoyNzo0NVrOH68sYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDo0MDoxM1rOH7Ao6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3Mzg1OA==", "bodyText": "Consider making explicit", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531573858", "createdAt": "2020-11-27T12:27:45Z", "author": {"login": "vekterli"}, "path": "storageapi/src/vespa/storageapi/mbusprot/protocolserialization7.h", "diffHunk": "@@ -13,13 +12,10 @@ namespace storage::mbusprot {\n  */\n class ProtocolSerialization7 final : public ProtocolSerialization {\n     const std::shared_ptr<const document::DocumentTypeRepo> _repo;\n-    const documentapi::LoadTypeSet& _load_types;\n public:\n-    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo,\n-                           const documentapi::LoadTypeSet& load_types);\n+    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODUwNA==", "bodyText": "fixed", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638504", "createdAt": "2020-11-27T14:40:13Z", "author": {"login": "baldersheim"}, "path": "storageapi/src/vespa/storageapi/mbusprot/protocolserialization7.h", "diffHunk": "@@ -13,13 +12,10 @@ namespace storage::mbusprot {\n  */\n class ProtocolSerialization7 final : public ProtocolSerialization {\n     const std::shared_ptr<const document::DocumentTypeRepo> _repo;\n-    const documentapi::LoadTypeSet& _load_types;\n public:\n-    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo,\n-                           const documentapi::LoadTypeSet& load_types);\n+    ProtocolSerialization7(std::shared_ptr<const document::DocumentTypeRepo> repo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3Mzg1OA=="}, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDI1MTkzOnYy", "diffSide": "RIGHT", "path": "storageapi/src/vespa/storageapi/mbusprot/storageprotocol.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjoyODowOFrOH68tFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDo0MDo1MFrOH7AqIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NDAzNw==", "bodyText": "Consider making explicit", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531574037", "createdAt": "2020-11-27T12:28:08Z", "author": {"login": "vekterli"}, "path": "storageapi/src/vespa/storageapi/mbusprot/storageprotocol.h", "diffHunk": "@@ -15,8 +15,7 @@ class StorageProtocol final : public mbus::IProtocol\n \n     static mbus::string NAME;\n \n-    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>,\n-                    const documentapi::LoadTypeSet& loadTypes);\n+    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzODgxNg==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15503#discussion_r531638816", "createdAt": "2020-11-27T14:40:50Z", "author": {"login": "baldersheim"}, "path": "storageapi/src/vespa/storageapi/mbusprot/storageprotocol.h", "diffHunk": "@@ -15,8 +15,7 @@ class StorageProtocol final : public mbus::IProtocol\n \n     static mbus::string NAME;\n \n-    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>,\n-                    const documentapi::LoadTypeSet& loadTypes);\n+    StorageProtocol(const std::shared_ptr<const document::DocumentTypeRepo>);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NDAzNw=="}, "originalCommit": {"oid": "17d0bc7e91a0c055f57b002b6f501fea36235f99"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 841, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}