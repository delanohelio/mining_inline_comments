{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjUwNTk5", "number": 13492, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozMToxMFrOEC7-FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozMToxMFrOEC7-FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTE1MTU3OnYy", "diffSide": "RIGHT", "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ApplicationRepositoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozMToxMFrOGfslEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjozOToxNFrOGfs0wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg4OTQyNw==", "bodyText": "Perhaps we should consider to stop using 'generation' if it really is the sessionId.", "url": "https://github.com/vespa-engine/vespa/pull/13492#discussion_r435889427", "createdAt": "2020-06-05T12:31:10Z", "author": {"login": "gjoranv"}, "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ApplicationRepositoryTest.java", "diffHunk": "@@ -141,6 +141,23 @@ public void createAndPrepareAndActivate() {\n         assertTrue(result.configChangeActions().getRestartActions().isEmpty());\n     }\n \n+    @Test\n+    public void redeploy() {\n+        PrepareResult result = deployApp(testApp);\n+\n+        long firstSessionId = result.sessionId();\n+\n+        PrepareResult result2 = deployApp(testApp);\n+        long secondSessionId = result2.sessionId();\n+        assertNotEquals(firstSessionId, secondSessionId);\n+\n+        TenantName tenantName = applicationId().tenant();\n+        Tenant tenant = tenantRepository.getTenant(tenantName);\n+        LocalSession session = tenant.getLocalSessionRepo().getSession(\n+                tenant.getApplicationRepo().requireActiveSessionOf(applicationId()));\n+        assertEquals(firstSessionId, session.getMetaData().getPreviousActiveGeneration());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91dbcdd0921d015251f9a896e5321bfd2bda3b8c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5MzQ0MA==", "bodyText": "Agreed, it's just an implementation detail that they are equal. I'll try to improve this in a later PR.", "url": "https://github.com/vespa-engine/vespa/pull/13492#discussion_r435893440", "createdAt": "2020-06-05T12:39:14Z", "author": {"login": "hmusum"}, "path": "configserver/src/test/java/com/yahoo/vespa/config/server/ApplicationRepositoryTest.java", "diffHunk": "@@ -141,6 +141,23 @@ public void createAndPrepareAndActivate() {\n         assertTrue(result.configChangeActions().getRestartActions().isEmpty());\n     }\n \n+    @Test\n+    public void redeploy() {\n+        PrepareResult result = deployApp(testApp);\n+\n+        long firstSessionId = result.sessionId();\n+\n+        PrepareResult result2 = deployApp(testApp);\n+        long secondSessionId = result2.sessionId();\n+        assertNotEquals(firstSessionId, secondSessionId);\n+\n+        TenantName tenantName = applicationId().tenant();\n+        Tenant tenant = tenantRepository.getTenant(tenantName);\n+        LocalSession session = tenant.getLocalSessionRepo().getSession(\n+                tenant.getApplicationRepo().requireActiveSessionOf(applicationId()));\n+        assertEquals(firstSessionId, session.getMetaData().getPreviousActiveGeneration());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg4OTQyNw=="}, "originalCommit": {"oid": "91dbcdd0921d015251f9a896e5321bfd2bda3b8c"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1991, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}