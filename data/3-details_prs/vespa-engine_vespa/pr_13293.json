{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzM4Nzcx", "number": 13293, "title": "Reporting metrics from audit log with user as dimension", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.", "createdAt": "2020-05-18T20:58:17Z", "url": "https://github.com/vespa-engine/vespa/pull/13293", "merged": true, "mergeCommit": {"oid": "ae0ac11a0ef7d790964f51dadb2653857a7ee591"}, "closed": true, "closedAt": "2020-05-19T15:01:59Z", "author": {"login": "bjormel"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcimUASgH2gAyNDE5NzM4NzcxOjdjMmE3OTIxZmZlY2VhMDBhYjQwMWNiM2FkZTY4ZDg0MWJjZWU4ZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci1yorgH2gAyNDE5NzM4NzcxOjQ5Njc4OGZiYmQzZjhlNzE1MDFmODY4NThlMWU2ZWEyM2NjZmQzNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5", "author": {"user": {"login": "bjormel", "name": "Bj\u00f8rn Meland"}}, "url": "https://github.com/vespa-engine/vespa/commit/7c2a7921ffecea00ab401cb3ade68d841bcee8f5", "committedDate": "2020-05-18T20:57:45Z", "message": "Reporting metrics from audit log with user as dimension"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTc3Mzg4", "url": "https://github.com/vespa-engine/vespa/pull/13293#pullrequestreview-414177388", "createdAt": "2020-05-19T07:37:36Z", "commit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozNzozNlrOGXTkvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzo0MzozMlrOGXTxkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MTEzMw==", "bodyText": "Variable should be lowercase, and final can be removed (we typically don't use final for local variables).", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427091133", "createdAt": "2020-05-19T07:37:36Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporter.java", "diffHunk": "@@ -71,6 +73,24 @@ public void maintain() {\n         reportRemainingRotations();\n         reportQueuedNameServiceRequests();\n         reportInfrastructureUpgradeMetrics();\n+        reportAuditLog();\n+    }\n+\n+    private void reportAuditLog() {\n+        final String OPERATOR = \"operator\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MTUxOQ==", "bodyText": "Array length should be checked.", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427091519", "createdAt": "2020-05-19T07:38:19Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporter.java", "diffHunk": "@@ -71,6 +73,24 @@ public void maintain() {\n         reportRemainingRotations();\n         reportQueuedNameServiceRequests();\n         reportInfrastructureUpgradeMetrics();\n+        reportAuditLog();\n+    }\n+\n+    private void reportAuditLog() {\n+        final String OPERATOR = \"operator\";\n+\n+        AuditLog log = controller().auditLogger().readLog();\n+        for (AuditLog.Entry entry : log.entries()) {\n+            String[] resource = entry.resource().split(\"/\");\n+            String operationMetric;\n+            if(resource[1] != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5MzMwMQ==", "bodyText": "Since MetricsReporter runs at an interval and this loops over all entries every time, this metric will end up counting the same entries multiple times.\nI suggest that you instead calculate the total count and use metric.set. You can verify that the metric is as expected by calling metricsReporter.maintain() more than once in the test.", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427093301", "createdAt": "2020-05-19T07:41:31Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporter.java", "diffHunk": "@@ -71,6 +73,24 @@ public void maintain() {\n         reportRemainingRotations();\n         reportQueuedNameServiceRequests();\n         reportInfrastructureUpgradeMetrics();\n+        reportAuditLog();\n+    }\n+\n+    private void reportAuditLog() {\n+        final String OPERATOR = \"operator\";\n+\n+        AuditLog log = controller().auditLogger().readLog();\n+        for (AuditLog.Entry entry : log.entries()) {\n+            String[] resource = entry.resource().split(\"/\");\n+            String operationMetric;\n+            if(resource[1] != null) {\n+                String api = resource[1];\n+                operationMetric = OPERATION_PREFIX + api;\n+                Metric.Context context = metric.createContext(Map.of(OPERATOR, entry.principal()));\n+\n+                metric.add(operationMetric, 1, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NDEwMA==", "bodyText": "Test should use fake hostnames, applications and users.", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427094100", "createdAt": "2020-05-19T07:42:57Z", "author": {"login": "mpolden"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporterTest.java", "diffHunk": "@@ -43,6 +44,34 @@\n \n     private final MetricsMock metrics = new MetricsMock();\n \n+    @Test\n+    public void audit_log() {\n+        var tester = new ControllerTester();\n+        // Data to audit log\n+\n+        MetricsReporter metricsReporter = createReporter(tester.controller());\n+        // Log some operator actions\n+        HttpRequest req1 = HttpRequest.createTestRequest(\n+                \"http://localhost:8080/zone/v2/prod/us-west-1/nodes/v2/state/dirty/le04614.ostk.bm2.prod.gq1.yahoo.com\",\n+                com.yahoo.jdisc.http.HttpRequest.Method.PUT\n+        );\n+        req1.getJDiscRequest().setUserPrincipal(() -> \"user.bjormel\");\n+        tester.controller().auditLogger().log((req1));\n+        HttpRequest req2 = HttpRequest.createTestRequest(\n+                \"http://localhost:8080/routing/v1/inactive/tenant/partner_publishing/application/contentindexing/instance/default/environment/prod/region/us-west-1\",\n+                com.yahoo.jdisc.http.HttpRequest.Method.POST\n+        );\n+        req2.getJDiscRequest().setUserPrincipal(() -> \"user.bjormel\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NDQxNw==", "bodyText": "This should assert the metric value.", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427094417", "createdAt": "2020-05-19T07:43:32Z", "author": {"login": "mpolden"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporterTest.java", "diffHunk": "@@ -43,6 +44,34 @@\n \n     private final MetricsMock metrics = new MetricsMock();\n \n+    @Test\n+    public void audit_log() {\n+        var tester = new ControllerTester();\n+        // Data to audit log\n+\n+        MetricsReporter metricsReporter = createReporter(tester.controller());\n+        // Log some operator actions\n+        HttpRequest req1 = HttpRequest.createTestRequest(\n+                \"http://localhost:8080/zone/v2/prod/us-west-1/nodes/v2/state/dirty/le04614.ostk.bm2.prod.gq1.yahoo.com\",\n+                com.yahoo.jdisc.http.HttpRequest.Method.PUT\n+        );\n+        req1.getJDiscRequest().setUserPrincipal(() -> \"user.bjormel\");\n+        tester.controller().auditLogger().log((req1));\n+        HttpRequest req2 = HttpRequest.createTestRequest(\n+                \"http://localhost:8080/routing/v1/inactive/tenant/partner_publishing/application/contentindexing/instance/default/environment/prod/region/us-west-1\",\n+                com.yahoo.jdisc.http.HttpRequest.Method.POST\n+        );\n+        req2.getJDiscRequest().setUserPrincipal(() -> \"user.bjormel\");\n+        tester.controller().auditLogger().log((req2));\n+\n+        // End data to audit log\n+        metricsReporter.maintain();\n+        getMetric(MetricsReporter.OPERATION_PREFIX + \"zone\", \"user.bjormel\");\n+        getMetric(MetricsReporter.OPERATION_PREFIX + \"routing\", \"user.bjormel\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2a7921ffecea00ab401cb3ade68d841bcee8f5"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d26a30aa50bd5b0e999b57287ee50d2cb340176", "author": {"user": {"login": "bjormel", "name": "Bj\u00f8rn Meland"}}, "url": "https://github.com/vespa-engine/vespa/commit/1d26a30aa50bd5b0e999b57287ee50d2cb340176", "committedDate": "2020-05-19T08:36:21Z", "message": "Clean up after code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad22e17d16c28f639fe39337e4374d169e1ccd06", "author": {"user": {"login": "bjormel", "name": "Bj\u00f8rn Meland"}}, "url": "https://github.com/vespa-engine/vespa/commit/ad22e17d16c28f639fe39337e4374d169e1ccd06", "committedDate": "2020-05-19T10:28:05Z", "message": "Iterate over audit log first, then set metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzI3MjEx", "url": "https://github.com/vespa-engine/vespa/pull/13293#pullrequestreview-414327211", "createdAt": "2020-05-19T10:51:57Z", "commit": {"oid": "ad22e17d16c28f639fe39337e4374d169e1ccd06"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDo1MTo1N1rOGXaycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDo1MTo1N1rOGXaycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIwOTMyOA==", "bodyText": "You can simplify this and drop a key lookup by always doing metricCounts.get and checking for null value  instead of the explicit containsKey. Same for the code below.", "url": "https://github.com/vespa-engine/vespa/pull/13293#discussion_r427209328", "createdAt": "2020-05-19T10:51:57Z", "author": {"login": "mpolden"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/maintenance/MetricsReporter.java", "diffHunk": "@@ -78,15 +78,33 @@ public void maintain() {\n \n     private void reportAuditLog() {\n         AuditLog log = controller().auditLogger().readLog();\n+        HashMap<String, HashMap<String, Integer>> metricCounts = new HashMap<>();\n+\n         for (AuditLog.Entry entry : log.entries()) {\n             String[] resource = entry.resource().split(\"/\");\n-            String operationMetric;\n-            if(resource.length > 1 && resource[1] != null) {\n+            if((resource.length > 1) && (resource[1] != null)) {\n                 String api = resource[1];\n-                operationMetric = OPERATION_PREFIX + api;\n-                Metric.Context context = metric.createContext(Map.of(\"operator\", entry.principal()));\n-\n-                metric.add(operationMetric, 1, context);\n+                String operationMetric = OPERATION_PREFIX + api;\n+\n+                if (metricCounts.containsKey(operationMetric)) {\n+                    HashMap<String, Integer> dimension = metricCounts.get(operationMetric);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad22e17d16c28f639fe39337e4374d169e1ccd06"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "496788fbbd3f8e71501f86858e1e6ea23ccfd372", "author": {"user": {"login": "bjormel", "name": "Bj\u00f8rn Meland"}}, "url": "https://github.com/vespa-engine/vespa/commit/496788fbbd3f8e71501f86858e1e6ea23ccfd372", "committedDate": "2020-05-19T14:59:47Z", "message": "Simplify"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}