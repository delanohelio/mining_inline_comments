{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTIxMTc4", "number": 15836, "title": "Arnej/storage cluster context", "bodyText": "I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.\n@baldersheim\n@geirst\n@vekterli\nplease review", "createdAt": "2020-12-16T12:11:27Z", "url": "https://github.com/vespa-engine/vespa/pull/15836", "merged": true, "mergeCommit": {"oid": "89871ab85daea71d5d401467735da094b2a49387"}, "closed": true, "closedAt": "2020-12-17T09:53:18Z", "author": {"login": "arnej27959"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmta3nAH2gAyNTQxMTIxMTc4Ojk2ZTU3ODVkZjhjZjEyNTkwZTZmODBlMWFkMDVhMzY4MGZiZDk4Yzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmwUFIAH2gAyNTQxMTIxMTc4OmU4ZDY1N2U2NzlmMWU4Y2I5YjI0YzNmODQ3ODEyYTcyZmIxNGY5NDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96e5785df8cf12590e6f80e1ad05a3680fbd98c9", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/96e5785df8cf12590e6f80e1ad05a3680fbd98c9", "committedDate": "2020-12-16T11:41:26Z", "message": "add ClusterContext API\n\n* instead of asking various components for clustername (as reference\n  to string) and then taking the pointer to it, add an API for getting\n  the pointer which has the correct contract documented."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/8044382d3c4a0190561302799c6612b157fb8840", "committedDate": "2020-12-16T11:41:31Z", "message": "assert that cluster name is only set once"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjk2MDAy", "url": "https://github.com/vespa-engine/vespa/pull/15836#pullrequestreview-553696002", "createdAt": "2020-12-16T13:42:52Z", "commit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0Mjo1MlrOIHF5Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0MzoyN1rOIHF6lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwNzQ3NA==", "bodyText": "Please add copyright", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544307474", "createdAt": "2020-12-16T13:42:52Z", "author": {"login": "geirst"}, "path": "storage/src/tests/distributor/dummy_cluster_context.h", "diffHunk": "@@ -0,0 +1,11 @@\n+#pragma once", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwNzg2MA==", "bodyText": "Please add class comment.", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544307860", "createdAt": "2020-12-16T13:43:27Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/common/cluster_context.h", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/vespalib/stllike/string.h>\n+\n+namespace storage {\n+\n+struct ClusterContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQ1NzUx", "url": "https://github.com/vespa-engine/vespa/pull/15836#pullrequestreview-553645751", "createdAt": "2020-12-16T12:38:04Z", "commit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjozODowNFrOIHDTRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0OToyOVrOIHGLXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2NTAzMA==", "bodyText": "Consider const auto* to make constness and pointer more explicitly visible", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544265030", "createdAt": "2020-12-16T12:38:04Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/distributor/distributormessagesender.cpp", "diffHunk": "@@ -10,9 +10,10 @@ DistributorMessageSender::sendToNode(const lib::NodeType& nodeType, uint16_t nod\n                                      const std::shared_ptr<api::StorageCommand> & cmd, bool useDocumentAPI)\n {\n     cmd->setSourceIndex(getDistributorIndex());\n+    auto cluster_np = cluster_context().cluster_name_ptr();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTUxMw==", "bodyText": "Consider const auto*", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544311513", "createdAt": "2020-12-16T13:48:29Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/bucketownershipnotifier.cpp", "diffHunk": "@@ -59,7 +59,8 @@ BucketOwnershipNotifier::sendNotifyBucketToDistributor(\n     }\n     auto notifyCmd = std::make_shared<api::NotifyBucketChangeCommand>(bucket, infoToSend);\n \n-    notifyCmd->setAddress(api::StorageMessageAddress::create(&_component.getClusterName(), lib::NodeType::DISTRIBUTOR, distributorIndex));\n+    auto cluster_np = _component.cluster_context().cluster_name_ptr();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMTg4Ng==", "bodyText": "Consider const auto*", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544311886", "createdAt": "2020-12-16T13:49:02Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/storageserver/mergethrottler.cpp", "diffHunk": "@@ -373,7 +373,8 @@ MergeThrottler::forwardCommandToNode(\n                     mergeCmd.getMaxTimestamp(),\n                     mergeCmd.getClusterStateVersion(),\n                     newChain));\n-    fwdMerge->setAddress(api::StorageMessageAddress::create(&_component.getClusterName(), lib::NodeType::STORAGE, nodeIndex));\n+    auto cluster_np = _component.cluster_context().cluster_name_ptr();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxMjE1OQ==", "bodyText": "Consider adding a noexcept specifier to this", "url": "https://github.com/vespa-engine/vespa/pull/15836#discussion_r544312159", "createdAt": "2020-12-16T13:49:29Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/common/cluster_context.h", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/vespalib/stllike/string.h>\n+\n+namespace storage {\n+\n+struct ClusterContext {\n+protected:\n+    virtual ~ClusterContext() = default;\n+public:\n+    // returns a pointer to the cluster name\n+    // must be a valid pointer to a constant string for the\n+    // lifetime of all the components that may ask for it\n+    virtual const vespalib::string * cluster_name_ptr() const = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8044382d3c4a0190561302799c6612b157fb8840"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d657e679f1e8cb9b24c3f847812a72fb14f947", "author": {"user": {"login": "arnej27959", "name": "Arne H Juul"}}, "url": "https://github.com/vespa-engine/vespa/commit/e8d657e679f1e8cb9b24c3f847812a72fb14f947", "committedDate": "2020-12-16T15:03:44Z", "message": "review follow-up\n\n* add noexcept to new APIs\n* use \"const auto *\"\n* add documentation comments\n* add copyright"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3773, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}