{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTQ1NDY5", "number": 14740, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxNzo0NVrOEqwd5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxNzo0NVrOEqwd5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjY5NzM1OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/LoadBalancerProvisioner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDoxNzo0NVrOHdJQuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzowOTowNFrOHdlbqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyMjQ4OQ==", "bodyText": "This code is executed on bootstrap, so if a big deployment is happening concurrently the above db.lock() will time out.  But bootstrap redeployments are also vulnerable to this.", "url": "https://github.com/vespa-engine/vespa/pull/14740#discussion_r500322489", "createdAt": "2020-10-06T14:17:45Z", "author": {"login": "hakonhall"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/LoadBalancerProvisioner.java", "diffHunk": "@@ -60,8 +60,11 @@ public LoadBalancerProvisioner(NodeRepository nodeRepository, LoadBalancerServic\n         // Read and write all load balancers to make sure they are stored in the latest version of the serialization format\n         for (var id : db.readLoadBalancerIds()) {\n             try (var lock = db.lock(id.application())) {\n-                var loadBalancer = db.readLoadBalancer(id);\n-                loadBalancer.ifPresent(db::writeLoadBalancer);\n+                // TODO(mpolden): Remove inner lock\n+                try (var innerLock = db.configLock(id.application())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aedbdfc275fd16081c78b1fee0b95ff8fd0990b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4NDA0Mg==", "bodyText": "Yes. This is also why I left out locking in the NodeRepository constructor even though it's wrong. If a lock timeout happens at construction time it should recover though as the container will restart and try to construct the components again, and by then deployments are hopefully done.", "url": "https://github.com/vespa-engine/vespa/pull/14740#discussion_r500784042", "createdAt": "2020-10-07T07:09:04Z", "author": {"login": "mpolden"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/LoadBalancerProvisioner.java", "diffHunk": "@@ -60,8 +60,11 @@ public LoadBalancerProvisioner(NodeRepository nodeRepository, LoadBalancerServic\n         // Read and write all load balancers to make sure they are stored in the latest version of the serialization format\n         for (var id : db.readLoadBalancerIds()) {\n             try (var lock = db.lock(id.application())) {\n-                var loadBalancer = db.readLoadBalancer(id);\n-                loadBalancer.ifPresent(db::writeLoadBalancer);\n+                // TODO(mpolden): Remove inner lock\n+                try (var innerLock = db.configLock(id.application())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMyMjQ4OQ=="}, "originalCommit": {"oid": "3aedbdfc275fd16081c78b1fee0b95ff8fd0990b"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1206, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}