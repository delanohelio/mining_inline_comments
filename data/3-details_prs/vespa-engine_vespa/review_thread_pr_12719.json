{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDI4OTI0", "number": 12719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0NToyNVrODriwxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0NToyNVrODriwxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTg0OTAyOnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/DockerImages.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo0NToyNVrOF78dmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo1MDoxNlrOF78oMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMDkyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    NodeType typeToUseForLookup = type;\n          \n          \n            \n                    if (type.isDockerHost()) {\n          \n          \n            \n                        switch (type) {\n          \n          \n            \n                            case confighost:\n          \n          \n            \n                                typeToUseForLookup = NodeType.config;\n          \n          \n            \n                                break;\n          \n          \n            \n                            case controllerhost:\n          \n          \n            \n                                typeToUseForLookup = NodeType.controller;\n          \n          \n            \n                                break;\n          \n          \n            \n                            case host:\n          \n          \n            \n                                typeToUseForLookup = NodeType.tenant;\n          \n          \n            \n                                break;\n          \n          \n            \n                            case proxyhost:\n          \n          \n            \n                                typeToUseForLookup = NodeType.proxy;\n          \n          \n            \n                                break;\n          \n          \n            \n                            default:\n          \n          \n            \n                                break; // do not change\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    NodeType typeToUseForLookup = type.isDockerHost() ? type.childNodeType() : type;", "url": "https://github.com/vespa-engine/vespa/pull/12719#discussion_r398400921", "createdAt": "2020-03-26T08:45:25Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/DockerImages.java", "diffHunk": "@@ -57,9 +57,30 @@ private void createCache() {\n         return dockerImages.get();\n     }\n \n-    /** Returns the current docker image for given node type, or default */\n+    /** Returns the current docker image for given node type, or the type for corresponding child nodes\n+     * if it is a Docker host, or default */\n     public DockerImage dockerImageFor(NodeType type) {\n-        return getDockerImages().getOrDefault(type, defaultImage);\n+        NodeType typeToUseForLookup = type;\n+        if (type.isDockerHost()) {\n+            switch (type) {\n+                case confighost:\n+                    typeToUseForLookup = NodeType.config;\n+                    break;\n+                case controllerhost:\n+                    typeToUseForLookup = NodeType.controller;\n+                    break;\n+                case host:\n+                    typeToUseForLookup = NodeType.tenant;\n+                    break;\n+                case proxyhost:\n+                    typeToUseForLookup = NodeType.proxy;\n+                    break;\n+                default:\n+                    break; // do not change\n+            }\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f96192ed9ee7de20d3935a7b3d65df174561a87c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMzYzNQ==", "bodyText": "Much better, thanks", "url": "https://github.com/vespa-engine/vespa/pull/12719#discussion_r398403635", "createdAt": "2020-03-26T08:50:16Z", "author": {"login": "hmusum"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/DockerImages.java", "diffHunk": "@@ -57,9 +57,30 @@ private void createCache() {\n         return dockerImages.get();\n     }\n \n-    /** Returns the current docker image for given node type, or default */\n+    /** Returns the current docker image for given node type, or the type for corresponding child nodes\n+     * if it is a Docker host, or default */\n     public DockerImage dockerImageFor(NodeType type) {\n-        return getDockerImages().getOrDefault(type, defaultImage);\n+        NodeType typeToUseForLookup = type;\n+        if (type.isDockerHost()) {\n+            switch (type) {\n+                case confighost:\n+                    typeToUseForLookup = NodeType.config;\n+                    break;\n+                case controllerhost:\n+                    typeToUseForLookup = NodeType.controller;\n+                    break;\n+                case host:\n+                    typeToUseForLookup = NodeType.tenant;\n+                    break;\n+                case proxyhost:\n+                    typeToUseForLookup = NodeType.proxy;\n+                    break;\n+                default:\n+                    break; // do not change\n+            }\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMDkyMQ=="}, "originalCommit": {"oid": "f96192ed9ee7de20d3935a7b3d65df174561a87c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}