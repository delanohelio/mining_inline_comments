{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTMyODM3", "number": 14768, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoxOTo0NFrOErf-_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoxOTo0NFrOErf-_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDQ4MjU0OnYy", "diffSide": "RIGHT", "path": "build_settings.cmake", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODoxOTo0NFrOHeTKOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToxODozMFrOHeVc7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzMzI0Mg==", "bodyText": "This option is not supported on Clang.", "url": "https://github.com/vespa-engine/vespa/pull/14768#discussion_r501533242", "createdAt": "2020-10-08T08:19:44Z", "author": {"login": "toregge"}, "path": "build_settings.cmake", "diffHunk": "@@ -36,7 +36,7 @@ endif()\n # Warnings that are specific to C++ compilation\n # Note: this is not a union of C_WARN_OPTS, since CMAKE_CXX_FLAGS already includes CMAKE_C_FLAGS, which in turn includes C_WARN_OPTS transitively\n if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n-  set(CXX_SPECIFIC_WARN_OPTS \"-Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")\n+  set(CXX_SPECIFIC_WARN_OPTS \"-Wnoexcept -Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4d30eb5df1b519939ca157c373ba5365508bc82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDc5Ng==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/14768#discussion_r501570796", "createdAt": "2020-10-08T09:18:30Z", "author": {"login": "baldersheim"}, "path": "build_settings.cmake", "diffHunk": "@@ -36,7 +36,7 @@ endif()\n # Warnings that are specific to C++ compilation\n # Note: this is not a union of C_WARN_OPTS, since CMAKE_CXX_FLAGS already includes CMAKE_C_FLAGS, which in turn includes C_WARN_OPTS transitively\n if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n-  set(CXX_SPECIFIC_WARN_OPTS \"-Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")\n+  set(CXX_SPECIFIC_WARN_OPTS \"-Wnoexcept -Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUzMzI0Mg=="}, "originalCommit": {"oid": "d4d30eb5df1b519939ca157c373ba5365508bc82"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1221, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}