{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTcxNTgx", "number": 12958, "title": "Validate application ID and node type in flag conditions", "bodyText": "", "createdAt": "2020-04-17T07:35:37Z", "url": "https://github.com/vespa-engine/vespa/pull/12958", "merged": true, "mergeCommit": {"oid": "2fcc4aa1c97b4f9cb9c9acaf34b2966b4bd718ea"}, "closed": true, "closedAt": "2020-04-17T09:45:49Z", "author": {"login": "hakonhall"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYcQYdAH2gAyNDA0OTcxNTgxOmZkM2JiNDg4MmVmZmQ4Njg3YzUyNGViOGI3Yjk4NTNmZGE3YmFhNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYf-LNAFqTM5NTM4OTQ3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a", "author": {"user": {"login": "hakonhall", "name": "H\u00e5kon Hallingstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/fd3bb4882effd8687c524eb8b7b9853fda7baa4a", "committedDate": "2020-04-17T07:35:30Z", "message": "Validate application ID and node type in flag conditions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MzUxNDYw", "url": "https://github.com/vespa-engine/vespa/pull/12958#pullrequestreview-395351460", "createdAt": "2020-04-17T10:46:28Z", "commit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Mzg5NDcy", "url": "https://github.com/vespa-engine/vespa/pull/12958#pullrequestreview-395389472", "createdAt": "2020-04-17T11:55:14Z", "commit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo1NToxNFrOGHLBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTo1NToxNFrOGHLBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3MzcyOQ==", "bodyText": "?", "url": "https://github.com/vespa-engine/vespa/pull/12958#discussion_r410173729", "createdAt": "2020-04-17T11:55:14Z", "author": {"login": "freva"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/systemflags/v1/SystemFlagsDataArchive.java", "diffHunk": "@@ -206,4 +236,44 @@ public SystemFlagsDataArchive build() {\n         }\n \n     }\n+\n+    private static class JsonAccessor {\n+        private final JsonNode jsonNode;\n+\n+        public JsonAccessor(JsonNode jsonNode) {\n+            this.jsonNode = jsonNode;\n+        }\n+\n+        public JsonAccessor get(String fieldName) {\n+            if (jsonNode == null) {\n+                return this;\n+            } else {\n+                return new JsonAccessor(jsonNode.get(fieldName));\n+            }\n+        }\n+\n+        public Optional<String> asString() {\n+            return jsonNode != null && jsonNode.isTextual() ? Optional.of(jsonNode.textValue()) : Optional.empty();\n+        }\n+\n+        public void forEachArrayElement(Consumer<JsonAccessor> consumer) {\n+            if (jsonNode != null && jsonNode.isArray()) {\n+                jsonNode.forEach(jsonNodeElement -> consumer.accept(new JsonAccessor(jsonNodeElement)));\n+            }\n+        }\n+\n+        public void removeCommentRecursively() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3bb4882effd8687c524eb8b7b9853fda7baa4a"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3324, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}