{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTczMTY4", "number": 15081, "title": "Take provision lock before session lock", "bodyText": "This avoid deadlocks with internal redeployments that may take the locks in a\ndifferent order.\n@hmusum and @hakonhall", "createdAt": "2020-10-29T10:30:12Z", "url": "https://github.com/vespa-engine/vespa/pull/15081", "merged": true, "mergeCommit": {"oid": "6fe6ef140d3ce55dd74baa4df8761b9c05b2832d"}, "closed": true, "closedAt": "2020-10-29T13:47:15Z", "author": {"login": "mpolden"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXPliMAH2gAyNTEyMTczMTY4OmVkODQxM2I4NDVkZWJiMWE1YTAyM2RmZjdjOGZlNTBlOGMyNGE4MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXQGbqAFqTUxOTU1MTc1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/ed8413b845debb1a5a023dff7c8fe50e8c24a800", "committedDate": "2020-10-29T10:27:04Z", "message": "Take provision lock before session lock\n\nThis avoid deadlocks with internal redeployments that may take the locks in a\ndifferent order."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTQ4MDA3", "url": "https://github.com/vespa-engine/vespa/pull/15081#pullrequestreview-519548007", "createdAt": "2020-10-29T10:57:47Z", "commit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTUxNzUy", "url": "https://github.com/vespa-engine/vespa/pull/15081#pullrequestreview-519551752", "createdAt": "2020-10-29T11:02:55Z", "commit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTowMjo1NVrOHqWsOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTowMjo1NVrOHqWsOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE3NDAwOA==", "bodyText": "Consider making an AutoCloseable class to replace these lines and the tenant.getApplicationRepo().lock().", "url": "https://github.com/vespa-engine/vespa/pull/15081#discussion_r514174008", "createdAt": "2020-10-29T11:02:55Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -719,20 +721,26 @@ private ServiceInfo getTesterServiceInfo(ApplicationId applicationId) {\n \n     // ---------------- Session operations ----------------------------------------------------------------\n \n-    public CompletionWaiter activate(Session session, Session previousActiveSession, ApplicationId applicationId, boolean force) {\n-        CompletionWaiter waiter = session.getSessionZooKeeperClient().createActiveWaiter();\n+    public Activation activate(Session session, ApplicationId applicationId, Tenant tenant, boolean force) {\n         NestedTransaction transaction = new NestedTransaction();\n-        transaction.add(deactivateCurrentActivateNew(previousActiveSession, session, force));\n-        if (hostProvisioner.isPresent()) {\n-            try (var applicationTransaction = new ApplicationTransaction(hostProvisioner.get().lock(applicationId), transaction)) {\n+        Optional<ApplicationTransaction> applicationTransaction = hostProvisioner.map(provisioner -> provisioner.lock(applicationId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8413b845debb1a5a023dff7c8fe50e8c24a800"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2223, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}