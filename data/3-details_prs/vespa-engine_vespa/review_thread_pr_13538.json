{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDQzNDIx", "number": 13538, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo0MjozMlrOEEjFcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1NzoxNFrOEEjPug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA0NTkzOnYy", "diffSide": "RIGHT", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/Policy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo0MjozMlrOGiPOTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzoxMjoyM1rOGiRNbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NDE5MA==", "bodyText": "(((\uff3c\uff08\u2718\u0df4\u2718\uff09\uff0f)))", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438554190", "createdAt": "2020-06-11T05:42:32Z", "author": {"login": "jonmv"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/Policy.java", "diffHunk": "@@ -48,15 +48,10 @@\n                   .on(PathGroup.user)\n                   .in(SystemName.main, SystemName.cd, SystemName.dev)),\n \n-    /** Access to create a tenant in select systems. */\n+    /** Access to create a tenant. */\n     tenantCreate(Privilege.grant(Action.create)\n                           .on(PathGroup.tenant)\n-                          .in(SystemName.main, SystemName.cd, SystemName.dev)), // TODO SystemName.all()\n-\n-    /** Access to create a tenant in public */\n-    tenantCreatePublic(Privilege.grant(Action.create)\n-                                .on(PathGroup.tenant)\n-                                .in(SystemName.PublicCd, SystemName.Public)),\n+                          .in(SystemName.all())),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NjczMg==", "bodyText": "I must not fear. Fear is the mind-killer. Fear is the little-death that brings total obliteration. I will face my fear. I will permit it to pass over me and through me. And when it has gone past I will turn the inner eye to see its path. Where the fear has gone there will be nothing. Only I will remain.", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438586732", "createdAt": "2020-06-11T07:12:23Z", "author": {"login": "andreer"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/Policy.java", "diffHunk": "@@ -48,15 +48,10 @@\n                   .on(PathGroup.user)\n                   .in(SystemName.main, SystemName.cd, SystemName.dev)),\n \n-    /** Access to create a tenant in select systems. */\n+    /** Access to create a tenant. */\n     tenantCreate(Privilege.grant(Action.create)\n                           .on(PathGroup.tenant)\n-                          .in(SystemName.main, SystemName.cd, SystemName.dev)), // TODO SystemName.all()\n-\n-    /** Access to create a tenant in public */\n-    tenantCreatePublic(Privilege.grant(Action.create)\n-                                .on(PathGroup.tenant)\n-                                .in(SystemName.PublicCd, SystemName.Public)),\n+                          .in(SystemName.all())),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NDE5MA=="}, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA1MzU5OnYy", "diffSide": "RIGHT", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo0Njo1MFrOGiPTBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo0NzowOVrOGiPTbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NTM5Nw==", "bodyText": "The operator policy already provides all priviliges.", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438555397", "createdAt": "2020-06-11T05:46:50Z", "author": {"login": "jonmv"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "diffHunk": "@@ -18,18 +18,17 @@\n  */\n public enum RoleDefinition {\n \n+    /** Base role which every user is part of. */\n+    everyone(Policy.classifiedRead,\n+            Policy.publicRead,\n+            Policy.user,\n+            Policy.tenantCreate),\n+\n     /** Deus ex machina. */\n-    hostedOperator(Policy.operator),\n+    hostedOperator(everyone, Policy.operator),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NTUwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                hostedOperator(everyone, Policy.operator),\n          \n          \n            \n                hostedOperator(Policy.operator),", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438555502", "createdAt": "2020-06-11T05:47:09Z", "author": {"login": "jonmv"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "diffHunk": "@@ -18,18 +18,17 @@\n  */\n public enum RoleDefinition {\n \n+    /** Base role which every user is part of. */\n+    everyone(Policy.classifiedRead,\n+            Policy.publicRead,\n+            Policy.user,\n+            Policy.tenantCreate),\n+\n     /** Deus ex machina. */\n-    hostedOperator(Policy.operator),\n+    hostedOperator(everyone, Policy.operator),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NTM5Nw=="}, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA1ODUxOnYy", "diffSide": "RIGHT", "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo0OTozNlrOGiPWAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzoxMzo1NlrOGiRQgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NjE2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                hostedSupporter(everyone, Policy.supporter),\n          \n          \n            \n                hostedSupporter(Policy.supporter),\n          \n      \n    \n    \n  \n\nAnyone who is authenticated is automatically a member of the everyone role as well, but I guess that could be considered an implementation detail.\nI do know someone disliked thet role inheritance, though, and wanted to kill it.", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438556163", "createdAt": "2020-06-11T05:49:36Z", "author": {"login": "jonmv"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "diffHunk": "@@ -18,18 +18,17 @@\n  */\n public enum RoleDefinition {\n \n+    /** Base role which every user is part of. */\n+    everyone(Policy.classifiedRead,\n+            Policy.publicRead,\n+            Policy.user,\n+            Policy.tenantCreate),\n+\n     /** Deus ex machina. */\n-    hostedOperator(Policy.operator),\n+    hostedOperator(everyone, Policy.operator),\n \n     /** Machina autem exspiravit. */\n-    hostedSupporter(Policy.supporter,\n-                    Policy.tenantCreatePublic),\n-\n-    /** Base role which every user is part of. */\n-    everyone(Policy.classifiedRead,\n-             Policy.publicRead,\n-             Policy.user,\n-             Policy.tenantCreate),\n+    hostedSupporter(everyone, Policy.supporter),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NzUyMg==", "bodyText": "True, but that does not apply when the hostedSupporter role is used in unit tests. I'll look at the affected tests and consider changing it there instead.", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438587522", "createdAt": "2020-06-11T07:13:56Z", "author": {"login": "andreer"}, "path": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/RoleDefinition.java", "diffHunk": "@@ -18,18 +18,17 @@\n  */\n public enum RoleDefinition {\n \n+    /** Base role which every user is part of. */\n+    everyone(Policy.classifiedRead,\n+            Policy.publicRead,\n+            Policy.user,\n+            Policy.tenantCreate),\n+\n     /** Deus ex machina. */\n-    hostedOperator(Policy.operator),\n+    hostedOperator(everyone, Policy.operator),\n \n     /** Machina autem exspiravit. */\n-    hostedSupporter(Policy.supporter,\n-                    Policy.tenantCreatePublic),\n-\n-    /** Base role which every user is part of. */\n-    everyone(Policy.classifiedRead,\n-             Policy.publicRead,\n-             Policy.user,\n-             Policy.tenantCreate),\n+    hostedSupporter(everyone, Policy.supporter),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NjE2Mw=="}, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA2NDM3OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/security/Auth0Credentials.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1Mjo0OFrOGiPZpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1Mjo0OFrOGiPZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1NzA5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Override\n          \n          \n            \n                public Principal user() { return super.user(); }", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438557094", "createdAt": "2020-06-11T05:52:48Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/security/Auth0Credentials.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.controller.security;\n+\n+import com.yahoo.vespa.hosted.controller.api.role.Role;\n+\n+import java.security.Principal;\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * Like {@link Credentials}, but we know the principal is authenticated by Auth0.\n+ * Also includes the set of roles for which the principal is a member.\n+ *\n+ * @author andreer\n+ */\n+public class Auth0Credentials extends Credentials {\n+\n+    private final Set<Role> roles;\n+\n+    public Auth0Credentials(Principal user, Set<Role> roles) {\n+        super(user);\n+        this.roles = Collections.unmodifiableSet(roles);\n+    }\n+\n+    @Override\n+    public Principal user() { return super.user(); }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA3MjI2OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/security/CloudAccessControl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1NzoxNFrOGiPe1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1NzoxNFrOGiPe1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1ODQyMg==", "bodyText": "Yes!", "url": "https://github.com/vespa-engine/vespa/pull/13538#discussion_r438558422", "createdAt": "2020-06-11T05:57:14Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/security/CloudAccessControl.java", "diffHunk": "@@ -48,14 +60,43 @@ public CloudTenant createTenant(TenantSpec tenantSpec, Credentials credentials,\n         return tenant;\n     }\n \n+    private void requireTenantCreationAllowed(Auth0Credentials auth0Credentials) {\n+        if (allowedByPrivilegedRole(auth0Credentials)) return;\n+\n+        if (!allowedByFeatureFlag(auth0Credentials)) {\n+            throw new ForbiddenException(\"You are not currently permitted to create tenants. Please contact the Vespa team to request access.\");\n+        }\n+\n+        if(administeredTenants(auth0Credentials) >= 3) {\n+            throw new ForbiddenException(\"You are already administering 3 tenants. If you need more, please contact the Vespa team.\");\n+        }\n+    }\n+\n+    private boolean allowedByPrivilegedRole(Auth0Credentials auth0Credentials) {\n+        return auth0Credentials.getRoles().stream()\n+                .map(Role::definition)\n+                .anyMatch(rd -> rd == hostedOperator || rd == hostedSupporter);\n+    }\n+\n+    private boolean allowedByFeatureFlag(Auth0Credentials auth0Credentials) {\n+        return enablePublicSignup.with(FetchVector.Dimension.CONSOLE_USER_EMAIL, auth0Credentials.user().getName()).value();\n+    }\n+\n+    private long administeredTenants(Auth0Credentials auth0Credentials) {\n+        return auth0Credentials.getRoles().stream()\n+                .map(Role::definition)\n+                .filter(rd -> rd == administrator)\n+                .count();\n+    }\n+\n     @Override\n     public Tenant updateTenant(TenantSpec tenantSpec, Credentials credentials, List<Tenant> existing, List<Application> applications) {\n         throw new UnsupportedOperationException(\"Update is not supported here, as it would entail changing the tenant name.\");\n     }\n \n     @Override\n     public void deleteTenant(TenantName tenant, Credentials credentials) {\n-        // Probably terminate customer subscription?\n+        // TODO: allow only if 0 resources, 0 balance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d33ef7fcb2068e76ceb1ea7ac78f181d6075c7"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2026, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}