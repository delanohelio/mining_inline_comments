{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5OTUxNDI1", "number": 11672, "title": "Validate hostnames on setup", "bodyText": "", "createdAt": "2020-01-07T11:39:02Z", "url": "https://github.com/vespa-engine/vespa/pull/11672", "merged": true, "mergeCommit": {"oid": "eb0520f9114f4555d0636e9e0effcdfea40a1395"}, "closed": true, "closedAt": "2020-01-07T13:57:20Z", "author": {"login": "bratseth"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3_Ke7AH2gAyMzU5OTUxNDI1OmNmOThhZWE1ZTQ3ZjgyM2ZlM2VmYzg3MDczMDEwZTM5ZDEwNDg5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4AzncAH2gAyMzU5OTUxNDI1OmExMTQxMmIyZjAxODRjMmNjMGMxMDJjMzhkOTcwMWFmZjFiYjI3YWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf98aea5e47f823fe3efc87073010e39d1048956", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/cf98aea5e47f823fe3efc87073010e39d1048956", "committedDate": "2020-01-07T11:36:14Z", "message": "Validate hostnames on setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/b0d801daed411fa114223a5e6f0663b595334de5", "committedDate": "2020-01-07T12:15:14Z", "message": "Use 'localhost' as hostname"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MjE2Mjc1", "url": "https://github.com/vespa-engine/vespa/pull/11672#pullrequestreview-339216275", "createdAt": "2020-01-07T12:52:45Z", "commit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMjo1Mjo0NVrOFa4hnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMzowNjo0N1rOFa41VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczMzQwNQ==", "bodyText": "Consider extending test name with what the expected behavior is, e.g. unknownHostThrowsExceptionAtConstructionTime", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363733405", "createdAt": "2020-01-07T12:52:45Z", "author": {"login": "vekterli"}, "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNTMwOQ==", "bodyText": "Consider using a reserved TLD to minimize the chance that someone has a valid host mapping for \"unknown\", e.g. something like \"unknown.invalid\" (RFC6761)", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363735309", "createdAt": "2020-01-07T12:57:57Z", "author": {"login": "vekterli"}, "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjUzOA==", "bodyText": "Based on the code, shouldn't this be \"Unknown host: unknown\"?", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363736538", "createdAt": "2020-01-07T13:01:18Z", "author": {"login": "vekterli"}, "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .build();\n+        }\n+        catch (IllegalArgumentException e) {\n+            assertEquals(\"\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczNjkxNg==", "bodyText": "Consider using an exception expectation as part of the test declaration instead of an explicit catch. This test will currently succeed if the code doesn't throw as well.", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363736916", "createdAt": "2020-01-07T13:02:22Z", "author": {"login": "vekterli"}, "path": "vespa-http-client/src/test/java/com/yahoo/vespa/http/client/core/operationProcessor/OperationProcessorTest.java", "diffHunk": "@@ -410,4 +412,18 @@ public void testSendsResponseToQueuedDocumentOnClose() throws InterruptedExcepti\n         operationProcessor.close();\n         countDownLatch.await();\n     }\n+\n+    @Test\n+    public void testUnknownHost() {\n+        try {\n+            new SessionParams.Builder()\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"localhost\")).build())\n+                    .addCluster(new Cluster.Builder().addEndpoint(Endpoint.create(\"unknown\")).build())\n+                    .build();\n+        }\n+        catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzczODQ1Mw==", "bodyText": "Consider making static", "url": "https://github.com/vespa-engine/vespa/pull/11672#discussion_r363738453", "createdAt": "2020-01-07T13:06:47Z", "author": {"login": "vekterli"}, "path": "vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/ApacheGatewayConnection.java", "diffHunk": "@@ -90,8 +92,17 @@\n             endOfFeed = END_OF_FEED_XML;\n         }\n         this.clientId = clientId;\n-        if (this.clientId == null) {\n-            throw new RuntimeException(\"Got no client Id.\");\n+        if (this.clientId == null)\n+            throw new IllegalArgumentException(\"Got no client Id.\");\n+    }\n+\n+    private Endpoint validate(Endpoint endpoint) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d801daed411fa114223a5e6f0663b595334de5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b92b5c31216fb331d9bc6b63c13c99424e7991d9", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/b92b5c31216fb331d9bc6b63c13c99424e7991d9", "committedDate": "2020-01-07T13:23:19Z", "message": "Test properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a11412b2f0184c2cc0c102c38d9701aff1bb27ae", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/a11412b2f0184c2cc0c102c38d9701aff1bb27ae", "committedDate": "2020-01-07T13:31:04Z", "message": "Make static"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4074, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}