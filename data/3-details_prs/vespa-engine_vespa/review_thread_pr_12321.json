{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTc3MzQ2", "number": 12321, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1NjoxMVrODinTCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowMDozNlrODirMxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjIyMDI2OnYy", "diffSide": "RIGHT", "path": "eval/src/tests/ann/extended-hnsw.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1NjoxMVrOFt9Z5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1NjoxMVrOFt9Z5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczNjI5Mw==", "bodyText": "Even though this code is only used for experimentation and benchmarking, I don't think we should rely on this amount of copy-paste. Please move LinkList, Node, VisitedSet, VisitedSetPool, HnswHit, GreaterDist, LesserDist, NearestPriQ and FurthestPriQ to a common place shared by this file and xp-hnswlike-nns.cpp.", "url": "https://github.com/vespa-engine/vespa/pull/12321#discussion_r383736293", "createdAt": "2020-02-25T08:56:11Z", "author": {"login": "geirst"}, "path": "eval/src/tests/ann/extended-hnsw.cpp", "diffHunk": "@@ -0,0 +1,830 @@\n+// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <algorithm>\n+#include <assert.h>\n+#include <queue>\n+#include <cinttypes>\n+#include \"std-random.h\"\n+#include \"nns.h\"\n+\n+/*\n+ Todo:\n+\n+ measure effect of:\n+ 1) removing leftover backlinks during \"shrink\" operation\n+ 2) refilling to low-watermark after 1) happens\n+ 3) refilling to mid-watermark after 1) happens\n+ 4) adding then removing 20% extra documents\n+ 5) removing 20% first-added documents\n+ 6) removing first-added documents while inserting new ones\n+\n+ 7) auto-tune search_k to ensure >= 50% recall on 1000 Q with k=100\n+ 8) auto-tune search_k to ensure avg 90% recall on 1000 Q with k=100\n+ 9) auto-tune search_k to ensure >= 90% reachability of 10000 docids\n+\n+ 10) timings for SIFT, GIST, and DEEP data (100k, 200k, 300k, 500k, 700k, 1000k)\n+ */\n+\n+static size_t distcalls_simple;\n+static size_t distcalls_search_layer;\n+static size_t distcalls_other;\n+static size_t distcalls_heuristic;\n+static size_t distcalls_shrink;\n+static size_t distcalls_refill;\n+static size_t refill_needed_calls;\n+static size_t shrink_needed_calls;\n+static size_t disconnected_weak_links;\n+static size_t disconnected_for_symmetry;\n+static size_t select_n_full;\n+static size_t select_n_partial;\n+\n+struct LinkList : std::vector<uint32_t>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffa2293de302d99051f7fc97d29c4dc606f045f1"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Njg1OTU4OnYy", "diffSide": "RIGHT", "path": "eval/src/tests/ann/gist_benchmark.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowMDozNlrOFuDe2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjowMDozNlrOFuDe2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgzNTg2NQ==", "bodyText": "I don't think we should rely on this amount of copy-paste-mutate. A lot of this code is already in sift_benchmark.cpp, the only difference being the number of dimensions. Please move the following to a common place: PointVector, DocVectorAdapter, computeDistance, read_queries, read_docs, read_data, BfHitComparator, BfHitHeap. I am afraid this code will be hard to maintain otherwise.", "url": "https://github.com/vespa-engine/vespa/pull/12321#discussion_r383835865", "createdAt": "2020-02-25T12:00:36Z", "author": {"login": "geirst"}, "path": "eval/src/tests/ann/gist_benchmark.cpp", "diffHunk": "@@ -0,0 +1,295 @@\n+// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/vespalib/util/priority_queue.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+#include <stdio.h>\n+#include <chrono>\n+\n+#define NUM_DIMS 960\n+#define NUM_DOCS 200000\n+#define NUM_REACH 10000\n+#define NUM_Q 1000\n+\n+#include \"doc_vector_access.h\"\n+#include \"nns.h\"\n+#include \"for-sift-hit.h\"\n+#include \"for-sift-top-k.h\"\n+\n+std::vector<TopK> bruteforceResults;\n+\n+struct PointVector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3c709d6278ebd699d4f4c67f8f769c9b6fa177"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2343, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}