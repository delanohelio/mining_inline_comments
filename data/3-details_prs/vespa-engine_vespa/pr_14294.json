{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5Nzc4NDY0", "number": 14294, "title": "Jonmv/feed client error code handling", "bodyText": "@bratseth please review.", "createdAt": "2020-09-04T15:08:25Z", "url": "https://github.com/vespa-engine/vespa/pull/14294", "merged": true, "mergeCommit": {"oid": "3dbb5097c51a82ee946fca7b9468d5f879daaa30"}, "closed": true, "closedAt": "2020-09-07T08:01:13Z", "author": {"login": "jonmv"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFmo_GgH2gAyNDc5Nzc4NDY0OjdlZDA2Yjg2Y2Y1NDdkMWNiYjMzODc4YTIyNGFmNzQ4OGI2ZWNiMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGeB_9gFqTQ4MzMxNDEzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ed06b86cf547d1cbb33878a224af7488b6ecb0e", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/7ed06b86cf547d1cbb33878a224af7488b6ecb0e", "committedDate": "2020-09-04T15:08:01Z", "message": "Simplify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dca8a74a0a96739912343962c5857d9e6d4f67c1", "author": {"user": {"login": "jonmv", "name": "Jon Marius Venstad"}}, "url": "https://github.com/vespa-engine/vespa/commit/dca8a74a0a96739912343962c5857d9e6d4f67c1", "committedDate": "2020-09-04T15:08:02Z", "message": "Fail all queued documents on 401 or 403 (will repeat until done)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMzE0MTM4", "url": "https://github.com/vespa-engine/vespa/pull/14294#pullrequestreview-483314138", "createdAt": "2020-09-07T07:37:54Z", "commit": {"oid": "dca8a74a0a96739912343962c5857d9e6d4f67c1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzozNzo1NFrOHNzitA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzozOTo1N1rOHNzmlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzODAwNA==", "bodyText": "If we want to we could exit, but I'm not sure it's always the best thing to do since there could be a fix to the problem rolling out simultaneously, we could be feeding to multiple clusters etc. I think in general this client wants to keep trying until timeout, for better or worse.", "url": "https://github.com/vespa-engine/vespa/pull/14294#discussion_r484238004", "createdAt": "2020-09-07T07:37:54Z", "author": {"login": "bratseth"}, "path": "vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/IOThread.java", "diffHunk": "@@ -348,11 +347,16 @@ private ConnectionState cycle(ConnectionState connectionState) {\n                     currentConnection.handshake();\n                     successfulHandshakes.getAndIncrement();\n                 } catch (ServerResponseException ser) {\n+                    int code = ser.getResponseCode();\n+                    if (code == 401 || code == 403) {\n+                        drainDocumentQueueWhenFailingPermanently(new Exception(\"Denied access by endpoint:\" + ser.getResponseString()));\n+                        log.log(Level.SEVERE, \"Failed authentication or authorization with '\" + endpoint + \"': \" + Exceptions.toMessageString(ser));\n+                        return ConnectionState.CONNECTED; // Should ideally exit immediately, instead of doing this per X documents :/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dca8a74a0a96739912343962c5857d9e6d4f67c1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIzODk5OQ==", "bodyText": "Thanks for dissolving my math! I just wrote down the function I had in mind \ud83d\ude1d", "url": "https://github.com/vespa-engine/vespa/pull/14294#discussion_r484238999", "createdAt": "2020-09-07T07:39:57Z", "author": {"login": "bratseth"}, "path": "vespa-http-client/src/main/java/com/yahoo/vespa/http/client/core/communication/IOThread.java", "diffHunk": "@@ -595,12 +599,9 @@ private boolean timeToPoll(GatewayConnection connection) {\n             if (connection.lastPollTime() == null) return true;\n \n             // Exponential (2^x) dropoff:\n-            double unit = pollIntervalUS / 1000.0;\n-            double x = (  clock.millis() - connection.connectionTime().plus(connectionTimeToLive).toEpochMilli() ) / unit;\n-            double lastX = (  connection.lastPollTime().toEpochMilli() - connection.connectionTime().plus(connectionTimeToLive).toEpochMilli() ) / unit;\n-\n-            double currentDelayDoublings = Math.log(lastX)/Math.log(2);\n-            return (x - lastX) > Math.pow(2, currentDelayDoublings);\n+            double connectionEndOfLife = connection.connectionTime().plus(connectionTimeToLive).toEpochMilli();\n+            double connectionLastPolled = connection.lastPollTime().toEpochMilli();\n+            return clock.millis() - connectionEndOfLife > 2 * (connectionLastPolled - connectionEndOfLife);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dca8a74a0a96739912343962c5857d9e6d4f67c1"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4299, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}