{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTk5MzI3", "number": 13192, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjozMjowM1rOD6n7gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjozMjowM1rOD6n7gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzk4MjA5OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjozMjowM1rOGSj7kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxOTowNVrOGSnNxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExNjI0Mg==", "bodyText": "We should consider using a wrapper class (ex GlobalFilter) that owns the bitvector and implements shared_from_this to avoid over-copying the shared pointer.", "url": "https://github.com/vespa-engine/vespa/pull/13192#discussion_r422116242", "createdAt": "2020-05-08T12:32:03Z", "author": {"login": "havardpe"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -365,6 +370,16 @@ IntermediateBlueprint::optimize(Blueprint* &self)\n     maybe_eliminate_self(self, get_replacement());\n }\n \n+void\n+IntermediateBlueprint::set_global_filter(std::shared_ptr<BitVector> global_filter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDA1Mg==", "bodyText": "good catch, we'll do that soon.", "url": "https://github.com/vespa-engine/vespa/pull/13192#discussion_r422170052", "createdAt": "2020-05-08T14:19:05Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/vespa/searchlib/queryeval/blueprint.cpp", "diffHunk": "@@ -365,6 +370,16 @@ IntermediateBlueprint::optimize(Blueprint* &self)\n     maybe_eliminate_self(self, get_replacement());\n }\n \n+void\n+IntermediateBlueprint::set_global_filter(std::shared_ptr<BitVector> global_filter)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExNjI0Mg=="}, "originalCommit": {"oid": "b96bbd7df10bb9a151acb0740ff2b34956c2c432"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1620, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}