{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODA5NTc4", "number": 14619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzowOTo0NlrOEo5axg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzowOTo0NlrOEo5axg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzE5MjM4OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzowOTo0NlrOHaQCbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoxODozOVrOHaQUEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4Nzc4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Deleting an application is done by deleting the remote session, other config\n          \n          \n            \n                        // Deleting an application is done by deleting the remote session, all config\n          \n      \n    \n    \n  \n\nThis config server will also delete through the watcher?", "url": "https://github.com/vespa-engine/vespa/pull/14619#discussion_r497287788", "createdAt": "2020-09-30T07:09:46Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -469,47 +469,21 @@ static void checkIfActiveIsNewerThanSessionToBeActivated(long sessionId, long cu\n      * @return true if the application was found and deleted, false if it was not present\n      * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n      */\n-    boolean delete(ApplicationId applicationId) {\n-        return delete(applicationId, Duration.ofSeconds(60));\n-    }\n-\n-    /**\n-     * Deletes an application\n-     *\n-     * @return true if the application was found and deleted, false if it was not present\n-     * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n-     */\n-    public boolean delete(ApplicationId applicationId, Duration waitTime) {\n+    public boolean delete(ApplicationId applicationId) {\n         Tenant tenant = getTenant(applicationId);\n         if (tenant == null) return false;\n \n         TenantApplications tenantApplications = tenant.getApplicationRepo();\n         try (Lock lock = tenantApplications.lock(applicationId)) {\n-            if ( ! tenantApplications.exists(applicationId)) return false;\n-\n             Optional<Long> activeSession = tenantApplications.activeSessionOf(applicationId);\n             if (activeSession.isEmpty()) return false;\n \n-            // Deleting an application is done by deleting the remote session and waiting\n-            // until the config server where the deployment happened picks it up and deletes\n-            // the local session\n-            long sessionId = activeSession.get();\n-\n-            RemoteSession remoteSession;\n+            // Deleting an application is done by deleting the remote session, other config", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96beed744ab633a47b42365b2465e6e0f8423f31"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5MjAxMA==", "bodyText": "Yes, thanks", "url": "https://github.com/vespa-engine/vespa/pull/14619#discussion_r497292010", "createdAt": "2020-09-30T07:18:04Z", "author": {"login": "hmusum"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -469,47 +469,21 @@ static void checkIfActiveIsNewerThanSessionToBeActivated(long sessionId, long cu\n      * @return true if the application was found and deleted, false if it was not present\n      * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n      */\n-    boolean delete(ApplicationId applicationId) {\n-        return delete(applicationId, Duration.ofSeconds(60));\n-    }\n-\n-    /**\n-     * Deletes an application\n-     *\n-     * @return true if the application was found and deleted, false if it was not present\n-     * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n-     */\n-    public boolean delete(ApplicationId applicationId, Duration waitTime) {\n+    public boolean delete(ApplicationId applicationId) {\n         Tenant tenant = getTenant(applicationId);\n         if (tenant == null) return false;\n \n         TenantApplications tenantApplications = tenant.getApplicationRepo();\n         try (Lock lock = tenantApplications.lock(applicationId)) {\n-            if ( ! tenantApplications.exists(applicationId)) return false;\n-\n             Optional<Long> activeSession = tenantApplications.activeSessionOf(applicationId);\n             if (activeSession.isEmpty()) return false;\n \n-            // Deleting an application is done by deleting the remote session and waiting\n-            // until the config server where the deployment happened picks it up and deletes\n-            // the local session\n-            long sessionId = activeSession.get();\n-\n-            RemoteSession remoteSession;\n+            // Deleting an application is done by deleting the remote session, other config", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4Nzc4OA=="}, "originalCommit": {"oid": "96beed744ab633a47b42365b2465e6e0f8423f31"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5MjMwNA==", "bodyText": "I now think the original comment is correct - delete(RemoteSession) only called in this config server appears to do delete and deactivate the remote session, the same as sessionRemoved(long) which seems to be invoked from watcher.", "url": "https://github.com/vespa-engine/vespa/pull/14619#discussion_r497292304", "createdAt": "2020-09-30T07:18:39Z", "author": {"login": "hakonhall"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/ApplicationRepository.java", "diffHunk": "@@ -469,47 +469,21 @@ static void checkIfActiveIsNewerThanSessionToBeActivated(long sessionId, long cu\n      * @return true if the application was found and deleted, false if it was not present\n      * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n      */\n-    boolean delete(ApplicationId applicationId) {\n-        return delete(applicationId, Duration.ofSeconds(60));\n-    }\n-\n-    /**\n-     * Deletes an application\n-     *\n-     * @return true if the application was found and deleted, false if it was not present\n-     * @throws RuntimeException if the delete transaction fails. This method is exception safe.\n-     */\n-    public boolean delete(ApplicationId applicationId, Duration waitTime) {\n+    public boolean delete(ApplicationId applicationId) {\n         Tenant tenant = getTenant(applicationId);\n         if (tenant == null) return false;\n \n         TenantApplications tenantApplications = tenant.getApplicationRepo();\n         try (Lock lock = tenantApplications.lock(applicationId)) {\n-            if ( ! tenantApplications.exists(applicationId)) return false;\n-\n             Optional<Long> activeSession = tenantApplications.activeSessionOf(applicationId);\n             if (activeSession.isEmpty()) return false;\n \n-            // Deleting an application is done by deleting the remote session and waiting\n-            // until the config server where the deployment happened picks it up and deletes\n-            // the local session\n-            long sessionId = activeSession.get();\n-\n-            RemoteSession remoteSession;\n+            // Deleting an application is done by deleting the remote session, other config", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4Nzc4OA=="}, "originalCommit": {"oid": "96beed744ab633a47b42365b2465e6e0f8423f31"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1260, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}