{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDU5ODAy", "number": 11828, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDowNToxN1rODYxNVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDowOTowOVrODYxRrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Mjk4NjQ2OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDowNToxN1rOFe0M8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDozNjowNlrOFe1AMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1Njg4Mg==", "bodyText": "Use a hash to anonymize?", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367856882", "createdAt": "2020-01-17T10:05:17Z", "author": {"login": "kkraune"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -61,6 +64,13 @@ public NodeResources decideNodeResources(Capacity capacity, ClusterSpec cluster)\n         return resources;\n     }\n \n+    private boolean hasQuota(ApplicationId application, int requestedNodes) {\n+        if ( ! this.zone.system().isPublic()) return true; // no quota management\n+\n+        if (\"yj\".equals(application.tenant().value())) return requestedNodes <= 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3MDAwMQ==", "bodyText": "ok", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367870001", "createdAt": "2020-01-17T10:36:06Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -61,6 +64,13 @@ public NodeResources decideNodeResources(Capacity capacity, ClusterSpec cluster)\n         return resources;\n     }\n \n+    private boolean hasQuota(ApplicationId application, int requestedNodes) {\n+        if ( ! this.zone.system().isPublic()) return true; // no quota management\n+\n+        if (\"yj\".equals(application.tenant().value())) return requestedNodes <= 60;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1Njg4Mg=="}, "originalCommit": {"oid": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Mjk5NzU2OnYy", "diffSide": "RIGHT", "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDowOTowOVrOFe0T3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDozOToyMVrOFe1Flw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1ODY1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");\n          \n          \n            \n                        throw new IllegalArgumentException(requestedNodes + \" exceeds your quota, resolve using https://cloud.vespa.ai/quota\");", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367858652", "createdAt": "2020-01-17T10:09:09Z", "author": {"login": "kkraune"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -26,10 +27,12 @@ public CapacityPolicies(Zone zone) {\n         this.isUsingAdvertisedResources = zone.cloud().value().equals(\"aws\");\n     }\n \n-    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType) {\n-        int requestedNodes = ensureRedundancy(capacity.nodeCount(), clusterType, capacity.canFail());\n+    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType, ApplicationId application) {\n+        int requestedNodes = capacity.nodeCount();\n \n-        if (this.zone.system().isPublic() && requestedNodes > 5)\n+        ensureRedundancy(requestedNodes, clusterType, capacity.canFail());\n+\n+        if ( ! hasQuota(application, requestedNodes))\n             throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg3MTM4Mw==", "bodyText": "Good, thanks", "url": "https://github.com/vespa-engine/vespa/pull/11828#discussion_r367871383", "createdAt": "2020-01-17T10:39:21Z", "author": {"login": "bratseth"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/CapacityPolicies.java", "diffHunk": "@@ -26,10 +27,12 @@ public CapacityPolicies(Zone zone) {\n         this.isUsingAdvertisedResources = zone.cloud().value().equals(\"aws\");\n     }\n \n-    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType) {\n-        int requestedNodes = ensureRedundancy(capacity.nodeCount(), clusterType, capacity.canFail());\n+    public int decideSize(Capacity capacity, ClusterSpec.Type clusterType, ApplicationId application) {\n+        int requestedNodes = capacity.nodeCount();\n \n-        if (this.zone.system().isPublic() && requestedNodes > 5)\n+        ensureRedundancy(requestedNodes, clusterType, capacity.canFail());\n+\n+        if ( ! hasQuota(application, requestedNodes))\n             throw new IllegalArgumentException(requestedNodes + \" exceeds your quota. Please contact Vespa support\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1ODY1Mg=="}, "originalCommit": {"oid": "dcc114ba5cbdb622cdc8fb4226c4fcecd9e085e1"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2671, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}