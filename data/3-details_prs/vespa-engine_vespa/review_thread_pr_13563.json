{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTcwMzMz", "number": 13563, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxNDoyNlrOEFGGwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToyNjo0OFrOEFGW9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc4MzcwOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxNDoyNlrOGjHx9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0ODo0NlrOGjK7HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MDgyMQ==", "bodyText": "Please add doc describing function.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439480821", "createdAt": "2020-06-12T15:14:26Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -303,6 +303,38 @@ class BTreeIteratorBase\n      * @param pathSize     New tree height (number of levels of internal nodes)\n      */\n     VESPA_DLL_LOCAL void clearPath(uint32_t pathSize);\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_start(uint32_t level, FunctionType func) const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjMxNg==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532316", "createdAt": "2020-06-12T16:48:46Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -303,6 +303,38 @@ class BTreeIteratorBase\n      * @param pathSize     New tree height (number of levels of internal nodes)\n      */\n     VESPA_DLL_LOCAL void clearPath(uint32_t pathSize);\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_start(uint32_t level, FunctionType func) const", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MDgyMQ=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc4NDEzOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxNDozM1rOGjHyPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0OToxNFrOGjK8BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MDg5NA==", "bodyText": "Please add doc describing function.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439480894", "createdAt": "2020-06-12T15:14:33Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -303,6 +303,38 @@ class BTreeIteratorBase\n      * @param pathSize     New tree height (number of levels of internal nodes)\n      */\n     VESPA_DLL_LOCAL void clearPath(uint32_t pathSize);\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_start(uint32_t level, FunctionType func) const\n+    {\n+        if (level > 0u) {\n+            --level;\n+            foreach_key_range_start(level, func);\n+            auto &store = _allocator->getNodeStore();\n+            auto node = _path[level].getNode();\n+            uint32_t idx = _path[level].getIdx();\n+            node->foreach_key_range(store, idx + 1, node->validSlots(), func);\n+        } else {\n+            _leaf.getNode()->foreach_key_range(_leaf.getIdx(), _leaf.getNode()->validSlots(), func);\n+        }\n+    }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_end(uint32_t level, FunctionType func) const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjU0OA==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532548", "createdAt": "2020-06-12T16:49:14Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -303,6 +303,38 @@ class BTreeIteratorBase\n      * @param pathSize     New tree height (number of levels of internal nodes)\n      */\n     VESPA_DLL_LOCAL void clearPath(uint32_t pathSize);\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_start(uint32_t level, FunctionType func) const\n+    {\n+        if (level > 0u) {\n+            --level;\n+            foreach_key_range_start(level, func);\n+            auto &store = _allocator->getNodeStore();\n+            auto node = _path[level].getNode();\n+            uint32_t idx = _path[level].getIdx();\n+            node->foreach_key_range(store, idx + 1, node->validSlots(), func);\n+        } else {\n+            _leaf.getNode()->foreach_key_range(_leaf.getIdx(), _leaf.getNode()->validSlots(), func);\n+        }\n+    }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range_end(uint32_t level, FunctionType func) const", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MDg5NA=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc5MjYwOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxNzowMVrOGjH3nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0ODo1NVrOGjK7aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MjI2OA==", "bodyText": "Please add a comment on what this the result of this while loop.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439482268", "createdAt": "2020-06-12T15:17:01Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const\n+    {\n+        if (!valid()) {\n+            return;\n+        }\n+        if (!end_itr.valid()) {\n+            foreach_key_range_start(_pathSize, func);\n+            return;\n+        }\n+        assert(_pathSize == end_itr._pathSize);\n+        assert(_allocator == end_itr._allocator);\n+        uint32_t level = _pathSize;\n+        if (level > 0u) {\n+            uint32_t idx;\n+            uint32_t eidx;\n+            do {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjM5NQ==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532395", "createdAt": "2020-06-12T16:48:55Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const\n+    {\n+        if (!valid()) {\n+            return;\n+        }\n+        if (!end_itr.valid()) {\n+            foreach_key_range_start(_pathSize, func);\n+            return;\n+        }\n+        assert(_pathSize == end_itr._pathSize);\n+        assert(_allocator == end_itr._allocator);\n+        uint32_t level = _pathSize;\n+        if (level > 0u) {\n+            uint32_t idx;\n+            uint32_t eidx;\n+            do {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MjI2OA=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzgxOTUzOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToyNTowN1rOGjII9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0OToyNVrOGjK8Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NjcwOA==", "bodyText": "Please add comment describing the 3 steps done here (left, middle, and right sub trees).", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439486708", "createdAt": "2020-06-12T15:25:07Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const\n+    {\n+        if (!valid()) {\n+            return;\n+        }\n+        if (!end_itr.valid()) {\n+            foreach_key_range_start(_pathSize, func);\n+            return;\n+        }\n+        assert(_pathSize == end_itr._pathSize);\n+        assert(_allocator == end_itr._allocator);\n+        uint32_t level = _pathSize;\n+        if (level > 0u) {\n+            uint32_t idx;\n+            uint32_t eidx;\n+            do {\n+                --level;\n+                assert(_path[level].getNode() == end_itr._path[level].getNode());\n+                idx = _path[level].getIdx();\n+                eidx = end_itr._path[level].getIdx();\n+                if (idx > eidx) {\n+                    return;\n+                }\n+                if (idx != eidx) {\n+                    ++level;\n+                    break;\n+                }\n+            } while (level != 0);\n+            if (level > 0u) {\n+                foreach_key_range_start(level - 1, func);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjYyMw==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532623", "createdAt": "2020-06-12T16:49:25Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const\n+    {\n+        if (!valid()) {\n+            return;\n+        }\n+        if (!end_itr.valid()) {\n+            foreach_key_range_start(_pathSize, func);\n+            return;\n+        }\n+        assert(_pathSize == end_itr._pathSize);\n+        assert(_allocator == end_itr._allocator);\n+        uint32_t level = _pathSize;\n+        if (level > 0u) {\n+            uint32_t idx;\n+            uint32_t eidx;\n+            do {\n+                --level;\n+                assert(_path[level].getNode() == end_itr._path[level].getNode());\n+                idx = _path[level].getIdx();\n+                eidx = end_itr._path[level].getIdx();\n+                if (idx > eidx) {\n+                    return;\n+                }\n+                if (idx != eidx) {\n+                    ++level;\n+                    break;\n+                }\n+            } while (level != 0);\n+            if (level > 0u) {\n+                foreach_key_range_start(level - 1, func);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NjcwOA=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzgyMzczOnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToyNjoyM1rOGjILtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0OTo0M1rOGjK88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzQxMg==", "bodyText": "Please add doc describing function.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439487412", "createdAt": "2020-06-12T15:26:23Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjc4NA==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532784", "createdAt": "2020-06-12T16:49:43Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreeiterator.h", "diffHunk": "@@ -451,6 +483,54 @@ class BTreeIteratorBase\n             _leafRoot->foreach_key(func);\n         }\n     }\n+\n+    template <typename FunctionType>\n+    void\n+    foreach_key_range(const BTreeIteratorBase &end_itr, FunctionType func) const", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzQxMg=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzgyNDk0OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToyNjo0NFrOGjIMbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0OTo1M1rOGjK9Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzU5OQ==", "bodyText": "Please add doc describing function.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439487599", "createdAt": "2020-06-12T15:26:44Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "diffHunk": "@@ -459,6 +475,16 @@ class BTreeLeafNode : public BTreeNodeTT<KeyT, DataT, AggrT, NumSlots>\n         }\n     }\n \n+    template <typename FunctionType>\n+    void foreach_key_range(uint32_t start_idx, uint32_t end_idx, FunctionType func) const {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjg3OA==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532878", "createdAt": "2020-06-12T16:49:53Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "diffHunk": "@@ -459,6 +475,16 @@ class BTreeLeafNode : public BTreeNodeTT<KeyT, DataT, AggrT, NumSlots>\n         }\n     }\n \n+    template <typename FunctionType>\n+    void foreach_key_range(uint32_t start_idx, uint32_t end_idx, FunctionType func) const {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzU5OQ=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzgyNTE4OnYy", "diffSide": "RIGHT", "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToyNjo0OFrOGjIMmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo1MDowM1rOGjK9rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzY0MA==", "bodyText": "Please add doc describing function.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439487640", "createdAt": "2020-06-12T15:26:48Z", "author": {"login": "geirst"}, "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "diffHunk": "@@ -370,6 +370,22 @@ class BTreeInternalNode : public BTreeNodeTT<KeyT, BTreeNode::Ref, AggrT,\n         }\n     }\n \n+    template <typename NodeStoreType, typename FunctionType>\n+    void foreach_key_range(NodeStoreType &store, uint32_t start_idx, uint32_t end_idx, FunctionType func) const {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUzMjk3Mw==", "bodyText": "Done.", "url": "https://github.com/vespa-engine/vespa/pull/13563#discussion_r439532973", "createdAt": "2020-06-12T16:50:03Z", "author": {"login": "toregge"}, "path": "vespalib/src/vespa/vespalib/btree/btreenode.h", "diffHunk": "@@ -370,6 +370,22 @@ class BTreeInternalNode : public BTreeNodeTT<KeyT, BTreeNode::Ref, AggrT,\n         }\n     }\n \n+    template <typename NodeStoreType, typename FunctionType>\n+    void foreach_key_range(NodeStoreType &store, uint32_t start_idx, uint32_t end_idx, FunctionType func) const {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4NzY0MA=="}, "originalCommit": {"oid": "6c6956f91219e8d8418b74343896f87a8ea686aa"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1925, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}