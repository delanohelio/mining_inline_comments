{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MzQ1NjU3", "number": 15149, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTozMDo0N1rOE0uNPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTowN1rOE0vjLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzE4NDYwOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTozMDo0N1rOHsmVvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0MzowMVrOHspGaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyNzU1MQ==", "bodyText": "Consider renaming Messagehandling -> MessageHandling", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516527551", "createdAt": "2020-11-03T09:30:47Z", "author": {"login": "vekterli"}, "path": "config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java", "diffHunk": "@@ -49,6 +49,9 @@\n     private Quota quota = Quota.unlimited();\n     private boolean useAccessControlTlsHandshakeClientAuth;\n     private double jettyThreadpoolSizeFactor = 0.0;\n+    private boolean useAsyncMessagehandlingOnSchedule = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3Mjc3Ng==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516572776", "createdAt": "2020-11-03T10:43:01Z", "author": {"login": "baldersheim"}, "path": "config-model/src/main/java/com/yahoo/config/model/deploy/TestProperties.java", "diffHunk": "@@ -49,6 +49,9 @@\n     private Quota quota = Quota.unlimited();\n     private boolean useAccessControlTlsHandshakeClientAuth;\n     private double jettyThreadpoolSizeFactor = 0.0;\n+    private boolean useAsyncMessagehandlingOnSchedule = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyNzU1MQ=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzIxMDc0OnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTozNzo0OVrOHsmmSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTowNjowNVrOHsp6-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng==", "bodyText": "Consider creating a separate method (e.g. alignUp2MiB) and possibly add a comment indicating why this is done", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516531786", "createdAt": "2020-11-03T09:37:49Z", "author": {"login": "vekterli"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NTc4MQ==", "bodyText": "Also, do we need the -4KiB adjustment with today's allocation strategies? The config comment mentions this as being done to avoid hitting the next malloc size class, but I'm not sure if this is relevant now.", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516555781", "createdAt": "2020-11-03T10:14:57Z", "author": {"login": "vekterli"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4NjIzNA==", "bodyText": "Separated out the 2MB alignment and removed the 4k reservation. Also updated the description.", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516586234", "createdAt": "2020-11-03T11:06:05Z", "author": {"login": "baldersheim"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUzMTc4Ng=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzM1NjE4OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoxMjo0NVrOHsn-bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NDoxNVrOHspJkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NDM1MA==", "bodyText": "Should this return the default 4MiB value instead?", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516554350", "createdAt": "2020-11-03T10:12:45Z", "author": {"login": "vekterli"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -313,6 +322,13 @@ public boolean useFastValueTensorImplementation() {\n         @Override public boolean useAccessControlTlsHandshakeClientAuth() { return useAccessControlTlsHandshakeClientAuth; }\n \n         @Override public double jettyThreadpoolSizeFactor() { return jettyThreadpoolSizeFactor; }\n+\n+        @Override public boolean useAsyncMessageHandlingOnSchedule() { return false; }\n+\n+        @Override public int contentNodeBucketDBStripeBits() { return 0; }\n+\n+        @Override\n+        public int mergeChunkSize() { return 0; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MzU4Ng==", "bodyText": "Argh, using intellij generate metod adds a default that is easily forgotten.\nFixed and added test.", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516573586", "createdAt": "2020-11-03T10:44:15Z", "author": {"login": "baldersheim"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -313,6 +322,13 @@ public boolean useFastValueTensorImplementation() {\n         @Override public boolean useAccessControlTlsHandshakeClientAuth() { return useAccessControlTlsHandshakeClientAuth; }\n \n         @Override public double jettyThreadpoolSizeFactor() { return jettyThreadpoolSizeFactor; }\n+\n+        @Override public boolean useAsyncMessageHandlingOnSchedule() { return false; }\n+\n+        @Override public int contentNodeBucketDBStripeBits() { return 0; }\n+\n+        @Override\n+        public int mergeChunkSize() { return 0; }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1NDM1MA=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzM5MzE1OnYy", "diffSide": "RIGHT", "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMjoyM1rOHsoVWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NTo1OFrOHspN2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDIxOQ==", "bodyText": "Typo: CONETNT -> CONTENT", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560219", "createdAt": "2020-11-03T10:22:23Z", "author": {"login": "geirst"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -229,6 +232,12 @@ public Properties(ApplicationId applicationId,\n             this.jettyThreadpoolSizeFactor = Flags.JETTY_THREADPOOL_SCALE_FACTOR.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm())\n                     .value();\n+            useAsyncMessageHandlingOnSchedule = Flags.USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE.bindTo(flagSource)\n+                    .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n+            contentNodeBucketDBStripeBits = Flags.CONETNT_NODE_BUCKET_DB_STRIPE_BITS.bindTo(flagSource)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NDY4MA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516574680", "createdAt": "2020-11-03T10:45:58Z", "author": {"login": "baldersheim"}, "path": "configserver/src/main/java/com/yahoo/vespa/config/server/deploy/ModelContextImpl.java", "diffHunk": "@@ -229,6 +232,12 @@ public Properties(ApplicationId applicationId,\n             this.jettyThreadpoolSizeFactor = Flags.JETTY_THREADPOOL_SCALE_FACTOR.bindTo(flagSource)\n                     .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm())\n                     .value();\n+            useAsyncMessageHandlingOnSchedule = Flags.USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE.bindTo(flagSource)\n+                    .with(FetchVector.Dimension.APPLICATION_ID, applicationId.serializedForm()).value();\n+            contentNodeBucketDBStripeBits = Flags.CONETNT_NODE_BUCKET_DB_STRIPE_BITS.bindTo(flagSource)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDIxOQ=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzM5NDU2OnYy", "diffSide": "RIGHT", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMjo0MVrOHsoWNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NDo0MFrOHspKvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDQzOA==", "bodyText": "Typo: CONETNT -> CONTENT", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560438", "createdAt": "2020-11-03T10:22:41Z", "author": {"login": "geirst"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3Mzg4Ng==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516573886", "createdAt": "2020-11-03T10:44:40Z", "author": {"login": "baldersheim"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDQzOA=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzM5ODEwOnYy", "diffSide": "RIGHT", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMzozMVrOHsoYTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NTo0M1rOHspNSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDk3NQ==", "bodyText": "sharing -> sharding (or use striping instead?)", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516560975", "createdAt": "2020-11-03T10:23:31Z", "author": {"login": "geirst"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n+            \"content-node-bucket-db-stripe-bits\", 0,\n+            \"Number of bits used for sharing the bucket DB in service layer\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NDUzOA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516574538", "createdAt": "2020-11-03T10:45:43Z", "author": {"login": "baldersheim"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -330,6 +330,22 @@\n             \"Takes effect on next internal redeployment\",\n             APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_ASYNC_MESSAGE_HANDLING_ON_SCHEDULE = defineFeatureFlag(\n+            \"async-message-handling-on-schedule\", false,\n+            \"Optionally deliver async messages in own thread\",\n+            \"Takes effect at redeployment\",\n+            ZONE_ID, APPLICATION_ID);\n+    public static final UnboundIntFlag CONETNT_NODE_BUCKET_DB_STRIPE_BITS = defineIntFlag(\n+            \"content-node-bucket-db-stripe-bits\", 0,\n+            \"Number of bits used for sharing the bucket DB in service layer\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDk3NQ=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzQwNDYwOnYy", "diffSide": "RIGHT", "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTowN1rOHsocGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTowNjoyMVrOHsp7gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MTk0Nw==", "bodyText": "Perhaps add a comment here on why we do the extra calculation.", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516561947", "createdAt": "2020-11-03T10:25:07Z", "author": {"login": "geirst"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4NjM3MA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/15149#discussion_r516586370", "createdAt": "2020-11-03T11:06:21Z", "author": {"login": "baldersheim"}, "path": "config-model/src/main/java/com/yahoo/vespa/model/content/storagecluster/FileStorProducer.java", "diffHunk": "@@ -56,10 +58,15 @@ private Integer getThreads(ModelElement clusterElem) {\n         }\n     }\n     public FileStorProducer(ModelContext.Properties properties, ContentCluster parent, Integer numThreads) {\n+        final int twoMB = 0x200000;\n+        final int fourK = 0x1000;\n         this.numThreads = numThreads;\n         this.cluster = parent;\n         this.reponseNumThreads = properties.defaultNumResponseThreads();\n         this.responseSequencerType = convertResponseSequencerType(properties.responseSequencerType());\n+        useAsyncMessageHandlingOnSchedule = properties.useAsyncMessageHandlingOnSchedule();\n+        mergeChunkSize = ((properties.mergeChunkSize() + (twoMB-1))/twoMB)*twoMB - fourK;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MTk0Nw=="}, "originalCommit": {"oid": "19aeab828f827891646ca38619be7d80fd646bb6"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 970, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}