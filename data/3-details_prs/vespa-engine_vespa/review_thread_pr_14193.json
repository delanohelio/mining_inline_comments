{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1Mzk0NDg2", "number": 14193, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozNjoyMFrOEdxpEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyMDoyMVrOEeMNqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjU3NDg5OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/attribute/multinumericpostattribute.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozNjoyMFrOHJJC-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozNjoyMFrOHJJC-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0NzQ0OA==", "bodyText": "drop virtual and final and just make the class final.", "url": "https://github.com/vespa-engine/vespa/pull/14193#discussion_r479347448", "createdAt": "2020-08-28T14:36:20Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/attribute/multinumericpostattribute.h", "diffHunk": "@@ -35,7 +35,9 @@ class MultiValueNumericPostingAttribute\n     struct DocumentWeightAttributeAdapter : IDocumentWeightAttribute {\n         const MultiValueNumericPostingAttribute &self;\n         DocumentWeightAttributeAdapter(const MultiValueNumericPostingAttribute &self_in) : self(self_in) {}\n-        virtual LookupResult lookup(const vespalib::string &term) const override final;\n+        virtual vespalib::datastore::EntryRef get_dictionary_snapshot() const override final;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3c3e944dd4f466b6f03c0084e0832f055b7d0f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjU3NzIwOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/attribute/multistringpostattribute.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozNjo1N1rOHJJEXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozNjo1N1rOHJJEXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0NzgwNQ==", "bodyText": "drop virtual and final and just make the class final.", "url": "https://github.com/vespa-engine/vespa/pull/14193#discussion_r479347805", "createdAt": "2020-08-28T14:36:57Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/attribute/multistringpostattribute.h", "diffHunk": "@@ -33,7 +33,9 @@ class MultiValueStringPostingAttributeT\n     struct DocumentWeightAttributeAdapter : IDocumentWeightAttribute {\n         const MultiValueStringPostingAttributeT &self;\n         DocumentWeightAttributeAdapter(const MultiValueStringPostingAttributeT &self_in) : self(self_in) {}\n-        virtual LookupResult lookup(const vespalib::string &term) const override final;\n+        virtual vespalib::datastore::EntryRef get_dictionary_snapshot() const override final;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3c3e944dd4f466b6f03c0084e0832f055b7d0f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDkyODQyOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/attribute/i_document_weight_attribute.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyMDoyMVrOHJtY6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyMDoyMVrOHJtY6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0Mjg5MQ==", "bodyText": "Please add a description on what this function is supposed to do.", "url": "https://github.com/vespa-engine/vespa/pull/14193#discussion_r479942891", "createdAt": "2020-08-31T07:20:21Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/attribute/i_document_weight_attribute.h", "diffHunk": "@@ -17,11 +19,14 @@ struct IDocumentWeightAttribute\n         const uint32_t posting_size;\n         const int32_t min_weight;\n         const int32_t max_weight;\n-        LookupResult() : posting_idx(), posting_size(0), min_weight(0), max_weight(0) {}\n-        LookupResult(vespalib::datastore::EntryRef posting_idx_in, uint32_t posting_size_in, int32_t min_weight_in, int32_t max_weight_in)\n-            : posting_idx(posting_idx_in), posting_size(posting_size_in), min_weight(min_weight_in), max_weight(max_weight_in) {}\n+        const vespalib::datastore::EntryRef enum_idx;\n+        LookupResult() : posting_idx(), posting_size(0), min_weight(0), max_weight(0), enum_idx() {}\n+        LookupResult(vespalib::datastore::EntryRef posting_idx_in, uint32_t posting_size_in, int32_t min_weight_in, int32_t max_weight_in, vespalib::datastore::EntryRef enum_idx_in)\n+            : posting_idx(posting_idx_in), posting_size(posting_size_in), min_weight(min_weight_in), max_weight(max_weight_in), enum_idx(enum_idx_in) {}\n     };\n-    virtual LookupResult lookup(const vespalib::string &term) const = 0;\n+    virtual vespalib::datastore::EntryRef get_dictionary_snapshot() const = 0;\n+    virtual LookupResult lookup(const vespalib::string &term, vespalib::datastore::EntryRef dictionary_snapshot) const = 0;\n+    virtual void collect_folded(vespalib::datastore::EntryRef enum_idx, vespalib::datastore::EntryRef dictionary_snapshot, const std::function<void(vespalib::datastore::EntryRef)>& callback) const = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b9ba899c7dfc7cab7f58f8b267f30857b8ab3f"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1412, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}