{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODcxMjEw", "number": 12599, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoyODo1MlrODpFsNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoyODo1MlrODpFsNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDExNDQ3OnYy", "diffSide": "RIGHT", "path": "searchlib/src/tests/features/nns_closeness/nns_closeness_test.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjoyODo1MlrOF4Cuwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo1OToyNVrOF4Dygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwOTMxNA==", "bodyText": "Labels, NoLabels and SingleLabel are now duplicated in 3 unit tests. Please move them to searchlib/src/vespa/searchlib/fef/test and put them in namespace search::fef::test.", "url": "https://github.com/vespa-engine/vespa/pull/12599#discussion_r394309314", "createdAt": "2020-03-18T12:28:52Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/features/nns_closeness/nns_closeness_test.cpp", "diffHunk": "@@ -0,0 +1,177 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/searchlib/features/setup.h>\n+#include <vespa/searchlib/fef/test/indexenvironment.h>\n+#include <vespa/searchlib/fef/test/indexenvironmentbuilder.h>\n+#include <vespa/searchlib/fef/test/queryenvironment.h>\n+#include <vespa/searchlib/features/closenessfeature.h>\n+#include <vespa/searchlib/fef/fef.h>\n+#include <vespa/searchlib/fef/test/dummy_dependency_handler.h>\n+#include <vespa/vespalib/stllike/asciistream.h>\n+#include <vespa/vespalib/util/stringfmt.h>\n+\n+using search::feature_t;\n+using namespace search::fef;\n+using namespace search::fef::test;\n+using namespace search::features;\n+using CollectionType = FieldInfo::CollectionType;\n+using DataType = FieldInfo::DataType;\n+\n+const vespalib::string labelFeatureName(\"closeness(label,nns)\");\n+const vespalib::string fieldFeatureName(\"closeness(bar)\");\n+\n+struct BlueprintFactoryFixture {\n+    BlueprintFactory factory;\n+    BlueprintFactoryFixture() : factory()\n+    {\n+        setup_search_features(factory);\n+    }\n+};\n+\n+struct IndexFixture {\n+    IndexEnvironment indexEnv;\n+    IndexFixture() : indexEnv()\n+    {\n+        IndexEnvironmentBuilder builder(indexEnv);\n+        builder.addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, DataType::INT64, \"foo\");\n+        builder.addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, DataType::TENSOR, \"bar\");\n+    }\n+};\n+\n+struct FeatureDumpFixture : public IDumpFeatureVisitor {\n+    virtual void visitDumpFeature(const vespalib::string &) override {\n+        TEST_ERROR(\"no features should be dumped\");\n+    }\n+    FeatureDumpFixture() : IDumpFeatureVisitor() {}\n+};\n+\n+struct Labels {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff852cdd5e391417a84b52b0aa45219c4a185d7b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyNjY1OQ==", "bodyText": "Labels etc. moved to fef::test now.", "url": "https://github.com/vespa-engine/vespa/pull/12599#discussion_r394326659", "createdAt": "2020-03-18T12:59:25Z", "author": {"login": "arnej27959"}, "path": "searchlib/src/tests/features/nns_closeness/nns_closeness_test.cpp", "diffHunk": "@@ -0,0 +1,177 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include <vespa/vespalib/testkit/test_kit.h>\n+#include <vespa/searchlib/features/setup.h>\n+#include <vespa/searchlib/fef/test/indexenvironment.h>\n+#include <vespa/searchlib/fef/test/indexenvironmentbuilder.h>\n+#include <vespa/searchlib/fef/test/queryenvironment.h>\n+#include <vespa/searchlib/features/closenessfeature.h>\n+#include <vespa/searchlib/fef/fef.h>\n+#include <vespa/searchlib/fef/test/dummy_dependency_handler.h>\n+#include <vespa/vespalib/stllike/asciistream.h>\n+#include <vespa/vespalib/util/stringfmt.h>\n+\n+using search::feature_t;\n+using namespace search::fef;\n+using namespace search::fef::test;\n+using namespace search::features;\n+using CollectionType = FieldInfo::CollectionType;\n+using DataType = FieldInfo::DataType;\n+\n+const vespalib::string labelFeatureName(\"closeness(label,nns)\");\n+const vespalib::string fieldFeatureName(\"closeness(bar)\");\n+\n+struct BlueprintFactoryFixture {\n+    BlueprintFactory factory;\n+    BlueprintFactoryFixture() : factory()\n+    {\n+        setup_search_features(factory);\n+    }\n+};\n+\n+struct IndexFixture {\n+    IndexEnvironment indexEnv;\n+    IndexFixture() : indexEnv()\n+    {\n+        IndexEnvironmentBuilder builder(indexEnv);\n+        builder.addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, DataType::INT64, \"foo\");\n+        builder.addField(FieldType::ATTRIBUTE, CollectionType::SINGLE, DataType::TENSOR, \"bar\");\n+    }\n+};\n+\n+struct FeatureDumpFixture : public IDumpFeatureVisitor {\n+    virtual void visitDumpFeature(const vespalib::string &) override {\n+        TEST_ERROR(\"no features should be dumped\");\n+    }\n+    FeatureDumpFixture() : IDumpFeatureVisitor() {}\n+};\n+\n+struct Labels {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMwOTMxNA=="}, "originalCommit": {"oid": "ff852cdd5e391417a84b52b0aa45219c4a185d7b"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2280, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}