{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTAyNDY3", "number": 11835, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0Mjo0NVrODY1opw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0Nzo1MlrODY1veA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzcxMTc1OnYy", "diffSide": "RIGHT", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0Mjo0NVrOFe7ERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxNDoyMlrOFe8FUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk2OTM1MA==", "bodyText": "Consider moving the comment (or comma) here and above to make the inline comment point at the right parameter", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367969350", "createdAt": "2020-01-17T14:42:45Z", "author": {"login": "vekterli"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -56,7 +56,7 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n             Set<ConfiguredNode> nodesInSlobrok = FleetControllerTest.toNodes(1, 3, 5, 7);\n \n             ContentCluster cluster = new ContentCluster(\n-                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */);\n+                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0, /* minRatioOfStorageNodesUp */true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjAwMA==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986000", "createdAt": "2020-01-17T15:14:22Z", "author": {"login": "hakonhall"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/restapiv2/StateRestApiTest.java", "diffHunk": "@@ -56,7 +56,7 @@ protected void setUp(boolean dontInitializeNode2) throws Exception {\n             Set<ConfiguredNode> nodesInSlobrok = FleetControllerTest.toNodes(1, 3, 5, 7);\n \n             ContentCluster cluster = new ContentCluster(\n-                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0 /* minRatioOfStorageNodesUp */);\n+                    \"music\", nodes, distribution, 4 /* minStorageNodesUp*/, 0.0, /* minRatioOfStorageNodesUp */true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk2OTM1MA=="}, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzcyMjgwOnYy", "diffSide": "RIGHT", "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0NTo1OFrOFe7LAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxNDozOFrOFe8F5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MTA3Mg==", "bodyText": "Typo: s/efefct/effect/", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367971072", "createdAt": "2020-01-17T14:45:58Z", "author": {"login": "vekterli"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -83,6 +83,13 @@\n             \"Takes effect on next node agent tick. Change is orchestrated, but does NOT require container restart\",\n             HOSTNAME, APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_BUCKET_SPACE_METRIC = defineFeatureFlag(\n+            \"use-bucket-space-metric\", true,\n+            \"Whether to use vds.datastored.bucket_space.buckets_total (true) instead of \" +\n+            \"vds.datastored.alldisks.buckets (false, legacy).\",\n+            \"Takes efefct on the next deployment of the application\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjE0OA==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986148", "createdAt": "2020-01-17T15:14:38Z", "author": {"login": "hakonhall"}, "path": "flags/src/main/java/com/yahoo/vespa/flags/Flags.java", "diffHunk": "@@ -83,6 +83,13 @@\n             \"Takes effect on next node agent tick. Change is orchestrated, but does NOT require container restart\",\n             HOSTNAME, APPLICATION_ID);\n \n+    public static final UnboundBooleanFlag USE_BUCKET_SPACE_METRIC = defineFeatureFlag(\n+            \"use-bucket-space-metric\", true,\n+            \"Whether to use vds.datastored.bucket_space.buckets_total (true) instead of \" +\n+            \"vds.datastored.alldisks.buckets (false, legacy).\",\n+            \"Takes efefct on the next deployment of the application\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MTA3Mg=="}, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzcyOTIwOnYy", "diffSide": "RIGHT", "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/hostinfo/HostInfoTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNDo0Nzo1MlrOFe7O2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxNjowOFrOFe8I9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MjA1Ng==", "bodyText": "For completeness, consider also adding a check that the global bucketSpace dimension has zero buckets.", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367972056", "createdAt": "2020-01-17T14:47:52Z", "author": {"login": "vekterli"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/hostinfo/HostInfoTest.java", "diffHunk": "@@ -49,11 +52,16 @@ public void testFullSet() throws IOException {\n         assertThat(storageNodeList.size(), is(2));\n         assertThat(storageNodeList.get(0).getIndex(), is(0));\n         List<Metrics.Metric> metrics = hostInfo.getMetrics().getMetrics();\n-        assertThat(metrics.size(), is(2));\n-        Metrics.Value value = metrics.get(0).getValue();\n-        assertThat(value.getLast(), is(5095L));\n+        assertThat(metrics.size(), is(4));\n+        assertThat(metrics.get(0).getValue().getLast(), is(5095L));\n         assertThat(metrics.get(0).getName(), equalTo(\"vds.datastored.alldisks.buckets\"));\n+        assertThat(metrics.get(3).getValue().getLast(), is(129L));\n+        assertThat(metrics.get(3).getName(), equalTo(\"vds.datastored.bucket_space.buckets_total\"));\n         assertThat(hostInfo.getClusterStateVersionOrNull(), is(123));\n+\n+        Optional<Metrics.Value> value = hostInfo.getMetrics()\n+                .getValueAt(\"vds.datastored.bucket_space.buckets_total\", Map.of(\"bucketSpace\", \"default\"));\n+        assertThat(value.map(Metrics.Value::getLast), equalTo(Optional.of(129L)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NjkzNQ==", "bodyText": "Done", "url": "https://github.com/vespa-engine/vespa/pull/11835#discussion_r367986935", "createdAt": "2020-01-17T15:16:08Z", "author": {"login": "hakonhall"}, "path": "clustercontroller-core/src/test/java/com/yahoo/vespa/clustercontroller/core/hostinfo/HostInfoTest.java", "diffHunk": "@@ -49,11 +52,16 @@ public void testFullSet() throws IOException {\n         assertThat(storageNodeList.size(), is(2));\n         assertThat(storageNodeList.get(0).getIndex(), is(0));\n         List<Metrics.Metric> metrics = hostInfo.getMetrics().getMetrics();\n-        assertThat(metrics.size(), is(2));\n-        Metrics.Value value = metrics.get(0).getValue();\n-        assertThat(value.getLast(), is(5095L));\n+        assertThat(metrics.size(), is(4));\n+        assertThat(metrics.get(0).getValue().getLast(), is(5095L));\n         assertThat(metrics.get(0).getName(), equalTo(\"vds.datastored.alldisks.buckets\"));\n+        assertThat(metrics.get(3).getValue().getLast(), is(129L));\n+        assertThat(metrics.get(3).getName(), equalTo(\"vds.datastored.bucket_space.buckets_total\"));\n         assertThat(hostInfo.getClusterStateVersionOrNull(), is(123));\n+\n+        Optional<Metrics.Value> value = hostInfo.getMetrics()\n+                .getValueAt(\"vds.datastored.bucket_space.buckets_total\", Map.of(\"bucketSpace\", \"default\"));\n+        assertThat(value.map(Metrics.Value::getLast), equalTo(Optional.of(129L)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk3MjA1Ng=="}, "originalCommit": {"oid": "c28f13dac59167dee1257f5b23835e6441bc5f31"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2577, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}