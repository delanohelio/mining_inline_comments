{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjgzNTYy", "number": 11784, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToxNDo1NFrODX4fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToxNDo1NFrODX4fqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzY5NDUxOnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNToxNDo1NFrOFdbBRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTo0NToyN1rOFdyZuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTcxNw==", "bodyText": "Both console and dashboard expect that this object also contains tenant, application and instance.\nDashboard additionally expects that url is set.", "url": "https://github.com/vespa-engine/vespa/pull/11784#discussion_r366395717", "createdAt": "2020-01-14T15:14:54Z", "author": {"login": "freva"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "diffHunk": "@@ -968,6 +970,17 @@ private void toSlime(Cursor object, Instance instance, DeploymentStatus status,\n                                                            request.getUri()).toString());\n             }\n         }\n+        // Add dummy values for not-yet-existent prod deployments.\n+        status.jobSteps().keySet().stream()\n+              .filter(job -> job.application().instance().equals(instance.name()))\n+              .filter(job -> job.type().isProduction() && job.type().isDeployment())\n+              .map(job -> job.type().zone(controller.system()))\n+              .filter(zone -> ! instance.deployments().containsKey(zone))\n+              .forEach(zone -> {\n+                    Cursor deploymentObject = instancesArray.addObject();\n+                    deploymentObject.setString(\"environment\", zone.environment().value());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ba71c23d5a11a0307e82bbb470f7fde7a78214"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyNzc5Ng==", "bodyText": "Certainly won't set URL, as that would just point to a 404. So I can set the application ID, but this is surely pointless, as all three values are set on the grandparent object (the instance object container the array of deployments). I also intended for the missing url to serve as the indication that this is a dummy object.", "url": "https://github.com/vespa-engine/vespa/pull/11784#discussion_r366727796", "createdAt": "2020-01-15T07:33:34Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "diffHunk": "@@ -968,6 +970,17 @@ private void toSlime(Cursor object, Instance instance, DeploymentStatus status,\n                                                            request.getUri()).toString());\n             }\n         }\n+        // Add dummy values for not-yet-existent prod deployments.\n+        status.jobSteps().keySet().stream()\n+              .filter(job -> job.application().instance().equals(instance.name()))\n+              .filter(job -> job.type().isProduction() && job.type().isDeployment())\n+              .map(job -> job.type().zone(controller.system()))\n+              .filter(zone -> ! instance.deployments().containsKey(zone))\n+              .forEach(zone -> {\n+                    Cursor deploymentObject = instancesArray.addObject();\n+                    deploymentObject.setString(\"environment\", zone.environment().value());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTcxNw=="}, "originalCommit": {"oid": "46ba71c23d5a11a0307e82bbb470f7fde7a78214"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcyODAwNw==", "bodyText": "Also, It seems to be the application id (tenant, application, instance) isn't set, unless it is a \"recursive request\"?", "url": "https://github.com/vespa-engine/vespa/pull/11784#discussion_r366728007", "createdAt": "2020-01-15T07:34:28Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "diffHunk": "@@ -968,6 +970,17 @@ private void toSlime(Cursor object, Instance instance, DeploymentStatus status,\n                                                            request.getUri()).toString());\n             }\n         }\n+        // Add dummy values for not-yet-existent prod deployments.\n+        status.jobSteps().keySet().stream()\n+              .filter(job -> job.application().instance().equals(instance.name()))\n+              .filter(job -> job.type().isProduction() && job.type().isDeployment())\n+              .map(job -> job.type().zone(controller.system()))\n+              .filter(zone -> ! instance.deployments().containsKey(zone))\n+              .forEach(zone -> {\n+                    Cursor deploymentObject = instancesArray.addObject();\n+                    deploymentObject.setString(\"environment\", zone.environment().value());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTcxNw=="}, "originalCommit": {"oid": "46ba71c23d5a11a0307e82bbb470f7fde7a78214"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc3NjkwNg==", "bodyText": "Ah, yes, you're right. Let me fix the clients to make sure they can handle this change first (so they don't make the request that'll lead to 404).", "url": "https://github.com/vespa-engine/vespa/pull/11784#discussion_r366776906", "createdAt": "2020-01-15T09:41:34Z", "author": {"login": "freva"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "diffHunk": "@@ -968,6 +970,17 @@ private void toSlime(Cursor object, Instance instance, DeploymentStatus status,\n                                                            request.getUri()).toString());\n             }\n         }\n+        // Add dummy values for not-yet-existent prod deployments.\n+        status.jobSteps().keySet().stream()\n+              .filter(job -> job.application().instance().equals(instance.name()))\n+              .filter(job -> job.type().isProduction() && job.type().isDeployment())\n+              .map(job -> job.type().zone(controller.system()))\n+              .filter(zone -> ! instance.deployments().containsKey(zone))\n+              .forEach(zone -> {\n+                    Cursor deploymentObject = instancesArray.addObject();\n+                    deploymentObject.setString(\"environment\", zone.environment().value());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTcxNw=="}, "originalCommit": {"oid": "46ba71c23d5a11a0307e82bbb470f7fde7a78214"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc3ODgwOA==", "bodyText": "\ud83d\ude47", "url": "https://github.com/vespa-engine/vespa/pull/11784#discussion_r366778808", "createdAt": "2020-01-15T09:45:27Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java", "diffHunk": "@@ -968,6 +970,17 @@ private void toSlime(Cursor object, Instance instance, DeploymentStatus status,\n                                                            request.getUri()).toString());\n             }\n         }\n+        // Add dummy values for not-yet-existent prod deployments.\n+        status.jobSteps().keySet().stream()\n+              .filter(job -> job.application().instance().equals(instance.name()))\n+              .filter(job -> job.type().isProduction() && job.type().isDeployment())\n+              .map(job -> job.type().zone(controller.system()))\n+              .filter(zone -> ! instance.deployments().containsKey(zone))\n+              .forEach(zone -> {\n+                    Cursor deploymentObject = instancesArray.addObject();\n+                    deploymentObject.setString(\"environment\", zone.environment().value());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTcxNw=="}, "originalCommit": {"oid": "46ba71c23d5a11a0307e82bbb470f7fde7a78214"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2638, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}