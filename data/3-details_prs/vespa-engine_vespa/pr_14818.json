{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTY0MTIx", "number": 14818, "title": "Rebalance nodes to exclusive switches", "bodyText": "SwitchRebalancer drives the balancing using the same mechanism as the existing\nRebalancer.\nNode movers may second-guess each other, but that appears to already be case for\nRebalancer and SpareCapacityMaintainer. Haven't thought of a good solution\nfor that yet.\n@bratseth", "createdAt": "2020-10-12T13:04:11Z", "url": "https://github.com/vespa-engine/vespa/pull/14818", "merged": true, "mergeCommit": {"oid": "ea2cd0e9f2d28cd0d4308572cbf1171124c6a8f1"}, "closed": true, "closedAt": "2020-10-19T06:57:15Z", "author": {"login": "mpolden"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSKCFcAFqTUwNzQ5NTE5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTtnwegFqTUxMTEyMTQ4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDk1MTk0", "url": "https://github.com/vespa-engine/vespa/pull/14818#pullrequestreview-507495194", "createdAt": "2020-10-13T14:26:14Z", "commit": {"oid": "59b63536dd563a3a69b29b5bd875c3a5d325cb1c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDoyNjoxNFrOHgpjiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTowMzo1OVrOHgrY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5NzMyMA==", "bodyText": "Also add to https://github.com/vespa-engine/vespa/blob/master/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/integration/noderepository/NodeHistory.java", "url": "https://github.com/vespa-engine/vespa/pull/14818#discussion_r503997320", "createdAt": "2020-10-13T14:26:14Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/node/Agent.java", "diffHunk": "@@ -22,6 +22,7 @@\n     ReservationExpirer,\n     DynamicProvisioningMaintainer,\n     RetiringUpgrader,\n-    SpareCapacityMaintainer\n+    SpareCapacityMaintainer,\n+    SwitchRebalancer,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b63536dd563a3a69b29b5bd875c3a5d325cb1c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyNzM2Mg==", "bodyText": "When we will try to add new nodes in addNewDockerNodesOn(), wont this lead to us only considering the node on the first host that we read from ZK (or whatever order the hosts in allNodes are)?", "url": "https://github.com/vespa-engine/vespa/pull/14818#discussion_r504027362", "createdAt": "2020-10-13T15:03:59Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodePrioritizer.java", "diffHunk": "@@ -168,14 +171,38 @@ private NodeCandidate candidateFrom(Node node, boolean isSurplus) {\n                                                                          currentClusterSize));\n         }\n         else {\n-            return NodeCandidate.createStandalone(node, isSurplus, false);\n+            return NodeCandidate.createStandalone(node, isSurplus, false, exclusiveSwitch);\n         }\n     }\n \n-    private boolean isReplacement(int nofNodesInCluster, int nodeFailedNodes) {\n-        if (nodeFailedNodes == 0) return false;\n+    /** Returns whether given node is on an exclusive switch */\n+    private boolean onExclusiveSwitch(Node node, Optional<Node> parent) {\n+        Node host = parent.orElse(node);\n+        return unusedSwitch(host, node.allocation()\n+                                      .map(allocation -> allocation.membership().cluster().id())\n+                                      .orElseGet(clusterSpec::id));\n+    }\n+\n+    /** Returns whether switch of host is unused by any existing candidates for given cluster */\n+    private boolean unusedSwitch(Node host, ClusterSpec.Id cluster) {\n+        if (host.switchHostname().isEmpty()) return true;\n+        String switchHostname = host.switchHostname().get();\n+        for (var candidate : nodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b63536dd563a3a69b29b5bd875c3a5d325cb1c"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "408ee5ad7b66a93766ac52da062531a0972a5e97", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/408ee5ad7b66a93766ac52da062531a0972a5e97", "committedDate": "2020-10-16T07:33:00Z", "message": "Prefer nodes on exclusive switches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de2afb16321a45a92670924876cebe9ebb1739b7", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/de2afb16321a45a92670924876cebe9ebb1739b7", "committedDate": "2020-10-16T07:33:00Z", "message": "Add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad37364f64e6a9d369d99c9b49b73729e0274c8", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/cad37364f64e6a9d369d99c9b49b73729e0274c8", "committedDate": "2020-10-16T07:33:00Z", "message": "Rebalance nodes to exclusive switches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d0477f5a592bdacf1850c914899e123ce2aa518", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/6d0477f5a592bdacf1850c914899e123ce2aa518", "committedDate": "2020-10-16T07:33:00Z", "message": "Add agent to wire class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d89a5bca6ee8b6dd8cd33f9e227ed7e20cb3b20b", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/d89a5bca6ee8b6dd8cd33f9e227ed7e20cb3b20b", "committedDate": "2020-10-16T21:13:46Z", "message": "Prioritize nodes locally on switch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf094490f143a8fa342d1bb021d8389578823147", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/cf094490f143a8fa342d1bb021d8389578823147", "committedDate": "2020-10-16T21:13:46Z", "message": "Hide node collection details"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f53cd32ca6bff33a336e84d279c4961fd1f19f9c", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/f53cd32ca6bff33a336e84d279c4961fd1f19f9c", "committedDate": "2020-10-16T21:31:09Z", "message": "Simplify"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "206572f3f69e2d0668d6651d5e2b2929401fd970", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/206572f3f69e2d0668d6651d5e2b2929401fd970", "committedDate": "2020-10-14T07:21:22Z", "message": "Add agent to wire class"}, "afterCommit": {"oid": "f53cd32ca6bff33a336e84d279c4961fd1f19f9c", "author": {"user": {"login": "mpolden", "name": "Martin Polden"}}, "url": "https://github.com/vespa-engine/vespa/commit/f53cd32ca6bff33a336e84d279c4961fd1f19f9c", "committedDate": "2020-10-16T21:31:09Z", "message": "Simplify"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMTIxNDg2", "url": "https://github.com/vespa-engine/vespa/pull/14818#pullrequestreview-511121486", "createdAt": "2020-10-18T08:32:01Z", "commit": {"oid": "f53cd32ca6bff33a336e84d279c4961fd1f19f9c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwODozMjowMlrOHjjb0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwODozMjowMlrOHjjb0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA0Mjc2OQ==", "bodyText": "All the nodes should be on the same cluster, but they aren't because we add all application nodes (addApplicationNodes()) instead of just adding cluster nodes. I think we should fix addApplicationNodes() to just add cluster nodes (they are immediately just dropped in NodeAllocation::offer anyway) and then we wont need this class, just group by switchHostname.", "url": "https://github.com/vespa-engine/vespa/pull/14818#discussion_r507042769", "createdAt": "2020-10-18T08:32:02Z", "author": {"login": "freva"}, "path": "node-repository/src/main/java/com/yahoo/vespa/hosted/provision/provisioning/NodePrioritizer.java", "diffHunk": "@@ -191,9 +222,38 @@ private boolean canStillAllocateToParentOf(Node node) {\n         return nodeRepository.canAllocateTenantNodeTo(parent.get());\n     }\n \n-    private static NodeResources resources(NodeSpec requestedNodes) {\n-        if ( ! (requestedNodes instanceof NodeSpec.CountNodeSpec)) return null;\n-        return requestedNodes.resources().get();\n+    /** A cluster and its network switch */\n+    private static class ClusterSwitch {\n+\n+        private static final ClusterSwitch unknown = new ClusterSwitch(null, null);\n+\n+        private final ClusterSpec.Id cluster;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f53cd32ca6bff33a336e84d279c4961fd1f19f9c"}, "originalPosition": 232}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2341, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}