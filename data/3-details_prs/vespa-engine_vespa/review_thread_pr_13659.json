{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTQ3MjIx", "number": 13659, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowODo0NVrOEHnUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNToxMjowNlrOEHnaUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDE5NzM3OnYy", "diffSide": "RIGHT", "path": "searchlib/src/tests/features/prod_features.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowODo0NVrOGnFBqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyNDo0MlrOGna4xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyOTk5Mw==", "bodyText": "Should this line be here?", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443629993", "createdAt": "2020-06-22T15:08:45Z", "author": {"login": "geirst"}, "path": "searchlib/src/tests/features/prod_features.cpp", "diffHunk": "@@ -1563,6 +1565,26 @@ Test::testMatchCount()\n     }\n }\n \n+void\n+Test::testUnique()\n+{\n+    {\n+        UniqueBlueprint bp;\n+        EXPECT_TRUE(assertCreateInstance(bp, \"unique\"));\n+        FtFeatureTest ft(_factory, \"\");\n+        StringList params, in, out;\n+        FT_SETUP_OK(bp, ft.getIndexEnv(), params, in, out.add(\"out\"));\n+        FT_DUMP_EMPTY(_factory, \"unique\");\n+\n+        EXPECT_TRUE(assertMatches(0, \"x\", \"a\", \"matches(foo)\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4ODE2NQ==", "bodyText": "Thanks, leftover from copy-paste-mutate.", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443988165", "createdAt": "2020-06-23T06:24:42Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/tests/features/prod_features.cpp", "diffHunk": "@@ -1563,6 +1565,26 @@ Test::testMatchCount()\n     }\n }\n \n+void\n+Test::testUnique()\n+{\n+    {\n+        UniqueBlueprint bp;\n+        EXPECT_TRUE(assertCreateInstance(bp, \"unique\"));\n+        FtFeatureTest ft(_factory, \"\");\n+        StringList params, in, out;\n+        FT_SETUP_OK(bp, ft.getIndexEnv(), params, in, out.add(\"out\"));\n+        FT_DUMP_EMPTY(_factory, \"unique\");\n+\n+        EXPECT_TRUE(assertMatches(0, \"x\", \"a\", \"matches(foo)\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYyOTk5Mw=="}, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDIwMjM2OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTowOTo1NVrOGnFE3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyNTo0OVrOGna6XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDgxMg==", "bodyText": "Please update copyright.", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443630812", "createdAt": "2020-06-22T15:09:55Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4ODU3Mw==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443988573", "createdAt": "2020-06-23T06:25:49Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDgxMg=="}, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDIwOTA1OnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNToxMToyM1rOGnFJBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyNjoyOFrOGna7dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTg3OA==", "bodyText": "Wrong indentation?", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443631878", "createdAt": "2020-06-22T15:11:23Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"uniquefeature.h\"\n+#include <vespa/vespalib/util/stash.h>\n+\n+using namespace search::fef;\n+\n+namespace search::features {\n+\n+namespace {\n+\n+/**\n+ * Implements the executor for combining lid and distribution key to form a globally unique value.\n+ */\n+class UniqueLidAndDistributionKeyExecutor : public fef::FeatureExecutor {\n+private:\n+    uint32_t _distributionKey;\n+\n+public:\n+    UniqueLidAndDistributionKeyExecutor(uint32_t distributionKey)\n+        : _distributionKey(distributionKey)\n+    {\n+        assert( _distributionKey < 0x10000);\n+    }\n+\n+    void execute(uint32_t docId) override {\n+        outputs().set_number(0, (uint64_t(docId) << 16u) | _distributionKey);\n+    }\n+};\n+\n+}\n+\n+UniqueBlueprint::UniqueBlueprint() :\n+    Blueprint(\"unique\"),\n+    _distributionKey(0)\n+{\n+}\n+\n+void\n+UniqueBlueprint::visitDumpFeatures(const IIndexEnvironment &, IDumpFeatureVisitor &) const\n+{\n+}\n+\n+bool\n+UniqueBlueprint::setup(const IIndexEnvironment & env,\n+                        const ParameterList & )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4ODg1NA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443988854", "createdAt": "2020-06-23T06:26:28Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.cpp", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#include \"uniquefeature.h\"\n+#include <vespa/vespalib/util/stash.h>\n+\n+using namespace search::fef;\n+\n+namespace search::features {\n+\n+namespace {\n+\n+/**\n+ * Implements the executor for combining lid and distribution key to form a globally unique value.\n+ */\n+class UniqueLidAndDistributionKeyExecutor : public fef::FeatureExecutor {\n+private:\n+    uint32_t _distributionKey;\n+\n+public:\n+    UniqueLidAndDistributionKeyExecutor(uint32_t distributionKey)\n+        : _distributionKey(distributionKey)\n+    {\n+        assert( _distributionKey < 0x10000);\n+    }\n+\n+    void execute(uint32_t docId) override {\n+        outputs().set_number(0, (uint64_t(docId) << 16u) | _distributionKey);\n+    }\n+};\n+\n+}\n+\n+UniqueBlueprint::UniqueBlueprint() :\n+    Blueprint(\"unique\"),\n+    _distributionKey(0)\n+{\n+}\n+\n+void\n+UniqueBlueprint::visitDumpFeatures(const IIndexEnvironment &, IDumpFeatureVisitor &) const\n+{\n+}\n+\n+bool\n+UniqueBlueprint::setup(const IIndexEnvironment & env,\n+                        const ParameterList & )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTg3OA=="}, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDIxMjAzOnYy", "diffSide": "RIGHT", "path": "searchlib/src/vespa/searchlib/features/uniquefeature.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNToxMjowNlrOGnFK4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyOTo1OFrOGnbAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMjM1NQ==", "bodyText": "Seems to be some missing text here.", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443632355", "createdAt": "2020-06-22T15:12:06Z", "author": {"login": "geirst"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.h", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/fef/blueprint.h>\n+\n+namespace search::features {\n+\n+/**\n+ * Implements the blueprint for the unique .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk5MDE1OA==", "bodyText": "Fixed", "url": "https://github.com/vespa-engine/vespa/pull/13659#discussion_r443990158", "createdAt": "2020-06-23T06:29:58Z", "author": {"login": "baldersheim"}, "path": "searchlib/src/vespa/searchlib/features/uniquefeature.h", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+\n+#pragma once\n+\n+#include <vespa/searchlib/fef/blueprint.h>\n+\n+namespace search::features {\n+\n+/**\n+ * Implements the blueprint for the unique .", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMjM1NQ=="}, "originalCommit": {"oid": "b56785323aaf66f1db473db130c2126ffdd76b9b"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1873, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}