{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzU4MjY3", "number": 15811, "title": "If number of threads are changes, which is a live change, we must han\u2026", "bodyText": "\u2026dle that seamlessly with metrics too.\n@geirst and @vekterli PR", "createdAt": "2020-12-14T19:48:25Z", "url": "https://github.com/vespa-engine/vespa/pull/15811", "merged": true, "mergeCommit": {"oid": "e048f9f80ef02ff942cf808d9590395e1aa8c91b"}, "closed": true, "closedAt": "2020-12-15T12:48:39Z", "author": {"login": "baldersheim"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmLC9qgH2gAyNTM5NzU4MjY3OmYzYmNlYzczMzcxNDJmOWQwOGY4YmQ1NjBhMzEyNzEyNjdkZWRjNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmW7M8AH2gAyNTM5NzU4MjY3OjJjMmY1YzE1ZGM5MDA5OWI2ZGFiZTdiYWU1NDZmYzA3MjRmNGQ4ZmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/f3bcec7337142f9d08f8bd560a31271267dedc79", "committedDate": "2020-12-14T19:38:33Z", "message": "If number of threads are changes, which is a live change, we must handle that seamlessly with metrics too."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjQ1NjAy", "url": "https://github.com/vespa-engine/vespa/pull/15811#pullrequestreview-552245602", "createdAt": "2020-12-15T09:15:59Z", "commit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjUyODM5", "url": "https://github.com/vespa-engine/vespa/pull/15811#pullrequestreview-552252839", "createdAt": "2020-12-15T09:24:00Z", "commit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToyNDowMFrOIGA-xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToyNDowMFrOIGA-xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3ODQzOA==", "bodyText": "Is this function always called in the context of the MetricManager lock? I'm not confident post-construction changes to a MetricSet are thread safe otherwise (the code is complicated, so hard to tell for sure without some deeper digging).", "url": "https://github.com/vespa-engine/vespa/pull/15811#discussion_r543178438", "createdAt": "2020-12-15T09:24:00Z", "author": {"login": "vekterli"}, "path": "searchcore/src/vespa/searchcore/proton/metrics/documentdb_tagged_metrics.cpp", "diffHunk": "@@ -213,14 +213,15 @@ DocumentDBTaggedMetrics::MatchingMetrics::RankProfileMetrics::update(const Match\n     queryLatency.addValueBatch(stats.queryLatencyAvg(), stats.queryLatencyCount(),\n                                stats.queryLatencyMin(), stats.queryLatencyMax());\n     if (stats.getNumPartitions() > 0) {\n-        if (stats.getNumPartitions() <= partitions.size()) {\n-            for (size_t i = 0; i < stats.getNumPartitions(); ++i) {\n-                partitions[i]->update(stats.getPartition(i));\n-            }\n-        } else {\n-            vespalib::string msg(vespalib::make_string(\"Num partitions used '%ld' is larger than number of partitions '%ld' configured.\",\n-                                             stats.getNumPartitions(), partitions.size()));\n-            throw vespalib::IllegalStateException(msg, VESPA_STRLOC);\n+        for (size_t i = partition.size(); i < stats.getNumPartitions(); ++i) {\n+            // This loop is to handle live reconfigs that changes how many partitions(number of threads) might be used per query.\n+            vespalib::string partitionId(vespalib::make_string(\"docid_part%02ld\", i));\n+            partitions.push_back(std::make_unique<DocIdPartition>(partitionId, this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjU2MjU3", "url": "https://github.com/vespa-engine/vespa/pull/15811#pullrequestreview-552256257", "createdAt": "2020-12-15T09:27:39Z", "commit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToyNzozOVrOIGBJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToyNzozOVrOIGBJ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE4MTI5MQ==", "bodyText": "Should be partitions, compilation fails:\n/source/searchcore/src/vespa/searchcore/proton/metrics/documentdb_tagged_metrics.cpp:216:25: error: `partition` was not declared in this scope; did you mean `std::partition`?\n  216 |         for (size_t i = partition.size(); i < stats.getNumPartitions(); ++i) {", "url": "https://github.com/vespa-engine/vespa/pull/15811#discussion_r543181291", "createdAt": "2020-12-15T09:27:39Z", "author": {"login": "vekterli"}, "path": "searchcore/src/vespa/searchcore/proton/metrics/documentdb_tagged_metrics.cpp", "diffHunk": "@@ -213,14 +213,15 @@ DocumentDBTaggedMetrics::MatchingMetrics::RankProfileMetrics::update(const Match\n     queryLatency.addValueBatch(stats.queryLatencyAvg(), stats.queryLatencyCount(),\n                                stats.queryLatencyMin(), stats.queryLatencyMax());\n     if (stats.getNumPartitions() > 0) {\n-        if (stats.getNumPartitions() <= partitions.size()) {\n-            for (size_t i = 0; i < stats.getNumPartitions(); ++i) {\n-                partitions[i]->update(stats.getPartition(i));\n-            }\n-        } else {\n-            vespalib::string msg(vespalib::make_string(\"Num partitions used '%ld' is larger than number of partitions '%ld' configured.\",\n-                                             stats.getNumPartitions(), partitions.size()));\n-            throw vespalib::IllegalStateException(msg, VESPA_STRLOC);\n+        for (size_t i = partition.size(); i < stats.getNumPartitions(); ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3bcec7337142f9d08f8bd560a31271267dedc79"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c2f5c15dc90099b6dabe7bae546fc0724f4d8fe", "author": {"user": {"login": "baldersheim", "name": "Henning Baldersheim"}}, "url": "https://github.com/vespa-engine/vespa/commit/2c2f5c15dc90099b6dabe7bae546fc0724f4d8fe", "committedDate": "2020-12-15T09:28:56Z", "message": "Fix typo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3760, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}