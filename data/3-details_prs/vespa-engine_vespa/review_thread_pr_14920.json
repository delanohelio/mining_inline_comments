{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NzU3NTU2", "number": 14920, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTozMjoxOVrOEuc9Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1NDo1OFrOEufQ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTQ0MzUxOnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/testandsethelper.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTozMjoxOVrOHi3Vzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTo0MToyMVrOHi3yhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyMDMzNQ==", "bodyText": "Nit: missing spacing after commas", "url": "https://github.com/vespa-engine/vespa/pull/14920#discussion_r506320335", "createdAt": "2020-10-16T11:32:19Z", "author": {"login": "vekterli"}, "path": "storage/src/vespa/storage/persistence/testandsethelper.cpp", "diffHunk": "@@ -34,25 +35,20 @@ void TestAndSetHelper::parseDocumentSelection(const document::DocumentTypeRepo &\n }\n \n spi::GetResult TestAndSetHelper::retrieveDocument(const document::FieldSet & fieldSet, spi::Context & context) {\n-    return _thread._spi.get(\n-        _thread.getBucket(_docId, _cmd.getBucket()),\n-        fieldSet,\n-        _cmd.getDocumentId(),\n-        context);\n+    return _spi.get(_env.getBucket(_docId, _cmd.getBucket()), fieldSet,_cmd.getDocumentId(),context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdc2e3e8f764974255ebb72d9a4481be6f9e160c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyNzY4Nw==", "bodyText": "Fixed in upcomming PR", "url": "https://github.com/vespa-engine/vespa/pull/14920#discussion_r506327687", "createdAt": "2020-10-16T11:41:21Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/testandsethelper.cpp", "diffHunk": "@@ -34,25 +35,20 @@ void TestAndSetHelper::parseDocumentSelection(const document::DocumentTypeRepo &\n }\n \n spi::GetResult TestAndSetHelper::retrieveDocument(const document::FieldSet & fieldSet, spi::Context & context) {\n-    return _thread._spi.get(\n-        _thread.getBucket(_docId, _cmd.getBucket()),\n-        fieldSet,\n-        _cmd.getDocumentId(),\n-        context);\n+    return _spi.get(_env.getBucket(_docId, _cmd.getBucket()), fieldSet,_cmd.getDocumentId(),context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyMDMzNQ=="}, "originalCommit": {"oid": "fdc2e3e8f764974255ebb72d9a4481be6f9e160c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTgyMjA2OnYy", "diffSide": "RIGHT", "path": "storage/src/vespa/storage/persistence/asynchandler.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1NDo1OFrOHi7Rig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDowOTo1N1rOHjAWTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NDc3OA==", "bodyText": "Consider adding class comment.", "url": "https://github.com/vespa-engine/vespa/pull/14920#discussion_r506384778", "createdAt": "2020-10-16T12:54:58Z", "author": {"login": "geirst"}, "path": "storage/src/vespa/storage/persistence/asynchandler.h", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"types.h\"\n+#include <vespa/storageapi/message/persistence.h>\n+\n+namespace vespalib { class ISequencedTaskExecutor; }\n+namespace storage {\n+\n+namespace spi {\n+    struct PersistenceProvider;\n+    class Context;\n+}\n+struct PersistenceUtil;\n+\n+class AsyncHandler : public Types {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdc2e3e8f764974255ebb72d9a4481be6f9e160c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ2NzkxNw==", "bodyText": "Fixed in #14929", "url": "https://github.com/vespa-engine/vespa/pull/14920#discussion_r506467917", "createdAt": "2020-10-16T14:09:57Z", "author": {"login": "baldersheim"}, "path": "storage/src/vespa/storage/persistence/asynchandler.h", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright Verizon Media. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+#pragma once\n+\n+#include \"types.h\"\n+#include <vespa/storageapi/message/persistence.h>\n+\n+namespace vespalib { class ISequencedTaskExecutor; }\n+namespace storage {\n+\n+namespace spi {\n+    struct PersistenceProvider;\n+    class Context;\n+}\n+struct PersistenceUtil;\n+\n+class AsyncHandler : public Types {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NDc3OA=="}, "originalCommit": {"oid": "fdc2e3e8f764974255ebb72d9a4481be6f9e160c"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1075, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}