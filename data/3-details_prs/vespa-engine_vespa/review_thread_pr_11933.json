{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODcxNDQ1", "number": 11933, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNTozNjo0M1rODahjoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoyNDo0OFrODaigVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTM5MzYxOnYy", "diffSide": "RIGHT", "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/JobControllerApiHandlerHelperTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNTozNjo0M1rOFhhicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNTozNjo0M1rOFhhicg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY5NjgxOA==", "bodyText": "Oops. \ud83d\ude48", "url": "https://github.com/vespa-engine/vespa/pull/11933#discussion_r370696818", "createdAt": "2020-01-24T15:36:43Z", "author": {"login": "jonmv"}, "path": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/application/JobControllerApiHandlerHelperTest.java", "diffHunk": "@@ -182,6 +182,7 @@ public void testResponsesWithDirectDeployment() {\n     private void compare(HttpResponse response, String expected) throws JSONException, IOException {\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         response.render(baos);\n+        System.err.println(baos.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d10633b4c83bb0afb3279052ded58b9b60ffa73"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTUzOTc2OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/ConvergenceSummary.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoyMTo0N1rOFhi-Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoyMTo0N1rOFhi-Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMDMxMQ==", "bodyText": "\"Number of suspended nodes with pending platform upgrade\"? E.g. we actually don't know whether a node is suspended because it plans to upgrade.", "url": "https://github.com/vespa-engine/vespa/pull/11933#discussion_r370720311", "createdAt": "2020-01-24T16:21:47Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/ConvergenceSummary.java", "diffHunk": "@@ -0,0 +1,130 @@\n+// Copyright 2020 Oath Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n+package com.yahoo.vespa.hosted.controller.deployment;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Summary of node and service status during a deployment job.\n+ *\n+ * @author jonmv\n+ */\n+public class ConvergenceSummary {\n+\n+    private final long nodes;\n+    private final long down;\n+    private final long upgradingOs;\n+    private final long needPlatformUpgrade;\n+    private final long upgradingPlatform;\n+    private final long needReboot;\n+    private final long rebooting;\n+    private final long needRestart;\n+    private final long restarting;\n+    private final long services;\n+    private final long needNewConfig;\n+\n+    public ConvergenceSummary(long nodes, long down, long upgradingOs, long needPlatformUpgrade, long upgradingPlatform,\n+                              long needReboot, long rebooting, long needRestart, long restarting, long services, long needNewConfig) {\n+        this.nodes = nodes;\n+        this.down = down;\n+        this.upgradingOs = upgradingOs;\n+        this.needPlatformUpgrade = needPlatformUpgrade;\n+        this.upgradingPlatform = upgradingPlatform;\n+        this.needReboot = needReboot;\n+        this.rebooting = rebooting;\n+        this.needRestart = needRestart;\n+        this.restarting = restarting;\n+        this.services = services;\n+        this.needNewConfig = needNewConfig;\n+    }\n+\n+    /** Number of nodes in the application. */\n+    public long nodes() {\n+        return nodes;\n+    }\n+\n+    /** Number of nodes allowed to be down. */\n+    public long down() {\n+        return down;\n+    }\n+\n+    /** Number of nodes down for OS upgrade. */\n+    public long upgradingOs() {\n+        return upgradingOs;\n+    }\n+\n+    /** Number of nodes in need of a platform upgrade. */\n+    public long needPlatformUpgrade() {\n+        return needPlatformUpgrade;\n+    }\n+\n+    /** Number of nodes down for platform upgrade. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867865729efe99dc2f5d9425056059d26061a7fc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTU0OTAxOnYy", "diffSide": "LEFT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjoyNDo0OFrOFhjEDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODoxNjoxNFrOFhmIjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMTgwNA==", "bodyText": "(I liked this message in the original, as it made it crystal clear I need to wait longer. But it could be this is superfluous with the other changes...)", "url": "https://github.com/vespa-engine/vespa/pull/11933#discussion_r370721804", "createdAt": "2020-01-24T16:24:48Z", "author": {"login": "hakonhall"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -320,24 +346,49 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n+        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n         if (timedOut(id, deployment.get(), installationTimeout)) {\n+            logger.log(nodeList.asList().stream()\n+                               .flatMap(node -> nodeDetails(node, true))\n+                               .collect(toList()));\n             logger.log(INFO, \"Installation failed to complete within \" + installationTimeout.toMinutes() + \" minutes!\");\n             return Optional.of(installationFailed);\n         }\n \n-        logger.log(\"Installation not yet complete.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867865729efe99dc2f5d9425056059d26061a7fc"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc3MjExMQ==", "bodyText": "Should be covered by the High-level status, indeed.", "url": "https://github.com/vespa-engine/vespa/pull/11933#discussion_r370772111", "createdAt": "2020-01-24T18:16:14Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/deployment/InternalStepRunner.java", "diffHunk": "@@ -320,24 +346,49 @@ else if (timedOut(id, deployment.get(), endpointTimeout)) {\n                 return Optional.of(error);\n             }\n         }\n+        controller.jobController().locked(id, lockedRun -> lockedRun.withSummary(summary));\n \n         if (timedOut(id, deployment.get(), installationTimeout)) {\n+            logger.log(nodeList.asList().stream()\n+                               .flatMap(node -> nodeDetails(node, true))\n+                               .collect(toList()));\n             logger.log(INFO, \"Installation failed to complete within \" + installationTimeout.toMinutes() + \" minutes!\");\n             return Optional.of(installationFailed);\n         }\n \n-        logger.log(\"Installation not yet complete.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyMTgwNA=="}, "originalCommit": {"oid": "867865729efe99dc2f5d9425056059d26061a7fc"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2627, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}