{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NzQzOTI1", "number": 11854, "title": "Bratseth/is blocked in pong", "bodyText": "", "createdAt": "2020-01-20T09:56:37Z", "url": "https://github.com/vespa-engine/vespa/pull/11854", "merged": true, "mergeCommit": {"oid": "a8e70fcd502038d96b8829de501d564e62c7ff8a"}, "closed": true, "closedAt": "2020-01-20T12:26:18Z", "author": {"login": "bratseth"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8JQGbgH2gAyMzY0NzQzOTI1OjE5Yzk5ODdkOWU1ZTM4OTk2YjUxY2E1ZDExZjE1MmE5MzkyZGRjODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8LapngH2gAyMzY0NzQzOTI1OjM1YTBlYWZjNTQwYmFhNmI0NzkyNTQ1YTRkMTUwMDJjODViMGRiMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "19c9987d9e5e38996b51ca5d11f152a9392ddc83", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/19c9987d9e5e38996b51ca5d11f152a9392ddc83", "committedDate": "2020-01-20T09:37:07Z", "message": "Add isBlockingWrites to pong\n\n- Add isBlockingWrites to pong\n- Cleanup and deprecate unused complexity: There is just one node and one error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0074597688138ffc2d667481022d3a53998eb58d", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/0074597688138ffc2d667481022d3a53998eb58d", "committedDate": "2020-01-20T09:55:20Z", "message": "Add and propagate isBlockingWrite field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjA0NzU1", "url": "https://github.com/vespa-engine/vespa/pull/11854#pullrequestreview-345204755", "createdAt": "2020-01-20T10:17:34Z", "commit": {"oid": "19c9987d9e5e38996b51ca5d11f152a9392ddc83"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDoxNzozNVrOFfZfJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMDoxNzozNVrOFfZfJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2Nzc0OQ==", "bodyText": "t -> to", "url": "https://github.com/vespa-engine/vespa/pull/11854#discussion_r368467749", "createdAt": "2020-01-20T10:17:35Z", "author": {"login": "geirst"}, "path": "container-search/src/main/java/com/yahoo/prelude/Pong.java", "diffHunk": "@@ -4,82 +4,102 @@\n import com.yahoo.search.result.ErrorMessage;\n import com.yahoo.search.statistics.ElapsedTime;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n \n /**\n  * An answer from Ping.\n  *\n- * @author Steinar Knutsen\n+ * @author bratseth\n  */\n public class Pong {\n \n-    private String pingInfo=\"\";\n-    private final List<ErrorMessage> errors = new ArrayList<>(1);\n-    private ElapsedTime elapsed = new ElapsedTime();\n+    private final ElapsedTime elapsed = new ElapsedTime();\n     private final Optional<Long> activeDocuments;\n+    private final boolean isBlockingWrites;\n+    private final Optional<ErrorMessage> error;\n \n     public Pong() {\n-        this.activeDocuments = Optional.empty();\n+        this(Optional.empty(), false, Optional.empty());\n     }\n \n     public Pong(ErrorMessage error) {\n-        errors.add(error);\n-        this.activeDocuments = Optional.empty();\n+        this(Optional.empty(), false, Optional.of(error));\n     }\n \n     public Pong(long activeDocuments) {\n-        this.activeDocuments = Optional.of(activeDocuments);\n+        this(Optional.of(activeDocuments), false, Optional.empty());\n     }\n \n-    public void addError(ErrorMessage error) {\n-        errors.add(error);\n+    public Pong(long activeDocuments, boolean isBlockingWrites) {\n+        this(Optional.of(activeDocuments), isBlockingWrites, Optional.empty());\n     }\n \n-    public ErrorMessage getError(int i) {\n-        return errors.get(i);\n+    private Pong(Optional<Long> activeDocuments, boolean isBlockingWrites, Optional<ErrorMessage> error) {\n+        this.activeDocuments = activeDocuments;\n+        this.isBlockingWrites = isBlockingWrites;\n+        this.error = error;\n     }\n \n-    /** Returns the number of active documents in the backend responding in this Pong, if available */\n-    public Optional<Long> activeDocuments() {\n-        return activeDocuments;\n+    /**\n+     * @deprecated do not use. Additional errors are ignored.\n+     */\n+    @Deprecated\n+    public void addError(ErrorMessage error) { }\n+\n+    /**\n+     * @deprecated use error() instead\n+     */\n+    @Deprecated\n+    public ErrorMessage getError(int i) {\n+        if (i > 1) throw new IllegalArgumentException(\"No error at position \" + i);\n+        if (i == 0 && error.isEmpty()) throw new IllegalArgumentException(\"No error at position \" + i);\n+        return error.get();\n     }\n \n-    /** Returns the number of nodes which responded to this Pong, if available */\n+    public Optional<ErrorMessage> error() { return error; }\n+\n+    /** Returns the number of active documents in the backend responding in this Pong, if available */\n+    public Optional<Long> activeDocuments() { return activeDocuments; }\n+\n+    /** Returns true if the pinged node is currently blocking write operations due t being full */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c9987d9e5e38996b51ca5d11f152a9392ddc83"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a0eafc540baa6b4792545a4d15002c85b0db0b", "author": {"user": {"login": "vespa-headless", "name": null}}, "url": "https://github.com/vespa-engine/vespa/commit/35a0eafc540baa6b4792545a4d15002c85b0db0b", "committedDate": "2020-01-20T12:08:27Z", "message": "Fix comment typo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3938, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}