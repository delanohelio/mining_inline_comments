{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzgxNjY4", "number": 14797, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjo1NDoxMVrOEr7JLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo1NToxNFrOEsCTjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDkzMjMxOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjo1NDoxMVrOHe9UHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjo1NDoxMVrOHe9UHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIyMzkwMw==", "bodyText": "an alternative is to not pass start and redefine the make_addr function instead to get an address from a subspace directly. That would trade a divide with a multiply for the iterate case and we would save the multiply for the time we actually need the address.", "url": "https://github.com/vespa-engine/vespa/pull/14797#discussion_r502223903", "createdAt": "2020-10-09T06:54:11Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "diffHunk": "@@ -148,7 +147,7 @@ class FastSparseMap\n     void each_map_entry(F &&f) const {\n         _map.for_each([&](const auto &entry)\n                       {\n-                          f(entry.first.start, entry.second, entry.first.hash);\n+                          f(entry.second * _num_dims, entry.second, entry.first.hash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a75f0cf67b5b0ddedd36ab34595c2711f9ab9ec7"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDkzNTI2OnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjo1NToxNFrOHe9Vxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjo1NToxNFrOHe9Vxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIyNDMyNw==", "bodyText": "if we pack, I think we should also use align 4", "url": "https://github.com/vespa-engine/vespa/pull/14797#discussion_r502224327", "createdAt": "2020-10-09T06:55:14Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "diffHunk": "@@ -62,12 +62,11 @@ class FastSparseMap\n     }\n \n     struct Key {\n-        uint32_t start;\n         uint64_t hash;\n-        Key() : start(0), hash(0) {}\n-        Key(uint32_t start_in, uint64_t hash_in)\n-            : start(start_in), hash(hash_in) {}\n-    };\n+        Key() : hash(0) {}\n+        Key(uint64_t hash_in)\n+            : hash(hash_in) {}\n+    } __attribute__((packed));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a75f0cf67b5b0ddedd36ab34595c2711f9ab9ec7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjEwNTcyOnYy", "diffSide": "RIGHT", "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo1NToxNFrOHfIf3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo1NToxNFrOHfIf3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQwNzEzMg==", "bodyText": "I am not sure if attributes are order sensitive, but we should switch them just to be safe.", "url": "https://github.com/vespa-engine/vespa/pull/14797#discussion_r502407132", "createdAt": "2020-10-09T12:55:14Z", "author": {"login": "havardpe"}, "path": "eval/src/vespa/eval/eval/fast_sparse_map.h", "diffHunk": "@@ -66,7 +66,7 @@ class FastSparseMap\n         Key() : hash(0) {}\n         Key(uint64_t hash_in)\n             : hash(hash_in) {}\n-    } __attribute__((packed));\n+    } __attribute__((aligned(4),packed));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80476c1d456ba294755725778fa03701d85e21c7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1237, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}