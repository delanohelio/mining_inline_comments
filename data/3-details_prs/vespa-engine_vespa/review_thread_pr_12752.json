{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MjE0NTMx", "number": 12752, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1MDoxMVrODsZZeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1ODoyNFrODsZcEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODgwMDU3OnYy", "diffSide": "RIGHT", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1MDoxMVrOF9P0ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1MDoxMVrOF9P0ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NjcyMw==", "bodyText": "Any reason this shouldn't apply to PublicCd?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return zone.getSystemName() == SystemName.cd || zone.getEnvironment().isTest()\n          \n          \n            \n                    return zone.getSystemName().isCd() || zone.getEnvironment().isTest()", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399766723", "createdAt": "2020-03-29T08:50:11Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -605,4 +606,10 @@ public void createSymlink(Path symlink, Path target) {\n     protected Optional<CredentialsMaintainer> credentialsMaintainer() {\n         return credentialsMaintainer;\n     }\n+\n+    private static Duration warmUpDurationForZone(ZoneApi zone) {\n+        return zone.getSystemName() == SystemName.cd || zone.getEnvironment().isTest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODgwMzU1OnYy", "diffSide": "RIGHT", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1Mzo0MFrOF9P2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1Mzo0MFrOF9P2QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NzEwNQ==", "bodyText": "Duration of zero still starts the container unconstrained, but then immediately attempts to suspend against orch. to set limits. Negative will start the container with the constraints \n  \n    \n      vespa/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java\n    \n    \n         Line 215\n      in\n      44e2be1\n    \n    \n    \n    \n\n        \n          \n           ContainerResources wantedResources = context.nodeType() != NodeType.tenant || warmUpDuration.isNegative() ? \n        \n    \n  \n\n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ? Duration.ZERO\n          \n          \n            \n                            ? Duration.ofSeconds(-1)", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399767105", "createdAt": "2020-03-29T08:53:40Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -605,4 +606,10 @@ public void createSymlink(Path symlink, Path target) {\n     protected Optional<CredentialsMaintainer> credentialsMaintainer() {\n         return credentialsMaintainer;\n     }\n+\n+    private static Duration warmUpDurationForZone(ZoneApi zone) {\n+        return zone.getSystemName() == SystemName.cd || zone.getEnvironment().isTest()\n+                ? Duration.ZERO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODgwNzIzOnYy", "diffSide": "RIGHT", "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwODo1ODoyNFrOF9P4Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDowNToxMFrOF9QTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NzU4Nw==", "bodyText": "Consider just resolving this when needed via the ZoneApi in NodeAgentContext", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399767587", "createdAt": "2020-03-29T08:58:24Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -102,9 +103,9 @@\n     public NodeAgentImpl(NodeAgentContextSupplier contextSupplier, NodeRepository nodeRepository,\n                          Orchestrator orchestrator, DockerOperations dockerOperations, StorageMaintainer storageMaintainer,\n                          FlagSource flagSource, Optional<CredentialsMaintainer> credentialsMaintainer,\n-                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock) {\n+                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock, ZoneApi zone) {\n         this(contextSupplier, nodeRepository, orchestrator, dockerOperations, storageMaintainer, flagSource, credentialsMaintainer,\n-                aclMaintainer, healthChecker, clock, DEFAULT_WARM_UP_DURATION);\n+             aclMaintainer, healthChecker, clock, warmUpDurationForZone(zone));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2OTg5Mg==", "bodyText": "NodeAgentContextSupplier.nextContext() says blocks until the next context is readyand that sounded like something I wouldn't do in a constructor, I think I'll leave this for now at least", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399769892", "createdAt": "2020-03-29T09:20:27Z", "author": {"login": "hmusum"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -102,9 +103,9 @@\n     public NodeAgentImpl(NodeAgentContextSupplier contextSupplier, NodeRepository nodeRepository,\n                          Orchestrator orchestrator, DockerOperations dockerOperations, StorageMaintainer storageMaintainer,\n                          FlagSource flagSource, Optional<CredentialsMaintainer> credentialsMaintainer,\n-                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock) {\n+                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock, ZoneApi zone) {\n         this(contextSupplier, nodeRepository, orchestrator, dockerOperations, storageMaintainer, flagSource, credentialsMaintainer,\n-                aclMaintainer, healthChecker, clock, DEFAULT_WARM_UP_DURATION);\n+             aclMaintainer, healthChecker, clock, warmUpDurationForZone(zone));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NzU4Nw=="}, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3MDI5MA==", "bodyText": "No, I meant in the methods that actually use this variable (startContainer(), updateContainerIfNeeded() and doConverge()).\nAnother option is to pass the initial context to the constructor instead of just the zone, since NodeAgentFactory already has it \n  \n    \n      vespa/node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentFactory.java\n    \n    \n         Line 9\n      in\n      44e2be1\n    \n    \n    \n    \n\n        \n          \n           NodeAgent create(NodeAgentContextSupplier contextSupplier, NodeAgentContext nodeAgentContext);", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399770290", "createdAt": "2020-03-29T09:24:22Z", "author": {"login": "freva"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -102,9 +103,9 @@\n     public NodeAgentImpl(NodeAgentContextSupplier contextSupplier, NodeRepository nodeRepository,\n                          Orchestrator orchestrator, DockerOperations dockerOperations, StorageMaintainer storageMaintainer,\n                          FlagSource flagSource, Optional<CredentialsMaintainer> credentialsMaintainer,\n-                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock) {\n+                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock, ZoneApi zone) {\n         this(contextSupplier, nodeRepository, orchestrator, dockerOperations, storageMaintainer, flagSource, credentialsMaintainer,\n-                aclMaintainer, healthChecker, clock, DEFAULT_WARM_UP_DURATION);\n+             aclMaintainer, healthChecker, clock, warmUpDurationForZone(zone));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NzU4Nw=="}, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NDY1Ng==", "bodyText": "Yes, I initially did resolving when needed, let's go back to it. Thanks, done", "url": "https://github.com/vespa-engine/vespa/pull/12752#discussion_r399774656", "createdAt": "2020-03-29T10:05:10Z", "author": {"login": "hmusum"}, "path": "node-admin/src/main/java/com/yahoo/vespa/hosted/node/admin/nodeagent/NodeAgentImpl.java", "diffHunk": "@@ -102,9 +103,9 @@\n     public NodeAgentImpl(NodeAgentContextSupplier contextSupplier, NodeRepository nodeRepository,\n                          Orchestrator orchestrator, DockerOperations dockerOperations, StorageMaintainer storageMaintainer,\n                          FlagSource flagSource, Optional<CredentialsMaintainer> credentialsMaintainer,\n-                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock) {\n+                         Optional<AclMaintainer> aclMaintainer, Optional<HealthChecker> healthChecker, Clock clock, ZoneApi zone) {\n         this(contextSupplier, nodeRepository, orchestrator, dockerOperations, storageMaintainer, flagSource, credentialsMaintainer,\n-                aclMaintainer, healthChecker, clock, DEFAULT_WARM_UP_DURATION);\n+             aclMaintainer, healthChecker, clock, warmUpDurationForZone(zone));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NzU4Nw=="}, "originalCommit": {"oid": "d0e36f8329daba094e908c1949dddd7e7de941e8"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2154, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}