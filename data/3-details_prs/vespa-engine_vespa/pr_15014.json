{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MzAwMTc4", "number": 15014, "title": "Refactor filestormanager tests", "bodyText": "@vekterli and / or @baldersheim please review", "createdAt": "2020-10-22T13:40:22Z", "url": "https://github.com/vespa-engine/vespa/pull/15014", "merged": true, "mergeCommit": {"oid": "ae99f6bd8f0c28ae24fd814c9ee164de86b649b8"}, "closed": true, "closedAt": "2020-10-22T20:56:42Z", "author": {"login": "geirst"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVBNaaAH2gAyNTA4MzAwMTc4OmQxN2Y5NzVjZjRiMzZhYmEyNWFmZTNkMjliNjQ1YzZiYTc4MmNiMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVIYiMgH2gAyNTA4MzAwMTc4OmE5ODMxZDI1YjE3ZDI3ZjRjNDQxZTg2YjlkMTYwN2E0MTE2YmYzOGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d17f975cf4b36aba25afe3d29b645c6ba782cb0d", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/d17f975cf4b36aba25afe3d29b645c6ba782cb0d", "committedDate": "2020-10-22T12:34:12Z", "message": "Reduce code duplication by using TestFileStorComponents in more tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "321567fc907b58e3de11fbdd8c0d8a4d32d6c6d2", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/321567fc907b58e3de11fbdd8c0d8a4d32d6c6d2", "committedDate": "2020-10-22T13:15:35Z", "message": "Reduce code duplication by consolidating setup of FileStorHandler."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3adef49574ec1d09a26235f6da34ce21c1d3f396", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/3adef49574ec1d09a26235f6da34ce21c1d3f396", "committedDate": "2020-10-22T13:37:07Z", "message": "Reduce code duplication by consolidating setup of PersistenceHandler."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NzQ5NDM3", "url": "https://github.com/vespa-engine/vespa/pull/15014#pullrequestreview-514749437", "createdAt": "2020-10-22T13:51:57Z", "commit": {"oid": "3adef49574ec1d09a26235f6da34ce21c1d3f396"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzo1MTo1N1rOHmi2Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMzo1MzozN1rOHmi7YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE3ODg5MA==", "bodyText": "Consider = default", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510178890", "createdAt": "2020-10-22T13:51:57Z", "author": {"login": "vekterli"}, "path": "storage/src/tests/persistence/filestorage/filestormanagertest.cpp", "diffHunk": "@@ -218,6 +219,57 @@ struct TestFileStorComponents {\n     }\n };\n \n+struct FileStorHandlerComponents {\n+    DummyStorageLink top;\n+    DummyStorageLink* dummyManager;\n+    ForwardingMessageSender messageSender;\n+    documentapi::LoadTypeSet loadTypes;\n+    FileStorMetrics metrics;\n+    std::unique_ptr<FileStorHandler> filestorHandler;\n+\n+    FileStorHandlerComponents(FileStorManagerTest& test, uint32_t threadsPerDisk = 1)\n+        : top(),\n+          dummyManager(new DummyStorageLink),\n+          messageSender(*dummyManager),\n+          loadTypes(\"raw:\"),\n+          metrics(loadTypes.getMetricLoadTypes()),\n+          filestorHandler()\n+    {\n+        top.push_back(std::unique_ptr<StorageLink>(dummyManager));\n+        top.open();\n+\n+        metrics.initDiskMetrics(loadTypes.getMetricLoadTypes(), 1, threadsPerDisk);\n+\n+        filestorHandler = std::make_unique<FileStorHandlerImpl>(messageSender, metrics, test._node->getComponentRegister());\n+        filestorHandler->setGetNextMessageTimeout(50ms);\n+    }\n+    ~FileStorHandlerComponents() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adef49574ec1d09a26235f6da34ce21c1d3f396"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDE5Mg==", "bodyText": "Consider = default", "url": "https://github.com/vespa-engine/vespa/pull/15014#discussion_r510180192", "createdAt": "2020-10-22T13:53:37Z", "author": {"login": "vekterli"}, "path": "storage/src/tests/persistence/filestorage/filestormanagertest.cpp", "diffHunk": "@@ -218,6 +219,57 @@ struct TestFileStorComponents {\n     }\n };\n \n+struct FileStorHandlerComponents {\n+    DummyStorageLink top;\n+    DummyStorageLink* dummyManager;\n+    ForwardingMessageSender messageSender;\n+    documentapi::LoadTypeSet loadTypes;\n+    FileStorMetrics metrics;\n+    std::unique_ptr<FileStorHandler> filestorHandler;\n+\n+    FileStorHandlerComponents(FileStorManagerTest& test, uint32_t threadsPerDisk = 1)\n+        : top(),\n+          dummyManager(new DummyStorageLink),\n+          messageSender(*dummyManager),\n+          loadTypes(\"raw:\"),\n+          metrics(loadTypes.getMetricLoadTypes()),\n+          filestorHandler()\n+    {\n+        top.push_back(std::unique_ptr<StorageLink>(dummyManager));\n+        top.open();\n+\n+        metrics.initDiskMetrics(loadTypes.getMetricLoadTypes(), 1, threadsPerDisk);\n+\n+        filestorHandler = std::make_unique<FileStorHandlerImpl>(messageSender, metrics, test._node->getComponentRegister());\n+        filestorHandler->setGetNextMessageTimeout(50ms);\n+    }\n+    ~FileStorHandlerComponents() {}\n+};\n+\n+struct PersistenceHandlerComponents : public FileStorHandlerComponents {\n+    ServiceLayerComponent component;\n+    BucketOwnershipNotifier bucketOwnershipNotifier;\n+    std::unique_ptr<PersistenceHandler> persistenceHandler;\n+\n+    PersistenceHandlerComponents(FileStorManagerTest& test)\n+        : FileStorHandlerComponents(test),\n+          component(test._node->getComponentRegister(), \"test\"),\n+          bucketOwnershipNotifier(component, messageSender),\n+          persistenceHandler()\n+    {\n+        vespa::config::content::StorFilestorConfig cfg;\n+        persistenceHandler =\n+                std::make_unique<PersistenceHandler>(test._node->executor(), component, cfg,\n+                                                     test._node->getPersistenceProvider(),\n+                                                     *filestorHandler, bucketOwnershipNotifier,\n+                                                     *metrics.disk->threads[0]);\n+    }\n+    std::unique_ptr<DiskThread> make_disk_thread() {\n+        return createThread(*persistenceHandler, *filestorHandler, component);\n+    }\n+    ~PersistenceHandlerComponents() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adef49574ec1d09a26235f6da34ce21c1d3f396"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9831d25b17d27f4c441e86b9d1607a4116bf38f", "author": {"user": {"login": "geirst", "name": "Geir Storli"}}, "url": "https://github.com/vespa-engine/vespa/commit/a9831d25b17d27f4c441e86b9d1607a4116bf38f", "committedDate": "2020-10-22T20:55:41Z", "message": "Use default destructor outside class definition."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2334, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}