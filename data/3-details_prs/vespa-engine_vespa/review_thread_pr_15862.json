{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNTQwNzcw", "number": 15862, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozMzo1NlrOFH1YZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozMzo1NlrOFH1YZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzU4OTUxOnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozMzo1NlrOIJcVGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNzozNDo1OFrOIJxQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MjI1MA==", "bodyText": "I don't understand this ...\nThis returns the on encountering the newest (? is that what descendingMap does) job that was a success? But wouldn't you then return that jobs version? And why is it oldest?", "url": "https://github.com/vespa-engine/vespa/pull/15862#discussion_r546772250", "createdAt": "2020-12-21T15:33:56Z", "author": {"login": "bratseth"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "diffHunk": "@@ -256,18 +265,40 @@ public Instance requireInstance(ApplicationId id) {\n         return Collections.unmodifiableMap(clusters);\n     }\n \n+    /** Reads the oldest installed platform for the given application and zone from job history, or a node repo. */\n+    private Optional<Version> oldestInstalledPlatform(JobStatus job) {\n+        Version oldest = null;\n+        for (Run run : job.runs().descendingMap().values()) {\n+            Version version = run.versions().targetPlatform();\n+            if (oldest == null || version.isBefore(oldest))\n+                oldest = version;\n+\n+            if (run.status() == RunStatus.success)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55b88522928cc77a341daed62f47e6f4ea56c227"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4NTA2Ng==", "bodyText": "The assumption is that the last/newest success converged, making all nodes have its target version. The versions of that run, and all runs after it (since they're all non-successes) may have caused at least one node to have their target version, so the versions to consider are all of these. The oldest one is what we're after. Oldest platform version = lowest version number.", "url": "https://github.com/vespa-engine/vespa/pull/15862#discussion_r546885066", "createdAt": "2020-12-21T19:19:04Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "diffHunk": "@@ -256,18 +265,40 @@ public Instance requireInstance(ApplicationId id) {\n         return Collections.unmodifiableMap(clusters);\n     }\n \n+    /** Reads the oldest installed platform for the given application and zone from job history, or a node repo. */\n+    private Optional<Version> oldestInstalledPlatform(JobStatus job) {\n+        Version oldest = null;\n+        for (Run run : job.runs().descendingMap().values()) {\n+            Version version = run.versions().targetPlatform();\n+            if (oldest == null || version.isBefore(oldest))\n+                oldest = version;\n+\n+            if (run.status() == RunStatus.success)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MjI1MA=="}, "originalCommit": {"oid": "55b88522928cc77a341daed62f47e6f4ea56c227"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg5MTQ1Mw==", "bodyText": "Yes, the runs are ordered by increasing run number, so the descending map iterator starts with the latest run.", "url": "https://github.com/vespa-engine/vespa/pull/15862#discussion_r546891453", "createdAt": "2020-12-21T19:34:38Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "diffHunk": "@@ -256,18 +265,40 @@ public Instance requireInstance(ApplicationId id) {\n         return Collections.unmodifiableMap(clusters);\n     }\n \n+    /** Reads the oldest installed platform for the given application and zone from job history, or a node repo. */\n+    private Optional<Version> oldestInstalledPlatform(JobStatus job) {\n+        Version oldest = null;\n+        for (Run run : job.runs().descendingMap().values()) {\n+            Version version = run.versions().targetPlatform();\n+            if (oldest == null || version.isBefore(oldest))\n+                oldest = version;\n+\n+            if (run.status() == RunStatus.success)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MjI1MA=="}, "originalCommit": {"oid": "55b88522928cc77a341daed62f47e6f4ea56c227"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk3NTM2MA==", "bodyText": "Okay, and the 'oldest' thing is in case we're downgrading then. It might be good with some more explanation here but at least I agree this looks not wrong.", "url": "https://github.com/vespa-engine/vespa/pull/15862#discussion_r546975360", "createdAt": "2020-12-21T23:06:29Z", "author": {"login": "bratseth"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "diffHunk": "@@ -256,18 +265,40 @@ public Instance requireInstance(ApplicationId id) {\n         return Collections.unmodifiableMap(clusters);\n     }\n \n+    /** Reads the oldest installed platform for the given application and zone from job history, or a node repo. */\n+    private Optional<Version> oldestInstalledPlatform(JobStatus job) {\n+        Version oldest = null;\n+        for (Run run : job.runs().descendingMap().values()) {\n+            Version version = run.versions().targetPlatform();\n+            if (oldest == null || version.isBefore(oldest))\n+                oldest = version;\n+\n+            if (run.status() == RunStatus.success)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MjI1MA=="}, "originalCommit": {"oid": "55b88522928cc77a341daed62f47e6f4ea56c227"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzExNTE5Ng==", "bodyText": "Yes, in case we downgraded at one point. It's also not more confusing to explicitly pick the lowest version, than to assume we always upgrade, and pick the earliest installed, imho. I'll add a note.", "url": "https://github.com/vespa-engine/vespa/pull/15862#discussion_r547115196", "createdAt": "2020-12-22T07:34:58Z", "author": {"login": "jonmv"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/ApplicationController.java", "diffHunk": "@@ -256,18 +265,40 @@ public Instance requireInstance(ApplicationId id) {\n         return Collections.unmodifiableMap(clusters);\n     }\n \n+    /** Reads the oldest installed platform for the given application and zone from job history, or a node repo. */\n+    private Optional<Version> oldestInstalledPlatform(JobStatus job) {\n+        Version oldest = null;\n+        for (Run run : job.runs().descendingMap().values()) {\n+            Version version = run.versions().targetPlatform();\n+            if (oldest == null || version.isBefore(oldest))\n+                oldest = version;\n+\n+            if (run.status() == RunStatus.success)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MjI1MA=="}, "originalCommit": {"oid": "55b88522928cc77a341daed62f47e6f4ea56c227"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2069, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}