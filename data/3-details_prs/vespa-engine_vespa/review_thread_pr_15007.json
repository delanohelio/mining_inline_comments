{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MjI4NzA5", "number": 15007, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjo1NjoxN1rOEx40KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjo1NjoxN1rOEx40KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzQ2NTM2OnYy", "diffSide": "RIGHT", "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/application/DeploymentQuotaCalculator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjo1NjoxN1rOHoON8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDoxMjoxMVrOHoRY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzODAzNQ==", "bodyText": "I don't understand why application is a parameter for .quotaUsage(...). Surely the app object knows about its own identity?", "url": "https://github.com/vespa-engine/vespa/pull/15007#discussion_r511938035", "createdAt": "2020-10-26T12:56:17Z", "author": {"login": "oyving"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/application/DeploymentQuotaCalculator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.yahoo.vespa.hosted.controller.application;\n+\n+import com.yahoo.config.application.api.DeploymentSpec;\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.zone.ZoneId;\n+import com.yahoo.vespa.hosted.controller.Application;\n+import com.yahoo.vespa.hosted.controller.api.integration.billing.Quota;\n+\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.List;\n+\n+/** Calculates the quota to allocate to a deployment. */\n+public class DeploymentQuotaCalculator {\n+\n+    public static Quota calculate(Quota tenantQuota,\n+                                  List<Application> tenantApps,\n+                                  ApplicationId deployingApp, ZoneId deployingZone,\n+                                  DeploymentSpec deploymentSpec) {\n+\n+        if (tenantQuota.budget().isEmpty()) return tenantQuota; // Shortcut if there is no budget limit to care about.\n+\n+        if (deployingZone.environment().isProduction()) return probablyEnoughForAll(tenantQuota, tenantApps, deployingApp, deploymentSpec);\n+\n+        return getMaximumAllowedQuota(tenantQuota, tenantApps, deployingApp, deployingZone);\n+    }\n+\n+    /** Just get the maximum quota we are allowed to use. */\n+    private static Quota getMaximumAllowedQuota(Quota tenantQuota, List<Application> applications,\n+                                                ApplicationId application, ZoneId zone) {\n+        var usageOutsideDeployment = applications.stream()\n+                .map(app -> app.quotaUsage(application, zone))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36b1bd081047f0e95c27cd38afac69ae880b158"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4NzExNw==", "bodyText": "An ApplicationId is not the identifier of an Application - that is the TenantAndApplicationId (which it knows).\nAn ApplicationId actually specifies an instance: so TenantAndApplicationId + InstanceName. I could have passed just the InstanceName, and in the quotaUsage methods reconstructed the ApplicationId - but it would be more code and didn't seem any clearer to me.\nApplicationId needs to be renamed to InstanceId, or perhaps TenantAndApplicationAndInstanceId, but I think that's a big refactor :-)", "url": "https://github.com/vespa-engine/vespa/pull/15007#discussion_r511987117", "createdAt": "2020-10-26T14:08:25Z", "author": {"login": "andreer"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/application/DeploymentQuotaCalculator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.yahoo.vespa.hosted.controller.application;\n+\n+import com.yahoo.config.application.api.DeploymentSpec;\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.zone.ZoneId;\n+import com.yahoo.vespa.hosted.controller.Application;\n+import com.yahoo.vespa.hosted.controller.api.integration.billing.Quota;\n+\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.List;\n+\n+/** Calculates the quota to allocate to a deployment. */\n+public class DeploymentQuotaCalculator {\n+\n+    public static Quota calculate(Quota tenantQuota,\n+                                  List<Application> tenantApps,\n+                                  ApplicationId deployingApp, ZoneId deployingZone,\n+                                  DeploymentSpec deploymentSpec) {\n+\n+        if (tenantQuota.budget().isEmpty()) return tenantQuota; // Shortcut if there is no budget limit to care about.\n+\n+        if (deployingZone.environment().isProduction()) return probablyEnoughForAll(tenantQuota, tenantApps, deployingApp, deploymentSpec);\n+\n+        return getMaximumAllowedQuota(tenantQuota, tenantApps, deployingApp, deployingZone);\n+    }\n+\n+    /** Just get the maximum quota we are allowed to use. */\n+    private static Quota getMaximumAllowedQuota(Quota tenantQuota, List<Application> applications,\n+                                                ApplicationId application, ZoneId zone) {\n+        var usageOutsideDeployment = applications.stream()\n+                .map(app -> app.quotaUsage(application, zone))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzODAzNQ=="}, "originalCommit": {"oid": "c36b1bd081047f0e95c27cd38afac69ae880b158"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4OTk4Ng==", "bodyText": "Aha! That makes more sense.", "url": "https://github.com/vespa-engine/vespa/pull/15007#discussion_r511989986", "createdAt": "2020-10-26T14:12:11Z", "author": {"login": "oyving"}, "path": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/application/DeploymentQuotaCalculator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.yahoo.vespa.hosted.controller.application;\n+\n+import com.yahoo.config.application.api.DeploymentSpec;\n+import com.yahoo.config.provision.ApplicationId;\n+import com.yahoo.config.provision.zone.ZoneId;\n+import com.yahoo.vespa.hosted.controller.Application;\n+import com.yahoo.vespa.hosted.controller.api.integration.billing.Quota;\n+\n+import java.math.BigDecimal;\n+import java.math.RoundingMode;\n+import java.util.List;\n+\n+/** Calculates the quota to allocate to a deployment. */\n+public class DeploymentQuotaCalculator {\n+\n+    public static Quota calculate(Quota tenantQuota,\n+                                  List<Application> tenantApps,\n+                                  ApplicationId deployingApp, ZoneId deployingZone,\n+                                  DeploymentSpec deploymentSpec) {\n+\n+        if (tenantQuota.budget().isEmpty()) return tenantQuota; // Shortcut if there is no budget limit to care about.\n+\n+        if (deployingZone.environment().isProduction()) return probablyEnoughForAll(tenantQuota, tenantApps, deployingApp, deploymentSpec);\n+\n+        return getMaximumAllowedQuota(tenantQuota, tenantApps, deployingApp, deployingZone);\n+    }\n+\n+    /** Just get the maximum quota we are allowed to use. */\n+    private static Quota getMaximumAllowedQuota(Quota tenantQuota, List<Application> applications,\n+                                                ApplicationId application, ZoneId zone) {\n+        var usageOutsideDeployment = applications.stream()\n+                .map(app -> app.quotaUsage(application, zone))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkzODAzNQ=="}, "originalCommit": {"oid": "c36b1bd081047f0e95c27cd38afac69ae880b158"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1115, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}