{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjU0ODkw", "number": 1233, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0MzoxNlrOEFaGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToyMjo1NFrOEHJzeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTA1OTIxOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/sampling/aggregator/KafkaPartitionMetricSampleAggregatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0MzoxNlrOGjlBqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozNTo0MVrOGkRDTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1OTk3Ng==", "bodyText": "Here, not TP but tp1, because of the topic parameter is TOPIC0+\"1\"", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439959976", "createdAt": "2020-06-15T06:43:16Z", "author": {"login": "akatona84"}, "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/sampling/aggregator/KafkaPartitionMetricSampleAggregatorTest.java", "diffHunk": "@@ -129,24 +129,24 @@ public void testAggregateWithUpdatedCluster() throws NotEnoughValidWindowsExcept\n                                                          TOPIC0,\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, PARTITION, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),\n                                                              Optional.of(RecordBatch.NO_PARTITION_LEADER_EPOCH),\n-                                                             Arrays.asList(nodes()), Arrays.asList(nodes()),\n+                                                             nodeIds(), nodeIds(),\n                                                              Collections.emptyList()))));\n     topicMetadata.add(new MetadataResponse.TopicMetadata(Errors.NONE,\n                                                          TOPIC0 + \"1\",\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, 0, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d0fe8279bbdfacbd1b690454566b425508e23e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4MTI5Mw==", "bodyText": "thanks", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r440681293", "createdAt": "2020-06-16T08:35:41Z", "author": {"login": "amuraru"}, "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/sampling/aggregator/KafkaPartitionMetricSampleAggregatorTest.java", "diffHunk": "@@ -129,24 +129,24 @@ public void testAggregateWithUpdatedCluster() throws NotEnoughValidWindowsExcept\n                                                          TOPIC0,\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, PARTITION, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),\n                                                              Optional.of(RecordBatch.NO_PARTITION_LEADER_EPOCH),\n-                                                             Arrays.asList(nodes()), Arrays.asList(nodes()),\n+                                                             nodeIds(), nodeIds(),\n                                                              Collections.emptyList()))));\n     topicMetadata.add(new MetadataResponse.TopicMetadata(Errors.NONE,\n                                                          TOPIC0 + \"1\",\n                                                          false,\n                                                          Collections.singletonList(new MetadataResponse.PartitionMetadata(\n-                                                             Errors.NONE, 0, NODE_0,\n+                                                             Errors.NONE, TP, Optional.of(NODE_0.id()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1OTk3Ng=="}, "originalCommit": {"oid": "76d0fe8279bbdfacbd1b690454566b425508e23e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTA3MDI5OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/MonitorUnitTestUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0Nzo1MFrOGjlIYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0Nzo1MFrOGjlIYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTY5Nw==", "bodyText": "how about\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return Arrays.asList(NODES.clone()).stream().map(n -> n.id()).collect(Collectors.toList());\n          \n          \n            \n                return Arrays.stream(NODES).map(Node::id).collect(Collectors.toList());\n          \n      \n    \n    \n  \n\nimho array cloning is unnecessary also more concise", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439961697", "createdAt": "2020-06-15T06:47:50Z", "author": {"login": "akatona84"}, "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/monitor/MonitorUnitTestUtils.java", "diffHunk": "@@ -44,6 +46,13 @@ private MonitorUnitTestUtils() {\n     return NODES.clone();\n   }\n \n+  /**\n+   * @return The clone of the nodes in the {@link #getCluster(Collection)} and {@link #getMetadata(Collection)}.\n+   */\n+  public static List<Integer> nodeIds() {\n+    return Arrays.asList(NODES.clone()).stream().map(n -> n.id()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d0fe8279bbdfacbd1b690454566b425508e23e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTA5NDc1OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo1Njo1NlrOGjlWvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozNTo0OVrOGkRDoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NTM3Mw==", "bodyText": "-1 could be MetadataResponse.NO_LEADER_ID", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r439965373", "createdAt": "2020-06-15T06:56:56Z", "author": {"login": "akatona84"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "diffHunk": "@@ -430,13 +430,13 @@ public static MetadataResponse prepareMetadataResponse(List<Node> brokers,\n     for (MetadataResponse.PartitionMetadata partitionMetadata : topicMetadata.partitionMetadata()) {\n       metadataResponseTopic.partitions().add(\n           new MetadataResponseData.MetadataResponsePartition()\n-              .setErrorCode(partitionMetadata.error().code())\n+              .setErrorCode(partitionMetadata.error.code())\n               .setPartitionIndex(partitionMetadata.partition())\n-              .setLeaderId(partitionMetadata.leader() == null ? -1 : partitionMetadata.leader().id())\n-              .setLeaderEpoch(partitionMetadata.leaderEpoch().orElse(RecordBatch.NO_PARTITION_LEADER_EPOCH))\n-              .setReplicaNodes(partitionMetadata.replicas().stream().map(Node::id).collect(Collectors.toList()))\n-              .setIsrNodes(partitionMetadata.isr().stream().map(Node::id).collect(Collectors.toList()))\n-              .setOfflineReplicas(partitionMetadata.offlineReplicas().stream().map(Node::id).collect(Collectors.toList())));\n+              .setLeaderId(partitionMetadata.leaderId.orElse(-1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76d0fe8279bbdfacbd1b690454566b425508e23e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4MTM3Nw==", "bodyText": "thanks - updated", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r440681377", "createdAt": "2020-06-16T08:35:49Z", "author": {"login": "amuraru"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "diffHunk": "@@ -430,13 +430,13 @@ public static MetadataResponse prepareMetadataResponse(List<Node> brokers,\n     for (MetadataResponse.PartitionMetadata partitionMetadata : topicMetadata.partitionMetadata()) {\n       metadataResponseTopic.partitions().add(\n           new MetadataResponseData.MetadataResponsePartition()\n-              .setErrorCode(partitionMetadata.error().code())\n+              .setErrorCode(partitionMetadata.error.code())\n               .setPartitionIndex(partitionMetadata.partition())\n-              .setLeaderId(partitionMetadata.leader() == null ? -1 : partitionMetadata.leader().id())\n-              .setLeaderEpoch(partitionMetadata.leaderEpoch().orElse(RecordBatch.NO_PARTITION_LEADER_EPOCH))\n-              .setReplicaNodes(partitionMetadata.replicas().stream().map(Node::id).collect(Collectors.toList()))\n-              .setIsrNodes(partitionMetadata.isr().stream().map(Node::id).collect(Collectors.toList()))\n-              .setOfflineReplicas(partitionMetadata.offlineReplicas().stream().map(Node::id).collect(Collectors.toList())));\n+              .setLeaderId(partitionMetadata.leaderId.orElse(-1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NTM3Mw=="}, "originalCommit": {"oid": "76d0fe8279bbdfacbd1b690454566b425508e23e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTM0OTc5OnYy", "diffSide": "RIGHT", "path": "gradle.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToxOTozN1rOGmYhjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowNDozOVrOGmhO7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMDg3OA==", "bodyText": "Can we avoid version bump to 3.6.1? -- please see #1236 (comment)", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r442900878", "createdAt": "2020-06-19T15:19:37Z", "author": {"login": "efeg"}, "path": "gradle.properties", "diffHunk": "@@ -1,5 +1,5 @@\n org.gradle.daemon=false\n org.gradle.parallel=false\n org.gradle.jvmargs=-Xms512m -Xmx512m\n-kafkaVersion=2.4.1\n-zookeeperVersion=3.6.0\n\\ No newline at end of file\n+kafkaVersion=2.5.0\n+zookeeperVersion=3.6.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0MzU2NQ==", "bodyText": "Thanks @efeg - good catch! I missed your previous comment", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r443043565", "createdAt": "2020-06-19T21:04:39Z", "author": {"login": "amuraru"}, "path": "gradle.properties", "diffHunk": "@@ -1,5 +1,5 @@\n org.gradle.daemon=false\n org.gradle.parallel=false\n org.gradle.jvmargs=-Xms512m -Xmx512m\n-kafkaVersion=2.4.1\n-zookeeperVersion=3.6.0\n\\ No newline at end of file\n+kafkaVersion=2.5.0\n+zookeeperVersion=3.6.1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMDg3OA=="}, "originalCommit": {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTM2MTIxOnYy", "diffSide": "RIGHT", "path": "gradle/findbugs-exclude.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToyMjo1NFrOGmYoYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTowODoyMVrOGmhTnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMjYyNw==", "bodyText": "I am curious why we add MS_PKGPROTECT?", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r442902627", "createdAt": "2020-06-19T15:22:54Z", "author": {"login": "efeg"}, "path": "gradle/findbugs-exclude.xml", "diffHunk": "@@ -50,6 +50,7 @@\n       <Bug pattern=\"EC_NULL_ARG\"/>\n       <Bug pattern=\"NP_ALWAYS_NULL\"/>\n       <Bug pattern=\"MS_CANNOT_BE_FINAL\"/>\n+      <Bug pattern=\"MS_PKGPROTECT\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA0NDc2NQ==", "bodyText": "This came out of migrating to scala 2.12 (a requirement when migrating to kafka 2.5)\nSpotbugs checks fail on scala compiled classes in this new version.\ngradle/gradle#8308 seems to report a similar issue. Fwiw I noticed kafka itself excludes this check also in their spotbugs configuration.", "url": "https://github.com/linkedin/cruise-control/pull/1233#discussion_r443044765", "createdAt": "2020-06-19T21:08:21Z", "author": {"login": "amuraru"}, "path": "gradle/findbugs-exclude.xml", "diffHunk": "@@ -50,6 +50,7 @@\n       <Bug pattern=\"EC_NULL_ARG\"/>\n       <Bug pattern=\"NP_ALWAYS_NULL\"/>\n       <Bug pattern=\"MS_CANNOT_BE_FINAL\"/>\n+      <Bug pattern=\"MS_PKGPROTECT\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMjYyNw=="}, "originalCommit": {"oid": "e49a127d66a13a463a8ddeeca495493575ea7085"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 855, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}