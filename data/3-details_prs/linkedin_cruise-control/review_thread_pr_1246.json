{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3Nzg3MzYz", "number": 1246, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowNzoyMFrOEKUUow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTo1MzowMlrOE_0zYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjU0MTc5OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowNzoyMFrOGrShCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDowNzoyMFrOGrShCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NTMyMA==", "bodyText": "To ensure backwards compatibility and robustness, can we ensure that\n\nif configs.get(\"port\") is not null, use this as port\notherwise if configs.get(\"listeners\") is not null and it has a non-empty port, use that as port\notherwise use the default hostname and port -- i.e. localhost and 9092.\n\nAlso can we move the parsing of port to a small function with this priority of retrieval documented?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r448045320", "createdAt": "2020-07-01T00:07:20Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,8 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = listeners == null ? \"localhost:9092\" : listeners.substring(listeners.lastIndexOf(\"/\") + 1, listeners.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cdda341b096a022a31a741a8b43a7f84749e73"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjU1NjE5OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxNTowOFrOGrSpjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODo0ODo0NlrOGsDg7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzUwMw==", "bodyText": "Note that listeners config can be specified without a host -- such as SSL://:9091 (see https://kafka.apache.org/documentation/#listeners). However, providing an empty hostname in bootstrap.servers config will cause an exception.\nShould we limit this parsing to retrieval of port?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r448047503", "createdAt": "2020-07-01T00:15:08Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,8 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = listeners == null ? \"localhost:9092\" : listeners.substring(listeners.lastIndexOf(\"/\") + 1, listeners.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cdda341b096a022a31a741a8b43a7f84749e73"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg0ODEwOA==", "bodyText": "Thanks  for your answer, you are right.Let me make some changes.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r448848108", "createdAt": "2020-07-02T08:48:46Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,8 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = listeners == null ? \"localhost:9092\" : listeners.substring(listeners.lastIndexOf(\"/\") + 1, listeners.length());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzUwMw=="}, "originalCommit": {"oid": "b2cdda341b096a022a31a741a8b43a7f84749e73"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjU1NzcwOnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxNTo1NlrOGrSqbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMDoxNTo1NlrOGrSqbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzcyNg==", "bodyText": "Nit: (not introduced in this patch) Can we move the hardcoded values (e.g. localhost, 9092) to static variables?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r448047726", "createdAt": "2020-07-01T00:15:56Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,8 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = listeners == null ? \"localhost:9092\" : listeners.substring(listeners.lastIndexOf(\"/\") + 1, listeners.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cdda341b096a022a31a741a8b43a7f84749e73"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc1MzEwOnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjowMTo0NVrOGshkZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTozMzo0M1rOGuVCOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MDUxOA==", "bodyText": "Thanks for the update!\n#1246 (comment) from the first round of review seems not addressed. This patch drops parsing the value of port. However, existing users might depend on value retrieval via port config.\n\nCan we make sure that the behavior is the same as before if port config exists?\nCan we move this parsing logic to a small function with this priority of retrieval documented?\n\n-- please let me know if you have any questions.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449340518", "createdAt": "2020-07-03T02:01:45Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];\n+        } else {\n+          bootstrapServers = allListeners[1].substring(2, allListeners[1].length()) + \":\" + allListeners[2];\n+        }\n+      } else {\n+        bootstrapServers = \"localhost:9092\";\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0MDE5Nw==", "bodyText": "Thanks for your answer. l know,let me modify.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r450940197", "createdAt": "2020-07-07T15:10:43Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];\n+        } else {\n+          bootstrapServers = allListeners[1].substring(2, allListeners[1].length()) + \":\" + allListeners[2];\n+        }\n+      } else {\n+        bootstrapServers = \"localhost:9092\";\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MDUxOA=="}, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzMjMxNQ==", "bodyText": "If KafkaConfig.ListenersProp() is configured, port  is not null and the value of port will not be used\uff0cmaybe\n\nif configs.get(KafkaConfig.ListenersProp())  is not null, parse host and port in KafkaConfig.ListenersProp(),use this as port\notherwise if configs.get(KafkaConfig.PortProp())  is not null , use that as port\notherwise use the default hostname and port -- i.e. localhost and 9092.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r451232315", "createdAt": "2020-07-08T01:33:43Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];\n+        } else {\n+          bootstrapServers = allListeners[1].substring(2, allListeners[1].length()) + \":\" + allListeners[2];\n+        }\n+      } else {\n+        bootstrapServers = \"localhost:9092\";\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MDUxOA=="}, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc1OTU4OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjowNjozNVrOGshoJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjowNjozNVrOGshoJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MTQ3OA==", "bodyText": "#1246 (comment) does not seem to be addressed.\nCan we avoid using hardcoded values such as \"listeners\" or \"0.0.0.0:\"?\n\nFor config names, we can use the original source of the config names, such as (1) KafkaConfig.ListenersProp() and (2) KafkaConfig.PortProp().\nFor default values, we can use static variables -- e.g.\n\n  protected static final String DEFAULT_BOOTSTRAP_SERVERS_PORT = \"9092\";\n  protected static final String DEFAULT_BOOTSTRAP_SERVERS_HOST = \"localhost\";", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449341478", "createdAt": "2020-07-03T02:06:35Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc2Nzg2OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMjo0NFrOGshtDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDozMTo1MFrOGuBZ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjczNQ==", "bodyText": "What is the expected structure if allListeners[1].length() == 2 is true (and what is expected when it is false)?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449342735", "createdAt": "2020-07-03T02:12:44Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxMDY4Mw==", "bodyText": "What is the expected structure if allListeners[1].length() == 2 is true (and what is expected when it is false)?\nThanks for your answer.\neg:\nPLAINTEXT://:9092  'allListeners[1].length() == 2' is 'true'\nPLAINTEXT://myhost:9092\u3001PLAINTEXT://localhost:9092   'allListeners[1].length() == 2' is 'false'\nbut I found that if it is ipv6 it will not be established,let me modify", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r450910683", "createdAt": "2020-07-07T14:31:50Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjczNQ=="}, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc2ODg0OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMzozNFrOGshtqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjowMDozOFrOGuVdMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0Mjg5MQ==", "bodyText": "Why do we switch to 0.0.0.0 from localhost?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449342891", "createdAt": "2020-07-03T02:13:34Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzNzkwNw==", "bodyText": "Why do we switch to 0.0.0.0 from localhost?\nsuch as SSL://:9091\uff0chost is empty, new EndPoint  host will be assigned null\n' if (host == null || host.trim.isEmpty)'\n'anyLocalAddress.holder().hostName = \"0.0.0.0\" '", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r450937907", "createdAt": "2020-07-07T15:07:39Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0Mjg5MQ=="}, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzOTIxNg==", "bodyText": "l misunderstood\nsuch as SSL://:9091,kafka server will listen to 0.0.0.0, but as kafka client we should use localhost", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r451239216", "createdAt": "2020-07-08T02:00:38Z", "author": {"login": "sasukerui"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -113,8 +113,19 @@ public void configure(Map<String, ?> configs) {\n \n     //Add BootstrapServers if not set\n     if (!producerProps.containsKey(CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG)) {\n-      Object port = configs.get(\"port\");\n-      String bootstrapServers = \"localhost:\" + (port == null ? \"9092\" : String.valueOf(port));\n+      String listeners = configs.get(\"listeners\") == null ? null : String.valueOf(configs.get(\"listeners\"));\n+      String bootstrapServers = null;\n+      if (listeners != null && listeners.length() != 0) {\n+        String firstListener = listeners.split(\"\\\\s*,\\\\s*\")[0];\n+        String[] allListeners = firstListener.split(\":\");\n+        if (allListeners[1].length() == 2) {\n+          bootstrapServers = \"0.0.0.0:\" + allListeners[2];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0Mjg5MQ=="}, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc3MDU5OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxNDo1M1rOGshuvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxNDo1M1rOGshuvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MzE2Nw==", "bodyText": "Can we refer to KafkaConfig.ListenersProp() instead of hardcoding \"listeners\"?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449343167", "createdAt": "2020-07-03T02:14:53Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "diffHunk": "@@ -202,4 +202,15 @@ public void testUpdatingMetricsTopicConfig() throws ExecutionException, Interrup\n     topicDescription = adminClient.describeTopics(Collections.singleton(TOPIC)).values().get(TOPIC).get();\n     assertEquals(2, topicDescription.partitions().size());\n   }\n+  @Test\n+  public void testGetKafkaBootstrapServersConfigure() throws ExecutionException, InterruptedException {\n+    String bootstrapServers = \"\";\n+    for (Map<Object, Object> brokerConfig : buildBrokerConfigs()) {\n+      if (brokerConfig.containsKey(\"listeners\")) {\n+         String listeners = String.valueOf(brokerConfig.get(\"listeners\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc3NDk1OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxNzo1MlrOGshxTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxNzo1MlrOGshxTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MzgyMQ==", "bodyText": "Should we update this test to handle cases described on #1246 (comment)?", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r449343821", "createdAt": "2020-07-03T02:17:52Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "diffHunk": "@@ -202,4 +202,15 @@ public void testUpdatingMetricsTopicConfig() throws ExecutionException, Interrup\n     topicDescription = adminClient.describeTopics(Collections.singleton(TOPIC)).values().get(TOPIC).get();\n     assertEquals(2, topicDescription.partitions().size());\n   }\n+  @Test\n+  public void testGetKafkaBootstrapServersConfigure() throws ExecutionException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb06c2e661e25f337b9cb86c3b8e979caff395fa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTM2Mzc4OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyODozMVrOGyIJQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzoyODozMVrOGyIJQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIxNTQyNA==", "bodyText": ": should not be part of DEFAULT_BOOTSTRAP_SERVERS_HOST.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r455215424", "createdAt": "2020-07-15T17:28:31Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -73,6 +73,7 @@\n   private int _metricsTopicAutoCreateRetries;\n   protected static final String CRUISE_CONTROL_METRICS_TOPIC_CLEAN_UP_POLICY = \"delete\";\n   protected static final Duration PRODUCER_CLOSE_TIMEOUT = Duration.ofSeconds(5);\n+  protected static final String DEFAULT_BOOTSTRAP_SERVERS_HOST = \"localhost:\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca09add7f10eec20c44ebcfe2c1c3a92d7b91e6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTQ3MzQ0OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo1MjoxMVrOGyJRtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzo1MjoxMVrOGyJRtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzMzk3Mw==", "bodyText": "This change(1) breaks backwards compatibility and (2) uses null as port if neither port nor listeners configs are specified.\nBreaks backwards compatibility:\nIn this new logic, if a user has both listeners and port configs specified, then the port config will be ignored now -- which was not the case in the existing logic.\nPlease ensure that\n\nif configs.get(KafkaConfig.PortProp()) is not null, use this as port (this is regardless of whether listeners has been specified in configs or not)\notherwise if configs.get(\"listeners\") is not null and it has a non-empty port, use that as port\notherwise use the default hostname and port -- i.e. localhost and 9092.\n\nPlease see #1246 (comment).\nMay assign null as the port\nIf neither port nor listeners configs are specified, then bootstrapServers will be localhost:null.", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r455233973", "createdAt": "2020-07-15T17:52:11Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -107,14 +108,29 @@ public void close() {\n     }\n   }\n \n+  static String getBootstrapServers(Map<String, ?> configs) {\n+    String listeners = String.valueOf(configs.get(KafkaConfig.ListenersProp()));\n+    if (listeners != null && listeners.length() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fca09add7f10eec20c44ebcfe2c1c3a92d7b91e6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzYwODY0OnYy", "diffSide": "RIGHT", "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTo1MzowMlrOH9vq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTo1MzowMlrOH9vq2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUwNjIwMA==", "bodyText": "Nit: how about renaming this variable as urlParsePattern. compile seems to be too vague to me", "url": "https://github.com/linkedin/cruise-control/pull/1246#discussion_r534506200", "createdAt": "2020-12-02T21:53:02Z", "author": {"login": "Lincong"}, "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporterTest.java", "diffHunk": "@@ -202,4 +205,33 @@ public void testUpdatingMetricsTopicConfig() throws ExecutionException, Interrup\n     topicDescription = adminClient.describeTopics(Collections.singleton(TOPIC)).values().get(TOPIC).get();\n     assertEquals(2, topicDescription.partitions().size());\n   }\n+\n+  @Test\n+  public void testGetKafkaBootstrapServersConfigure() {\n+    // Test with a \"listeners\" config with a host\n+    Map<Object, Object> brokerConfig = buildBrokerConfigs().get(0);\n+    Map<String, Object> listenersMap = Collections.singletonMap(KafkaConfig.ListenersProp(), brokerConfig.get(KafkaConfig.ListenersProp()));\n+    String bootstrapServers = CruiseControlMetricsReporter.getBootstrapServers(listenersMap);\n+    String urlParse = \"\\\\[?([0-9a-zA-Z\\\\-%._:]*)]?:(-?[0-9]+)\";\n+    Pattern compile = Pattern.compile(urlParse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "068336947fbbf3986de8f9c780acd634d99863aa"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 861, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}