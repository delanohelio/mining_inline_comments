{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDkzMzYy", "number": 1400, "title": "Add gap-based balance limits for TopicReplicaDistributionGoal", "bodyText": "This PR resolves #1399.", "createdAt": "2020-11-24T01:08:46Z", "url": "https://github.com/linkedin/cruise-control/pull/1400", "merged": true, "mergeCommit": {"oid": "2dbe8b38a708ea0e362bd0f0128d86ea63cbe30c"}, "closed": true, "closedAt": "2020-11-25T18:35:46Z", "author": {"login": "efeg"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdffLV6AH2gAyNTI2MDkzMzYyOjlkYWRjMTNjODRlNmFjNGRkYjdjNjM5YWZjNTQ3ZmFjZjY5MWYxNWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgBsLJAFqTUzODcxMTU0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9dadc13c84e6ac4ddb7c639afc547facf691f15a", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/9dadc13c84e6ac4ddb7c639afc547facf691f15a", "committedDate": "2020-11-24T01:08:20Z", "message": "Add gap-based balance limits for TopicReplicaDistributionGoal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTAzNzA0", "url": "https://github.com/linkedin/cruise-control/pull/1400#pullrequestreview-538103704", "createdAt": "2020-11-25T02:06:23Z", "commit": {"oid": "9dadc13c84e6ac4ddb7c639afc547facf691f15a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjowNjoyNFrOH5gWaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjozNDoxMlrOH5g3Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2MDkwNA==", "bodyText": "Nit: shouldn't the type be int since getInt is used? I know that casting an int to long is safe. Just wondering is it intentional?", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530060904", "createdAt": "2020-11-25T02:06:24Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java", "diffHunk": "@@ -287,6 +287,23 @@ void sanityCheckConcurrency() {\n     }\n   }\n \n+  /**\n+   * Sanity check to ensure that\n+   * <ul>\n+   *   <li>{@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG} <=\n+   *   {@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG}</li>\n+   * </ul>\n+   */\n+  private void sanityCheckBalancingConstraints() {\n+    long topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dadc13c84e6ac4ddb7c639afc547facf691f15a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2OTMyNw==", "bodyText": "Shouldn't it be (swapping maxLimit and minLimit):\nmaxLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));\nminLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMaxGap()));\n\nIn the above way, maxLimit >= minLimit. Otherwise, it would be the other way (maxLimit <= minLimit), and the below return statement will always return minLimit\nreturn Math.max(minLimit, Math.min(computedLimit, maxLimit));", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530069327", "createdAt": "2020-11-25T02:34:12Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java", "diffHunk": "@@ -103,15 +104,40 @@ private double balancePercentageWithMargin(OptimizationOptions optimizationOptio\n     return (balancePercentage - 1) * BALANCE_MARGIN;\n   }\n \n+  /**\n+   * Ensure that the given balance limit falls into min/max limits determined by min/max gaps for topic replica balance.\n+   * If the computed balance limit is out of these gap-based limits, use the relevant max/min gap-based balance limit.\n+   *\n+   * @see com.linkedin.kafka.cruisecontrol.config.constants.AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_DOC\n+   * @see com.linkedin.kafka.cruisecontrol.config.constants.AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_DOC\n+   *\n+   * @param computedLimit Computed balance upper or lower limit\n+   * @param average Average topic replicas on broker.\n+   * @return A balance limit that falls into [minGap, maxGap] for topic replica balance.\n+   */\n+  private int gapBasedBalanceLimit(int computedLimit, double average, boolean isLowerLimit) {\n+    int minLimit;\n+    int maxLimit;\n+    if (isLowerLimit) {\n+      minLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dadc13c84e6ac4ddb7c639afc547facf691f15a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3733ee7d20e452b356fbe63b74769619e2ffa381", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/3733ee7d20e452b356fbe63b74769619e2ffa381", "committedDate": "2020-11-25T03:59:33Z", "message": "Address the feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTQ5MTQ3", "url": "https://github.com/linkedin/cruise-control/pull/1400#pullrequestreview-538149147", "createdAt": "2020-11-25T04:29:48Z", "commit": {"oid": "3733ee7d20e452b356fbe63b74769619e2ffa381"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDoyOTo0OFrOH5izfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDoyOTo0OFrOH5izfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwMTExOA==", "bodyText": "Should we allow topicReplicaBalanceMinGap  == topicReplicaBalanceMaxGap? In this case, the computedLimit is essentially ignored in the gapBasedBalanceLimit method since the return value of this method does not depend on computedLimit", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530101118", "createdAt": "2020-11-25T04:29:48Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java", "diffHunk": "@@ -287,6 +287,23 @@ void sanityCheckConcurrency() {\n     }\n   }\n \n+  /**\n+   * Sanity check to ensure that\n+   * <ul>\n+   *   <li>{@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG} <=\n+   *   {@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG}</li>\n+   * </ul>\n+   */\n+  private void sanityCheckBalancingConstraints() {\n+    int topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);\n+    int topicReplicaBalanceMaxGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_CONFIG);\n+    if (topicReplicaBalanceMinGap > topicReplicaBalanceMaxGap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3733ee7d20e452b356fbe63b74769619e2ffa381"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzExNTQ3", "url": "https://github.com/linkedin/cruise-control/pull/1400#pullrequestreview-538711547", "createdAt": "2020-11-25T17:20:59Z", "commit": {"oid": "3733ee7d20e452b356fbe63b74769619e2ffa381"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 117, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}