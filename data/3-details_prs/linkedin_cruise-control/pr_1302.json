{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMTMxMzk4", "number": 1302, "title": "Support stop ongoing executions with rollback", "bodyText": "This PR resolves #1195.\n\nChanges in this PR are relevant to migrate_to_kafka_2_4 and migrate_to_kafka_2_5 branches.", "createdAt": "2020-08-05T04:06:50Z", "url": "https://github.com/linkedin/cruise-control/pull/1302", "merged": true, "mergeCommit": {"oid": "d12dd59bc70e21fe5b669b9a59e61dc00d3eb41b"}, "closed": true, "closedAt": "2020-08-05T22:28:39Z", "author": {"login": "efeg"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7zH5iAH2gAyNDYzMTMxMzk4OjZiNzE1N2Y4YjRiNWY3NzM5NGQ0NTc3YzNmM2M2OGQ2MjNlZGZlNDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8COSKgBqjM2MjY1MzIxNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b7157f8b4b5f77394d4577c3f3c68d623edfe45", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/6b7157f8b4b5f77394d4577c3f3c68d623edfe45", "committedDate": "2020-08-05T04:01:24Z", "message": "Support stop ongoing executions with rollback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzI5OTUx", "url": "https://github.com/linkedin/cruise-control/pull/1302#pullrequestreview-461329951", "createdAt": "2020-08-05T04:24:24Z", "commit": {"oid": "6b7157f8b4b5f77394d4577c3f3c68d623edfe45"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoyNDoyNFrOG75qQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDo0NjowN1rOG76AiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2Mzg3NQ==", "bodyText": "Prior to this patch, we act on STOP_EXECUTION  in other conditions but we handle that in this condition now. Is it intentional?", "url": "https://github.com/linkedin/cruise-control/pull/1302#discussion_r465463875", "createdAt": "2020-08-05T04:24:24Z", "author": {"login": "hzxa21"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1333,16 +1334,21 @@ private int moveLeadershipInBatch() throws InterruptedException, ExecutionExcept\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Tasks in execution: {}\", inExecutionTasks());\n         }\n-        List<ExecutionTask> deadOrAbortingInterBrokerReplicaActions = new ArrayList<>();\n+        List<ExecutionTask> deadInterBrokerReplicaTasks = new ArrayList<>();\n+        List<ExecutionTask> stoppedInterBrokerReplicaTasks = new ArrayList<>();\n         List<ExecutionTask> slowTasksToReport = new ArrayList<>();\n         boolean shouldReportSlowTasks = _time.milliseconds() - _lastSlowTaskReportingTimeMs > SLOW_TASK_ALERTING_BACKOFF_TIME_MS;\n         for (ExecutionTask task : inExecutionTasks()) {\n           TopicPartition tp = task.proposal().topicPartition();\n-          if (_stopSignal.get() == FORCE_STOP_EXECUTION) {\n-            LOG.debug(\"Task {} is marked as dead to force execution to stop.\", task);\n+          if (_stopSignal.get() != NO_STOP_EXECUTION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7157f8b4b5f77394d4577c3f3c68d623edfe45"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2OTU3Nw==", "bodyText": "I am confused about the naming at the very beginning since the comment says \"Cancel/rollback ... tasks\" but we call submitReplicaReassignmentTasks here. When I look at the implementation  I realized that the task will be cancelled if it is in a DEAD state. Are the tasks in deadInterBrokerReplicaTasks and stoppedInterBrokerReplicaTasks all guaranteed to be in DEAD state?\nMaybe add more documentations here to make it clearer?", "url": "https://github.com/linkedin/cruise-control/pull/1302#discussion_r465469577", "createdAt": "2020-08-05T04:46:07Z", "author": {"login": "hzxa21"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1358,42 +1364,76 @@ private int moveLeadershipInBatch() throws InterruptedException, ExecutionExcept\n             if (shouldReportSlowTasks) {\n               task.maybeReportExecutionTooSlow(_time.milliseconds(), slowTasksToReport);\n             }\n-            if (maybeMarkTaskAsDeadOrAborting(cluster, logDirInfoByTask, task, result)) {\n-              deadOrAbortingTaskIds.add(task.executionId());\n-              // Only add the dead or aborted tasks to execute if it is an inter-broker replica action.\n+            if (maybeMarkTaskAsDead(cluster, logDirInfoByTask, task, result)) {\n+              deadTaskIds.add(task.executionId());\n+              // Only add the dead tasks to execute if it is an inter-broker replica action.\n               if (task.type() == INTER_BROKER_REPLICA_ACTION) {\n-                deadOrAbortingInterBrokerReplicaActions.add(task);\n-              }\n-              // A dead or aborted task is considered as finished.\n-              if (task.state() == DEAD || task.state() == ABORTED) {\n-                finishedTasks.add(task);\n+                deadInterBrokerReplicaTasks.add(task);\n               }\n+              finishedTasks.add(task);\n             }\n           }\n         }\n         sendSlowExecutionAlert(slowTasksToReport);\n-        handleDeadOrAbortingReplicaActions(deadOrAbortingInterBrokerReplicaActions);\n+        handleDeadInterBrokerReplicaTasks(deadInterBrokerReplicaTasks, stoppedInterBrokerReplicaTasks);\n         updateOngoingExecutionState();\n       } while (!inExecutionTasks().isEmpty() && finishedTasks.isEmpty());\n \n       LOG.info(\"Finished tasks: {}.{}{}{}\", finishedTasks,\n-               forceStoppedTaskIds.isEmpty() ? \"\" : String.format(\". [Force-stopped: %s]\", forceStoppedTaskIds),\n+               stoppedTaskIds.isEmpty() ? \"\" : String.format(\". [Stopped: %s]\", stoppedTaskIds),\n                deletedTaskIds.isEmpty() ? \"\" : String.format(\". [Deleted: %s]\", deletedTaskIds),\n-               deadOrAbortingTaskIds.isEmpty() ? \"\" : String.format(\". [Dead/aborting: %s]\", deadOrAbortingTaskIds));\n+               deadTaskIds.isEmpty() ? \"\" : String.format(\". [Dead: %s]\", deadTaskIds));\n \n       return finishedTasks;\n     }\n \n-    private void handleDeadOrAbortingReplicaActions(List<ExecutionTask> deadOrAbortingInterBrokerReplicaActions)\n+    /**\n+     * Attempts to cancel/rollback the ongoing reassignment of dead/stopped inter-broker replica actions and stops the\n+     * execution if not already requested so by the user.\n+     *\n+     * If all dead tasks are due to stopped inter-broker replica tasks, it waits until the rollback is completed.\n+     * Otherwise, it will not wait for the actual rollback to complete to avoid being blocked on a potentially stuck\n+     * reassignment operation due to dead brokers in the cluster. If by the time the next execution is attempted, the\n+     * rollback is still in progress on Kafka server-side, the executor will detect the ongoing server-side execution\n+     * and will not start a new execution (see {@link #sanityCheckOngoingMovement}).\n+     *\n+     * @param deadInterBrokerReplicaTasks Inter-broker replica tasks that are marked as dead due to dead destination brokers.\n+     * @param stoppedInterBrokerReplicaTasks Inter-broker replica tasks that are marked as dead due to being stopped by user.\n+     */\n+    private void handleDeadInterBrokerReplicaTasks(List<ExecutionTask> deadInterBrokerReplicaTasks,\n+                                                   List<ExecutionTask> stoppedInterBrokerReplicaTasks)\n         throws InterruptedException, ExecutionException, TimeoutException {\n-      if (!deadOrAbortingInterBrokerReplicaActions.isEmpty()) {\n-        ExecutionUtils.submitReplicaReassignmentTasks(_adminClient, deadOrAbortingInterBrokerReplicaActions);\n+      List<ExecutionTask> tasksToCancel = new ArrayList<>(deadInterBrokerReplicaTasks);\n+      tasksToCancel.addAll(stoppedInterBrokerReplicaTasks);\n+\n+      if (!tasksToCancel.isEmpty()) {\n+        // Cancel/rollback reassignment of dead inter-broker replica tasks.\n+        ExecutionUtils.submitReplicaReassignmentTasks(_adminClient, tasksToCancel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7157f8b4b5f77394d4577c3f3c68d623edfe45"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDM4OTYx", "url": "https://github.com/linkedin/cruise-control/pull/1302#pullrequestreview-462038961", "createdAt": "2020-08-05T21:31:52Z", "commit": {"oid": "a63fee1faa752b411804531a1a18e158c5018b02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a63fee1faa752b411804531a1a18e158c5018b02", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/a63fee1faa752b411804531a1a18e158c5018b02", "committedDate": "2020-08-05T21:26:12Z", "message": "Address the feedback"}, "afterCommit": {"oid": "2fc916bfe1fb6cef962f540b14bcabfee8a3ee63", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/2fc916bfe1fb6cef962f540b14bcabfee8a3ee63", "committedDate": "2020-08-05T21:35:00Z", "message": "Address the feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e722d751e05faf6676aeb1f4fdd5ae3fc251be21", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/e722d751e05faf6676aeb1f4fdd5ae3fc251be21", "committedDate": "2020-08-05T21:36:48Z", "message": "Address the feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fc916bfe1fb6cef962f540b14bcabfee8a3ee63", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/2fc916bfe1fb6cef962f540b14bcabfee8a3ee63", "committedDate": "2020-08-05T21:35:00Z", "message": "Address the feedback"}, "afterCommit": {"oid": "e722d751e05faf6676aeb1f4fdd5ae3fc251be21", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/e722d751e05faf6676aeb1f4fdd5ae3fc251be21", "committedDate": "2020-08-05T21:36:48Z", "message": "Address the feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 55, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}