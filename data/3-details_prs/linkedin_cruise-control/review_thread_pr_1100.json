{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTU4ODQ2", "number": 1100, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMToyNzo0N1rODgBa9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMToyNzo0N1rODgBa9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTA0MzEwOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMToyNzo0OFrOFqEIfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTozNzozNlrOFqEXTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ==", "bodyText": "Why we need to reset hasUnfixableGoals here? Shouldn't refreshing this value in anomaly detector's anomaly handling logic enough?", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379652221", "createdAt": "2020-02-14T21:27:48Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -555,6 +555,7 @@ private void startExecution(LoadMonitor loadMonitor,\n     sanityCheckOngoingMovement();\n     _hasOngoingExecution = true;\n     _anomalyDetector.maybeClearOngoingAnomalyDetectionTimeMs();\n+    _anomalyDetector.resetHasUnfixableGoals();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1NTM4MQ==", "bodyText": "An ongoing execution would potentially take hours to days to complete. During an ongoing execution, goal violation detector skips detection; hence, would fail to refresh this state.\nResetting the state during an ongoing execution avoids keeping this signal for non-actionable case. If an execution was manually started, the cluster operator already knows if there are unfixable goals, because s/he either fixes them or skips them explicitly (on purpose).", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379655381", "createdAt": "2020-02-14T21:36:05Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -555,6 +555,7 @@ private void startExecution(LoadMonitor loadMonitor,\n     sanityCheckOngoingMovement();\n     _hasOngoingExecution = true;\n     _anomalyDetector.maybeClearOngoingAnomalyDetectionTimeMs();\n+    _anomalyDetector.resetHasUnfixableGoals();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ=="}, "originalCommit": {"oid": "74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1NjAxMg==", "bodyText": "I see, thanks for the explanation.", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379656012", "createdAt": "2020-02-14T21:37:36Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -555,6 +555,7 @@ private void startExecution(LoadMonitor loadMonitor,\n     sanityCheckOngoingMovement();\n     _hasOngoingExecution = true;\n     _anomalyDetector.maybeClearOngoingAnomalyDetectionTimeMs();\n+    _anomalyDetector.resetHasUnfixableGoals();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ=="}, "originalCommit": {"oid": "74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 778, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}