{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTE0OTU1", "number": 1196, "title": "Add AdminClient-based replica reassignment.", "bodyText": "Addresses the issue #1167 by adopting the admin client-based replica reassignment API for Kafka 2.4+ on development branch migrate_to_kafka_2_4.\n-- This patch does not address #1195.", "createdAt": "2020-05-20T05:25:04Z", "url": "https://github.com/linkedin/cruise-control/pull/1196", "merged": true, "mergeCommit": {"oid": "1f6214203076b97ed788ccef7815a6184a3d9438"}, "closed": true, "closedAt": "2020-05-21T00:32:46Z", "author": {"login": "efeg"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjB8kxAH2gAyNDIwNTE0OTU1OjMxMDlmMjFmYjkxMDNlNjQ1MWM5NTZiNDE3OTY4YTkwMTAzMGVhMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjSjXUgFqTQxNTgwMzUwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3109f21fb9103e6451c956b417968a901030ea13", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/3109f21fb9103e6451c956b417968a901030ea13", "committedDate": "2020-05-20T05:09:30Z", "message": "Add AdminClient-based replica reassignment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/dc5b844a126df2f46e3b13004fefed6dc6de8583", "committedDate": "2020-05-20T18:07:22Z", "message": "Make CircleCI happy."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28032142e7bd41d68c84d620d0dfe8b212026db4", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/28032142e7bd41d68c84d620d0dfe8b212026db4", "committedDate": "2020-05-20T17:37:52Z", "message": "Make CircleCI happy."}, "afterCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/dc5b844a126df2f46e3b13004fefed6dc6de8583", "committedDate": "2020-05-20T18:07:22Z", "message": "Make CircleCI happy."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTg2MzI2", "url": "https://github.com/linkedin/cruise-control/pull/1196#pullrequestreview-415586326", "createdAt": "2020-05-20T18:03:23Z", "commit": {"oid": "28032142e7bd41d68c84d620d0dfe8b212026db4"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxMzowM1rOGYX-OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTowOTo0NlrOGYaJew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMTc2OQ==", "bodyText": "should we apply the same exception handling logic to isOngoingIntraBrokerReplicaMovement() ? currently in side that method we ignore these exception.", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428211769", "createdAt": "2020-05-20T18:13:03Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -573,8 +576,15 @@ private void startExecution(LoadMonitor loadMonitor,\n    * Sanity check whether there are ongoing (1) inter-broker or intra-broker replica movements or (2) leadership movements.\n    */\n   private void sanityCheckOngoingMovement() throws OngoingExecutionException {\n+    boolean hasOngoingPartitionReassignments;\n+    try {\n+      hasOngoingPartitionReassignments = hasOngoingPartitionReassignments();\n+    } catch (TimeoutException | InterruptedException | ExecutionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyODU2Nw==", "bodyText": "nit: update Javadoc of this method.\nalso the description seems inaccurate, we are checking the latest metadata instead of zookeeper for task finish status.", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428228567", "createdAt": "2020-05-20T18:38:10Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1157,7 +1167,8 @@ private void deleteZNodesToStopExecution() {\n     /**\n      * This method periodically checks ZooKeeper to see if (1) partition or (2) leadership reassignment has finished or not.\n      */\n-    private List<ExecutionTask> waitForExecutionTaskToFinish() {\n+    private List<ExecutionTask> waitForExecutionTaskToFinish(AlterPartitionReassignmentsResult result)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0MDQzOQ==", "bodyText": "Should we add a timeout here?", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428240439", "createdAt": "2020-05-20T18:57:53Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1403,6 +1417,17 @@ private boolean maybeMarkTaskAsDeadOrAborting(Cluster cluster,\n       return false;\n     }\n \n+    private boolean verifyFutureError(Future<?> future, Class<? extends Throwable> exceptionClass) {\n+      try {\n+        future.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583"}, "originalPosition": 323}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NTU5OA==", "bodyText": "After switch to use admin client, this method seems redundant. should remove this one?", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428245598", "createdAt": "2020-05-20T19:06:45Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/scala/com/linkedin/kafka/cruisecontrol/executor/ExecutorUtils.scala", "diffHunk": "@@ -26,16 +26,16 @@ object ExecutorUtils {\n    * within the cluster, (2) introduce a new replica to the cluster (3) remove an existing replica from the cluster.\n    *\n    * @param kafkaZkClient the KafkaZkClient class to use for partition reassignment.\n-   * @param reassignmentTasks Replica reassignment tasks to be executed.\n+   * @param tasksToExecute Replica reassignment tasks to be executed.\n    */\n   def executeReplicaReassignmentTasks(kafkaZkClient: KafkaZkClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NzQxOQ==", "bodyText": "This method seems not used?", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428247419", "createdAt": "2020-05-20T19:09:46Z", "author": {"login": "kidkun"}, "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java", "diffHunk": "@@ -99,6 +99,10 @@ public void awaitShutdown() {\n     _kafkaServer.awaitShutdown();\n   }\n \n+  public KafkaServer kafkaServer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/3503f2e3bb64e5705da55d172ed7285c45598c0f", "committedDate": "2020-05-20T21:48:41Z", "message": "Address the feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODAzNTAz", "url": "https://github.com/linkedin/cruise-control/pull/1196#pullrequestreview-415803503", "createdAt": "2020-05-21T00:30:21Z", "commit": {"oid": "3503f2e3bb64e5705da55d172ed7285c45598c0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 224, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}