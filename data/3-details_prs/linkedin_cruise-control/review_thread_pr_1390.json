{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjY2Njg1", "number": 1390, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNjo1N1rOE7P8Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzozMTowOVrOE7WRTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYyNjIzOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNjo1N1rOH2yUgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNjo1N1rOH2yUgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwOTYwMA==", "bodyText": "I think this is exactly the case where the lazy-evaluation validateNotNull(T obj, Supplier<String> errorMsgSupplier) method needs to be used since in the previous version, \"The destination broker cannot be null for balancing action \" + this does not get executed unless _destinationBrokerId == null is true. So, the change should be:\nvalidateNotNull(_destinationBrokerId, () -> \"The destination broker cannot be null for balancing action \" + this);", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527209600", "createdAt": "2020-11-19T21:26:57Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYyODc3OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNzo0NFrOH2yWBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNzo0NFrOH2yWBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwOTk5MQ==", "bodyText": "Same issue. Use lazy evaluation.", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527209991", "createdAt": "2020-11-19T21:27:44Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);\n+        if (_sourceBrokerId != null) {\n           throw new IllegalArgumentException(\"The source broker should be null for balancing action \" + this);\n         }\n         break;\n       case REPLICA_DELETION:\n         if (_destinationBrokerId != null) {\n           throw new IllegalArgumentException(\"The destination broker should be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-      throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n         }\n+        validateNotNull(_sourceBrokerId, \"The source broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYyOTA4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNzo1MlrOH2yWRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNzo1MlrOH2yWRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMDA1Mg==", "bodyText": "Same issue. Use lazy evaluation.", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527210052", "createdAt": "2020-11-19T21:27:52Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);\n+        if (_sourceBrokerId != null) {\n           throw new IllegalArgumentException(\"The source broker should be null for balancing action \" + this);\n         }\n         break;\n       case REPLICA_DELETION:\n         if (_destinationBrokerId != null) {\n           throw new IllegalArgumentException(\"The destination broker should be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-      throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n         }\n+        validateNotNull(_sourceBrokerId, \"The source broker cannot be null for balancing action \" + this);\n         break;\n       case INTER_BROKER_REPLICA_MOVEMENT:\n       case LEADERSHIP_MOVEMENT:\n       case INTER_BROKER_REPLICA_SWAP:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-          throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n-        }\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYzMzQwOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/OptimizationOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyOToxMFrOH2yY4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyOToxMFrOH2yY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMDcyMg==", "bodyText": "Since validateNotNull  returns the object if it's not null, you can do:\n_excludedTopics = validateNotNull(excludedTopics, \"Excluded topics cannot be null.\");\n_excludedBrokersForLeadership = validateNotNull(excludedBrokersForLeadership, \"Excluded brokers for leadership cannot be null.\");\n...", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527210722", "createdAt": "2020-11-19T21:29:10Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/OptimizationOptions.java", "diffHunk": "@@ -73,15 +75,10 @@ public OptimizationOptions(Set<String> excludedTopics,\n                              boolean isTriggeredByGoalViolation,\n                              Set<Integer> requestedDestinationBrokerIds,\n                              boolean onlyMoveImmigrantReplicas) {\n-    if (excludedTopics == null) {\n-      throw new IllegalArgumentException(\"Excluded topics cannot be null.\");\n-    } else if (excludedBrokersForLeadership == null) {\n-      throw new IllegalArgumentException(\"Excluded brokers for leadership cannot be null.\");\n-    } else if (excludedBrokersForReplicaMove == null) {\n-      throw new IllegalArgumentException(\"Excluded brokers for replica move cannot be null.\");\n-    } else if (requestedDestinationBrokerIds == null) {\n-      throw new IllegalArgumentException(\"Requested destination broker ids cannot be null.\");\n-    }\n+    validateNotNull(excludedTopics, \"Excluded topics cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYzNjc1OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/AnomalyUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozMDowNFrOH2ya4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozMDowNFrOH2ya4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMTIzMg==", "bodyText": "We can do return validateNotNull(...)", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527211232", "createdAt": "2020-11-19T21:30:04Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/AnomalyUtils.java", "diffHunk": "@@ -35,10 +36,8 @@ private AnomalyUtils() {\n   public static KafkaCruiseControl extractKafkaCruiseControlObjectFromConfig(Map<String, ?> configs,\n                                                                             AnomalyType anomalyType) {\n     KafkaCruiseControl kafkaCruiseControl = (KafkaCruiseControl) configs.get(KAFKA_CRUISE_CONTROL_OBJECT_CONFIG);\n-    if (kafkaCruiseControl == null) {\n-      throw new IllegalArgumentException(String.format(\"Missing %s when creating anomaly of type %s.\",\n-                                                       KAFKA_CRUISE_CONTROL_OBJECT_CONFIG, anomalyType));\n-    }\n+    validateNotNull(kafkaCruiseControl, String.format(\"Missing %s when creating anomaly of type %s.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTYzODA4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozMDoyOVrOH2ybrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozMDoyOVrOH2ybrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMTQzOQ==", "bodyText": "Same issue: _uuid  = validateNotNull(uuid, \"UUID of the execution cannot be null.\");", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527211439", "createdAt": "2020-11-19T21:30:29Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -739,12 +740,8 @@ public synchronized void setGeneratingProposalsForExecution(String uuid, Supplie\n     if (currentExecutorState != NO_TASK_IN_PROGRESS) {\n       throw new OngoingExecutionException(String.format(\"Cannot generate proposals while the executor is in %s state.\", currentExecutorState));\n     }\n-    if (uuid == null) {\n-      throw new IllegalArgumentException(\"UUID of the execution cannot be null.\");\n-    }\n-    if (reasonSupplier == null) {\n-      throw new IllegalArgumentException(\"Reason supplier cannot be null.\");\n-    }\n+    validateNotNull(uuid, \"UUID of the execution cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjY2MzE2OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzozMTowOVrOH28MZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoxODo1M1rOH3Ndsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM3MTM2Nw==", "bodyText": "Instead of reusing the error message, I think we can be more specific by:\n_recentlyRemovedBrokers = validateNotNull(recentlyRemovedBrokers, \"Attempt to set a null value for recent removed brokers.\");\n_recentlyDemotedBrokers = validateNotNull(recentlyDemotedBrokers, \"Attempt to set a null value for recent demoted brokers.\");", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527371367", "createdAt": "2020-11-20T03:31:09Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "diffHunk": "@@ -354,11 +355,9 @@ public static void sanityCheckOfflineReplicaPresence(ClusterModel clusterModel)\n     private final Set<Integer> _recentlyDemotedBrokers;\n \n     public RecentBrokers(Set<Integer> recentlyRemovedBrokers, Set<Integer> recentlyDemotedBrokers) {\n-      if (recentlyRemovedBrokers == null || recentlyDemotedBrokers == null) {\n-        throw new IllegalArgumentException(\"Attempt to set a null value for recent brokers.\");\n-      }\n-      _recentlyRemovedBrokers = recentlyRemovedBrokers;\n-      _recentlyDemotedBrokers = recentlyDemotedBrokers;\n+      String errorMsg = \"Attempt to set a null value for recent brokers.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "179bd3d4acd6b268c715449b2414873693344f6a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NDMyMw==", "bodyText": "Thanks for your input. I've made the error message more specific.", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527654323", "createdAt": "2020-11-20T12:18:53Z", "author": {"login": "MA-Burhan"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "diffHunk": "@@ -354,11 +355,9 @@ public static void sanityCheckOfflineReplicaPresence(ClusterModel clusterModel)\n     private final Set<Integer> _recentlyDemotedBrokers;\n \n     public RecentBrokers(Set<Integer> recentlyRemovedBrokers, Set<Integer> recentlyDemotedBrokers) {\n-      if (recentlyRemovedBrokers == null || recentlyDemotedBrokers == null) {\n-        throw new IllegalArgumentException(\"Attempt to set a null value for recent brokers.\");\n-      }\n-      _recentlyRemovedBrokers = recentlyRemovedBrokers;\n-      _recentlyDemotedBrokers = recentlyDemotedBrokers;\n+      String errorMsg = \"Attempt to set a null value for recent brokers.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM3MTM2Nw=="}, "originalCommit": {"oid": "179bd3d4acd6b268c715449b2414873693344f6a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}