{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzU5MTE0", "number": 1198, "title": "Environment variable resolution in configs", "bodyText": "This commit enables parsing config values from environment variables.\nThis is particularly useful if passwords can't be hardcoded in the config\nfiles but instead passed to Cruise Control via an environment variable.\nFor instance if there is a MY_PASSWORD=test123 then defining the following\nconfig in cruisecontrol.properties will be resolved on startup to the\nactual password.\nConfig file on the disk: config.name=${env:MY_ENV_VAR}\nResolved runtime config: config.name=test123\nThis fixes #1197", "createdAt": "2020-05-20T13:41:20Z", "url": "https://github.com/linkedin/cruise-control/pull/1198", "merged": true, "mergeCommit": {"oid": "d6323f79cdd1320b075f68689b0c8193b19c545c"}, "closed": true, "closedAt": "2020-06-18T20:17:23Z", "author": {"login": "viktorsomogyi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjJGjUAH2gAyNDIwNzU5MTE0OmE3MjYxMjVkYTc4NjVlNGVlNGE3N2I2ODllY2NhOWI2OGMzNjI3NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcshVVNgFqTQzMzQ2OTAyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e", "author": {"user": {"login": "viktorsomogyi", "name": "Viktor Somogyi-Vass"}}, "url": "https://github.com/linkedin/cruise-control/commit/a726125da7865e4ee4a77b689ecca9b68c36274e", "committedDate": "2020-05-20T13:29:44Z", "message": "Environment variable resolution in configs\n\nThis commit enables parsing config values from environment variables.\nThis is particularly useful if passwords can't be hardcoded in the config\nfiles but instead passed to Cruise Control via an environment variable.\nFor instance if there is a MY_PASSWORD=test123 then defining the following\nconfig in cruisecontrol.properties will be resolved on startup to the\nactual password.\n\nConfig file on the disk:              Resolved runtime config:\nconfig.name=${env:MY_ENV_VAR}   ==>   config.name=test123"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTg1NTY4", "url": "https://github.com/linkedin/cruise-control/pull/1198#pullrequestreview-421185568", "createdAt": "2020-05-29T18:20:25Z", "commit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoyMDoyNVrOGcna-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo0MzoyN1rOGcoGzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1OTE5NQ==", "bodyText": "These hardcoded config names and the way the user is expected to name their environment variables to pass them to CC is not very clear. Would it help if we (1) refer to the following names rather than hardcoding these configs:\n\nAbstractConfig#CONFIG_PROVIDERS_CONFIG, and\nAbstractConfig#CONFIG_PROVIDERS_PARAM\n\nand (2) provide a brief section in Configurations.md regarding how to name env variables to pass them to CC?", "url": "https://github.com/linkedin/cruise-control/pull/1198#discussion_r432659195", "createdAt": "2020-05-29T18:20:25Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "diffHunk": "@@ -541,4 +547,20 @@ public static void sanityCheckNonExistingGoal(List<String> goals, Map<String, Go\n \n     return balancednessCostByGoal;\n   }\n+\n+  /**\n+   * Reads the configuration file, parses and validates the configs.\n+   * @param propertiesFile is the file containing the Cruise Control configuration.\n+   * @return a parsed {@link KafkaCruiseControlConfig}\n+   * @throws IOException if the configuration file can't be read.\n+   */\n+  public static KafkaCruiseControlConfig readConfig(String propertiesFile) throws IOException {\n+    Properties props = new Properties();\n+    try (InputStream propStream = new FileInputStream(propertiesFile)) {\n+      props.put(\"config.providers\", \"env\");\n+      props.put(\"config.providers.env.class\", EnvConfigProvider.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MTk5MA==", "bodyText": "Should we also mention the properties that enable configs to be provided out of the configuration file?\nIs it intentional to override these hardcoded properties if they were also defined in the configuration file?", "url": "https://github.com/linkedin/cruise-control/pull/1198#discussion_r432661990", "createdAt": "2020-05-29T18:25:46Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/KafkaCruiseControlUtils.java", "diffHunk": "@@ -541,4 +547,20 @@ public static void sanityCheckNonExistingGoal(List<String> goals, Map<String, Go\n \n     return balancednessCostByGoal;\n   }\n+\n+  /**\n+   * Reads the configuration file, parses and validates the configs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODcxNw==", "bodyText": "Should we clear() _preConfiguredEnvironmentVariables?", "url": "https://github.com/linkedin/cruise-control/pull/1198#discussion_r432668717", "createdAt": "2020-05-29T18:40:00Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/EnvConfigProvider.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.config;\n+\n+import org.apache.kafka.common.config.ConfigData;\n+import org.apache.kafka.common.config.ConfigException;\n+import org.apache.kafka.common.config.provider.ConfigProvider;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class EnvConfigProvider implements ConfigProvider {\n+\n+  private Map<String, String> _preConfiguredEnvironmentVariables;\n+\n+  @Override\n+  public ConfigData get(String path) {\n+    assertNoPath(path);\n+    return new ConfigData(getenv());\n+  }\n+\n+  @Override\n+  public ConfigData get(String path, Set<String> keys) {\n+    assertNoPath(path);\n+    Map<String, String> filtered = new HashMap<>(getenv());\n+    filtered.keySet().retainAll(keys);\n+    return new ConfigData(filtered);\n+  }\n+\n+  @Override\n+  public void close() {\n+    // nop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MDQxMg==", "bodyText": "Nit: Is it possible to move the hardcoded value to a static variable?", "url": "https://github.com/linkedin/cruise-control/pull/1198#discussion_r432670412", "createdAt": "2020-05-29T18:43:27Z", "author": {"login": "efeg"}, "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/config/EnvConfigProviderTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.config;\n+\n+import com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils;\n+import com.linkedin.kafka.cruisecontrol.config.constants.WebServerConfig;\n+import org.apache.kafka.common.config.types.Password;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class EnvConfigProviderTest {\n+\n+  public static final String TEST_PASSWORD = \"testPassword123\";\n+  public static final String NOT_SUBSTITUTED_CONFIG = \"${env:SSL_KEY_PASSWORD}\";\n+\n+  @Test\n+  public void testEnvConfigProvider() throws IOException {\n+    KafkaCruiseControlConfig configs = KafkaCruiseControlUtils.readConfig(\n+        Objects.requireNonNull(this.getClass().getClassLoader().getResource(\"envConfigProviderTest.properties\")).getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a726125da7865e4ee4a77b689ecca9b68c36274e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "debe6d0c0e94dc6aad9cc0861195a0e8aa4b7c7e", "author": {"user": {"login": "viktorsomogyi", "name": "Viktor Somogyi-Vass"}}, "url": "https://github.com/linkedin/cruise-control/commit/debe6d0c0e94dc6aad9cc0861195a0e8aa4b7c7e", "committedDate": "2020-06-18T12:56:37Z", "message": "Fix review comments\n\nChange-Id: I1759b4c0f0a2dba59f59d1aa7838aef2d8205e6d"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDY5MDI0", "url": "https://github.com/linkedin/cruise-control/pull/1198#pullrequestreview-433469024", "createdAt": "2020-06-18T16:48:55Z", "commit": {"oid": "debe6d0c0e94dc6aad9cc0861195a0e8aa4b7c7e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 227, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}