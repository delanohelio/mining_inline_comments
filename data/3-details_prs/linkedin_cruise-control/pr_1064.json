{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMjMxMjk1", "number": 1064, "title": "Skip broker with no log flush metrics in slow broker detection.", "bodyText": "Addresses the issue #1053", "createdAt": "2020-01-10T01:13:34Z", "url": "https://github.com/linkedin/cruise-control/pull/1064", "merged": true, "mergeCommit": {"oid": "a64dc7d9cdd7e23f2dcb6189bbc48dd1b511a780"}, "closed": true, "closedAt": "2020-01-13T19:17:19Z", "author": {"login": "kidkun"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb40C4fAH2gAyMzYxMjMxMjk1Ojg4NjE1YTJjYzFkZDlkMWRlNTY2NzA5ZjE4OTI2YjJiOWI2OGYzZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6BV_uAH2gAyMzYxMjMxMjk1OmI1NGNkNjM1MmVkM2M1MmMzZjc4ZWYzOGM2ZmIxYThhNTQyNzdjODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/88615a2cc1dd9d1de566709f18926b2b9b68f3ef", "committedDate": "2020-01-10T01:12:54Z", "message": "Skip broker with no log flush metrics in slow broker detection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDcyNTQx", "url": "https://github.com/linkedin/cruise-control/pull/1064#pullrequestreview-341472541", "createdAt": "2020-01-10T23:24:42Z", "commit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzoyNDo0MlrOFcieCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzozMzowOFrOFciknQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2OTE5NQ==", "bodyText": "Is it possible to make this more generic by making this sanity check in a util function?  -- e.g. please see how we handle similar operation in HolderUtils#allowMissingBrokerMetric(Cluster, int, RawMetricType).", "url": "https://github.com/linkedin/cruise-control/pull/1064#discussion_r365469195", "createdAt": "2020-01-10T23:24:42Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -112,19 +113,26 @@ public SlowBrokerFinder() {\n     // Preprocess raw metrics to get the derived metrics for each broker.\n     Map<BrokerEntity, List<Double>> historicalValueByBroker = new HashMap<>();\n     Map<BrokerEntity, Double> currentValueByBroker = new HashMap<>();\n+    Set<Integer> skippedBrokers = new HashSet<>();\n     for (Map.Entry<BrokerEntity, ValuesAndExtrapolations> entry : currentMetricsByBroker.entrySet()) {\n       BrokerEntity entity = entry.getKey();\n-      ValuesAndExtrapolations valuesAndExtrapolations = entry.getValue();\n-      double latestTotalBytesIn = valuesAndExtrapolations.metricValues().valuesFor(ALL_TOPIC_BYTES_IN.id()).latest() +\n-                                  valuesAndExtrapolations.metricValues().valuesFor(ALL_TOPIC_REPLICATION_BYTES_IN.id()).latest();\n-      double latestLogFlushTime = valuesAndExtrapolations.metricValues().valuesFor(BROKER_LOG_FLUSH_TIME_MS_999TH.id()).latest();\n+      AggregatedMetricValues aggregatedMetricValues = entry.getValue().metricValues();\n+      // BROKER_LOG_FLUSH_TIME_MS_999TH comes from a Timer metric, which may not report if there is no value recorded (\n+      // the broker serves no traffic and never performs log flush operation).\n+      if (aggregatedMetricValues.valuesFor(BROKER_LOG_FLUSH_TIME_MS_999TH.id()) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ2OTUwOQ==", "bodyText": "(Not introduced in this patch) Nit: Can we make SELF_HEALING_UNFIXABLE_RATIO a final?", "url": "https://github.com/linkedin/cruise-control/pull/1064#discussion_r365469509", "createdAt": "2020-01-10T23:26:06Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -112,19 +113,26 @@ public SlowBrokerFinder() {\n     // Preprocess raw metrics to get the derived metrics for each broker.\n     Map<BrokerEntity, List<Double>> historicalValueByBroker = new HashMap<>();\n     Map<BrokerEntity, Double> currentValueByBroker = new HashMap<>();\n+    Set<Integer> skippedBrokers = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MDU0Ng==", "bodyText": "Can we move the computation of latestTotalBytesIn and latestLogFlushTime to functions? This makes them easier to unit test and makes these calculations self-contained; hence, it makes it easier to use additional or different metrics in the future -- e.g. BROKER_LOG_FLUSH_TIME_MS_99TH rather than BROKER_LOG_FLUSH_TIME_MS_999TH.", "url": "https://github.com/linkedin/cruise-control/pull/1064#discussion_r365470546", "createdAt": "2020-01-10T23:31:17Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -112,19 +113,26 @@ public SlowBrokerFinder() {\n     // Preprocess raw metrics to get the derived metrics for each broker.\n     Map<BrokerEntity, List<Double>> historicalValueByBroker = new HashMap<>();\n     Map<BrokerEntity, Double> currentValueByBroker = new HashMap<>();\n+    Set<Integer> skippedBrokers = new HashSet<>();\n     for (Map.Entry<BrokerEntity, ValuesAndExtrapolations> entry : currentMetricsByBroker.entrySet()) {\n       BrokerEntity entity = entry.getKey();\n-      ValuesAndExtrapolations valuesAndExtrapolations = entry.getValue();\n-      double latestTotalBytesIn = valuesAndExtrapolations.metricValues().valuesFor(ALL_TOPIC_BYTES_IN.id()).latest() +\n-                                  valuesAndExtrapolations.metricValues().valuesFor(ALL_TOPIC_REPLICATION_BYTES_IN.id()).latest();\n-      double latestLogFlushTime = valuesAndExtrapolations.metricValues().valuesFor(BROKER_LOG_FLUSH_TIME_MS_999TH.id()).latest();\n+      AggregatedMetricValues aggregatedMetricValues = entry.getValue().metricValues();\n+      // BROKER_LOG_FLUSH_TIME_MS_999TH comes from a Timer metric, which may not report if there is no value recorded (\n+      // the broker serves no traffic and never performs log flush operation).\n+      if (aggregatedMetricValues.valuesFor(BROKER_LOG_FLUSH_TIME_MS_999TH.id()) == null) {\n+        skippedBrokers.add(entity.brokerId());\n+        continue;\n+      }\n+      double latestLogFlushTime = aggregatedMetricValues.valuesFor(BROKER_LOG_FLUSH_TIME_MS_999TH.id()).latest();\n+      double latestTotalBytesIn = aggregatedMetricValues.valuesFor(ALL_TOPIC_BYTES_IN.id()).latest() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3MDg3Nw==", "bodyText": "Nit: no traffic or negligible traffic?", "url": "https://github.com/linkedin/cruise-control/pull/1064#discussion_r365470877", "createdAt": "2020-01-10T23:33:08Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -133,9 +141,15 @@ public SlowBrokerFinder() {\n           }\n         }\n         historicalValueByBroker.put(entity, historicalValue);\n+      } else {\n+        skippedBrokers.add(entity.brokerId());\n       }\n     }\n \n+    if (!skippedBrokers.isEmpty()) {\n+      LOG.info(\"Skip broker slowness checking for brokers {} because they serve no traffic.\", skippedBrokers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88615a2cc1dd9d1de566709f18926b2b9b68f3ef"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b54cd6352ed3c52c3f78ef38c6fb1a8a54277c83", "author": {"user": null}, "url": "https://github.com/linkedin/cruise-control/commit/b54cd6352ed3c52c3f78ef38c6fb1a8a54277c83", "committedDate": "2020-01-13T19:16:28Z", "message": "Address the feedback."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 272, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}