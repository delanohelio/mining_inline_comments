{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNjY2Njg1", "number": 1390, "title": "Convert traditional null checks to use Utils.validateNotNull", "bodyText": "This PR resolves #1387.", "createdAt": "2020-11-17T19:50:52Z", "url": "https://github.com/linkedin/cruise-control/pull/1390", "merged": true, "mergeCommit": {"oid": "471fa68e23cf3d0ed012127329fa2c3d312419a0"}, "closed": true, "closedAt": "2020-11-21T00:10:19Z", "author": {"login": "MA-Burhan"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddc2chgH2gAyNTIyNjY2Njg1OmQyNDVmNDllNzY2Y2I3NjdhNTNjZjQ0YWExOGIwMjg5Mjc1Njc4YTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdebjblAFqTUzNTY3NDIzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d245f49e766cb767a53cf44aa18b0289275678a3", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/d245f49e766cb767a53cf44aa18b0289275678a3", "committedDate": "2020-11-17T17:17:51Z", "message": "Converts traditional null checks to use Objects.requireNonNull where applicable. Issue #1387."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDczNjgw", "url": "https://github.com/linkedin/cruise-control/pull/1390#pullrequestreview-534073680", "createdAt": "2020-11-19T04:29:43Z", "commit": {"oid": "d245f49e766cb767a53cf44aa18b0289275678a3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb777ac49973f2814f89e1c09aed4b91257cd431", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/eb777ac49973f2814f89e1c09aed4b91257cd431", "committedDate": "2020-11-19T14:23:52Z", "message": "Add two static methods to the Utils class that check object reference for nullity. Issue #1387."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a502098d4d93c09d0ad31d6da48fff324844079", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/5a502098d4d93c09d0ad31d6da48fff324844079", "committedDate": "2020-11-19T17:21:16Z", "message": "Modify the static methods validateNotNull to throw an IllegalArgumentException instead of a NullpointerException, if specified object reference is null. Issue #1387."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe80c160802c8d85005a12f126e5ea773f39b85", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/bfe80c160802c8d85005a12f126e5ea773f39b85", "committedDate": "2020-11-19T18:27:20Z", "message": "Refactor static methods validateNotNull in Utils class. Issue #1387."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "053d1535d22775aef7171d40aab5409005f51658", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/053d1535d22775aef7171d40aab5409005f51658", "committedDate": "2020-11-19T18:34:59Z", "message": "Convert traditional null checks to use Utils.validateNotNull. Issue #1387"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "504f696ebbdb98f9b4712e93c4d722a6f8510cbf", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/504f696ebbdb98f9b4712e93c4d722a6f8510cbf", "committedDate": "2020-11-19T18:52:06Z", "message": "Fix a typo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169fb36b7cda8c53d762868e83e4333c558418a4", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/169fb36b7cda8c53d762868e83e4333c558418a4", "committedDate": "2020-11-19T19:42:58Z", "message": "Remove unused import in Utils class.\nRevert back to using traditional null check in Broker constructor, due to failed checks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/88d5af655a4c654d502cc432bdbada29c75fa799", "committedDate": "2020-11-19T19:51:51Z", "message": "Refactor static validateNotNull methods in Utils class to comply to style rules."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODY1MTk1", "url": "https://github.com/linkedin/cruise-control/pull/1390#pullrequestreview-534865195", "createdAt": "2020-11-19T21:26:57Z", "commit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMToyNjo1N1rOH2yUgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTozMDoyOVrOH2ybrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwOTYwMA==", "bodyText": "I think this is exactly the case where the lazy-evaluation validateNotNull(T obj, Supplier<String> errorMsgSupplier) method needs to be used since in the previous version, \"The destination broker cannot be null for balancing action \" + this does not get executed unless _destinationBrokerId == null is true. So, the change should be:\nvalidateNotNull(_destinationBrokerId, () -> \"The destination broker cannot be null for balancing action \" + this);", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527209600", "createdAt": "2020-11-19T21:26:57Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIwOTk5MQ==", "bodyText": "Same issue. Use lazy evaluation.", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527209991", "createdAt": "2020-11-19T21:27:44Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);\n+        if (_sourceBrokerId != null) {\n           throw new IllegalArgumentException(\"The source broker should be null for balancing action \" + this);\n         }\n         break;\n       case REPLICA_DELETION:\n         if (_destinationBrokerId != null) {\n           throw new IllegalArgumentException(\"The destination broker should be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-      throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n         }\n+        validateNotNull(_sourceBrokerId, \"The source broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMDA1Mg==", "bodyText": "Same issue. Use lazy evaluation.", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527210052", "createdAt": "2020-11-19T21:27:52Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/BalancingAction.java", "diffHunk": "@@ -127,41 +129,29 @@ private BalancingAction(TopicPartition sourceTp,\n   private void validate() {\n     switch (_actionType) {\n       case REPLICA_ADDITION:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId != null) {\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);\n+        if (_sourceBrokerId != null) {\n           throw new IllegalArgumentException(\"The source broker should be null for balancing action \" + this);\n         }\n         break;\n       case REPLICA_DELETION:\n         if (_destinationBrokerId != null) {\n           throw new IllegalArgumentException(\"The destination broker should be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-      throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n         }\n+        validateNotNull(_sourceBrokerId, \"The source broker cannot be null for balancing action \" + this);\n         break;\n       case INTER_BROKER_REPLICA_MOVEMENT:\n       case LEADERSHIP_MOVEMENT:\n       case INTER_BROKER_REPLICA_SWAP:\n-        if (_destinationBrokerId == null) {\n-          throw new IllegalArgumentException(\"The destination broker cannot be null for balancing action \" + this);\n-        } else if (_sourceBrokerId == null) {\n-          throw new IllegalArgumentException(\"The source broker cannot be null for balancing action \" + this);\n-        }\n+        validateNotNull(_destinationBrokerId, \"The destination broker cannot be null for balancing action \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMDcyMg==", "bodyText": "Since validateNotNull  returns the object if it's not null, you can do:\n_excludedTopics = validateNotNull(excludedTopics, \"Excluded topics cannot be null.\");\n_excludedBrokersForLeadership = validateNotNull(excludedBrokersForLeadership, \"Excluded brokers for leadership cannot be null.\");\n...", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527210722", "createdAt": "2020-11-19T21:29:10Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/OptimizationOptions.java", "diffHunk": "@@ -73,15 +75,10 @@ public OptimizationOptions(Set<String> excludedTopics,\n                              boolean isTriggeredByGoalViolation,\n                              Set<Integer> requestedDestinationBrokerIds,\n                              boolean onlyMoveImmigrantReplicas) {\n-    if (excludedTopics == null) {\n-      throw new IllegalArgumentException(\"Excluded topics cannot be null.\");\n-    } else if (excludedBrokersForLeadership == null) {\n-      throw new IllegalArgumentException(\"Excluded brokers for leadership cannot be null.\");\n-    } else if (excludedBrokersForReplicaMove == null) {\n-      throw new IllegalArgumentException(\"Excluded brokers for replica move cannot be null.\");\n-    } else if (requestedDestinationBrokerIds == null) {\n-      throw new IllegalArgumentException(\"Requested destination broker ids cannot be null.\");\n-    }\n+    validateNotNull(excludedTopics, \"Excluded topics cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMTIzMg==", "bodyText": "We can do return validateNotNull(...)", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527211232", "createdAt": "2020-11-19T21:30:04Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/AnomalyUtils.java", "diffHunk": "@@ -35,10 +36,8 @@ private AnomalyUtils() {\n   public static KafkaCruiseControl extractKafkaCruiseControlObjectFromConfig(Map<String, ?> configs,\n                                                                             AnomalyType anomalyType) {\n     KafkaCruiseControl kafkaCruiseControl = (KafkaCruiseControl) configs.get(KAFKA_CRUISE_CONTROL_OBJECT_CONFIG);\n-    if (kafkaCruiseControl == null) {\n-      throw new IllegalArgumentException(String.format(\"Missing %s when creating anomaly of type %s.\",\n-                                                       KAFKA_CRUISE_CONTROL_OBJECT_CONFIG, anomalyType));\n-    }\n+    validateNotNull(kafkaCruiseControl, String.format(\"Missing %s when creating anomaly of type %s.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIxMTQzOQ==", "bodyText": "Same issue: _uuid  = validateNotNull(uuid, \"UUID of the execution cannot be null.\");", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527211439", "createdAt": "2020-11-19T21:30:29Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -739,12 +740,8 @@ public synchronized void setGeneratingProposalsForExecution(String uuid, Supplie\n     if (currentExecutorState != NO_TASK_IN_PROGRESS) {\n       throw new OngoingExecutionException(String.format(\"Cannot generate proposals while the executor is in %s state.\", currentExecutorState));\n     }\n-    if (uuid == null) {\n-      throw new IllegalArgumentException(\"UUID of the execution cannot be null.\");\n-    }\n-    if (reasonSupplier == null) {\n-      throw new IllegalArgumentException(\"Reason supplier cannot be null.\");\n-    }\n+    validateNotNull(uuid, \"UUID of the execution cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d5af655a4c654d502cc432bdbada29c75fa799"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "179bd3d4acd6b268c715449b2414873693344f6a", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/179bd3d4acd6b268c715449b2414873693344f6a", "committedDate": "2020-11-20T00:31:50Z", "message": "Use lazy evaluation when error message is dynamically generated in ValidateNotNull method.\nUse the return value from the validateNotNull method directly where applicable.\nIssue #1387"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MDQ3OTAy", "url": "https://github.com/linkedin/cruise-control/pull/1390#pullrequestreview-535047902", "createdAt": "2020-11-20T03:31:08Z", "commit": {"oid": "179bd3d4acd6b268c715449b2414873693344f6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzozMTowOVrOH28MZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzozMTowOVrOH28MZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM3MTM2Nw==", "bodyText": "Instead of reusing the error message, I think we can be more specific by:\n_recentlyRemovedBrokers = validateNotNull(recentlyRemovedBrokers, \"Attempt to set a null value for recent removed brokers.\");\n_recentlyDemotedBrokers = validateNotNull(recentlyDemotedBrokers, \"Attempt to set a null value for recent demoted brokers.\");", "url": "https://github.com/linkedin/cruise-control/pull/1390#discussion_r527371367", "createdAt": "2020-11-20T03:31:09Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "diffHunk": "@@ -354,11 +355,9 @@ public static void sanityCheckOfflineReplicaPresence(ClusterModel clusterModel)\n     private final Set<Integer> _recentlyDemotedBrokers;\n \n     public RecentBrokers(Set<Integer> recentlyRemovedBrokers, Set<Integer> recentlyDemotedBrokers) {\n-      if (recentlyRemovedBrokers == null || recentlyDemotedBrokers == null) {\n-        throw new IllegalArgumentException(\"Attempt to set a null value for recent brokers.\");\n-      }\n-      _recentlyRemovedBrokers = recentlyRemovedBrokers;\n-      _recentlyDemotedBrokers = recentlyDemotedBrokers;\n+      String errorMsg = \"Attempt to set a null value for recent brokers.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "179bd3d4acd6b268c715449b2414873693344f6a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3628bee6abec6e2edada10620290aa3a5cb22ede", "author": {"user": {"login": "MA-Burhan", "name": "Mohamed-Amin Burhan"}}, "url": "https://github.com/linkedin/cruise-control/commit/3628bee6abec6e2edada10620290aa3a5cb22ede", "committedDate": "2020-11-20T12:16:37Z", "message": "Make error message for validateNotNoll method in RunnableUtils.RecentBrokers constructor more specific."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1Njc0MjMx", "url": "https://github.com/linkedin/cruise-control/pull/1390#pullrequestreview-535674231", "createdAt": "2020-11-20T18:21:06Z", "commit": {"oid": "3628bee6abec6e2edada10620290aa3a5cb22ede"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 110, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}