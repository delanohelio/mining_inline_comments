{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTg2NTM0", "number": 1123, "title": "Add an additional abstraction layer for goal-based operation runnables.", "bodyText": "Addresses the issue #1122.", "createdAt": "2020-02-28T03:42:15Z", "url": "https://github.com/linkedin/cruise-control/pull/1123", "merged": true, "mergeCommit": {"oid": "05d7fdde580706aa238eb89df6f273b89f927680"}, "closed": true, "closedAt": "2020-03-03T00:40:27Z", "author": {"login": "efeg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI4qhGAFqTM2NjczOTg3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI66ougBqjMwODQwOTczNDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzM5ODc1", "url": "https://github.com/linkedin/cruise-control/pull/1123#pullrequestreview-366739875", "createdAt": "2020-02-28T23:19:25Z", "commit": {"oid": "3ceb9a204cae666a26c0c8037a025378c2766bc7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzoxOToyNVrOFwFeLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzoyNjozNlrOFwFlKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NTYxNA==", "bodyText": "Nit : extracting -> extract", "url": "https://github.com/linkedin/cruise-control/pull/1123#discussion_r385965614", "createdAt": "2020-02-28T23:19:25Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable;\n+\n+import com.linkedin.cruisecontrol.exception.NotEnoughValidWindowsException;\n+import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n+import com.linkedin.kafka.cruisecontrol.analyzer.OptimizerResult;\n+import com.linkedin.kafka.cruisecontrol.analyzer.goals.Goal;\n+import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n+import com.linkedin.kafka.cruisecontrol.config.KafkaCruiseControlConfig;\n+import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.GoalBasedOptimizationParameters;\n+import java.util.List;\n+import java.util.concurrent.TimeoutException;\n+import java.util.regex.Pattern;\n+\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.goalsByPriority;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckGoals;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckLoadMonitorReadiness;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_DRYRUN;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_STOP_ONGOING_EXECUTION;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_MODEL_COMPLETENESS_REQUIREMENTS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_SKIP_HARD_GOAL_CHECK;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_EXCLUDED_TOPICS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.maybeStopOngoingExecutionToModifyAndWait;\n+\n+\n+/**\n+ * An abstract class to extracting the common logic of goal based operation runnables.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ceb9a204cae666a26c0c8037a025378c2766bc7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NzQwMQ==", "bodyText": "why DemoteBrokerRunnable does not extends from this new abstraction?", "url": "https://github.com/linkedin/cruise-control/pull/1123#discussion_r385967401", "createdAt": "2020-02-28T23:26:36Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable;\n+\n+import com.linkedin.cruisecontrol.exception.NotEnoughValidWindowsException;\n+import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n+import com.linkedin.kafka.cruisecontrol.analyzer.OptimizerResult;\n+import com.linkedin.kafka.cruisecontrol.analyzer.goals.Goal;\n+import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n+import com.linkedin.kafka.cruisecontrol.config.KafkaCruiseControlConfig;\n+import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.GoalBasedOptimizationParameters;\n+import java.util.List;\n+import java.util.concurrent.TimeoutException;\n+import java.util.regex.Pattern;\n+\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.goalsByPriority;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckGoals;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckLoadMonitorReadiness;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_DRYRUN;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_STOP_ONGOING_EXECUTION;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_MODEL_COMPLETENESS_REQUIREMENTS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_SKIP_HARD_GOAL_CHECK;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_EXCLUDED_TOPICS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.maybeStopOngoingExecutionToModifyAndWait;\n+\n+\n+/**\n+ * An abstract class to extracting the common logic of goal based operation runnables.\n+ */\n+public abstract class GoalBasedOperationRunnable extends OperationRunnable {\n+  protected final List<String> _goals;\n+  protected final ModelCompletenessRequirements _modelCompletenessRequirements;\n+  protected final boolean _dryRun;\n+  protected final boolean _stopOngoingExecution;\n+  protected final boolean _skipHardGoalCheck;\n+  protected final Pattern _excludedTopics;\n+  protected final boolean _allowCapacityEstimation;\n+  protected final boolean _excludeRecentlyDemotedBrokers;\n+  protected final boolean _excludeRecentlyRemovedBrokers;\n+  protected OperationProgress _operationProgress;\n+  // Combined completeness requirements to be used after initialization.\n+  protected ModelCompletenessRequirements _combinedCompletenessRequirements;\n+  protected List<Goal> _goalsByPriority;\n+\n+  public GoalBasedOperationRunnable(KafkaCruiseControl kafkaCruiseControl,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ceb9a204cae666a26c0c8037a025378c2766bc7"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49dcf4c0f3d58c668cb09b06e377850fb560509f", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/49dcf4c0f3d58c668cb09b06e377850fb560509f", "committedDate": "2020-02-29T02:07:53Z", "message": "Add an additional abstraction layer for goal-based operation runnables."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "committedDate": "2020-02-29T02:15:54Z", "message": "Address the feedback."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ceb9a204cae666a26c0c8037a025378c2766bc7", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/3ceb9a204cae666a26c0c8037a025378c2766bc7", "committedDate": "2020-02-28T03:40:43Z", "message": "Add an additional abstraction layer for goal-based operation runnables."}, "afterCommit": {"oid": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/linkedin/cruise-control/commit/c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "committedDate": "2020-02-29T02:15:54Z", "message": "Address the feedback."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 173, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}