{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MTQyODk0", "number": 1358, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDozMzoxN1rOEut0kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjo0Mzo1OFrOEuub5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDIwNjkwOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/model/Broker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDozMzoxN1rOHjS6VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzoxOTo0MlrOHjT2gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MjA1Mg==", "bodyText": "Can we add a JavaDoc?\nNit: _diskByLogdir.size() > 1 -> !_diskByLogdir.isEmpty()", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506772052", "createdAt": "2020-10-17T00:33:17Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/model/Broker.java", "diffHunk": "@@ -202,6 +202,10 @@ public boolean isAlive() {\n     return _state != State.DEAD;\n   }\n \n+  public boolean isUsingJBOD() {\n+    return _diskByLogdir.size() > 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MTYwNw==", "bodyText": "If we use !_diskByLogdir.isEmpty(), does that mean that the broker is using JBOD if and only if _diskByLogdir is NOT empty?\nI thought _diskByLogdir.size() == 1 means that the broker is using non-JBOD and _diskByLogdir .size() > 1  means that the broker is using JBOD. I am not sure what it means if _diskByLogdir.isEmpty()", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506781607", "createdAt": "2020-10-17T02:05:55Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/model/Broker.java", "diffHunk": "@@ -202,6 +202,10 @@ public boolean isAlive() {\n     return _state != State.DEAD;\n   }\n \n+  public boolean isUsingJBOD() {\n+    return _diskByLogdir.size() > 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MjA1Mg=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NDEwOA==", "bodyText": "If we use !_diskByLogdir.isEmpty(), does that mean that the broker is using JBOD if and only if _diskByLogdir is NOT empty?\n\nCorrect -- please see how we _diskByLogdir is initialized in constructor.\nNote that if a broker has 1 disk (i.e. non-JBOD), then the cluster model does not add another layer of abstraction -- i.e. keeps track of replicas per broker as opposed to replicas per disk in the broker, which would always be the same disk/logDir in a non-JBOD broker.", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506784108", "createdAt": "2020-10-17T02:35:51Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/model/Broker.java", "diffHunk": "@@ -202,6 +202,10 @@ public boolean isAlive() {\n     return _state != State.DEAD;\n   }\n \n+  public boolean isUsingJBOD() {\n+    return _diskByLogdir.size() > 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MjA1Mg=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NzQ1Nw==", "bodyText": "Got it. Thanks", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506787457", "createdAt": "2020-10-17T03:19:42Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/model/Broker.java", "diffHunk": "@@ -202,6 +202,10 @@ public boolean isAlive() {\n     return _state != State.DEAD;\n   }\n \n+  public boolean isUsingJBOD() {\n+    return _diskByLogdir.size() > 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MjA1Mg=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDIxNDI3OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDo0MDo1N1rOHjS-MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMTo1ODoxOVrOHjTdKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MzA0MA==", "bodyText": "Can we avoid checking _populateDiskInfo here again -- i.e. can't we do the following?\n} else if (!isClusterUsingJBOD()) {\n   ...\n}", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506773040", "createdAt": "2020-10-17T00:40:57Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MDk2OQ==", "bodyText": "Good idea!", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506780969", "createdAt": "2020-10-17T01:58:19Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MzA0MA=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDIxNTM0OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDo0MjowNFrOHjS-tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMTo1ODo0MlrOHjTdSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MzE3NQ==", "bodyText": "Nit: extra space.", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506773175", "createdAt": "2020-10-17T00:42:04Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {\n+      throw new UserRequestException(\"populate_disk_info = true when Kafka cluster is NOT using JBOD\");\n+    }\n+\n     if (_start != DEFAULT_START_TIME_FOR_CLUSTER_MODEL) {\n       return clusterModel(_modelCompletenessRequirements.minMonitoredPartitionsPercentage()).brokerStats(_kafkaCruiseControl.config());\n     } else {\n       return clusterModelFromEarliest().brokerStats(_kafkaCruiseControl.config());\n     }\n   }\n \n+  private boolean isClusterUsingJBOD() throws Exception {\n+    ClusterModel clusterModel = _kafkaCruiseControl.loadMonitor().clusterCapacity();\n+    // If and only if all brokers in the cluster are using JBOD, the cluster is considered to be using JBOD\n+    for (Broker broker : clusterModel.brokers()) {\n+      if (!broker.isUsingJBOD()) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MTAwMA==", "bodyText": "Fixed", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506781000", "createdAt": "2020-10-17T01:58:42Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {\n+      throw new UserRequestException(\"populate_disk_info = true when Kafka cluster is NOT using JBOD\");\n+    }\n+\n     if (_start != DEFAULT_START_TIME_FOR_CLUSTER_MODEL) {\n       return clusterModel(_modelCompletenessRequirements.minMonitoredPartitionsPercentage()).brokerStats(_kafkaCruiseControl.config());\n     } else {\n       return clusterModelFromEarliest().brokerStats(_kafkaCruiseControl.config());\n     }\n   }\n \n+  private boolean isClusterUsingJBOD() throws Exception {\n+    ClusterModel clusterModel = _kafkaCruiseControl.loadMonitor().clusterCapacity();\n+    // If and only if all brokers in the cluster are using JBOD, the cluster is considered to be using JBOD\n+    for (Broker broker : clusterModel.brokers()) {\n+      if (!broker.isUsingJBOD()) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MzE3NQ=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDIyMjk5OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDo1MDoyMVrOHjTCog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjowMDozMlrOHjTd8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3NDE3OA==", "bodyText": "Can we refrain from (1) using hardcoded parameter names and (2) emphasis via capitalization -- i.e. maybe we can use something like:\nthrow new UserRequestException(String.format(\"Cannot set %s=true for non-JBOD Kafka clusters.\", POPULATE_DISK_INFO_PARAM));", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506774178", "createdAt": "2020-10-17T00:50:21Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {\n+      throw new UserRequestException(\"populate_disk_info = true when Kafka cluster is NOT using JBOD\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MTE2OQ==", "bodyText": "Good idea", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506781169", "createdAt": "2020-10-17T02:00:32Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {\n+      throw new UserRequestException(\"populate_disk_info = true when Kafka cluster is NOT using JBOD\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3NDE3OA=="}, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDIyNTIyOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDo1MzowMlrOHjTDww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDo1MzowMlrOHjTDww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3NDQ2Nw==", "bodyText": "Nit: This seems like a good candidate to replace with stream API for conciseness:\nreturn clusterModel.brokers().stream().allMatch(Broker::isUsingJBOD);", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506774467", "createdAt": "2020-10-17T00:53:02Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -64,13 +66,29 @@ protected BrokerStats getResult() throws Exception {\n         return cachedBrokerStats;\n       }\n     }\n+    if (_populateDiskInfo && !isClusterUsingJBOD()) {\n+      throw new UserRequestException(\"populate_disk_info = true when Kafka cluster is NOT using JBOD\");\n+    }\n+\n     if (_start != DEFAULT_START_TIME_FOR_CLUSTER_MODEL) {\n       return clusterModel(_modelCompletenessRequirements.minMonitoredPartitionsPercentage()).brokerStats(_kafkaCruiseControl.config());\n     } else {\n       return clusterModelFromEarliest().brokerStats(_kafkaCruiseControl.config());\n     }\n   }\n \n+  private boolean isClusterUsingJBOD() throws Exception {\n+    ClusterModel clusterModel = _kafkaCruiseControl.loadMonitor().clusterCapacity();\n+    // If and only if all brokers in the cluster are using JBOD, the cluster is considered to be using JBOD\n+    for (Broker broker : clusterModel.brokers()) {\n+      if (!broker.isUsingJBOD()) {\n+        return false;\n+      }\n+    }\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd70883c090551a6f4f35c20342052ed993b39"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDMwNzU4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjo0Mzo1OFrOHjTr6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzowMzowNVrOHjTx9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NDc0Nw==", "bodyText": "Nit: Maybe we can avoid having the boilerplate ParameterUtils.XXX if we static import just the POPULATE_DISK_INFO_PARAM.\nimport static com.linkedin.kafka.cruisecontrol.servlet.parameters.ParameterUtils.POPULATE_DISK_INFO_PARAM;", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506784747", "createdAt": "2020-10-17T02:43:58Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -7,9 +7,12 @@\n import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.model.Broker;\n import com.linkedin.kafka.cruisecontrol.model.ClusterModel;\n import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.UserRequestException;\n import com.linkedin.kafka.cruisecontrol.servlet.parameters.ClusterLoadParameters;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.ParameterUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77298fb257dbc9c34a161667ec1edd1135e72116"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NjI5NA==", "bodyText": "OK. Fixed", "url": "https://github.com/linkedin/cruise-control/pull/1358#discussion_r506786294", "createdAt": "2020-10-17T03:03:05Z", "author": {"login": "Lincong"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/LoadRunnable.java", "diffHunk": "@@ -7,9 +7,12 @@\n import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.model.Broker;\n import com.linkedin.kafka.cruisecontrol.model.ClusterModel;\n import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.UserRequestException;\n import com.linkedin.kafka.cruisecontrol.servlet.parameters.ClusterLoadParameters;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.ParameterUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NDc0Nw=="}, "originalCommit": {"oid": "77298fb257dbc9c34a161667ec1edd1135e72116"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 710, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}