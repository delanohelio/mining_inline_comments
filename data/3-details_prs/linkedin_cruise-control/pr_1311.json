{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjYxNDk5", "number": 1311, "title": "Add support for Kafka 2.6 brokers", "bodyText": "This PR resolves #1309 and allows the Cruise Control Metrics reporter to work with Kafka 2.6 brokers.\nThis PR also refactors the ExecutionTask.State enum into its own separate class. This is needed as switching to the Kafka 2.6 libraries causes the gradle scala compiler to throw cyclical reference errors for this class.", "createdAt": "2020-08-11T17:55:35Z", "url": "https://github.com/linkedin/cruise-control/pull/1311", "merged": true, "mergeCommit": {"oid": "a1542ea179e8accce91710d31f7a88c60712f358"}, "closed": true, "closedAt": "2020-08-12T16:49:25Z", "author": {"login": "tomncooper"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9itSXAH2gAyNDY2MjYxNDk5OjRmNDJmMTE3MTVjMTYzOTBjMGIxNTMyMTczNTkxZWQwYjI5M2RhYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-OHpygFqTQ2NjA4NzAyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f42f11715c16390c0b1532173591ed0b293dabd", "author": {"user": {"login": "tomncooper", "name": "Thomas Cooper"}}, "url": "https://github.com/linkedin/cruise-control/commit/4f42f11715c16390c0b1532173591ed0b293dabd", "committedDate": "2020-08-10T14:01:42Z", "message": "Kafka 2.6 compatibility changes\n\n* Switched to Kafka 2.6.0 library versions\n* Changed class used for obtaining the default metrics registry in the metrics reporter\n\nSigned-off-by: Thomas Cooper <tom.n.cooper@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb", "author": {"user": {"login": "tomncooper", "name": "Thomas Cooper"}}, "url": "https://github.com/linkedin/cruise-control/commit/0c668011099ee6bbc6cb3e6394e5572f8ad80ccb", "committedDate": "2020-08-11T17:51:26Z", "message": "Refactored ExecutionTask.State enum into seperate class file\n\nThis was required to allow the ExecutionTask class to be compiled by\nscala without raising cyclical reference errors.\n\nSigned-off-by: Thomas Cooper <tom.n.cooper@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDE3Njg5", "url": "https://github.com/linkedin/cruise-control/pull/1311#pullrequestreview-465417689", "createdAt": "2020-08-11T20:48:43Z", "commit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDo0ODo0M1rOG_IsGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyNTozOVrOG_JzJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg1NTgzMg==", "bodyText": "Nit: Redundant space.", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468855832", "createdAt": "2020-08-11T20:48:43Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -26,7 +26,10 @@\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg1Njg5NA==", "bodyText": "Typo: Therfore -> Therefore", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468856894", "createdAt": "2020-08-11T20:50:34Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -332,10 +335,30 @@ public void onCompletion(RecordMetadata recordMetadata, Exception e) {\n     });\n   }\n \n+  /**\n+   * Starting with Kafka 2.6.0, a new class KafkaYammerMetrics provides the default Metrics Registry. The old default\n+   * registry does not work with 2.6+. Therfore if the new class exists, we use it and if it doesn't exist we use the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg1ODM0NA==", "bodyText": "Nit: KafkaYammerMetrics  -> {@link KafkaYammerMetrics}.\nGiven this link, maybe we can drop: More details can be found here: https://github.com/apache/kafka/blob/2.6.0/core/src/main/java/kafka/metrics/KafkaYammerMetrics.java?", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468858344", "createdAt": "2020-08-11T20:53:28Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -332,10 +335,30 @@ public void onCompletion(RecordMetadata recordMetadata, Exception e) {\n     });\n   }\n \n+  /**\n+   * Starting with Kafka 2.6.0, a new class KafkaYammerMetrics provides the default Metrics Registry. The old default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg2NjQ4NA==", "bodyText": "I initially assumed there were significant backwards incompatible changes from 2.5 to 2.6, but if this function would be sufficient to make migrate_to_kafka_2_5 compatible with Kafka 2.6, can we rebase this patch on migrate_to_kafka_2_5 branch to eliminate the overhead of managing one more branch?", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468866484", "createdAt": "2020-08-11T21:09:47Z", "author": {"login": "efeg"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -332,10 +335,30 @@ public void onCompletion(RecordMetadata recordMetadata, Exception e) {\n     });\n   }\n \n+  /**\n+   * Starting with Kafka 2.6.0, a new class KafkaYammerMetrics provides the default Metrics Registry. The old default\n+   * registry does not work with 2.6+. Therfore if the new class exists, we use it and if it doesn't exist we use the\n+   * old one. More details can be found here: https://github.com/apache/kafka/blob/2.6.0/core/src/main/java/kafka/metrics/KafkaYammerMetrics.java\n+   *\n+   * Once CC supports only 2.6.0 and newer, we can clean this up and use only KafkaYammerMetrics all the time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTk2Mw==", "bodyText": "Nit: Redundant space.", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468871963", "createdAt": "2020-08-11T21:21:18Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/ExecutionTask.java", "diffHunk": "@@ -11,12 +11,10 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NDAyMg==", "bodyText": "Nit: 2017 -> 2020", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r468874022", "createdAt": "2020-08-11T21:25:39Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/ExecutionTaskState.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2017 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjQxODkx", "url": "https://github.com/linkedin/cruise-control/pull/1311#pullrequestreview-465641891", "createdAt": "2020-08-12T07:05:01Z", "commit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzowNTowMVrOG_UbxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzowNTowMVrOG_UbxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA0ODI2MQ==", "bodyText": "This method seems to be called in each cycle of metrics reporting. Can we call the metricsRegistry() method once, cache the regustry and reuse it each time is required?", "url": "https://github.com/linkedin/cruise-control/pull/1311#discussion_r469048261", "createdAt": "2020-08-12T07:05:01Z", "author": {"login": "amuraru"}, "path": "cruise-control-metrics-reporter/src/main/java/com/linkedin/kafka/cruisecontrol/metricsreporter/CruiseControlMetricsReporter.java", "diffHunk": "@@ -332,10 +335,30 @@ public void onCompletion(RecordMetadata recordMetadata, Exception e) {\n     });\n   }\n \n+  /**\n+   * Starting with Kafka 2.6.0, a new class KafkaYammerMetrics provides the default Metrics Registry. The old default\n+   * registry does not work with 2.6+. Therfore if the new class exists, we use it and if it doesn't exist we use the\n+   * old one. More details can be found here: https://github.com/apache/kafka/blob/2.6.0/core/src/main/java/kafka/metrics/KafkaYammerMetrics.java\n+   *\n+   * Once CC supports only 2.6.0 and newer, we can clean this up and use only KafkaYammerMetrics all the time.\n+   *\n+   * @return  MetricsRegistry with Kafka metrics\n+   */\n+  private MetricsRegistry metricsRegistry()   {\n+    try {\n+      Class.forName(\"kafka.metrics.KafkaYammerMetrics\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c668011099ee6bbc6cb3e6394e5572f8ad80ccb"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "405787fca6bfa0eb022defeb37705230e12989aa", "author": {"user": {"login": "tomncooper", "name": "Thomas Cooper"}}, "url": "https://github.com/linkedin/cruise-control/commit/405787fca6bfa0eb022defeb37705230e12989aa", "committedDate": "2020-08-12T13:40:54Z", "message": "Addressed reviewer comments\n\nSigned-off-by: Thomas Cooper <tom.n.cooper@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDg3MDIy", "url": "https://github.com/linkedin/cruise-control/pull/1311#pullrequestreview-466087022", "createdAt": "2020-08-12T16:36:25Z", "commit": {"oid": "405787fca6bfa0eb022defeb37705230e12989aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 59, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}