{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTA1OTE4", "number": 1186, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNTo0M1rOD5Io8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0NTowMVrOD5I16g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM2OTc4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNTo0M1rOGQPJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNDoyOFrOGQQdaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3ODY5OQ==", "bodyText": "Can we avoid passing private variable _logFlushTimeThresholdMs to non-static function detectMetricAnomaliesFromThreshold and update the name of the function to indicate its custom role regarding log flush time?\nActually it is a little confusing that we have another function in this class called getMetricAnomalies, which is also used for detecting metric anomalies -- can we merge/rename them to make the logic more clear?", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419678699", "createdAt": "2020-05-04T19:35:43Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -174,6 +184,7 @@ public SlowBrokerFinder() {\n     }\n \n     Set<BrokerEntity> detectMetricAnomalies = getMetricAnomalies(historicalLogFlushTimeMetricValues, currentLogFlushTimeMetricValues);\n+    detectMetricAnomalies.retainAll(detectMetricAnomaliesFromThreshold(currentLogFlushTimeMetricValues, _logFlushTimeThresholdMs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMDA3Mw==", "bodyText": "I rename the method to make it more specific.\nI was thinking about merge this part of logic into getMetricAnomalies(). The issue is the logic in getMetricAnomalies() is generic and this extra check is specific to log flush time metrics.", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419700073", "createdAt": "2020-05-04T20:14:28Z", "author": {"login": "kidkun"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -174,6 +184,7 @@ public SlowBrokerFinder() {\n     }\n \n     Set<BrokerEntity> detectMetricAnomalies = getMetricAnomalies(historicalLogFlushTimeMetricValues, currentLogFlushTimeMetricValues);\n+    detectMetricAnomalies.retainAll(detectMetricAnomaliesFromThreshold(currentLogFlushTimeMetricValues, _logFlushTimeThresholdMs));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3ODY5OQ=="}, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM3MzE1OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNjozNlrOGQPL9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNjozNlrOGQPL9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3OTIyMg==", "bodyText": "Nit: detectMetricAnomalies -> detectedMetricAnomalies?", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419679222", "createdAt": "2020-05-04T19:36:36Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -174,6 +184,7 @@ public SlowBrokerFinder() {\n     }\n \n     Set<BrokerEntity> detectMetricAnomalies = getMetricAnomalies(historicalLogFlushTimeMetricValues, currentLogFlushTimeMetricValues);\n+    detectMetricAnomalies.retainAll(detectMetricAnomaliesFromThreshold(currentLogFlushTimeMetricValues, _logFlushTimeThresholdMs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM4OTQ4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0MToxOFrOGQPWhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0MToxOFrOGQPWhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4MTkyNw==", "bodyText": "The loop uses only the key, but iterates over entities. Can we either iterate over keySet() or update the logic to use getValue(), as well?", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419681927", "createdAt": "2020-05-04T19:41:18Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -286,6 +297,16 @@ private void detectMetricAnomaliesFromPeers(Map<BrokerEntity, Double> currentVal\n     }\n   }\n \n+  private Set<BrokerEntity> detectMetricAnomaliesFromThreshold(Map<BrokerEntity, Double> currentValue, double threshold) {\n+    Set<BrokerEntity> detectedMetricAnomalies = new HashSet<>();\n+    for (Map.Entry<BrokerEntity, Double> entry : currentValue.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM5NjEyOnYy", "diffSide": "RIGHT", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0MzowMVrOGQPanQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0MzowMVrOGQPanQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Mjk3Mw==", "bodyText": "This function (i.e. configure) is full of repeated code fragments. Can we use util functions to eliminate code repetition and be more concise?", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419682973", "createdAt": "2020-05-04T19:43:01Z", "author": {"login": "efeg"}, "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -416,6 +437,21 @@ public void configure(Map<String, ?> configs) {\n       }\n     }\n \n+    String logFlushTimeThresholdMs = (String) originalConfig.get(SLOW_BROKER_LOG_FLUSH_TIME_THRESHOLD_MS_CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjQwMjk4OnYy", "diffSide": "RIGHT", "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0NTowMVrOGQPeww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0NTowMVrOGQPeww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4NDAzNQ==", "bodyText": "Nit: Enumerating functions does not give much information about the difference between testNoFalsePositiveDetection() and testNoFalsePositiveDetection2(). Can we rename them with a suffix that describes what each function are?", "url": "https://github.com/linkedin/cruise-control/pull/1186#discussion_r419684035", "createdAt": "2020-05-04T19:45:01Z", "author": {"login": "efeg"}, "path": "cruise-control/src/test/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinderTest.java", "diffHunk": "@@ -161,6 +161,36 @@ public void testNoFalsePositiveDetection() {\n     assertTrue(anomalies.isEmpty());\n   }\n \n+  /**\n+   * Test slow broker finder does not report false positive anomaly when the broker's absolute log flush time is small.\n+   */\n+  @Test\n+  public void testNoFalsePositiveDetection2() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5215e0d98b6189de5b64879d660be8c3553d0c3"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}