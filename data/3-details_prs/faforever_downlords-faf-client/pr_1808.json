{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDI1MTYy", "number": 1808, "title": "Feature/#1764 online replays pagination", "bodyText": "", "createdAt": "2020-07-02T10:27:51Z", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808", "merged": true, "mergeCommit": {"oid": "b43e29bac920fdcc098d67ee0f6747aa8ade42e0"}, "closed": true, "closedAt": "2020-07-25T21:30:54Z", "author": {"login": "1-alex98"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw8aOqAFqTQ0MTU1MTk5Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4fWgigFqTQ1NTMxNjQ4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTUxOTky", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#pullrequestreview-441551992", "createdAt": "2020-07-02T10:29:58Z", "commit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoyOTo1OVrOGsHDnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDozNjo0OFrOGsHRDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwNjE0MQ==", "bodyText": "Either it needs a platform run later in both lines or it needs none", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r448906141", "createdAt": "2020-07-02T10:29:59Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/OnlineReplayVaultController.java", "diffHunk": "@@ -226,12 +235,39 @@ private void enterResultState() {\n     searchResultGroup.setVisible(false);\n     loadingPane.setVisible(false);\n     backButton.setVisible(false);\n-    moreButton.setVisible(false);\n+    pagination.setVisible(false);\n   }\n \n   private void onSearch(SearchConfig searchConfig) {\n+    replaySearchType = ReplaySearchType.SEARCH;\n+    //FIXME pagination setcount geh\u00f6rt hier nicht hin\n+    Platform.runLater(() -> pagination.setPageCount(0));\n+    if (pagination.getCurrentPageIndex() != 0) {\n+      pagination.setCurrentPageIndex(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwNzMwOQ==", "bodyText": "Code duplication", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r448907309", "createdAt": "2020-07-02T10:32:22Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/OnlineReplayVaultController.java", "diffHunk": "@@ -264,13 +300,21 @@ private void loadPreselectedReplays() {\n   }\n \n   public void onMoreNewestButtonClicked() {\n-    enterSearchingState();\n-    displayReplaysFromSupplier(() -> replayService.getNewestReplays(TOP_MORE_ELEMENT_COUNT, currentPage++));\n+    replaySearchType = ReplaySearchType.NEWEST;\n+    if (pagination.getCurrentPageIndex() != 0) {\n+      pagination.setCurrentPageIndex(0);\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwNzc1NA==", "bodyText": "final and END_TIME_QUERY", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r448907754", "createdAt": "2020-07-02T10:33:16Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -66,6 +70,8 @@\n    * Type of the searchable entity.\n    */\n   private Class<?> rootType;\n+  private static String endTimeQueryStart = \"endTime=ge=\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwOTA5NA==", "bodyText": "String.format", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r448909094", "createdAt": "2020-07-02T10:35:49Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +243,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    String queryWithoutLastYear = (String) condition.get().query(new RSQLVisitor());\n+    return queryWithoutLastYear + \";\" + lastYearQuery;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkwOTU4MA==", "bodyText": "OffsetDatetime LcoalDtaeTinme Instant", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r448909580", "createdAt": "2020-07-02T10:36:48Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +243,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    String queryWithoutLastYear = (String) condition.get().query(new RSQLVisitor());\n+    return queryWithoutLastYear + \";\" + lastYearQuery;\n+  }\n+\n+  private String generateOnlyLastYearQuery() {\n+    Calendar calendar = Calendar.getInstance();\n+    calendar.add(Calendar.YEAR, -1);\n+    Date date = calendar.getTime();\n+    SimpleDateFormat dateFormater = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1aa8d5507ada37f2afa3c261975429e5a422d16"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjQ0MTU2", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#pullrequestreview-443644156", "createdAt": "2020-07-07T07:49:34Z", "commit": {"oid": "927222a7c1379d885cdc77b44ecf17e8066d791a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo0OTozNFrOGty9tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzo0OTozNFrOGty9tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY3NDEwMg==", "bodyText": "did i not push this to develop... in that case you should merge develop in or rebase", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r450674102", "createdAt": "2020-07-07T07:49:34Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/api/JsonApiMessageConverter.java", "diffHunk": "@@ -28,17 +28,19 @@ public JsonApiMessageConverter(ResourceConverter resourceConverter) {\n   @Override\n   protected boolean supports(Class<?> clazz) {\n     return Collection.class.isAssignableFrom(clazz)\n-        || ReflectionUtils.getTypeName(clazz) != null;\n+        || ReflectionUtils.getTypeName(clazz) != null\n+        || clazz.equals(JSONAPIDocument.class);\n   }\n \n   @Override\n   @SneakyThrows\n-  @SuppressWarnings(\"unchecked\")\n   protected Object readInternal(Class<?> clazz, HttpInputMessage inputMessage) {\n     try (InputStream inputStream = inputMessage.getBody()) {\n       JSONAPIDocument<?> document;\n       if (Iterable.class.isAssignableFrom(clazz)) {\n         document = resourceConverter.readDocumentCollection(inputStream, Object.class);\n+      } else if (clazz.equals(JSONAPIDocument.class)) {\n+        return resourceConverter.readDocumentCollection(inputStream, Object.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927222a7c1379d885cdc77b44ecf17e8066d791a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MjE5MjM4", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#pullrequestreview-446219238", "createdAt": "2020-07-10T08:30:54Z", "commit": {"oid": "e7c3cb71bc8da70bee234c834cfdb1dc8c85fac3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODozMDo1NFrOGvutfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODo0MDowMlrOGvu_dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcwMTU2Nw==", "bodyText": "WithMetadata", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452701567", "createdAt": "2020-07-10T08:30:54Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/api/FafApiAccessorImpl.java", "diffHunk": "@@ -311,33 +308,37 @@ public ModVersion getModVersion(String uid) {\n   }\n \n   @Override\n-  public List<Game> getNewestReplays(int count, int page) {\n-    return getPage(\"/data/game\", count, page, ImmutableMap.of(\n+  public Tuple<List<Game>, java.util.Map<String, ?>> getNewestReplays(int count, int page) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7c3cb71bc8da70bee234c834cfdb1dc8c85fac3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcwMTY0OA==", "bodyText": "WithMetadata", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452701648", "createdAt": "2020-07-10T08:31:04Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/api/FafApiAccessorImpl.java", "diffHunk": "@@ -311,33 +308,37 @@ public ModVersion getModVersion(String uid) {\n   }\n \n   @Override\n-  public List<Game> getNewestReplays(int count, int page) {\n-    return getPage(\"/data/game\", count, page, ImmutableMap.of(\n+  public Tuple<List<Game>, java.util.Map<String, ?>> getNewestReplays(int count, int page) {\n+    JSONAPIDocument<List<Game>> jsonApiDoc = getPageWithMeta(\"/data/game\", count, page, ImmutableMap.of(\n         \"sort\", \"-endTime\",\n         \"include\", REPLAY_INCLUDES,\n         \"filter\", \"endTime=isnull=false\"\n     ));\n+    return new Tuple<>(jsonApiDoc.get(), jsonApiDoc.getMeta());\n   }\n \n   @Override\n-  public List<Game> getHighestRatedReplays(int count, int page) {\n-    return this.<GameReviewsSummary>getPage(\"/data/gameReviewsSummary\", count, page, ImmutableMap.of(\n+  public Tuple<List<Game>, java.util.Map<String, ?>> getHighestRatedReplays(int count, int page) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7c3cb71bc8da70bee234c834cfdb1dc8c85fac3"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcwNjE2Nw==", "bodyText": "These changes dont belong here", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452706167", "createdAt": "2020-07-10T08:40:02Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -231,6 +237,10 @@ static Integer parseSupComVersion(byte[] rawReplayBytes) {\n   static String parseMapName(byte[] rawReplayBytes) {\n     int mapDelimiterIndex = Bytes.indexOf(rawReplayBytes, new byte[]{0x00, 0x0D, 0x0A, 0x1A});\n     String mapPath = new String(rawReplayBytes, MAP_NAME_OFFSET, mapDelimiterIndex - MAP_NAME_OFFSET, US_ASCII);\n+    Matcher matcher = invalidCharacters.matcher(mapPath);\n+    if (matcher.find()) {\n+      throw new IllegalArgumentException(\"Map Name Contains Invalid Characters\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7c3cb71bc8da70bee234c834cfdb1dc8c85fac3"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTg5NDIw", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#pullrequestreview-446589420", "createdAt": "2020-07-10T17:53:00Z", "commit": {"oid": "26e929ba01355c1bb6c2af3d321a9c3418f83ddd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNzo1MzowMFrOGwAPKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNzo1NjoyMlrOGwAVnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4ODcxNQ==", "bodyText": "Is that really not needed? Are u sure? Is is to suppress warning about missing type safety.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452988715", "createdAt": "2020-07-10T17:53:00Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/api/FafApiAccessorImpl.java", "diffHunk": "@@ -192,7 +189,6 @@ public AchievementDefinition getAchievementDefinition(String achievementId) {\n   @Override\n   @Cacheable(CacheNames.LADDER_1V1_LEADERBOARD)\n   @SneakyThrows\n-  @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e929ba01355c1bb6c2af3d321a9c3418f83ddd"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk4OTk5MA==", "bodyText": "How about u get the total page count in the replay service already u dont need the complete metadata anyway right?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452989990", "createdAt": "2020-07-10T17:55:32Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/OnlineReplayVaultController.java", "diffHunk": "@@ -226,36 +244,66 @@ private void enterResultState() {\n     searchResultGroup.setVisible(false);\n     loadingPane.setVisible(false);\n     backButton.setVisible(false);\n-    moreButton.setVisible(false);\n+    pagination.setVisible(false);\n+    firstPageButton.setVisible(false);\n+    lastPageButton.setVisible(false);\n   }\n \n   private void onSearch(SearchConfig searchConfig) {\n+    replaySearchType = ReplaySearchType.SEARCH;\n+    onFirstPageOpened(searchConfig);\n+  }\n+\n+  private void onPageChange(SearchConfig searchConfig, int page, boolean firstLoad) {\n     enterSearchingState();\n-    displayReplaysFromSupplier(() -> replayService.findByQuery(searchConfig.getSearchQuery(), MAX_SEARCH_RESULTS, currentPage++, searchConfig.getSortConfig()));\n+    switch (replaySearchType) {\n+      case SEARCH:\n+        displayReplaysFromSupplier(() -> replayService.findByQueryWithMeta(searchConfig.getSearchQuery(), PAGE_SIZE, page, searchConfig.getSortConfig()), firstLoad);\n+        break;\n+      case OWN:\n+        displayReplaysFromSupplier(() -> replayService.getOwnReplaysWithMeta(PAGE_SIZE, page), firstLoad);\n+        break;\n+      case NEWEST:\n+        displayReplaysFromSupplier(() -> replayService.getNewestReplaysWithMeta(PAGE_SIZE, page), firstLoad);\n+        break;\n+      case HIGHEST_RATED:\n+        displayReplaysFromSupplier(() -> replayService.getHighestRatedReplaysWithMeta(PAGE_SIZE, page), firstLoad);\n+        break;\n+      case PLAYER:\n+        displayReplaysFromSupplier(() -> replayService.getReplaysForPlayerWithMeta(playerId, PAGE_SIZE, page, new SortConfig(\"startTime\", SortOrder.DESC)), firstLoad);\n+        break;\n+    }\n+  }\n+\n+  private void onFirstPageOpened(SearchConfig searchConfig) {\n+    onPageChange(searchConfig, 1, true);\n+    if (pagination.getCurrentPageIndex() != 0) {\n+      pagination.setCurrentPageIndex(0);\n+    }\n   }\n \n   private void displaySearchResult(List<Replay> replays) {\n     displaySearchResult(replays, false);\n   }\n \n   public void onBackButtonClicked() {\n-    if (newestReplaysLoaded) {\n-      enterResultState();\n-    } else {\n-      loadPreselectedReplays();\n-    }\n+    loadPreselectedReplays();\n   }\n \n   public void onRefreshButtonClicked() {\n-    loadPreselectedReplays();\n+    if (pagination.isVisible()) {\n+      onPageChange(searchController.getLastSearchConfig(), pagination.currentPageIndexProperty().getValue() + 1, false);\n+    } else {\n+      loadPreselectedReplays();\n+    }\n   }\n \n   private void loadPreselectedReplays() {\n     enterSearchingState();\n-    replayService.getNewestReplays(TOP_ELEMENT_COUNT, 1)\n-        .thenAccept(replays -> populateReplays(replays, newestPane))\n-        .thenCompose(aVoid -> replayService.getHighestRatedReplays(TOP_ELEMENT_COUNT, 1).thenAccept(highestRatedReplays -> populateReplays(highestRatedReplays, highestRatedPane)))\n-        .thenCompose(aVoid -> replayService.getOwnReplays(TOP_ELEMENT_COUNT, 1).thenAccept(highestRatedReplays -> populateReplays(highestRatedReplays, ownReplaysPane)))\n+    replayService.getNewestReplaysWithMeta(TOP_ELEMENT_COUNT, 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e929ba01355c1bb6c2af3d321a9c3418f83ddd"}, "originalPosition": 211}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5MDM2Nw==", "bodyText": "Please don't delete these new lines they are logical seperators", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#discussion_r452990367", "createdAt": "2020-07-10T17:56:22Z", "author": {"login": "1-alex98"}, "path": "src/main/resources/i18n/messages.properties", "diffHunk": "@@ -19,15 +19,12 @@ port=Port\n loading=Loading\u2026\n unknown=unknown\n dateWithTime={0} at {1}\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e929ba01355c1bb6c2af3d321a9c3418f83ddd"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26e929ba01355c1bb6c2af3d321a9c3418f83ddd", "author": {"user": {"login": "Tarmandan", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/26e929ba01355c1bb6c2af3d321a9c3418f83ddd", "committedDate": "2020-07-10T12:10:21Z", "message": "fixed refresh button for real"}, "afterCommit": {"oid": "f7fcdb5ef3cfa66ffa74fa4a0de84452f8510bd2", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/f7fcdb5ef3cfa66ffa74fa4a0de84452f8510bd2", "committedDate": "2020-07-12T15:46:19Z", "message": "Fixed weird behaviour when setting pagecount"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d28726c48051f10ded03e48a9e1e04c0fd1595f2", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/d28726c48051f10ded03e48a9e1e04c0fd1595f2", "committedDate": "2020-07-12T16:04:43Z", "message": "added empty lines that were accidentally removed"}, "afterCommit": {"oid": "78c22d3898adbdf49c4069844ae88a5a3b602a62", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/78c22d3898adbdf49c4069844ae88a5a3b602a62", "committedDate": "2020-07-14T20:21:42Z", "message": "Pagination Online Replay Vault\n\nFixes #1764"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7109897650a7ece7c4e43eab096aba23233cc596", "author": {"user": {"login": "Tarmandan", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/7109897650a7ece7c4e43eab096aba23233cc596", "committedDate": "2020-07-15T15:18:49Z", "message": "Added some tests"}, "afterCommit": {"oid": "0ec84abc99d184f3aaaa8c73493a0a2ae53a4552", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/0ec84abc99d184f3aaaa8c73493a0a2ae53a4552", "committedDate": "2020-07-15T15:34:41Z", "message": "Pagination Online Replay Vault\n\nFixes #1764\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ec84abc99d184f3aaaa8c73493a0a2ae53a4552", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/0ec84abc99d184f3aaaa8c73493a0a2ae53a4552", "committedDate": "2020-07-15T15:34:41Z", "message": "Pagination Online Replay Vault\n\nFixes #1764\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>"}, "afterCommit": {"oid": "c567d6fb97a8eb1fd108bb2484eb01082be28902", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/c567d6fb97a8eb1fd108bb2484eb01082be28902", "committedDate": "2020-07-22T09:34:58Z", "message": "Pagination Online Replay Vault\n\nFixes #1764\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b48f74b1f019224acefc7d11b6b20a82ed75524", "author": {"user": {"login": "IAmAlife", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/7b48f74b1f019224acefc7d11b6b20a82ed75524", "committedDate": "2020-07-25T19:46:11Z", "message": "Pagination Online Replay Vault\n\nFixes #1764\n\nCo-Authored-By: tarmandan <58087411+tarmandan@users.noreply.github.com>\nCo-Authored-By: aclrian <32142988+aclrian@users.noreply.github.com>\nCo-Authored-By: Jia Hong Frenki Zhang <64331094+frezha@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db2ad546003338262ff5eb9875fd6d1fd67b92c", "author": {"user": {"login": "Aclrian", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/8db2ad546003338262ff5eb9875fd6d1fd67b92c", "committedDate": "2020-07-25T19:46:11Z", "message": "replace Metadata with PageCount"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cd002229ca5763a398491837e191cba24d2fdcf", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/1cd002229ca5763a398491837e191cba24d2fdcf", "committedDate": "2020-07-25T21:01:22Z", "message": "Refactor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f17b3b2967995033f012d0466fd2d1b3e17997df", "author": {"user": {"login": "Aclrian", "name": null}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/f17b3b2967995033f012d0466fd2d1b3e17997df", "committedDate": "2020-07-22T12:17:53Z", "message": "replace Metadata with PageCount"}, "afterCommit": {"oid": "1cd002229ca5763a398491837e191cba24d2fdcf", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/1cd002229ca5763a398491837e191cba24d2fdcf", "committedDate": "2020-07-25T21:01:22Z", "message": "Refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2NDg0", "url": "https://github.com/FAForever/downlords-faf-client/pull/1808#pullrequestreview-455316484", "createdAt": "2020-07-25T21:17:29Z", "commit": {"oid": "1cd002229ca5763a398491837e191cba24d2fdcf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3220, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}