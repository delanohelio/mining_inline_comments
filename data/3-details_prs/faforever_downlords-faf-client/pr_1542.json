{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTE0ODg2", "number": 1542, "title": "Properly handle futures when the local replay directory has changed", "bodyText": "Fixes #1541.\nPreviously, the code failed to properly wait on completion of futures that load replays. Depending on the timing, the new local replays may have been added correctly or not. This PR fixes that.", "createdAt": "2020-01-01T20:19:32Z", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542", "merged": true, "mergeCommit": {"oid": "8d2fd5307bade2ccaffbaacf8290cc0ae7173551"}, "closed": true, "closedAt": "2020-02-08T23:44:46Z", "author": {"login": "andreasley"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2N9zvgFqTMzNzUwOTc4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCcrpmgBqjMwMjAyMzA0OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NTA5Nzg4", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#pullrequestreview-337509788", "createdAt": "2020-01-01T23:41:57Z", "commit": {"oid": "2fdd64866bdb1c9f2637b02627f884f3b22c1dae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQyMzo0MTo1N1rOFZkFgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQyMzo0Mjo0OVrOFZkFkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk1Mw==", "bodyText": "thenRun", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362349953", "createdAt": "2020-01-01T23:41:57Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +200,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdd64866bdb1c9f2637b02627f884f3b22c1dae"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0OTk3MQ==", "bodyText": "CompletableFuture\n.allOf", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r362349971", "createdAt": "2020-01-01T23:42:49Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +200,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->\n+            newReplaysFutures.stream()\n+                .map(future -> future.join())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdd64866bdb1c9f2637b02627f884f3b22c1dae"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4Mzc0MzA2", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#pullrequestreview-338374306", "createdAt": "2020-01-04T23:36:15Z", "commit": {"oid": "9bd706aa5a0d7f2c207ece86b6f8ad02033570ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMzozNjoxNVrOFaPdcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQyMzozNjoxNVrOFaPdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MDU5NQ==", "bodyText": "use method reference\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(future -> future.join())\n          \n          \n            \n                            CompletableFuture::join", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363060595", "createdAt": "2020-01-04T23:36:15Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -201,8 +201,21 @@ private void onLocalReplaysWatchEvent(WatchKey key) {\n       }\n     }\n \n-    localReplays.addAll(newReplays);\n-    publisher.publishEvent(new LocalReplaysChangedEvent(this, newReplays, deletedReplays));\n+    CompletableFuture[] replayFuturesArray = newReplaysFutures.toArray(new CompletableFuture[newReplaysFutures.size()]);\n+    CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n+        .thenApply(ignoredVoid ->\n+            newReplaysFutures.stream()\n+                .map(future -> future.join())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd706aa5a0d7f2c207ece86b6f8ad02033570ed"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4Mzc1MzY0", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#pullrequestreview-338375364", "createdAt": "2020-01-05T00:21:26Z", "commit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "state": "DISMISSED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQwMDoyMToyNlrOFaPjFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQwMDoyNDoxM1rOFaPjaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjAzNg==", "bodyText": "Well we wanna avoid having null objects in list because it crashes UI", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062036", "createdAt": "2020-01-05T00:21:26Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -205,7 +202,8 @@ protected void onLocalReplaysWatchEvent(WatchKey key) {\n     CompletableFuture<List<Replay>> newReplaysFuture = CompletableFuture.allOf(replayFuturesArray)\n         .thenApply(ignoredVoid ->\n             newReplaysFutures.stream()\n-                .map(future -> future.join())\n+                .map(CompletableFuture::join)\n+                .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA0Ng==", "bodyText": "Just a quick way of writting it", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062046", "createdAt": "2020-01-05T00:21:42Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -275,21 +273,21 @@ static String guessModByFileName(String fileName) {\n       List<CompletableFuture<Replay>> replayFutures = StreamSupport.stream(directoryStream.spliterator(), false)\n           .sorted(Comparator.comparing(path -> noCatch(() -> Files.getLastModifiedTime((Path) path))).reversed())\n           .limit(MAX_REPLAYS)\n-          .map( replayFile -> tryLoadingLocalReplay(replayFile))\n+          .map(this::tryLoadingLocalReplay)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA0OQ==", "bodyText": "again see top", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062049", "createdAt": "2020-01-05T00:21:51Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -275,21 +273,21 @@ static String guessModByFileName(String fileName) {\n       List<CompletableFuture<Replay>> replayFutures = StreamSupport.stream(directoryStream.spliterator(), false)\n           .sorted(Comparator.comparing(path -> noCatch(() -> Files.getLastModifiedTime((Path) path))).reversed())\n           .limit(MAX_REPLAYS)\n-          .map( replayFile -> tryLoadingLocalReplay(replayFile))\n+          .map(this::tryLoadingLocalReplay)\n           .filter(e -> !e.isCompletedExceptionally())\n           .collect(Collectors.toList());\n \n       CompletableFuture[] replayFuturesArray = replayFutures.toArray(new CompletableFuture[replayFutures.size()]);\n       return CompletableFuture.allOf(replayFuturesArray)\n           .thenApply(ignoredVoid ->\n               replayFutures.stream()\n-                  .map(future -> future.join())\n+                  .map(CompletableFuture::join)\n+                  .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA4Mw==", "bodyText": "We certainly dont wanna throw here if we do then the whole loacl replay vault breaks, also there are legimit cases where a replay has no map. One is coop the maps are part of the game mod and hence are not found locally nor on the server", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062083", "createdAt": "2020-01-05T00:23:00Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA5Nw==", "bodyText": "Let's just say the map is null", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062097", "createdAt": "2020-01-05T00:23:14Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);\n         }\n-        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.get());\n+        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.orElse(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjExOA==", "bodyText": "Don't throw others wise replay vault stays empty, return null which is gonna be filtered out", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062118", "createdAt": "2020-01-05T00:23:52Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/ReplayService.java", "diffHunk": "@@ -300,14 +298,14 @@ static String guessModByFileName(String fileName) {\n       return CompletableFuture.allOf(featuredModFuture, mapBeanFuture).thenApply(ignoredVoid  -> {\n         Optional<MapBean> mapBean = mapBeanFuture.join();\n         if (!mapBean.isPresent()) {\n-          throw new CompletionException(new FileNotFoundException());\n+          logger.warn(\"Could not find map for replay file '{}'\", replayFile);\n         }\n-        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.get());\n+        return new Replay(replayInfo, replayFile, featuredModFuture.join(), mapBean.orElse(null));\n       });\n     } catch (Exception e) {\n       logger.warn(\"Could not read replay file '{}'\", replayFile, e);\n       moveCorruptedReplayFile(replayFile);\n-      return CompletableFuture.failedFuture(e);\n+      return CompletableFuture.completedFuture(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjEyMw==", "bodyText": "Let's tell te user we don't have this map", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#discussion_r363062123", "createdAt": "2020-01-05T00:24:13Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/replay/ReplayVaultController.java", "diffHunk": "@@ -183,9 +177,12 @@ public OffsetDateTime fromString(String string) {\n       protected void updateItem(MapBean map, boolean empty) {\n         super.updateItem(map, empty);\n \n-        if (empty || map == null) {\n+        if (empty) {\n           setText(null);\n           setGraphic(null);\n+        } else if (map == null) {\n+          setGraphic(null);\n+          setText(i18n.get(\"map.unknown\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "108e07a5adb577284f37bec08216336270dce26b", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/108e07a5adb577284f37bec08216336270dce26b", "committedDate": "2020-01-05T00:20:42Z", "message": "Improvements and fixes to local replay vault"}, "afterCommit": {"oid": "cae1a594d941600e0d8ca6b18a17a0b722500b5c", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/cae1a594d941600e0d8ca6b18a17a0b722500b5c", "committedDate": "2020-01-05T00:28:38Z", "message": "Improvements and fixes to local replay vault"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cae1a594d941600e0d8ca6b18a17a0b722500b5c", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/cae1a594d941600e0d8ca6b18a17a0b722500b5c", "committedDate": "2020-01-05T00:28:38Z", "message": "Improvements and fixes to local replay vault"}, "afterCommit": {"oid": "ce8c22405567df6b451b87bddbe11893daa42228", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/ce8c22405567df6b451b87bddbe11893daa42228", "committedDate": "2020-01-05T00:30:35Z", "message": "Improvements and fixes to local replay vault"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMDg4ODgw", "url": "https://github.com/FAForever/downlords-faf-client/pull/1542#pullrequestreview-340088880", "createdAt": "2020-01-08T19:22:50Z", "commit": {"oid": "ce8c22405567df6b451b87bddbe11893daa42228"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce8c22405567df6b451b87bddbe11893daa42228", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/ce8c22405567df6b451b87bddbe11893daa42228", "committedDate": "2020-01-05T00:30:35Z", "message": "Improvements and fixes to local replay vault"}, "afterCommit": {"oid": "c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "committedDate": "2020-02-08T23:33:27Z", "message": "Improvements and fixes to local replay vault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a2bb3da7816bc6941c644ad28e77946e642c924", "author": {"user": {"login": "andreasley", "name": "Andreas Ley"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/9a2bb3da7816bc6941c644ad28e77946e642c924", "committedDate": "2020-02-08T23:38:40Z", "message": "#1541: Properly handle futures when the local replay directory has changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c7cbca33c1f7ef007299823662c24d0995ed6d0", "author": {"user": {"login": "andreasley", "name": "Andreas Ley"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/9c7cbca33c1f7ef007299823662c24d0995ed6d0", "committedDate": "2020-02-08T23:38:41Z", "message": "Added unit test for `onLocalReplaysWatchEvent`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "committedDate": "2020-02-08T23:38:48Z", "message": "Improvements and fixes to local replay vault"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/c9d1f114e47bde1425a6b83e3b78067f66f30c0a", "committedDate": "2020-02-08T23:33:27Z", "message": "Improvements and fixes to local replay vault"}, "afterCommit": {"oid": "2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "author": {"user": {"login": "1-alex98", "name": "Alexander von Trostorff"}}, "url": "https://github.com/FAForever/downlords-faf-client/commit/2fdcd9b39702674ffdc01eeb3ea438f2361178ff", "committedDate": "2020-02-08T23:38:48Z", "message": "Improvements and fixes to local replay vault"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3327, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}