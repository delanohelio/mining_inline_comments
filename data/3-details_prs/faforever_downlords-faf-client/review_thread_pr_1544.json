{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTAwNDc2", "number": 1544, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwODoxNjo0MFrODVm7qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzo0MDoxNFrODZSMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTg0NTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/replay/Replay.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwODoxNjo0MFrOFZ7Tbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzozMDowOFrOFfeXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ==", "bodyText": "just for my information, where is that object property used?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730351", "createdAt": "2020-01-03T08:16:40Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU3NQ==", "bodyText": "I didn't use it anywhere. I just included it because the other attributes seemed to have them. IDK what an ObjectProperty even does.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362737575", "createdAt": "2020-01-03T08:54:01Z", "author": {"login": "Askaholic"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczOTg3Nw==", "bodyText": "@axel1200 ? :-)", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362739877", "createdAt": "2020-01-03T09:04:13Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NDUxNQ==", "bodyText": "Yes u do it correctly", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r363054515", "createdAt": "2020-01-04T20:50:36Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NDUzNg==", "bodyText": "it is an object where u can listen for changes", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r363054536", "createdAt": "2020-01-04T20:50:58Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0NzY1Nw==", "bodyText": "It's an observable object, following the observer pattern from software engineering. You can add a listener that gets notified on changes. The property, which is introduced by javafc id a special implementation of this observer pattern allowing properties to be bound to others (supporting converters) therefore updating each other/ UI components when changed.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368547657", "createdAt": "2020-01-20T13:30:08Z", "author": {"login": "Geosearchef"}, "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTg0NjA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwODoxNzowOVrOFZ7TvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwOTowNjoxNFrOFZ76gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ==", "bodyText": "isn't millis 1000?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730429", "createdAt": "2020-01-03T08:17:09Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzc5NQ==", "bodyText": "Yes but there are 10 ticks per second. So 10/s * 100 = 1000/s", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362737795", "createdAt": "2020-01-03T08:55:01Z", "author": {"login": "Askaholic"}, "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0MDM1NA==", "bodyText": "Oh! Math hidden!! :-) how about to show it as constant with explanation? Otherwise it's not visible on first sight", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362740354", "createdAt": "2020-01-03T09:06:14Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ=="}, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTg0NjY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/replay/ReplayDetailController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwODoxNzo0NVrOFZ7UIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwODoxNzo0NVrOFZ7UIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDUzMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730530", "createdAt": "2020-01-03T08:17:45Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/ReplayDetailController.java", "diffHunk": "@@ -142,7 +144,18 @@ public void initialize() {\n \n     reviewsController.getRoot().setMaxSize(Integer.MAX_VALUE, Integer.MAX_VALUE);\n \n+\n     copyButton.setText(i18n.get(\"replay.copyUrl\"));\n+\n+    dateLabel.setTooltip(new Tooltip(i18n.get(\"replay.dateTooltip\")));\n+    timeLabel.setTooltip(new Tooltip(i18n.get(\"replay.timeTooltip\")));\n+    modLabel.setTooltip(new Tooltip(i18n.get(\"replay.modTooltip\")));\n+    durationLabel.setTooltip(new Tooltip(i18n.get(\"replay.durationTooltip\")));\n+    replayDurationLabel.setTooltip(new Tooltip(i18n.get(\"replay.replayDurationTooltip\")));\n+    playerCountLabel.setTooltip(new Tooltip(i18n.get(\"replay.playerCountTooltip\")));\n+    ratingLabel.setTooltip(new Tooltip(i18n.get(\"replay.ratingTooltip\")));\n+    qualityLabel.setTooltip(new Tooltip(i18n.get(\"replay.qualityTooltip\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODM5MTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzo0MDoxNVrOFfllEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzo1OTo1OVrOFfl-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2NTg3NQ==", "bodyText": "Maybe we should use the unicode format ala \\u0055??", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368665875", "createdAt": "2020-01-20T17:40:15Z", "author": {"login": "norraxx"}, "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));\n+      ((Label) durationLabel.getGraphic()).setText(\"\ue953\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0356436209419e8b0aa4dfad62d2cffbabf34a44"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3MjM3MQ==", "bodyText": "That's normally what I would do, but it's like this in the rest of the code so I was just trying to keep it consistent.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368672371", "createdAt": "2020-01-20T17:59:59Z", "author": {"login": "Askaholic"}, "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));\n+      ((Label) durationLabel.getGraphic()).setText(\"\ue953\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2NTg3NQ=="}, "originalCommit": {"oid": "0356436209419e8b0aa4dfad62d2cffbabf34a44"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2139, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}