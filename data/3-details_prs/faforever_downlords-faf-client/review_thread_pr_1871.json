{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODA1MTc5", "number": 1871, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTo1MjoxM1rOEeD8jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzoyOFrOEkbrOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTU3Mzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTo1MjoxM1rOHJiPgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNzo1MDozNVrOHJkgLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDI1OA==", "bodyText": "Maybe this would belong in enums. Imagine somebody changed the language in between then you would match against the wrong translations right?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479760258", "createdAt": "2020-08-30T11:52:13Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -167,6 +171,19 @@ public void initialize() {\n     nameColumn.setCellValueFactory(param -> param.getValue().nameProperty());\n     changeDateColumn.setCellValueFactory(param -> param.getValue().changeDateProperty());\n     changeDateColumn.setCellFactory(param -> new OffsetDateTimeCell<>(timeService));\n+\n+    timePeriodComboBox.getItems().addAll(i18n.get(\"userInfo.ratingHistory.allTime\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDI4Nw==", "bodyText": "I know that is a little unlikely but idk still would like it better", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479760287", "createdAt": "2020-08-30T11:52:39Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -167,6 +171,19 @@ public void initialize() {\n     nameColumn.setCellValueFactory(param -> param.getValue().nameProperty());\n     changeDateColumn.setCellValueFactory(param -> param.getValue().changeDateProperty());\n     changeDateColumn.setCellFactory(param -> new OffsetDateTimeCell<>(timeService));\n+\n+    timePeriodComboBox.getItems().addAll(i18n.get(\"userInfo.ratingHistory.allTime\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDI1OA=="}, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc5NzI5NQ==", "bodyText": "I changed it to use enums and use the selection model to get the index directly", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479797295", "createdAt": "2020-08-30T17:50:35Z", "author": {"login": "Sheikah45"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -167,6 +171,19 @@ public void initialize() {\n     nameColumn.setCellValueFactory(param -> param.getValue().nameProperty());\n     changeDateColumn.setCellValueFactory(param -> param.getValue().changeDateProperty());\n     changeDateColumn.setCellFactory(param -> new OffsetDateTimeCell<>(timeService));\n+\n+    timePeriodComboBox.getItems().addAll(i18n.get(\"userInfo.ratingHistory.allTime\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDI1OA=="}, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTU3NDYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTo1MzoxNVrOHJiP3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTo1MzoxNVrOHJiP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDM0OA==", "bodyText": "Also here idk enums might be cooler.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479760348", "createdAt": "2020-08-30T11:53:15Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -368,45 +384,52 @@ private void enterAchievementsLoadedState() {\n     achievementsPane.setVisible(true);\n   }\n \n-  public void ladder1v1ButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+  public void onRatingTypeChange() {\n+    CompletableFuture<Void> statisicsFuture = switch (ratingTypeComboBox.getItems().indexOf(ratingTypeComboBox.getValue())) {\n+      default -> loadStatistics(KnownFeaturedMod.FAF);\n+      case 1 -> loadStatistics(KnownFeaturedMod.LADDER_1V1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTU3NTQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxMTo1Mzo1N1rOHJiQOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoyMToyMVrOHNakrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDQ0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public ComboBox<String> ratingTypeComboBox;\n          \n          \n            \n              public ComboBox<RatingTypeEnum> ratingTypeComboBox;", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479760443", "createdAt": "2020-08-30T11:53:57Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -119,11 +122,11 @@\n   public Label mostRecentAchievementNameLabel;\n   public Pane lockedAchievementsContainer;\n   public Pane unlockedAchievementsContainer;\n-  public ToggleButton globalButton;\n-  public ToggleButton ladder1v1Button;\n   public NumberAxis yAxis;\n   public NumberAxis xAxis;\n-  public LineChart<Integer, Integer> ratingHistoryChart;\n+  public LineChart<Long, Integer> ratingHistoryChart;\n+  public ComboBox<String> timePeriodComboBox;\n+  public ComboBox<String> ratingTypeComboBox;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc5NzIyNQ==", "bodyText": "Hmm yeah I used the Strings so that it can use i18n I am not sure if an enum can use that", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r479797225", "createdAt": "2020-08-30T17:49:55Z", "author": {"login": "Sheikah45"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -119,11 +122,11 @@\n   public Label mostRecentAchievementNameLabel;\n   public Pane lockedAchievementsContainer;\n   public Pane unlockedAchievementsContainer;\n-  public ToggleButton globalButton;\n-  public ToggleButton ladder1v1Button;\n   public NumberAxis yAxis;\n   public NumberAxis xAxis;\n-  public LineChart<Integer, Integer> ratingHistoryChart;\n+  public LineChart<Long, Integer> ratingHistoryChart;\n+  public ComboBox<String> timePeriodComboBox;\n+  public ComboBox<String> ratingTypeComboBox;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDQ0Mw=="}, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODc3NQ==", "bodyText": "Well u register a ValueFactory in which u do ()->i18n.get(item.getI18nKey()) after u define such a property on the enum", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483828775", "createdAt": "2020-09-04T20:20:57Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -119,11 +122,11 @@\n   public Label mostRecentAchievementNameLabel;\n   public Pane lockedAchievementsContainer;\n   public Pane unlockedAchievementsContainer;\n-  public ToggleButton globalButton;\n-  public ToggleButton ladder1v1Button;\n   public NumberAxis yAxis;\n   public NumberAxis xAxis;\n-  public LineChart<Integer, Integer> ratingHistoryChart;\n+  public LineChart<Long, Integer> ratingHistoryChart;\n+  public ComboBox<String> timePeriodComboBox;\n+  public ComboBox<String> ratingTypeComboBox;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDQ0Mw=="}, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODkxMQ==", "bodyText": "Something along that lines", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483828911", "createdAt": "2020-09-04T20:21:21Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -119,11 +122,11 @@\n   public Label mostRecentAchievementNameLabel;\n   public Pane lockedAchievementsContainer;\n   public Pane unlockedAchievementsContainer;\n-  public ToggleButton globalButton;\n-  public ToggleButton ladder1v1Button;\n   public NumberAxis yAxis;\n   public NumberAxis xAxis;\n-  public LineChart<Integer, Integer> ratingHistoryChart;\n+  public LineChart<Long, Integer> ratingHistoryChart;\n+  public ComboBox<String> timePeriodComboBox;\n+  public ComboBox<String> ratingTypeComboBox;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc2MDQ0Mw=="}, "originalCommit": {"oid": "15e2e32a8fab0c019c2025596f0c288cdb09069c"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTI3MjQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoxODozOFrOHNahMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDozNjo0MVrOHNa5Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODAxNg==", "bodyText": "I don't mind too much but this would normally be part of internationalization.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483828016", "createdAt": "2020-09-04T20:18:38Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -88,7 +92,7 @@\n @Slf4j\n @RequiredArgsConstructor\n public class UserInfoWindowController implements Controller<Node> {\n-  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"d MMM\");\n+  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"MM/yyyy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a3014069c521f2d903825d6f28000d2dfa2bb6a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODIyNg==", "bodyText": "Not sure how the Chinese write their dates. And we Europeans dont use a /", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483828226", "createdAt": "2020-09-04T20:19:20Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -88,7 +92,7 @@\n @Slf4j\n @RequiredArgsConstructor\n public class UserInfoWindowController implements Controller<Node> {\n-  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"d MMM\");\n+  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"MM/yyyy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODAxNg=="}, "originalCommit": {"oid": "5a3014069c521f2d903825d6f28000d2dfa2bb6a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgzMzI1NQ==", "bodyText": "what you mean america isnt the standard of the world?!!?!?! I will see how to make it i18n compliant", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483833255", "createdAt": "2020-09-04T20:33:56Z", "author": {"login": "Sheikah45"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -88,7 +92,7 @@\n @Slf4j\n @RequiredArgsConstructor\n public class UserInfoWindowController implements Controller<Node> {\n-  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"d MMM\");\n+  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"MM/yyyy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODAxNg=="}, "originalCommit": {"oid": "5a3014069c521f2d903825d6f28000d2dfa2bb6a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgzNDE1NA==", "bodyText": "also what you mean with the enum so will update it", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r483834154", "createdAt": "2020-09-04T20:36:41Z", "author": {"login": "Sheikah45"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -88,7 +92,7 @@\n @Slf4j\n @RequiredArgsConstructor\n public class UserInfoWindowController implements Controller<Node> {\n-  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"d MMM\");\n+  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"MM/yyyy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyODAxNg=="}, "originalCommit": {"oid": "5a3014069c521f2d903825d6f28000d2dfa2bb6a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAxODgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/TimePeriod.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NDoxOVrOHN43JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NDoxOVrOHN43JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNTE1Ng==", "bodyText": "interesting. But did you know that enums like other classes in java can have instance variables and a constructor:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public String getI18NKey() {\n          \n          \n            \n                return switch (this) {\n          \n          \n            \n                  case ALL_TIME -> \"userInfo.ratingHistory.allTime\";\n          \n          \n            \n                  case LAST_YEAR -> \"userInfo.ratingHistory.lastYear\";\n          \n          \n            \n                  case LAST_MONTH -> \"userInfo.ratingHistory.lastMonth\";\n          \n          \n            \n                  default -> \"\";\n          \n          \n            \n                };\n          \n          \n            \n              }\n          \n          \n            \n               ....\n          \n          \n            \n               LAST_MONTH(\"userInfo.ratingHistory.lastMonth\")\n          \n          \n            \n            \n          \n          \n            \n              @Getter\n          \n          \n            \n              private final String i18nKey;\n          \n          \n            \n              \n          \n          \n            \n              TimePeriod(String i18nKey){\n          \n          \n            \n                  this.i18nKey=i18nKey;\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nNormally I would just annotate the class with @value which makes variables final and private and also adds Constructor and Getter. But the @value thing does not work on enums for whatever reasons.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484325156", "createdAt": "2020-09-07T09:54:19Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/TimePeriod.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package com.faforever.client.chat;\n+\n+public enum TimePeriod {\n+  ALL_TIME,\n+  LAST_YEAR,\n+  LAST_MONTH;\n+\n+  public String getI18NKey() {\n+    return switch (this) {\n+      case ALL_TIME -> \"userInfo.ratingHistory.allTime\";\n+      case LAST_YEAR -> \"userInfo.ratingHistory.lastYear\";\n+      case LAST_MONTH -> \"userInfo.ratingHistory.lastMonth\";\n+      default -> \"\";\n+    };\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAyNTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NjoxNlrOHN47dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NjoxNlrOHN47dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNjI2MA==", "bodyText": "There is a method that returns all enum instances of an enum .values() i think", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484326260", "createdAt": "2020-09-07T09:56:16Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -167,6 +170,18 @@ public void initialize() {\n     nameColumn.setCellValueFactory(param -> param.getValue().nameProperty());\n     changeDateColumn.setCellValueFactory(param -> param.getValue().changeDateProperty());\n     changeDateColumn.setCellFactory(param -> new OffsetDateTimeCell<>(timeService));\n+\n+    timePeriodComboBox.setConverter(timePeriodStringConverter());\n+\n+    timePeriodComboBox.getItems().addAll(TimePeriod.ALL_TIME, TimePeriod.LAST_YEAR, TimePeriod.LAST_MONTH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAyNzEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NjozNVrOHN48LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1NjozNVrOHN48LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNjQ0NA==", "bodyText": "same here", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484326444", "createdAt": "2020-09-07T09:56:35Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -167,6 +170,18 @@ public void initialize() {\n     nameColumn.setCellValueFactory(param -> param.getValue().nameProperty());\n     changeDateColumn.setCellValueFactory(param -> param.getValue().changeDateProperty());\n     changeDateColumn.setCellFactory(param -> new OffsetDateTimeCell<>(timeService));\n+\n+    timePeriodComboBox.setConverter(timePeriodStringConverter());\n+\n+    timePeriodComboBox.getItems().addAll(TimePeriod.ALL_TIME, TimePeriod.LAST_YEAR, TimePeriod.LAST_MONTH);\n+    timePeriodComboBox.setValue(TimePeriod.ALL_TIME);\n+\n+    ratingTypeComboBox.setConverter(ratingModeStringConverter());\n+\n+    ratingTypeComboBox.getItems().addAll(RatingMode.GLOBAL, RatingMode.LADDER_1V1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAzMTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1Nzo1MVrOHN4_Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1Nzo1MVrOHN4_Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNzIwNw==", "bodyText": "If you put this as enum instance variables as well u would only need to add a new enum if u had a third rating type :D", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484327207", "createdAt": "2020-09-07T09:57:51Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -368,56 +382,92 @@ private void enterAchievementsLoadedState() {\n     achievementsPane.setVisible(true);\n   }\n \n-  public void ladder1v1ButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+  public void onRatingTypeChange() {\n+    CompletableFuture<Void> statisticsFuture = switch (ratingTypeComboBox.getValue()) {\n+      case LADDER_1V1 -> loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+      default -> loadStatistics(KnownFeaturedMod.FAF);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAzNDE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1ODoyOFrOHN5AgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1ODoyOFrOHN5AgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNzU1Mw==", "bodyText": "Same here if you put that in the enums adding a new ratingTimePeriod becomes super easy", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484327553", "createdAt": "2020-09-07T09:58:28Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -368,56 +382,92 @@ private void enterAchievementsLoadedState() {\n     achievementsPane.setVisible(true);\n   }\n \n-  public void ladder1v1ButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+  public void onRatingTypeChange() {\n+    CompletableFuture<Void> statisticsFuture = switch (ratingTypeComboBox.getValue()) {\n+      case LADDER_1V1 -> loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+      default -> loadStatistics(KnownFeaturedMod.FAF);\n+    };\n+    statisticsFuture.thenRun(() -> Platform.runLater(this::plotPlayerRatingGraph));\n   }\n \n   private CompletableFuture<Void> loadStatistics(KnownFeaturedMod featuredMod) {\n     return statisticsService.getRatingHistory(featuredMod, player.getId())\n-        .thenAccept(ratingHistory -> Platform.runLater(() -> plotPlayerRatingGraph(ratingHistory)))\n+        .thenAccept(ratingHistory -> ratingData = ratingHistory)\n         .exceptionally(throwable -> {\n           // FIXME display to user\n           log.warn(\"Statistics could not be loaded\", throwable);\n           return null;\n         });\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n-  private void plotPlayerRatingGraph(List<RatingHistoryDataPoint> dataPoints) {\n-    List<XYChart.Data<Integer, Integer>> values = dataPoints.stream()\n-        .map(datapoint -> new Data<>(dataPoints.indexOf(datapoint), RatingUtil.getRating(datapoint)))\n+  public void plotPlayerRatingGraph() {\n+    OffsetDateTime afterDate = switch (timePeriodComboBox.getValue()) {\n+      case LAST_MONTH -> OffsetDateTime.of(LocalDateTime.now().minusMonths(1), ZoneOffset.UTC);\n+      case LAST_YEAR -> OffsetDateTime.of(LocalDateTime.now().minusYears(1), ZoneOffset.UTC);\n+      case ALL_TIME -> OffsetDateTime.of(LocalDateTime.MIN, ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTAzNTgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/fa/RatingMode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1ODo1OFrOHN5BpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOTo1ODo1OFrOHN5BpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyNzg0NA==", "bodyText": "instance variables are cooler", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r484327844", "createdAt": "2020-09-07T09:58:58Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/fa/RatingMode.java", "diffHunk": "@@ -3,5 +3,13 @@\n public enum RatingMode {\n   GLOBAL,\n   LADDER_1V1,\n-  NONE\n+  NONE;\n+\n+  public String getI18NKey() {\n+    return switch (this) {\n+      case GLOBAL -> \"userInfo.ratingHistory.global\";\n+      case LADDER_1V1 -> \"userInfo.ratingHistory.1v1\";\n+      default -> \"\";\n+    };\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73fb287dffbda5f591579fa09cb3b43d67bf65d5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjM3NTQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzoxM1rOHTX53g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzoxM1rOHTX53g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3NjYzOA==", "bodyText": "space", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r490076638", "createdAt": "2020-09-17T08:47:13Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -368,56 +383,84 @@ private void enterAchievementsLoadedState() {\n     achievementsPane.setVisible(true);\n   }\n \n-  public void ladder1v1ButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+  public void onRatingTypeChange() {\n+    CompletableFuture<Void> statisticsFuture = loadStatistics(ratingTypeComboBox.getValue().getFeaturedMod());\n+    statisticsFuture.thenRun(() -> Platform.runLater(this::plotPlayerRatingGraph));\n   }\n \n   private CompletableFuture<Void> loadStatistics(KnownFeaturedMod featuredMod) {\n     return statisticsService.getRatingHistory(featuredMod, player.getId())\n-        .thenAccept(ratingHistory -> Platform.runLater(() -> plotPlayerRatingGraph(ratingHistory)))\n+        .thenAccept(ratingHistory -> ratingData = ratingHistory)\n         .exceptionally(throwable -> {\n           // FIXME display to user\n           log.warn(\"Statistics could not be loaded\", throwable);\n           return null;\n         });\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n-  private void plotPlayerRatingGraph(List<RatingHistoryDataPoint> dataPoints) {\n-    List<XYChart.Data<Integer, Integer>> values = dataPoints.stream()\n-        .map(datapoint -> new Data<>(dataPoints.indexOf(datapoint), RatingUtil.getRating(datapoint)))\n+  public void plotPlayerRatingGraph() {\n+    OffsetDateTime afterDate = OffsetDateTime.of(timePeriodComboBox.getValue().getDate(), ZoneOffset.UTC);\n+    List<XYChart.Data<Long, Integer>> values = ratingData.stream()\n+        .filter(dataPoint -> dataPoint.getInstant().isAfter(afterDate))\n+        .map(dataPoint -> new Data<>(dataPoint.getInstant().toEpochSecond(), RatingUtil.getRating(dataPoint)))\n         .collect(Collectors.toList());\n \n-    xAxis.setTickLabelFormatter(ratingLabelFormatter(dataPoints));\n+    xAxis.setTickLabelFormatter(ratingLabelFormatter());\n+    if (values.size() > 0) {\n+      xAxis.setLowerBound(values.get(0).getXValue());\n+      xAxis.setUpperBound(values.get(values.size() - 1).getXValue());\n+    }\n+    xAxis.setTickUnit((xAxis.getUpperBound() - xAxis.getLowerBound()) / 10);\n \n-    XYChart.Series<Integer, Integer> series = new XYChart.Series<>(observableList(values));\n+    XYChart.Series<Long, Integer> series = new XYChart.Series<>(observableList(values));\n     series.setName(i18n.get(\"userInfo.ratingOverTime\"));\n-    ratingHistoryChart.getData().setAll(series);\n+    ratingHistoryChart.setData(FXCollections.observableList(Collections.singletonList(series)));\n   }\n \n   @NotNull\n-  private StringConverter<Number> ratingLabelFormatter(final List<RatingHistoryDataPoint> dataPoints) {\n-    return new StringConverter<Number>() {\n+  private  StringConverter<RatingMode> ratingModeStringConverter() {\n+    return new StringConverter<>() {\n       @Override\n-      public String toString(Number object) {\n-        int number = object.intValue();\n-        int numberOfDataPoints = dataPoints.size();\n-        int dataPointIndex = number >= numberOfDataPoints ? numberOfDataPoints - 1 : number;\n-        if (dataPointIndex >= dataPoints.size() || dataPointIndex < 0) {\n-          return \"\";\n-        }\n-        return DATE_FORMATTER.format(dataPoints.get(dataPointIndex).getInstant());\n+      public String toString(RatingMode mode) {\n+        return i18n.get(mode.getI18nKey());\n       }\n \n       @Override\n-      public Number fromString(String string) {\n+      public RatingMode fromString(String string) {\n         return null;\n       }\n     };\n   }\n \n-  public void globalButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.FAF);\n+  @NotNull\n+  private  StringConverter<TimePeriod> timePeriodStringConverter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfccf44feb665fd4f767f405b87645717b985e73"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjM3NjI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzoyOFrOHTX6YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODo0NzoyOFrOHTX6YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA3Njc2OA==", "bodyText": "space", "url": "https://github.com/FAForever/downlords-faf-client/pull/1871#discussion_r490076768", "createdAt": "2020-09-17T08:47:28Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/chat/UserInfoWindowController.java", "diffHunk": "@@ -368,56 +383,84 @@ private void enterAchievementsLoadedState() {\n     achievementsPane.setVisible(true);\n   }\n \n-  public void ladder1v1ButtonClicked() {\n-    loadStatistics(KnownFeaturedMod.LADDER_1V1);\n+  public void onRatingTypeChange() {\n+    CompletableFuture<Void> statisticsFuture = loadStatistics(ratingTypeComboBox.getValue().getFeaturedMod());\n+    statisticsFuture.thenRun(() -> Platform.runLater(this::plotPlayerRatingGraph));\n   }\n \n   private CompletableFuture<Void> loadStatistics(KnownFeaturedMod featuredMod) {\n     return statisticsService.getRatingHistory(featuredMod, player.getId())\n-        .thenAccept(ratingHistory -> Platform.runLater(() -> plotPlayerRatingGraph(ratingHistory)))\n+        .thenAccept(ratingHistory -> ratingData = ratingHistory)\n         .exceptionally(throwable -> {\n           // FIXME display to user\n           log.warn(\"Statistics could not be loaded\", throwable);\n           return null;\n         });\n   }\n \n-  @SuppressWarnings(\"unchecked\")\n-  private void plotPlayerRatingGraph(List<RatingHistoryDataPoint> dataPoints) {\n-    List<XYChart.Data<Integer, Integer>> values = dataPoints.stream()\n-        .map(datapoint -> new Data<>(dataPoints.indexOf(datapoint), RatingUtil.getRating(datapoint)))\n+  public void plotPlayerRatingGraph() {\n+    OffsetDateTime afterDate = OffsetDateTime.of(timePeriodComboBox.getValue().getDate(), ZoneOffset.UTC);\n+    List<XYChart.Data<Long, Integer>> values = ratingData.stream()\n+        .filter(dataPoint -> dataPoint.getInstant().isAfter(afterDate))\n+        .map(dataPoint -> new Data<>(dataPoint.getInstant().toEpochSecond(), RatingUtil.getRating(dataPoint)))\n         .collect(Collectors.toList());\n \n-    xAxis.setTickLabelFormatter(ratingLabelFormatter(dataPoints));\n+    xAxis.setTickLabelFormatter(ratingLabelFormatter());\n+    if (values.size() > 0) {\n+      xAxis.setLowerBound(values.get(0).getXValue());\n+      xAxis.setUpperBound(values.get(values.size() - 1).getXValue());\n+    }\n+    xAxis.setTickUnit((xAxis.getUpperBound() - xAxis.getLowerBound()) / 10);\n \n-    XYChart.Series<Integer, Integer> series = new XYChart.Series<>(observableList(values));\n+    XYChart.Series<Long, Integer> series = new XYChart.Series<>(observableList(values));\n     series.setName(i18n.get(\"userInfo.ratingOverTime\"));\n-    ratingHistoryChart.getData().setAll(series);\n+    ratingHistoryChart.setData(FXCollections.observableList(Collections.singletonList(series)));\n   }\n \n   @NotNull\n-  private StringConverter<Number> ratingLabelFormatter(final List<RatingHistoryDataPoint> dataPoints) {\n-    return new StringConverter<Number>() {\n+  private  StringConverter<RatingMode> ratingModeStringConverter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfccf44feb665fd4f767f405b87645717b985e73"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2082, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}