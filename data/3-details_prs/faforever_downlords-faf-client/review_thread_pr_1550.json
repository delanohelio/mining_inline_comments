{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjU2MjE5", "number": 1550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoyMzowN1rODZNURw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoyMzowN1rODZNURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NzU5MTc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/game/GameService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoyMzowN1rOFfeKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMzoxOTo1MVrOFnSbpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0NDQxNw==", "bodyText": "I'd throw the exception no matter whether the user proceeds or not.", "url": "https://github.com/FAForever/downlords-faf-client/pull/1550#discussion_r368544417", "createdAt": "2020-01-20T13:23:07Z", "author": {"login": "Geosearchef"}, "path": "src/main/java/com/faforever/client/game/GameService.java", "diffHunk": "@@ -354,6 +358,25 @@ public void runWithReplay(Path path, @Nullable Integer replayId, String featured\n         });\n   }\n \n+  @SneakyThrows\n+  private Void askWhetherToStartWithOutMap(Throwable throwable) {\n+    JavaFxUtil.assertBackgroundThread();\n+\n+    CountDownLatch userAnswered = new CountDownLatch(1);\n+    AtomicReference<Boolean> proceed = new AtomicReference<>(false);\n+    List<Action> actions = Arrays.asList(new Action(i18n.get(\"replay.ignoreMapNotFound\"), event -> {\n+          proceed.set(true);\n+          userAnswered.countDown();\n+        }),\n+        new Action(i18n.get(\"replay.abortAfterMapNotFound\"), event -> userAnswered.countDown()));\n+    notificationService.addNotification(new ImmediateNotification(i18n.get(\"replay.mapDownloadFailed\"), i18n.get(\"replay.mapDownloadFailed.wannaContinue\"), Severity.WARN, actions));\n+    userAnswered.await();\n+    if (!proceed.get()) {\n+      throw throwable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c7b2f3c35983a761b067a587e4fa82a8045565e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MDc3Mw==", "bodyText": "No u don't get the hack I am doing here right... Maybe I should log it that is a good idea but what u suggest is just not working", "url": "https://github.com/FAForever/downlords-faf-client/pull/1550#discussion_r376740773", "createdAt": "2020-02-08T23:19:51Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/game/GameService.java", "diffHunk": "@@ -354,6 +358,25 @@ public void runWithReplay(Path path, @Nullable Integer replayId, String featured\n         });\n   }\n \n+  @SneakyThrows\n+  private Void askWhetherToStartWithOutMap(Throwable throwable) {\n+    JavaFxUtil.assertBackgroundThread();\n+\n+    CountDownLatch userAnswered = new CountDownLatch(1);\n+    AtomicReference<Boolean> proceed = new AtomicReference<>(false);\n+    List<Action> actions = Arrays.asList(new Action(i18n.get(\"replay.ignoreMapNotFound\"), event -> {\n+          proceed.set(true);\n+          userAnswered.countDown();\n+        }),\n+        new Action(i18n.get(\"replay.abortAfterMapNotFound\"), event -> userAnswered.countDown()));\n+    notificationService.addNotification(new ImmediateNotification(i18n.get(\"replay.mapDownloadFailed\"), i18n.get(\"replay.mapDownloadFailed.wannaContinue\"), Severity.WARN, actions));\n+    userAnswered.await();\n+    if (!proceed.get()) {\n+      throw throwable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0NDQxNw=="}, "originalCommit": {"oid": "0c7b2f3c35983a761b067a587e4fa82a8045565e"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}