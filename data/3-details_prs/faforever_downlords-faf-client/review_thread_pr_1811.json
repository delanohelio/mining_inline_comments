{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDAwNTU5", "number": 1811, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzoyNDozMFrOELexXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NTozNlrOEMKajA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDczOTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzoyNDozMFrOGtDtqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzo0MToyMlrOGtDzcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTk0Ng==", "bodyText": "Is there no default formatter for this?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449899946", "createdAt": "2020-07-05T17:24:30Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }\n+    return String.format(\"%s;%s\", condition.get().query(new RSQLVisitor()), lastYearQuery);\n+  }\n+\n+  private String generateOnlyLastYearQuery() {\n+    OffsetDateTime time = OffsetDateTime.now();\n+    time = time.minusYears(1L);\n+    return END_TIME_QUERY + time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss'Z'\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315dcb064b46c62a7db473c68642e6d12941897b"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTQyNw==", "bodyText": "not even needed with my suggestion below", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901427", "createdAt": "2020-07-05T17:41:22Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }\n+    return String.format(\"%s;%s\", condition.get().query(new RSQLVisitor()), lastYearQuery);\n+  }\n+\n+  private String generateOnlyLastYearQuery() {\n+    OffsetDateTime time = OffsetDateTime.now();\n+    time = time.minusYears(1L);\n+    return END_TIME_QUERY + time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss'Z'\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTk0Ng=="}, "originalCommit": {"oid": "315dcb064b46c62a7db473c68642e6d12941897b"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDc1MDkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzo0MDowN1rOGtDzIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzo0MDo1MlrOGtDzVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (lastYearQuery.isEmpty()) {\n          \n          \n            \n                  return (String) condition.get().query(new RSQLVisitor());\n          \n          \n            \n                }\n          \n          \n            \n               if(isLastYearChecked){\n          \n          \n            \n                  InstantProperty endTime = qBuilder.instant(\"endTime\");\n          \n          \n            \n                  Condition conditionForLastYear = endTime.after(Instant.now().minus(1, ChronoUnit.YEARS), false);\n          \n          \n            \n                  qBuilder.and(condition.get(), conditionForLastYear);\n          \n          \n            \n                }", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901344", "createdAt": "2020-07-05T17:40:07Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315dcb064b46c62a7db473c68642e6d12941897b"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM5Ng==", "bodyText": "or true for >=", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r449901396", "createdAt": "2020-07-05T17:40:52Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -223,7 +237,16 @@ private String buildQuery(SpecificationController initialSpecification, List<Log\n       }\n       condition = currentCondition;\n     }\n-    return (String) condition.get().query(new RSQLVisitor());\n+    if (lastYearQuery.isEmpty()) {\n+      return (String) condition.get().query(new RSQLVisitor());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwMTM0NA=="}, "originalCommit": {"oid": "315dcb064b46c62a7db473c68642e6d12941897b"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODUyNjk3OnYy", "diffSide": "LEFT", "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTowMDo1N1rOGtm-MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTowMDo1N1rOGtm-MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3NzYxNg==", "bodyText": "Why delete?", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r450477616", "createdAt": "2020-07-06T21:00:57Z", "author": {"login": "1-alex98"}, "path": "src/main/java/com/faforever/client/vault/search/SearchController.java", "diffHunk": "@@ -42,9 +43,7 @@\n   private final UiService uiService;\n   private final I18n i18n;\n   private final PreferencesService preferencesService;\n-  /**\n-   * The first query element.\n-   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeca5745678924be39bfb873886e6309e4db1af9"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg5MDA0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/faforever/client/vault/search/SearchControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NTozNlrOGuHZ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NTozNlrOGuHZ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODk4Nw==", "bodyText": "This line throws an Exception:\nInvalid use of argument matchers! 0 matchers expected, 1 recorded: -> at com.faforever.client.vault.search.SearchControllerTest.testBuildQueryWithCheckboxAndQuery(SearchControllerTest.java:128)\nWhen using qBuilder.instant(\"endTime\") as this Exception suggests, a NullPointerException is thrown (presumably because of the missing Matcher):\njava.lang.NullPointerException at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.lambda$null$1(ObjectUtils.java:42) at java.base/java.util.stream.MatchOps$2MatchSink.accept(MatchOps.java:119) at java.base/java.util.stream.Streams$RangeIntSpliterator.tryAdvance(Streams.java:82) at java.base/java.util.stream.IntPipeline.forEachWithCancel(IntPipeline.java:163) at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) at java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:230) at java.base/java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:196) at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.base/java.util.stream.IntPipeline.allMatch(IntPipeline.java:518) at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.lambda$init$2(ObjectUtils.java:42) at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:176) at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) at com.github.rutledgepaulv.qbuilders.utilities.ObjectUtils.init(ObjectUtils.java:43) at com.github.rutledgepaulv.qbuilders.builders.QBuilder.prop(QBuilder.java:97) at com.github.rutledgepaulv.qbuilders.builders.QBuilder.instant(QBuilder.java:85) at com.faforever.client.vault.search.SearchControllerTest.testBuildQueryWithCheckboxAndQuery(SearchControllerTest.java:128)", "url": "https://github.com/FAForever/downlords-faf-client/pull/1811#discussion_r451008987", "createdAt": "2020-07-07T16:55:36Z", "author": {"login": "IAmAlife"}, "path": "src/test/java/com/faforever/client/vault/search/SearchControllerTest.java", "diffHunk": "@@ -125,7 +125,7 @@ public void testBuildQueryWithCheckboxAndQuery() throws Exception {\n \n     when(specificationController.appendTo(any())).thenReturn(Optional.of(condition));\n     when(condition.and()).thenReturn(qBuilder);\n-    when(qBuilder.instant(eq(\"endTime\"))).thenReturn(eq(instant));\n+    when(qBuilder.instant(eq(\"endTime\"))).thenReturn(instant);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f657c92affb46ed070a5afcfa098b7f4f24419a5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2048, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}