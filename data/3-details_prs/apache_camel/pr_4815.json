{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0ODk5NzUw", "number": 4815, "title": "Add Consuming Avro messages from Kafka using the schema-registry exam\u2026", "bodyText": "\u2026ple to Kafka component docs\nThis follows up the discussion in apache/camel-quarkus#1960 .\nCould you please review and perhaps also add more details @tstuber?", "createdAt": "2020-12-23T15:30:46Z", "url": "https://github.com/apache/camel/pull/4815", "merged": true, "mergeCommit": {"oid": "a09de9cb2edb95411323e98a23f8e9a939d3c11a"}, "closed": true, "closedAt": "2021-01-04T13:09:47Z", "author": {"login": "ppalaga"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpBFy_AFqTU1Nzk5MTQwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqpQXJAFqTU1OTIyNjU1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3OTkxNDA4", "url": "https://github.com/apache/camel/pull/4815#pullrequestreview-557991408", "createdAt": "2020-12-23T15:44:22Z", "commit": {"oid": "80ae65ada719ca96c5e824f93b47930557bb57e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Mzc5ODcx", "url": "https://github.com/apache/camel/pull/4815#pullrequestreview-558379871", "createdAt": "2020-12-24T07:08:55Z", "commit": {"oid": "80ae65ada719ca96c5e824f93b47930557bb57e0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzowODo1NlrOILBH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzowOToxN1rOILBINw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMzY1MQ==", "bodyText": "Is it only confluent that has avra deseriazlier and this implies you are using confluent schema registry. Can we make this example also work with other schema registries? And add some more notes on this? And btw the example is using endpoint-dsl which we should mention.", "url": "https://github.com/apache/camel/pull/4815#discussion_r548423651", "createdAt": "2020-12-24T07:08:56Z", "author": {"login": "davsclaus"}, "path": "catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/docs/kafka-component.adoc", "diffHunk": "@@ -580,3 +580,23 @@ from(\"kafka:my_topic?headerFilterStrategy=#myStrategy\")\n `myStrategy` object should be subclass of `HeaderFilterStrategy` and must be placed in the Camel registry, either manually or by registration as a bean in Spring/Blueprint, as it is `CamelContext` aware.\n \n include::camel-spring-boot::page$kafka-starter.adoc[]\n+\n+== Consuming Avro messages from Kafka using the schema-registry\n+*Since Camel 3.0.0*\n+\n+This route applies the schema and converts the Avro messages to POJOs for further processing:\n+\n+[source,java]\n+----\n+from(kafka(\"avro-events\")\n+    .brokers(\"localhost:9092\")\n+    .schemaRegistryURL(\"http://localhost:8081\")\n+    .specificAvroReader(true)\n+    .valueDeserializer(\"io.confluent.kafka.serializers.KafkaAvroDeserializer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ae65ada719ca96c5e824f93b47930557bb57e0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMzczNQ==", "bodyText": "You would not call resolve when using endpoint-dsl creating routes", "url": "https://github.com/apache/camel/pull/4815#discussion_r548423735", "createdAt": "2020-12-24T07:09:17Z", "author": {"login": "davsclaus"}, "path": "catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/docs/kafka-component.adoc", "diffHunk": "@@ -580,3 +580,23 @@ from(\"kafka:my_topic?headerFilterStrategy=#myStrategy\")\n `myStrategy` object should be subclass of `HeaderFilterStrategy` and must be placed in the Camel registry, either manually or by registration as a bean in Spring/Blueprint, as it is `CamelContext` aware.\n \n include::camel-spring-boot::page$kafka-starter.adoc[]\n+\n+== Consuming Avro messages from Kafka using the schema-registry\n+*Since Camel 3.0.0*\n+\n+This route applies the schema and converts the Avro messages to POJOs for further processing:\n+\n+[source,java]\n+----\n+from(kafka(\"avro-events\")\n+    .brokers(\"localhost:9092\")\n+    .schemaRegistryURL(\"http://localhost:8081\")\n+    .specificAvroReader(true)\n+    .valueDeserializer(\"io.confluent.kafka.serializers.KafkaAvroDeserializer\")\n+    .resolve(getContext()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ae65ada719ca96c5e824f93b47930557bb57e0"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5154d97e8469f5edcfa77cc1095635540c3d5e5", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel/commit/d5154d97e8469f5edcfa77cc1095635540c3d5e5", "committedDate": "2020-12-24T10:16:55Z", "message": "Add Consuming Avro messages from Kafka using the schema-registry example to Kafka component docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80ae65ada719ca96c5e824f93b47930557bb57e0", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel/commit/80ae65ada719ca96c5e824f93b47930557bb57e0", "committedDate": "2020-12-23T15:27:32Z", "message": "Add Consuming Avro messages from Kafka using the schema-registry example to Kafka component docs"}, "afterCommit": {"oid": "d5154d97e8469f5edcfa77cc1095635540c3d5e5", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel/commit/d5154d97e8469f5edcfa77cc1095635540c3d5e5", "committedDate": "2020-12-24T10:16:55Z", "message": "Add Consuming Avro messages from Kafka using the schema-registry example to Kafka component docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjI2NTU0", "url": "https://github.com/apache/camel/pull/4815#pullrequestreview-559226554", "createdAt": "2020-12-28T17:06:02Z", "commit": {"oid": "d5154d97e8469f5edcfa77cc1095635540c3d5e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2779, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}