{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTQ2ODQ3", "number": 3613, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODo1Mzo1N1rODl54Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNDo1MDoxM1rODmBOSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDcyMTU4OnYy", "diffSide": "RIGHT", "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODo1Mzo1N1rOFzDp0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNDo1MDozMlrOFzOhrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA4MTU1NQ==", "bodyText": "can we introduce another check if either credentialsAccountKey or credentialsAccountName is null and perhaps throw an error if creds and one of the credentialsAccountKey or credentialsAccountName are null?", "url": "https://github.com/apache/camel/pull/3613#discussion_r389081555", "createdAt": "2020-03-06T18:53:57Z", "author": {"login": "omarsmak"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -48,4 +55,38 @@ public StorageCredentials getCredentials() {\n     public void setCredentials(StorageCredentials credentials) {\n         this.credentials = credentials;\n     }\n+\n+    public String getCredentialsAccountKey() {\n+        return credentialsAccountKey;\n+    }\n+\n+    /**\n+     * Set the storage account key used during authentication phase\n+     */\n+    public void setCredentialsAccountKey(String credentialsAccountKey) {\n+        this.credentialsAccountKey = credentialsAccountKey;\n+    }\n+\n+    public String getCredentialsAccountName() {\n+        return credentialsAccountName;\n+    }\n+\n+    /**\n+     * Set the storage account name used during authentication phase\n+     */\n+    public void setCredentialsAccountName(String credentialsAccountName) {\n+        this.credentialsAccountName = credentialsAccountName;\n+    }\n+\n+    public  StorageCredentials getAccountCredentials() {\n+        StorageCredentials creds = credentials;\n+        //if  credentials is null, fallback to credentialsAccountKey and credentialsAccountName\n+        if (creds == null) {\n+            if (credentialsAccountKey != null && credentialsAccountName != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f28fb60a80950b25498b89b0fecae8665e403f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTA2Mw==", "bodyText": "@omarsmak those checks are covered by BlobServiceComponent.checkCredentials and QueueServiceComponent.checkCredentials. Added unit tests to check those scenarios.", "url": "https://github.com/apache/camel/pull/3613#discussion_r389259063", "createdAt": "2020-03-07T14:39:25Z", "author": {"login": "luigidemasi"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -48,4 +55,38 @@ public StorageCredentials getCredentials() {\n     public void setCredentials(StorageCredentials credentials) {\n         this.credentials = credentials;\n     }\n+\n+    public String getCredentialsAccountKey() {\n+        return credentialsAccountKey;\n+    }\n+\n+    /**\n+     * Set the storage account key used during authentication phase\n+     */\n+    public void setCredentialsAccountKey(String credentialsAccountKey) {\n+        this.credentialsAccountKey = credentialsAccountKey;\n+    }\n+\n+    public String getCredentialsAccountName() {\n+        return credentialsAccountName;\n+    }\n+\n+    /**\n+     * Set the storage account name used during authentication phase\n+     */\n+    public void setCredentialsAccountName(String credentialsAccountName) {\n+        this.credentialsAccountName = credentialsAccountName;\n+    }\n+\n+    public  StorageCredentials getAccountCredentials() {\n+        StorageCredentials creds = credentials;\n+        //if  credentials is null, fallback to credentialsAccountKey and credentialsAccountName\n+        if (creds == null) {\n+            if (credentialsAccountKey != null && credentialsAccountName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA4MTU1NQ=="}, "originalCommit": {"oid": "34f28fb60a80950b25498b89b0fecae8665e403f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTY5Mw==", "bodyText": "Perfect! Thanks a lot", "url": "https://github.com/apache/camel/pull/3613#discussion_r389259693", "createdAt": "2020-03-07T14:50:32Z", "author": {"login": "omarsmak"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -48,4 +55,38 @@ public StorageCredentials getCredentials() {\n     public void setCredentials(StorageCredentials credentials) {\n         this.credentials = credentials;\n     }\n+\n+    public String getCredentialsAccountKey() {\n+        return credentialsAccountKey;\n+    }\n+\n+    /**\n+     * Set the storage account key used during authentication phase\n+     */\n+    public void setCredentialsAccountKey(String credentialsAccountKey) {\n+        this.credentialsAccountKey = credentialsAccountKey;\n+    }\n+\n+    public String getCredentialsAccountName() {\n+        return credentialsAccountName;\n+    }\n+\n+    /**\n+     * Set the storage account name used during authentication phase\n+     */\n+    public void setCredentialsAccountName(String credentialsAccountName) {\n+        this.credentialsAccountName = credentialsAccountName;\n+    }\n+\n+    public  StorageCredentials getAccountCredentials() {\n+        StorageCredentials creds = credentials;\n+        //if  credentials is null, fallback to credentialsAccountKey and credentialsAccountName\n+        if (creds == null) {\n+            if (credentialsAccountKey != null && credentialsAccountName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA4MTU1NQ=="}, "originalCommit": {"oid": "34f28fb60a80950b25498b89b0fecae8665e403f"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDgyNTMyOnYy", "diffSide": "RIGHT", "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTozMDo0MlrOFzEs-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTozMDo0MlrOFzEs-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA5ODc0Nw==", "bodyText": "@UriParam(label = \"security\", secret = true)", "url": "https://github.com/apache/camel/pull/3613#discussion_r389098747", "createdAt": "2020-03-06T19:30:42Z", "author": {"login": "davsclaus"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -17,12 +17,19 @@\n package org.apache.camel.component.azure.common;\n \n import com.microsoft.azure.storage.StorageCredentials;\n+import com.microsoft.azure.storage.StorageCredentialsAccountAndKey;\n import org.apache.camel.spi.UriParam;\n \n public abstract class AbstractConfiguration implements Cloneable {\n \n     @UriParam\n     private StorageCredentials credentials;\n+\n+    @UriParam", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f28fb60a80950b25498b89b0fecae8665e403f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDgyNjI2OnYy", "diffSide": "RIGHT", "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTozMDo1OFrOFzEthA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTozMDo1OFrOFzEthA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA5ODg4NA==", "bodyText": "@UriParam(label = \"security\", secret = true)", "url": "https://github.com/apache/camel/pull/3613#discussion_r389098884", "createdAt": "2020-03-06T19:30:58Z", "author": {"login": "davsclaus"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -17,12 +17,19 @@\n package org.apache.camel.component.azure.common;\n \n import com.microsoft.azure.storage.StorageCredentials;\n+import com.microsoft.azure.storage.StorageCredentialsAccountAndKey;\n import org.apache.camel.spi.UriParam;\n \n public abstract class AbstractConfiguration implements Cloneable {\n \n     @UriParam\n     private StorageCredentials credentials;\n+\n+    @UriParam\n+    private String credentialsAccountKey;\n+\n+    @UriParam", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f28fb60a80950b25498b89b0fecae8665e403f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTkyNTIzOnYy", "diffSide": "RIGHT", "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNDo1MDoxM1rOFzOhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxNTowNjozNlrOFzOlPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTY3MA==", "bodyText": "Maybe it would be better to remove these messages to the component class or util class and keep configuration class for configuration related stuff?", "url": "https://github.com/apache/camel/pull/3613#discussion_r389259670", "createdAt": "2020-03-07T14:50:13Z", "author": {"login": "omarsmak"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -17,12 +17,25 @@\n package org.apache.camel.component.azure.common;\n \n import com.microsoft.azure.storage.StorageCredentials;\n+import com.microsoft.azure.storage.StorageCredentialsAccountAndKey;\n import org.apache.camel.spi.UriParam;\n \n public abstract class AbstractConfiguration implements Cloneable {\n \n+    public static final String MISSING_BLOB_CREDNTIALS_EXCEPTION_MESSAGE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12909bc8b3dbb9472e64c5778ea42aa72b719d1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI2MDYwNg==", "bodyText": "Yes, you're right. Moved to components", "url": "https://github.com/apache/camel/pull/3613#discussion_r389260606", "createdAt": "2020-03-07T15:06:36Z", "author": {"login": "luigidemasi"}, "path": "components/camel-azure/src/main/java/org/apache/camel/component/azure/common/AbstractConfiguration.java", "diffHunk": "@@ -17,12 +17,25 @@\n package org.apache.camel.component.azure.common;\n \n import com.microsoft.azure.storage.StorageCredentials;\n+import com.microsoft.azure.storage.StorageCredentialsAccountAndKey;\n import org.apache.camel.spi.UriParam;\n \n public abstract class AbstractConfiguration implements Cloneable {\n \n+    public static final String MISSING_BLOB_CREDNTIALS_EXCEPTION_MESSAGE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI1OTY3MA=="}, "originalCommit": {"oid": "e12909bc8b3dbb9472e64c5778ea42aa72b719d1"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4699, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}