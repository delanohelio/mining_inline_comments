{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NTg5MzA5", "number": 3810, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDoxNjoyNFrOD6LxlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxNTo0NVrOD6S_9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzM2OTE3OnYy", "diffSide": "RIGHT", "path": "components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/model/date/BindyDatePatternCsvUnmarshallTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDoxNjoyNFrOGR3-Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDoxNjoyNFrOGR3-Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5NTk5NQ==", "bodyText": "Please run the build with the profile sourcecheck enable and fix the warnings you'll see", "url": "https://github.com/apache/camel/pull/3810#discussion_r421395995", "createdAt": "2020-05-07T10:16:24Z", "author": {"login": "oscerd"}, "path": "components/camel-bindy/src/test/java/org/apache/camel/dataformat/bindy/model/date/BindyDatePatternCsvUnmarshallTest.java", "diffHunk": "@@ -167,7 +171,15 @@ public void setReceivedTime(LocalTime receivedTime) {\n             this.receivedTime = receivedTime;\n         }\n \n-        public ReturnReason getReturnReason() {\n+\t\tpublic ZonedDateTime getDeletedDateTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59dea34e3c7c61a17ebdadc267b5c1b17002e554"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDUzMDMyOnYy", "diffSide": "RIGHT", "path": "components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/format/factories/ZonedDateTimeFormatFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxMDozMFrOGSDSJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxMDozMFrOGSDSJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4MTM1MQ==", "bodyText": "Is it intentional to comment out the string param here?", "url": "https://github.com/apache/camel/pull/3810#discussion_r421581351", "createdAt": "2020-05-07T15:10:30Z", "author": {"login": "omarsmak"}, "path": "components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/format/factories/ZonedDateTimeFormatFactory.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.dataformat.bindy.format.factories;\n+\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Locale;\n+\n+import org.apache.camel.dataformat.bindy.Format;\n+import org.apache.camel.dataformat.bindy.FormattingOptions;\n+import org.apache.camel.dataformat.bindy.PatternFormat;\n+import org.apache.camel.util.ObjectHelper;\n+\n+public class ZonedDateTimeFormatFactory extends AbstractFormatFactory {\n+\n+    {\n+        supportedClasses.add(ZonedDateTime.class);\n+    }\n+\n+    @Override\n+    public Format<?> build(FormattingOptions formattingOptions) {\n+        return new ZonedDateTimePatternFormat(formattingOptions.getPattern(),\n+                formattingOptions.getLocale());\n+    }\n+\n+    private static class ZonedDateTimePatternFormat implements PatternFormat<ZonedDateTime> {\n+\n+        private String pattern;\n+        private Locale locale;\n+\n+        ZonedDateTimePatternFormat(String pattern/*, String timezone*/, Locale locale) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78382f4b310fbd8278488c43ab57436d822d1716"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDU1Mjg2OnYy", "diffSide": "RIGHT", "path": "components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/format/factories/ZonedDateTimeFormatFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxNTo0NVrOGSDg4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToxNTo0NVrOGSDg4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NTEyMg==", "bodyText": "I'd change this to initialize date directly unless there was another reason perhaps?:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        date = ZonedDateTime.parse(string, df);\n          \n          \n            \n                        ZonedDateTime date = ZonedDateTime.parse(string, df);", "url": "https://github.com/apache/camel/pull/3810#discussion_r421585122", "createdAt": "2020-05-07T15:15:45Z", "author": {"login": "omarsmak"}, "path": "components/camel-bindy/src/main/java/org/apache/camel/dataformat/bindy/format/factories/ZonedDateTimeFormatFactory.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.dataformat.bindy.format.factories;\n+\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Locale;\n+\n+import org.apache.camel.dataformat.bindy.Format;\n+import org.apache.camel.dataformat.bindy.FormattingOptions;\n+import org.apache.camel.dataformat.bindy.PatternFormat;\n+import org.apache.camel.util.ObjectHelper;\n+\n+public class ZonedDateTimeFormatFactory extends AbstractFormatFactory {\n+\n+    {\n+        supportedClasses.add(ZonedDateTime.class);\n+    }\n+\n+    @Override\n+    public Format<?> build(FormattingOptions formattingOptions) {\n+        return new ZonedDateTimePatternFormat(formattingOptions.getPattern(),\n+                formattingOptions.getLocale());\n+    }\n+\n+    private static class ZonedDateTimePatternFormat implements PatternFormat<ZonedDateTime> {\n+\n+        private String pattern;\n+        private Locale locale;\n+\n+        ZonedDateTimePatternFormat(String pattern/*, String timezone*/, Locale locale) {\n+            this.pattern = pattern;\n+            this.locale = locale;\n+        }\n+\n+        @Override\n+        public String format(ZonedDateTime object) throws Exception {\n+            ObjectHelper.notNull(this.pattern, \"pattern\");\n+            return this.getDateFormat().format(object);\n+        }\n+\n+        @Override\n+        public ZonedDateTime parse(String string) throws Exception {\n+\n+            ZonedDateTime date;\n+            DateTimeFormatter df = this.getDateFormat();\n+\n+            ObjectHelper.notNull(this.pattern, \"pattern\");\n+            date = ZonedDateTime.parse(string, df);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78382f4b310fbd8278488c43ab57436d822d1716"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4946, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}