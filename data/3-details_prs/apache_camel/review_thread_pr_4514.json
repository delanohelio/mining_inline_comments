{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODkxMTYy", "number": 4514, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyODoxNVrOEx0MTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNToxNTozMlrOFCZzoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjcwNzk2OnYy", "diffSide": "RIGHT", "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/JsonRestProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyODoxNVrOHoHF5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowMDoxN1rOHoKd3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMTI4Nw==", "bodyText": "Please remove todos", "url": "https://github.com/apache/camel/pull/4514#discussion_r511821287", "createdAt": "2020-10-26T09:28:15Z", "author": {"login": "oscerd"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/JsonRestProcessor.java", "diffHunk": "@@ -98,6 +98,14 @@ protected void processRequest(Exchange exchange) throws SalesforceException {\n                 exchange.setProperty(RESPONSE_CLASS, CreateSObjectResult.class);\n                 break;\n \n+            /**\n+             * TODO AHMEDBS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d988687ea19d8ece763253c26302de9351896cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3NjU3NQ==", "bodyText": "I will. Thanks.", "url": "https://github.com/apache/camel/pull/4514#discussion_r511876575", "createdAt": "2020-10-26T11:00:17Z", "author": {"login": "jbonofre"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/JsonRestProcessor.java", "diffHunk": "@@ -98,6 +98,14 @@ protected void processRequest(Exchange exchange) throws SalesforceException {\n                 exchange.setProperty(RESPONSE_CLASS, CreateSObjectResult.class);\n                 break;\n \n+            /**\n+             * TODO AHMEDBS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMTI4Nw=="}, "originalCommit": {"oid": "8d988687ea19d8ece763253c26302de9351896cf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjcwODU1OnYy", "diffSide": "RIGHT", "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/XmlRestProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOToyODoyNVrOHoHGQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDo1OTozMVrOHoKcHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMTM3OQ==", "bodyText": "Ditto", "url": "https://github.com/apache/camel/pull/4514#discussion_r511821379", "createdAt": "2020-10-26T09:28:25Z", "author": {"login": "oscerd"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/XmlRestProcessor.java", "diffHunk": "@@ -124,6 +124,13 @@ protected void processRequest(Exchange exchange) throws SalesforceException {\n                 exchange.setProperty(RESPONSE_CLASS, CreateSObjectResult.class);\n                 break;\n \n+            /**\n+             * TODO AHMEDBS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d988687ea19d8ece763253c26302de9351896cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3NjEyNg==", "bodyText": "I will fix. Thanks.", "url": "https://github.com/apache/camel/pull/4514#discussion_r511876126", "createdAt": "2020-10-26T10:59:31Z", "author": {"login": "jbonofre"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/processor/XmlRestProcessor.java", "diffHunk": "@@ -124,6 +124,13 @@ protected void processRequest(Exchange exchange) throws SalesforceException {\n                 exchange.setProperty(RESPONSE_CLASS, CreateSObjectResult.class);\n                 break;\n \n+            /**\n+             * TODO AHMEDBS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyMTM3OQ=="}, "originalCommit": {"oid": "8d988687ea19d8ece763253c26302de9351896cf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDYyNTE4OnYy", "diffSide": "RIGHT", "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/DefaultCompositeApiClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNToxMjo0OVrOIBiUJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoxNzowOVrOICESZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4MTcwMA==", "bodyText": "Remove system out, or change into a debug LOG", "url": "https://github.com/apache/camel/pull/4514#discussion_r538481700", "createdAt": "2020-12-08T15:12:49Z", "author": {"login": "davsclaus"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/DefaultCompositeApiClient.java", "diffHunk": "@@ -93,6 +93,35 @@ public DefaultCompositeApiClient(final SalesforceEndpointConfig configuration, f\n         xStreamCompositeTree.alias(\"SObjectTreeResponse\", SObjectTreeResponse.class);\n     }\n \n+    public void submitCompositeRaw(\n+            final InputStream raw, final Map<String, List<String>> headers,\n+            final ResponseCallback<InputStream> callback,\n+            final String sObjectName, final String extId, String compositeMethod)\n+            throws SalesforceException {\n+        checkCompositeFormat(format, SObjectComposite.REQUIRED_PAYLOAD_FORMAT);\n+\n+        final String url = String.format(\"%s%s/%s/%s/%s\", versionUrl(), \"composite\", \"sobjects\", sObjectName, extId);\n+\n+        System.out.println(\"URL: \" + url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a9b80beb664435ea385142b61699eccfde8bdf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzODMwOA==", "bodyText": "+1 (was debugging)", "url": "https://github.com/apache/camel/pull/4514#discussion_r539038308", "createdAt": "2020-12-09T06:17:09Z", "author": {"login": "jbonofre"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/client/DefaultCompositeApiClient.java", "diffHunk": "@@ -93,6 +93,35 @@ public DefaultCompositeApiClient(final SalesforceEndpointConfig configuration, f\n         xStreamCompositeTree.alias(\"SObjectTreeResponse\", SObjectTreeResponse.class);\n     }\n \n+    public void submitCompositeRaw(\n+            final InputStream raw, final Map<String, List<String>> headers,\n+            final ResponseCallback<InputStream> callback,\n+            final String sObjectName, final String extId, String compositeMethod)\n+            throws SalesforceException {\n+        checkCompositeFormat(format, SObjectComposite.REQUIRED_PAYLOAD_FORMAT);\n+\n+        final String url = String.format(\"%s%s/%s/%s/%s\", versionUrl(), \"composite\", \"sobjects\", sObjectName, extId);\n+\n+        System.out.println(\"URL: \" + url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4MTcwMA=="}, "originalCommit": {"oid": "42a9b80beb664435ea385142b61699eccfde8bdf"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDY0Mjg5OnYy", "diffSide": "RIGHT", "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceEndpointConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNToxNTozMlrOIBifow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoxODoyNVrOICEUPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4NDY0Mw==", "bodyText": "Can this be used both on consumer or producer? If not then add label to mark it as consumer or producer only.", "url": "https://github.com/apache/camel/pull/4514#discussion_r538484643", "createdAt": "2020-12-08T15:15:32Z", "author": {"login": "davsclaus"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceEndpointConfig.java", "diffHunk": "@@ -126,6 +127,8 @@\n     @UriParam\n     private String apexMethod;\n     @UriParam\n+    private String compositeMethod;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42a9b80beb664435ea385142b61699eccfde8bdf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzODc4Mw==", "bodyText": "Like apexMethod it's consumer only for now. Let me improve this (we should update apexMethod as well but it's another PR).", "url": "https://github.com/apache/camel/pull/4514#discussion_r539038783", "createdAt": "2020-12-09T06:18:25Z", "author": {"login": "jbonofre"}, "path": "components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/SalesforceEndpointConfig.java", "diffHunk": "@@ -126,6 +127,8 @@\n     @UriParam\n     private String apexMethod;\n     @UriParam\n+    private String compositeMethod;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ4NDY0Mw=="}, "originalCommit": {"oid": "42a9b80beb664435ea385142b61699eccfde8bdf"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4808, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}