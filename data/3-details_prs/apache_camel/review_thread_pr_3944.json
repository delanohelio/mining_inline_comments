{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTUyOTY3", "number": 3944, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTowN1rOEIVWUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo1NlrOEIyG8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTczODQzOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTowN1rOGoOxVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTowN1rOGoOxVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzODIzMQ==", "bodyText": "master is on 3.5.0-SNAPSHOT, this should change", "url": "https://github.com/apache/camel/pull/3944#discussion_r444838231", "createdAt": "2020-06-24T11:51:07Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/pom.xml", "diffHunk": "@@ -23,7 +23,7 @@\n     <parent>\n         <groupId>org.apache.camel</groupId>\n         <artifactId>components</artifactId>\n-        <version>3.5.0-SNAPSHOT</version>\n+        <version>3.4.0-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eef98b02d9d684d9dcb1d18a6f7b8c430526772b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTc0MDc0OnYy", "diffSide": "LEFT", "path": "components/camel-couchbase/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTo1NFrOGoOy2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1MTo1NFrOGoOy2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDgzODYxNg==", "bodyText": "Any reason why not using junit5? We have done a lot of effort on junit5 migration", "url": "https://github.com/apache/camel/pull/3944#discussion_r444838616", "createdAt": "2020-06-24T11:51:54Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/pom.xml", "diffHunk": "@@ -60,13 +60,13 @@\n \n         <dependency>\n             <groupId>org.apache.camel</groupId>\n-            <artifactId>camel-test-junit5</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eef98b02d9d684d9dcb1d18a6f7b8c430526772b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTc1MDU1OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseComponent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1NTowN1rOGoO4_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1NTowN1rOGoO4_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDE5MA==", "bodyText": "Formatting here is bit troublesome as it shows it big change meanwhile it is formatting", "url": "https://github.com/apache/camel/pull/3944#discussion_r444840190", "createdAt": "2020-06-24T11:55:07Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseComponent.java", "diffHunk": "@@ -1,44 +1,44 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.camel.component.couchbase;\n-\n-import java.util.Map;\n-\n-import org.apache.camel.CamelContext;\n-import org.apache.camel.spi.annotations.Component;\n-import org.apache.camel.support.DefaultComponent;\n-\n-/**\n- * Couchbase component.\n- */\n-@Component(\"couchbase\")\n-public class CouchbaseComponent extends DefaultComponent {\n-\n-    public CouchbaseComponent() {\n-    }\n-\n-    public CouchbaseComponent(CamelContext context) {\n-        super(context);\n-    }\n-\n-    @Override\n-    protected CouchbaseEndpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n-        CouchbaseEndpoint endpoint = new CouchbaseEndpoint(uri, remaining, this);\n-        setProperties(endpoint, parameters);\n-        return endpoint;\n-    }\n-}\n+/*\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c791030e2ca22b2e015648fab38865c6c1466216"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTc2MDY1OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1ODozOVrOGoO_jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMTo1ODozOVrOGoO_jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MTg3MA==", "bodyText": "Please retain from loading all statics through the wildcard", "url": "https://github.com/apache/camel/pull/3944#discussion_r444841870", "createdAt": "2020-06-24T11:58:39Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -37,21 +41,7 @@\n import org.apache.camel.spi.UriPath;\n import org.apache.camel.support.ScheduledPollEndpoint;\n \n-import static org.apache.camel.component.couchbase.CouchbaseConstants.COUCHBASE_PUT;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.COUCHBASE_URI_ERROR;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_CONSUME_PROCESSED_STRATEGY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_COUCHBASE_PORT;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_DESIGN_DOCUMENT_NAME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_MAX_RECONNECT_DELAY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_OBS_POLL_INTERVAL;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_OBS_TIMEOUT;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_OP_QUEUE_MAX_BLOCK_TIME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_OP_TIMEOUT;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_PAUSE_BETWEEN_RETRIES;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_PRODUCER_RETRIES;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_READ_BUFFER_SIZE;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_TIMEOUT_EXCEPTION_THRESHOLD;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.DEFAULT_VIEWNAME;\n+import static org.apache.camel.component.couchbase.CouchbaseConstants.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e937fd6f69b894a9459c063a1299eda4277d3720"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAyODQxOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MDo1OVrOGou_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MjoyNVrOGo41Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NjIxMg==", "bodyText": "Instead of a default value that is _default. Then why not leave it as null/empty and then use that to know if a custom scope was set or not", "url": "https://github.com/apache/camel/pull/3944#discussion_r445366212", "createdAt": "2020-06-25T07:40:59Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "diffHunk": "@@ -16,65 +16,76 @@\n  */\n package org.apache.camel.component.couchbase;\n \n-import com.couchbase.client.CouchbaseClient;\n-import com.couchbase.client.protocol.views.Query;\n-import com.couchbase.client.protocol.views.View;\n-import com.couchbase.client.protocol.views.ViewResponse;\n-import com.couchbase.client.protocol.views.ViewRow;\n+import java.util.List;\n+\n+import com.couchbase.client.java.Bucket;\n+import com.couchbase.client.java.Collection;\n+import com.couchbase.client.java.Scope;\n+import com.couchbase.client.java.view.ViewOptions;\n+import com.couchbase.client.java.view.ViewOrdering;\n+import com.couchbase.client.java.view.ViewResult;\n+import com.couchbase.client.java.view.ViewRow;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.camel.support.DefaultScheduledPollConsumer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_DESIGN_DOCUMENT_NAME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_ID;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_KEY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_VIEWNAME;\n+import static org.apache.camel.component.couchbase.CouchbaseConstants.*;\n \n public class CouchbaseConsumer extends DefaultScheduledPollConsumer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CouchbaseConsumer.class);\n \n     private final CouchbaseEndpoint endpoint;\n-    private final CouchbaseClient client;\n-    private final View view;\n-    private final Query query;\n-\n-    public CouchbaseConsumer(CouchbaseEndpoint endpoint, CouchbaseClient client, Processor processor) {\n+    private final Bucket bucket;\n+    private ViewOptions viewOptions;\n+    private Collection collection;\n \n+    public CouchbaseConsumer(CouchbaseEndpoint endpoint, Bucket client, Processor processor) {\n         super(endpoint, processor);\n-        this.client = client;\n+        this.bucket = client;\n         this.endpoint = endpoint;\n-        this.view = client.getView(endpoint.getDesignDocumentName(), endpoint.getViewName());\n-        this.query = new Query();\n+        Scope scope;\n+        if (!endpoint.getScope().equals(DEFAULT_SCOPE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNzMxOQ==", "bodyText": "yeah, that's a valid point. Will do.", "url": "https://github.com/apache/camel/pull/3944#discussion_r445527319", "createdAt": "2020-06-25T12:42:25Z", "author": {"login": "mmelko"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "diffHunk": "@@ -16,65 +16,76 @@\n  */\n package org.apache.camel.component.couchbase;\n \n-import com.couchbase.client.CouchbaseClient;\n-import com.couchbase.client.protocol.views.Query;\n-import com.couchbase.client.protocol.views.View;\n-import com.couchbase.client.protocol.views.ViewResponse;\n-import com.couchbase.client.protocol.views.ViewRow;\n+import java.util.List;\n+\n+import com.couchbase.client.java.Bucket;\n+import com.couchbase.client.java.Collection;\n+import com.couchbase.client.java.Scope;\n+import com.couchbase.client.java.view.ViewOptions;\n+import com.couchbase.client.java.view.ViewOrdering;\n+import com.couchbase.client.java.view.ViewResult;\n+import com.couchbase.client.java.view.ViewRow;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.camel.support.DefaultScheduledPollConsumer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_DESIGN_DOCUMENT_NAME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_ID;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_KEY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_VIEWNAME;\n+import static org.apache.camel.component.couchbase.CouchbaseConstants.*;\n \n public class CouchbaseConsumer extends DefaultScheduledPollConsumer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CouchbaseConsumer.class);\n \n     private final CouchbaseEndpoint endpoint;\n-    private final CouchbaseClient client;\n-    private final View view;\n-    private final Query query;\n-\n-    public CouchbaseConsumer(CouchbaseEndpoint endpoint, CouchbaseClient client, Processor processor) {\n+    private final Bucket bucket;\n+    private ViewOptions viewOptions;\n+    private Collection collection;\n \n+    public CouchbaseConsumer(CouchbaseEndpoint endpoint, Bucket client, Processor processor) {\n         super(endpoint, processor);\n-        this.client = client;\n+        this.bucket = client;\n         this.endpoint = endpoint;\n-        this.view = client.getView(endpoint.getDesignDocumentName(), endpoint.getViewName());\n-        this.query = new Query();\n+        Scope scope;\n+        if (!endpoint.getScope().equals(DEFAULT_SCOPE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NjIxMg=="}, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAyOTE0OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MTowOVrOGovALQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MTowOVrOGovALQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NjMxNw==", "bodyText": "The same as for default scope", "url": "https://github.com/apache/camel/pull/3944#discussion_r445366317", "createdAt": "2020-06-25T07:41:09Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "diffHunk": "@@ -16,65 +16,76 @@\n  */\n package org.apache.camel.component.couchbase;\n \n-import com.couchbase.client.CouchbaseClient;\n-import com.couchbase.client.protocol.views.Query;\n-import com.couchbase.client.protocol.views.View;\n-import com.couchbase.client.protocol.views.ViewResponse;\n-import com.couchbase.client.protocol.views.ViewRow;\n+import java.util.List;\n+\n+import com.couchbase.client.java.Bucket;\n+import com.couchbase.client.java.Collection;\n+import com.couchbase.client.java.Scope;\n+import com.couchbase.client.java.view.ViewOptions;\n+import com.couchbase.client.java.view.ViewOrdering;\n+import com.couchbase.client.java.view.ViewResult;\n+import com.couchbase.client.java.view.ViewRow;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.camel.support.DefaultScheduledPollConsumer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_DESIGN_DOCUMENT_NAME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_ID;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_KEY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_VIEWNAME;\n+import static org.apache.camel.component.couchbase.CouchbaseConstants.*;\n \n public class CouchbaseConsumer extends DefaultScheduledPollConsumer {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CouchbaseConsumer.class);\n \n     private final CouchbaseEndpoint endpoint;\n-    private final CouchbaseClient client;\n-    private final View view;\n-    private final Query query;\n-\n-    public CouchbaseConsumer(CouchbaseEndpoint endpoint, CouchbaseClient client, Processor processor) {\n+    private final Bucket bucket;\n+    private ViewOptions viewOptions;\n+    private Collection collection;\n \n+    public CouchbaseConsumer(CouchbaseEndpoint endpoint, Bucket client, Processor processor) {\n         super(endpoint, processor);\n-        this.client = client;\n+        this.bucket = client;\n         this.endpoint = endpoint;\n-        this.view = client.getView(endpoint.getDesignDocumentName(), endpoint.getViewName());\n-        this.query = new Query();\n+        Scope scope;\n+        if (!endpoint.getScope().equals(DEFAULT_SCOPE)) {\n+            scope = client.scope(endpoint.getScope());\n+        } else {\n+            scope = client.defaultScope();\n+        }\n+\n+        if (!endpoint.getCollection().equals(DEFAULT_COLLECTION)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAzMjA0OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MjowMVrOGovB_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MjowMVrOGovB_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2Njc4MQ==", "bodyText": "See my prev comments about default", "url": "https://github.com/apache/camel/pull/3944#discussion_r445366781", "createdAt": "2020-06-25T07:42:01Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -70,6 +71,12 @@\n \n     @UriParam\n     private String bucket;\n+    //\n+    @UriParam(defaultValue = \"_default\")\n+    private String collection = DEFAULT_COLLECTION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAzMjM0OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MjowOFrOGovCNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MjowOFrOGovCNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NjgzNg==", "bodyText": "Remove this", "url": "https://github.com/apache/camel/pull/3944#discussion_r445366836", "createdAt": "2020-06-25T07:42:08Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -70,6 +71,12 @@\n \n     @UriParam\n     private String bucket;\n+    //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAzNDg5OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0Mjo1MlrOGovDww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MTo1MVrOGo4ztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NzIzNQ==", "bodyText": "Do we know from couchbase what scopes is possible? If its like an enum then we can specify that via @UriParam so we have that information", "url": "https://github.com/apache/camel/pull/3944#discussion_r445367235", "createdAt": "2020-06-25T07:42:52Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -225,6 +219,28 @@ public void setPort(int port) {\n         this.port = port;\n     }\n \n+    /**\n+     * The collection to use\n+     */\n+    public String getCollection() {\n+        return this.collection;\n+    }\n+\n+    public void setCollection(String collection) {\n+        this.collection = collection;\n+    }\n+\n+    public String getScope() {\n+        return this.scope;\n+    }\n+\n+    /**\n+     * The scope to use", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNjk2NA==", "bodyText": "I believe you can create custom scopes with custom name .. so it's definitely not a enum.", "url": "https://github.com/apache/camel/pull/3944#discussion_r445526964", "createdAt": "2020-06-25T12:41:51Z", "author": {"login": "mmelko"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -225,6 +219,28 @@ public void setPort(int port) {\n         this.port = port;\n     }\n \n+    /**\n+     * The collection to use\n+     */\n+    public String getCollection() {\n+        return this.collection;\n+    }\n+\n+    public void setCollection(String collection) {\n+        this.collection = collection;\n+    }\n+\n+    public String getScope() {\n+        return this.scope;\n+    }\n+\n+    /**\n+     * The scope to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NzIzNQ=="}, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTAzNjAxOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MzowOVrOGovEcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0MzowOVrOGovEcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2NzQwOQ==", "bodyText": "in milli seconds", "url": "https://github.com/apache/camel/pull/3944#discussion_r445367409", "createdAt": "2020-06-25T07:43:09Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -434,98 +450,21 @@ public void setConsumerProcessedStrategy(String consumerProcessedStrategy) {\n         this.consumerProcessedStrategy = consumerProcessedStrategy;\n     }\n \n-    public long getOpTimeOut() {\n-        return opTimeOut;\n+    public long getQueryTimeout() {\n+        return queryTimeout;\n     }\n \n     /**\n      * Define the operation timeout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTA0MTI4OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0NDo0N1rOGovHyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0NDo0N1rOGovHyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2ODI2NQ==", "bodyText": "if isDebugEnabled", "url": "https://github.com/apache/camel/pull/3944#discussion_r445368265", "createdAt": "2020-06-25T07:44:47Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseProducer.java", "diffHunk": "@@ -149,21 +151,20 @@ private Boolean setDocument(String id, int expiry, Object obj, PersistTo persist\n \n     private Boolean setDocument(String id, int expiry, Object obj, int retryAttempts, PersistTo persistTo, ReplicateTo replicateTo) throws Exception {\n \n-        OperationFuture<Boolean> result = client.set(id, expiry, obj, persistTo, replicateTo);\n+        UpsertOptions options = UpsertOptions.upsertOptions()\n+                .expiry(Duration.ofSeconds(expiry))\n+                .durability(persistTo, replicateTo)\n+                .timeout(Duration.ofMillis(retryAttempts * producerRetryPause))\n+                .retryStrategy(BestEffortRetryStrategy.withExponentialBackoff(Duration.ofMillis(producerRetryPause), Duration.ofMillis(producerRetryPause), 1));\n+\n         try {\n-            if (!result.get()) {\n-                throw new Exception(\"Unable to save Document. \" + id);\n-            }\n-            return true;\n+            MutationResult result = collection.upsert(id, obj, options);\n+            LOG.debug(result.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTA0MjQ2OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseProducer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0NTowMlrOGovIbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNzo0NTowMlrOGovIbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2ODQzMA==", "bodyText": "Dont log and throw, just throw", "url": "https://github.com/apache/camel/pull/3944#discussion_r445368430", "createdAt": "2020-06-25T07:45:02Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseProducer.java", "diffHunk": "@@ -149,21 +151,20 @@ private Boolean setDocument(String id, int expiry, Object obj, PersistTo persist\n \n     private Boolean setDocument(String id, int expiry, Object obj, int retryAttempts, PersistTo persistTo, ReplicateTo replicateTo) throws Exception {\n \n-        OperationFuture<Boolean> result = client.set(id, expiry, obj, persistTo, replicateTo);\n+        UpsertOptions options = UpsertOptions.upsertOptions()\n+                .expiry(Duration.ofSeconds(expiry))\n+                .durability(persistTo, replicateTo)\n+                .timeout(Duration.ofMillis(retryAttempts * producerRetryPause))\n+                .retryStrategy(BestEffortRetryStrategy.withExponentialBackoff(Duration.ofMillis(producerRetryPause), Duration.ofMillis(producerRetryPause), 1));\n+\n         try {\n-            if (!result.get()) {\n-                throw new Exception(\"Unable to save Document. \" + id);\n-            }\n-            return true;\n+            MutationResult result = collection.upsert(id, obj, options);\n+            LOG.debug(result.toString());\n         } catch (Exception e) {\n-            if (retryAttempts <= 0) {\n-                throw e;\n-            } else {\n-                LOG.info(\"Unable to save Document, retrying in \" + producerRetryPause + \"ms (\" + retryAttempts + \")\");\n-                Thread.sleep(producerRetryPause);\n-                return setDocument(id, expiry, obj, retryAttempts - 1, persistTo, replicateTo);\n-            }\n+            LOG.error(\"Unable to save Document\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTExMjY0OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseComponent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODowNDo0N1rOGovzvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjozODowMFrOGo4rDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3OTUxOA==", "bodyText": "Formatting issues. Can you please take a look at your IDE settings perhaps?", "url": "https://github.com/apache/camel/pull/3944#discussion_r445379518", "createdAt": "2020-06-25T08:04:47Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseComponent.java", "diffHunk": "@@ -1,44 +1,44 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.camel.component.couchbase;\n-\n-import java.util.Map;\n-\n-import org.apache.camel.CamelContext;\n-import org.apache.camel.spi.annotations.Component;\n-import org.apache.camel.support.DefaultComponent;\n-\n-/**\n- * Couchbase component.\n- */\n-@Component(\"couchbase\")\n-public class CouchbaseComponent extends DefaultComponent {\n-\n-    public CouchbaseComponent() {\n-    }\n-\n-    public CouchbaseComponent(CamelContext context) {\n-        super(context);\n-    }\n-\n-    @Override\n-    protected CouchbaseEndpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n-        CouchbaseEndpoint endpoint = new CouchbaseEndpoint(uri, remaining, this);\n-        setProperties(endpoint, parameters);\n-        return endpoint;\n-    }\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.camel.component.couchbase;\r\n+\r\n+import java.util.Map;\r\n+\r\n+import org.apache.camel.CamelContext;\r\n+import org.apache.camel.spi.annotations.Component;\r\n+import org.apache.camel.support.DefaultComponent;\r\n+\r\n+/**\r\n+ * Couchbase component.\r\n+ */\r\n+@Component(\"couchbase\")\r\n+public class  CouchbaseComponent extends DefaultComponent {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyNDc1MA==", "bodyText": "Thanks for comments. I'm running it with sourcecheck profile. I will recheck my IDE settings.", "url": "https://github.com/apache/camel/pull/3944#discussion_r445524750", "createdAt": "2020-06-25T12:38:00Z", "author": {"login": "mmelko"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseComponent.java", "diffHunk": "@@ -1,44 +1,44 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.camel.component.couchbase;\n-\n-import java.util.Map;\n-\n-import org.apache.camel.CamelContext;\n-import org.apache.camel.spi.annotations.Component;\n-import org.apache.camel.support.DefaultComponent;\n-\n-/**\n- * Couchbase component.\n- */\n-@Component(\"couchbase\")\n-public class CouchbaseComponent extends DefaultComponent {\n-\n-    public CouchbaseComponent() {\n-    }\n-\n-    public CouchbaseComponent(CamelContext context) {\n-        super(context);\n-    }\n-\n-    @Override\n-    protected CouchbaseEndpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n-        CouchbaseEndpoint endpoint = new CouchbaseEndpoint(uri, remaining, this);\n-        setProperties(endpoint, parameters);\n-        return endpoint;\n-    }\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.camel.component.couchbase;\r\n+\r\n+import java.util.Map;\r\n+\r\n+import org.apache.camel.CamelContext;\r\n+import org.apache.camel.spi.annotations.Component;\r\n+import org.apache.camel.support.DefaultComponent;\r\n+\r\n+/**\r\n+ * Couchbase component.\r\n+ */\r\n+@Component(\"couchbase\")\r\n+public class  CouchbaseComponent extends DefaultComponent {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3OTUxOA=="}, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTExMzYyOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConstants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODowNDo1OFrOGov0PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODowNDo1OFrOGov0PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3OTY0NQ==", "bodyText": "here as well", "url": "https://github.com/apache/camel/pull/3944#discussion_r445379645", "createdAt": "2020-06-25T08:04:58Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConstants.java", "diffHunk": "@@ -28,6 +28,8 @@\n     String COUCHBASE_DELETE = \"CCB_DEL\";\n     String DEFAULT_DESIGN_DOCUMENT_NAME = \"beer\";\n     String DEFAULT_VIEWNAME = \"brewery_beers\";\n+    String  DEFAULT_COLLECTION = \"_default\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTExNjgxOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODowNTo0NVrOGov2Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODowNTo0NVrOGov2Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MDExOQ==", "bodyText": "wildcard import. Please avoid it", "url": "https://github.com/apache/camel/pull/3944#discussion_r445380119", "createdAt": "2020-06-25T08:05:45Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseConsumer.java", "diffHunk": "@@ -16,65 +16,76 @@\n  */\n package org.apache.camel.component.couchbase;\n \n-import com.couchbase.client.CouchbaseClient;\n-import com.couchbase.client.protocol.views.Query;\n-import com.couchbase.client.protocol.views.View;\n-import com.couchbase.client.protocol.views.ViewResponse;\n-import com.couchbase.client.protocol.views.ViewRow;\n+import java.util.List;\n+\n+import com.couchbase.client.java.Bucket;\n+import com.couchbase.client.java.Collection;\n+import com.couchbase.client.java.Scope;\n+import com.couchbase.client.java.view.ViewOptions;\n+import com.couchbase.client.java.view.ViewOrdering;\n+import com.couchbase.client.java.view.ViewResult;\n+import com.couchbase.client.java.view.ViewRow;\n import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n import org.apache.camel.support.DefaultScheduledPollConsumer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_DESIGN_DOCUMENT_NAME;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_ID;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_KEY;\n-import static org.apache.camel.component.couchbase.CouchbaseConstants.HEADER_VIEWNAME;\n+import static org.apache.camel.component.couchbase.CouchbaseConstants.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTEzNTU0OnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODoxMToxNFrOGowCNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwODoxMToxNFrOGowCNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MzIyMg==", "bodyText": "This meant to check if is an empty string, isn't? Then wouldn't be better something like:\nif(!addHosts.isEmpty())", "url": "https://github.com/apache/camel/pull/3944#discussion_r445383222", "createdAt": "2020-06-25T08:11:14Z", "author": {"login": "omarsmak"}, "path": "components/camel-couchbase/src/main/java/org/apache/camel/component/couchbase/CouchbaseEndpoint.java", "diffHunk": "@@ -554,37 +493,32 @@ public void setObsTimeout(long obsTimeout) {\n         return uriArray;\n     }\n \n-    private CouchbaseClient createClient() throws IOException, URISyntaxException {\n+    //create from couchbase-client\n+    private Bucket createClient() throws IOException, URISyntaxException {\n         List<URI> hosts = Arrays.asList(makeBootstrapURI());\n+        String connectionString;\n \n-        CouchbaseConnectionFactoryBuilder cfb = new CouchbaseConnectionFactoryBuilder();\n-\n-        if (opTimeOut != DEFAULT_OP_TIMEOUT) {\n-            cfb.setOpTimeout(opTimeOut);\n+        ClusterEnvironment.Builder cfb = ClusterEnvironment.builder();\n+        if (queryTimeout != DEFAULT_QUERY_TIMEOUT) {\n+            cfb.timeoutConfig().queryTimeout(Duration.ofMillis(queryTimeout));\n         }\n-        if (timeoutExceptionThreshold != DEFAULT_TIMEOUT_EXCEPTION_THRESHOLD) {\n-            cfb.setTimeoutExceptionThreshold(timeoutExceptionThreshold);\n-        }\n-        if (readBufferSize != DEFAULT_READ_BUFFER_SIZE) {\n-            cfb.setReadBufferSize(readBufferSize);\n-        }\n-        if (shouldOptimize) {\n-            cfb.setShouldOptimize(true);\n-        }\n-        if (maxReconnectDelay != DEFAULT_MAX_RECONNECT_DELAY) {\n-            cfb.setMaxReconnectDelay(maxReconnectDelay);\n-        }\n-        if (opQueueMaxBlockTime != DEFAULT_OP_QUEUE_MAX_BLOCK_TIME) {\n-            cfb.setOpQueueMaxBlockTime(opQueueMaxBlockTime);\n-        }\n-        if (obsPollInterval != DEFAULT_OBS_POLL_INTERVAL) {\n-            cfb.setObsPollInterval(obsPollInterval);\n-        }\n-        if (obsTimeout != DEFAULT_OBS_TIMEOUT) {\n-            cfb.setObsTimeout(obsTimeout);\n+\n+        ClusterEnvironment env = cfb.build();\n+\n+        String addHosts = hosts.stream()\n+                .map(URI::getHost)\n+                .collect(Collectors.joining(\",\"));\n+\n+        if (!\"\".equals(addHosts)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a80cbf011ecc0970d14cc8e3ffbcc7196ffc46"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQ0OTQyOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/test/java/org/apache/camel/component/couchbase/CouchbaseProducerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo0M1rOGo9CYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo0M1rOGo9CYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjI1OQ==", "bodyText": "Need to remove this", "url": "https://github.com/apache/camel/pull/3944#discussion_r445596259", "createdAt": "2020-06-25T14:21:43Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/test/java/org/apache/camel/component/couchbase/CouchbaseProducerTest.java", "diffHunk": "@@ -58,16 +66,21 @@\n     private Message msg;\n \n     @Mock\n-    private OperationFuture<?> response;\n+    private MutationResult response;\n+//    Observable<String> myStringObservable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c33d79680a711414f56ed0a9974ccce4aa9b642"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjQ1MDQwOnYy", "diffSide": "RIGHT", "path": "components/camel-couchbase/src/test/java/org/apache/camel/component/couchbase/CouchbaseProducerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo1NlrOGo9DBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDoyMTo1NlrOGo9DBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5NjQyMA==", "bodyText": "Remove this", "url": "https://github.com/apache/camel/pull/3944#discussion_r445596420", "createdAt": "2020-06-25T14:21:56Z", "author": {"login": "davsclaus"}, "path": "components/camel-couchbase/src/test/java/org/apache/camel/component/couchbase/CouchbaseProducerTest.java", "diffHunk": "@@ -107,111 +120,28 @@ public void testMaximumValuesForPersistToAndRepicateTo() throws Exception {\n         producer = new CouchbaseProducer(endpoint, client, 4, 3);\n     }\n \n+    //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c33d79680a711414f56ed0a9974ccce4aa9b642"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4934, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}