{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDA0OTIw", "number": 3574, "title": "CAMEL-14543: Execute camel-etcd tests with testcontainers", "bodyText": "", "createdAt": "2020-02-12T16:29:38Z", "url": "https://github.com/apache/camel/pull/3574", "merged": true, "mergeCommit": {"oid": "639ad830b955ae3c85413f008f248cb5e31542c9"}, "closed": true, "closedAt": "2020-02-13T13:36:12Z", "author": {"login": "lburgazzoli"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDo9DwgFqTM1NzYwMTAwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD4J1kgFqTM1ODA5NjA0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjAxMDA5", "url": "https://github.com/apache/camel/pull/3574#pullrequestreview-357601009", "createdAt": "2020-02-12T16:30:45Z", "commit": {"oid": "05b3a588c6eb945ab2a428a0ff6ae60176cd34ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjMxODA4", "url": "https://github.com/apache/camel/pull/3574#pullrequestreview-357631808", "createdAt": "2020-02-12T17:09:01Z", "commit": {"oid": "05b3a588c6eb945ab2a428a0ff6ae60176cd34ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzowOTowMlrOFo3IMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzowOTowMlrOFo3IMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ==", "bodyText": "I think 0.0.0.0 here should be replaced with DockerClientFactory.instance().dockerHostIpAddress(), if that's the endpoint the client will be trying to reach at", "url": "https://github.com/apache/camel/pull/3574#discussion_r378390579", "createdAt": "2020-02-12T17:09:02Z", "author": {"login": "bsideup"}, "path": "components/camel-etcd/src/test/java/org/apache/camel/component/etcd/EtcdTestSupport.java", "diffHunk": "@@ -35,12 +43,50 @@ public void process(Exchange exchange) throws Exception {\n         }\n     };\n \n-    @Override\n-    public boolean isCreateCamelContextPerClass() {\n-        return false;\n+    protected String getClientUri() {\n+        return String.format(\n+            \"http://%s:%d\",\n+            getContainerHost(CONTAINER_NAME),\n+            getContainerPort(CONTAINER_NAME, ETCD_CLIENT_PORT));\n     }\n \n     protected EtcdClient getClient() {\n-        return new EtcdClient(URI.create(\"http://localhost:2379\"));\n+        return new EtcdClient(URI.create(getClientUri()));\n+    }\n+\n+    @Override\n+    protected CamelContext createCamelContext() throws Exception {\n+        EtcdKeysComponent keys = new EtcdKeysComponent();\n+        keys.setUris(getClientUri());\n+\n+        EtcdStatsComponent stats = new EtcdStatsComponent();\n+        stats.setUris(getClientUri());\n+\n+        EtcdWatchComponent watch = new EtcdWatchComponent();\n+        watch.setUris(getClientUri());\n+\n+        CamelContext context = super.createCamelContext();\n+        context.addComponent(\"etcd-keys\", keys);\n+        context.addComponent(\"etcd-stats\", stats);\n+        context.addComponent(\"etcd-watch\", watch);\n+\n+        return context;\n+    }\n+\n+    @Override\n+    protected GenericContainer<?> createContainer() {\n+        return etcdContainer();\n+    }\n+\n+    public static GenericContainer etcdContainer() {\n+        return new GenericContainer(CONTAINER_IMAGE)\n+            .withNetworkAliases(CONTAINER_NAME)\n+            .withExposedPorts(ETCD_CLIENT_PORT, ETCD_PEER_PORT)\n+            .waitingFor(Wait.forLogMessageContaining(\"etcdserver: set the initial cluster version\", 1))\n+            .withCommand(\n+                \"-name\", CONTAINER_NAME + \"-0\",\n+                \"-advertise-client-urls\", \"http://0.0.0.0:\" + ETCD_CLIENT_PORT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05b3a588c6eb945ab2a428a0ff6ae60176cd34ed"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel/commit/c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "committedDate": "2020-02-13T10:05:15Z", "message": "CAMEL-14543: Execute camel-etcd tests with testcontainers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05b3a588c6eb945ab2a428a0ff6ae60176cd34ed", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel/commit/05b3a588c6eb945ab2a428a0ff6ae60176cd34ed", "committedDate": "2020-02-12T16:28:56Z", "message": "CAMEL-14543: Execute camel-etcd tests with testcontainers"}, "afterCommit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "author": {"user": {"login": "lburgazzoli", "name": "Luca Burgazzoli"}}, "url": "https://github.com/apache/camel/commit/c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "committedDate": "2020-02-13T10:05:15Z", "message": "CAMEL-14543: Execute camel-etcd tests with testcontainers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDk1MTQ1", "url": "https://github.com/apache/camel/pull/3574#pullrequestreview-358095145", "createdAt": "2020-02-13T10:11:55Z", "commit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxMTo1NVrOFpN-0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxMTo1NVrOFpN-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTAwOQ==", "bodyText": "Consider also checking Windows and npipe", "url": "https://github.com/apache/camel/pull/3574#discussion_r378765009", "createdAt": "2020-02-13T10:11:55Z", "author": {"login": "bsideup"}, "path": "components/camel-etcd/pom.xml", "diffHunk": "@@ -109,17 +109,47 @@\n                 </plugins>\n             </build>\n         </profile>\n+\n+        <!-- activate test if the docker socket file is accessible -->\n+        <profile>\n+            <id>etcd-tests-docker-file</id>\n+            <activation>\n+                <file>\n+                    <exists>/var/run/docker.sock</exists>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDk2MDQx", "url": "https://github.com/apache/camel/pull/3574#pullrequestreview-358096041", "createdAt": "2020-02-13T10:13:16Z", "commit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxMzoxN1rOFpOBuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoxMzoxN1rOFpOBuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw==", "bodyText": "actually, I just realized that ETCD_CLIENT_PORT will not be the same as the randomly selected port.\nSince it works, perhaps you don't need it at all?", "url": "https://github.com/apache/camel/pull/3574#discussion_r378765753", "createdAt": "2020-02-13T10:13:17Z", "author": {"login": "bsideup"}, "path": "components/camel-etcd/src/test/java/org/apache/camel/component/etcd/support/EtcdTestSupport.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.etcd.support;\n+\n+import java.net.URI;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import mousio.etcd4j.EtcdClient;\n+import mousio.etcd4j.responses.EtcdKeysResponse;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.Processor;\n+import org.apache.camel.component.etcd.EtcdHelper;\n+import org.apache.camel.component.etcd.EtcdKeysComponent;\n+import org.apache.camel.component.etcd.EtcdStatsComponent;\n+import org.apache.camel.component.etcd.EtcdWatchComponent;\n+import org.apache.camel.test.testcontainers.junit5.ContainerAwareTestSupport;\n+import org.apache.camel.test.testcontainers.junit5.Wait;\n+import org.testcontainers.DockerClientFactory;\n+import org.testcontainers.containers.GenericContainer;\n+\n+public abstract class EtcdTestSupport extends ContainerAwareTestSupport {\n+    public static final ObjectMapper MAPPER = EtcdHelper.createObjectMapper();\n+    public static final String CONTAINER_IMAGE = \"quay.io/coreos/etcd:v2.3.7\";\n+    public static final String CONTAINER_NAME = \"etcd\";\n+    public static final int ETCD_CLIENT_PORT = 2379;\n+    public static final int ETCD_PEER_PORT = 2380;\n+\n+    protected static final Processor NODE_TO_VALUE_IN = exchange -> {\n+        EtcdKeysResponse response = exchange.getMessage().getBody(EtcdKeysResponse.class);\n+        if (response != null) {\n+            exchange.getMessage().setBody(response.node.key + \"=\" + response.node.value);\n+        }\n+    };\n+\n+    protected String getClientUri() {\n+        return String.format(\n+            \"http://%s:%d\",\n+            getContainerHost(CONTAINER_NAME),\n+            getContainerPort(CONTAINER_NAME, ETCD_CLIENT_PORT));\n+    }\n+\n+    protected EtcdClient getClient() {\n+        return new EtcdClient(URI.create(getClientUri()));\n+    }\n+\n+    @Override\n+    protected CamelContext createCamelContext() throws Exception {\n+        EtcdKeysComponent keys = new EtcdKeysComponent();\n+        keys.setUris(getClientUri());\n+\n+        EtcdStatsComponent stats = new EtcdStatsComponent();\n+        stats.setUris(getClientUri());\n+\n+        EtcdWatchComponent watch = new EtcdWatchComponent();\n+        watch.setUris(getClientUri());\n+\n+        CamelContext context = super.createCamelContext();\n+        context.addComponent(\"etcd-keys\", keys);\n+        context.addComponent(\"etcd-stats\", stats);\n+        context.addComponent(\"etcd-watch\", watch);\n+\n+        return context;\n+    }\n+\n+    @Override\n+    protected GenericContainer<?> createContainer() {\n+        return etcdContainer();\n+    }\n+\n+    public static GenericContainer etcdContainer() {\n+        return new GenericContainer(CONTAINER_IMAGE)\n+            .withNetworkAliases(CONTAINER_NAME)\n+            .withExposedPorts(ETCD_CLIENT_PORT, ETCD_PEER_PORT)\n+            .waitingFor(Wait.forLogMessageContaining(\"etcdserver: set the initial cluster version\", 1))\n+            .withCommand(\n+                \"-name\", CONTAINER_NAME + \"-0\",\n+                \"-advertise-client-urls\", \"http://\" + DockerClientFactory.instance().dockerHostIpAddress() + \":\" + ETCD_CLIENT_PORT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2681, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}