{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTA5OTIz", "number": 3471, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxOToxMTo1OFrODW9Ljg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxOToxMTo1OFrODW9Ljg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Mzk3NjQ2OnYy", "diffSide": "RIGHT", "path": "components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxOToxMTo1OFrOFcAh2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTowOTozM1rOFcW1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkxMzExMg==", "bodyText": "Perhaps?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(\"no such method \" + this);\n          \n          \n            \n                        throw new IllegalArgumentException(\"Unupported HTTP verb: \" + this);", "url": "https://github.com/apache/camel/pull/3471#discussion_r364913112", "createdAt": "2020-01-09T19:11:58Z", "author": {"login": "zregvart"}, "path": "components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java", "diffHunk": "@@ -41,38 +41,32 @@\n     OPTIONS(HttpOptions.class),\n     TRACE(HttpTrace.class);\n \n-    final Class<? extends HttpRequestBase> clazz;\n     final boolean entity;\n \n     HttpMethods(Class<? extends HttpRequestBase> clazz) {\n-        this.clazz = clazz;\n         entity = HttpEntityEnclosingRequestBase.class.isAssignableFrom(clazz);\n     }\n \n     public HttpRequestBase createMethod(final String url) {\n-        try {\n-            switch (this) {\n-            case GET:\n-                return new HttpGet(url);\n-            case PATCH:\n-                return new HttpPatch(url);\n-            case POST:\n-                return new HttpPost(url);\n-            case PUT:\n-                return new HttpPut(url);\n-            case DELETE:\n-                return new HttpDelete(url);\n-            case HEAD:\n-                return new HttpHead(url);\n-            case OPTIONS:\n-                return new HttpOptions(url);\n-            case TRACE:\n-                return new HttpTrace(url);\n-            default:\n-                throw new RuntimeException(\"no such method \" + this);\n-            }\n-        } catch (IllegalArgumentException e) {\n-            throw new RuntimeException(e);\n+        switch (this) {\n+        case GET:\n+            return new HttpGet(url);\n+        case PATCH:\n+            return new HttpPatch(url);\n+        case POST:\n+            return new HttpPost(url);\n+        case PUT:\n+            return new HttpPut(url);\n+        case DELETE:\n+            return new HttpDelete(url);\n+        case HEAD:\n+            return new HttpHead(url);\n+        case OPTIONS:\n+            return new HttpOptions(url);\n+        case TRACE:\n+            return new HttpTrace(url);\n+        default:\n+            throw new RuntimeException(\"no such method \" + this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d573054ddf6b1b539a0323171b1f01d87d2cf15"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkzOTc3Mg==", "bodyText": "Yes, that was another part of ceffe62 I considered changing.\nBut the exception will only be thrown if another constant is added to the HttpMethods enum and no matching case is added to this switch (or am I missing something?). I was not sure which exception class to use. My first thought was llegalArgumentException as well, but as the switch is on this and not on an argument of the createMethod method so using an llegalArgumentException seemed misleading. An exception signalling that a bug (missing implementation) was encountered seems more appropriate (like GroovyBugError used by Groovy).", "url": "https://github.com/apache/camel/pull/3471#discussion_r364939772", "createdAt": "2020-01-09T20:14:52Z", "author": {"login": "PascalSchumacher"}, "path": "components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java", "diffHunk": "@@ -41,38 +41,32 @@\n     OPTIONS(HttpOptions.class),\n     TRACE(HttpTrace.class);\n \n-    final Class<? extends HttpRequestBase> clazz;\n     final boolean entity;\n \n     HttpMethods(Class<? extends HttpRequestBase> clazz) {\n-        this.clazz = clazz;\n         entity = HttpEntityEnclosingRequestBase.class.isAssignableFrom(clazz);\n     }\n \n     public HttpRequestBase createMethod(final String url) {\n-        try {\n-            switch (this) {\n-            case GET:\n-                return new HttpGet(url);\n-            case PATCH:\n-                return new HttpPatch(url);\n-            case POST:\n-                return new HttpPost(url);\n-            case PUT:\n-                return new HttpPut(url);\n-            case DELETE:\n-                return new HttpDelete(url);\n-            case HEAD:\n-                return new HttpHead(url);\n-            case OPTIONS:\n-                return new HttpOptions(url);\n-            case TRACE:\n-                return new HttpTrace(url);\n-            default:\n-                throw new RuntimeException(\"no such method \" + this);\n-            }\n-        } catch (IllegalArgumentException e) {\n-            throw new RuntimeException(e);\n+        switch (this) {\n+        case GET:\n+            return new HttpGet(url);\n+        case PATCH:\n+            return new HttpPatch(url);\n+        case POST:\n+            return new HttpPost(url);\n+        case PUT:\n+            return new HttpPut(url);\n+        case DELETE:\n+            return new HttpDelete(url);\n+        case HEAD:\n+            return new HttpHead(url);\n+        case OPTIONS:\n+            return new HttpOptions(url);\n+        case TRACE:\n+            return new HttpTrace(url);\n+        default:\n+            throw new RuntimeException(\"no such method \" + this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkxMzExMg=="}, "originalCommit": {"oid": "6d573054ddf6b1b539a0323171b1f01d87d2cf15"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE3NzM1Mg==", "bodyText": "Yeah, I'm nitpicking, there's little chance for that exception to even occur. IllegalArgumentException or IllegalStateException are my go-to exceptions in lieu of RuntimeException. Not that important, only of you think it merits the change...", "url": "https://github.com/apache/camel/pull/3471#discussion_r365177352", "createdAt": "2020-01-10T10:50:39Z", "author": {"login": "zregvart"}, "path": "components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java", "diffHunk": "@@ -41,38 +41,32 @@\n     OPTIONS(HttpOptions.class),\n     TRACE(HttpTrace.class);\n \n-    final Class<? extends HttpRequestBase> clazz;\n     final boolean entity;\n \n     HttpMethods(Class<? extends HttpRequestBase> clazz) {\n-        this.clazz = clazz;\n         entity = HttpEntityEnclosingRequestBase.class.isAssignableFrom(clazz);\n     }\n \n     public HttpRequestBase createMethod(final String url) {\n-        try {\n-            switch (this) {\n-            case GET:\n-                return new HttpGet(url);\n-            case PATCH:\n-                return new HttpPatch(url);\n-            case POST:\n-                return new HttpPost(url);\n-            case PUT:\n-                return new HttpPut(url);\n-            case DELETE:\n-                return new HttpDelete(url);\n-            case HEAD:\n-                return new HttpHead(url);\n-            case OPTIONS:\n-                return new HttpOptions(url);\n-            case TRACE:\n-                return new HttpTrace(url);\n-            default:\n-                throw new RuntimeException(\"no such method \" + this);\n-            }\n-        } catch (IllegalArgumentException e) {\n-            throw new RuntimeException(e);\n+        switch (this) {\n+        case GET:\n+            return new HttpGet(url);\n+        case PATCH:\n+            return new HttpPatch(url);\n+        case POST:\n+            return new HttpPost(url);\n+        case PUT:\n+            return new HttpPut(url);\n+        case DELETE:\n+            return new HttpDelete(url);\n+        case HEAD:\n+            return new HttpHead(url);\n+        case OPTIONS:\n+            return new HttpOptions(url);\n+        case TRACE:\n+            return new HttpTrace(url);\n+        default:\n+            throw new RuntimeException(\"no such method \" + this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkxMzExMg=="}, "originalCommit": {"oid": "6d573054ddf6b1b539a0323171b1f01d87d2cf15"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI3ODcxOQ==", "bodyText": "Replacing the swith with inheritance (see: #3475) would allow us to get rid of the exception.", "url": "https://github.com/apache/camel/pull/3471#discussion_r365278719", "createdAt": "2020-01-10T15:09:33Z", "author": {"login": "PascalSchumacher"}, "path": "components/camel-http/src/main/java/org/apache/camel/component/http/HttpMethods.java", "diffHunk": "@@ -41,38 +41,32 @@\n     OPTIONS(HttpOptions.class),\n     TRACE(HttpTrace.class);\n \n-    final Class<? extends HttpRequestBase> clazz;\n     final boolean entity;\n \n     HttpMethods(Class<? extends HttpRequestBase> clazz) {\n-        this.clazz = clazz;\n         entity = HttpEntityEnclosingRequestBase.class.isAssignableFrom(clazz);\n     }\n \n     public HttpRequestBase createMethod(final String url) {\n-        try {\n-            switch (this) {\n-            case GET:\n-                return new HttpGet(url);\n-            case PATCH:\n-                return new HttpPatch(url);\n-            case POST:\n-                return new HttpPost(url);\n-            case PUT:\n-                return new HttpPut(url);\n-            case DELETE:\n-                return new HttpDelete(url);\n-            case HEAD:\n-                return new HttpHead(url);\n-            case OPTIONS:\n-                return new HttpOptions(url);\n-            case TRACE:\n-                return new HttpTrace(url);\n-            default:\n-                throw new RuntimeException(\"no such method \" + this);\n-            }\n-        } catch (IllegalArgumentException e) {\n-            throw new RuntimeException(e);\n+        switch (this) {\n+        case GET:\n+            return new HttpGet(url);\n+        case PATCH:\n+            return new HttpPatch(url);\n+        case POST:\n+            return new HttpPost(url);\n+        case PUT:\n+            return new HttpPut(url);\n+        case DELETE:\n+            return new HttpDelete(url);\n+        case HEAD:\n+            return new HttpHead(url);\n+        case OPTIONS:\n+            return new HttpOptions(url);\n+        case TRACE:\n+            return new HttpTrace(url);\n+        default:\n+            throw new RuntimeException(\"no such method \" + this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkxMzExMg=="}, "originalCommit": {"oid": "6d573054ddf6b1b539a0323171b1f01d87d2cf15"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}