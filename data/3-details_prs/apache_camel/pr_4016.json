{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyMTQ5NTIz", "number": 4016, "title": "CAMEL-15339 Opentelemetry component", "bodyText": "The intention of this PR is to add opentelemetry support to camel,\nThis initial PR will do the same as camel-opentracing component, but will use opentelemetry to do it. I had to refactor camel-opentracing in order to reuse span decorators. In order to do that I created a new component camel-tracing which contains all common interfaces used by SpanDecorator, and a general Tracer abstract class . Both implementations opentracing and opentelemetry should extend Tracer and implement the abstract methods, they should also  implement the SpanAdapter interface ,the interface used by the decorators to add tags, labels etc.. to the Span.\nNot sure if this is the right approach If someone could give me more feedback on this will be appreciated. I would like o hear more options.", "createdAt": "2020-07-18T21:22:04Z", "url": "https://github.com/apache/camel/pull/4016", "merged": true, "mergeCommit": {"oid": "ff6d52b6d8e9a6a5427343968ebd4a520a154a9f"}, "closed": true, "closedAt": "2020-07-29T06:02:09Z", "author": {"login": "rubenvp8510"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2QfHyABqjM1NjE3MzU5MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5XlzCAH2gAyNDUyMTQ5NTIzOjBlMDkxMjM2YjMzNWFiZjkwZmM1ZWI0ZjU3N2IyMzljN2I2NGQ2YmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48e835c25a3c7f7b1a7c214dbbde65cf1550844a", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/48e835c25a3c7f7b1a7c214dbbde65cf1550844a", "committedDate": "2020-07-18T21:09:32Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "2cb8fb8efed2500ca1a76a28cb8376917aaded78", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/2cb8fb8efed2500ca1a76a28cb8376917aaded78", "committedDate": "2020-07-18T22:50:20Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cb8fb8efed2500ca1a76a28cb8376917aaded78", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/2cb8fb8efed2500ca1a76a28cb8376917aaded78", "committedDate": "2020-07-18T22:50:20Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "2e85ed4d61ed60e385210d5d2479a1f44d0d072d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/2e85ed4d61ed60e385210d5d2479a1f44d0d072d", "committedDate": "2020-07-18T22:56:45Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e85ed4d61ed60e385210d5d2479a1f44d0d072d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/2e85ed4d61ed60e385210d5d2479a1f44d0d072d", "committedDate": "2020-07-18T22:56:45Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/c225d92cd45382730829d3200ec63c9fe5acbdb1", "committedDate": "2020-07-19T01:00:48Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzI4OTE3", "url": "https://github.com/apache/camel/pull/4016#pullrequestreview-451328917", "createdAt": "2020-07-20T06:34:06Z", "commit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNDowNlrOGz69Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjozNjo0NlrOGz7DEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NjUzMA==", "bodyText": "you should use the version from parent POM", "url": "https://github.com/apache/camel/pull/4016#discussion_r457096530", "createdAt": "2020-07-20T06:34:06Z", "author": {"login": "oscerd"}, "path": "components/camel-opentelemetry/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.camel</groupId>\n+    <artifactId>components</artifactId>\n+    <version>3.5.0-SNAPSHOT</version>\n+  </parent>\n+\n+\n+  <artifactId>camel-opentelemetry</artifactId>\n+  <packaging>jar</packaging>\n+  <name>Camel :: OpenTelemetry</name>\n+  <description>Distributed tracing using OpenTelemetry</description>\n+\n+  <properties>\n+    <firstVersion>3.5.0</firstVersion>\n+    <label>monitoring,microservice</label>\n+    <title>OpenTelemetry</title>\n+    <opentracing-agent.lib>${project.build.directory}/lib</opentracing-agent.lib>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-support</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-tracing</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-netty-shaded</artifactId>\n+      <version>1.28.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NjY0NA==", "bodyText": "It should be declared in the parent POM", "url": "https://github.com/apache/camel/pull/4016#discussion_r457096644", "createdAt": "2020-07-20T06:34:20Z", "author": {"login": "oscerd"}, "path": "components/camel-opentelemetry/pom.xml", "diffHunk": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.camel</groupId>\n+    <artifactId>components</artifactId>\n+    <version>3.5.0-SNAPSHOT</version>\n+  </parent>\n+\n+\n+  <artifactId>camel-opentelemetry</artifactId>\n+  <packaging>jar</packaging>\n+  <name>Camel :: OpenTelemetry</name>\n+  <description>Distributed tracing using OpenTelemetry</description>\n+\n+  <properties>\n+    <firstVersion>3.5.0</firstVersion>\n+    <label>monitoring,microservice</label>\n+    <title>OpenTelemetry</title>\n+    <opentracing-agent.lib>${project.build.directory}/lib</opentracing-agent.lib>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-support</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-tracing</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-netty-shaded</artifactId>\n+      <version>1.28.0</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opentelemetry</groupId>\n+      <artifactId>opentelemetry-sdk</artifactId>\n+      <version>0.6.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5Njg4Mg==", "bodyText": "Please use the explicit imports, no * operator", "url": "https://github.com/apache/camel/pull/4016#discussion_r457096882", "createdAt": "2020-07-20T06:34:45Z", "author": {"login": "oscerd"}, "path": "components/camel-opentelemetry/src/main/java/org/apache/camel/opentelemetry/OpenTelemetrySpanWrapper.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.opentelemetry;\n+\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5NzU0MQ==", "bodyText": "This will probably create conflicts with this #4001 once we merge it", "url": "https://github.com/apache/camel/pull/4016#discussion_r457097541", "createdAt": "2020-07-20T06:35:57Z", "author": {"login": "oscerd"}, "path": "components/camel-opentracing/src/main/java/org/apache/camel/opentracing/GetBaggageProcessor.java", "diffHunk": "@@ -24,6 +24,7 @@\n import org.apache.camel.spi.IdAware;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5ODAwMA==", "bodyText": "Please use the explicit imports.", "url": "https://github.com/apache/camel/pull/4016#discussion_r457098000", "createdAt": "2020-07-20T06:36:46Z", "author": {"login": "oscerd"}, "path": "components/camel-opentracing/src/test/java/org/apache/camel/opentracing/CamelOpenTracingTestSupport.java", "diffHunk": "@@ -14,16 +14,11 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.camel.opentracing;\n \n-import java.net.URI;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.net.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c225d92cd45382730829d3200ec63c9fe5acbdb1", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/c225d92cd45382730829d3200ec63c9fe5acbdb1", "committedDate": "2020-07-19T01:00:48Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "dabffd056257d9a3961a93658b98587e8727d63e", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/dabffd056257d9a3961a93658b98587e8727d63e", "committedDate": "2020-07-24T18:06:24Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dabffd056257d9a3961a93658b98587e8727d63e", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/dabffd056257d9a3961a93658b98587e8727d63e", "committedDate": "2020-07-24T18:06:24Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "b978c4c241e787c1922092b3a1fdf2fcfa7d7e86", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/b978c4c241e787c1922092b3a1fdf2fcfa7d7e86", "committedDate": "2020-07-24T22:19:43Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b978c4c241e787c1922092b3a1fdf2fcfa7d7e86", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/b978c4c241e787c1922092b3a1fdf2fcfa7d7e86", "committedDate": "2020-07-24T22:19:43Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "bda0378ea9575407b774106a9cebf2a06e283594", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/bda0378ea9575407b774106a9cebf2a06e283594", "committedDate": "2020-07-24T23:37:09Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bda0378ea9575407b774106a9cebf2a06e283594", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/bda0378ea9575407b774106a9cebf2a06e283594", "committedDate": "2020-07-24T23:37:09Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "22b9d955cf46426574bf20f8602bcfbae41ec3f5", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/22b9d955cf46426574bf20f8602bcfbae41ec3f5", "committedDate": "2020-07-24T23:40:17Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22b9d955cf46426574bf20f8602bcfbae41ec3f5", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/22b9d955cf46426574bf20f8602bcfbae41ec3f5", "committedDate": "2020-07-24T23:40:17Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "7a8503e6ffb3b3e7c6619525f50b00f917aed71b", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/7a8503e6ffb3b3e7c6619525f50b00f917aed71b", "committedDate": "2020-07-24T23:55:40Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a8503e6ffb3b3e7c6619525f50b00f917aed71b", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/7a8503e6ffb3b3e7c6619525f50b00f917aed71b", "committedDate": "2020-07-24T23:55:40Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "efb5b3c26e4408d8d2c9aae224e85a3a2407be89", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/efb5b3c26e4408d8d2c9aae224e85a3a2407be89", "committedDate": "2020-07-25T00:06:07Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "efb5b3c26e4408d8d2c9aae224e85a3a2407be89", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/efb5b3c26e4408d8d2c9aae224e85a3a2407be89", "committedDate": "2020-07-25T00:06:07Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "843edd0a1b3755b0acb9f0bd0536ca6c216fceb6", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/843edd0a1b3755b0acb9f0bd0536ca6c216fceb6", "committedDate": "2020-07-25T00:10:20Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "843edd0a1b3755b0acb9f0bd0536ca6c216fceb6", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/843edd0a1b3755b0acb9f0bd0536ca6c216fceb6", "committedDate": "2020-07-25T00:10:20Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "0860f26cfd1e5beaeda2f07eb8d1d4fdcec572f0", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/0860f26cfd1e5beaeda2f07eb8d1d4fdcec572f0", "committedDate": "2020-07-25T00:19:22Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0860f26cfd1e5beaeda2f07eb8d1d4fdcec572f0", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/0860f26cfd1e5beaeda2f07eb8d1d4fdcec572f0", "committedDate": "2020-07-25T00:19:22Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "17eee21e2b4245484976acc03cc0992bfe1cba95", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/17eee21e2b4245484976acc03cc0992bfe1cba95", "committedDate": "2020-07-25T00:35:45Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6cd29564abdb3cc319ff273ec0b629fc87cb526", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/f6cd29564abdb3cc319ff273ec0b629fc87cb526", "committedDate": "2020-07-25T01:16:22Z", "message": "Refactor span decorators to be used in opentelemetry/opentracing\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17eee21e2b4245484976acc03cc0992bfe1cba95", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/17eee21e2b4245484976acc03cc0992bfe1cba95", "committedDate": "2020-07-25T00:35:45Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "9a631ea3bb96f5fd24217bf43dc71dc3ae70c63d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/9a631ea3bb96f5fd24217bf43dc71dc3ae70c63d", "committedDate": "2020-07-25T01:20:35Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a631ea3bb96f5fd24217bf43dc71dc3ae70c63d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/9a631ea3bb96f5fd24217bf43dc71dc3ae70c63d", "committedDate": "2020-07-25T01:20:35Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "1f04f1a68a5efb7fb700d272ed91548e755d8326", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/1f04f1a68a5efb7fb700d272ed91548e755d8326", "committedDate": "2020-07-25T03:39:18Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f04f1a68a5efb7fb700d272ed91548e755d8326", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/1f04f1a68a5efb7fb700d272ed91548e755d8326", "committedDate": "2020-07-25T03:39:18Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "6b4e2bccf263361b7594276b68c2172b636cc03d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/6b4e2bccf263361b7594276b68c2172b636cc03d", "committedDate": "2020-07-25T04:37:41Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "819ccdcbba9b5eb6d69580dea35ed8d438621820", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/819ccdcbba9b5eb6d69580dea35ed8d438621820", "committedDate": "2020-07-27T04:58:34Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b4e2bccf263361b7594276b68c2172b636cc03d", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/6b4e2bccf263361b7594276b68c2172b636cc03d", "committedDate": "2020-07-25T04:37:41Z", "message": "Unify tracing class\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "ac74e28d73927dc067768c9700aa9b242d924454", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/ac74e28d73927dc067768c9700aa9b242d924454", "committedDate": "2020-07-27T04:59:32Z", "message": "opentracing basic tests\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/3bae0052d78ef2858bcd328d7268baf3a7e98b3a", "committedDate": "2020-07-27T13:39:50Z", "message": "opentracing basic tests\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac74e28d73927dc067768c9700aa9b242d924454", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/ac74e28d73927dc067768c9700aa9b242d924454", "committedDate": "2020-07-27T04:59:32Z", "message": "opentracing basic tests\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}, "afterCommit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/3bae0052d78ef2858bcd328d7268baf3a7e98b3a", "committedDate": "2020-07-27T13:39:50Z", "message": "opentracing basic tests\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzI3OTk3", "url": "https://github.com/apache/camel/pull/4016#pullrequestreview-456327997", "createdAt": "2020-07-28T06:10:38Z", "commit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzYwMzMz", "url": "https://github.com/apache/camel/pull/4016#pullrequestreview-456360333", "createdAt": "2020-07-28T07:13:37Z", "commit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzoxMzozN1rOG3_mIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzoxOTo1MFrOG3_yWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2NjgxNw==", "bodyText": "Use version placeholder", "url": "https://github.com/apache/camel/pull/4016#discussion_r461366817", "createdAt": "2020-07-28T07:13:37Z", "author": {"login": "davsclaus"}, "path": "components/camel-opentelemetry/pom.xml", "diffHunk": "@@ -0,0 +1,89 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.camel</groupId>\n+    <artifactId>components</artifactId>\n+    <version>3.5.0-SNAPSHOT</version>\n+  </parent>\n+\n+\n+  <artifactId>camel-opentelemetry</artifactId>\n+  <packaging>jar</packaging>\n+  <name>Camel :: OpenTelemetry</name>\n+  <description>Distributed tracing using OpenTelemetry</description>\n+\n+  <properties>\n+    <firstVersion>3.5.0</firstVersion>\n+    <label>monitoring,microservice</label>\n+    <title>OpenTelemetry</title>\n+    <opentracing-agent.lib>${project.build.directory}/lib</opentracing-agent.lib>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-support</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-tracing</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-netty-shaded</artifactId>\n+      <version>${grpc-version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opentelemetry</groupId>\n+      <artifactId>opentelemetry-sdk</artifactId>\n+      <version>${opentelemetry-version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opentelemetry</groupId>\n+      <artifactId>opentelemetry-api</artifactId>\n+      <version>${opentelemetry-version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opentelemetry</groupId>\n+      <artifactId>opentelemetry-exporters-otlp</artifactId>\n+      <version>${opentelemetry-version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-test-spring-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.opentelemetry</groupId>\n+      <artifactId>opentelemetry-exporters-inmemory</artifactId>\n+      <version>0.6.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2NzIyMg==", "bodyText": "Remove empty line", "url": "https://github.com/apache/camel/pull/4016#discussion_r461367222", "createdAt": "2020-07-28T07:14:29Z", "author": {"login": "davsclaus"}, "path": "components/camel-opentelemetry/src/main/java/org/apache/camel/opentelemetry/OpenTelemetrySpanAdapter.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.opentelemetry;\n+\n+import java.util.EnumMap;\n+import java.util.Map;\n+\n+import io.opentelemetry.common.AttributeValue;\n+import io.opentelemetry.common.Attributes;\n+import io.opentelemetry.trace.attributes.SemanticAttributes;\n+import org.apache.camel.tracing.SpanAdapter;\n+import org.apache.camel.tracing.Tag;\n+\n+public class OpenTelemetrySpanAdapter implements SpanAdapter {\n+    private static final String DEFAULT_EVENT_NAME = \"log\";\n+\n+    private static EnumMap<Tag, String> tagMap = new EnumMap<>(Tag.class);\n+\n+    static {\n+        tagMap.put(Tag.COMPONENT, \"component\");\n+        tagMap.put(Tag.DB_TYPE, SemanticAttributes.DB_TYPE.key());\n+        tagMap.put(Tag.DB_STATEMENT, SemanticAttributes.DB_STATEMENT.key());\n+        tagMap.put(Tag.DB_INSTANCE, SemanticAttributes.DB_INSTANCE.key());\n+        tagMap.put(Tag.HTTP_METHOD, SemanticAttributes.HTTP_METHOD.key());\n+        tagMap.put(Tag.HTTP_STATUS, SemanticAttributes.HTTP_STATUS_CODE.key());\n+        tagMap.put(Tag.HTTP_URL, SemanticAttributes.HTTP_URL.key());\n+        tagMap.put(Tag.MESSAGE_BUS_DESTINATION, \"message_bus.destination\");\n+    }\n+\n+\n+    io.opentelemetry.trace.Span span;\n+\n+    OpenTelemetrySpanAdapter(io.opentelemetry.trace.Span span) {\n+        this.span = span;\n+    }\n+\n+    io.opentelemetry.trace.Span getOpenTelemetrySpan() {\n+        return this.span;\n+    }\n+\n+    @Override public void setComponent(String component) {\n+        this.span.setAttribute(\"component\", component);\n+    }\n+\n+    @Override public void setError(boolean error) {\n+        this.span.setAttribute(\"error\", error);\n+    }\n+\n+    @Override public void setTag(Tag key, String value) {\n+        this.span.setAttribute(tagMap.get(key), value);\n+    }\n+\n+    @Override public void setTag(Tag key, Number value) {\n+        this.span.setAttribute(tagMap.get(key), value.intValue());\n+    }\n+\n+    @Override public void setTag(String key, String value) {\n+        this.span.setAttribute(key, value);\n+    }\n+\n+    @Override public void setTag(String key, Number value) {\n+        this.span.setAttribute(key, value.intValue());\n+    }\n+\n+    @Override public void setTag(String key, Boolean value) {\n+        this.span.setAttribute(key, value);\n+    }\n+\n+    @Override public void log(Map<String, String> fields) {\n+        span.addEvent(getEventNameFromFields(fields), convertToAttributes(fields));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2NzkzMw==", "bodyText": "We do not use Nullable annotations in camel (yet)", "url": "https://github.com/apache/camel/pull/4016#discussion_r461367933", "createdAt": "2020-07-28T07:15:57Z", "author": {"login": "davsclaus"}, "path": "components/camel-opentelemetry/src/main/java/org/apache/camel/opentelemetry/propagators/OpenTelemetryGetter.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.opentelemetry.propagators;\n+\n+import javax.annotation.Nullable;\n+\n+import io.opentelemetry.context.propagation.HttpTextFormat;\n+import org.apache.camel.tracing.ExtractAdapter;\n+\n+public class OpenTelemetryGetter implements HttpTextFormat.Getter<ExtractAdapter> {\n+\n+    @Nullable @Override public String get(ExtractAdapter adapter, String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2OTk0NA==", "bodyText": "In the logging below change OpenTracing to Tracing", "url": "https://github.com/apache/camel/pull/4016#discussion_r461369944", "createdAt": "2020-07-28T07:19:50Z", "author": {"login": "davsclaus"}, "path": "components/camel-tracing/src/main/java/org/apache/camel/tracing/Tracer.java", "diffHunk": "@@ -0,0 +1,345 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.tracing;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.CamelContextAware;\n+import org.apache.camel.Component;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.ExtendedCamelContext;\n+import org.apache.camel.NamedNode;\n+import org.apache.camel.Route;\n+import org.apache.camel.RuntimeCamelException;\n+import org.apache.camel.StaticService;\n+import org.apache.camel.spi.CamelEvent;\n+import org.apache.camel.spi.CamelLogger;\n+import org.apache.camel.spi.InterceptStrategy;\n+import org.apache.camel.spi.LogListener;\n+import org.apache.camel.spi.RoutePolicy;\n+import org.apache.camel.spi.RoutePolicyFactory;\n+import org.apache.camel.support.DefaultEndpoint;\n+import org.apache.camel.support.EndpointHelper;\n+import org.apache.camel.support.EventNotifierSupport;\n+import org.apache.camel.support.RoutePolicySupport;\n+import org.apache.camel.support.service.ServiceHelper;\n+import org.apache.camel.support.service.ServiceSupport;\n+import org.apache.camel.tracing.decorators.AbstractInternalSpanDecorator;\n+import org.apache.camel.util.ObjectHelper;\n+import org.apache.camel.util.StringHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class Tracer extends ServiceSupport implements RoutePolicyFactory, StaticService, CamelContextAware {\n+    protected static final Map<String, SpanDecorator> DECORATORS = new HashMap<>();\n+    private static final Logger LOG = LoggerFactory.getLogger(Tracer.class);\n+\n+    static {\n+        ServiceLoader.load(SpanDecorator.class).forEach(d -> {\n+            SpanDecorator existing = DECORATORS.get(d.getComponent());\n+            // Add span decorator if no existing decorator for the component,\n+            // or if derived from the existing decorator's class, allowing\n+            // custom decorators to be added if they extend the standard\n+            // decorators\n+            if (existing == null || existing.getClass().isInstance(d)) {\n+                DECORATORS.put(d.getComponent(), d);\n+            }\n+        });\n+    }\n+\n+    private final TracingLogListener logListener = new TracingLogListener();\n+    private final TracingEventNotifier eventNotifier = new TracingEventNotifier();\n+    private Set<String> excludePatterns = new HashSet<>(0);\n+    private InterceptStrategy tracingStrategy;\n+    private boolean encoding;\n+    private CamelContext camelContext;\n+\n+    protected abstract void initTracer();\n+\n+    protected abstract SpanAdapter startSendingEventSpan(String operationName, SpanKind kind, SpanAdapter parent);\n+\n+    protected abstract SpanAdapter startExchangeBeginSpan(String operationName, SpanKind kind, SpanAdapter parent);\n+\n+    protected abstract void finishSpan(SpanAdapter span);\n+\n+    protected abstract void inject(SpanAdapter span, InjectAdapter adapter);\n+\n+    /**\n+     * Returns the currently used tracing strategy which is responsible for tracking invoked EIP or\n+     * beans.\n+     *\n+     * @return The currently used tracing strategy\n+     */\n+    public InterceptStrategy getTracingStrategy() {\n+        return tracingStrategy;\n+    }\n+\n+    /**\n+     * Specifies the instance responsible for tracking invoked EIP and beans with OpenTracing.\n+     *\n+     * @param tracingStrategy The instance which tracks invoked EIP and beans\n+     */\n+    public void setTracingStrategy(InterceptStrategy tracingStrategy) {\n+        this.tracingStrategy = tracingStrategy;\n+    }\n+\n+    public void addDecorator(SpanDecorator decorator) {\n+        DECORATORS.put(decorator.getComponent(), decorator);\n+    }\n+\n+    @Override\n+    public CamelContext getCamelContext() {\n+        return camelContext;\n+    }\n+\n+    @Override\n+    public void setCamelContext(CamelContext camelContext) {\n+        this.camelContext = camelContext;\n+    }\n+\n+    public Set<String> getExcludePatterns() {\n+        return excludePatterns;\n+    }\n+\n+    public void setExcludePatterns(Set<String> excludePatterns) {\n+        this.excludePatterns = excludePatterns;\n+    }\n+\n+    public boolean isEncoding() {\n+        return encoding;\n+    }\n+\n+    public void setEncoding(boolean encoding) {\n+        this.encoding = encoding;\n+    }\n+\n+    /**\n+     * Adds an exclude pattern that will disable tracing for Camel messages that\n+     * matches the pattern.\n+     *\n+     * @param pattern the pattern such as route id, endpoint url\n+     */\n+    public void addExcludePattern(String pattern) {\n+        excludePatterns.add(pattern);\n+    }\n+\n+    @Override public RoutePolicy createRoutePolicy(CamelContext camelContext, String routeId, NamedNode route) {\n+        init(camelContext);\n+        return new TracingRoutePolicy();\n+\n+    }\n+\n+    /**\n+     * Registers this {@link Tracer} on the {@link CamelContext} if\n+     * not already registered.\n+     */\n+    public void init(CamelContext camelContext) {\n+        if (!camelContext.hasService(this)) {\n+            try {\n+                // start this service eager so we init before Camel is starting up\n+                camelContext.addService(this, true, true);\n+            } catch (Exception e) {\n+                throw RuntimeCamelException.wrapRuntimeCamelException(e);\n+            }\n+        }\n+    }\n+\n+    @Override protected void doInit() throws Exception {\n+        ObjectHelper.notNull(camelContext, \"CamelContext\", this);\n+\n+        camelContext.getManagementStrategy().addEventNotifier(eventNotifier);\n+        if (!camelContext.getRoutePolicyFactories().contains(this)) {\n+            camelContext.addRoutePolicyFactory(this);\n+        }\n+        camelContext.adapt(ExtendedCamelContext.class).addLogListener(logListener);\n+\n+        if (tracingStrategy != null) {\n+            camelContext.adapt(ExtendedCamelContext.class).addInterceptStrategy(tracingStrategy);\n+        }\n+        initTracer();\n+        ServiceHelper.startService(eventNotifier);\n+    }\n+\n+    @Override\n+    protected void doShutdown() throws Exception {\n+        // stop event notifier\n+        camelContext.getManagementStrategy().removeEventNotifier(eventNotifier);\n+        ServiceHelper.stopService(eventNotifier);\n+\n+        // remove route policy\n+        camelContext.getRoutePolicyFactories().remove(this);\n+    }\n+\n+    protected SpanDecorator getSpanDecorator(Endpoint endpoint) {\n+        SpanDecorator sd = null;\n+\n+        String uri = endpoint.getEndpointUri();\n+        String splitURI[] = StringHelper.splitOnCharacter(uri, \":\", 2);\n+        if (splitURI[1] != null) {\n+            String scheme = splitURI[0];\n+            sd = DECORATORS.get(scheme);\n+        }\n+        if (sd == null) {\n+            // okay there was no decorator found via component name (scheme), then try FQN\n+            if (endpoint instanceof DefaultEndpoint) {\n+                Component comp = ((DefaultEndpoint) endpoint).getComponent();\n+                String fqn = comp.getClass().getName();\n+                // lookup via FQN\n+                sd = DECORATORS.values().stream().filter(d -> fqn.equals(d.getComponentClassName())).findFirst()\n+                .orElse(null);\n+            }\n+        }\n+        if (sd == null) {\n+            sd = SpanDecorator.DEFAULT;\n+        }\n+\n+        return sd;\n+    }\n+\n+    private boolean isExcluded(Exchange exchange, Endpoint endpoint) {\n+        String url = endpoint.getEndpointUri();\n+        if (url != null && !excludePatterns.isEmpty()) {\n+            for (String pattern : excludePatterns) {\n+                if (EndpointHelper.matchEndpoint(exchange.getContext(), url, pattern)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private final class TracingEventNotifier extends EventNotifierSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bae0052d78ef2858bcd328d7268baf3a7e98b3a"}, "originalPosition": 231}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e091236b335abf90fc5eb4f577b239c7b64d6be", "author": {"user": {"login": "rubenvp8510", "name": "Ruben Vargas"}}, "url": "https://github.com/apache/camel/commit/0e091236b335abf90fc5eb4f577b239c7b64d6be", "committedDate": "2020-07-28T14:48:52Z", "message": "Fix tracing log messages, some improvments on code style\n\nSigned-off-by: Ruben <ruben.vp8510@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2968, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}