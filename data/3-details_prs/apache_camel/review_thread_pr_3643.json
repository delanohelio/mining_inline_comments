{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NzY4NjQ1", "number": 3643, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1NTowMVrODosHBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNjowMzo0NlrODo-poA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTkyMzI1OnYy", "diffSide": "RIGHT", "path": "components/camel-rest/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1NTowMVrOF3Y9Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoyNDo0NVrOF3cDfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNDkwNw==", "bodyText": "Why do you have this dependency, we should never depend on this", "url": "https://github.com/apache/camel/pull/3643#discussion_r393624907", "createdAt": "2020-03-17T11:55:01Z", "author": {"login": "davsclaus"}, "path": "components/camel-rest/pom.xml", "diffHunk": "@@ -38,6 +38,10 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-support</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel</groupId>\n+            <artifactId>camel-base</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d65984d1ce1192cf1cb5c1a9669a6883b36ddbf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3NTY0NQ==", "bodyText": "Removed as not more needed.\nWas added because the endpoint registry as AbstractCamelContext overrides the signature as:\nEndpointRegistry<EndpointKey> getEndpointRegistry()\nand EndpointKey is part of camel-base", "url": "https://github.com/apache/camel/pull/3643#discussion_r393675645", "createdAt": "2020-03-17T13:24:45Z", "author": {"login": "lburgazzoli"}, "path": "components/camel-rest/pom.xml", "diffHunk": "@@ -38,6 +38,10 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-support</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel</groupId>\n+            <artifactId>camel-base</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNDkwNw=="}, "originalCommit": {"oid": "6d65984d1ce1192cf1cb5c1a9669a6883b36ddbf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTkyOTg5OnYy", "diffSide": "RIGHT", "path": "core/camel-api/src/main/java/org/apache/camel/CamelContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1NzowMlrOF3ZBdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxOTo1N1rOF3b2sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTk3NQ==", "bodyText": "I know default interface methods are nice, but can we move this to AbstractCamelContext so we dont end up cluttering this interface with code.", "url": "https://github.com/apache/camel/pull/3643#discussion_r393625975", "createdAt": "2020-03-17T11:57:02Z", "author": {"login": "davsclaus"}, "path": "core/camel-api/src/main/java/org/apache/camel/CamelContext.java", "diffHunk": "@@ -412,6 +412,19 @@\n      */\n     Endpoint getEndpoint(String uri);\n \n+    /**\n+     * Resolves the given uri to an {@link Endpoint} of the specified type.\n+     *\n+     * @param fmt the string format\n+     * @param args the arguments referenced by the format\n+     * @return the endpoint\n+     *\n+     * @see #getEndpoint(String)\n+     */\n+    default Endpoint getEndpointF(String fmt, Object... args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d65984d1ce1192cf1cb5c1a9669a6883b36ddbf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MjM3MA==", "bodyText": "I think I will remove it as I was supposed to find the pattern to create URIs with string format more often but in fact I think it is not so popular", "url": "https://github.com/apache/camel/pull/3643#discussion_r393672370", "createdAt": "2020-03-17T13:19:57Z", "author": {"login": "lburgazzoli"}, "path": "core/camel-api/src/main/java/org/apache/camel/CamelContext.java", "diffHunk": "@@ -412,6 +412,19 @@\n      */\n     Endpoint getEndpoint(String uri);\n \n+    /**\n+     * Resolves the given uri to an {@link Endpoint} of the specified type.\n+     *\n+     * @param fmt the string format\n+     * @param args the arguments referenced by the format\n+     * @return the endpoint\n+     *\n+     * @see #getEndpoint(String)\n+     */\n+    default Endpoint getEndpointF(String fmt, Object... args) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTk3NQ=="}, "originalCommit": {"oid": "6d65984d1ce1192cf1cb5c1a9669a6883b36ddbf"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mjk2MDk2OnYy", "diffSide": "RIGHT", "path": "core/camel-support/src/main/java/org/apache/camel/support/CamelContextHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNjowMzo0NlrOF33U9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwNjoyMToyNFrOF33mog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMjQ4Nw==", "bodyText": "Instead of the Suppler then just use a String parameter. It doesnt make sense to use a function here IMHO.", "url": "https://github.com/apache/camel/pull/3643#discussion_r394122487", "createdAt": "2020-03-18T06:03:46Z", "author": {"login": "davsclaus"}, "path": "core/camel-support/src/main/java/org/apache/camel/support/CamelContextHelper.java", "diffHunk": "@@ -587,4 +590,53 @@ public static String getRouteId(NamedNode node) {\n         return parent != null ? parent.getId() : null;\n     }\n \n+    /**\n+     * Gets the {@link RestConfiguration} from the {@link CamelContext} and check if the component which consumes the\n+     * configuration is compatible with the one for which the rest configuration is set-up.\n+     *\n+     * @param camelContext the camel context\n+     * @param component the component that will consume the {@link RestConfiguration}\n+     * @return the {@link RestConfiguration}\n+     * @throws IllegalArgumentException is the component is not compatible with the {@link RestConfiguration} set-up\n+     */\n+    public static RestConfiguration getRestConfiguration(CamelContext camelContext, String component) {\n+        RestConfiguration configuration = camelContext.getRestConfiguration();\n+\n+        validateRestConfigurationComponent(component, () -> configuration.getComponent());\n+\n+        return configuration;\n+    }\n+\n+    /**\n+     * Gets the {@link RestConfiguration} from the {@link CamelContext} and check if the component which consumes the\n+     * configuration is compatible with the one for which the rest configuration is set-up.\n+     *\n+     * @param camelContext the camel context\n+     * @param component the component that will consume the {@link RestConfiguration}\n+     * @param producerComponent the producer component that will consume the {@link RestConfiguration}\n+     * @return the {@link RestConfiguration}\n+     * @throws IllegalArgumentException is the component is not compatible with the {@link RestConfiguration} set-up\n+     */\n+    public static RestConfiguration getRestConfiguration(CamelContext camelContext, String component, String producerComponent) {\n+        RestConfiguration configuration = camelContext.getRestConfiguration();\n+\n+        validateRestConfigurationComponent(component, () -> configuration.getComponent());\n+        validateRestConfigurationComponent(producerComponent, () -> configuration.getProducerComponent());\n+\n+        return configuration;\n+    }\n+\n+    private static void validateRestConfigurationComponent(String component, Supplier<String> configurationComponentFn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceac05b5d5fba33b23cc8a21179e0eb917e200a3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyNzAxMA==", "bodyText": "I does not, I've re-factored that bit many times so the final iteration is simpler and does not require any fancy stuff.\nThx for spotting it", "url": "https://github.com/apache/camel/pull/3643#discussion_r394127010", "createdAt": "2020-03-18T06:21:24Z", "author": {"login": "lburgazzoli"}, "path": "core/camel-support/src/main/java/org/apache/camel/support/CamelContextHelper.java", "diffHunk": "@@ -587,4 +590,53 @@ public static String getRouteId(NamedNode node) {\n         return parent != null ? parent.getId() : null;\n     }\n \n+    /**\n+     * Gets the {@link RestConfiguration} from the {@link CamelContext} and check if the component which consumes the\n+     * configuration is compatible with the one for which the rest configuration is set-up.\n+     *\n+     * @param camelContext the camel context\n+     * @param component the component that will consume the {@link RestConfiguration}\n+     * @return the {@link RestConfiguration}\n+     * @throws IllegalArgumentException is the component is not compatible with the {@link RestConfiguration} set-up\n+     */\n+    public static RestConfiguration getRestConfiguration(CamelContext camelContext, String component) {\n+        RestConfiguration configuration = camelContext.getRestConfiguration();\n+\n+        validateRestConfigurationComponent(component, () -> configuration.getComponent());\n+\n+        return configuration;\n+    }\n+\n+    /**\n+     * Gets the {@link RestConfiguration} from the {@link CamelContext} and check if the component which consumes the\n+     * configuration is compatible with the one for which the rest configuration is set-up.\n+     *\n+     * @param camelContext the camel context\n+     * @param component the component that will consume the {@link RestConfiguration}\n+     * @param producerComponent the producer component that will consume the {@link RestConfiguration}\n+     * @return the {@link RestConfiguration}\n+     * @throws IllegalArgumentException is the component is not compatible with the {@link RestConfiguration} set-up\n+     */\n+    public static RestConfiguration getRestConfiguration(CamelContext camelContext, String component, String producerComponent) {\n+        RestConfiguration configuration = camelContext.getRestConfiguration();\n+\n+        validateRestConfigurationComponent(component, () -> configuration.getComponent());\n+        validateRestConfigurationComponent(producerComponent, () -> configuration.getProducerComponent());\n+\n+        return configuration;\n+    }\n+\n+    private static void validateRestConfigurationComponent(String component, Supplier<String> configurationComponentFn) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEyMjQ4Nw=="}, "originalCommit": {"oid": "ceac05b5d5fba33b23cc8a21179e0eb917e200a3"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}