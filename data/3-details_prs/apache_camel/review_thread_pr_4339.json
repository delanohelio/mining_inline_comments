{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MjkwNjcz", "number": 4339, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDo0MFrOEpfjPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDo0MFrOEpfjPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTQzOTk2OnYy", "diffSide": "RIGHT", "path": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/xml/XmlParseTreeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDo0MFrOHbMRVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDoxMDo0MFrOHbMRVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3NDY0Ng==", "bodyText": "note: a \"route\" is not a \"CamelNodeDetails\"", "url": "https://github.com/apache/camel/pull/4339#discussion_r498274646", "createdAt": "2020-10-01T14:10:40Z", "author": {"login": "apupier"}, "path": "catalog/camel-route-parser/src/test/java/org/apache/camel/parser/xml/XmlParseTreeTest.java", "diffHunk": "@@ -54,5 +61,19 @@ void testXmlTree() throws Exception {\n         assertTrue(tree.contains(\"35\\t  transform\"));\n         assertTrue(tree.contains(\"39\\t  to\"));\n     }\n+    \n+    @Test\n+    void testXmlTreeWithEmptyRoute() throws Exception {\n+        String textTotest =\n+                \"<camelContext id=\\\"camel\\\" xmlns=\\\"http://camel.apache.org/schema/spring\\\">\\r\\n\" + \n+                \"    <route id=\\\"a route\\\">\\r\\n\" + \n+                \"    </route>\\r\\n\" + \n+                \"</camelContext>\\n\";\n+        File camelFile = new File(tempDir, \"testXmlTreeWithEmptyRoute.xml\");\n+        Files.copy(new ByteArrayInputStream(textTotest.getBytes()), camelFile.toPath());\n+        List<CamelNodeDetails> list = XmlRouteParser.parseXmlRouteTree(new ByteArrayInputStream(textTotest.getBytes()), \"\", camelFile.getAbsolutePath());\n+\n+        assertEquals(0, list.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c8bdd973023851bd4f0bad77f8bc59b92b0ec4"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4813, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}