{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjA0NzM2", "number": 3737, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMDoxNlrODxqw7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMDozNlrODxqxkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDA3NDY5OnYy", "diffSide": "RIGHT", "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMDoxNlrOGFQ_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMDoxNlrOGFQ_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDQxNw==", "bodyText": "Typos", "url": "https://github.com/apache/camel/pull/3737#discussion_r408174417", "createdAt": "2020-04-14T14:20:16Z", "author": {"login": "davsclaus"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDA3NjM0OnYy", "diffSide": "RIGHT", "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMDozNlrOGFRAXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MzoxNlrOGFvwTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA==", "bodyText": "Isn't there a nicer way than to catch a NPE", "url": "https://github.com/apache/camel/pull/3737#discussion_r408174684", "createdAt": "2020-04-14T14:20:36Z", "author": {"login": "davsclaus"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3OTYzMw==", "bodyText": "@davsclaus  I've tried different approaches. Problem is that it is object with object with list of object with list of object and NPE could happen almost everywhere.\nI'd prefer solution with streams. But it doesn't look much 'selfexplanatory'. What do you think?\n\n\n    dataBaseName == null || result == null ? false : result.getResults().stream()\n                .flatMap(r -> r.getSeries().stream())\n                .flatMap(s -> s.getValues() == null ? null : s.getValues().get(0).stream())\n                .anyMatch(v -> dataBaseName.equals(v));", "url": "https://github.com/apache/camel/pull/3737#discussion_r408179633", "createdAt": "2020-04-14T14:27:01Z", "author": {"login": "JiriOndrusek"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NjYwOQ==", "bodyText": "this could be better:\n\n    boolean exists = result == null ? false :\n\n\n                        result.getResults() == null ? false :\n                            result.getResults().get(0).getSeries() == null ? false :\n                                result.getResults().get(0).getSeries().get(0).getValues() == null ? false :\n                                    result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "url": "https://github.com/apache/camel/pull/3737#discussion_r408186609", "createdAt": "2020-04-14T14:35:54Z", "author": {"login": "JiriOndrusek"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5OTk4MQ==", "bodyText": "I've used try { } catch approach because it shows on the first glance what is happening. Both suggested approaches are better from my POV. But also it will take more time to understand it and it could contain some issues (like missing NPE).\nBut I don't have a problem using them at all. (or different one)", "url": "https://github.com/apache/camel/pull/3737#discussion_r408199981", "createdAt": "2020-04-14T14:52:28Z", "author": {"login": "JiriOndrusek"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3MDgwMQ==", "bodyText": "@JiriOndrusek I'm not sure, but can we use this approach influxdata/influxdb-java#173", "url": "https://github.com/apache/camel/pull/3737#discussion_r408270801", "createdAt": "2020-04-14T16:26:34Z", "author": {"login": "dmvolod"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjIxNw==", "bodyText": "@dmvolod If you are mentioning approach influxDB.describeDatabases().contains(dbName), than it is unfortunatelly also depricated: https://github.com/influxdata/influxdb-java/blob/master/src/main/java/org/influxdb/InfluxDB.java#L577", "url": "https://github.com/apache/camel/pull/3737#discussion_r408606217", "createdAt": "2020-04-15T06:22:43Z", "author": {"login": "JiriOndrusek"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzMDAzNA==", "bodyText": "Oh, @JiriOndrusek , sure. In this case we can implement logic like origin. Thanks.", "url": "https://github.com/apache/camel/pull/3737#discussion_r408630034", "createdAt": "2020-04-15T07:18:08Z", "author": {"login": "dmvolod"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3ODQ3OA==", "bodyText": "yep lets do this", "url": "https://github.com/apache/camel/pull/3737#discussion_r408678478", "createdAt": "2020-04-15T08:43:16Z", "author": {"login": "davsclaus"}, "path": "components/camel-influxdb/src/main/java/org/apache/camel/component/influxdb/InfluxDbProducer.java", "diffHunk": "@@ -138,4 +137,22 @@ private String calculateQuery(Exchange exchange) {\n         return query;\n     }\n \n+    private void ensureDatabaseExists(String dataBaseName) {\n+        QueryResult result = connection.query(new Query(SHOW_DATABASES));\n+\n+        //databases are in the first Serie called 'databases' and values are te fist value called 'name',\n+        //if any object on the 'path' is null, database does not exist\n+        boolean exists;\n+        try {\n+            exists = result.getResults().get(0).getSeries().get(0).getValues().get(0).contains(dataBaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDY4NA=="}, "originalCommit": {"oid": "5adc8a497c4261897cf376311e19301499a8181b"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4978, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}