{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTE2NzI3", "number": 4723, "title": "CAMEL-15510: Add camel-vertx-kafka component", "bodyText": "This is pretty huge PR but I can summarise the changes here , this PR will add the component of camel-vertx-kafka to Camel, it includes the following:\n\nA maven plugin that will generate the component configuration from Kafka Consumer/Producer native configurations similar to camel-debezium. Later, I am planning as well to use this plugin to generate the configurations for camel-kafka. This plugin is highly customizable with many options that allows to be adopted it easily to camel-kafka.\nThe component itself, based on Vert.x client for Kafka that supports full async operations, coupled with Mono and Flux just to minimize the callbacks (not necessary) though. In vertx 4.0 (still beta) it uses Future instead of callback, however the work should't be large, with Flux/Mono could be easily wrapped.\nThe component doesnt yet support manual commit offsets, storing offsets to be committed but it can be added later.\nTo ensure the consistently functionality, I have used the integration tests and unit tests of camel-kafka to test this component (with small modifications specific to this component).", "createdAt": "2020-12-04T12:53:57Z", "url": "https://github.com/apache/camel/pull/4723", "merged": true, "mergeCommit": {"oid": "eb8828514f46f536d15c72f532f91f128a21769d"}, "closed": true, "closedAt": "2020-12-07T12:55:34Z", "author": {"login": "omarsmak"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd--OPgH2gAyNTMyNTE2NzI3OjE3NjZjMmQ3ZTA2NzFlOTFiYWVjODFiNmE3NjExMjFhZDdmMmIxZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj1CMcgH2gAyNTMyNTE2NzI3OjA4YzE0NmNmYjdhYzZlYTk2NjQ4ZjM0NjE2NDEzZWUyMDFkYzZmMWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1766c2d7e0671e91baec81b6a761121ad7f2b1d0", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/1766c2d7e0671e91baec81b6a761121ad7f2b1d0", "committedDate": "2020-11-19T09:03:07Z", "message": "Scaffold new camel-vertx-kafka project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83103a8219acb467c950a033f621836a4cfa7046", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/83103a8219acb467c950a033f621836a4cfa7046", "committedDate": "2020-11-19T09:03:07Z", "message": "Add ConfigField to the maven plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee321c7feaa6eac922192b13a0d3e4e5a6addeb", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/8ee321c7feaa6eac922192b13a0d3e4e5a6addeb", "committedDate": "2020-11-19T09:03:07Z", "message": "Add builder around to minimize the usage of constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6518200330e1530b8495891c129c35ef5f7a99", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/fb6518200330e1530b8495891c129c35ef5f7a99", "committedDate": "2020-11-19T09:03:08Z", "message": "Add builder java class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1cde74c7c877ed6d026043b4f2bcb3229e74f47", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/a1cde74c7c877ed6d026043b4f2bcb3229e74f47", "committedDate": "2020-11-19T09:03:08Z", "message": "Finish up the JavaClass builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5d40b6c6db1436ae7bd1dd36669f1614ffffcf7", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/e5d40b6c6db1436ae7bd1dd36669f1614ffffcf7", "committedDate": "2020-11-19T09:03:08Z", "message": "Add more features to the Javaclass builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8515be3ec20dd6f46a0b0f1971c94e800d5f9f24", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/8515be3ec20dd6f46a0b0f1971c94e800d5f9f24", "committedDate": "2020-11-19T09:03:08Z", "message": "Start working on the pojo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c02b062c95a750a1a1953e145aa43a7cbf7888e", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/3c02b062c95a750a1a1953e145aa43a7cbf7888e", "committedDate": "2020-11-19T09:03:09Z", "message": "Add more customization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f899be1e0096a142c7f8513e2a3695bcf9e08b3", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/4f899be1e0096a142c7f8513e2a3695bcf9e08b3", "committedDate": "2020-11-19T09:03:09Z", "message": "Finish up the maven plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebc460296a98d250c194de65ee6221ab41e03394", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/ebc460296a98d250c194de65ee6221ab41e03394", "committedDate": "2020-11-19T09:03:09Z", "message": "Add missing license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b96e023f6d808b6c5ae8a1963b33ca575caa214", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/3b96e023f6d808b6c5ae8a1963b33ca575caa214", "committedDate": "2020-11-19T09:03:09Z", "message": "Start working on the actual VertxKafkaComponent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84aa41cc618671a56471d2dc5e32c375285dad84", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/84aa41cc618671a56471d2dc5e32c375285dad84", "committedDate": "2020-11-19T09:03:10Z", "message": "Add comments on fields in the KafkaConfiguration using the maven plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b5f7245259dbd3a25ef496a3e0f2deb1446985f", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/8b5f7245259dbd3a25ef496a3e0f2deb1446985f", "committedDate": "2020-11-19T09:03:10Z", "message": "Add consumer and producer and rename the configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15030269ac9a409e24ea800a9e1329924ea49e70", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/15030269ac9a409e24ea800a9e1329924ea49e70", "committedDate": "2020-11-19T09:03:10Z", "message": "Add consumer and producer and rename the configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aec429bf9fc1771fbc1906307d6730b80240cdb", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/0aec429bf9fc1771fbc1906307d6730b80240cdb", "committedDate": "2020-11-19T09:03:10Z", "message": "Initial progress on the vertx kafka component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae906aa1955480b2b96d049eb2ae4935d1c6ae2", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/cae906aa1955480b2b96d049eb2ae4935d1c6ae2", "committedDate": "2020-11-19T09:03:11Z", "message": "Add KafkaProducer and use Flux and Mono to handle all async operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89e34031b0c471ba45638dc4fabee239bd0ef241", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/89e34031b0c471ba45638dc4fabee239bd0ef241", "committedDate": "2020-11-19T09:03:11Z", "message": "Add missing configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33cc9e25f48ef8f125c9984ca8bde3e4c861d635", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/33cc9e25f48ef8f125c9984ca8bde3e4c861d635", "committedDate": "2020-11-19T09:03:11Z", "message": "Start adding tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60a9ba24aefe97bd707eeea774c760e6d0f8334b", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/60a9ba24aefe97bd707eeea774c760e6d0f8334b", "committedDate": "2020-11-19T09:03:11Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0fbd665947a14a3dc00a06d0aabede58f472aa8", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/f0fbd665947a14a3dc00a06d0aabede58f472aa8", "committedDate": "2020-11-19T09:32:29Z", "message": "Regen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a025eb3a9746f9a8c80a0e47c690272dff2d0cb", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/4a025eb3a9746f9a8c80a0e47c690272dff2d0cb", "committedDate": "2020-11-19T09:58:46Z", "message": "Regen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8a7683d0faa0337927fd8aba7ab5073e9612906", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/b8a7683d0faa0337927fd8aba7ab5073e9612906", "committedDate": "2020-11-20T15:41:59Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00c9c692cdf0dd686909ef7357d50dde3e588b1d", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/00c9c692cdf0dd686909ef7357d50dde3e588b1d", "committedDate": "2020-11-23T15:19:59Z", "message": "Improve on the producer and add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ce1ebe5098d3ccd33e146e479d1003b4a790121", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/4ce1ebe5098d3ccd33e146e479d1003b4a790121", "committedDate": "2020-11-24T14:40:04Z", "message": "Start working on the consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ff5c0a7b1cd76117db7e212a2b5285eec4410f", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/f7ff5c0a7b1cd76117db7e212a2b5285eec4410f", "committedDate": "2020-11-25T12:44:47Z", "message": "Initial work on the consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6852fef26737454da9742e3e936af8e258dfc3f0", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/6852fef26737454da9742e3e936af8e258dfc3f0", "committedDate": "2020-11-25T15:23:03Z", "message": "Add initial consumer unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4dc822cf79e0c8ad91463ea2938dfbfa8a9dd54", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/a4dc822cf79e0c8ad91463ea2938dfbfa8a9dd54", "committedDate": "2020-11-26T11:30:13Z", "message": "Add seek to configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b7944b163c6b813cf77c33b6dd0dad70ce99fb", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/81b7944b163c6b813cf77c33b6dd0dad70ce99fb", "committedDate": "2020-11-26T17:34:13Z", "message": "Add proper seek operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28a809646e5436b2b7d420f2ab801264ae31a67f", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/28a809646e5436b2b7d420f2ab801264ae31a67f", "committedDate": "2020-11-27T16:28:50Z", "message": "Use Mono/Flux in the consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0124f4fa2a49bea38b7b567f3a344a950eedc89c", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/0124f4fa2a49bea38b7b567f3a344a950eedc89c", "committedDate": "2020-11-30T15:30:39Z", "message": "Done with the consumer operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "480fc40bf601368016b2285d07b51d77c1149f8f", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/480fc40bf601368016b2285d07b51d77c1149f8f", "committedDate": "2020-12-01T12:16:39Z", "message": "Finish up the consumer operations unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "351330d6b76724602a254d976a8d6d0379c5b73b", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/351330d6b76724602a254d976a8d6d0379c5b73b", "committedDate": "2020-12-01T14:27:57Z", "message": "Complete the component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "603838a094bbf6fae4c4cf7a9bfaa2eacfdedbd7", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/603838a094bbf6fae4c4cf7a9bfaa2eacfdedbd7", "committedDate": "2020-12-02T12:01:56Z", "message": "Add producer integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fe1a5cd0bfecd278b0bcf88e9e38b725d98a756", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/3fe1a5cd0bfecd278b0bcf88e9e38b725d98a756", "committedDate": "2020-12-02T13:43:03Z", "message": "Add consumer integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86edcba5f9cea2a5bc3981b8ea47a6b85f1d0c7a", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/86edcba5f9cea2a5bc3981b8ea47a6b85f1d0c7a", "committedDate": "2020-12-02T14:28:28Z", "message": "Add more consumer integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19bc962b24ba697030f2e64663feed3a738d7659", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/19bc962b24ba697030f2e64663feed3a738d7659", "committedDate": "2020-12-02T16:31:16Z", "message": "Add more unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "601bdce4d3fef1abb55e49014987498dcd1649ec", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/601bdce4d3fef1abb55e49014987498dcd1649ec", "committedDate": "2020-12-03T14:17:22Z", "message": "Finish up the tests and start working on the docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "327d6a380025dd3890f6c994ecd4d7c72ad7331e", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/327d6a380025dd3890f6c994ecd4d7c72ad7331e", "committedDate": "2020-12-03T14:18:44Z", "message": "Finish up the tests and start working on the docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05e3998015c11dcba704f9c3212bbb580df80bd9", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/05e3998015c11dcba704f9c3212bbb580df80bd9", "committedDate": "2020-12-04T12:32:21Z", "message": "Add docs and fix sourcecheck"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4c1b0bd61291a2e89d317598b651ad639cf347", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/ee4c1b0bd61291a2e89d317598b651ad639cf347", "committedDate": "2020-12-04T12:49:31Z", "message": "small polishing to the pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/a2365f0e6f66ecfd29df7228fc1fd1add5ba15be", "committedDate": "2020-12-04T13:30:14Z", "message": "Fix CS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDIyNTcy", "url": "https://github.com/apache/camel/pull/4723#pullrequestreview-545022572", "createdAt": "2020-12-04T14:48:00Z", "commit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MDM0NjEz", "url": "https://github.com/apache/camel/pull/4723#pullrequestreview-545034613", "createdAt": "2020-12-04T15:01:24Z", "commit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNTowMToyNFrOH_Ur3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNTowMToyNFrOH_Ur3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE2MTI0Ng==", "bodyText": "Might be better to do like VertxComponent.doStop() and handle the case where the Vert.x instance was provided by the user. In that scenario you probably don't want to clean it up as there may be other things that depend on it.", "url": "https://github.com/apache/camel/pull/4723#discussion_r536161246", "createdAt": "2020-12-04T15:01:24Z", "author": {"login": "jamesnetherton"}, "path": "components/camel-vertx-kafka/camel-vertx-kafka-component/src/main/java/org/apache/camel/component/vertx/kafka/VertxKafkaComponent.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.vertx.kafka;\n+\n+import java.util.Map;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.Endpoint;\n+import org.apache.camel.component.vertx.kafka.configuration.VertxKafkaConfiguration;\n+import org.apache.camel.spi.Metadata;\n+import org.apache.camel.spi.annotations.Component;\n+import org.apache.camel.support.DefaultComponent;\n+import org.apache.camel.util.ObjectHelper;\n+import org.apache.camel.util.PropertiesHelper;\n+\n+@Component(\"vertx-kafka\")\n+public class VertxKafkaComponent extends DefaultComponent {\n+\n+    @Metadata\n+    private VertxKafkaConfiguration configuration = new VertxKafkaConfiguration();\n+\n+    @Metadata(label = \"advanced\", autowired = true)\n+    private Vertx vertx;\n+    @Metadata(label = \"advanced\")\n+    private VertxOptions vertxOptions;\n+\n+    public VertxKafkaComponent() {\n+    }\n+\n+    public VertxKafkaComponent(CamelContext context) {\n+        super(context);\n+    }\n+\n+    @Override\n+    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n+\n+        if (ObjectHelper.isEmpty(remaining)) {\n+            throw new IllegalArgumentException(\"Topic must be configured on endpoint using syntax kafka:topic\");\n+        }\n+\n+        final VertxKafkaConfiguration configuration\n+                = this.configuration != null ? this.configuration.copy() : new VertxKafkaConfiguration();\n+\n+        configuration.setTopic(remaining);\n+\n+        final VertxKafkaEndpoint endpoint = new VertxKafkaEndpoint(uri, this, configuration);\n+\n+        // extract the additional properties map\n+        if (PropertiesHelper.hasProperties(parameters, \"additionalProperties.\")) {\n+            final Map<String, Object> additionalProperties = endpoint.getConfiguration().getAdditionalProperties();\n+\n+            // add and overwrite additional properties from endpoint to\n+            // pre-configured properties\n+            additionalProperties.putAll(PropertiesHelper.extractProperties(parameters, \"additionalProperties.\"));\n+        }\n+\n+        setProperties(endpoint, parameters);\n+\n+        validateConfigurations(configuration);\n+\n+        return endpoint;\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        if (vertx == null) {\n+            if (vertxOptions != null) {\n+                vertx = Vertx.vertx(vertxOptions);\n+            } else {\n+                vertx = Vertx.vertx();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void doStop() throws Exception {\n+        if (vertx != null) {\n+            vertx.close();\n+        }\n+        vertx = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NTc2NDM4", "url": "https://github.com/apache/camel/pull/4723#pullrequestreview-545576438", "createdAt": "2020-12-05T10:28:13Z", "commit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxMDoyODoxM1rOH_zGlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxMDozMDo1NFrOH_zM2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY1OTYwNw==", "bodyText": "Looks like here you need to set the exception on the created exchange as otherwise its null", "url": "https://github.com/apache/camel/pull/4723#discussion_r536659607", "createdAt": "2020-12-05T10:28:13Z", "author": {"login": "davsclaus"}, "path": "components/camel-vertx-kafka/camel-vertx-kafka-component/src/main/java/org/apache/camel/component/vertx/kafka/VertxKafkaConsumer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.vertx.kafka;\n+\n+import io.vertx.kafka.client.consumer.KafkaConsumer;\n+import io.vertx.kafka.client.consumer.KafkaConsumerRecord;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.ExtendedExchange;\n+import org.apache.camel.Processor;\n+import org.apache.camel.component.vertx.kafka.configuration.VertxKafkaConfiguration;\n+import org.apache.camel.component.vertx.kafka.operations.VertxKafkaConsumerOperations;\n+import org.apache.camel.spi.Synchronization;\n+import org.apache.camel.support.DefaultConsumer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class VertxKafkaConsumer extends DefaultConsumer {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(VertxKafkaConsumer.class);\n+\n+    private KafkaConsumer<Object, Object> kafkaConsumer;\n+\n+    public VertxKafkaConsumer(final VertxKafkaEndpoint endpoint, final Processor processor) {\n+        super(endpoint, processor);\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        // create the consumer client\n+        kafkaConsumer = KafkaConsumer.create(getEndpoint().getVertx(), getConfiguration().createConsumerConfiguration());\n+\n+        // create the consumer operation\n+        final VertxKafkaConsumerOperations consumerOperations\n+                = new VertxKafkaConsumerOperations(kafkaConsumer, getConfiguration());\n+\n+        // process our records\n+        consumerOperations.receiveEvents(this::onEventListener, this::onErrorListener);\n+    }\n+\n+    @Override\n+    protected void doStop() throws Exception {\n+        if (kafkaConsumer != null) {\n+            kafkaConsumer.close();\n+        }\n+\n+        super.doStop();\n+    }\n+\n+    public VertxKafkaConfiguration getConfiguration() {\n+        return getEndpoint().getConfiguration();\n+    }\n+\n+    @Override\n+    public VertxKafkaEndpoint getEndpoint() {\n+        return (VertxKafkaEndpoint) super.getEndpoint();\n+    }\n+\n+    private void onEventListener(final KafkaConsumerRecord<Object, Object> record) {\n+        final Exchange exchange = getEndpoint().createVertxKafkaExchange(record);\n+        // set propagated headers\n+        VertxKafkaHeadersPropagation.getPropagatedHeaders(record.headers(), exchange.getIn())\n+                .forEach((key, value) -> exchange.getIn().setHeader(key, value));\n+\n+        // add exchange callback\n+        exchange.adapt(ExtendedExchange.class).addOnCompletion(new Synchronization() {\n+            @Override\n+            public void onComplete(Exchange exchange) {\n+                // at the moment we don't commit the offsets manually, we can add it in the future\n+            }\n+\n+            @Override\n+            public void onFailure(Exchange exchange) {\n+                // we do nothing here\n+                processRollback(exchange);\n+            }\n+        });\n+        // send message to next processor in the route\n+        getAsyncProcessor().process(exchange, doneSync -> LOG.trace(\"Processing exchange [{}] done.\", exchange));\n+    }\n+\n+    private void onErrorListener(final Throwable error) {\n+        final Exchange exchange = getEndpoint().createExchange();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY1OTk3MA==", "bodyText": "the name are createExchange on endpoints in the other components", "url": "https://github.com/apache/camel/pull/4723#discussion_r536659970", "createdAt": "2020-12-05T10:28:48Z", "author": {"login": "davsclaus"}, "path": "components/camel-vertx-kafka/camel-vertx-kafka-component/src/main/java/org/apache/camel/component/vertx/kafka/VertxKafkaConsumer.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.vertx.kafka;\n+\n+import io.vertx.kafka.client.consumer.KafkaConsumer;\n+import io.vertx.kafka.client.consumer.KafkaConsumerRecord;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.ExtendedExchange;\n+import org.apache.camel.Processor;\n+import org.apache.camel.component.vertx.kafka.configuration.VertxKafkaConfiguration;\n+import org.apache.camel.component.vertx.kafka.operations.VertxKafkaConsumerOperations;\n+import org.apache.camel.spi.Synchronization;\n+import org.apache.camel.support.DefaultConsumer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class VertxKafkaConsumer extends DefaultConsumer {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(VertxKafkaConsumer.class);\n+\n+    private KafkaConsumer<Object, Object> kafkaConsumer;\n+\n+    public VertxKafkaConsumer(final VertxKafkaEndpoint endpoint, final Processor processor) {\n+        super(endpoint, processor);\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        // create the consumer client\n+        kafkaConsumer = KafkaConsumer.create(getEndpoint().getVertx(), getConfiguration().createConsumerConfiguration());\n+\n+        // create the consumer operation\n+        final VertxKafkaConsumerOperations consumerOperations\n+                = new VertxKafkaConsumerOperations(kafkaConsumer, getConfiguration());\n+\n+        // process our records\n+        consumerOperations.receiveEvents(this::onEventListener, this::onErrorListener);\n+    }\n+\n+    @Override\n+    protected void doStop() throws Exception {\n+        if (kafkaConsumer != null) {\n+            kafkaConsumer.close();\n+        }\n+\n+        super.doStop();\n+    }\n+\n+    public VertxKafkaConfiguration getConfiguration() {\n+        return getEndpoint().getConfiguration();\n+    }\n+\n+    @Override\n+    public VertxKafkaEndpoint getEndpoint() {\n+        return (VertxKafkaEndpoint) super.getEndpoint();\n+    }\n+\n+    private void onEventListener(final KafkaConsumerRecord<Object, Object> record) {\n+        final Exchange exchange = getEndpoint().createVertxKafkaExchange(record);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjY2MTIwOQ==", "bodyText": "If you use the header filter strategy, then the endpoint implementation should implement an interface or extend another base class that has support for header filtering, where you can plugin a custom strategy.", "url": "https://github.com/apache/camel/pull/4723#discussion_r536661209", "createdAt": "2020-12-05T10:30:54Z", "author": {"login": "davsclaus"}, "path": "components/camel-vertx-kafka/camel-vertx-kafka-component/src/main/java/org/apache/camel/component/vertx/kafka/VertxKafkaHeaderFilterStrategy.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.vertx.kafka;\n+\n+import java.util.regex.Pattern;\n+\n+import org.apache.camel.support.DefaultHeaderFilterStrategy;\n+\n+public class VertxKafkaHeaderFilterStrategy extends DefaultHeaderFilterStrategy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2365f0e6f66ecfd29df7228fc1fd1add5ba15be"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c9a38a8ebb74f6e5ecba79f6ff4c7628c5f61cf", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/0c9a38a8ebb74f6e5ecba79f6ff4c7628c5f61cf", "committedDate": "2020-12-07T10:32:09Z", "message": "Add ability to add custom filter strategy and fix vertx start"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDM5MTY2", "url": "https://github.com/apache/camel/pull/4723#pullrequestreview-546039166", "createdAt": "2020-12-07T11:00:08Z", "commit": {"oid": "0c9a38a8ebb74f6e5ecba79f6ff4c7628c5f61cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MTA0Mjg3", "url": "https://github.com/apache/camel/pull/4723#pullrequestreview-546104287", "createdAt": "2020-12-07T12:32:33Z", "commit": {"oid": "0c9a38a8ebb74f6e5ecba79f6ff4c7628c5f61cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08c146cfb7ac6ea96648f34616413ee201dc6f1b", "author": {"user": {"login": "omarsmak", "name": "Omar Al-Safi"}}, "url": "https://github.com/apache/camel/commit/08c146cfb7ac6ea96648f34616413ee201dc6f1b", "committedDate": "2020-12-07T12:51:57Z", "message": "Add missing header"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2775, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}