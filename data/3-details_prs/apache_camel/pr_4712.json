{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTc2NjI1", "number": 4712, "title": "Fix the disabled test and some minor cleanups", "bodyText": "Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n If you're unsure, you can format the pull request title like [CAMEL-XXX] Fixes bug in camel-file component, where you replace CAMEL-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Psourcecheck in your module with source check enabled to make sure basic checks pass and there are no checkstyle violations. A more thorough check will be performed on your pull request automatically.\nBelow are the contribution guidelines:\nhttps://github.com/apache/camel/blob/master/CONTRIBUTING.md", "createdAt": "2020-12-02T17:32:53Z", "url": "https://github.com/apache/camel/pull/4712", "merged": true, "mergeCommit": {"oid": "b53abc63bbfb86e9f7dd9ab2adb123fb4fef838f"}, "closed": true, "closedAt": "2020-12-02T21:02:33Z", "author": {"login": "bvahdat"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiSBGOgH2gAyNTMxMTc2NjI1OjE0NmU0YWQ3MDIxMjc5OWJkMWZlMTE1ZTQyYWI0YWE4NTIyZjEyYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiUjpjAFqTU0MzIxMDI4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "146e4ad70212799bd1fe115e42ab4aa8522f12a9", "author": {"user": {"login": "bvahdat", "name": "Babak Vahdat"}}, "url": "https://github.com/apache/camel/commit/146e4ad70212799bd1fe115e42ab4aa8522f12a9", "committedDate": "2020-12-02T17:30:09Z", "message": "fix the disabled test and some minor cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTAyOTQz", "url": "https://github.com/apache/camel/pull/4712#pullrequestreview-543102943", "createdAt": "2020-12-02T18:03:48Z", "commit": {"oid": "146e4ad70212799bd1fe115e42ab4aa8522f12a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTIxNjU0", "url": "https://github.com/apache/camel/pull/4712#pullrequestreview-543121654", "createdAt": "2020-12-02T18:27:27Z", "commit": {"oid": "146e4ad70212799bd1fe115e42ab4aa8522f12a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODoyNzoyN1rOH9oe-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODoyNzoyN1rOH9oe-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM4ODQ3Mw==", "bodyText": "I think that if 15 will be increased to 16 (or larger number) test will still pass.", "url": "https://github.com/apache/camel/pull/4712#discussion_r534388473", "createdAt": "2020-12-02T18:27:27Z", "author": {"login": "DenisIstomin"}, "path": "components/camel-azure-storage-blob/src/test/java/org/apache/camel/component/azure/storage/blob/integration/BlobConsumerITTest.java", "diffHunk": "@@ -128,42 +132,35 @@ void testBatchFilePolling() throws InterruptedException, IOException {\n             exchange.getIn().setHeader(BlobConstants.BLOB_NAME, \"test_batch_blob_2\");\n         });\n \n-        // test output stream based\n-        final MockEndpoint mockEndpoint = getMockEndpoint(\"mock:resultBatch\");\n-        mockEndpoint.expectedMessageCount(2);\n-        mockEndpoint.assertIsSatisfied(100);\n+        MockEndpoint.assertIsSatisfied(context());\n \n         final BlobInputStream blobInputStream = mockEndpoint.getExchanges().get(0).getIn().getBody(BlobInputStream.class);\n         final BlobInputStream blobInputStream2 = mockEndpoint.getExchanges().get(1).getIn().getBody(BlobInputStream.class);\n \n         assertNotNull(blobInputStream, \"BlobInputStream must be set\");\n         assertNotNull(blobInputStream2, \"BlobInputStream must be set\");\n \n-        final String bufferedText = new BufferedReader(new InputStreamReader(blobInputStream)).readLine();\n-        final String bufferedText2 = new BufferedReader(new InputStreamReader(blobInputStream2)).readLine();\n+        final String bufferedText = context().getTypeConverter().convertTo(String.class, blobInputStream);\n+        final String bufferedText2 = context().getTypeConverter().convertTo(String.class, blobInputStream2);\n \n         assertEquals(\"Block Batch Blob 1\", bufferedText);\n         assertEquals(\"Block Batch Blob 2\", bufferedText2);\n \n-        // test file based\n-        final MockEndpoint mockEndpointFile = getMockEndpoint(\"mock:resultBatchFile\");\n-        mockEndpointFile.expectedMessageCount(2);\n-        mockEndpointFile.assertIsSatisfied(100);\n-\n         final File file = mockEndpointFile.getExchanges().get(0).getIn().getBody(File.class);\n         final File file2 = mockEndpointFile.getExchanges().get(1).getIn().getBody(File.class);\n \n         assertNotNull(file, \"File must be set\");\n         assertNotNull(file2, \"File must be set\");\n \n-        assertEquals(\"Block Batch Blob 1\", FileUtils.readFileToString(file, Charset.defaultCharset()));\n-        assertEquals(\"Block Batch Blob 2\", FileUtils.readFileToString(file2, Charset.defaultCharset()));\n+        assertEquals(\"Block Batch Blob 1\", context().getTypeConverter().convertTo(String.class, file));\n+        assertEquals(\"Block Batch Blob 2\", context().getTypeConverter().convertTo(String.class, file2));\n     }\n \n     @Test\n-    @Disabled(\"This test should be fixed to use mock:resultRegex endpoint instead of mock:resultBatch\")\n-    void testRegexPolling() throws InterruptedException {\n-        Pattern pattern = Pattern.compile(regex);\n+    void testRegexPolling() throws Exception {\n+        // test regex based\n+        final MockEndpoint mockEndpoint = getMockEndpoint(\"mock:resultRegex\");\n+        mockEndpoint.expectedMessageCount(15);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "146e4ad70212799bd1fe115e42ab4aa8522f12a9"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b53abc63bbfb86e9f7dd9ab2adb123fb4fef838f", "author": {"user": {"login": "bvahdat", "name": "Babak Vahdat"}}, "url": "https://github.com/apache/camel/commit/b53abc63bbfb86e9f7dd9ab2adb123fb4fef838f", "committedDate": "2020-12-02T20:20:32Z", "message": "fix the test using the idempotentConsumer EIP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjEwMjg4", "url": "https://github.com/apache/camel/pull/4712#pullrequestreview-543210288", "createdAt": "2020-12-02T20:27:42Z", "commit": {"oid": "b53abc63bbfb86e9f7dd9ab2adb123fb4fef838f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2805, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}