{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTY1NDQ1", "number": 3551, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzowMzoyM1rODd7beg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyODoyM1rODi92jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzA4OTg2OnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzowMzoyM1rOFmz4aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzowMzoyM1rOFmz4aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0MDIzNQ==", "bodyText": "Please use explicit imports", "url": "https://github.com/apache/camel/pull/3551#discussion_r376240235", "createdAt": "2020-02-07T07:03:23Z", "author": {"login": "oscerd"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -16,14 +16,11 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n-import java.util.concurrent.ExecutorService;\n-\n-import com.google.api.services.pubsub.Pubsub;\n-import org.apache.camel.Component;\n-import org.apache.camel.Consumer;\n-import org.apache.camel.ExchangePattern;\n-import org.apache.camel.Processor;\n-import org.apache.camel.Producer;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+import org.apache.camel.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzQzODAyOnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTozMTo0MVrOFm3IkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTozMTo0MVrOFm3IkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5MzUyMQ==", "bodyText": "Can you please run your build using the source check mvn -Psourcecheck clean install to fix the checkstyle issues, for example the missing license header in this class", "url": "https://github.com/apache/camel/pull/3551#discussion_r376293521", "createdAt": "2020-02-07T09:31:41Z", "author": {"login": "omarsmak"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.apache.camel.component.google.pubsub.consumer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzQ1ODMxOnYy", "diffSide": "LEFT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTozODo0NlrOFm3U5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxOTozOFrOFnKm2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw==", "bodyText": "Any reason to remove the private constructor since it was meant to be a singleton class?", "url": "https://github.com/apache/camel/pull/3551#discussion_r376296677", "createdAt": "2020-02-07T09:38:46Z", "author": {"login": "omarsmak"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java", "diffHunk": "@@ -19,16 +19,12 @@\n public final class GooglePubsubConstants {\n \n     public static final String MESSAGE_ID = \"CamelGooglePubsub.MessageId\";\n-    public static final String ACK_ID = \"CamelGooglePubsub.MsgAckId\";\n     public static final String PUBLISH_TIME = \"CamelGooglePubsub.PublishTime\";\n     public static final String ATTRIBUTES = \"CamelGooglePubsub.Attributes\";\n-    public static final String ACK_DEADLINE = \"CamelGooglePubsub.AckDeadline\";\n \n     public enum AckMode {\n         AUTO, NONE\n     }\n \n-    private GooglePubsubConstants() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMjI2Nw==", "bodyText": "Right, I've introduced it again", "url": "https://github.com/apache/camel/pull/3551#discussion_r376612267", "createdAt": "2020-02-07T21:18:51Z", "author": {"login": "alvinkwekel"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java", "diffHunk": "@@ -19,16 +19,12 @@\n public final class GooglePubsubConstants {\n \n     public static final String MESSAGE_ID = \"CamelGooglePubsub.MessageId\";\n-    public static final String ACK_ID = \"CamelGooglePubsub.MsgAckId\";\n     public static final String PUBLISH_TIME = \"CamelGooglePubsub.PublishTime\";\n     public static final String ATTRIBUTES = \"CamelGooglePubsub.Attributes\";\n-    public static final String ACK_DEADLINE = \"CamelGooglePubsub.AckDeadline\";\n \n     public enum AckMode {\n         AUTO, NONE\n     }\n \n-    private GooglePubsubConstants() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw=="}, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMjU2OA==", "bodyText": "Failing tests were due to missing @BindToRegistry(\"prop\")", "url": "https://github.com/apache/camel/pull/3551#discussion_r376612568", "createdAt": "2020-02-07T21:19:38Z", "author": {"login": "alvinkwekel"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java", "diffHunk": "@@ -19,16 +19,12 @@\n public final class GooglePubsubConstants {\n \n     public static final String MESSAGE_ID = \"CamelGooglePubsub.MessageId\";\n-    public static final String ACK_ID = \"CamelGooglePubsub.MsgAckId\";\n     public static final String PUBLISH_TIME = \"CamelGooglePubsub.PublishTime\";\n     public static final String ATTRIBUTES = \"CamelGooglePubsub.Attributes\";\n-    public static final String ACK_DEADLINE = \"CamelGooglePubsub.AckDeadline\";\n \n     public enum AckMode {\n         AUTO, NONE\n     }\n \n-    private GooglePubsubConstants() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw=="}, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzQ3OTU0OnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo0NTo1N1rOFm3h6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo0NTo1N1rOFm3h6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMDAwOA==", "bodyText": "My IDE reports that publisher reports this could be null, does it make sense to check for nullity here?", "url": "https://github.com/apache/camel/pull/3551#discussion_r376300008", "createdAt": "2020-02-07T09:45:57Z", "author": {"login": "omarsmak"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +58,24 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        publisher.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzI1Nzc3OnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo1NTozMFrOFpy27Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTowMTo1NFrOFqVRoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTE5Nw==", "bodyText": "There is some API on CamelContext via ExecutorServiceStrategy that can shutdown thread pools graceful and is recommened to use", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369197", "createdAt": "2020-02-14T10:55:30Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzA4OQ==", "bodyText": "This is cleanup of the cached publisher with no associated thread pool.\nIf you are referring to the consumer thread pool. I've changed that to use the graceful shutdown: https://github.com/apache/camel/pull/3551/files#diff-8becc735c075d032757f24805f234520R70", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933089", "createdAt": "2020-02-16T21:01:54Z", "author": {"login": "alvinkwekel"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTE5Nw=="}, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzI1OTg3OnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo1NjoxNFrOFpy4Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTowMjo1OVrOFqVR1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng==", "bodyText": "These are hardcoded values, why these values? And would it make sense for users to be able to cofigure them", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369546", "createdAt": "2020-02-14T10:56:14Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(1, TimeUnit.MINUTES);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MDY2MA==", "bodyText": "Its possible better to have such cache on the component so there is a single cache for all endpoints. And also shutdown the cache whe the componet stop", "url": "https://github.com/apache/camel/pull/3551#discussion_r379370660", "createdAt": "2020-02-14T10:58:49Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(1, TimeUnit.MINUTES);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng=="}, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzE0Mg==", "bodyText": "I've moved the cache to the component and made the values configurable.", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933142", "createdAt": "2020-02-16T21:02:59Z", "author": {"login": "alvinkwekel"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(1, TimeUnit.MINUTES);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng=="}, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzI2MTkyOnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDo1Njo1N1rOFpy5jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTowMzoyMFrOFqVR5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTg2OA==", "bodyText": "You need to call configureConsumer", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369868", "createdAt": "2020-02-14T10:56:57Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -108,9 +122,7 @@ public Producer createProducer() throws Exception {\n     public Consumer createConsumer(Processor processor) throws Exception {\n         afterPropertiesSet();\n         setExchangePattern(ExchangePattern.InOnly);\n-        GooglePubsubConsumer consumer = new GooglePubsubConsumer(this, processor);\n-        configureConsumer(consumer);\n-        return consumer;\n+        return new GooglePubsubConsumer(this, processor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzE1OQ==", "bodyText": "Whoops, corrected", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933159", "createdAt": "2020-02-16T21:03:20Z", "author": {"login": "alvinkwekel"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -108,9 +122,7 @@ public Producer createProducer() throws Exception {\n     public Consumer createConsumer(Processor processor) throws Exception {\n         afterPropertiesSet();\n         setExchangePattern(ExchangePattern.InOnly);\n-        GooglePubsubConsumer consumer = new GooglePubsubConsumer(this, processor);\n-        configureConsumer(consumer);\n-        return consumer;\n+        return new GooglePubsubConsumer(this, processor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTg2OA=="}, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzI3NTE5OnYy", "diffSide": "RIGHT", "path": "platforms/karaf/features/src/main/resources/features.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTowMTo1MVrOFpzB2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMTowNDo1NlrOFqVSOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MTk5Mw==", "bodyText": "Do not wrap everything. Some of these are already osgi bundles like commons-logging and so on", "url": "https://github.com/apache/camel/pull/3551#discussion_r379371993", "createdAt": "2020-02-14T11:01:51Z", "author": {"login": "davsclaus"}, "path": "platforms/karaf/features/src/main/resources/features.xml", "diffHunk": "@@ -1128,18 +1128,49 @@\n   </feature>\n   <feature name='camel-google-pubsub' version='${project.version}' start-level='50'>\n     <feature version='${project.version}'>camel-core</feature>\n-    <bundle dependency='true'>wrap:mvn:com.google.apis/google-api-services-pubsub/${google-api-services-pubsub-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.api-client/google-api-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>mvn:commons-codec/commons-codec/${commons-codec-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client-jackson2/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client-java6/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client-jetty/${google-api-client-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.cloud/google-cloud-pubsub/${google-cloud-pubsub-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-api/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-context/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.codehaus.mojo/animal-sniffer-annotations/${animal-sniffer-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-stub/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-protobuf/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-protobuf-lite/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/api-common/${google-api-common-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java/${protobuf-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-common-protos/${google-proto-common-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-cloud-pubsub-v1/${google-proto-pubsub-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-iam-v1/${google-proto-iam-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.guava/guava/${google-guava-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/gax/${google-gax-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auth/google-auth-library-oauth2-http/${grpc-google-auth-library-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client-jackson2/${google-http-jackson2-version}</bundle>\n     <bundle dependency='true'>mvn:com.fasterxml.jackson.core/jackson-core/${jackson2-version}</bundle>\n-    <bundle dependency='true'>mvn:org.apache.httpcomponents/httpcore-osgi/${httpcore4-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/gax-grpc/${google-gax-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-auth/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auth/google-auth-library-credentials/${grpc-google-auth-library-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-netty-shaded/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-alts/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-grpclb/${grpc-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java-util/${protobuf-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.apache.commons/commons-lang3/${commons-lang3-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.conscrypt/conscrypt-openjdk-uber/${conscrypt-uber-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.threeten/threetenbp/${threetenbp-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.code.findbugs/jsr305/${google-findbugs-jsr305-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.opencensus/opencensus-api/${opencensus-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-core/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.code.gson/gson/${gson-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.android/annotations/${android-annotations-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.perfmark/perfmark-api/${perfmark-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.opencensus/opencensus-contrib-grpc-metrics/${opencensus-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.errorprone/error_prone_annotations/${google-errorprone-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auto.value/auto-value-annotations/${google-auto-value-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client/${google-http-client-version}</bundle>\n     <bundle dependency='true'>mvn:org.apache.httpcomponents/httpclient-osgi/${httpclient4-version}</bundle>\n-    <bundle dependency='true'>mvn:javax.servlet/javax.servlet-api/${javax-servlet-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:commons-logging/commons-logging/${commons-logging-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:commons-codec/commons-codec/${commons-codec-version}</bundle>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzI0Mw==", "bodyText": "I've identified the commons-logging and commons-lang3 as bundles. Not sure if I've got all of them now...", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933243", "createdAt": "2020-02-16T21:04:56Z", "author": {"login": "alvinkwekel"}, "path": "platforms/karaf/features/src/main/resources/features.xml", "diffHunk": "@@ -1128,18 +1128,49 @@\n   </feature>\n   <feature name='camel-google-pubsub' version='${project.version}' start-level='50'>\n     <feature version='${project.version}'>camel-core</feature>\n-    <bundle dependency='true'>wrap:mvn:com.google.apis/google-api-services-pubsub/${google-api-services-pubsub-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.api-client/google-api-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>mvn:commons-codec/commons-codec/${commons-codec-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client-jackson2/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client-java6/${google-api-client-version}</bundle>\n-    <bundle dependency='true'>wrap:mvn:com.google.oauth-client/google-oauth-client-jetty/${google-api-client-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.cloud/google-cloud-pubsub/${google-cloud-pubsub-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-api/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-context/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.codehaus.mojo/animal-sniffer-annotations/${animal-sniffer-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-stub/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-protobuf/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-protobuf-lite/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/api-common/${google-api-common-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java/${protobuf-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-common-protos/${google-proto-common-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-cloud-pubsub-v1/${google-proto-pubsub-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api.grpc/proto-google-iam-v1/${google-proto-iam-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.guava/guava/${google-guava-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/gax/${google-gax-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auth/google-auth-library-oauth2-http/${grpc-google-auth-library-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client-jackson2/${google-http-jackson2-version}</bundle>\n     <bundle dependency='true'>mvn:com.fasterxml.jackson.core/jackson-core/${jackson2-version}</bundle>\n-    <bundle dependency='true'>mvn:org.apache.httpcomponents/httpcore-osgi/${httpcore4-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.api/gax-grpc/${google-gax-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-auth/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auth/google-auth-library-credentials/${grpc-google-auth-library-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-netty-shaded/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-alts/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-grpclb/${grpc-version}</bundle>\n+    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java-util/${protobuf-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.apache.commons/commons-lang3/${commons-lang3-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.conscrypt/conscrypt-openjdk-uber/${conscrypt-uber-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:org.threeten/threetenbp/${threetenbp-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.code.findbugs/jsr305/${google-findbugs-jsr305-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.opencensus/opencensus-api/${opencensus-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.grpc/grpc-core/${grpc-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.code.gson/gson/${gson-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.android/annotations/${android-annotations-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.perfmark/perfmark-api/${perfmark-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:io.opencensus/opencensus-contrib-grpc-metrics/${opencensus-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.errorprone/error_prone_annotations/${google-errorprone-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.auto.value/auto-value-annotations/${google-auto-value-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:com.google.http-client/google-http-client/${google-http-client-version}</bundle>\n     <bundle dependency='true'>mvn:org.apache.httpcomponents/httpclient-osgi/${httpclient4-version}</bundle>\n-    <bundle dependency='true'>mvn:javax.servlet/javax.servlet-api/${javax-servlet-api-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:commons-logging/commons-logging/${commons-logging-version}</bundle>\n+    <bundle dependency='true'>wrap:mvn:commons-codec/commons-codec/${commons-codec-version}</bundle>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MTk5Mw=="}, "originalCommit": {"oid": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTkwNDUxOnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyMjo1N1rOFugehg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyMjo1N1rOFugehg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMDkxOA==", "bodyText": "boolean", "url": "https://github.com/apache/camel/pull/3551#discussion_r384310918", "createdAt": "2020-02-26T07:22:57Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -60,14 +65,12 @@\n     @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n     private Integer maxMessagesPerPoll = 1;\n \n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7d191b6b1433d2014002fc74404c08938a441"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTkxMjcwOnYy", "diffSide": "RIGHT", "path": "parent/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyNjo0OVrOFugjkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjowODoxN1rOFu-Jcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMjIwOA==", "bodyText": "Do NOT change this as other components are dependent on this old version. Instead create a new for pubnub (guava hell)", "url": "https://github.com/apache/camel/pull/3551#discussion_r384312208", "createdAt": "2020-02-26T07:26:49Z", "author": {"login": "davsclaus"}, "path": "parent/pom.xml", "diffHunk": "@@ -230,16 +233,27 @@\n         <geronimo-jta-spec-version>1.1.1</geronimo-jta-spec-version>\n         <geronimo-ws-metadata-spec-version>1.1.3</geronimo-ws-metadata-spec-version>\n         <gmetric4j-version>1.0.10</gmetric4j-version>\n-        <google-guava-version>19.0</google-guava-version>\n+        <google-guava-version>28.1-jre</google-guava-version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7d191b6b1433d2014002fc74404c08938a441"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5NzA0Mw==", "bodyText": "Right. Added a new property for pubsub.", "url": "https://github.com/apache/camel/pull/3551#discussion_r384797043", "createdAt": "2020-02-26T22:08:17Z", "author": {"login": "alvinkwekel"}, "path": "parent/pom.xml", "diffHunk": "@@ -230,16 +233,27 @@\n         <geronimo-jta-spec-version>1.1.1</geronimo-jta-spec-version>\n         <geronimo-ws-metadata-spec-version>1.1.3</geronimo-ws-metadata-spec-version>\n         <gmetric4j-version>1.0.10</gmetric4j-version>\n-        <google-guava-version>19.0</google-guava-version>\n+        <google-guava-version>28.1-jre</google-guava-version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMjIwOA=="}, "originalCommit": {"oid": "6ee7d191b6b1433d2014002fc74404c08938a441"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTkxNTY3OnYy", "diffSide": "RIGHT", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyODoyM1rOFugldQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzoyODoyM1rOFugldQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMjY5Mw==", "bodyText": "Avoid using commons lang - Camel has API also for checking if string is empty - StringHelper / ObjectHelper etc.", "url": "https://github.com/apache/camel/pull/3551#discussion_r384312693", "createdAt": "2020-02-26T07:28:23Z", "author": {"login": "davsclaus"}, "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java", "diffHunk": "@@ -16,19 +16,80 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n+import java.io.IOException;\n import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n \n+import com.google.api.gax.core.CredentialsProvider;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.MessageReceiver;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.Subscriber;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStub;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStubSettings;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n import org.apache.camel.Endpoint;\n+import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n+import org.apache.commons.lang3.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7d191b6b1433d2014002fc74404c08938a441"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4673, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}