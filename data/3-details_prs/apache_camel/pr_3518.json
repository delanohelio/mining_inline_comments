{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MjcxNTgw", "number": 3518, "title": "CAMEL-14443 new camel-jira producers", "bodyText": "Added AddIssueLinkProducer, AddWorkLogProducer, FetchCommentsProducer & FetchCommentsProducer\nUpdated JiraConstants, JiraEndpoint & JiraType to enable the new producers\nAdded tests to verify the new producers", "createdAt": "2020-01-26T23:11:17Z", "url": "https://github.com/apache/camel/pull/3518", "merged": true, "mergeCommit": {"oid": "e5949ee6a0f2ad79837698d853ee48f4d2a671d1"}, "closed": true, "closedAt": "2020-01-28T09:48:50Z", "author": {"login": "clementmouchet"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-QeUjAH2gAyMzY3MjcxNTgwOmZkZGVlYTZlYzM3OTRjMjUxMzUzZmM1YzkxNDI5YWVmYjBlZGViNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-tiAFAFqTM0OTIxMjIyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43", "author": {"user": {"login": "clementmouchet", "name": "Cl\u00e9ment Mouchet"}}, "url": "https://github.com/apache/camel/commit/fddeea6ec3794c251353fc5c91429aefb0edeb43", "committedDate": "2020-01-26T23:09:50Z", "message": "CAMEL-14443 new camel-jira producers\n- Added AddIssueLinkProducer, AddWorkLogProducer, FetchCommentsProducer & FetchCommentsProducer\n- Updated JiraConstants, JiraEndpoint & JiraType to enable the new producers\n- Added tests to verify the new producers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDc3ODgw", "url": "https://github.com/apache/camel/pull/3518#pullrequestreview-348477880", "createdAt": "2020-01-27T07:42:30Z", "commit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NTA2MzMx", "url": "https://github.com/apache/camel/pull/3518#pullrequestreview-348506331", "createdAt": "2020-01-27T08:52:43Z", "commit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODo1Mjo0M1rOFh7P_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODo1ODozN1rOFh7ZlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODA3OA==", "bodyText": "Can we use here primitiveinstead of the boxedInteger`?", "url": "https://github.com/apache/camel/pull/3518#discussion_r371118078", "createdAt": "2020-01-27T08:52:43Z", "author": {"login": "omarsmak"}, "path": "components/camel-jira/src/main/java/org/apache/camel/component/jira/producer/AddWorkLogProducer.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.jira.producer;\n+\n+import static org.apache.camel.component.jira.JiraConstants.ISSUE_KEY;\n+import static org.apache.camel.component.jira.JiraConstants.MINUTES_SPENT;\n+\n+import com.atlassian.jira.rest.client.api.IssueRestClient;\n+import com.atlassian.jira.rest.client.api.JiraRestClient;\n+import com.atlassian.jira.rest.client.api.domain.Issue;\n+import com.atlassian.jira.rest.client.api.domain.input.WorklogInput;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.component.jira.JiraEndpoint;\n+import org.apache.camel.support.DefaultProducer;\n+import org.joda.time.DateTime;\n+\n+public class AddWorkLogProducer extends DefaultProducer {\n+\n+    public AddWorkLogProducer(JiraEndpoint endpoint) {\n+        super(endpoint);\n+    }\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+        String issueKey = exchange.getIn().getHeader(ISSUE_KEY, String.class);\n+        if (issueKey == null) {\n+            throw new IllegalArgumentException(\"Missing exchange input header named \" + ISSUE_KEY);\n+        }\n+        String comment = exchange.getIn().getBody(String.class);\n+        if (comment == null) {\n+            throw new IllegalArgumentException(\"Missing exchange body, it should specify the string comment.\");\n+        }\n+        Integer minutesSpent = exchange.getIn().getHeader(MINUTES_SPENT, Integer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODM5Mg==", "bodyText": "I think the static imports should be at the bottom of the imports. Did you run the build with sourcecheck enabled?", "url": "https://github.com/apache/camel/pull/3518#discussion_r371118392", "createdAt": "2020-01-27T08:53:31Z", "author": {"login": "omarsmak"}, "path": "components/camel-jira/src/main/java/org/apache/camel/component/jira/producer/AddIssueLinkProducer.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.jira.producer;\n+\n+import static org.apache.camel.component.jira.JiraConstants.CHILD_ISSUE_KEY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExOTc5MQ==", "bodyText": "If not mistaken, exchange().getOut() has been deprecated in favour of exchange().getMessage()", "url": "https://github.com/apache/camel/pull/3518#discussion_r371119791", "createdAt": "2020-01-27T08:57:02Z", "author": {"login": "omarsmak"}, "path": "components/camel-jira/src/main/java/org/apache/camel/component/jira/producer/FetchIssueProducer.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.jira.producer;\n+\n+import static org.apache.camel.component.jira.JiraConstants.ISSUE_KEY;\n+\n+import com.atlassian.jira.rest.client.api.IssueRestClient;\n+import com.atlassian.jira.rest.client.api.JiraRestClient;\n+import com.atlassian.jira.rest.client.api.domain.Issue;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.component.jira.JiraEndpoint;\n+import org.apache.camel.support.DefaultProducer;\n+\n+public class FetchIssueProducer extends DefaultProducer {\n+    public FetchIssueProducer(JiraEndpoint endpoint) {\n+        super(endpoint);\n+    }\n+\n+    @Override\n+    public void process(Exchange exchange) {\n+        String issueKey = exchange.getIn().getHeader(ISSUE_KEY, String.class);\n+        if (issueKey == null) {\n+            throw new IllegalArgumentException(\"Missing exchange input header named \" + ISSUE_KEY);\n+        }\n+        JiraRestClient client = ((JiraEndpoint) getEndpoint()).getClient();\n+        IssueRestClient issueClient = client.getIssueClient();\n+        Issue issue = issueClient.getIssue(issueKey).claim();\n+\n+        // support InOut\n+        if (exchange.getPattern().isOutCapable()) {\n+            // copy the header of in message to the out message\n+            exchange.getOut().copyFrom(exchange.getIn());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyMDUzMw==", "bodyText": "Since you are at it, can you please change this to long primitive type? :)", "url": "https://github.com/apache/camel/pull/3518#discussion_r371120533", "createdAt": "2020-01-27T08:58:37Z", "author": {"login": "omarsmak"}, "path": "components/camel-jira/src/test/java/org/apache/camel/component/jira/Utils.java", "diffHunk": "@@ -102,13 +105,43 @@ public static Issue createIssueWithComments(long id, Collection<Comment> comment\n                 null, null, null, null, null, null, null, null);\n     }\n \n+    public static Issue createIssueWithLinks(long id, Collection<IssueLink> issueLinks) {\n+        URI selfUri = URI.create(TEST_JIRA_URL + \"/rest/api/latest/issue/\" + id);\n+        return new Issue(\"jira summary test \" + id, selfUri, KEY + \"-\" + id, id, null, issueType, null, \"Description \" + id,\n+            null, null, null, null, userAssignee, null, null, null, null, null, null, null, null, null, null, issueLinks,\n+            null, null, null, null, null, null, null, null);\n+    }\n+\n+    public static Issue createIssueWithWorkLogs(long id, Collection<Worklog> worklogs) {\n+        URI selfUri = URI.create(TEST_JIRA_URL + \"/rest/api/latest/issue/\" + id);\n+        return new Issue(\"jira summary test \" + id, selfUri, KEY + \"-\" + id, id, null, issueType, null, \"Description \" + id,\n+            null, null, null, null, userAssignee, null, null, null, null, null, null, null, null, null, null, null,\n+            null, worklogs, null, null, null, null, null, null);\n+    }\n+\n     public static Comment newComment(long issueId, int newCommentId, String comment) {\n         DateTime now = DateTime.now();\n         Long id = Long.parseLong(issueId + \"0\" + newCommentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fddeea6ec3794c251353fc5c91429aefb0edeb43"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a99e926d1c49aacc13faa74ebd5c2c36bb525dc", "author": {"user": {"login": "clementmouchet", "name": "Cl\u00e9ment Mouchet"}}, "url": "https://github.com/apache/camel/commit/5a99e926d1c49aacc13faa74ebd5c2c36bb525dc", "committedDate": "2020-01-27T19:00:39Z", "message": "CAMEL-14443 new camel-jira producers\nUpdated PR to follow peer review feedback and match checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MjEyMjI0", "url": "https://github.com/apache/camel/pull/3518#pullrequestreview-349212224", "createdAt": "2020-01-28T09:01:06Z", "commit": {"oid": "5a99e926d1c49aacc13faa74ebd5c2c36bb525dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2759, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}