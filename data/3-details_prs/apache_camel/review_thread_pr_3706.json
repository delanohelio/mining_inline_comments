{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjY3Mzgw", "number": 3706, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1OTo0NFrODuBTIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo1MDoyNlrODuCkzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTgyMzY4OnYy", "diffSide": "RIGHT", "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1OTo0NFrOF_yNnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1OTo0NFrOF_yNnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNzI5NQ==", "bodyText": "Could also do it at line 335, but I think this approach is more universal.", "url": "https://github.com/apache/camel/pull/3706#discussion_r402427295", "createdAt": "2020-04-02T15:59:44Z", "author": {"login": "manonthegithub"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjAzMjc4OnYy", "diffSide": "RIGHT", "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo1MDoyNlrOF_0SfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzozMDoxMlrOF_11qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ==", "bodyText": "@manonthegithub I'm not sure, but we could try to implement more elegant solution, like cast to (T) and catch ClassCastException?", "url": "https://github.com/apache/camel/pull/3706#discussion_r402461309", "createdAt": "2020-04-02T16:50:26Z", "author": {"login": "dmvolod"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NTQ4MQ==", "bodyText": "@dmvolod it is already checked that the clas does not exits on the line 335 and then 344, how would additional check help?", "url": "https://github.com/apache/camel/pull/3706#discussion_r402465481", "createdAt": "2020-04-02T16:56:49Z", "author": {"login": "manonthegithub"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ=="}, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3MTA0Nw==", "bodyText": "Didn't do much of class casting, but I think it's impossible to cast having only string value of a class name.", "url": "https://github.com/apache/camel/pull/3706#discussion_r402471047", "createdAt": "2020-04-02T17:05:35Z", "author": {"login": "manonthegithub"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ=="}, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3MjkwNA==", "bodyText": "I mean a String in runtime with the name of type arg", "url": "https://github.com/apache/camel/pull/3706#discussion_r402472904", "createdAt": "2020-04-02T17:08:51Z", "author": {"login": "manonthegithub"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ=="}, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3Njk3NA==", "bodyText": "Yes, you are right, but looks like not handles all generics variants. But may be it's enough for current cases.", "url": "https://github.com/apache/camel/pull/3706#discussion_r402476974", "createdAt": "2020-04-02T17:15:35Z", "author": {"login": "dmvolod"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ=="}, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ4NjY5OQ==", "bodyText": "That is true, but it's not really possible to distinguish here between Generic parameter and nonexistent class.", "url": "https://github.com/apache/camel/pull/3706#discussion_r402486699", "createdAt": "2020-04-02T17:30:12Z", "author": {"login": "manonthegithub"}, "path": "tooling/maven/camel-api-component-maven-plugin/src/main/java/org/apache/camel/maven/AbstractApiMethodGeneratorMojo.java", "diffHunk": "@@ -344,9 +344,15 @@ public String getCanonicalName(ApiMethodArg argument) throws MojoExecutionExcept\n                         parameterizedType.append(\n                             getCanonicalName(getProjectClassLoader().loadClass(\"java.lang.\" + argType)));\n                     } catch (ClassNotFoundException e1) {\n-                        log.warn(\"Ignoring type parameters <\" + typeArgs + \"> for argument \" + argument.getName()\n-                                 + \", unable to load parametric type argument \" + argType, e1);\n-                        ignore = true;\n+                        // if the length of the artType is 1, we think that it's variable type parameter (like T in List<T>)\n+                        // not perfect solution, but should work in most of the cases\n+                        if (argType.trim().length() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MTMwOQ=="}, "originalCommit": {"oid": "7bb580b27d8be1de7098614cb84fd1fe57f6e4c9"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}