{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjQ4MjM0", "number": 4384, "title": "AutomaticRecovery from RabbitMQ Connection Factory doesn't recover from everything", "bodyText": "Hi,\nWe met a condition in production where the Connection Factory of Rabbitmq won't recover (when isAutomaticRecoveryEnabled is set to true). It's easily reproducible by calling the \".close()\" method on it.\nIt's explained here : https://www.rabbitmq.com/api-guide.html#recovery\nThe current code would always returns the same connection, not re-establishing it, if isAutomaticRecoveryEnabled is enabled.\nOur solution, based on the fact we just have \"isOpen\" to check the state of the channel/connection was to re-establish the connection in the RabbitMQConsumer even if \"isAutomaticRecoveryEnabled\" is enabled.\nWhat's your thought about it ?", "createdAt": "2020-10-07T13:23:20Z", "url": "https://github.com/apache/camel/pull/4384", "merged": true, "mergeCommit": {"oid": "d364875e2200e82a0f203cd0d7e130ccced2cbc9"}, "closed": true, "closedAt": "2020-10-08T16:46:04Z", "author": {"login": "JSchoreels"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQM1WAgH2gAyNDk5MjQ4MjM0OmM1YjVkNjI5NGVjMzM0ODVjNmRiNjYwNTk2MzU2YjQ4M2UyYzY4YzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQd1GOAFqTUwNDU3NTQ1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5b5d6294ec33485c6db660596356b483e2c68c2", "author": {"user": {"login": "JSchoreels", "name": "Jonathan Schoreels"}}, "url": "https://github.com/apache/camel/commit/c5b5d6294ec33485c6db660596356b483e2c68c2", "committedDate": "2020-10-07T13:17:09Z", "message": "AutomaticRecovery from RabbitMQ Connection Factory doesn't recover from everything and we could just return the same closed connection over and over ..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7bbd0b65be772449ad41095ca94275c1396d7a2", "author": {"user": {"login": "JSchoreels", "name": "Jonathan Schoreels"}}, "url": "https://github.com/apache/camel/commit/f7bbd0b65be772449ad41095ca94275c1396d7a2", "committedDate": "2020-10-07T13:26:31Z", "message": "If the consumer is still started, it won't do anything to call start() again, my solution would be to stop it before"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ee64eb9421df1b913cb051228253124da102825", "author": {"user": {"login": "JSchoreels", "name": "Jonathan Schoreels"}}, "url": "https://github.com/apache/camel/commit/6ee64eb9421df1b913cb051228253124da102825", "committedDate": "2020-10-07T13:39:06Z", "message": "In RPC calls, if we received a message for which the channel goes down, we have to reconnect to it before publishing our response to it, since the current Reconnection mechanism is made only in Producer, not in Publisher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7bbe8244ffc2d0af51d070e933efc0ae5537036", "author": {"user": {"login": "JSchoreels", "name": "Jonathan Schoreels"}}, "url": "https://github.com/apache/camel/commit/c7bbe8244ffc2d0af51d070e933efc0ae5537036", "committedDate": "2020-10-07T14:02:31Z", "message": "To ensure a retry for failed reply works, we can't remove the headers from the messages during the conversion to AMQP properties. Thus, I use a temporar Map to keep the logic as close as it is, but without touching the Message Headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6", "author": {"user": {"login": "JSchoreels", "name": "Jonathan Schoreels"}}, "url": "https://github.com/apache/camel/commit/dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6", "committedDate": "2020-10-08T08:16:41Z", "message": "Revert back to normal the format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTc1NDU1", "url": "https://github.com/apache/camel/pull/4384#pullrequestreview-504575455", "createdAt": "2020-10-08T09:05:15Z", "commit": {"oid": "dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTowNToxNVrOHeU8OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTowNToxNVrOHeU8OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQyNA==", "bodyText": "Just wonder what to do if stop throw an exception, should we silently ignore this?", "url": "https://github.com/apache/camel/pull/4384#discussion_r501562424", "createdAt": "2020-10-08T09:05:15Z", "author": {"login": "davsclaus"}, "path": "components/camel-rabbitmq/src/main/java/org/apache/camel/component/rabbitmq/RabbitConsumer.java", "diffHunk": "@@ -326,9 +340,13 @@ public void reconnect() throws Exception {\n         } else if (channel == null || !isAutomaticRecoveryEnabled()) {\n             LOG.info(\"Attempting to open a new rabbitMQ channel\");\n             Connection conn = consumer.getConnection();\n-            channel = openChannel(conn);\n-            // Register the channel to the tag\n-            start();\n+            try {\n+                stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2a73decfcfb58b107f8f79ce2b17f8a58c4ff6"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}