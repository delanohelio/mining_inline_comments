{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTM2NDIy", "number": 17013, "title": "Add Azure Arc MI Support", "bodyText": "Fixes #13466\nAdds Azure Arc MI Support.", "createdAt": "2020-10-30T16:50:18Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013", "merged": true, "mergeCommit": {"oid": "9a2679e200af8c20afcd1139616c346b07a55e2e"}, "closed": true, "closedAt": "2020-11-09T19:59:37Z", "author": {"login": "g2vinay"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXL8YUAH2gAyNTEzMTM2NDIyOmQwYmVlYjhmNGI0MDE5ZWFjY2EzMDcyMmIxN2VlZGIxOWFmNWMyMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda5YeHgH2gAyNTEzMTM2NDIyOmZkODYxNTQ0YmUzNTZkYTMxNjVmZmU1ZGE5YjcyYWVjYjJhMDhlNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d0beeb8f4b4019eacca30722b17eedb19af5c210", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0beeb8f4b4019eacca30722b17eedb19af5c210", "committedDate": "2020-10-29T06:12:24Z", "message": "Add logic to authenticate with Azure Arc MI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c72769049a0bab3d8e42dfb7512160188b4981d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c72769049a0bab3d8e42dfb7512160188b4981d", "committedDate": "2020-10-30T01:02:39Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b9d17a7e24bff5760ce7c2047df14598b985eaf", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b9d17a7e24bff5760ce7c2047df14598b985eaf", "committedDate": "2020-10-30T16:49:27Z", "message": "update javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0846112f8cecca495f94fb3f0f2bcf430cf19b1", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f0846112f8cecca495f94fb3f0f2bcf430cf19b1", "committedDate": "2020-10-30T17:00:50Z", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ada0c6b9824f700ec78f6fe62c102a40718df8ae", "committedDate": "2020-10-30T17:07:04Z", "message": "update javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTMyODg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-520932885", "createdAt": "2020-10-30T18:28:02Z", "commit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODoyODowMlrOHrbaSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODoyODowMlrOHrbaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5OTkxNQ==", "bodyText": "missing @param environment", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515299915", "createdAt": "2020-10-30T18:28:02Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.azure.identity;\n+\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential.\n+ */\n+abstract class ManagedIdentityServiceCredential {\n+    final IdentityClient identityClient;\n+    final String clientId;\n+    final String environment;\n+\n+    /**\n+     * Creates an instance of ManagedIdentityServiceCredential.\n+     * @param clientId the client id of user assigned or system assigned identity\n+     * @param identityClient the identity client to acquire a token with.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTMzODc4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-520933878", "createdAt": "2020-10-30T18:29:31Z", "commit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODoyOTozMVrOHrbdTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODoyOTozMVrOHrbdTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMDY4NA==", "bodyText": "move to parent class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515300684", "createdAt": "2020-10-30T18:29:31Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity;\n+\n+import com.azure.core.annotation.Immutable;\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential for Azure Arc Service.\n+ */\n+@Immutable\n+class ArcIdentityCredential extends ManagedIdentityServiceCredential {\n+    private final String identityEndpoint;\n+    private final ClientLogger logger = new ClientLogger(ArcIdentityCredential.class);\n+\n+    /**\n+     * Creates an instance of {@link ArcIdentityCredential}.\n+     *\n+     * @param clientId The client ID of user assigned or system assigned identity.\n+     * @param identityClient The identity client to acquire a token with.\n+     */\n+    ArcIdentityCredential(String clientId, IdentityClient identityClient) {\n+        super(clientId, identityClient, \"AZURE ARC IDENTITY ENDPOINT\");\n+        Configuration configuration = Configuration.getGlobalConfiguration().clone();\n+        this.identityEndpoint = configuration.get(Configuration.PROPERTY_IDENTITY_ENDPOINT);\n+        if (identityEndpoint != null) {\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n+        }\n+    }\n+\n+    private void validateEndpointProtocol(String endpoint, String endpointName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTM0NTcx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-520934571", "createdAt": "2020-10-30T18:30:35Z", "commit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODozMDozNVrOHrbfeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODozMDozNVrOHrbfeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMTI0Mg==", "bodyText": "should clientId and environment be private since they have getters?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515301242", "createdAt": "2020-10-30T18:30:35Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.azure.identity;\n+\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential.\n+ */\n+abstract class ManagedIdentityServiceCredential {\n+    final IdentityClient identityClient;\n+    final String clientId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTM3MDg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-520937088", "createdAt": "2020-10-30T18:34:33Z", "commit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODozNDozNFrOHrbmsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODozNDozNFrOHrbmsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzA5MQ==", "bodyText": "Environment variable IMDS_ENDPOINT is never used in ArcIdentityCredential, is that normal?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515303091", "createdAt": "2020-10-30T18:34:34Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -36,14 +36,19 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)\n-                || (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)\n-                        && configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER))) {\n-            appServiceMSICredential = new AppServiceMsiCredential(clientId, identityClient);\n-            virtualMachineMSICredential = null;\n+        if (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)) {\n+            if (configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER)) {\n+                managedIdentityServiceCredential = new AppServiceMsiCredential(clientId, identityClient);\n+            } else if (configuration.contains(PROPERTY_IMDS_ENDPOINT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6f86b55d598b38acf27250b3d9b24d4c82b0044d", "committedDate": "2020-11-04T21:29:54Z", "message": "update code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzU4MTQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-523758146", "createdAt": "2020-11-04T21:45:43Z", "commit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTI4NzQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-523928746", "createdAt": "2020-11-05T05:07:47Z", "commit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNTowNzo0N1rOHtzt-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNToyNTozNlrOHtz_lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTMyMQ==", "bodyText": "If managedIdentityServiceCredential is null, getToken() method throws an exception. So, why not throw that exception here itself? Why delay throwing exception until later? Since this is final it won't change after the constructor is called anyway.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517795321", "createdAt": "2020-11-05T05:07:47Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -36,14 +36,19 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)\n-                || (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)\n-                        && configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER))) {\n-            appServiceMSICredential = new AppServiceMsiCredential(clientId, identityClient);\n-            virtualMachineMSICredential = null;\n+        if (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)) {\n+            if (configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER)) {\n+                managedIdentityServiceCredential = new AppServiceMsiCredential(clientId, identityClient);\n+            } else if (configuration.contains(PROPERTY_IMDS_ENDPOINT)) {\n+                managedIdentityServiceCredential = new ArcIdentityCredential(clientId, identityClient);\n+            } else {\n+                managedIdentityServiceCredential = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTc5NA==", "bodyText": "This can potentially throw NPE if managedIdentityServiceCredential is null. So, as mentioned above, it might be better to just throw an exception in ctor itself if it's null.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517795794", "createdAt": "2020-11-05T05:09:36Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -53,22 +58,19 @@\n      * @return the client ID of user assigned or system assigned identity.\n      */\n     public String getClientId() {\n-        return this.appServiceMSICredential != null\n-            ? this.appServiceMSICredential.getClientId()\n-            : this.virtualMachineMSICredential.getClientId();\n+        return managedIdentityServiceCredential.getClientId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzUwMA==", "bodyText": "Where is this scanner used? s is overwritten on line 810 before it's used. Also, update the variable name to scanner to make it more readable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517797500", "createdAt": "2020-11-05T05:16:36Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzYwNA==", "bodyText": "If the status is 410, do we expect to swallow the exception and continue?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517797604", "createdAt": "2020-11-05T05:16:58Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");\n+            } catch (IOException e) {\n+                int status = connection.getResponseCode();\n+                if (status != 401) {\n+                    throw logger.logExceptionAsError(new ClientAuthenticationException(String.format(\"Expected a 401\"\n+                         + \" Unauthorized response from Azure Arc Managed Identity Endpoint, received: %d\", status),\n+                        null, e));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5ODk4MQ==", "bodyText": "Should the connection be closed here before throwing the exception?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517798981", "createdAt": "2020-11-05T05:22:18Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");\n+            } catch (IOException e) {\n+                int status = connection.getResponseCode();\n+                if (status != 401) {\n+                    throw logger.logExceptionAsError(new ClientAuthenticationException(String.format(\"Expected a 401\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTgyOA==", "bodyText": "openConnection() and connect() can throw exceptions too. We should wrap this in a try-finally block to clean up the connection in case of failures.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517799828", "createdAt": "2020-11-05T05:25:36Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5db074f02db14ea112eadebf6cf1237830829b49", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5db074f02db14ea112eadebf6cf1237830829b49", "committedDate": "2020-11-05T17:35:39Z", "message": "refactor code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjMyOTUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-524632951", "createdAt": "2020-11-05T20:16:42Z", "commit": {"oid": "5db074f02db14ea112eadebf6cf1237830829b49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjkyNjE5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-524692619", "createdAt": "2020-11-05T21:38:15Z", "commit": {"oid": "5db074f02db14ea112eadebf6cf1237830829b49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Njk1NjE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#pullrequestreview-524695615", "createdAt": "2020-11-05T21:43:13Z", "commit": {"oid": "5db074f02db14ea112eadebf6cf1237830829b49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9918900a714a449badb6345953d9881d35a6ef1b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9918900a714a449badb6345953d9881d35a6ef1b", "committedDate": "2020-11-09T17:53:13Z", "message": "update error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "455aeceeb039d4cafe22c09e6f84b5025cf08743", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/455aeceeb039d4cafe22c09e6f84b5025cf08743", "committedDate": "2020-11-09T17:55:09Z", "message": "fix spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cc38eef72718461d482a599a27f00e97194d0b5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8cc38eef72718461d482a599a27f00e97194d0b5", "committedDate": "2020-11-09T17:58:04Z", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7fe2984d8459534fb65e8ff43303a19be01ae98", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f7fe2984d8459534fb65e8ff43303a19be01ae98", "committedDate": "2020-11-09T18:26:56Z", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b710fc4ced4c34bf171ed6ad0527fa4e8de4005f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b710fc4ced4c34bf171ed6ad0527fa4e8de4005f", "committedDate": "2020-11-09T18:37:45Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd861544be356da3165ffe5da9b72aecb2a08e58", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd861544be356da3165ffe5da9b72aecb2a08e58", "committedDate": "2020-11-09T18:50:35Z", "message": "update test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1600, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}