{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTA5NTI1", "number": 14660, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowMToxNlrOEedBYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzoyODo0M1rOEehRvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzY4MjI0OnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowMToxNlrOHKHTDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjowMDoxNVrOHKKr7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NzM3NA==", "bodyText": "This is required to make sure no one checks in their encrypted environment variables.\nThere is an identical rule for .NET repo", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480367374", "createdAt": "2020-08-31T20:01:16Z", "author": {"login": "azabbasi"}, "path": ".gitignore", "diffHunk": "@@ -9,6 +9,9 @@ temp/\n # Spring\n **/*packageOutputDirectory*\n \n+# Sensitive files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2OTUzMQ==", "bodyText": "Do you really want to add this to the root of the repo?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480369531", "createdAt": "2020-08-31T20:05:45Z", "author": {"login": "drwill-ms"}, "path": ".gitignore", "diffHunk": "@@ -9,6 +9,9 @@ temp/\n # Spring\n **/*packageOutputDirectory*\n \n+# Sensitive files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NzM3NA=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2OTczOQ==", "bodyText": "I guess so if you are copying what was done in the net repo", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480369739", "createdAt": "2020-08-31T20:06:10Z", "author": {"login": "drwill-ms"}, "path": ".gitignore", "diffHunk": "@@ -9,6 +9,9 @@ temp/\n # Spring\n **/*packageOutputDirectory*\n \n+# Sensitive files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NzM3NA=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQyMjg5Mw==", "bodyText": "yes :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480422893", "createdAt": "2020-08-31T22:00:15Z", "author": {"login": "azabbasi"}, "path": ".gitignore", "diffHunk": "@@ -9,6 +9,9 @@ temp/\n # Spring\n **/*packageOutputDirectory*\n \n+# Sensitive files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NzM3NA=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzY5OTU5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNjo1MlrOHKHdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNjo1MlrOHKHdxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDExOA==", "bodyText": "space between () and {?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480370118", "createdAt": "2020-08-31T20:06:52Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.azure.digitaltwins.core;\n+\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.test.TestBase;\n+import com.azure.core.test.TestMode;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.ClientSecretCredentialBuilder;\n+\n+import java.util.Locale;\n+\n+public class DigitalTwinsTestBase extends TestBase\n+{\n+    protected static final String TENANT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"TENANT_ID\", \"tenantId\");\n+\n+    protected static final String CLIENT_SECRET = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_SECRET\", \"clientSecret\");\n+\n+    protected static final String CLIENT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_ID\", \"clientId\");\n+\n+    protected static final String DIGITALTWINS_URL = Configuration.getGlobalConfiguration()\n+        .get(\"DIGITALTWINS_URL\", \"https://playback.api.wus2.digitaltwins.azure.net\");\n+\n+    protected DigitalTwinsClientBuilder getDigitalTwinsClientBuilder(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzcwMDgzOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNzoxN1rOHKHejA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNzoxN1rOHKHejA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDMxNg==", "bodyText": "space between if and (?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480370316", "createdAt": "2020-08-31T20:07:17Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.azure.digitaltwins.core;\n+\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.test.TestBase;\n+import com.azure.core.test.TestMode;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.ClientSecretCredentialBuilder;\n+\n+import java.util.Locale;\n+\n+public class DigitalTwinsTestBase extends TestBase\n+{\n+    protected static final String TENANT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"TENANT_ID\", \"tenantId\");\n+\n+    protected static final String CLIENT_SECRET = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_SECRET\", \"clientSecret\");\n+\n+    protected static final String CLIENT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_ID\", \"clientId\");\n+\n+    protected static final String DIGITALTWINS_URL = Configuration.getGlobalConfiguration()\n+        .get(\"DIGITALTWINS_URL\", \"https://playback.api.wus2.digitaltwins.azure.net\");\n+\n+    protected DigitalTwinsClientBuilder getDigitalTwinsClientBuilder(){\n+        DigitalTwinsClientBuilder builder = new DigitalTwinsClientBuilder()\n+            .endpoint(DIGITALTWINS_URL)\n+            .tokenCredential(new ClientSecretCredentialBuilder()\n+                .tenantId(TENANT_ID)\n+                .clientId(CLIENT_ID)\n+                .clientSecret(CLIENT_SECRET)\n+                .build());\n+\n+        if(interceptorManager.isPlaybackMode()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzcwMjM1OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNzo0NlrOHKHffw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowNzo0NlrOHKHffw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDU1OQ==", "bodyText": "nice!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480370559", "createdAt": "2020-08-31T20:07:46Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.azure.digitaltwins.core;\n+\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.test.TestBase;\n+import com.azure.core.test.TestMode;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.ClientSecretCredentialBuilder;\n+\n+import java.util.Locale;\n+\n+public class DigitalTwinsTestBase extends TestBase\n+{\n+    protected static final String TENANT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"TENANT_ID\", \"tenantId\");\n+\n+    protected static final String CLIENT_SECRET = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_SECRET\", \"clientSecret\");\n+\n+    protected static final String CLIENT_ID = Configuration.getGlobalConfiguration()\n+        .get(\"CLIENT_ID\", \"clientId\");\n+\n+    protected static final String DIGITALTWINS_URL = Configuration.getGlobalConfiguration()\n+        .get(\"DIGITALTWINS_URL\", \"https://playback.api.wus2.digitaltwins.azure.net\");\n+\n+    protected DigitalTwinsClientBuilder getDigitalTwinsClientBuilder(){\n+        DigitalTwinsClientBuilder builder = new DigitalTwinsClientBuilder()\n+            .endpoint(DIGITALTWINS_URL)\n+            .tokenCredential(new ClientSecretCredentialBuilder()\n+                .tenantId(TENANT_ID)\n+                .clientId(CLIENT_ID)\n+                .clientSecret(CLIENT_SECRET)\n+                .build());\n+\n+        if(interceptorManager.isPlaybackMode()){\n+            builder.httpClient(interceptorManager.getPlaybackClient());\n+            return builder;\n+        }\n+\n+        // TODO: investigate whether or not we need to add a retry policy.\n+\n+        // If it is record mode, we add record mode policies to the builder.\n+        // There is no isRecordMode method on interceptorManger.\n+        if(!interceptorManager.isLiveMode()){\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected DigitalTwinsClientBuilder getDigitalTwinsClientBuilder(HttpPipelinePolicy... policies){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzcwMzYyOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/prerequisite/manifest.json", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDowODoxN1rOHKHgWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1Njo0OFrOHKMkdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDc3OQ==", "bodyText": "what are these values?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480370779", "createdAt": "2020-08-31T20:08:17Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/prerequisite/manifest.json", "diffHunk": "@@ -0,0 +1,9 @@\n+[{\n+    \"resourceAppId\": \"0b07f429-9f4b-4714-9392-cc5e8e80c8b0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MjE5MQ==", "bodyText": "this the the dataplane APP ID for ADT", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480372191", "createdAt": "2020-08-31T20:11:00Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/prerequisite/manifest.json", "diffHunk": "@@ -0,0 +1,9 @@\n+[{\n+    \"resourceAppId\": \"0b07f429-9f4b-4714-9392-cc5e8e80c8b0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDc3OQ=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MzM3OQ==", "bodyText": "Why not use the human readable one: https://digitaltwins.azure.net?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480373379", "createdAt": "2020-08-31T20:13:28Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/prerequisite/manifest.json", "diffHunk": "@@ -0,0 +1,9 @@\n+[{\n+    \"resourceAppId\": \"0b07f429-9f4b-4714-9392-cc5e8e80c8b0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDc3OQ=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1Mzc0OA==", "bodyText": "we no longer need this anyways, removing.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480453748", "createdAt": "2020-08-31T22:56:48Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/prerequisite/manifest.json", "diffHunk": "@@ -0,0 +1,9 @@\n+[{\n+    \"resourceAppId\": \"0b07f429-9f4b-4714-9392-cc5e8e80c8b0\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3MDc3OQ=="}, "originalCommit": {"oid": "b2e5a2ab53adb944c8485b5e865ef39bf0503a75"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDM3OTQ5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzoyODo0M1rOHKNprQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzoyODo0M1rOHKNprQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MTQ2OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14660#discussion_r480471469", "createdAt": "2020-08-31T23:28:43Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/pom.xml", "diffHunk": "@@ -15,28 +15,65 @@\n     <artifactId>azure-digitaltwins-core</artifactId>\n     <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-digitaltwins-core;current} -->\n \n+  <properties>\n+    <!-- These are the code coverage settings that should eventually be removed to inherit them from the parent pom file. for the time being we have a very low code coverage so we are dropping it to a very low setting -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bceb38dd109b1fc321930ef0b4ad8e1336f71641"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1342, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}