{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjQ3Njk1", "number": 10494, "title": "Change MatchCondition to onlyIfUnchanged bool", "bodyText": "Fixed #10473", "createdAt": "2020-04-24T16:25:57Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494", "merged": true, "mergeCommit": {"oid": "7d2549875385c53c4ffd4c14f68281f575eaaa8d"}, "closed": true, "closedAt": "2020-04-27T21:34:18Z", "author": {"login": "sima-zhu"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaz60XgH2gAyNDA4NjQ3Njk1Ojc0NDVlNGQ2NDVhODgwZDhhOTE3MGMxMzg0MDI2MzE5MzE2MzgxMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb2PUzgFqTQwMTM0MzQ4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7445e4d645a880d8a9170c138402631931638106", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7445e4d645a880d8a9170c138402631931638106", "committedDate": "2020-04-24T16:17:31Z", "message": "Change MatchCondition to onlyIfUnchanged bool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2f31db334c8c9734a72bab61649c3c21205ffa1c", "committedDate": "2020-04-24T16:31:58Z", "message": "Update the change log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ffc8ebc56cd9ed8e10a8a6443f1331737e73603", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5ffc8ebc56cd9ed8e10a8a6443f1331737e73603", "committedDate": "2020-04-24T16:33:05Z", "message": "temp changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTcyMzE0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-400172314", "createdAt": "2020-04-24T18:19:12Z", "commit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODoxOToxMlrOGLjvpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODoyNDo1OVrOGLj9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzE1Nw==", "bodyText": "Why did we add null check here but nowhere else?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414773157", "createdAt": "2020-04-24T18:19:12Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -295,23 +308,29 @@ public Indexer getIndexer(String indexerName) {\n      * @param indexerName the name of the indexer to delete\n      */\n     public void deleteIndexer(String indexerName) {\n-        deleteIndexerWithResponse(indexerName, null, null, Context.NONE);\n+        deleteIndexerWithResponse(new Indexer().setName(indexerName), null, null, Context.NONE);\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search indexer.\n      *\n-     * @param indexerName the name of the indexer to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param indexer the search {@link Indexer}\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or\n      * doesn't match specified values\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @param context the context\n      * @return a response signalling completion.\n      */\n-    public Response<Void> deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition,\n+    public Response<Void> deleteIndexerWithResponse(Indexer indexer, Boolean onlyIfUnchanged,\n         RequestOptions requestOptions, Context context) {\n-        return asyncClient.deleteIndexerWithResponse(indexerName, accessCondition, requestOptions, context).block();\n+        Objects.requireNonNull(indexer, \"Indexer cannot be 'null'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzY5NA==", "bodyText": "Let's just update the internal APIs to take the onlyIfUnchanged boolean instead of adding the logic twice.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414773694", "createdAt": "2020-04-24T18:20:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -83,15 +85,18 @@ public DataSource createOrUpdateDataSource(DataSource dataSource) {\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n      * @param dataSource the definition of the data source to create or update\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or\n      * doesn't match specified values\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @param context additional context that is passed through the HTTP pipeline during the service call\n      * @return a response containing data source that was created or updated.\n      */\n-    public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource,\n-        MatchConditions accessCondition, RequestOptions requestOptions, Context context) {\n+    public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource, Boolean onlyIfUnchanged,\n+        RequestOptions requestOptions, Context context) {\n+        MatchConditions accessCondition = new MatchConditions();\n+        accessCondition = onlyIfUnchanged != null && onlyIfUnchanged ?\n+            accessCondition.setIfMatch(dataSource.getETag()) : accessCondition;\n         return asyncClient.createOrUpdateDataSourceWithResponse(dataSource, accessCondition, requestOptions, context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NDYzMQ==", "bodyText": "Why are only the sync methods updated?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414774631", "createdAt": "2020-04-24T18:21:38Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -231,15 +241,18 @@ public Indexer createOrUpdateIndexer(Indexer indexer) {\n      * Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists.\n      *\n      * @param indexer The definition of the indexer to create or update.\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or\n      * doesn't match specified values\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @param context additional context that is passed through the HTTP pipeline during the service call\n      * @return A response object containing the Indexer.\n      */\n-    public Response<Indexer> createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition,\n+    public Response<Indexer> createOrUpdateIndexerWithResponse(Indexer indexer, Boolean onlyIfUnchanged,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NTY1Mg==", "bodyText": "Why use a Boolean? boolean should work the same without having the confusing null case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414775652", "createdAt": "2020-04-24T18:23:25Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -83,15 +85,18 @@ public DataSource createOrUpdateDataSource(DataSource dataSource) {\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n      * @param dataSource the definition of the data source to create or update\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or\n      * doesn't match specified values\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @param context additional context that is passed through the HTTP pipeline during the service call\n      * @return a response containing data source that was created or updated.\n      */\n-    public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource,\n-        MatchConditions accessCondition, RequestOptions requestOptions, Context context) {\n+    public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource, Boolean onlyIfUnchanged,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NTc1NQ==", "bodyText": "Need to update Javadocs", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414775755", "createdAt": "2020-04-24T18:23:35Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -83,15 +85,18 @@ public DataSource createOrUpdateDataSource(DataSource dataSource) {\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n      * @param dataSource the definition of the data source to create or update\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3NjU5Ng==", "bodyText": "Not a huge fan to switching this to Indexer just to support simpler ETag matching. We switched the burden from creating a simple MatchConditions class to creating a Indexer class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414776596", "createdAt": "2020-04-24T18:24:59Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceClient.java", "diffHunk": "@@ -295,23 +308,29 @@ public Indexer getIndexer(String indexerName) {\n      * @param indexerName the name of the indexer to delete\n      */\n     public void deleteIndexer(String indexerName) {\n-        deleteIndexerWithResponse(indexerName, null, null, Context.NONE);\n+        deleteIndexerWithResponse(new Indexer().setName(indexerName), null, null, Context.NONE);\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search indexer.\n      *\n-     * @param indexerName the name of the indexer to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n+     * @param indexer the search {@link Indexer}\n+     * @param onlyIfUnchanged the condition where the operation will be performed if the ETag on the server matches or\n      * doesn't match specified values\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @param context the context\n      * @return a response signalling completion.\n      */\n-    public Response<Void> deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition,\n+    public Response<Void> deleteIndexerWithResponse(Indexer indexer, Boolean onlyIfUnchanged,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f31db334c8c9734a72bab61649c3c21205ffa1c"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b39027596fdb36639555221ef131f29b4cf8cd6f", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b39027596fdb36639555221ef131f29b4cf8cd6f", "committedDate": "2020-04-24T21:42:53Z", "message": "Make changes to service api layer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1751422f1f2ca86fd8a32a1119e12e7b7eb7cfee", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1751422f1f2ca86fd8a32a1119e12e7b7eb7cfee", "committedDate": "2020-04-24T22:09:56Z", "message": "Fixed failed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6", "committedDate": "2020-04-24T22:18:47Z", "message": "Added deleteafter tags for rg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzA4NDQ5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-400308449", "createdAt": "2020-04-24T22:36:42Z", "commit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjozNjo0M1rOGLriCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjozODozOVrOGLrkWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMDc0NA==", "bodyText": "Let's push this logic into the package private method this calls into", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414900744", "createdAt": "2020-04-24T22:36:43Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -271,37 +273,40 @@ public String getEndpoint() {\n     /**\n      * Delete a DataSource\n      *\n-     * @param dataSourceName the name of the data source for deletion\n+     * @param dataSourceName the name of the {@link DataSource} for deletion\n      * @return a void Mono\n      */\n     public Mono<Void> deleteDataSource(String dataSourceName) {\n-        return deleteDataSourceWithResponse(dataSourceName, null, null).flatMap(FluxUtil::toMono);\n+        return withContext(context ->\n+            deleteDataSourceWithResponse(dataSourceName, null, null, context).flatMap(FluxUtil::toMono));\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search data source.\n      *\n-     * @param dataSourceName The name of the data source to delete.\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param dataSource The {@link DataSource} to delete.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means\n+     * operation will apply only if etag matches. Otherwise, false.\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @return a mono response\n      */\n-    public Mono<Response<Void>> deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition,\n+    public Mono<Response<Void>> deleteDataSourceWithResponse(DataSource dataSource, boolean onlyIfUnchanged,\n         RequestOptions requestOptions) {\n+        Objects.requireNonNull(dataSource, \"'DataSource' cannot be null\");\n+        String etag = onlyIfUnchanged ? dataSource.getETag() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMDg4MQ==", "bodyText": "Let's push this logic into the package private method this calls.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414900881", "createdAt": "2020-04-24T22:37:11Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -462,40 +469,42 @@ public String getEndpoint() {\n      * @return a response signalling completion.\n      */\n     public Mono<Void> deleteIndexer(String indexerName) {\n-        return deleteIndexerWithResponse(indexerName, null, null).flatMap(FluxUtil::toMono);\n+        return withContext(context -> deleteIndexerWithResponse(indexerName, null, null, context)\n+            .flatMap(FluxUtil::toMono));\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search indexer.\n      *\n-     * @param indexerName the name of the indexer to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param indexer the {@link Indexer} to delete\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means\n+     * operation will apply only if etag matches. Otherwise, false.\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @return a response signalling completion.\n      */\n-    public Mono<Response<Void>> deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition,\n+    public Mono<Response<Void>> deleteIndexerWithResponse(Indexer indexer, boolean onlyIfUnchanged,\n         RequestOptions requestOptions) {\n-        return withContext(context -> deleteIndexerWithResponse(indexerName, accessCondition, requestOptions, context));\n+        Objects.requireNonNull(indexer, \"'Indexer' cannot be null\");\n+        String etag = onlyIfUnchanged ? indexer.getETag() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMTAzNg==", "bodyText": "Let's push this logic into the package private method this calls.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414901036", "createdAt": "2020-04-24T22:37:42Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -794,29 +806,31 @@ public String getEndpoint() {\n      * @return a response signalling completion.\n      */\n     public Mono<Void> deleteIndex(String indexName) {\n-        return deleteIndexWithResponse(indexName, null, null).flatMap(FluxUtil::toMono);\n+        return withContext(context -> deleteIndexWithResponse(indexName, null, null, null).flatMap(FluxUtil::toMono));\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search index and all the documents it contains.\n      *\n-     * @param indexName the name of the index to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param index the {@link Index} to delete.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means\n+     * operation will apply only if etag matches. Otherwise, false.\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @return a response signalling completion.\n      */\n-    public Mono<Response<Void>> deleteIndexWithResponse(String indexName, MatchConditions accessCondition,\n+    public Mono<Response<Void>> deleteIndexWithResponse(Index index, boolean onlyIfUnchanged,\n         RequestOptions requestOptions) {\n-        return withContext(context -> deleteIndexWithResponse(indexName, accessCondition, requestOptions, context));\n+        Objects.requireNonNull(index, \"'Index' cannot be null.\");\n+        String etag = onlyIfUnchanged ? index.getETag() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 319}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMTIwMA==", "bodyText": "Let's push this logic into the package private this method calls.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414901200", "createdAt": "2020-04-24T22:38:12Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -1035,30 +1052,33 @@ public String getEndpoint() {\n      * @return a response signalling completion.\n      */\n     public Mono<Void> deleteSkillset(String skillsetName) {\n-        return deleteSkillsetWithResponse(skillsetName, null, null).flatMap(FluxUtil::toMono);\n+        return withContext(context -> deleteSkillsetWithResponse(skillsetName, null, null, context)\n+            .flatMap(FluxUtil::toMono));\n     }\n \n     /**\n      * Deletes a cognitive skillset in an Azure Cognitive Search service.\n      *\n-     * @param skillsetName the name of the skillset to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param skillset the {@link Skillset} to delete.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means\n+     * operation will apply only if etag matches. Otherwise, false.\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @return a response signalling completion.\n      */\n-    public Mono<Response<Void>> deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition,\n+    public Mono<Response<Void>> deleteSkillsetWithResponse(Skillset skillset, boolean onlyIfUnchanged,\n         RequestOptions requestOptions) {\n+        Objects.requireNonNull(skillset, \"'Skillset' cannot be null.\");\n+        String etag = onlyIfUnchanged ? skillset.getETag() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 408}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMTMzNw==", "bodyText": "Let's push this logic into the package private method this calls.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r414901337", "createdAt": "2020-04-24T22:38:39Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -1221,34 +1244,37 @@ public String getEndpoint() {\n     /**\n      * Deletes an Azure Cognitive Search synonym map.\n      *\n-     * @param synonymMapName the name of the synonym map to delete\n+     * @param synonymMapName the name of the {@link SynonymMap} to delete\n      * @return a response signalling completion.\n      */\n     public Mono<Void> deleteSynonymMap(String synonymMapName) {\n-        return deleteSynonymMapWithResponse(synonymMapName, null, null).flatMap(FluxUtil::toMono);\n+        return withContext(context -> deleteSynonymMapWithResponse(synonymMapName, null, null, context)\n+            .flatMap(FluxUtil::toMono));\n     }\n \n     /**\n      * Deletes an Azure Cognitive Search synonym map.\n      *\n-     * @param synonymMapName the name of the synonym map to delete\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param synonymMap the {@link SynonymMap} to delete.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means\n+     * operation will apply only if etag matches. Otherwise, false.\n      * @param requestOptions additional parameters for the operation. Contains the tracking ID sent with the request to\n      * help with debugging\n      * @return a response signalling completion.\n      */\n-    public Mono<Response<Void>> deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition,\n+    public Mono<Response<Void>> deleteSynonymMapWithResponse(SynonymMap synonymMap, boolean onlyIfUnchanged,\n         RequestOptions requestOptions) {\n+        Objects.requireNonNull(synonymMap, \"'SynonymMap' cannot be null\");\n+        String etag = onlyIfUnchanged ? synonymMap.getETag() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 519}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzIzOTE3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-400323917", "createdAt": "2020-04-24T23:33:08Z", "commit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5656545c9c7ace67c3ece0dc3de8ca74510a6dda", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5656545c9c7ace67c3ece0dc3de8ca74510a6dda", "committedDate": "2020-04-25T05:16:10Z", "message": "Added package private helper method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjQ5NzQ3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-400649747", "createdAt": "2020-04-27T06:09:57Z", "commit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowOTo1OFrOGMSTPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoxMDoyOVrOGMSUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTkzNA==", "bodyText": "The documentation shouldn't contain implementation details.\n@param onlyIfUnchanged {@code true} to update if the {@code dataSource} is the same as the current service value. {@code false} to always update existing value.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r415535934", "createdAt": "2020-04-27T06:09:58Z", "author": {"login": "conniey"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -117,36 +117,38 @@ public String getEndpoint() {\n     /**\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n-     * @param dataSource the definition of the data source to create or update\n+     * @param dataSource The definition of the {@link DataSource} to create or update.\n      * @return the data source that was created or updated.\n      */\n     public Mono<DataSource> createOrUpdateDataSource(DataSource dataSource) {\n-        return createOrUpdateDataSourceWithResponse(dataSource, null, null).map(Response::getValue);\n+        return createOrUpdateDataSourceWithResponse(dataSource, false, null).map(Response::getValue);\n     }\n \n     /**\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n-     * @param dataSource The definition of the data source to create or update.\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param dataSource The definition of the {@link DataSource} to create or update.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNjE2MQ==", "bodyText": "Same with any other instances of this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r415536161", "createdAt": "2020-04-27T06:10:29Z", "author": {"login": "conniey"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -117,36 +117,38 @@ public String getEndpoint() {\n     /**\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n-     * @param dataSource the definition of the data source to create or update\n+     * @param dataSource The definition of the {@link DataSource} to create or update.\n      * @return the data source that was created or updated.\n      */\n     public Mono<DataSource> createOrUpdateDataSource(DataSource dataSource) {\n-        return createOrUpdateDataSourceWithResponse(dataSource, null, null).map(Response::getValue);\n+        return createOrUpdateDataSourceWithResponse(dataSource, false, null).map(Response::getValue);\n     }\n \n     /**\n      * Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n      *\n-     * @param dataSource The definition of the data source to create or update.\n-     * @param accessCondition the condition where the operation will be performed if the ETag on the server matches or\n-     * doesn't match specified values\n+     * @param dataSource The definition of the {@link DataSource} to create or update.\n+     * @param onlyIfUnchanged boolean to indicate whether to check etag before perform the operation. True means", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTkzNA=="}, "originalCommit": {"oid": "13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMTE2NjQx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-401116641", "createdAt": "2020-04-27T16:22:08Z", "commit": {"oid": "5656545c9c7ace67c3ece0dc3de8ca74510a6dda"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyMjowOFrOGMsDLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyMjowOFrOGMsDLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1NzgwNg==", "bodyText": "Let's remove this method and keep ETag retrieval scoped to the individual call. Right now this is using reflection to retrieve a known field when using an Index, Indexer, etc.\nLet's keep the logic simple and repetitive in the package private methods that call into the implementation layer by having them use getETag on the object they are working with.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#discussion_r415957806", "createdAt": "2020-04-27T16:22:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchServiceAsyncClient.java", "diffHunk": "@@ -1286,4 +1302,13 @@ public String getEndpoint() {\n             return monoError(logger, ex);\n         }\n     }\n+\n+    protected String getETagFromResource(Object resource, boolean onlyIfUnchanged) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5656545c9c7ace67c3ece0dc3de8ca74510a6dda"}, "originalPosition": 533}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af0871f358abbea14807eefd1abf2857c1caa238", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/af0871f358abbea14807eefd1abf2857c1caa238", "committedDate": "2020-04-27T16:54:29Z", "message": "Revert \"Added deleteafter tags for rg\"\n\nThis reverts commit 13aafac4a41fcabd56d5b32a5e5ecdc7c43622d6."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c314858e253cc0e91540f904d4fa070e03d08f95", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c314858e253cc0e91540f904d4fa070e03d08f95", "committedDate": "2020-04-27T17:13:34Z", "message": "Update comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4dfef51f1ac66cd57a40a7d4e7e6ca4cba862ed", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4dfef51f1ac66cd57a40a7d4e7e6ca4cba862ed", "committedDate": "2020-04-27T17:55:07Z", "message": "Revert \"Added package private helper method\"\n\nThis reverts commit 5656545c9c7ace67c3ece0dc3de8ca74510a6dda."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMzQzNDgy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10494#pullrequestreview-401343482", "createdAt": "2020-04-27T21:33:39Z", "commit": {"oid": "c4dfef51f1ac66cd57a40a7d4e7e6ca4cba862ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4582, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}