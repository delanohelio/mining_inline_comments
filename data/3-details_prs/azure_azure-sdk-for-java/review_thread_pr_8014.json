{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTc5NDM2", "number": 8014, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoyNzo1MlrODeK0xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzowODozN1rODeLVIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTYxMjIyOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/RecognizeEntityAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoyNzo1MlrOFnMHPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoyNzo1MlrOFnMHPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzNzI0Nw==", "bodyText": "We shouldn't change this.\nSee https://teams.microsoft.com/l/message/19:d6ff4003f5c848a2a2d6dcdfc0ebd497@thread.skype/1580429945756?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=3e17dcb0-4257-4a30-b843-77f47f1d4121&parentMessageId=1580324648253&teamName=Azure%20SDK&channelName=Service%20-%20Text%20Analytics&createdTime=1580429945756", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8014#discussion_r376637247", "createdAt": "2020-02-07T22:27:52Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/RecognizeEntityAsyncClient.java", "diffHunk": "@@ -11,7 +11,7 @@\n import com.azure.ai.textanalytics.models.CategorizedEntity;\n import com.azure.ai.textanalytics.models.DetectLanguageResult;\n import com.azure.ai.textanalytics.models.DocumentResultCollection;\n-import com.azure.ai.textanalytics.models.RecognizeEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizeEntityResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a25c6cb4b24627b875fba44d19975e9b1509e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTYyMDY5OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjozMTo0OVrOFnMMZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjozMTo0OVrOFnMMZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODU2Nw==", "bodyText": "we should include a message or something that says that for this methods in the async word, the return changed too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8014#discussion_r376638567", "createdAt": "2020-02-07T22:31:49Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,54 @@\n # Release History\n \n-## 1.0.0-beta.2 (Unreleased)\n+## 1.0.0-beta.2 (2020-02-11)\n \n+**Breaking changes**\n+\n+- The single text, module-level operations return an atomic type of the operation result. For example, `detectLanguage(String text)` returns a `DetectedLanguage` rather than a `DetectLanguageResult`.\n+\n+  For other module-level operations:\n+    \n+  `recognizeEntities(String text)`, it no longer returns type of `Mono<RecognizeEntitiesResult>` but `PagedFlux<CategorizedEntity>`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a25c6cb4b24627b875fba44d19975e9b1509e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTY3NTE1OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjo1OTowNFrOFnMsAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjo1OTowNFrOFnMsAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0NjY1OA==", "bodyText": "There was also a renaming of the batch methods were we moved batch as the suffix", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8014#discussion_r376646658", "createdAt": "2020-02-07T22:59:04Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,54 @@\n # Release History\n \n-## 1.0.0-beta.2 (Unreleased)\n+## 1.0.0-beta.2 (2020-02-11)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a25c6cb4b24627b875fba44d19975e9b1509e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTY5NTA2OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzowODozN1rOFnM3gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzoyMjoyMVrOFnNEpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0OTYwMw==", "bodyText": "We should add that RecognizeLinkedEntitiesResult linkedentities changed to entities", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8014#discussion_r376649603", "createdAt": "2020-02-07T23:08:37Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,54 @@\n # Release History\n \n-## 1.0.0-beta.2 (Unreleased)\n+## 1.0.0-beta.2 (2020-02-11)\n \n+**Breaking changes**\n+\n+- The single text, module-level operations return an atomic type of the operation result. For example, `detectLanguage(String text)` returns a `DetectedLanguage` rather than a `DetectLanguageResult`.\n+\n+  For other module-level operations:\n+    \n+  `recognizeEntities(String text)`, it no longer returns type of `Mono<RecognizeEntitiesResult>` but `PagedFlux<CategorizedEntity>`.\n+  \n+  `recognizePiiEntities(String text)`, it no longer returns type of `Mono<RecognizePiiEntitiesResult>` but `PagedFlux<PiiEntity>`.\n+  \n+  `recognizeLinkedEntities(String text)`, it no longer returns type of `Mono<RecognizeLinkedEntitiesResult>` but `PagedFlux<LinkedEntity>`.\n+  \n+  `extractKeyPhrases(String text)`, it no longer returns type of `Mono<ExtractKeyPhraseResult>` but `PagedFlux<String>`.\n+  \n+  `analyzeSentiment(String text)`, it no longer returns type of `Mono<AnalyzeSentimentResult>` but `Mono<DocumentSentiment>`.\n+  \n+  `recognizeEntitiesWithResponse(String text, String language)` changed to `recognizeEntities(String text, String language)` and return `PagedFlux<CategorizedEntity>` as a collection of atomic type `CategorizedEntity`.\n+  \n+  `recognizePiiEntitiesWithResponse(String text, String language)` changed to `recognizePiiEntities(String text, String language)` and return `PagedFlux<PiiEntity>` as a collection of atomic type `PiiEntity`.\n+  \n+  `recognizeLinkedEntitiesWithResponse(String text, String language)` changed to `recognizeLinkedEntities(String text, String language)` and return `PagedFlux<LinkedEntity>` as a collection of atomic type `LinkedEntity`.\n+  \n+  `extractKeyPhrasesWithResponse(String text, String language)` changed to `extractKeyPhrases(String text, String language)` and return `PagedFlux<String>` as a collection of atomic type `String`.\n+  \n+  `analyzeSentimentWithResponse(String text, String language)` return `Mono<Response<DocumentSentiment>>` with an atomic type `DocumentSentiment`.\n+\n+- Removed `TextSentiment` class but created `DocumentSentiment` and `SentenceSentiment` instead. `DocumentSentiment` includes a list of `SentenceSentiment`.\n+\n+- Added a new class model `SentimentScorePerLabel` for the scores of sentiment label.  \n+- Added a new parameter `TextAnalyticsRequestOptions options` to method overloads accepting a list of text inputs for allowing the users to opt for batch operation statistics.\n+- Passing the API key as a string is no longer supported. To use subscription key authentication a new credential class `TextAnalyticsApiKeyCredential(\"<api_key>\")` must be passed in for the `credential` parameter.\n+- `detectLanguages()` is renamed to `detectLanguage()`.\n+- The `TextAnalyticsError` model has been simplified to an object with only attributes `code`, `message`, and `target`.\n+- `RecognizePiiEntitiesResult` now contains on the object a list of `PiiEntity` instead of `NamedEntity`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424a25c6cb4b24627b875fba44d19975e9b1509e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1Mjk2Nw==", "bodyText": "oh I saw it.... I guess it deserves its own bullet point. otherwise it is confusing", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8014#discussion_r376652967", "createdAt": "2020-02-07T23:22:21Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,54 @@\n # Release History\n \n-## 1.0.0-beta.2 (Unreleased)\n+## 1.0.0-beta.2 (2020-02-11)\n \n+**Breaking changes**\n+\n+- The single text, module-level operations return an atomic type of the operation result. For example, `detectLanguage(String text)` returns a `DetectedLanguage` rather than a `DetectLanguageResult`.\n+\n+  For other module-level operations:\n+    \n+  `recognizeEntities(String text)`, it no longer returns type of `Mono<RecognizeEntitiesResult>` but `PagedFlux<CategorizedEntity>`.\n+  \n+  `recognizePiiEntities(String text)`, it no longer returns type of `Mono<RecognizePiiEntitiesResult>` but `PagedFlux<PiiEntity>`.\n+  \n+  `recognizeLinkedEntities(String text)`, it no longer returns type of `Mono<RecognizeLinkedEntitiesResult>` but `PagedFlux<LinkedEntity>`.\n+  \n+  `extractKeyPhrases(String text)`, it no longer returns type of `Mono<ExtractKeyPhraseResult>` but `PagedFlux<String>`.\n+  \n+  `analyzeSentiment(String text)`, it no longer returns type of `Mono<AnalyzeSentimentResult>` but `Mono<DocumentSentiment>`.\n+  \n+  `recognizeEntitiesWithResponse(String text, String language)` changed to `recognizeEntities(String text, String language)` and return `PagedFlux<CategorizedEntity>` as a collection of atomic type `CategorizedEntity`.\n+  \n+  `recognizePiiEntitiesWithResponse(String text, String language)` changed to `recognizePiiEntities(String text, String language)` and return `PagedFlux<PiiEntity>` as a collection of atomic type `PiiEntity`.\n+  \n+  `recognizeLinkedEntitiesWithResponse(String text, String language)` changed to `recognizeLinkedEntities(String text, String language)` and return `PagedFlux<LinkedEntity>` as a collection of atomic type `LinkedEntity`.\n+  \n+  `extractKeyPhrasesWithResponse(String text, String language)` changed to `extractKeyPhrases(String text, String language)` and return `PagedFlux<String>` as a collection of atomic type `String`.\n+  \n+  `analyzeSentimentWithResponse(String text, String language)` return `Mono<Response<DocumentSentiment>>` with an atomic type `DocumentSentiment`.\n+\n+- Removed `TextSentiment` class but created `DocumentSentiment` and `SentenceSentiment` instead. `DocumentSentiment` includes a list of `SentenceSentiment`.\n+\n+- Added a new class model `SentimentScorePerLabel` for the scores of sentiment label.  \n+- Added a new parameter `TextAnalyticsRequestOptions options` to method overloads accepting a list of text inputs for allowing the users to opt for batch operation statistics.\n+- Passing the API key as a string is no longer supported. To use subscription key authentication a new credential class `TextAnalyticsApiKeyCredential(\"<api_key>\")` must be passed in for the `credential` parameter.\n+- `detectLanguages()` is renamed to `detectLanguage()`.\n+- The `TextAnalyticsError` model has been simplified to an object with only attributes `code`, `message`, and `target`.\n+- `RecognizePiiEntitiesResult` now contains on the object a list of `PiiEntity` instead of `NamedEntity`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0OTYwMw=="}, "originalCommit": {"oid": "424a25c6cb4b24627b875fba44d19975e9b1509e"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3251, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}