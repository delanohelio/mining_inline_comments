{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExOTQxNTk5", "number": 16946, "title": "Fixed diagnostics information and other APIs on cosmos stored procedure response", "bodyText": "Fixes cosmos diagnostics and other APIs on CosmosStoredProcedureResponse\nAddresses #16925", "createdAt": "2020-10-29T00:56:51Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946", "merged": true, "mergeCommit": {"oid": "0cd5d1f915e9be2b8934a5a4e5d9e01de40c0f52"}, "closed": true, "closedAt": "2020-10-29T23:00:06Z", "author": {"login": "kushagraThapar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXHagjgH2gAyNTExOTQxNTk5OjRlYzRmNDU5ZWMxM2E2ODg5YTM5ZDVmMzg4NjA4YTg4YzBlMWY5YzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXWdoNAFqTUxOTk1ODY1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "committedDate": "2020-10-29T00:55:47Z", "message": "Fixed diagnostics information and other APIs on cosmos stored procedure response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzE0NDc0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#pullrequestreview-519314474", "createdAt": "2020-10-29T03:50:24Z", "commit": {"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzo1MDoyNFrOHqICbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzo1MDoyNFrOHqICbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkzMzkzMw==", "bodyText": "with this change essentially similar to CosmosItemResponse  we are implementing all these APIs here instead of relying on the parent class.\nSo I would like to suggest that we drop the inheritance on the CosmosResponse for this class.\nI know that theoretically speaking it can be considered a breaking change but in practice it is not breaking change as you are implementing all the required methods.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r513933933", "createdAt": "2020-10-29T03:50:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java", "diffHunk": "@@ -90,13 +94,56 @@ public double getRequestCharge() {\n         return super.getRequestCharge();\n     }\n \n+    @Override\n+    public String getMaxResourceQuota() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzU1MjYz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#pullrequestreview-519355263", "createdAt": "2020-10-29T06:08:34Z", "commit": {"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjowODozNFrOHqMX7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNjowODozNFrOHqMX7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwNDk3NQ==", "bodyText": "Can you try and see if this works?\n    super(new ResourceResponse<>(response.getRxDocumentServiceResponse(),\n                                     StoredProcedure.class));\n\nand in StoredProcedureResponse\n    public RxDocumentServiceResponse getRxDocumentServiceResponse() {\n        return this.response;\n    }\n\nIn this way you may avoid re implementing all the super methods", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514004975", "createdAt": "2020-10-29T06:08:34Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java", "diffHunk": "@@ -24,7 +28,7 @@\n     }\n \n     CosmosStoredProcedureResponse(StoredProcedureResponse response) {\n-        super(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02b1e970832b26d2efbc2495ce2f899fcb29742a", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/02b1e970832b26d2efbc2495ce2f899fcb29742a", "committedDate": "2020-10-29T17:03:45Z", "message": "Code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "050a8b95d56eccc0f4878f227cd535af0e0a5c89", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/050a8b95d56eccc0f4878f227cd535af0e0a5c89", "committedDate": "2020-10-29T17:23:37Z", "message": "Fixing conflict resolution policy CRUD test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTA3ODkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#pullrequestreview-519907891", "createdAt": "2020-10-29T17:27:00Z", "commit": {"oid": "050a8b95d56eccc0f4878f227cd535af0e0a5c89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzoyNzowMFrOHqm0IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzoyNzowMFrOHqm0IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzODE3Ng==", "bodyText": "is this because of service side message change?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514438176", "createdAt": "2020-10-29T17:27:00Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/MultiMasterConflictResolutionTest.java", "diffHunk": "@@ -81,7 +81,7 @@ public void conflictResolutionPolicyCRUD() {\n             // when (e.StatusCode == HttpStatusCode.BadRequest)\n             CosmosException dce = Utils.as(e, CosmosException.class);\n             if (dce != null && dce.getStatusCode() == 400) {\n-                assertThat(dce.getMessage()).contains(\"Invalid path '\\\\/a\\\\/b' for last writer wins conflict resolution\");\n+                assertThat(dce.getMessage()).contains(\"Invalid path '\\\\\\\\\\\\/a\\\\\\\\\\\\/b' for last writer wins conflict resolution\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "050a8b95d56eccc0f4878f227cd535af0e0a5c89"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTU4NjUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#pullrequestreview-519958652", "createdAt": "2020-10-29T18:27:46Z", "commit": {"oid": "050a8b95d56eccc0f4878f227cd535af0e0a5c89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1537, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}