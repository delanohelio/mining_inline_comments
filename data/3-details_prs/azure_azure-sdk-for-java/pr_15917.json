{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTkxNDM4", "number": 15917, "title": "Hide Communication Client Credentials and Refactor", "bodyText": "Changes in this PR:\n\nHide the CommunicationClientCredential so that credential(CommunicationClientCredential credential) is replaced with\naccessKey(String accessKey)\nRefactored CommunicationClientCredential constructor so that it catches the exceptions instead of throwing them. This change means that the downstream methods that initialize CommunicationClientCredential will not be forced to either catch/throw the exceptions and cleans up the code a lot.\nAdded support for builders to take in a connection string using connectionString() instead of endpoint and access key\nAdded new tests and samples and updated the README for changes in (1) and (3)\n\nTODO:\n\n Update the CHANGELOG after the newest changelog updates for phone administration has been merged in", "createdAt": "2020-10-03T01:05:36Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917", "merged": true, "mergeCommit": {"oid": "f8f27e17d2d5ac0d73a4089d28385ac496081611"}, "closed": true, "closedAt": "2020-10-06T22:37:40Z", "author": {"login": "minnieliu"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOar-EAH2gAyNDk3MTkxNDM4OjA3OGU0YzJkM2ZiZDA3YzE0NmJiNGNjYTdlOTQ2OGQyZWMzNGVjNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS2RnNgFqTUwOTY1ODk5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "078e4c2d3fbd07c146bb4cca7e9468d2ec34ec56", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/078e4c2d3fbd07c146bb4cca7e9468d2ec34ec56", "committedDate": "2020-10-02T00:17:44Z", "message": "Hide Communication Client Credential"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1ce678559b8c0d3b95dfc1e5269fb47112ee55", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2d1ce678559b8c0d3b95dfc1e5269fb47112ee55", "committedDate": "2020-10-02T22:59:00Z", "message": "Adding support of directly passing in connectionString to builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b53693e541f0aa6aefee485ecbae78c4fb1e5d1b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b53693e541f0aa6aefee485ecbae78c4fb1e5d1b", "committedDate": "2020-10-03T00:30:05Z", "message": "Merge with master and update the phone number admin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "781f16e2f93e4e56f75e1939bd6dec48308c9b8c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/781f16e2f93e4e56f75e1939bd6dec48308c9b8c", "committedDate": "2020-10-03T00:32:29Z", "message": "Update Readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9579a1dc3de8e96726d5494e4ecf5858013ac15", "committedDate": "2020-10-03T00:58:28Z", "message": "Renaming variables and fixing ReadMe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTA4ODcy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#pullrequestreview-501508872", "createdAt": "2020-10-03T01:12:38Z", "commit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMToxMjozOVrOHb-xNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMToyOTo0MVrOHb-2uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjAwNA==", "bodyText": "setAccessKeyNull", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499102004", "createdAt": "2020-10-03T01:12:39Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/PhoneNumberClientBuilderTest.java", "diffHunk": "@@ -295,7 +294,7 @@ public void setHttpClientNull() {\n     @Test()\n     public void setCredentialNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjAyNA==", "bodyText": "nit: extra indent. Also CONNECTION_STRING", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499102024", "createdAt": "2020-10-03T01:12:54Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/PhoneNumberIntegrationTestBase.java", "diffHunk": "@@ -21,6 +21,8 @@\n         Configuration.getGlobalConfiguration().get(\"COMMUNICATION_SERVICE_ACCESS_KEY\");\n     private static final String ENV_ENDPOINT =\n         Configuration.getGlobalConfiguration().get(\"COMMUNICATION_SERVICE_ENDPOINT\");\n+        protected static final String CONNECTIONSTRING = Configuration.getGlobalConfiguration()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjcxMA==", "bodyText": "Let's talk about this a bit more. I wonder if somehow sha256HMAC instantiation and init should be moved to a builder mechanism to avoid throwing exceptions or maybe the first time that we call appendAuthorizationHeaders we set it up. @srnagar what do you think?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499102710", "createdAt": "2020-10-03T01:21:00Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationClientCredential.java", "diffHunk": "@@ -53,14 +53,20 @@\n     /**\n      * Requires resource access key to create the credential\n      * @param accessKey resource access key as provided by Azure in Base64 format\n-     * @throws NoSuchAlgorithmException if HmacSHA256 is not available\n-     * @throws InvalidKeyException if accessKey provided is not valid\n      */\n-    public CommunicationClientCredential(String accessKey) throws NoSuchAlgorithmException, InvalidKeyException {\n+    public CommunicationClientCredential(String accessKey) {\n         Objects.requireNonNull(accessKey, \"'accessKey' cannot be null\");\n         byte[] key = Base64.getDecoder().decode(accessKey);\n-        sha256HMAC = Mac.getInstance(\"HmacSHA256\");\n-        sha256HMAC.init(new SecretKeySpec(key, \"HmacSHA256\"));\n+        Mac sha256HMAC = null;\n+        try {\n+            sha256HMAC = Mac.getInstance(\"HmacSHA256\");\n+            sha256HMAC.init(new SecretKeySpec(key, \"HmacSHA256\"));\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjg4Mw==", "bodyText": "Does not azure core already have an implementation of this that we can use?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499102883", "createdAt": "2020-10-03T01:23:19Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/ConnectionString.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.common;\n+\n+import java.util.Objects;\n+\n+public class ConnectionString {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMjk0MQ==", "bodyText": "CommunicationIdentityClientBuilder \ud83d\udc49\ud83c\udffb SmsClientBuilder", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499102941", "createdAt": "2020-10-03T01:23:50Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-sms/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.2 (Unreleased)\n \n+### Added", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzA5NA==", "bodyText": "Do you mind replacing this fake url with a sanitized one?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499103094", "createdAt": "2020-10-03T01:25:46Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-sms/src/test/java/com/azure/communication/sms/SmsLiveTestBase.java", "diffHunk": "@@ -35,25 +30,34 @@\n     static final String ENDPOINT = Configuration.getGlobalConfiguration()\n         .get(\"SMS_SERVICE_ENDPOINT\", \"https://playback.sms.azurefd.net\");\n \n-    CommunicationClientCredential credential;\n-\n-    public SmsLiveTestBase() {\n-        try {\n-            credential = new CommunicationClientCredential(ACCESSKEY);\n-        } catch (InvalidKeyException e) {\n-            credential = null;\n-            fail(e.getMessage());\n-        } catch (NoSuchAlgorithmException e) {\n-            credential = null;\n-            fail(e.getMessage());\n-        }\n-    }\n+    static final String CONNECTIONSTRING = Configuration.getGlobalConfiguration()\n+        .get(\"COMMUNICATION_CONNECTION_STRING\", \"endpoint=https://playback.sms.azurefd.net/;accesskey=VGhpcyBpcyBhIHRlc3Q=\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzQxNg==", "bodyText": "CONNECTION_STRING", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r499103416", "createdAt": "2020-10-03T01:29:41Z", "author": {"login": "RezaJooyandeh"}, "path": "sdk/communication/azure-communication-sms/src/test/java/com/azure/communication/sms/SmsLiveTestBase.java", "diffHunk": "@@ -35,25 +30,34 @@\n     static final String ENDPOINT = Configuration.getGlobalConfiguration()\n         .get(\"SMS_SERVICE_ENDPOINT\", \"https://playback.sms.azurefd.net\");\n \n-    CommunicationClientCredential credential;\n-\n-    public SmsLiveTestBase() {\n-        try {\n-            credential = new CommunicationClientCredential(ACCESSKEY);\n-        } catch (InvalidKeyException e) {\n-            credential = null;\n-            fail(e.getMessage());\n-        } catch (NoSuchAlgorithmException e) {\n-            credential = null;\n-            fail(e.getMessage());\n-        }\n-    }\n+    static final String CONNECTIONSTRING = Configuration.getGlobalConfiguration()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9579a1dc3de8e96726d5494e4ecf5858013ac15"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0802d98a3fbf9f683d9193cbed0611cfcfa54343", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0802d98a3fbf9f683d9193cbed0611cfcfa54343", "committedDate": "2020-10-03T01:38:04Z", "message": "Fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ab339a008a69bdf384c3615f638bd599c085bab", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ab339a008a69bdf384c3615f638bd599c085bab", "committedDate": "2020-10-03T02:07:51Z", "message": "Fix build and addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e2bc03a57ebfd580171358c44b22200db1dc8b6", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e2bc03a57ebfd580171358c44b22200db1dc8b6", "committedDate": "2020-10-03T04:07:40Z", "message": "Fix build and addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd95f897dda6ba4b72d3c94ce1eac84f8fd4e9f2", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cd95f897dda6ba4b72d3c94ce1eac84f8fd4e9f2", "committedDate": "2020-10-05T19:05:23Z", "message": "Throw unchecked exceptions in communicationClientCredential"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10d935b0b6eacbf35af1a1b2a209c91e66da1fe0", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/10d935b0b6eacbf35af1a1b2a209c91e66da1fe0", "committedDate": "2020-10-05T21:10:40Z", "message": "Cleanup outstanding items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1816ad3ebd5dc312c4b7d080456a81b60d90551f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1816ad3ebd5dc312c4b7d080456a81b60d90551f", "committedDate": "2020-10-05T21:27:17Z", "message": "Cleaning up outstanding small issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2002fac8f82d4b312b30038b9ce6fc894389b633", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2002fac8f82d4b312b30038b9ce6fc894389b633", "committedDate": "2020-10-05T21:28:06Z", "message": "Merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce07dc204b19c5ac4e9f2063533775eee7bbbbfc", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce07dc204b19c5ac4e9f2063533775eee7bbbbfc", "committedDate": "2020-10-05T22:03:45Z", "message": "Fix redacted response files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51e6aae0a3a9ea3374559e72dd6a9554267d37a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f51e6aae0a3a9ea3374559e72dd6a9554267d37a", "committedDate": "2020-10-05T23:34:18Z", "message": "Updating changelogs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjY4ODk5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#pullrequestreview-503268899", "createdAt": "2020-10-06T18:57:32Z", "commit": {"oid": "f51e6aae0a3a9ea3374559e72dd6a9554267d37a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo1NzozMlrOHdVwrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo1ODoyMlrOHdVyqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNzI3OQ==", "bodyText": "Move the annotation to new line above the test case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r500527279", "createdAt": "2020-10-06T18:57:32Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityAsyncTests.java", "diffHunk": "@@ -29,6 +29,16 @@ protected void beforeTest() {\n         asyncClient = getCommunicationIdentityClient().buildAsyncClient();\n     }\n \n+    @Test void createAsyncIdentityClientUsingConnectionString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f51e6aae0a3a9ea3374559e72dd6a9554267d37a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNzc4NA==", "bodyText": "nit: Use underscores to split multiple words - MOCK_ACCESS_KEY, MOCK_CONNECTION_STRING", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r500527784", "createdAt": "2020-10-06T18:58:22Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityBuilderTests.java", "diffHunk": "@@ -24,7 +22,8 @@\n \n public class CommunicationIdentityBuilderTests {\n     static final String MOCKURL = \"https://chitchat.dev.communication.azure.net/\";\n-    static final String MOCKTOKEN = \"HuZVBcRKEA+TW30GBzdsmRyqitKk1dHj2OBtTsgRe2mzlxWUHGh06CdOVJwp07JKuss1k+/YeXL4dYXPF5El4Q==\";\n+    static final String MOCKACCESSKEY = \"HuZVBcRKEA+TW30GBzdsmRyqitKk1dHj2OBtTsgRe2mzlxWUHGh06CdOVJwp07JKuss1k+/YeXL4dYXPF5El4Q==\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f51e6aae0a3a9ea3374559e72dd6a9554267d37a"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bc072382d081b07941295ea298a59b1b59d80a34", "committedDate": "2020-10-06T19:38:17Z", "message": "Addressing final review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzAwNDky", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#pullrequestreview-503300492", "createdAt": "2020-10-06T19:42:32Z", "commit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjU4OTkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#pullrequestreview-509658991", "createdAt": "2020-10-15T18:29:56Z", "commit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODoyOTo1NlrOHiU4TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODozODo0NlrOHiVLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1NTcyNA==", "bodyText": "Make this class final and also add @Immutable annotation. Also, the user doesn't directly create this type, so, it can be moved to implementation package.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r505755724", "createdAt": "2020-10-15T18:29:56Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/ConnectionString.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.common;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Parse and store Connection String values\n+ */\n+public class ConnectionString {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc1OTc1OQ==", "bodyText": "TestBase class has a method called getHttpClients() which returns a list of all available HTTP clients. You can use that method instead. That will allow you to test your service with multiple HTTP clients.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r505759759", "createdAt": "2020-10-15T18:37:10Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -19,41 +15,54 @@\n \n public class CommunicationIdentityClientTestBase extends TestBase {\n     protected static final TestMode TEST_MODE = initializeTestMode();\n-\n     protected static final String ENDPOINT = Configuration.getGlobalConfiguration()\n-        .get(\"ADMINISTRATION_SERVICE_ENDPOINT\", \"https://yourresource.communication.azure.com\");\n+        .get(\"ADMINISTRATION_SERVICE_ENDPOINT\", \"https://REDACTED.communication.azure.com\");\n+\n+    protected static final String ACCESSKEYRAW = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\";\n+    protected static final String ACCESSKEYENCODED = Base64.getEncoder().encodeToString(ACCESSKEYRAW.getBytes());\n+    protected static final String ACCESSKEY = Configuration.getGlobalConfiguration()\n+        .get(\"ADMINISTRATION_SERVICE_ACCESS_TOKEN\", ACCESSKEYENCODED);\n \n-    protected static final String MOCKACCESSTOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\";\n-    protected static final String MOCKACCESSTOKENENCODED = Base64.getEncoder().encodeToString(MOCKACCESSTOKEN.getBytes());\n-    protected static final String ACCESSTOKEN = Configuration.getGlobalConfiguration()\n-        .get(\"ADMINISTRATION_SERVICE_ACCESS_TOKEN\", MOCKACCESSTOKENENCODED);\n+    protected static final String CONNECTION_STRING = Configuration.getGlobalConfiguration()\n+        .get(\"COMMUNICATION_CONNECTION_STRING\", \"endpoint=https://REDACTED.communication.azure.com/;accesskey=\" + ACCESSKEYENCODED);\n     \n     protected CommunicationIdentityClientBuilder getCommunicationIdentityClient() {\n-        try {\n-            CommunicationClientCredential credential = new CommunicationClientCredential(ACCESSTOKEN);\n-            CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n-            builder.endpoint(ENDPOINT)\n-                .credential(credential);\n-    \n-            if (interceptorManager.isPlaybackMode()) {\n-                builder.httpClient(interceptorManager.getPlaybackClient());\n-                return builder;\n-            } else {\n-                HttpClient client = new NettyAsyncHttpClientBuilder().build();\n-                builder.httpClient(client);\n-            }\n-    \n-            if (!interceptorManager.isLiveMode()) {\n-                builder.addPolicy(interceptorManager.getRecordPolicy());\n-            }\n-    \n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder.endpoint(ENDPOINT)\n+            .accessKey(ACCESSKEY);\n+\n+        if (interceptorManager.isPlaybackMode()) {\n+            builder.httpClient(interceptorManager.getPlaybackClient());\n+            return builder;\n+        } else {\n+            HttpClient client = new NettyAsyncHttpClientBuilder().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2MDU3Mg==", "bodyText": "If the user doesn't have to create the CommunicationClientCredential instance directly, can that type be moved to implementation package?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15917#discussion_r505760572", "createdAt": "2020-10-15T18:38:46Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -70,12 +71,29 @@ public CommunicationIdentityClientBuilder pipeline(HttpPipeline pipeline) {\n     /**\n      * Set credential to use\n      *\n-     * @param credential credential for signing, overridden by the\n-     * pipeline field.\n+     * @param accessKey access key for initalizing CommunicationClientCredential\n      * @return CommunicationIdentityClientBuilder\n      */\n-    public CommunicationIdentityClientBuilder credential(CommunicationClientCredential credential) {\n-        this.credential = Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+    public CommunicationIdentityClientBuilder accessKey(String accessKey) {\n+        Objects.requireNonNull(accessKey, \"'accessKey' cannot be null.\");\n+        this.credential = new CommunicationClientCredential(accessKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc072382d081b07941295ea298a59b1b59d80a34"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3197, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}