{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTI0NjIx", "number": 12268, "title": "Add logging to identity credentials", "bodyText": "Sample logging output:\n[main] ERROR com.azure.identity.EnvironmentCredential - Azure Identity => ERROR in EnvironmentCredential: Missing environment variable AZURE_CLIENT_ID\n[main] ERROR com.azure.identity.implementation.IntelliJCacheAccessor - IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.\n\nWhat is the super secret secret?\n\n\n[main] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Retrieving secret - the-secret\n[reactor-http-nio-1] ERROR com.azure.identity.EnvironmentCredential - Cannot create any credentials with the current environment variables\n[reactor-http-nio-1] INFO com.azure.identity.DefaultAzureCredential - Azure Identity => Attempted credential EnvironmentCredential is unavailable.\n[reactor-http-nio-1] INFO com.azure.identity.ManagedIdentityCredential - Azure Identity => Managed Identity environment: IMDS\n[reactor-http-nio-1] ERROR com.azure.identity.implementation.IdentityClient - Connection to IMDS endpoint cannot be established. connect timed out\n[reactor-http-nio-1] ERROR com.azure.identity.ManagedIdentityCredential - Azure Identity => ERROR in getToken() call for ManagedIdentityCredential: Connection to IMDS endpoint cannot be established. connect timed out\n[reactor-http-nio-1] INFO com.azure.identity.DefaultAzureCredential - Azure Identity => Attempted credential ManagedIdentityCredential is unavailable.\n[ForkJoinPool.commonPool-worker-19] ERROR com.azure.identity.SharedTokenCacheCredential - Azure Identity => ERROR in getToken() call for SharedTokenCacheCredential: SharedTokenCacheCredential authentication unavailable. No accounts were found in the cache.\n[ForkJoinPool.commonPool-worker-19] INFO com.azure.identity.DefaultAzureCredential - Azure Identity => Attempted credential SharedTokenCacheCredential is unavailable.\n[ForkJoinPool.commonPool-worker-19] ERROR com.azure.identity.implementation.IntelliJCacheAccessor - IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.\n[ForkJoinPool.commonPool-worker-19] ERROR com.azure.identity.IntelliJCredential - Azure Identity => ERROR in getToken() call for IntelliJCredential: IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.\n[ForkJoinPool.commonPool-worker-19] INFO com.azure.identity.DefaultAzureCredential - Azure Identity => Attempted credential IntelliJCredential is unavailable.\n[ForkJoinPool.commonPool-worker-5] INFO com.azure.identity.VisualStudioCodeCredential - Azure Identity => getToken() result for VisualStudioCodeCredential: SUCCESS\n[ForkJoinPool.commonPool-worker-5] INFO com.azure.identity.DefaultAzureCredential - Azure Identity => Attempted credential VisualStudioCodeCredential returns a token\n[reactor-http-nio-3] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Retrieved secret - the-secret\nSecret was found: Yet another secret", "createdAt": "2020-06-16T23:52:33Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268", "merged": true, "mergeCommit": {"oid": "594723f47128e468fecb2695386adea17e309eb2"}, "closed": true, "closedAt": "2020-07-01T20:30:22Z", "author": {"login": "jianghaolu"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr-LpuAH2gAyNDM1NTI0NjIxOjkzZDBkYWVhOTg1MzJlZjhmMDQ3NzZjYmQxYWQyN2FkZDc1MzkxZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwvUHAgFqTQ0MTEzNjgzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93d0daea98532ef8f04776cbd1ad27add75391d1", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/93d0daea98532ef8f04776cbd1ad27add75391d1", "committedDate": "2020-06-16T23:51:40Z", "message": "Add logging to identity credentials"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8625726dac132556ac80daaed63dae72f66d4ef", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b8625726dac132556ac80daaed63dae72f66d4ef", "committedDate": "2020-06-17T19:19:18Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTI5Nzky", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-436129792", "createdAt": "2020-06-23T20:28:06Z", "commit": {"oid": "b8625726dac132556ac80daaed63dae72f66d4ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyODowN1rOGn5Wnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyODowN1rOGn5Wnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NzMyNw==", "bodyText": "Will it be clear where the causes are? What identifies the causes if they want to find them quickly in the log?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r444487327", "createdAt": "2020-06-23T20:28:07Z", "author": {"login": "catalinaperalta"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -38,27 +40,31 @@\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-                   .flatMap(p -> p.getToken(request).onErrorResume(CredentialUnavailableException.class, t -> {\n-                       exceptions.add(t);\n-                       return Mono.empty();\n-                   }), 1)\n-                   .next()\n-                   .switchIfEmpty(Mono.defer(() -> {\n+            .flatMap(p -> p.getToken(request)\n+                .doOnNext(t -> logger.info(\"Azure Identity => Attempted credential {} returns a token\",\n+                    p.getClass().getSimpleName()))\n+                .onErrorResume(CredentialUnavailableException.class, t -> {\n+                    exceptions.add(t);\n+                    logger.info(\"Azure Identity => Attempted credential {} is unavailable.\",\n+                        p.getClass().getSimpleName());\n+                    return Mono.empty();\n+                }), 1)\n+            .next()\n+            .switchIfEmpty(Mono.defer(() -> {\n+                StringBuilder message = new StringBuilder(\"Tried \"\n+                    + credentials.stream().map(c -> c.getClass().getSimpleName())\n+                    .collect(Collectors.joining(\", \"))\n+                    + \" but failed to acquire a token for any of them. Please verify the\"\n+                    + \" environment for the credentials\"\n+                    + \" and see more details in the causes below.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8625726dac132556ac80daaed63dae72f66d4ef"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/26275b69cbd1daa0624f616f4b2c8a2c2667a879", "committedDate": "2020-06-24T22:53:22Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MzM0NTE5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-437334519", "createdAt": "2020-06-25T09:43:39Z", "commit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwOTo0MzozOVrOGozU1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo0ODowOVrOGpLQHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQzNzE0MQ==", "bodyText": "Can use if ( ! (t instanceof CredentialUnavailableException) )?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r445437141", "createdAt": "2020-06-25T09:43:39Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -39,31 +42,29 @@\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-            .flatMap(p -> p.getToken(request)\n-                .doOnNext(t -> logger.info(\"Azure Identity => Attempted credential {} returns a token\",\n-                    p.getClass().getSimpleName()))\n-                .onErrorResume(CredentialUnavailableException.class, t -> {\n-                    exceptions.add(t);\n-                    logger.info(\"Azure Identity => Attempted credential {} is unavailable.\",\n-                        p.getClass().getSimpleName());\n-                    return Mono.empty();\n-                }), 1)\n-            .next()\n-            .switchIfEmpty(Mono.defer(() -> {\n-                StringBuilder message = new StringBuilder(\"Tried \"\n-                    + credentials.stream().map(c -> c.getClass().getSimpleName())\n-                    .collect(Collectors.joining(\", \"))\n-                    + \" but failed to acquire a token for any of them. Please verify the\"\n-                    + \" environment for the credentials\"\n-                    + \" and see more details in the causes below.\");\n-\n-                // Chain Exceptions.\n-                CredentialUnavailableException last = exceptions.get(exceptions.size() - 1);\n-                for (int z = exceptions.size() - 2; z >= 0; z--) {\n-                    CredentialUnavailableException current = exceptions.get(z);\n-                    last = new CredentialUnavailableException(current.getMessage(), last);\n-                }\n-                return Mono.error(new CredentialUnavailableException(message.toString(), last));\n-            }));\n+               .flatMap(p -> p.getToken(request).onErrorResume(Exception.class, t -> {\n+                   if (!t.getClass().getSimpleName().equals(\"CredentialUnavailableException\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNDk5MA==", "bodyText": "Should this be called logTokenSuccess instead? Similarly, logTokenError() for the other method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r445824990", "createdAt": "2020-06-25T20:39:50Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/LoggingUtil.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity.implementation.util;\n+\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+/**\n+ * Utilities to handle logging for credentials.\n+ */\n+public final class LoggingUtil {\n+    /**\n+     * Log a success message for a getToken() call.\n+     * @param credential the credential class\n+     * @param logger the logger to output the log message\n+     * @param context the context of the getToken() request\n+     */\n+    public static void getTokenSuccess(Class<?> credential, ClientLogger logger, TokenRequestContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNjQ3Mw==", "bodyText": "It might be more useful to have the context on the error log than on success log. Logging the requested scope when an error occurs will help troubleshooting issues (unless the Throwable is guaranteed to have this scope information).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r445826473", "createdAt": "2020-06-25T20:42:52Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/LoggingUtil.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity.implementation.util;\n+\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+/**\n+ * Utilities to handle logging for credentials.\n+ */\n+public final class LoggingUtil {\n+    /**\n+     * Log a success message for a getToken() call.\n+     * @param credential the credential class\n+     * @param logger the logger to output the log message\n+     * @param context the context of the getToken() request\n+     */\n+    public static void getTokenSuccess(Class<?> credential, ClientLogger logger, TokenRequestContext context) {\n+        logger.info(\"Azure Identity => getToken() result for {}: SUCCESS\", credential.getSimpleName());\n+        logger.verbose(\"Azure Identity => Scopes: [{}]\", String.join(\", \", context.getScopes()));\n+    }\n+\n+    /**\n+     * Log an error message for a getToken() call.\n+     * @param credential the credential class\n+     * @param logger the logger to output the log message\n+     * @param error the error thrown during getToken()\n+     */\n+    public static void getTokenError(Class<?> credential, ClientLogger logger, Throwable error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyOTE1MQ==", "bodyText": "The logger should be created with the classname and the log statement will have with the name of the class. Do we need to print the classname again? Can drop the Class<T> credential arg if it's not required.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r445829151", "createdAt": "2020-06-25T20:48:09Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/LoggingUtil.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity.implementation.util;\n+\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+/**\n+ * Utilities to handle logging for credentials.\n+ */\n+public final class LoggingUtil {\n+    /**\n+     * Log a success message for a getToken() call.\n+     * @param credential the credential class\n+     * @param logger the logger to output the log message\n+     * @param context the context of the getToken() request\n+     */\n+    public static void getTokenSuccess(Class<?> credential, ClientLogger logger, TokenRequestContext context) {\n+        logger.info(\"Azure Identity => getToken() result for {}: SUCCESS\", credential.getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26275b69cbd1daa0624f616f4b2c8a2c2667a879"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "469a4cdcd9e04791c42eaf906f2f4a1a3c3fc113", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/469a4cdcd9e04791c42eaf906f2f4a1a3c3fc113", "committedDate": "2020-06-25T21:35:42Z", "message": "Clean up logging util"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2650c95e6d21eb060626924020e756bad645c617", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2650c95e6d21eb060626924020e756bad645c617", "committedDate": "2020-06-25T21:36:36Z", "message": "Javadoc for TokenRequestContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c9f7f5bb657de85fbaaedaff82f4d12406ce271", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0c9f7f5bb657de85fbaaedaff82f4d12406ce271", "committedDate": "2020-06-25T21:42:50Z", "message": "Apply new signature everywhere"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3ODgxMDYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-437881061", "createdAt": "2020-06-25T21:44:59Z", "commit": {"oid": "0c9f7f5bb657de85fbaaedaff82f4d12406ce271"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2d9785dbcd618c73f480e9e4362838cc7d7180", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5a2d9785dbcd618c73f480e9e4362838cc7d7180", "committedDate": "2020-06-26T19:59:24Z", "message": "Add logs for available environment variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9bed19ee8b0c693c9de8a2bf22d370f15a3e0b0", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9bed19ee8b0c693c9de8a2bf22d370f15a3e0b0", "committedDate": "2020-06-30T19:32:29Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/56bbc569044c4f95160aaf497e57e80926bea6d0", "committedDate": "2020-06-30T19:39:10Z", "message": "Merge branch 'logging' of github.com:jianghaolu/azure-sdk-for-java into logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzMyODM1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-440332835", "createdAt": "2020-06-30T19:46:06Z", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0NjowNlrOGrL6oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0NjowNlrOGrL6oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzNzE4NQ==", "bodyText": "Just a question about this, will there be information in the log about the environment variables that need to be set? (Like the error explaining the reason the environment credential failed?) Because this seems to me that is does not include that information, but I'm not sure if it is included later on.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r447937185", "createdAt": "2020-06-30T19:46:06Z", "author": {"login": "catalinaperalta"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -56,19 +59,29 @@\n         String certPath = configuration.get(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH);\n         String username = configuration.get(Configuration.PROPERTY_AZURE_USERNAME);\n         String password = configuration.get(Configuration.PROPERTY_AZURE_PASSWORD);\n+        logAvailableEnvironmentVariables(clientId, tenantId, clientSecret, certPath, username, password);\n         if (verifyNotNull(clientId)) {\n             if (verifyNotNull(tenantId, clientSecret)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking ClientSecretCredential\");\n                 targetCredential = new ClientSecretCredential(tenantId, clientId, clientSecret, identityClientOptions);\n             } else if (verifyNotNull(tenantId, certPath)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking ClientCertificateCredential\");\n                 targetCredential = new ClientCertificateCredential(tenantId, clientId, certPath,\n                         null, identityClientOptions);\n             } else if (verifyNotNull(username, password)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking UsernamePasswordCredential\");\n                 targetCredential = new UsernamePasswordCredential(clientId,\n                         tenantId,\n                         username,\n                         password,\n                         identityClientOptions);\n+            } else {\n+                logger.error(\"Azure Identity => ERROR in EnvironmentCredential: Not enough environment variables \"\n+                    + \" to determine the environment.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzMzMTU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-440333155", "createdAt": "2020-06-30T19:46:36Z", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0NjozNlrOGrL7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0NjozNlrOGrL7oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzNzQ0MQ==", "bodyText": "do we want to replace this with doOnSuccess ?\nand also add doOnRequest ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r447937441", "createdAt": "2020-06-30T19:46:36Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/AuthorizationCodeCredential.java", "diffHunk": "@@ -63,7 +66,9 @@\n                    cachedToken.set(new MsalAuthenticationAccount(\n                                 new AuthenticationRecord(msalToken.getAuthenticationResult(),\n                                         identityClient.getTenantId())));\n-                   return  msalToken;\n-               });\n+                   return (AccessToken) msalToken;\n+               })\n+            .doOnNext(token -> LoggingUtil.logTokenSuccess(logger, request))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzM0Njcx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-440334671", "createdAt": "2020-06-30T19:48:56Z", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0ODo1NlrOGrMAUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0ODo1NlrOGrMAUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzODY0MQ==", "bodyText": "Just an FYI about this, I logged this one for every credential, not just the environment credential, because environment variables can affect other credentials as well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r447938641", "createdAt": "2020-06-30T19:48:56Z", "author": {"login": "catalinaperalta"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -92,4 +105,28 @@ private boolean verifyNotNull(String... configs) {\n         }\n         return true;\n     }\n+\n+    private void logAvailableEnvironmentVariables(String clientId, String tenantId, String clientSecret,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzM3MTA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-440337108", "createdAt": "2020-06-30T19:52:37Z", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo1MjozN1rOGrMHtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo1MjozN1rOGrMHtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0MDUzMw==", "bodyText": "Should this be \"Required Environment variables not found to determine an authentication technique/credential?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r447940533", "createdAt": "2020-06-30T19:52:37Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -56,19 +59,29 @@\n         String certPath = configuration.get(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH);\n         String username = configuration.get(Configuration.PROPERTY_AZURE_USERNAME);\n         String password = configuration.get(Configuration.PROPERTY_AZURE_PASSWORD);\n+        logAvailableEnvironmentVariables(clientId, tenantId, clientSecret, certPath, username, password);\n         if (verifyNotNull(clientId)) {\n             if (verifyNotNull(tenantId, clientSecret)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking ClientSecretCredential\");\n                 targetCredential = new ClientSecretCredential(tenantId, clientId, clientSecret, identityClientOptions);\n             } else if (verifyNotNull(tenantId, certPath)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking ClientCertificateCredential\");\n                 targetCredential = new ClientCertificateCredential(tenantId, clientId, certPath,\n                         null, identityClientOptions);\n             } else if (verifyNotNull(username, password)) {\n+                logger.info(\"Azure Identity => EnvironmentCredential invoking UsernamePasswordCredential\");\n                 targetCredential = new UsernamePasswordCredential(clientId,\n                         tenantId,\n                         username,\n                         password,\n                         identityClientOptions);\n+            } else {\n+                logger.error(\"Azure Identity => ERROR in EnvironmentCredential: Not enough environment variables \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDAyMTc1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-440402175", "createdAt": "2020-06-30T21:33:21Z", "commit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTozMzoyMlrOGrPRPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTozMzoyMlrOGrPRPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5MjEyNQ==", "bodyText": "This can be misleading in cases when running on non-Azure hosted machines.\nAs we default to VM credential if MSI endpoint is not set.\nShould we check if IMDS available before logging the environment ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r447992125", "createdAt": "2020-06-30T21:33:22Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -53,8 +56,16 @@ public String getClientId() {\n \n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n-        return (appServiceMSICredential != null\n-            ? appServiceMSICredential.authenticate(request)\n-            : virtualMachineMSICredential.authenticate(request));\n+        Mono<AccessToken> accessTokenMono;\n+        if (appServiceMSICredential != null) {\n+            accessTokenMono = appServiceMSICredential.authenticate(request);\n+            logger.info(\"Azure Identity => Managed Identity environment: MSI_ENDPOINT\");\n+        } else {\n+            accessTokenMono = virtualMachineMSICredential.authenticate(request);\n+            logger.info(\"Azure Identity => Managed Identity environment: IMDS\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bbc569044c4f95160aaf497e57e80926bea6d0"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acee30552e639fd52554dde808c0eb96d7373ec2", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/acee30552e639fd52554dde808c0eb96d7373ec2", "committedDate": "2020-07-01T06:57:29Z", "message": "Improve logging messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0df11b8f1f89d93e8e855780032f5c6bb2922739", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0df11b8f1f89d93e8e855780032f5c6bb2922739", "committedDate": "2020-07-01T07:05:24Z", "message": "Clean up coding style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTA4MDQw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-441108040", "createdAt": "2020-07-01T18:34:37Z", "commit": {"oid": "0df11b8f1f89d93e8e855780032f5c6bb2922739"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODozNDozN1rOGrxGtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODozNDozN1rOGrxGtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU0NjQ4Ng==", "bodyText": "should this be doOnSuccess too ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#discussion_r448546486", "createdAt": "2020-07-01T18:34:37Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -40,27 +41,32 @@\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-                   .flatMap(p -> p.getToken(request).onErrorResume(Exception.class, t -> {\n-                       if (!t.getClass().getSimpleName().equals(\"CredentialUnavailableException\")) {\n-                           return Mono.error(new ClientAuthenticationException(\n+            .flatMap(p -> p.getToken(request)\n+                .doOnNext(t -> logger.info(\"Azure Identity => Attempted credential {} returns a token\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0df11b8f1f89d93e8e855780032f5c6bb2922739"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTA4MTkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-441108190", "createdAt": "2020-07-01T18:34:51Z", "commit": {"oid": "0df11b8f1f89d93e8e855780032f5c6bb2922739"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b14f4c7eb6372d41bb32d05387b1027724eae2", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/00b14f4c7eb6372d41bb32d05387b1027724eae2", "committedDate": "2020-07-01T18:52:12Z", "message": "Change success logging back to doOnNext()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54fea188564946a559284bdb1118b2d5a027681a", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/54fea188564946a559284bdb1118b2d5a027681a", "committedDate": "2020-07-01T19:01:14Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be97ef5f7f1337114f058ed34fcb4817b6085f5f", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/be97ef5f7f1337114f058ed34fcb4817b6085f5f", "committedDate": "2020-07-01T19:19:49Z", "message": "Checkstyle checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTM2ODMw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12268#pullrequestreview-441136830", "createdAt": "2020-07-01T19:21:57Z", "commit": {"oid": "be97ef5f7f1337114f058ed34fcb4817b6085f5f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3055, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}