{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjE5NDg2", "number": 11809, "title": "mgmt, fix Retry-After in LRO is not respected", "bodyText": "However it appears that only the Retry-After header of the 1st response is used by PollerFlux.\nhttps://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollerFlux.java#L221", "createdAt": "2020-06-05T04:49:39Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809", "merged": true, "mergeCommit": {"oid": "6d80cdf39babc7ef9d0173179e101e7d6035f920"}, "closed": true, "closedAt": "2020-06-06T04:28:50Z", "author": {"login": "weidongxu-microsoft"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoKpQbAH2gAyNDI4MjE5NDg2OjlmMmYzNWFiZDA3NGQwNTUxYWE4MjVkMDY2YWZmMGQ0ZWQ3OTYyNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoODePgFqTQyNTA4MzA5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f2f35abd074d0551aa825d066aff0d4ed796259", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f2f35abd074d0551aa825d066aff0d4ed796259", "committedDate": "2020-06-05T04:07:10Z", "message": "add test for retry-after header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2bb43d7436ca4cef08708032b2577ca7f1646bc", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f2bb43d7436ca4cef08708032b2577ca7f1646bc", "committedDate": "2020-06-05T04:38:49Z", "message": "fix that retry-after is ignored"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd9e512f875ffa96c4ea0b7d43c6fb7b2cf00c0", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3fd9e512f875ffa96c4ea0b7d43c6fb7b2cf00c0", "committedDate": "2020-06-05T04:43:09Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838bd77906145cd6f59f53fd6a8449439dc4d960", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/838bd77906145cd6f59f53fd6a8449439dc4d960", "committedDate": "2020-06-05T04:47:03Z", "message": "Merge branch 'master' into mgmt_core_retry-after"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTkzOTk0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#pullrequestreview-424993994", "createdAt": "2020-06-05T04:50:59Z", "commit": {"oid": "838bd77906145cd6f59f53fd6a8449439dc4d960"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDo1MDo1OVrOGfgURw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDo1MDo1OVrOGfgURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY4ODUxOQ==", "bodyText": "In test case, set Retry-After header to different value of default poll interval.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#discussion_r435688519", "createdAt": "2020-06-05T04:50:59Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/core/azure-core-management/src/test/java/com/azure/core/management/implementation/polling/LROPollerTests.java", "diffHunk": "@@ -324,6 +274,102 @@ public String getName() {\n         }\n     }\n \n+    @Test\n+    public void lroRetryAfter() {\n+        ServerConfigure configure = new ServerConfigure();\n+        Duration expectedPollingDuration = Duration.ofSeconds(3);\n+        configure.pollingCountTillSuccess = 3;\n+        configure.additionalHeaders = new HttpHeaders(new HttpHeader(\"Retry-After\", \"1\"));  // 1 second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "838bd77906145cd6f59f53fd6a8449439dc4d960"}, "originalPosition": 168}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4afd944de07b91c1f83944722064747d2979a59", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f4afd944de07b91c1f83944722064747d2979a59", "committedDate": "2020-06-05T05:01:08Z", "message": "add some log output"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDIxODE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#pullrequestreview-425021815", "createdAt": "2020-06-05T06:16:54Z", "commit": {"oid": "f4afd944de07b91c1f83944722064747d2979a59"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxNjo1NVrOGfhrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxNjo1NVrOGfhrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxMDc2NA==", "bodyText": "If we just check polling duration larger than expected. I think we could make Retry-After larger than the original one.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#discussion_r435710764", "createdAt": "2020-06-05T06:16:55Z", "author": {"login": "ChenTanyi"}, "path": "sdk/core/azure-core-management/src/test/java/com/azure/core/management/implementation/polling/LROPollerTests.java", "diffHunk": "@@ -324,6 +276,107 @@ public String getName() {\n         }\n     }\n \n+    @Test\n+    public void lroRetryAfter() {\n+        ServerConfigure configure = new ServerConfigure();\n+        Duration expectedPollingDuration = Duration.ofSeconds(3);\n+        configure.pollingCountTillSuccess = 3;\n+        configure.additionalHeaders = new HttpHeaders(new HttpHeader(\"Retry-After\", \"1\"));  // 1 second\n+        WireMockServer lroServer = startServer(configure);\n+        lroServer.start();\n+\n+        try {\n+            final ProvisioningStateLroServiceClient client = RestProxy.create(ProvisioningStateLroServiceClient.class,\n+                createHttpPipeline(lroServer.port()),\n+                SERIALIZER);\n+\n+            PollerFlux<PollResult<FooWithProvisioningState>, FooWithProvisioningState> lroFlux\n+                = PollerFactory.create(SERIALIZER,\n+                new HttpPipelineBuilder().build(),\n+                FooWithProvisioningState.class,\n+                FooWithProvisioningState.class,\n+                POLLING_DURATION,\n+                newLroInitFunction(client, FooWithProvisioningState.class));\n+\n+            long nanoTime = System.nanoTime();\n+\n+            FooWithProvisioningState result = lroFlux\n+                .doOnNext(response -> {\n+                    System.out.println(String.format(\"[%s] status %s\",\n+                        OffsetDateTime.now().toString(), response.getStatus().toString()));\n+                }).blockLast()\n+                .getFinalResult().block();\n+            Assertions.assertNotNull(result);\n+\n+            Duration pollingDuration = Duration.ofNanos(System.nanoTime() - nanoTime);\n+            Assertions.assertTrue(pollingDuration.compareTo(expectedPollingDuration) > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4afd944de07b91c1f83944722064747d2979a59"}, "originalPosition": 201}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4696539504c8162904766a5b96f0977478df691", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4696539504c8162904766a5b96f0977478df691", "committedDate": "2020-06-05T07:37:29Z", "message": "more log output in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ef54296b742072bd7cd5f98b9da9006bd133da7", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1ef54296b742072bd7cd5f98b9da9006bd133da7", "committedDate": "2020-06-05T08:04:22Z", "message": "fix bug that polling result is one slot off"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDgzMDkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#pullrequestreview-425083091", "createdAt": "2020-06-05T08:05:30Z", "commit": {"oid": "1ef54296b742072bd7cd5f98b9da9006bd133da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODowNTozMVrOGfkeuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODowNTozMVrOGfkeuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NjczMQ==", "bodyText": "Here is the bug. Previously, after doSinglePoll, the previous pollResponse is returned. Should use the latest one after doSinglePoll.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11809#discussion_r435756731", "createdAt": "2020-06-05T08:05:31Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/core/azure-core-management/src/main/java/com/azure/core/management/implementation/polling/PollOperation.java", "diffHunk": "@@ -45,35 +46,14 @@\n         return context -> {\n             PollingState pollingState = PollingState.from(serializerAdapter, context);\n             if (pollingState.getOperationStatus().isComplete()) {\n-                if (pollingState.getOperationStatus() == LongRunningOperationStatus.FAILED\n-                    || pollingState.getOperationStatus() == LRO_CANCELLED) {\n-                    // Failed|Cancelled\n-                    Error lroInitError = pollingState.getSynchronouslyFailedLroError();\n-                    if (lroInitError != null) {\n-                        return errorPollResponseMono(pollingState.getOperationStatus(), lroInitError);\n-                    }\n-                    Error pollError = pollingState.getPollError();\n-                    if (pollError != null) {\n-                        return errorPollResponseMono(pollingState.getOperationStatus(), pollError);\n-                    }\n-                    throw new IllegalStateException(\"Either LroError or PollError must\"\n-                        + \"be set when OperationStatus is in Failed|Cancelled State.\");\n-                } else {\n-                    // Succeeded\n-                    return pollResponseMono(serializerAdapter,\n-                        pollingState.getOperationStatus(),\n-                        pollingState.getLastResponseBody(),\n-                        pollResultType);\n-                }\n+                return pollResponseMonoFromPollingState(serializerAdapter, pollResultType, pollingState);\n             } else {\n                 // InProgress|NonTerminal-Status\n-                Mono<PollResponse<PollResult<T>>> pollResponse = pollResponseMono(serializerAdapter,\n-                    pollingState.getOperationStatus(),\n-                    pollingState.getLastResponseBody(),\n-                    pollResultType);\n                 return doSinglePoll(pipeline, pollingState)\n-                    .doOnNext(updatedState -> updatedState.store(context))\n-                    .then(pollResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ef54296b742072bd7cd5f98b9da9006bd133da7"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3832, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}