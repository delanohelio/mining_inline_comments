{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTEwNDE1", "number": 8393, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMjoxMFrODizc6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNzoyMlrODjPp2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIxMTYxOnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMjoxMFrOFuQVOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozMjoxMFrOFuQVOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0NjM5NA==", "bodyText": "Looks like a find and replace error.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n          \n          \n            \n                 * @param tableOrViewName The name of the table or view from which to read rows.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384046394", "createdAt": "2020-02-25T18:32:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIzMTE0OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozNzo0MVrOFuQhXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxMjoyNlrOFuZ_0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0OTUwMA==", "bodyText": "Thoughts on moving the explanation into the general Javadoc section? Also, let's make sure proper Javadoc formatting is used here.\nThe Storage connection string must use this format:\n<p>\n{@code \"DefaultEndpointsProtocol=https;AccountName=[your storage account];AccountKey=[your account key]:}\n<p>\n<em>Note: The connection string must use HTTPS.<em>", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384049500", "createdAt": "2020-02-25T18:37:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNDc1Mw==", "bodyText": "Agreed upon the javadoc format.\nI would rather to leave it in parameter. User can find the usage of the connection string from param directly instead of searching on method description. It is more user friendly to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384204753", "createdAt": "2020-02-26T00:12:26Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0OTUwMA=="}, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIzMTg3OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozNzo1NFrOFuQh1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozNzo1NFrOFuQh1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0OTYyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param containerName The dataSourceName of the container from which to read blobs.\n          \n          \n            \n                 * @param containerName The name of the container from which to read blobs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384049620", "createdAt": "2020-02-25T18:37:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.\n+     * @param containerName The dataSourceName of the container from which to read blobs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIzMzI1OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozODoxNVrOFuQiqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODozODoxNVrOFuQiqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0OTgzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * with dataSourceNames starting with this prefix. This is useful when blobs are\n          \n          \n            \n                 * with names starting with this prefix. This is useful when blobs are", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384049833", "createdAt": "2020-02-25T18:38:15Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.\n+     * @param containerName The dataSourceName of the container from which to read blobs.\n+     * @param pathPrefix Optional. If specified, the data source will include only blobs\n+     * with dataSourceNames starting with this prefix. This is useful when blobs are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODIzOTQxOnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0MDowOVrOFuQmhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0MDowOVrOFuQmhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MDgyMA==", "bodyText": "@param pathPrefix Optional. Limits the data source to only include blobs starting with the specified prefix, this is useful when blobs are organized into \"virtual folders\".", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384050820", "createdAt": "2020-02-25T18:40:09Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.\n+     * @param containerName The dataSourceName of the container from which to read blobs.\n+     * @param pathPrefix Optional. If specified, the data source will include only blobs\n+     * with dataSourceNames starting with this prefix. This is useful when blobs are\n+     * organized into \"virtual folders\", for example.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODI0MTAxOnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0MDo0MlrOFuQnjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0MDo0MlrOFuQnjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MTA4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws IllegalArgumentException if dataSourceName, containerName or storageConnectionString are null or empty.\n          \n          \n            \n                 * @throws IllegalArgumentException If {@code dataSourceName}, {@code containerName} or {@code storageConnectionString} are null or empty.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384051087", "createdAt": "2020-02-25T18:40:42Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,37 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.\n      * @param sqlConnectionString The connection string for the Azure SQL database.\n-     * @param tableOrViewName The name of the table or view from which to read rows.\n+     * @param tableOrViewName The dataSourceName of the table or view from which to read rows.\n      * @return A new DataSource instance.\n      */\n-    public static DataSource azureSql(String name, String sqlConnectionString, String tableOrViewName) {\n-        return DataSources.azureSql(name, sqlConnectionString, tableOrViewName, null, null, null);\n+    public static DataSource createFromAzureSql(String dataSourceName, String sqlConnectionString,\n+        String tableOrViewName) {\n+        return DataSources.createFromAzureSql(dataSourceName, sqlConnectionString, tableOrViewName, null, null, null);\n     }\n \n     /**\n      * Creates a new DataSource to connect to an Azure Blob container.\n      *\n-     * @param name The name of the data source.\n-     * @param storageConnectionString The connection string for the Azure Storage account. It must follow this format:\n-     * \"DefaultEndpointsProtocol=https;AccountName=[your storage account]; AccountKey=[your account key];\" Note that\n-     * HTTPS is required.\n-     * @param containerName The name of the container from which to read blobs.\n-     * @param pathPrefix Optional. If specified, the data source will include only blobs with names starting with this\n-     * prefix. This is useful when blobs are organized into \"virtual folders\", for example.\n+     * @param dataSourceName The name of the data source.\n+     * @param storageConnectionString The connection string for the Azure Storage account.\n+     * It must follow this format: \"DefaultEndpointsProtocol=https;AccountName=[your storage account];\n+     * AccountKey=[your account key];\" Note that HTTPS is required.\n+     * @param containerName The dataSourceName of the container from which to read blobs.\n+     * @param pathPrefix Optional. If specified, the data source will include only blobs\n+     * with dataSourceNames starting with this prefix. This is useful when blobs are\n+     * organized into \"virtual folders\", for example.\n      * @param description Optional. Description of the data source\n      * @param deletionDetectionPolicy Optional. The data deletion detection policy for the data source\n+     * @throws IllegalArgumentException if dataSourceName, containerName or storageConnectionString are null or empty.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0126ec0b0663b9035d14a0538dd44c874b89d9e"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjgzMjI0OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNzoyMlrOFu8jug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNzoyMlrOFu8jug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3MTAwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param dataSourceName The dataSourceName of the data source.\n          \n          \n            \n                 * @param dataSourceName The name of the data source.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8393#discussion_r384771002", "createdAt": "2020-02-26T21:17:22Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search/src/main/java/com/azure/search/DataSources.java", "diffHunk": "@@ -56,34 +56,40 @@ public static DataSource azureSql(String name, String sqlConnectionString, Strin\n     /**\n      * Creates a new DataSource to connect to an Azure SQL database.\n      *\n-     * @param name The name of the data source.\n+     * @param dataSourceName The dataSourceName of the data source.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba68aa115006ddd19136e3a440ebc602d62a0210"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3104, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}