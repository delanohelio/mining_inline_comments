{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzUyODky", "number": 11264, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDoxN1rOD9kP_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDoxN1rOD9kP_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODgzNjQ2OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/implementation/Utility.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowMDoxN1rOGXI46w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjowNTo1NlrOGX4yXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjA3NQ==", "bodyText": "@srnagar Is this the same thing that management SDK's are doing too?\nAnd you had some opinions to have a new model type for the exception rather than doing it this way?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11264#discussion_r426916075", "createdAt": "2020-05-18T22:00:17Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/implementation/Utility.java", "diffHunk": "@@ -94,8 +112,120 @@ public HttpHeaders getHeaders() {\n     public static Throwable mapToHttpResponseExceptionIfExist(Throwable throwable) {\n         if (throwable instanceof TextAnalyticsErrorException) {\n             TextAnalyticsErrorException errorException = (TextAnalyticsErrorException) throwable;\n-            return new HttpResponseException(errorException.getMessage(), errorException.getResponse());\n+            return new HttpResponseException(errorException.getMessage(), errorException.getResponse(),\n+                toTextAnalyticsError(errorException.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61701ce719066fe56ac566ad8189a369ff465f79"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2MTU0Mw==", "bodyText": "as discussion in the TA meeting, this change looks good.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11264#discussion_r426961543", "createdAt": "2020-05-19T00:23:10Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/implementation/Utility.java", "diffHunk": "@@ -94,8 +112,120 @@ public HttpHeaders getHeaders() {\n     public static Throwable mapToHttpResponseExceptionIfExist(Throwable throwable) {\n         if (throwable instanceof TextAnalyticsErrorException) {\n             TextAnalyticsErrorException errorException = (TextAnalyticsErrorException) throwable;\n-            return new HttpResponseException(errorException.getMessage(), errorException.getResponse());\n+            return new HttpResponseException(errorException.getMessage(), errorException.getResponse(),\n+                toTextAnalyticsError(errorException.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjA3NQ=="}, "originalCommit": {"oid": "61701ce719066fe56ac566ad8189a369ff465f79"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk2NDI5Nw==", "bodyText": "In toTextAnalyticsError .NET is using the top-level error to form the exception, but here we are using the innerError value if present.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11264#discussion_r426964297", "createdAt": "2020-05-19T00:33:50Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/implementation/Utility.java", "diffHunk": "@@ -94,8 +112,120 @@ public HttpHeaders getHeaders() {\n     public static Throwable mapToHttpResponseExceptionIfExist(Throwable throwable) {\n         if (throwable instanceof TextAnalyticsErrorException) {\n             TextAnalyticsErrorException errorException = (TextAnalyticsErrorException) throwable;\n-            return new HttpResponseException(errorException.getMessage(), errorException.getResponse());\n+            return new HttpResponseException(errorException.getMessage(), errorException.getResponse(),\n+                toTextAnalyticsError(errorException.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjA3NQ=="}, "originalCommit": {"oid": "61701ce719066fe56ac566ad8189a369ff465f79"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDgyOQ==", "bodyText": "This is what python used to use innerError\nhttps://github.com/Azure/azure-sdk-for-python/pull/11155/files#diff-6814e3aaeba6362738bfde592d65bd9bR64", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11264#discussion_r427700829", "createdAt": "2020-05-20T02:05:56Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/implementation/Utility.java", "diffHunk": "@@ -94,8 +112,120 @@ public HttpHeaders getHeaders() {\n     public static Throwable mapToHttpResponseExceptionIfExist(Throwable throwable) {\n         if (throwable instanceof TextAnalyticsErrorException) {\n             TextAnalyticsErrorException errorException = (TextAnalyticsErrorException) throwable;\n-            return new HttpResponseException(errorException.getMessage(), errorException.getResponse());\n+            return new HttpResponseException(errorException.getMessage(), errorException.getResponse(),\n+                toTextAnalyticsError(errorException.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjA3NQ=="}, "originalCommit": {"oid": "61701ce719066fe56ac566ad8189a369ff465f79"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4165, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}