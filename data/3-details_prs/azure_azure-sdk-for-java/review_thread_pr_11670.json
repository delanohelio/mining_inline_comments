{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDQwMTA1", "number": 11670, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NDozN1rOEByD_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMToxMzoyMVrOEB-Bxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzA0MjU0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NDozN1rOGd1lGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NDozN1rOGd1lGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzOTczOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl}, {@code modelId} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433939739", "createdAt": "2020-06-02T14:54:37Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -82,16 +81,19 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomFormsFromUrl#string-string}\n      *\n-     * @param fileSourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param modelId The UUID string format custom trained model Id to be used.\n      *\n      * @return A {@link PollerFlux} that polls the extract custom form operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96c5a8e70979ec8b81709617b02152e46d1872a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzA0NDk2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NTowNFrOGd1msA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NTowNFrOGd1msA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MDE0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl}, {@code modelId} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433940144", "createdAt": "2020-06-02T14:55:04Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -103,23 +105,26 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomFormsFromUrl#string-string-boolean-Duration}\n      *\n-     * @param fileSourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param modelId The UUID string format custom trained model Id to be used.\n      * @param includeTextDetails Include text lines and element references in the result.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract custom form operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code fileSourceUrl}, {@code modelId} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96c5a8e70979ec8b81709617b02152e46d1872a"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzA0Nzc1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NTo0MFrOGd1oeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1NTo0MFrOGd1oeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MDYwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code sourceUrl} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code formUrl} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433940600", "createdAt": "2020-06-02T14:55:40Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -215,19 +229,22 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeContentFromUrl#string-Duration}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param formUrl The source URL to the input document. Size of the file must be less than 50 MB.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n      * been cancelled. The completed operation returns a List of {@link FormPage}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code sourceUrl} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96c5a8e70979ec8b81709617b02152e46d1872a"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzA3MDgxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTowMDo0NFrOGd13lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTowMDo0NFrOGd13lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0NDQ3MQ==", "bodyText": "nit: \"The source URL to the input receipt.\"\nAlso unsure if size of the file is as necessary for the FromUrl functions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r433944471", "createdAt": "2020-06-02T15:00:44Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -301,15 +324,18 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl#string}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param receiptUrl The source URL to the input document. Size of the file must be less than 50 MB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96c5a8e70979ec8b81709617b02152e46d1872a"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzUzMTEzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTozOFrOGd6dew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTozOFrOGd6dew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxOTcwNw==", "bodyText": "could we add the renames to the changelog too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434019707", "createdAt": "2020-06-02T16:39:38Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -1,6 +1,8 @@\n # Release History\n \n ## 1.0.0-beta.3 (Unreleased)\n+- Raise `HttpResponseException` when a model with `ModelStatus.Invalid` is returned from the `beginTraining()` API's\n+- Fix `HttpResponseException` to include the error object thrown on invalid analyze status for recognize API's", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e96c5a8e70979ec8b81709617b02152e46d1872a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDYwNjQ5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTo0NzoyNVrOGeFHIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTo0NzoyNVrOGeFHIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NDIwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Operations allowed by the client are recognizing receipt data from documents, recognizeing layout information and\n          \n          \n            \n             * Operations allowed by the client are recognizing receipt data from documents, recognizing layout information and", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434194209", "createdAt": "2020-06-02T21:47:25Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -22,7 +25,7 @@\n \n /**\n  * This class provides a synchronous client that contains all the operations that apply to Azure Form Recognizer.\n- * Operations allowed by the client are recognizing receipt data from documents, extracting layout information and\n+ * Operations allowed by the client are recognizing receipt data from documents, recognizeing layout information and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9548141ac21dcdc56041d6c421f99dedb5ec3c9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDk4MDgyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDo1OTozOFrOGeItgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMDo1OTozOFrOGeItgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MzE4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code sourceUrl} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code receiptUrl} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434253185", "createdAt": "2020-06-03T00:59:38Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -293,56 +316,62 @@\n     }\n \n     /**\n-     * Recognizes and extracts receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n+     * Recognizes receipt data using optical character recognition (OCR) and a prebuilt receipt trained\n      * model.\n      * <p>The service does not support cancellation of the long running operation and returns with an\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceiptsFromUrl#string}\n      *\n-     * @param sourceUrl The source URL to the input document. Size of the file must be less than 50 MB.\n+     * @param receiptUrl The source URL to the input receipt.\n      *\n-     * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * or has been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code sourceUrl} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 301}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDk4MjAwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMDoxNlrOGeIuMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMTowMDoxNlrOGeIuMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MzM2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException If {@code form} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException If {@code receipt} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434253360", "createdAt": "2020-06-03T01:00:16Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -378,37 +410,40 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeReceipts#Flux-long-FormContentType-boolean-Duration}\n      *\n-     * @param data The data of the document to be extract receipt information from.\n+     * @param receipt The data of the receipt to recognize receipt information from.\n      * @param length The exact length of the data. Size of the file must be less than 50 MB.\n      * @param formContentType Supported Media types including .pdf, .jpg, .png or .tiff type file stream.\n      * @param includeTextDetails Include text lines and element references in the result.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n-     * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * or has been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n+     * @throws HttpResponseException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code form} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 404}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTAwMjk0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMToxMzoyMVrOGeI7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDo1NDoxM1rOGeL_wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ==", "bodyText": "Should this be a HttpResponseException or just AzureException? HttpResponseException is usually an error returned by the HTTP call with a status code not equal to 2xx.\nFrom HttpResponseException JavaDoc:\n\nThe exception thrown when an unsuccessful response is received with http status code (e.g. 3XX, 4XX, 5XX) from the service request.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434256659", "createdAt": "2020-06-03T01:13:21Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -638,4 +650,20 @@ private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n         }\n     }\n \n+     /**\n+      *  Helper method that throws a {@link HttpResponseException} if {@link ModelInfo#getStatus()} is\n+      *  {@link com.azure.ai.formrecognizer.implementation.models.ModelStatus#INVALID}.\n+      *\n+      * @param customModel The response returned from the service.\n+      */\n+    private void throwIfModelStatusInvalid(Model customModel) {\n+        if (ModelStatus.INVALID.equals(customModel.getModelInfo().getStatus())) {\n+            List<ErrorInformation> errorInformationList = customModel.getTrainResult().getErrors();\n+            if (!CoreUtils.isNullOrEmpty(errorInformationList)) {\n+                throw logger.logExceptionAsError(new HttpResponseException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2NDc0MA==", "bodyText": "For failures for service requests (3XX, 4XX etc) we have ErroeResponseException.\nUsing the equivalent for other languages C#- RequestFailedException and Python - HttpResponseError", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434264740", "createdAt": "2020-06-03T01:47:56Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -638,4 +650,20 @@ private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n         }\n     }\n \n+     /**\n+      *  Helper method that throws a {@link HttpResponseException} if {@link ModelInfo#getStatus()} is\n+      *  {@link com.azure.ai.formrecognizer.implementation.models.ModelStatus#INVALID}.\n+      *\n+      * @param customModel The response returned from the service.\n+      */\n+    private void throwIfModelStatusInvalid(Model customModel) {\n+        if (ModelStatus.INVALID.equals(customModel.getModelInfo().getStatus())) {\n+            List<ErrorInformation> errorInformationList = customModel.getTrainResult().getErrors();\n+            if (!CoreUtils.isNullOrEmpty(errorInformationList)) {\n+                throw logger.logExceptionAsError(new HttpResponseException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI2ODMxOQ==", "bodyText": "Discussed offline.\nMaintaining the Javadoc for HttpResponseException and TA convention for exception handling, consider adding a new Exception Type or use AzureException.\n#11705", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434268319", "createdAt": "2020-06-03T02:03:55Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -638,4 +650,20 @@ private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n         }\n     }\n \n+     /**\n+      *  Helper method that throws a {@link HttpResponseException} if {@link ModelInfo#getStatus()} is\n+      *  {@link com.azure.ai.formrecognizer.implementation.models.ModelStatus#INVALID}.\n+      *\n+      * @param customModel The response returned from the service.\n+      */\n+    private void throwIfModelStatusInvalid(Model customModel) {\n+        if (ModelStatus.INVALID.equals(customModel.getModelInfo().getStatus())) {\n+            List<ErrorInformation> errorInformationList = customModel.getTrainResult().getErrors();\n+            if (!CoreUtils.isNullOrEmpty(errorInformationList)) {\n+                throw logger.logExceptionAsError(new HttpResponseException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwNzAwOQ==", "bodyText": "#11720", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11670#discussion_r434307009", "createdAt": "2020-06-03T04:54:13Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -638,4 +650,20 @@ private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n         }\n     }\n \n+     /**\n+      *  Helper method that throws a {@link HttpResponseException} if {@link ModelInfo#getStatus()} is\n+      *  {@link com.azure.ai.formrecognizer.implementation.models.ModelStatus#INVALID}.\n+      *\n+      * @param customModel The response returned from the service.\n+      */\n+    private void throwIfModelStatusInvalid(Model customModel) {\n+        if (ModelStatus.INVALID.equals(customModel.getModelInfo().getStatus())) {\n+            List<ErrorInformation> errorInformationList = customModel.getTrainResult().getErrors();\n+            if (!CoreUtils.isNullOrEmpty(errorInformationList)) {\n+                throw logger.logExceptionAsError(new HttpResponseException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1NjY1OQ=="}, "originalCommit": {"oid": "149e6d06cce6f4ab1b654264cb6aab1c63259521"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4056, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}