{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzM2MTUw", "number": 14282, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyODowOFrOEaGbww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyOTo0OFrOEaGd6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODAzODQzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Paths.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyODowOFrOHDUGgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyOTowM1rOHDUIiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNzEyMA==", "bodyText": "Any specific reason why are we not using primitive types here -> char ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14282#discussion_r473237120", "createdAt": "2020-08-19T18:28:08Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Paths.java", "diffHunk": "@@ -8,6 +8,8 @@\n  */\n public class Paths {\n     static final String ROOT = \"/\";\n+    static final Character ROOT_CHAR = '/';\n+    static final Character ESCAPE_CHAR = '\\\\';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f0b45dd4b3ea790c0f5ad7d08487d6aba511c7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNzY0Mw==", "bodyText": "Because using Character class here will result in auto-boxing later in your code below.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14282#discussion_r473237643", "createdAt": "2020-08-19T18:29:03Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Paths.java", "diffHunk": "@@ -8,6 +8,8 @@\n  */\n public class Paths {\n     static final String ROOT = \"/\";\n+    static final Character ROOT_CHAR = '/';\n+    static final Character ESCAPE_CHAR = '\\\\';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNzEyMA=="}, "originalCommit": {"oid": "1f0b45dd4b3ea790c0f5ad7d08487d6aba511c7a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODA0MzkzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/PathsHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyOTo0OFrOHDUKEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyOTo0OFrOHDUKEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzODAzNA==", "bodyText": "please also consider a unit test for unescapeJavaAndTrim() implementation when escaping or not escaping case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14282#discussion_r473238034", "createdAt": "2020-08-19T18:29:48Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/PathsHelper.java", "diffHunk": "@@ -441,24 +439,57 @@ public static PathInfo parseNameSegments(String resourceUrl, String[] segments)\n         if (segments.length % 2 == 0) {\n             // even number, assume it is individual resource\n             if (isResourceType(segments[segments.length - 2])) {\n-                return new PathInfo(false, segments[segments.length - 2],\n-                        StringEscapeUtils.unescapeJava(StringUtils.strip(resourceUrl, Paths.ROOT)), true);\n+                return new PathInfo(false,\n+                                    segments[segments.length - 2],\n+                                    unescapeJavaAndTrim(resourceUrl),\n+                         true);\n             }\n         } else {\n             // odd number, assume it is feed request\n             if (isResourceType(segments[segments.length - 1])) {\n-                return new PathInfo(true, segments[segments.length - 1],\n-                        StringEscapeUtils.unescapeJava(StringUtils.strip(\n-                                resourceUrl.substring(0,\n-                                        StringUtils.removeEnd(resourceUrl, Paths.ROOT).lastIndexOf(Paths.ROOT)),\n-                                Paths.ROOT)),\n-                        true);\n+                return new PathInfo(true,\n+                                    segments[segments.length - 1],\n+                                    unescapeJavaAndTrim(\n+                                        resourceUrl.substring(0,\n+                                                StringUtils.removeEnd(resourceUrl, Paths.ROOT).lastIndexOf(Paths.ROOT))),\n+                         true);\n             }\n         }\n \n         return null;\n     }\n \n+    private static String unescapeJavaAndTrim(String resourceUrl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f0b45dd4b3ea790c0f5ad7d08487d6aba511c7a"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1556, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}