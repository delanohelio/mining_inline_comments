{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTM5NjA5", "number": 12654, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozMzowMFrOEKLn9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzowNDowMlrOEKMZ4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTExNjY5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozMzowMFrOGrE3Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0MTozMVrOGrmagA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ==", "bodyText": "Isn't this too much ?\nFor big customers, who have very high number of physical partitions - like around 500 or 1000. Then this will always create that many connections -> physical partitions * 4 (which is the number of replicas) - and will keep the resources occupied for 24 hours even if we don't need them.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447821671", "createdAt": "2020-06-30T16:33:00Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgzNDE1Mg==", "bodyText": "see the .Net default:\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.documents.client.connectionpolicy.idletcpconnectiontimeout?view=azure-dotnet#Microsoft_Azure_Documents_Client_ConnectionPolicy_IdleTcpConnectionTimeout\nhaving 70 seconds as timeout certainly cause latency issue. and a big customer with those many partitions certainly wants a good latency.\nWe can think about what the good default should be 70 seconds is too low.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447834152", "createdAt": "2020-06-30T16:51:46Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ=="}, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0MTg4Ng==", "bodyText": "This may result in the appearance of a resource leak when the partition count is large, hits on partitions are sparse and shifting. Example: 1,000 partitions. Partition 1 is hot for a short period of time causing numerous connections to be opened. Now partition 2 is hot. Then partition 3,... Half the partitions then go dormant. These connections might last 24 hours without being used.\nAlternatively, in another PR, we might consider changing the algorithm so one connection stays open. We\u2019d consume fewer resources unnecessarily. I\u2019d like some time to think about the specifics of how this might work.\n@moderakh let\u2019s chat about this offline.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447841886", "createdAt": "2020-06-30T17:03:42Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ=="}, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0MzExNQ==", "bodyText": "Agreed, 70 seconds is too low from what we have seen so far.\nBut In my opinion, 24 hours is a lot. It will just occupy many resources that we don't want the code to retain if they are not being used.\nMay be start with 1 hour ?\n@kirankumarkolli @David-Noble-at-work thoughts ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447843115", "createdAt": "2020-06-30T17:05:29Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ=="}, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzY2MA==", "bodyText": "1h seems a good start. changed to 1h.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447927660", "createdAt": "2020-06-30T19:27:44Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ=="}, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3MTMyOA==", "bodyText": "One single configuration value doesn't fit for all CX needs.\nMy first thoughts are we will have few top usage profiles (covering some trade-off's) which gives the CX the easier way to pick and choose. @David-Noble-at-work is exploring those opitions.\nTill then parity with .NET might be reasonable middle ground.\nAlso pinged Hemant offline for his opinion.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r448371328", "createdAt": "2020-07-01T13:41:31Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMTY3MQ=="}, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI0NDUwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzowNDowMlrOGrGHEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzowNDowMlrOGrGHEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0MjA2NQ==", "bodyText": "thanks!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12654#discussion_r447842065", "createdAt": "2020-06-30T17:04:02Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -15,8 +15,8 @@\n  */\n public final class DirectConnectionConfig {\n     //  Constants\n-    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofSeconds(70L);\n-    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(60L);\n+    private static final Duration DEFAULT_IDLE_ENDPOINT_TIMEOUT = Duration.ofHours(24L);\n+    private static final Duration DEFAULT_CONNECT_TIMEOUT = Duration.ofSeconds(5L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a218983c8bdaa75d9e512caf04eec8bd4001d29"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3717, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}