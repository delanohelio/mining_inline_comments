{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzk3Mzg3", "number": 11317, "title": "Added converter layer for search. Removed the code transformation.", "bodyText": "This PR is to remove code transformation. Prepare for autorest V4 upgrades.\nCurrently, what we have:\n\nSerializer parameters in IndexRestClient, (DocumentsImpl, SearchIndexRestClientImpl, SearchIndexRestClientBuilder)\nthis.getEndpoint -> this.client.getEndpoint in RestImpl (Can be removed when use V4)\nAdd @JsonAnyGetter in IndexAction\nFollow up issues of cleaning up converters: #11386\nChanges include:\nAll auto-gen files now put under impl.\nAdded converter layer.\nRemove license header from public folder.\nSome helper classes.\nException mapping to HttpResponseException (Might revert depends on team preference)", "createdAt": "2020-05-19T22:26:21Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317", "merged": true, "mergeCommit": {"oid": "176d6db84299db6469a04861d921b75f2ec8f272"}, "closed": true, "closedAt": "2020-05-26T19:12:23Z", "author": {"login": "sima-zhu"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci8KVdAH2gAyNDIwMzk3Mzg3OjI2NzQ1ZGFjNjdkOGI0ZDk0OGJjZTYzZGVjNGVkNTExNWY0ZDUyMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclIaKlAH2gAyNDIwMzk3Mzg3OmEyOGE5MTU2ZWE4NDliZjlhMDI0MzJhZjRlZTJlNGExOTgxYmUzMWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "26745dac67d8b4d948bce63dec4ed5115f4d5225", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/26745dac67d8b4d948bce63dec4ed5115f4d5225", "committedDate": "2020-05-19T22:25:06Z", "message": "Added converter layer for search. Removed the code transformation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b809930454d1fdd929a0cbceb11bfc9f9aca096d", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b809930454d1fdd929a0cbceb11bfc9f9aca096d", "committedDate": "2020-05-19T23:24:21Z", "message": "Make changes to swagger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a739d38b2b45d144c5d3299f1d8d92741334b0", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/72a739d38b2b45d144c5d3299f1d8d92741334b0", "committedDate": "2020-05-19T23:41:37Z", "message": "Remove extra ones"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b49a1f6cf72b274fcace196bc520b7cdab3dd1e4", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b49a1f6cf72b274fcace196bc520b7cdab3dd1e4", "committedDate": "2020-05-20T00:02:38Z", "message": "Fixed the split dimiliter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7b157f7ce7de0d8e9e2a90590b6d9d4fb1df2c7", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7b157f7ce7de0d8e9e2a90590b6d9d4fb1df2c7", "committedDate": "2020-05-20T01:56:39Z", "message": "Fixed for the Generic types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e378717abeaec1684c963e718779ac2c28c70307", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e378717abeaec1684c963e718779ac2c28c70307", "committedDate": "2020-05-20T16:20:04Z", "message": "Fix JsonAnyGetter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4d8e5e19f2a2f66e711db4738018bee4e1491b6", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b4d8e5e19f2a2f66e711db4738018bee4e1491b6", "committedDate": "2020-05-20T16:46:34Z", "message": "Added jsonanygetter imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e6e4dd20bad6f36ec9b880d9e239f8e5ff30a5", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/13e6e4dd20bad6f36ec9b880d9e239f8e5ff30a5", "committedDate": "2020-05-20T17:49:19Z", "message": "Change exports to opens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTgwNjkz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-415580693", "createdAt": "2020-05-20T17:55:49Z", "commit": {"oid": "13e6e4dd20bad6f36ec9b880d9e239f8e5ff30a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NTo1MFrOGYXXAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NTo1MFrOGYXXAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMTczMA==", "bodyText": "Are these implementation files, auto-generated?\nNo license statements?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428201730", "createdAt": "2020-05-20T17:55:50Z", "author": {"login": "samvaity"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package com.azure.search.documents.implementation.converters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e6e4dd20bad6f36ec9b880d9e239f8e5ff30a5"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c02fe1b33cca84c1bcc61e83acc992832017f279", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c02fe1b33cca84c1bcc61e83acc992832017f279", "committedDate": "2020-05-20T18:39:57Z", "message": "Added license headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6d3728b7c7edbd6edf4c41b152deac08ecbdf7da", "committedDate": "2020-05-21T15:54:43Z", "message": "Revert to autorestv3"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52859b6095d545cd76e050c70a5383532c6416bf", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/52859b6095d545cd76e050c70a5383532c6416bf", "committedDate": "2020-05-20T22:01:47Z", "message": "Move to v4 readme"}, "afterCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6d3728b7c7edbd6edf4c41b152deac08ecbdf7da", "committedDate": "2020-05-21T15:54:43Z", "message": "Revert to autorestv3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzI5MjM4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-416329238", "createdAt": "2020-05-21T17:04:19Z", "commit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzowNDoxOVrOGY7KaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1NzozNFrOGY8-bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4ODMyOQ==", "bodyText": "nit: remove underscores from local variable names", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428788329", "createdAt": "2020-05-21T17:04:19Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzedTokenInfoConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AnalyzedTokenInfo;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AnalyzedTokenInfo} and\n+ * {@link AnalyzedTokenInfo}.\n+ */\n+public final class AnalyzedTokenInfoConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AnalyzedTokenInfoConverter.class);\n+\n+    /**\n+     * Maps from {@link com.azure.search.documents.implementation.models.AnalyzedTokenInfo} to\n+     * {@link AnalyzedTokenInfo}.\n+     */\n+    public static AnalyzedTokenInfo map(com.azure.search.documents.implementation.models.AnalyzedTokenInfo obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        AnalyzedTokenInfo analyzedTokenInfo = new AnalyzedTokenInfo();\n+\n+        int _endOffset = obj.getEndOffset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4ODc1MQ==", "bodyText": "Logger is not used in this class. Remove this here and in other converters where it's not used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428788751", "createdAt": "2020-05-21T17:05:01Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzedTokenInfoConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AnalyzedTokenInfo;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AnalyzedTokenInfo} and\n+ * {@link AnalyzedTokenInfo}.\n+ */\n+public final class AnalyzedTokenInfoConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AnalyzedTokenInfoConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxNTMxNA==", "bodyText": "Missing copyright text.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428815314", "createdAt": "2020-05-21T17:52:48Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzedTokenInfoConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.azure.search.documents.implementation.converters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxNjg5OA==", "bodyText": "All these converters should have private ctor.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428816898", "createdAt": "2020-05-21T17:55:37Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AutocompleteOptionsConverter.java", "diffHunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AutocompleteMode;\n+import com.azure.search.documents.models.AutocompleteOptions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AutocompleteOptions} and\n+ * {@link AutocompleteOptions}.\n+ */\n+public final class AutocompleteOptionsConverter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxODAyOQ==", "bodyText": "Why are all these constants empty strings?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428818029", "createdAt": "2020-05-21T17:57:34Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/Constants.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+public class Constants {\n+    public static final String CLASS_JAVA_DOC_FORMAT = \"\";\n+    public static final String INTERNAL_EXTERNAL_MAP_JAVA_DOC_FORMAT = \"\";\n+    public static final String EXTERNAL_INTERNAL_MAP_JAVA_DOC_FORMAT = \"\";\n+    public static final String ENUM_ERROR_MSG = \"\";\n+    public static final String ABSTRACT_ERROR_MSG = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzE5Mzkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-416319390", "createdAt": "2020-05-21T16:51:27Z", "commit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "state": "COMMENTED", "comments": {"totalCount": 87, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo1MToyOFrOGY6tIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODowNjo1NlrOGY9Shg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4MDgzMg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428780832", "createdAt": "2020-05-21T16:51:28Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.AnalyzeRequest;\n+import com.azure.search.documents.models.CharFilterName;\n+import com.azure.search.documents.models.LexicalAnalyzerName;\n+import com.azure.search.documents.models.LexicalTokenizerName;\n+import com.azure.search.documents.models.TokenFilterName;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AnalyzeRequest} and\n+ * {@link AnalyzeRequest}.\n+ */\n+public final class AnalyzeRequestConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AnalyzeRequestConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4MTc3MA==", "bodyText": "Do we need the temp variable?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428781770", "createdAt": "2020-05-21T16:53:05Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.AnalyzeRequest;\n+import com.azure.search.documents.models.CharFilterName;\n+import com.azure.search.documents.models.LexicalAnalyzerName;\n+import com.azure.search.documents.models.LexicalTokenizerName;\n+import com.azure.search.documents.models.TokenFilterName;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AnalyzeRequest} and\n+ * {@link AnalyzeRequest}.\n+ */\n+public final class AnalyzeRequestConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AnalyzeRequestConverter.class);\n+\n+    /**\n+     * Maps from {@link com.azure.search.documents.implementation.models.AnalyzeRequest} to {@link AnalyzeRequest}.\n+     */\n+    public static AnalyzeRequest map(com.azure.search.documents.implementation.models.AnalyzeRequest obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        AnalyzeRequest analyzeRequest = new AnalyzeRequest();\n+\n+        if (obj.getCharFilters() != null) {\n+            List<CharFilterName> _charFilters =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4MjcxNQ==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428782715", "createdAt": "2020-05-21T16:54:40Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzedTokenInfoConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AnalyzedTokenInfo;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AnalyzedTokenInfo} and\n+ * {@link AnalyzedTokenInfo}.\n+ */\n+public final class AnalyzedTokenInfoConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AnalyzedTokenInfoConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc4OTgzOA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428789838", "createdAt": "2020-05-21T17:07:01Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AsciiFoldingTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.AsciiFoldingTokenFilter;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AsciiFoldingTokenFilter} and\n+ * {@link AsciiFoldingTokenFilter}.\n+ */\n+public final class AsciiFoldingTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AsciiFoldingTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDE1Ng==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428790156", "createdAt": "2020-05-21T17:07:35Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AutocompleteItemConverter.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AutocompleteItem;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AutocompleteItem} and\n+ * {@link AutocompleteItem}.\n+ */\n+public final class AutocompleteItemConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AutocompleteItemConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDU3OA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428790578", "createdAt": "2020-05-21T17:08:22Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AutocompleteOptionsConverter.java", "diffHunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AutocompleteMode;\n+import com.azure.search.documents.models.AutocompleteOptions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AutocompleteOptions} and\n+ * {@link AutocompleteOptions}.\n+ */\n+public final class AutocompleteOptionsConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AutocompleteOptionsConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDc4Mw==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428790783", "createdAt": "2020-05-21T17:08:46Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AutocompleteResultConverter.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.AutocompleteItem;\n+import com.azure.search.documents.models.AutocompleteResult;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.AutocompleteResult} and\n+ * {@link AutocompleteResult}.\n+ */\n+public final class AutocompleteResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(AutocompleteResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDkzMA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428790930", "createdAt": "2020-05-21T17:09:01Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AzureActiveDirectoryApplicationCredentialsConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.AzureActiveDirectoryApplicationCredentials;\n+\n+/**\n+ * A converter between\n+ * {@link com.azure.search.documents.implementation.models.AzureActiveDirectoryApplicationCredentials} and\n+ * {@link AzureActiveDirectoryApplicationCredentials}.\n+ */\n+public final class AzureActiveDirectoryApplicationCredentialsConverter {\n+    private static final ClientLogger LOGGER =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MTA5MA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428791090", "createdAt": "2020-05-21T17:09:19Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/BM25SimilarityConverter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.BM25Similarity;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.BM25Similarity} and\n+ * {@link BM25Similarity}.\n+ */\n+public final class BM25SimilarityConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(BM25SimilarityConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MTg5OQ==", "bodyText": "I have strong concerns about how maintainable this will be if there is API changes in this area.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428791899", "createdAt": "2020-05-21T17:10:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CharFilterConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.MappingCharFilter;\n+import com.azure.search.documents.implementation.models.PatternReplaceCharFilter;\n+import com.azure.search.documents.models.CharFilter;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CharFilter} and {@link CharFilter}.\n+ */\n+public final class CharFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CharFilterConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.CharFilter} to\n+     * {@link CharFilter}. Dedicate works to sub class converter.\n+     */\n+    public static CharFilter map(com.azure.search.documents.implementation.models.CharFilter obj) {\n+        if (obj instanceof PatternReplaceCharFilter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MjUwNQ==", "bodyText": "Given that CharFilter can't be final won't this blow up if a customer makes their own extension with additional metadata they want to maintain? I don't think it is likely but this change makes this a possible issue.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428792505", "createdAt": "2020-05-21T17:12:03Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CharFilterConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.MappingCharFilter;\n+import com.azure.search.documents.implementation.models.PatternReplaceCharFilter;\n+import com.azure.search.documents.models.CharFilter;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CharFilter} and {@link CharFilter}.\n+ */\n+public final class CharFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CharFilterConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.CharFilter} to\n+     * {@link CharFilter}. Dedicate works to sub class converter.\n+     */\n+    public static CharFilter map(com.azure.search.documents.implementation.models.CharFilter obj) {\n+        if (obj instanceof PatternReplaceCharFilter) {\n+            return PatternReplaceCharFilterConverter.map((PatternReplaceCharFilter) obj);\n+        }\n+        if (obj instanceof MappingCharFilter) {\n+            return MappingCharFilterConverter.map((MappingCharFilter) obj);\n+        }\n+        throw LOGGER.logExceptionAsError(new RuntimeException(String.format(ABSTRACT_EXTERNAL_ERROR_MSG,\n+            obj.getClass().getSimpleName())));\n+    }\n+\n+    /**\n+     * Maps abstract class from {@link CharFilter} to\n+     * {@link com.azure.search.documents.implementation.models.CharFilter}. Dedicate works to sub class converter.\n+     */\n+    public static com.azure.search.documents.implementation.models.CharFilter map(CharFilter obj) {\n+        if (obj instanceof com.azure.search.documents.models.PatternReplaceCharFilter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MjYzMg==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428792632", "createdAt": "2020-05-21T17:12:15Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CharFilterNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CharFilterName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CharFilterName} and\n+ * {@link CharFilterName}.\n+ */\n+public final class CharFilterNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CharFilterNameConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MzIzMg==", "bodyText": "Does it make sense to use two different enums? This can be shared between the custom and implementation layer.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428793232", "createdAt": "2020-05-21T17:13:09Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CharFilterNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CharFilterName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CharFilterName} and\n+ * {@link CharFilterName}.\n+ */\n+public final class CharFilterNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CharFilterNameConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.CharFilterName} to enum\n+     * {@link CharFilterName}.\n+     */\n+    public static CharFilterName map(com.azure.search.documents.implementation.models.CharFilterName obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return CharFilterName.fromString(obj.toString());\n+    }\n+\n+    /**\n+     * Maps from enum {@link CharFilterName} to enum\n+     * {@link com.azure.search.documents.implementation.models.CharFilterName}.\n+     */\n+    public static com.azure.search.documents.implementation.models.CharFilterName map(CharFilterName obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return com.azure.search.documents.implementation.models.CharFilterName.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MzQzMA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428793430", "createdAt": "2020-05-21T17:13:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CjkBigramTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CjkBigramTokenFilter;\n+import com.azure.search.documents.models.CjkBigramTokenFilterScripts;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CjkBigramTokenFilter} and\n+ * {@link CjkBigramTokenFilter}.\n+ */\n+public final class CjkBigramTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CjkBigramTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NDIxMQ==", "bodyText": "This is an enum value, this can be shared between custom and implementation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428794211", "createdAt": "2020-05-21T17:14:51Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CjkBigramTokenFilterScriptsConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CjkBigramTokenFilterScripts;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CjkBigramTokenFilterScripts} and\n+ * {@link CjkBigramTokenFilterScripts}.\n+ */\n+public final class CjkBigramTokenFilterScriptsConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CjkBigramTokenFilterScriptsConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.CjkBigramTokenFilterScripts} to enum\n+     * {@link CjkBigramTokenFilterScripts}.\n+     */\n+    public static CjkBigramTokenFilterScripts map(com.azure.search.documents.implementation.models.CjkBigramTokenFilterScripts obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case HAN:\n+                return CjkBigramTokenFilterScripts.HAN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NDM0MQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428794341", "createdAt": "2020-05-21T17:15:06Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ClassicSimilarityConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ClassicSimilarity;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ClassicSimilarity} and\n+ * {@link ClassicSimilarity}.\n+ */\n+public final class ClassicSimilarityConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ClassicSimilarityConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NDk3NQ==", "bodyText": "Does this class have no properties? Does it really need to have a custom and implementation type?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428794975", "createdAt": "2020-05-21T17:16:19Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ClassicSimilarityConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ClassicSimilarity;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ClassicSimilarity} and\n+ * {@link ClassicSimilarity}.\n+ */\n+public final class ClassicSimilarityConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ClassicSimilarityConverter.class);\n+\n+    /**\n+     * Maps from {@link com.azure.search.documents.implementation.models.ClassicSimilarity} to\n+     * {@link ClassicSimilarity}.\n+     */\n+    public static ClassicSimilarity map(com.azure.search.documents.implementation.models.ClassicSimilarity obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        ClassicSimilarity classicSimilarity = new ClassicSimilarity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NTExMg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428795112", "createdAt": "2020-05-21T17:16:35Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ClassicTokenizerConverter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ClassicTokenizer;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ClassicTokenizer} and\n+ * {@link ClassicTokenizer}.\n+ */\n+public final class ClassicTokenizerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ClassicTokenizerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NTQ0Ng==", "bodyText": "As the other case where we are checking instanceof, I have concern about maintainability.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428795446", "createdAt": "2020-05-21T17:17:15Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CognitiveServicesAccountConverter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.CognitiveServicesAccountKey;\n+import com.azure.search.documents.implementation.models.DefaultCognitiveServicesAccount;\n+import com.azure.search.documents.models.CognitiveServicesAccount;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CognitiveServicesAccount} and\n+ * {@link CognitiveServicesAccount}.\n+ */\n+public final class CognitiveServicesAccountConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CognitiveServicesAccountConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.CognitiveServicesAccount} to\n+     * {@link CognitiveServicesAccount}. Dedicate works to sub class converter.\n+     */\n+    public static CognitiveServicesAccount map(com.azure.search.documents.implementation.models.CognitiveServicesAccount obj) {\n+        if (obj instanceof CognitiveServicesAccountKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NTYyMQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428795621", "createdAt": "2020-05-21T17:17:32Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CognitiveServicesAccountKeyConverter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CognitiveServicesAccountKey;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CognitiveServicesAccountKey} and\n+ * {@link CognitiveServicesAccountKey}.\n+ */\n+public final class CognitiveServicesAccountKeyConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CognitiveServicesAccountKeyConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NTgwNA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428795804", "createdAt": "2020-05-21T17:17:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CommonGramTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CommonGramTokenFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CommonGramTokenFilter} and\n+ * {@link CommonGramTokenFilter}.\n+ */\n+public final class CommonGramTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CommonGramTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NzE2Mw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428797163", "createdAt": "2020-05-21T17:20:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ConditionalSkillConverter.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ConditionalSkill;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+import com.azure.search.documents.models.OutputFieldMappingEntry;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ConditionalSkill} and\n+ * {@link ConditionalSkill}.\n+ */\n+public final class ConditionalSkillConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ConditionalSkillConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NzQzOA==", "bodyText": "These are going to get values right? I see them being used in log statements.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428797438", "createdAt": "2020-05-21T17:20:40Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/Constants.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+public class Constants {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NzYxNQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428797615", "createdAt": "2020-05-21T17:20:57Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CorsOptionsConverter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.CorsOptions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CorsOptions} and {@link CorsOptions}.\n+ */\n+public final class CorsOptionsConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CorsOptionsConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5Nzc3MQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428797771", "createdAt": "2020-05-21T17:21:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CustomAnalyzerConverter.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.CharFilterName;\n+import com.azure.search.documents.models.CustomAnalyzer;\n+import com.azure.search.documents.models.LexicalTokenizerName;\n+import com.azure.search.documents.models.TokenFilterName;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CustomAnalyzer} and\n+ * {@link CustomAnalyzer}.\n+ */\n+public final class CustomAnalyzerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CustomAnalyzerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5Nzk1Ng==", "bodyText": "Again, concern around maintainability if this area grows.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428797956", "createdAt": "2020-05-21T17:21:39Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DataChangeDetectionPolicyConverter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.HighWaterMarkChangeDetectionPolicy;\n+import com.azure.search.documents.implementation.models.SqlIntegratedChangeTrackingPolicy;\n+import com.azure.search.documents.models.DataChangeDetectionPolicy;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DataChangeDetectionPolicy} and\n+ * {@link DataChangeDetectionPolicy}.\n+ */\n+public final class DataChangeDetectionPolicyConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DataChangeDetectionPolicyConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.DataChangeDetectionPolicy} to\n+     * {@link DataChangeDetectionPolicy}. Dedicate works to sub class converter.\n+     */\n+    public static DataChangeDetectionPolicy map(com.azure.search.documents.implementation.models.DataChangeDetectionPolicy obj) {\n+        if (obj instanceof HighWaterMarkChangeDetectionPolicy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODM0Mg==", "bodyText": "Again, concerned about maintainability if this area grows.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428798342", "createdAt": "2020-05-21T17:22:25Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DataDeletionDetectionPolicyConverter.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.SoftDeleteColumnDeletionDetectionPolicy;\n+import com.azure.search.documents.models.DataDeletionDetectionPolicy;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DataDeletionDetectionPolicy} and\n+ * {@link DataDeletionDetectionPolicy}.\n+ */\n+public final class DataDeletionDetectionPolicyConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DataDeletionDetectionPolicyConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.DataDeletionDetectionPolicy} to\n+     * {@link DataDeletionDetectionPolicy}. Dedicate works to sub class converter.\n+     */\n+    public static DataDeletionDetectionPolicy map(com.azure.search.documents.implementation.models.DataDeletionDetectionPolicy obj) {\n+        if (obj instanceof SoftDeleteColumnDeletionDetectionPolicy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODQ3NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428798475", "createdAt": "2020-05-21T17:22:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DataSourceCredentialsConverter.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DataSourceCredentials;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DataSourceCredentials} and\n+ * {@link DataSourceCredentials}.\n+ */\n+public final class DataSourceCredentialsConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DataSourceCredentialsConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODc4OA==", "bodyText": "Does this need to have both a custom and internal representation? This is a simple credential wrapping class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428798788", "createdAt": "2020-05-21T17:23:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DataSourceCredentialsConverter.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DataSourceCredentials;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DataSourceCredentials} and\n+ * {@link DataSourceCredentials}.\n+ */\n+public final class DataSourceCredentialsConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DataSourceCredentialsConverter.class);\n+\n+    /**\n+     * Maps from {@link com.azure.search.documents.implementation.models.DataSourceCredentials} to\n+     * {@link DataSourceCredentials}.\n+     */\n+    public static DataSourceCredentials map(com.azure.search.documents.implementation.models.DataSourceCredentials obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        DataSourceCredentials dataSourceCredentials = new DataSourceCredentials();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODkyMg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428798922", "createdAt": "2020-05-21T17:23:26Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DefaultCognitiveServicesAccountConverter.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DefaultCognitiveServicesAccount;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DefaultCognitiveServicesAccount} and\n+ * {@link DefaultCognitiveServicesAccount}.\n+ */\n+public final class DefaultCognitiveServicesAccountConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DefaultCognitiveServicesAccountConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5OTA4MQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428799081", "createdAt": "2020-05-21T17:23:42Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DictionaryDecompounderTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DictionaryDecompounderTokenFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DictionaryDecompounderTokenFilter} and\n+ * {@link DictionaryDecompounderTokenFilter}.\n+ */\n+public final class DictionaryDecompounderTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DictionaryDecompounderTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5OTIwNw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428799207", "createdAt": "2020-05-21T17:23:57Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DistanceScoringFunctionConverter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DistanceScoringFunction;\n+import com.azure.search.documents.models.DistanceScoringParameters;\n+import com.azure.search.documents.models.ScoringFunctionInterpolation;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DistanceScoringFunction} and\n+ * {@link DistanceScoringFunction}.\n+ */\n+public final class DistanceScoringFunctionConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DistanceScoringFunctionConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5OTM0NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428799345", "createdAt": "2020-05-21T17:24:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/DistanceScoringParametersConverter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.DistanceScoringParameters;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.DistanceScoringParameters} and\n+ * {@link DistanceScoringParameters}.\n+ */\n+public final class DistanceScoringParametersConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(DistanceScoringParametersConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDIxMw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428804213", "createdAt": "2020-05-21T17:32:45Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EdgeNGramTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EdgeNGramTokenFilter;\n+import com.azure.search.documents.models.EdgeNGramTokenFilterSide;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EdgeNGramTokenFilter} and\n+ * {@link EdgeNGramTokenFilter}.\n+ */\n+public final class EdgeNGramTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EdgeNGramTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDQ2Mg==", "bodyText": "Given this is an enum does it really need to have a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428804462", "createdAt": "2020-05-21T17:33:13Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EdgeNGramTokenFilterSideConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EdgeNGramTokenFilterSide;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EdgeNGramTokenFilterSide} and\n+ * {@link EdgeNGramTokenFilterSide}.\n+ */\n+public final class EdgeNGramTokenFilterSideConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EdgeNGramTokenFilterSideConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.EdgeNGramTokenFilterSide} to enum\n+     * {@link EdgeNGramTokenFilterSide}.\n+     */\n+    public static EdgeNGramTokenFilterSide map(com.azure.search.documents.implementation.models.EdgeNGramTokenFilterSide obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case FRONT:\n+                return EdgeNGramTokenFilterSide.FRONT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDYyNg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428804626", "createdAt": "2020-05-21T17:33:31Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EdgeNGramTokenFilterV2Converter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EdgeNGramTokenFilterSide;\n+import com.azure.search.documents.models.EdgeNGramTokenFilterV2;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EdgeNGramTokenFilterV2} and\n+ * {@link EdgeNGramTokenFilterV2}.\n+ */\n+public final class EdgeNGramTokenFilterV2Converter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EdgeNGramTokenFilterV2Converter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDc4OA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428804788", "createdAt": "2020-05-21T17:33:47Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EdgeNGramTokenizerConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EdgeNGramTokenizer;\n+import com.azure.search.documents.models.TokenCharacterKind;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EdgeNGramTokenizer} and\n+ * {@link EdgeNGramTokenizer}.\n+ */\n+public final class EdgeNGramTokenizerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EdgeNGramTokenizerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNDk5NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428804995", "createdAt": "2020-05-21T17:34:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ElisionTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,60 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ElisionTokenFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ElisionTokenFilter} and\n+ * {@link ElisionTokenFilter}.\n+ */\n+public final class ElisionTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ElisionTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNTM1MA==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428805350", "createdAt": "2020-05-21T17:34:47Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EntityCategoryConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EntityCategory;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EntityCategory} and\n+ * {@link EntityCategory}.\n+ */\n+public final class EntityCategoryConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EntityCategoryConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.EntityCategory} to enum\n+     * {@link EntityCategory}.\n+     */\n+    public static EntityCategory map(com.azure.search.documents.implementation.models.EntityCategory obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case LOCATION:\n+                return EntityCategory.LOCATION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNTU2MA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428805560", "createdAt": "2020-05-21T17:35:11Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EntityRecognitionSkillConverter.java", "diffHunk": "@@ -0,0 +1,125 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EntityCategory;\n+import com.azure.search.documents.models.EntityRecognitionSkill;\n+import com.azure.search.documents.models.EntityRecognitionSkillLanguage;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+import com.azure.search.documents.models.OutputFieldMappingEntry;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EntityRecognitionSkill} and\n+ * {@link EntityRecognitionSkill}.\n+ */\n+public final class EntityRecognitionSkillConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EntityRecognitionSkillConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNTg5NA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428805894", "createdAt": "2020-05-21T17:35:48Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EntityRecognitionSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EntityRecognitionSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EntityRecognitionSkillLanguage} and\n+ * {@link EntityRecognitionSkillLanguage}.\n+ */\n+public final class EntityRecognitionSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EntityRecognitionSkillLanguageConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjExMg==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806112", "createdAt": "2020-05-21T17:36:14Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/EntityRecognitionSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.EntityRecognitionSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.EntityRecognitionSkillLanguage} and\n+ * {@link EntityRecognitionSkillLanguage}.\n+ */\n+public final class EntityRecognitionSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(EntityRecognitionSkillLanguageConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.EntityRecognitionSkillLanguage} to enum\n+     * {@link EntityRecognitionSkillLanguage}.\n+     */\n+    public static EntityRecognitionSkillLanguage map(com.azure.search.documents.implementation.models.EntityRecognitionSkillLanguage obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return EntityRecognitionSkillLanguage.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjI5Nw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806297", "createdAt": "2020-05-21T17:36:37Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FacetResultConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.FacetResult;\n+\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FacetResult} and {@link FacetResult}.\n+ */\n+public final class FacetResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(FacetResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjQyNA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806424", "createdAt": "2020-05-21T17:36:53Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FieldMappingConverter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.FieldMapping;\n+import com.azure.search.documents.models.FieldMappingFunction;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FieldMapping} and {@link FieldMapping}.\n+ */\n+public final class FieldMappingConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(FieldMappingConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjYzOA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806638", "createdAt": "2020-05-21T17:37:17Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FieldMappingFunctionConverter.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.FieldMappingFunction;\n+\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FieldMappingFunction} and\n+ * {@link FieldMappingFunction}.\n+ */\n+public final class FieldMappingFunctionConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(FieldMappingFunctionConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjc5Nw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806797", "createdAt": "2020-05-21T17:37:34Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FreshnessScoringFunctionConverter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.FreshnessScoringFunction;\n+import com.azure.search.documents.models.FreshnessScoringParameters;\n+import com.azure.search.documents.models.ScoringFunctionInterpolation;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FreshnessScoringFunction} and\n+ * {@link FreshnessScoringFunction}.\n+ */\n+public final class FreshnessScoringFunctionConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(FreshnessScoringFunctionConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNjk1OA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428806958", "createdAt": "2020-05-21T17:37:52Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FreshnessScoringParametersConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.FreshnessScoringParameters;\n+\n+import java.time.Duration;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FreshnessScoringParameters} and\n+ * {@link FreshnessScoringParameters}.\n+ */\n+public final class FreshnessScoringParametersConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(FreshnessScoringParametersConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNzEyOQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428807129", "createdAt": "2020-05-21T17:38:11Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/GetIndexStatisticsResultConverter.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.GetIndexStatisticsResult;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.GetIndexStatisticsResult} and\n+ * {@link GetIndexStatisticsResult}.\n+ */\n+public final class GetIndexStatisticsResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(GetIndexStatisticsResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNzI1OQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428807259", "createdAt": "2020-05-21T17:38:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/HighWaterMarkChangeDetectionPolicyConverter.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.HighWaterMarkChangeDetectionPolicy;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.HighWaterMarkChangeDetectionPolicy}\n+ * and {@link HighWaterMarkChangeDetectionPolicy}.\n+ */\n+public final class HighWaterMarkChangeDetectionPolicyConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(HighWaterMarkChangeDetectionPolicyConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNzQ5Ng==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428807496", "createdAt": "2020-05-21T17:38:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ImageAnalysisSkillConverter.java", "diffHunk": "@@ -0,0 +1,126 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ImageAnalysisSkill;\n+import com.azure.search.documents.models.ImageAnalysisSkillLanguage;\n+import com.azure.search.documents.models.ImageDetail;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+import com.azure.search.documents.models.OutputFieldMappingEntry;\n+import com.azure.search.documents.models.VisualFeature;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ImageAnalysisSkill} and\n+ * {@link ImageAnalysisSkill}.\n+ */\n+public final class ImageAnalysisSkillConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ImageAnalysisSkillConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNzY1NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428807655", "createdAt": "2020-05-21T17:39:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ImageAnalysisSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ImageAnalysisSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ImageAnalysisSkillLanguage} and\n+ * {@link ImageAnalysisSkillLanguage}.\n+ */\n+public final class ImageAnalysisSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ImageAnalysisSkillLanguageConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwNzg2NQ==", "bodyText": "Given this is an enum does this really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428807865", "createdAt": "2020-05-21T17:39:36Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ImageAnalysisSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ImageAnalysisSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ImageAnalysisSkillLanguage} and\n+ * {@link ImageAnalysisSkillLanguage}.\n+ */\n+public final class ImageAnalysisSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ImageAnalysisSkillLanguageConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.ImageAnalysisSkillLanguage} to enum\n+     * {@link ImageAnalysisSkillLanguage}.\n+     */\n+    public static ImageAnalysisSkillLanguage map(com.azure.search.documents.implementation.models.ImageAnalysisSkillLanguage obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return ImageAnalysisSkillLanguage.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODE5MQ==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428808191", "createdAt": "2020-05-21T17:40:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/ImageDetailConverter.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.ImageDetail;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.ImageDetail} and {@link ImageDetail}.\n+ */\n+public final class ImageDetailConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(ImageDetailConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.ImageDetail} to enum {@link ImageDetail}.\n+     */\n+    public static ImageDetail map(com.azure.search.documents.implementation.models.ImageDetail obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case CELEBRITIES:\n+                return ImageDetail.CELEBRITIES;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODM1MA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428808350", "createdAt": "2020-05-21T17:40:26Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexActionConverter.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.search.documents.implementation.SerializationUtil;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.IndexAction;\n+import com.azure.search.documents.models.IndexActionType;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.util.Map;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexAction} and {@link IndexAction}.\n+ */\n+public final class IndexActionConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexActionConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODYyMg==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428808622", "createdAt": "2020-05-21T17:40:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexActionTypeConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.IndexActionType;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexActionType} and\n+ * {@link IndexActionType}.\n+ */\n+public final class IndexActionTypeConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexActionTypeConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.IndexActionType} to enum\n+     * {@link IndexActionType}.\n+     */\n+    public static IndexActionType map(com.azure.search.documents.implementation.models.IndexActionType obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case UPLOAD:\n+                return IndexActionType.UPLOAD;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODc1MA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428808750", "createdAt": "2020-05-21T17:41:12Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexBatchBaseConverter.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.IndexAction;\n+import com.azure.search.documents.models.IndexBatchBase;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexBatch} and\n+ * {@link IndexBatchBase}.\n+ */\n+public final class IndexBatchBaseConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexBatchBaseConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwODg3Ng==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428808876", "createdAt": "2020-05-21T17:41:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexDocumentsResultConverter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.IndexDocumentsResult;\n+import com.azure.search.documents.models.IndexingResult;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexDocumentsResult} and\n+ * {@link IndexDocumentsResult}.\n+ */\n+public final class IndexDocumentsResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexDocumentsResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwOTE4Nw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428809187", "createdAt": "2020-05-21T17:41:58Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexerExecutionResultConverter.java", "diffHunk": "@@ -0,0 +1,125 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.IndexerExecutionResult;\n+import com.azure.search.documents.models.IndexerExecutionStatus;\n+import com.azure.search.documents.models.SearchIndexerError;\n+import com.azure.search.documents.models.SearchIndexerWarning;\n+\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexerExecutionResult} and\n+ * {@link IndexerExecutionResult}.\n+ */\n+public final class IndexerExecutionResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexerExecutionResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwOTQyOA==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428809428", "createdAt": "2020-05-21T17:42:24Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexerExecutionStatusConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.IndexerExecutionStatus;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexerExecutionStatus} and\n+ * {@link IndexerExecutionStatus}.\n+ */\n+public final class IndexerExecutionStatusConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexerExecutionStatusConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.IndexerExecutionStatus} to enum\n+     * {@link IndexerExecutionStatus}.\n+     */\n+    public static IndexerExecutionStatus map(com.azure.search.documents.implementation.models.IndexerExecutionStatus obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case TRANSIENT_FAILURE:\n+                return IndexerExecutionStatus.TRANSIENT_FAILURE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwOTY4Ng==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428809686", "createdAt": "2020-05-21T17:42:51Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexerStatusConverter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.IndexerStatus;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ENUM_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexerStatus} and {@link IndexerStatus}.\n+ */\n+public final class IndexerStatusConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexerStatusConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.IndexerStatus} to enum\n+     * {@link IndexerStatus}.\n+     */\n+    public static IndexerStatus map(com.azure.search.documents.implementation.models.IndexerStatus obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        switch (obj) {\n+            case UNKNOWN:\n+                return IndexerStatus.UNKNOWN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwOTkxNg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428809916", "createdAt": "2020-05-21T17:43:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexingParametersConverter.java", "diffHunk": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.IndexingParameters;\n+\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexingParameters} and\n+ * {@link IndexingParameters}.\n+ */\n+public final class IndexingParametersConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexingParametersConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMDEwNQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428810105", "createdAt": "2020-05-21T17:43:36Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexingResultConverter.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.util.PrivateFieldAccessHelper;\n+import com.azure.search.documents.models.IndexingResult;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexingResult} and\n+ * {@link IndexingResult}.\n+ */\n+public final class IndexingResultConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexingResultConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMDIxNA==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428810214", "createdAt": "2020-05-21T17:43:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/IndexingScheduleConverter.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.IndexingSchedule;\n+\n+import java.time.Duration;\n+import java.time.OffsetDateTime;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.IndexingSchedule} and\n+ * {@link IndexingSchedule}.\n+ */\n+public final class IndexingScheduleConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(IndexingScheduleConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMDQwOQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428810409", "createdAt": "2020-05-21T17:44:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/InputFieldMappingEntryConverter.java", "diffHunk": "@@ -0,0 +1,73 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.InputFieldMappingEntry} and\n+ * {@link InputFieldMappingEntry}.\n+ */\n+public final class InputFieldMappingEntryConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(InputFieldMappingEntryConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMDU3Mg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428810572", "createdAt": "2020-05-21T17:44:25Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeepTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeepTokenFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeepTokenFilter} and\n+ * {@link KeepTokenFilter}.\n+ */\n+public final class KeepTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeepTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMTI4Nw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428811287", "createdAt": "2020-05-21T17:45:30Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeyPhraseExtractionSkillConverter.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+import com.azure.search.documents.models.KeyPhraseExtractionSkill;\n+import com.azure.search.documents.models.KeyPhraseExtractionSkillLanguage;\n+import com.azure.search.documents.models.OutputFieldMappingEntry;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeyPhraseExtractionSkill} and\n+ * {@link KeyPhraseExtractionSkill}.\n+ */\n+public final class KeyPhraseExtractionSkillConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeyPhraseExtractionSkillConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMTQzNw==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428811437", "createdAt": "2020-05-21T17:45:45Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeyPhraseExtractionSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeyPhraseExtractionSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeyPhraseExtractionSkillLanguage} and\n+ * {@link KeyPhraseExtractionSkillLanguage}.\n+ */\n+public final class KeyPhraseExtractionSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeyPhraseExtractionSkillLanguageConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMTYyOA==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428811628", "createdAt": "2020-05-21T17:46:06Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeyPhraseExtractionSkillLanguageConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeyPhraseExtractionSkillLanguage;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeyPhraseExtractionSkillLanguage} and\n+ * {@link KeyPhraseExtractionSkillLanguage}.\n+ */\n+public final class KeyPhraseExtractionSkillLanguageConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeyPhraseExtractionSkillLanguageConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.KeyPhraseExtractionSkillLanguage} to enum\n+     * {@link KeyPhraseExtractionSkillLanguage}.\n+     */\n+    public static KeyPhraseExtractionSkillLanguage map(com.azure.search.documents.implementation.models.KeyPhraseExtractionSkillLanguage obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return KeyPhraseExtractionSkillLanguage.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMTc3NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428811775", "createdAt": "2020-05-21T17:46:21Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeywordMarkerTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeywordMarkerTokenFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeywordMarkerTokenFilter} and\n+ * {@link KeywordMarkerTokenFilter}.\n+ */\n+public final class KeywordMarkerTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeywordMarkerTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMTkwMQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428811901", "createdAt": "2020-05-21T17:46:36Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeywordTokenizerConverter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeywordTokenizer;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeywordTokenizer} and\n+ * {@link KeywordTokenizer}.\n+ */\n+public final class KeywordTokenizerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeywordTokenizerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjA1NQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812055", "createdAt": "2020-05-21T17:46:53Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/KeywordTokenizerV2Converter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.KeywordTokenizerV2;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.KeywordTokenizerV2} and\n+ * {@link KeywordTokenizerV2}.\n+ */\n+public final class KeywordTokenizerV2Converter {\n+    private static final ClientLogger LOGGER = new ClientLogger(KeywordTokenizerV2Converter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjI0MQ==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812241", "createdAt": "2020-05-21T17:47:14Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LanguageDetectionSkillConverter.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.InputFieldMappingEntry;\n+import com.azure.search.documents.models.LanguageDetectionSkill;\n+import com.azure.search.documents.models.OutputFieldMappingEntry;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LanguageDetectionSkill} and\n+ * {@link LanguageDetectionSkill}.\n+ */\n+public final class LanguageDetectionSkillConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LanguageDetectionSkillConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjM1Ng==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812356", "createdAt": "2020-05-21T17:47:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LengthTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LengthTokenFilter;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LengthTokenFilter} and\n+ * {@link LengthTokenFilter}.\n+ */\n+public final class LengthTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LengthTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjU5MA==", "bodyText": "Again, concerns around maintainability if this functional area grows.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812590", "createdAt": "2020-05-21T17:47:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalAnalyzerConverter.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.CustomAnalyzer;\n+import com.azure.search.documents.implementation.models.LuceneStandardAnalyzer;\n+import com.azure.search.documents.implementation.models.PatternAnalyzer;\n+import com.azure.search.documents.implementation.models.StopAnalyzer;\n+import com.azure.search.documents.models.LexicalAnalyzer;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalAnalyzer} and\n+ * {@link LexicalAnalyzer}.\n+ */\n+public final class LexicalAnalyzerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalAnalyzerConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.LexicalAnalyzer} to\n+     * {@link LexicalAnalyzer}. Dedicate works to sub class converter.\n+     */\n+    public static LexicalAnalyzer map(com.azure.search.documents.implementation.models.LexicalAnalyzer obj) {\n+        if (obj instanceof LuceneStandardAnalyzer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjcyMg==", "bodyText": "This isn't being used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812722", "createdAt": "2020-05-21T17:48:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalAnalyzerNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LexicalAnalyzerName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalAnalyzerName} and\n+ * {@link LexicalAnalyzerName}.\n+ */\n+public final class LexicalAnalyzerNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalAnalyzerNameConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxMjk2Mg==", "bodyText": "Given this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428812962", "createdAt": "2020-05-21T17:48:33Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalAnalyzerNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LexicalAnalyzerName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalAnalyzerName} and\n+ * {@link LexicalAnalyzerName}.\n+ */\n+public final class LexicalAnalyzerNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalAnalyzerNameConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.LexicalAnalyzerName} to enum\n+     * {@link LexicalAnalyzerName}.\n+     */\n+    public static LexicalAnalyzerName map(com.azure.search.documents.implementation.models.LexicalAnalyzerName obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return LexicalAnalyzerName.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxODkyNA==", "bodyText": "I thought we wanted to call this ComplexSearchField.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428818924", "createdAt": "2020-05-21T17:59:09Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/models/ComplexField.java", "diffHunk": "@@ -6,25 +6,25 @@\n import java.util.List;\n \n /**\n- * A helper Field model to build a complex field which uses {@code SearchFieldDataType.EDM_COMPLEX_TYPE} or collection of\n- * {@code SearchFieldDataType.EDM_COMPLEX_TYPE}.\n+ * A helper Field model to build a complex field which uses {@code SearchFieldDataType.EDM_COMPLEX_TYPE} or\n+ * collection of {@code SearchFieldDataType.EDM_COMPLEX_TYPE}.\n  */\n-public class ComplexSearchField extends SearchFieldBase {\n+public class ComplexField extends SearchFieldBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMTM4MQ==", "bodyText": "Again, concerned about the maintainability of this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428821381", "createdAt": "2020-05-21T18:03:28Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalTokenizerConverter.java", "diffHunk": "@@ -0,0 +1,119 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.ClassicTokenizer;\n+import com.azure.search.documents.implementation.models.EdgeNGramTokenizer;\n+import com.azure.search.documents.implementation.models.KeywordTokenizer;\n+import com.azure.search.documents.implementation.models.KeywordTokenizerV2;\n+import com.azure.search.documents.implementation.models.LuceneStandardTokenizer;\n+import com.azure.search.documents.implementation.models.LuceneStandardTokenizerV2;\n+import com.azure.search.documents.implementation.models.MicrosoftLanguageStemmingTokenizer;\n+import com.azure.search.documents.implementation.models.MicrosoftLanguageTokenizer;\n+import com.azure.search.documents.implementation.models.NGramTokenizer;\n+import com.azure.search.documents.implementation.models.PathHierarchyTokenizerV2;\n+import com.azure.search.documents.implementation.models.PatternTokenizer;\n+import com.azure.search.documents.implementation.models.UaxUrlEmailTokenizer;\n+import com.azure.search.documents.models.LexicalTokenizer;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalTokenizer} and\n+ * {@link LexicalTokenizer}.\n+ */\n+public final class LexicalTokenizerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalTokenizerConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.LexicalTokenizer} to\n+     * {@link LexicalTokenizer}. Dedicate works to sub class converter.\n+     */\n+    public static LexicalTokenizer map(com.azure.search.documents.implementation.models.LexicalTokenizer obj) {\n+        if (obj instanceof PatternTokenizer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMTU1MA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428821550", "createdAt": "2020-05-21T18:03:48Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalTokenizerNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LexicalTokenizerName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalTokenizerName} and\n+ * {@link LexicalTokenizerName}.\n+ */\n+public final class LexicalTokenizerNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalTokenizerNameConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMTc0Mg==", "bodyText": "Given that this is an enum does it really need a custom and implementation representation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428821742", "createdAt": "2020-05-21T18:04:14Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LexicalTokenizerNameConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LexicalTokenizerName;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LexicalTokenizerName} and\n+ * {@link LexicalTokenizerName}.\n+ */\n+public final class LexicalTokenizerNameConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LexicalTokenizerNameConverter.class);\n+\n+    /**\n+     * Maps from enum {@link com.azure.search.documents.implementation.models.LexicalTokenizerName} to enum\n+     * {@link LexicalTokenizerName}.\n+     */\n+    public static LexicalTokenizerName map(com.azure.search.documents.implementation.models.LexicalTokenizerName obj) {\n+        if (obj == null) {\n+            return null;\n+        }\n+        return LexicalTokenizerName.fromString(obj.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMTk3MQ==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428821971", "createdAt": "2020-05-21T18:04:43Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LimitTokenFilterConverter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LimitTokenFilter;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LimitTokenFilter} and\n+ * {@link LimitTokenFilter}.\n+ */\n+public final class LimitTokenFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LimitTokenFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMjE0Ng==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428822146", "createdAt": "2020-05-21T18:05:01Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LuceneStandardAnalyzerConverter.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LuceneStandardAnalyzer;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LuceneStandardAnalyzer} and\n+ * {@link LuceneStandardAnalyzer}.\n+ */\n+public final class LuceneStandardAnalyzerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LuceneStandardAnalyzerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMjM4Mg==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428822382", "createdAt": "2020-05-21T18:05:28Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LuceneStandardTokenizerConverter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LuceneStandardTokenizer;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LuceneStandardTokenizer} and\n+ * {@link LuceneStandardTokenizer}.\n+ */\n+public final class LuceneStandardTokenizerConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LuceneStandardTokenizerConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMjU4Ng==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428822586", "createdAt": "2020-05-21T18:05:50Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/LuceneStandardTokenizerV2Converter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.LuceneStandardTokenizerV2;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.LuceneStandardTokenizerV2} and\n+ * {@link LuceneStandardTokenizerV2}.\n+ */\n+public final class LuceneStandardTokenizerV2Converter {\n+    private static final ClientLogger LOGGER = new ClientLogger(LuceneStandardTokenizerV2Converter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMjc4MA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428822780", "createdAt": "2020-05-21T18:06:13Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/MagnitudeScoringFunctionConverter.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.MagnitudeScoringFunction;\n+import com.azure.search.documents.models.MagnitudeScoringParameters;\n+import com.azure.search.documents.models.ScoringFunctionInterpolation;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.MagnitudeScoringFunction} and\n+ * {@link MagnitudeScoringFunction}.\n+ */\n+public final class MagnitudeScoringFunctionConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(MagnitudeScoringFunctionConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMzAyNw==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428823027", "createdAt": "2020-05-21T18:06:40Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/MagnitudeScoringParametersConverter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.MagnitudeScoringParameters;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.MagnitudeScoringParameters} and\n+ * {@link MagnitudeScoringParameters}.\n+ */\n+public final class MagnitudeScoringParametersConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(MagnitudeScoringParametersConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyMzE3NA==", "bodyText": "This isn't used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428823174", "createdAt": "2020-05-21T18:06:56Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/MappingCharFilterConverter.java", "diffHunk": "@@ -0,0 +1,60 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.MappingCharFilter;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.MappingCharFilter} and\n+ * {@link MappingCharFilter}.\n+ */\n+public final class MappingCharFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(MappingCharFilterConverter.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2Mzk0ODY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-416394864", "createdAt": "2020-05-21T18:37:19Z", "commit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODozNzoxOVrOGY-SLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODozNzo0MlrOGY-TCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzOTQ2OQ==", "bodyText": "Should we check Field.isAccessible before needing to call into privileged code?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428839469", "createdAt": "2020-05-21T18:37:19Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/PrivateFieldAccessHelper.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.util;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.lang.reflect.Field;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n+/**\n+ * The helper class for getter only models converters.\n+ */\n+public class PrivateFieldAccessHelper {\n+    private static final ClientLogger LOGGER = new ClientLogger(PrivateFieldAccessHelper.class);\n+\n+    /**\n+     * Set value to the model private properties.\n+     *\n+     * @param obj The instance which sets the value to.\n+     * @param fieldName The fieldName to set.\n+     * @param value The value sets to the instance\n+     * @param <T> Generic type of models.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> void set(T obj, String fieldName, Object value) {\n+        try {\n+            Field f1 = obj.getClass().getDeclaredField(fieldName);\n+            AccessController.doPrivileged(new PrivilegedAction<T>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzOTY5MQ==", "bodyText": "Same question about checking Field.isAccessible.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r428839691", "createdAt": "2020-05-21T18:37:42Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/PrivateFieldAccessHelper.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.util;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.lang.reflect.Field;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n+/**\n+ * The helper class for getter only models converters.\n+ */\n+public class PrivateFieldAccessHelper {\n+    private static final ClientLogger LOGGER = new ClientLogger(PrivateFieldAccessHelper.class);\n+\n+    /**\n+     * Set value to the model private properties.\n+     *\n+     * @param obj The instance which sets the value to.\n+     * @param fieldName The fieldName to set.\n+     * @param value The value sets to the instance\n+     * @param <T> Generic type of models.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> void set(T obj, String fieldName, Object value) {\n+        try {\n+            Field f1 = obj.getClass().getDeclaredField(fieldName);\n+            AccessController.doPrivileged(new PrivilegedAction<T>() {\n+                @Override\n+                public T run() {\n+                    f1.setAccessible(true);\n+                    return null;\n+                }\n+            });\n+            f1.set(obj, value);\n+        } catch (NoSuchFieldException | IllegalAccessException e) {\n+            throw LOGGER.logExceptionAsError(new RuntimeException(e));\n+        }\n+    }\n+\n+    /**\n+     * Get values out from private private.\n+     *\n+     * @param obj The instance which gets the value from.\n+     * @param fieldName The field name to get\n+     * @param outputClass The field property class.\n+     * @param <T> Generic type of models.\n+     * @param <I> The type of the field properties.\n+     * @return The values of instance property.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T, I> I get(T obj, String fieldName, Class<I> outputClass) {\n+\n+        try {\n+            Field f1 = obj.getClass().getDeclaredField(fieldName);\n+            AccessController.doPrivileged(new PrivilegedAction<T>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98b526c272a613efdcdd407f33179764d4a7ef98", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/98b526c272a613efdcdd407f33179764d4a7ef98", "committedDate": "2020-05-21T21:34:11Z", "message": "Make converter changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6331349fb015df459c3b16aba63497359f67a6cd", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6331349fb015df459c3b16aba63497359f67a6cd", "committedDate": "2020-05-21T21:37:40Z", "message": "swagger readme changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b33ffb28c06e3eb5546a3e894b8d0a8bd22424db", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b33ffb28c06e3eb5546a3e894b8d0a8bd22424db", "committedDate": "2020-05-21T21:39:32Z", "message": "delte constants in converters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2f2f4ff834bd7b47a0f50054b065262d40c4a7e7", "committedDate": "2020-05-21T22:50:56Z", "message": "Added back copyright"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTU4MDk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-416558097", "createdAt": "2020-05-21T23:29:59Z", "commit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTEwNzYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#pullrequestreview-418110761", "createdAt": "2020-05-26T09:09:47Z", "commit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTowOTo0OFrOGaVbeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTo0NTozNlrOGaWvsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2NzI1Ng==", "bodyText": "This has been resolved from offline discussion and will continue with this approach in the short term until the long term approach to support such transformations in autorest itself is available.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430267256", "createdAt": "2020-05-26T09:09:48Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/CharFilterConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.implementation.models.MappingCharFilter;\n+import com.azure.search.documents.implementation.models.PatternReplaceCharFilter;\n+import com.azure.search.documents.models.CharFilter;\n+\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_EXTERNAL_ERROR_MSG;\n+import static com.azure.search.documents.implementation.util.Constants.ABSTRACT_INTERNAL_ERROR_MSG;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.CharFilter} and {@link CharFilter}.\n+ */\n+public final class CharFilterConverter {\n+    private static final ClientLogger LOGGER = new ClientLogger(CharFilterConverter.class);\n+\n+    /**\n+     * Maps abstract class from {@link com.azure.search.documents.implementation.models.CharFilter} to\n+     * {@link CharFilter}. Dedicate works to sub class converter.\n+     */\n+    public static CharFilter map(com.azure.search.documents.implementation.models.CharFilter obj) {\n+        if (obj instanceof PatternReplaceCharFilter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MTg5OQ=="}, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3MzgzNg==", "bodyText": "nit: remove extra newline in all these converters.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430273836", "createdAt": "2020-05-26T09:20:42Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/FreshnessScoringFunctionConverter.java", "diffHunk": "@@ -0,0 +1,80 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.converters;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.search.documents.models.FreshnessScoringFunction;\n+import com.azure.search.documents.models.FreshnessScoringParameters;\n+import com.azure.search.documents.models.ScoringFunctionInterpolation;\n+\n+/**\n+ * A converter between {@link com.azure.search.documents.implementation.models.FreshnessScoringFunction} and\n+ * {@link FreshnessScoringFunction}.\n+ */\n+public final class FreshnessScoringFunctionConverter {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NjQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String ENUM_INTERNAL_ERROR_MSG = \"The enum does not exist in internal used model %s.\";\n          \n          \n            \n                public static final String ENUM_INTERNAL_ERROR_MSG = \"The enum does not exist in internally used model %s.\";", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430276495", "createdAt": "2020-05-26T09:25:09Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/Constants.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.util;\n+\n+public class Constants {\n+    public static final String ENUM_INTERNAL_ERROR_MSG = \"The enum does not exist in internal used model %s.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NjY0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String ENUM_EXTERNAL_ERROR_MSG = \"The enum does not exist in external used model %s.\";\n          \n          \n            \n                public static final String ENUM_EXTERNAL_ERROR_MSG = \"The enum does not exist in externally used model %s.\";", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430276648", "createdAt": "2020-05-26T09:25:23Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/Constants.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.util;\n+\n+public class Constants {\n+    public static final String ENUM_INTERNAL_ERROR_MSG = \"The enum does not exist in internal used model %s.\";\n+    public static final String ENUM_EXTERNAL_ERROR_MSG = \"The enum does not exist in external used model %s.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI4MDUxNw==", "bodyText": "Why is the exception message used to determine if it's a 404 error? You can check if the status code in the response is 404 instead. exception.getResponse().getStatusCode() == 404.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430280517", "createdAt": "2020-05-26T09:31:45Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/DocumentResponseConversions.java", "diffHunk": "@@ -26,13 +27,19 @@\n      * Converts the {@link Throwable} into a more descriptive exception type if the {@link SearchDocument} isn't found.\n      *\n      * @param throwable Throwable thrown during a API call.\n-     * @return The {@link Throwable} mapped to a more descriptive exception type if the {@link SearchDocument} isn't found,\n-     * otherwise the passed {@link Throwable} unmodified.\n+     * @return The {@link Throwable} mapped to a more descriptive exception type if the {@link SearchDocument}\n+     * isn't found, otherwise the passed {@link Throwable} unmodified.\n      */\n     public static Throwable exceptionMapper(Throwable throwable) {\n-        return (throwable instanceof HttpResponseException && EMPTY_BODY_404.equalsIgnoreCase(throwable.getMessage()))\n-            ? new ResourceNotFoundException(DOCUMENT_NOT_FOUND, ((HttpResponseException) throwable).getResponse())\n-            : throwable;\n+        if (!(throwable instanceof SearchErrorException)) {\n+            return throwable;\n+        }\n+\n+        SearchErrorException exception = (SearchErrorException) throwable;\n+        if (EMPTY_BODY_404.equalsIgnoreCase(throwable.getMessage())) {\n+            return new ResourceNotFoundException(DOCUMENT_NOT_FOUND, exception.getResponse());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2f4ff834bd7b47a0f50054b065262d40c4a7e7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI4ODgxOA==", "bodyText": "Agree with Alan - do this only when required instead of always doing this as this has performance implications.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11317#discussion_r430288818", "createdAt": "2020-05-26T09:45:36Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/PrivateFieldAccessHelper.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.search.documents.implementation.util;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.lang.reflect.Field;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+\n+/**\n+ * The helper class for getter only models converters.\n+ */\n+public class PrivateFieldAccessHelper {\n+    private static final ClientLogger LOGGER = new ClientLogger(PrivateFieldAccessHelper.class);\n+\n+    /**\n+     * Set value to the model private properties.\n+     *\n+     * @param obj The instance which sets the value to.\n+     * @param fieldName The fieldName to set.\n+     * @param value The value sets to the instance\n+     * @param <T> Generic type of models.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> void set(T obj, String fieldName, Object value) {\n+        try {\n+            Field f1 = obj.getClass().getDeclaredField(fieldName);\n+            AccessController.doPrivileged(new PrivilegedAction<T>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzOTQ2OQ=="}, "originalCommit": {"oid": "6d3728b7c7edbd6edf4c41b152deac08ecbdf7da"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ccc2833433ac7cfcb803c0e143b525a436d06f", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/18ccc2833433ac7cfcb803c0e143b525a436d06f", "committedDate": "2020-05-26T16:48:47Z", "message": "Update sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/Constants.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715cab180147a1c4634677bdbfdec4bea8ceb337", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/715cab180147a1c4634677bdbfdec4bea8ceb337", "committedDate": "2020-05-26T16:49:08Z", "message": "Update sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/util/Constants.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13dbc30119f4196c0321398c7a329abf3001877c", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/13dbc30119f4196c0321398c7a329abf3001877c", "committedDate": "2020-05-26T17:02:41Z", "message": "Addressed feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee5e6a1c307df0407859aa722e7f98570ff69515", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ee5e6a1c307df0407859aa722e7f98570ff69515", "committedDate": "2020-05-26T17:03:02Z", "message": "Merge branch 'converter_layer' of https://github.com/sima-zhu/azure-sdk-for-java into converter_layer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2642c0b00b83b0efcd0310f00a015087b6edb5fe", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2642c0b00b83b0efcd0310f00a015087b6edb5fe", "committedDate": "2020-05-26T17:09:43Z", "message": "remove message check and check on status code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28a9156ea849bf9a02432af4ee2e4a1981be31e", "author": {"user": {"login": "sima-zhu", "name": "Sima Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a28a9156ea849bf9a02432af4ee2e4a1981be31e", "committedDate": "2020-05-26T17:49:06Z", "message": "change java 8 compitable isAccessible"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4168, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}