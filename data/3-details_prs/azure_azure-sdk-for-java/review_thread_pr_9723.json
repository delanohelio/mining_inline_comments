{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjA5NjA4", "number": 9723, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMjowN1rODtr4ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDoxNzo1N1rODxbrcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjMxNDgzOnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMjowN1rOF_QiCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1OToxMVrOGDD3uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng==", "bodyText": "Do you need to specify the path? I think it is redundant.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r401875466", "createdAt": "2020-04-01T20:02:07Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxMTAyNQ==", "bodyText": "It is required to because it is used to reference other tools called by java-publishing.yml. e.g here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404511025", "createdAt": "2020-04-07T03:14:46Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MjMzMw==", "bodyText": "I'm Ok with it being here but doesn't it already default to that value?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404952333", "createdAt": "2020-04-07T16:37:21Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDI3OQ==", "bodyText": "Also we should consider putting that in one of the azure-sdk-build-tools templates or at least pass the location as a template parameter as we don't want to have these hidden contracts about where things need to be setup.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404954279", "createdAt": "2020-04-07T16:40:16Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NTYyMg==", "bodyText": "The default checkout path is usually just s so it still needs to be specified.\nI moved java-publishing.yml to the Java Repo and passed the buildTools path as a parameter.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405065622", "createdAt": "2020-04-07T19:41:25Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MjMyOA==", "bodyText": "OK I guess it only adds the repo path if it detects multiple checkouts.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405862328", "createdAt": "2020-04-08T22:59:11Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NTQ2Ng=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjMyNTc2OnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowNTozN1rOF_QpMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDowMTo1N1rOGByDNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NzI5Nw==", "bodyText": "this path doesn't look correct.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r401877297", "createdAt": "2020-04-01T20:05:37Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: /tools/gpg/gpg.yml\n+                      - template: /tools/java-publishing/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: MavenCentral\n+                      # After publishing to Maven, publish to the azure-sdk-for-java feed. The reason for\n+                      # this is that the azure-sdk-for-java feed will have the package available immediately\n+                      # whereas Maven can take several hours for the package to become available.\n+                      - template: /tools/java-publishing/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: JavaDevFeed\n+\n+          - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:\n+            - deployment: PublishDocs\n+              displayName: Publish Docs to GitHubIO Blob Storage\n+              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))\n+              environment: githubio\n+              dependsOn: PublishPackage\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: self\n+                      - pwsh: |\n+                          Get-ChildItem -Recurse $(Pipeline.Workspace)\n+                          New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                          Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        workingDirectory: $(Pipeline.Workspace)\n+                        displayName: Stage artifacts\n+                      - pwsh: |\n+                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        workingDirectory: $(Pipeline.Workspace)\n+                        displayName: Output Visible Artifacts\n+                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml\n+                        parameters:\n+                          FolderForUpload: '$(Pipeline.Workspace)/${{artifact.safeName}}'\n+                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'\n+                          BlobName: '$(azure-sdk-docs-prod-blob-name)'\n+                          TargetLanguage: 'java'\n+\n+                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.\n+                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'\n+\n+          - ${{if ne(artifact.options.skipUpdatePackageVersion, 'true')}}:\n+            - deployment: UpdatePackageVersion\n+              displayName: \"Update Package Version\"\n+              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))\n+              environment: github\n+              dependsOn: PublishPackage\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: self\n+\n+                      - task: UsePythonVersion@0\n+                        displayName: 'Use Python 3.6'\n+                        inputs:\n+                          versionSpec: '3.6'\n+\n+                      - script: |\n+                          python --version\n+                          python eng/versioning/set_versions.py --build-type ${{ parameters.SDKType }} --increment-version --ai ${{ artifact.name }} --gi ${{ artifact.groupId }}\n+                        workingDirectory: $(Pipeline.Workspace)/s/azure-sdk-for-java\n+                        displayName: Increment package version for ${{ artifact.groupId }} ${{ artifact.name }}\n+\n+                      - script: |\n+                          python --version\n+                          python eng/versioning/update_versions.py --update-type library --build-type ${{ parameters.SDKType }} --avi --sr\n+                        workingDirectory: $(Pipeline.Workspace)/s/azure-sdk-for-java\n+                        displayName: Update pom files for new version of ${{ artifact.groupId }} ${{ artifact.name }}\n+\n+                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml\n+                        parameters:\n+                          RepoName: azure-sdk-for-java\n+                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)\n+                          CommitMsg: \"Increment package version after release of ${{ artifact.groupId }} ${{ artifact.name }}\"\n+                          PRTitle: \"Increment version for ${{ parameters.ServiceDirectory }} releases\"\n+\n+  - stage: Integration\n+    dependsOn: Signing\n+    jobs:\n+    - job: PublishPackages\n+      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))\n+      displayName: Publish package to daily feed\n+      pool:\n+        vmImage: windows-2019\n+      variables:\n+        skipComponentGovernanceDetection: true\n+      steps:\n+      - checkout: azure-sdk-build-tools\n+        path: azure-sdk-build-tools\n+\n+      - download: current\n+        artifact: ${{parameters.ArtifactName}}-signed\n+        timeoutInMinutes: 5\n+\n+      - template: /tools/gpg/gpg.yml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMTc4MA==", "bodyText": "Updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404521780", "createdAt": "2020-04-07T04:01:57Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: /tools/gpg/gpg.yml\n+                      - template: /tools/java-publishing/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: MavenCentral\n+                      # After publishing to Maven, publish to the azure-sdk-for-java feed. The reason for\n+                      # this is that the azure-sdk-for-java feed will have the package available immediately\n+                      # whereas Maven can take several hours for the package to become available.\n+                      - template: /tools/java-publishing/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: JavaDevFeed\n+\n+          - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:\n+            - deployment: PublishDocs\n+              displayName: Publish Docs to GitHubIO Blob Storage\n+              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))\n+              environment: githubio\n+              dependsOn: PublishPackage\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: self\n+                      - pwsh: |\n+                          Get-ChildItem -Recurse $(Pipeline.Workspace)\n+                          New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                          Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        workingDirectory: $(Pipeline.Workspace)\n+                        displayName: Stage artifacts\n+                      - pwsh: |\n+                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        workingDirectory: $(Pipeline.Workspace)\n+                        displayName: Output Visible Artifacts\n+                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml\n+                        parameters:\n+                          FolderForUpload: '$(Pipeline.Workspace)/${{artifact.safeName}}'\n+                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'\n+                          BlobName: '$(azure-sdk-docs-prod-blob-name)'\n+                          TargetLanguage: 'java'\n+\n+                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.\n+                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'\n+\n+          - ${{if ne(artifact.options.skipUpdatePackageVersion, 'true')}}:\n+            - deployment: UpdatePackageVersion\n+              displayName: \"Update Package Version\"\n+              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))\n+              environment: github\n+              dependsOn: PublishPackage\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: self\n+\n+                      - task: UsePythonVersion@0\n+                        displayName: 'Use Python 3.6'\n+                        inputs:\n+                          versionSpec: '3.6'\n+\n+                      - script: |\n+                          python --version\n+                          python eng/versioning/set_versions.py --build-type ${{ parameters.SDKType }} --increment-version --ai ${{ artifact.name }} --gi ${{ artifact.groupId }}\n+                        workingDirectory: $(Pipeline.Workspace)/s/azure-sdk-for-java\n+                        displayName: Increment package version for ${{ artifact.groupId }} ${{ artifact.name }}\n+\n+                      - script: |\n+                          python --version\n+                          python eng/versioning/update_versions.py --update-type library --build-type ${{ parameters.SDKType }} --avi --sr\n+                        workingDirectory: $(Pipeline.Workspace)/s/azure-sdk-for-java\n+                        displayName: Update pom files for new version of ${{ artifact.groupId }} ${{ artifact.name }}\n+\n+                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml\n+                        parameters:\n+                          RepoName: azure-sdk-for-java\n+                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)\n+                          CommitMsg: \"Increment package version after release of ${{ artifact.groupId }} ${{ artifact.name }}\"\n+                          PRTitle: \"Increment version for ${{ parameters.ServiceDirectory }} releases\"\n+\n+  - stage: Integration\n+    dependsOn: Signing\n+    jobs:\n+    - job: PublishPackages\n+      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))\n+      displayName: Publish package to daily feed\n+      pool:\n+        vmImage: windows-2019\n+      variables:\n+        skipComponentGovernanceDetection: true\n+      steps:\n+      - checkout: azure-sdk-build-tools\n+        path: azure-sdk-build-tools\n+\n+      - download: current\n+        artifact: ${{parameters.ArtifactName}}-signed\n+        timeoutInMinutes: 5\n+\n+      - template: /tools/gpg/gpg.yml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NzI5Nw=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 229}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjMyNzIxOnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowNjowOFrOF_QqOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDowMTo1MFrOGByDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NzU2MQ==", "bodyText": "Are these paths correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r401877561", "createdAt": "2020-04-01T20:06:08Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: /tools/gpg/gpg.yml\n+                      - template: /tools/java-publishing/java-publishing.yml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMTc2MQ==", "bodyText": "Updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404521761", "createdAt": "2020-04-07T04:01:50Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: /tools/gpg/gpg.yml\n+                      - template: /tools/java-publishing/java-publishing.yml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NzU2MQ=="}, "originalCommit": {"oid": "b3bb9847536c0c96932fcec3a3f0039df113293d"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ5NDcyOnYy", "diffSide": "RIGHT", "path": "eng/common/scripts/Submit-PullRequest.ps1", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0MjoxM1rOGBYSFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDowNDo1OFrOGByGAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5OTYwNA==", "bodyText": "I realize these are here for diagnostics purposes but we're definitely going to want to remove them before merging.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404099604", "createdAt": "2020-04-06T13:42:13Z", "author": {"login": "JimSuplizio"}, "path": "eng/common/scripts/Submit-PullRequest.ps1", "diffHunk": "@@ -61,10 +70,13 @@ else {\n     body                  = $PRBody\n     maintainer_can_modify = $true\n   }\n+  Write-Host \"Got Here 6\"\n \n   $resp = Invoke-RestMethod -Method POST -Headers $headers `\n-                            https://api.github.com/repos/$RepoOwner/$RepoName/pulls `\n-                            -Body ($data | ConvertTo-Json)\n+    https://api.github.com/repos/$RepoOwner/$RepoName/pulls `\n+    -Body ($data | ConvertTo-Json)\n+  Write-Host \"Got Here 7\"\n   $resp | Write-Verbose\n+  Write-Host \"Got Here 8\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85dc68284787f2097aa9e815f6dd2bdb2634899"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyMjQ5OA==", "bodyText": "Fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404522498", "createdAt": "2020-04-07T04:04:58Z", "author": {"login": "chidozieononiwu"}, "path": "eng/common/scripts/Submit-PullRequest.ps1", "diffHunk": "@@ -61,10 +70,13 @@ else {\n     body                  = $PRBody\n     maintainer_can_modify = $true\n   }\n+  Write-Host \"Got Here 6\"\n \n   $resp = Invoke-RestMethod -Method POST -Headers $headers `\n-                            https://api.github.com/repos/$RepoOwner/$RepoName/pulls `\n-                            -Body ($data | ConvertTo-Json)\n+    https://api.github.com/repos/$RepoOwner/$RepoName/pulls `\n+    -Body ($data | ConvertTo-Json)\n+  Write-Host \"Got Here 7\"\n   $resp | Write-Verbose\n+  Write-Host \"Got Here 8\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5OTYwNA=="}, "originalCommit": {"oid": "b85dc68284787f2097aa9e815f6dd2bdb2634899"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjg5MTAxOnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo0MTozNVrOGCMgCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1NjoyM1rOGDDz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NTE0NQ==", "bodyText": "Is there a reason we don't move the publishing template and scripts into the java repo?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r404955145", "createdAt": "2020-04-07T16:41:35Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: tools/java-publishing/java-publishing.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5752b79d2516ef1f90f82582f9fefdd93da2585e"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyMzg4NA==", "bodyText": "We don't want the GPG tooling itself in the repo just yet ;)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405123884", "createdAt": "2020-04-07T21:27:47Z", "author": {"login": "mitchdenny"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: tools/java-publishing/java-publishing.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NTE0NQ=="}, "originalCommit": {"oid": "5752b79d2516ef1f90f82582f9fefdd93da2585e"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MDY1OA==", "bodyText": "Agreed but the path to gpg tool could be passed to the java publish template correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405860658", "createdAt": "2020-04-08T22:54:30Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: tools/java-publishing/java-publishing.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NTE0NQ=="}, "originalCommit": {"oid": "5752b79d2516ef1f90f82582f9fefdd93da2585e"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTM0MQ==", "bodyText": "Yep that would work.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405861341", "createdAt": "2020-04-08T22:56:23Z", "author": {"login": "mitchdenny"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,237 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: tools/java-publishing/java-publishing.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NTE0NQ=="}, "originalCommit": {"oid": "5752b79d2516ef1f90f82582f9fefdd93da2585e"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODYzMDU0OnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/steps/java-publishing.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzowMDowN1rOGDD47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxNzoxOVrOGE1q1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MjYzNg==", "bodyText": "Why wouldn't the Publish-MavenPackage.ps1 also be moved out into this repo?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405862636", "createdAt": "2020-04-08T23:00:07Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,31 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        ${{parameters.BuildToolsPath}}/scripts/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}} -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}} -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1 -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken) -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8ab57feeb008911aa3e391acfbc82e8a103053"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNDkxMw==", "bodyText": "I guess it could also be moved. It was not marked on the epic to be moved. The only thing that looks sensitive is the $sonaTypeProfileID but I guess that's fine to be public still.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407724913", "createdAt": "2020-04-13T21:13:35Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,31 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        ${{parameters.BuildToolsPath}}/scripts/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}} -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}} -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1 -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken) -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MjYzNg=="}, "originalCommit": {"oid": "ae8ab57feeb008911aa3e391acfbc82e8a103053"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNjgwNg==", "bodyText": "Yeah ... can be moved.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407726806", "createdAt": "2020-04-13T21:17:19Z", "author": {"login": "mitchdenny"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,31 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        ${{parameters.BuildToolsPath}}/scripts/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}} -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}} -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1 -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken) -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MjYzNg=="}, "originalCommit": {"oid": "ae8ab57feeb008911aa3e391acfbc82e8a103053"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODYzMTg3OnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/steps/java-publishing.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzowMDo0NFrOGDD5uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzowMDo0NFrOGDD5uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2Mjg0MQ==", "bodyText": "To enable better reading without scrolling can you enable link wrapping for these steps.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r405862841", "createdAt": "2020-04-08T23:00:44Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,31 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        ${{parameters.BuildToolsPath}}/scripts/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}} -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}} -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1 -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken) -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue\n+      workingDirectory: $(Agent.BuildDirectory)\n+      displayName: 'Publish to Azure Artifacts'\n+\n+  - ${{if eq(parameters.Target, 'JavaDevFeed')}}:\n+    - pwsh: |\n+        ${{parameters.BuildToolsPath}}/scripts/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}} -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}} -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1 -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken) -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8ab57feeb008911aa3e391acfbc82e8a103053"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTM3MDg2OnYy", "diffSide": "RIGHT", "path": "eng/common/scripts/Submit-PullRequest.ps1", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjoyOToyMlrOGE3htA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjoyOToyMlrOGE3htA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1NzIzNg==", "bodyText": "Lets be sure to remove this before merging.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407757236", "createdAt": "2020-04-13T22:29:22Z", "author": {"login": "weshaggard"}, "path": "eng/common/scripts/Submit-PullRequest.ps1", "diffHunk": "@@ -45,16 +45,23 @@ Write-Host $MyInvocation.Line\n \n $query = \"state=open&head=${PROwner}:${PRBranch}&base=${BaseBranch}\"\n \n+Write-Host \"Got Here 2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTM3MzczOnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/steps/java-publishing.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozMDozOFrOGE3jhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozNDozOVrOGE3o6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1NzcwMA==", "bodyText": "FWIW You can change this from | to > and not need to put the backtic at the end of each line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407757700", "createdAt": "2020-04-13T22:30:38Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,47 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        eng/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}}` \n+        -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}}` \n+        -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1` \n+        -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken)` \n+        -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue\n+      workingDirectory: $(Agent.BuildDirectory)\n+      displayName: 'Publish to Azure Artifacts'\n+\n+  - ${{if eq(parameters.Target, 'JavaDevFeed')}}:\n+    - pwsh: |\n+        eng/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}}` \n+        -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}}` \n+        -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1` \n+        -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken)` \n+        -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue\n+      workingDirectory: $(Agent.BuildDirectory)\n+      displayName: 'Publish to Azure Artifacts'\n+        \n+  - ${{if eq(parameters.Target, 'AndroidDevFeed')}}:\n+    - pwsh: |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1OTA4MA==", "bodyText": "Thanks a lot Wes, I'll update that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407759080", "createdAt": "2020-04-13T22:34:39Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/steps/java-publishing.yml", "diffHunk": "@@ -0,0 +1,47 @@\n+parameters:\n+  ArtifactDirectory: not-specified\n+  RepositoryUrl: not-specified\n+  GroupID: not-specified\n+  ArtifactID: not-specified\n+  BuildToolsPath: ''\n+\n+steps:\n+  - ${{if eq(parameters.Target, 'Burner')}}:\n+    - pwsh: |\n+        eng/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}}` \n+        -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}}` \n+        -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-$(Build.BuildID)/maven/v1` \n+        -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken)` \n+        -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue\n+      workingDirectory: $(Agent.BuildDirectory)\n+      displayName: 'Publish to Azure Artifacts'\n+\n+  - ${{if eq(parameters.Target, 'JavaDevFeed')}}:\n+    - pwsh: |\n+        eng/Publish-MavenPackages.ps1 -ArtifactDirectory ${{parameters.ArtifactDirectory}}` \n+        -GroupIDFilter ${{parameters.GroupID}} -ArtifactIDFilter ${{parameters.ArtifactID}}` \n+        -RepositoryUrl https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1` \n+        -RepositoryUsername nobody -RepositoryPassword $(System.AccessToken)` \n+        -GPGExecutablePath ${{parameters.BuildToolsPath}}/tools/gpg/bin/gpg.exe -InformationAction Continue\n+      workingDirectory: $(Agent.BuildDirectory)\n+      displayName: 'Publish to Azure Artifacts'\n+        \n+  - ${{if eq(parameters.Target, 'AndroidDevFeed')}}:\n+    - pwsh: |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1NzcwMA=="}, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTM3OTM2OnYy", "diffSide": "RIGHT", "path": "eng/Publish-MavenPackages.ps1", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozMzowOFrOGE3m3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjo0MzoyOVrOGE30jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODU1Ng==", "bodyText": "For consistency it might be better to move this into a eng\\scripts directory.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407758556", "createdAt": "2020-04-13T22:33:08Z", "author": {"login": "weshaggard"}, "path": "eng/Publish-MavenPackages.ps1", "diffHunk": "@@ -0,0 +1,294 @@\n+param(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1OTE4NQ==", "bodyText": "Should I replicate this pattern for all the other Repos?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407759185", "createdAt": "2020-04-13T22:34:57Z", "author": {"login": "chidozieononiwu"}, "path": "eng/Publish-MavenPackages.ps1", "diffHunk": "@@ -0,0 +1,294 @@\n+param(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODU1Ng=="}, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2MjA2MQ==", "bodyText": "I mean  do we want to eventually move all the freely hanging script files into a script directory for all the repos?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407762061", "createdAt": "2020-04-13T22:43:29Z", "author": {"login": "chidozieononiwu"}, "path": "eng/Publish-MavenPackages.ps1", "diffHunk": "@@ -0,0 +1,294 @@\n+param(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODU1Ng=="}, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTM4MTc1OnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozNDoxMFrOGE3oRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMjozNTo1N1rOGE3qqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODkxNw==", "bodyText": "I assume BuildToolsPath is no longer needed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407758917", "createdAt": "2020-04-13T22:34:10Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: /eng/pipelines/templates/steps/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: MavenCentral\n+                          BuildToolsPath: $(Pipeline.Workspace)/azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1OTQzNw==", "bodyText": "It's still used to reference gpg.exe", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407759437", "createdAt": "2020-04-13T22:35:40Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: /eng/pipelines/templates/steps/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: MavenCentral\n+                          BuildToolsPath: $(Pipeline.Workspace)/azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODkxNw=="}, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1OTUzMA==", "bodyText": "Nevermind it is still used for the gpg tool. Perhaps to make that clear we should update it to that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407759530", "createdAt": "2020-04-13T22:35:57Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools\n+                      - template: /eng/pipelines/templates/steps/java-publishing.yml\n+                        parameters:\n+                          ArtifactID: ${{artifact.name}}\n+                          GroupID: ${{artifact.groupId}}\n+                          ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                          Target: MavenCentral\n+                          BuildToolsPath: $(Pipeline.Workspace)/azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc1ODkxNw=="}, "originalCommit": {"oid": "b3340ae5c25c04066f7b9ad0230cfafbbc253a55"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTYwMzA2OnYy", "diffSide": "RIGHT", "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDoxNzo1N1rOGE5rTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMDowMToyOFrOGGPwAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5MjQ2MA==", "bodyText": "Can you please file a follow-up issue to see if we can find a way to decouple the knowledge of things like where the gpg tooling lives between these different steps? Ideally we would have something like:\n- template: tools/gpg/gpg.yml@azure-sdk-build-tools\n  parameters: \n    GPGPath: $(GPGPath) # We could consider either passing it to both or making GPGPath an output variable from this template. \n\n- template: /eng/pipelines/templates/steps/java-publishing.yml\n  parameters:\n    ArtifactID: ${{artifact.name}}\n    GroupID: ${{artifact.groupId}}\n    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n    Target: MavenCentral\n    GPGPath: $(GPGPath)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r407792460", "createdAt": "2020-04-14T00:17:57Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd8e47a41ac9899b3cd138d43c64e558e24e1b25"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUwOTU5Nw==", "bodyText": "Created issue here. Will work on that immediately after this is merged.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r408509597", "createdAt": "2020-04-15T00:19:36Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5MjQ2MA=="}, "originalCommit": {"oid": "fd8e47a41ac9899b3cd138d43c64e558e24e1b25"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NzM2Ng==", "bodyText": "@chidozieononiwu just making sure you noticed this comment.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r409197366", "createdAt": "2020-04-15T23:44:45Z", "author": {"login": "weshaggard"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5MjQ2MA=="}, "originalCommit": {"oid": "fd8e47a41ac9899b3cd138d43c64e558e24e1b25"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIwMjY5MA==", "bodyText": "Yes I did, sorry, my previous comment got stuck on pending I think it was expecting me to also post a review which I didn't_ earlier. I have created an issue for that here and will work on it soon", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9723#discussion_r409202690", "createdAt": "2020-04-16T00:01:28Z", "author": {"login": "chidozieononiwu"}, "path": "eng/pipelines/templates/stages/archetype-java-release.yml", "diffHunk": "@@ -0,0 +1,240 @@\n+parameters:\n+  Artifacts: []\n+  ArtifactName: 'not-specified'\n+\n+stages:\n+  # The signing stage is responsible for submitting binaries to ESRP for our official signing\n+  # where appropriate and also meeting any other signing requirements for particular artifacts,\n+  # in this case we do GPG signing in order to publish to Maven Central. At the moment signing\n+  # is protected by an approval check but this may be removed in the future.\n+  - stage: Signing\n+    dependsOn: ${{parameters.DependsOn}}\n+    jobs:\n+      - deployment: SignPackage\n+        environment: esrp\n+        timeoutInMinutes: 20\n+        pool:\n+          vmImage: ubuntu-16.04\n+\n+        strategy:\n+          runOnce:\n+            deploy:\n+              steps:\n+                - checkout: none\n+\n+                - download: current\n+                  artifact: ${{parameters.ArtifactName}}\n+                  timeoutInMinutes: 5\n+\n+                - template: tools/java-esrp-signing/java-esrp-signing.yml@azure-sdk-build-tools\n+                  parameters:\n+                    Artifacts: ${{parameters.Artifacts}}\n+                    ArtifactDirectory: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+\n+                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}\n+                  artifact: ${{parameters.ArtifactName}}-signed\n+                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'\n+                  timeoutInMinutes: 5\n+\n+  # We generate two interdepdent stages for each artifact listed in the ci.yml file, creates the release\n+  # in GitHub. The Release stage publishes to Maven Central. Both stages require approval since they\n+  # effectively burn the version number. For testing of packages prior to burning the version number -\n+  # the Validation step below publishes a package to a \"burner\" feed which is cleaned up after the\n+  # pipeline completes.\n+  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:\n+    - ${{ each artifact in parameters.Artifacts }}:\n+      - stage: Release_${{artifact.safeName}}\n+        displayName: 'Release: ${{artifact.name}}'\n+        dependsOn: Signing\n+        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-java-pr'))\n+        jobs:\n+          - job: VerifyReleaseVersion\n+            displayName: \"Verify release version\"\n+            condition: ne(variables['Skip.VersionVerification'], 'true')\n+            pool:\n+              vmImage: ubuntu-16.04\n+\n+            steps:\n+              - task: UsePythonVersion@0\n+                displayName: 'Use Python 3.6'\n+                inputs:\n+                  versionSpec: '3.6'\n+\n+              - script: |\n+                  python --version\n+                  python eng/versioning/set_versions.py --build-type ${{parameters.SDKType}} --vv --ai ${{artifact.name}} --gi ${{artifact.groupId}}\n+                displayName: 'Verify version for release'\n+\n+              - pwsh: |\n+                  $(Build.SourcesDirectory)/eng/versioning/scan_for_unreleased_dependencies.ps1 ${{artifact.groupId}} ${{artifact.name}} $(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}\n+                displayName: \"Verify no unreleased dependencies\"\n+\n+\n+          - deployment: TagRepository\n+            displayName: \"Create release tag\"\n+            condition: and(succeeded(), ne(variables['Skip.TagRepository'], 'true'))\n+            environment: github\n+            timeoutInMinutes: 5\n+            dependsOn: VerifyReleaseVersion\n+\n+            pool:\n+              vmImage: vs2017-win2016\n+\n+            strategy:\n+              runOnce:\n+                deploy:\n+                  steps:\n+                    - checkout: self\n+                    - pwsh: |\n+                        Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed\n+                        New-Item -Type Directory -Name ${{artifact.safeName}} -Path $(Pipeline.Workspace)\n+                        Copy-Item $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]* $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        Get-ChildItem $(Pipeline.Workspace)/${{artifact.safeName}}\n+                      workingDirectory: $(Pipeline.Workspace)\n+                      displayName: Stage artifacts\n+                      timeoutInMinutes: 5\n+                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml\n+                      parameters:\n+                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}\n+                        PackageRepository: Maven\n+                        ReleaseSha: $(Build.SourceVersion)\n+                        RepoId: Azure/azure-sdk-for-java\n+\n+          - ${{if ne(artifact.options.skipPublishPackage, 'true')}}:\n+            - deployment: PublishPackage\n+              displayName: \"Publish to Maven Central\"\n+              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))\n+              environment: maven\n+              dependsOn: TagRepository\n+\n+              pool:\n+                vmImage: windows-2019\n+\n+              strategy:\n+                runOnce:\n+                  deploy:\n+                    steps:\n+                      - checkout: azure-sdk-build-tools\n+                        path: azure-sdk-build-tools\n+                      - template: tools/gpg/gpg.yml@azure-sdk-build-tools", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc5MjQ2MA=="}, "originalCommit": {"oid": "fd8e47a41ac9899b3cd138d43c64e558e24e1b25"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2059, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}