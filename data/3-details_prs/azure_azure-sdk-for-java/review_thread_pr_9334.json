{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzE1NDc3", "number": 9334, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMDo0MlrODp_6vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDo0MTo0NFrODqAjlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzY1NDM5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/DatabaseAccount.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMDo0MlrOF5hj6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDoxMTowN1rOF5h0iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MzAxNg==", "bodyText": "why do we need these overridden methods?\nthe implementation is the same as parent class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395863016", "createdAt": "2020-03-20T20:00:42Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/DatabaseAccount.java", "diffHunk": "@@ -285,4 +285,9 @@ public String toJson() {\n         this.populatePropertyBag();\n         return super.toJson();\n     }\n+\n+    @Override\n+    public Object get(String propertyName) {\n+        return super.get(propertyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0585e9ec9c992424cd31ba24ba4a75481561c1e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2NzI3Mw==", "bodyText": "discussed offline.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395867273", "createdAt": "2020-03-20T20:11:07Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/DatabaseAccount.java", "diffHunk": "@@ -285,4 +285,9 @@ public String toJson() {\n         this.populatePropertyBag();\n         return super.toJson();\n     }\n+\n+    @Override\n+    public Object get(String propertyName) {\n+        return super.get(propertyName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MzAxNg=="}, "originalCommit": {"oid": "f0585e9ec9c992424cd31ba24ba4a75481561c1e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzY1NTc2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Offer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMToxNFrOF5hkxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMToxNFrOF5hkxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MzIzOA==", "bodyText": "ditto, here and other places for the new methods, the implementation is the same as parent class why are they needed in every child class?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395863238", "createdAt": "2020-03-20T20:01:14Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Offer.java", "diffHunk": "@@ -132,4 +132,14 @@ private ObjectNode getContent() {\n     private void setContent(ObjectNode offerContent) {\n         BridgeInternal.setProperty(this, Constants.Properties.OFFER_CONTENT, offerContent);\n     }\n+\n+    @Override\n+    public String getString(String propertyName) {\n+        return super.getString(propertyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0585e9ec9c992424cd31ba24ba4a75481561c1e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzY1NjEwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/PartitionKeyRange.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMToyNFrOF5hk_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMToyNFrOF5hk_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MzI5Mw==", "bodyText": "ditto", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395863293", "createdAt": "2020-03-20T20:01:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/PartitionKeyRange.java", "diffHunk": "@@ -123,4 +123,9 @@ public void setParents(List<String> parents) {\n      * @return a list partition key range ID\n      */\n     public List<String> getParents() { return this.getList(Constants.Properties.PARENTS, String.class); }\n+\n+    @Override\n+    public String toJson() {\n+        return super.toJson();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0585e9ec9c992424cd31ba24ba4a75481561c1e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzY2MDE1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/Address.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMjo0OFrOF5hngw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDowMjo0OFrOF5hngw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg2MzkzOQ==", "bodyText": "ditto", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395863939", "createdAt": "2020-03-20T20:02:48Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/Address.java", "diffHunk": "@@ -87,4 +87,9 @@ public String getParitionKeyRangeId() {\n     public void setPartitionKeyRangeId(String partitionKeyRangeId) {\n         BridgeInternal.setProperty(this, Constants.Properties.PARTITION_KEY_RANGE_ID, partitionKeyRangeId);\n     }\n+\n+    @Override\n+    public Object get(String propertyName) {\n+        return super.get(propertyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0585e9ec9c992424cd31ba24ba4a75481561c1e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mzc1ODk0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncUserDefinedFunction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMDo0MTo0NFrOF5imTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzo0MjoxMVrOF5l3_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4MDAxMw==", "bodyText": "(Could be out of scope of this PR) Potential double serialization. Instead of converting toJson and again back from Json, we could just use the propertybag to get UDF by using Resource(ObjectNode) overload.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395880013", "createdAt": "2020-03-20T20:41:44Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncUserDefinedFunction.java", "diffHunk": "@@ -73,7 +73,7 @@ CosmosAsyncUserDefinedFunction setId(String id) {\n     public Mono<CosmosAsyncUserDefinedFunctionResponse> replace(CosmosUserDefinedFunctionProperties udfSettings) {\n         return container.getDatabase()\n                    .getDocClientWrapper()\n-                   .replaceUserDefinedFunction(new UserDefinedFunction(udfSettings.toJson()), null)\n+                   .replaceUserDefinedFunction(new UserDefinedFunction(ModelBridgeInternal.toJsonFromJsonSerializable(udfSettings)), null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa6b37fd6de7adaac32c7f857a99ac4637ed6242"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMzAyNw==", "bodyText": "Will discuss offline on this one with you.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395933027", "createdAt": "2020-03-20T23:38:45Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncUserDefinedFunction.java", "diffHunk": "@@ -73,7 +73,7 @@ CosmosAsyncUserDefinedFunction setId(String id) {\n     public Mono<CosmosAsyncUserDefinedFunctionResponse> replace(CosmosUserDefinedFunctionProperties udfSettings) {\n         return container.getDatabase()\n                    .getDocClientWrapper()\n-                   .replaceUserDefinedFunction(new UserDefinedFunction(udfSettings.toJson()), null)\n+                   .replaceUserDefinedFunction(new UserDefinedFunction(ModelBridgeInternal.toJsonFromJsonSerializable(udfSettings)), null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4MDAxMw=="}, "originalCommit": {"oid": "fa6b37fd6de7adaac32c7f857a99ac4637ed6242"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMzY5NQ==", "bodyText": "outside of scope of this PR. we can come back to this later. I fixed double serialization for point read item operation but not the udf, etc.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9334#discussion_r395933695", "createdAt": "2020-03-20T23:42:11Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncUserDefinedFunction.java", "diffHunk": "@@ -73,7 +73,7 @@ CosmosAsyncUserDefinedFunction setId(String id) {\n     public Mono<CosmosAsyncUserDefinedFunctionResponse> replace(CosmosUserDefinedFunctionProperties udfSettings) {\n         return container.getDatabase()\n                    .getDocClientWrapper()\n-                   .replaceUserDefinedFunction(new UserDefinedFunction(udfSettings.toJson()), null)\n+                   .replaceUserDefinedFunction(new UserDefinedFunction(ModelBridgeInternal.toJsonFromJsonSerializable(udfSettings)), null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4MDAxMw=="}, "originalCommit": {"oid": "fa6b37fd6de7adaac32c7f857a99ac4637ed6242"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 77, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}