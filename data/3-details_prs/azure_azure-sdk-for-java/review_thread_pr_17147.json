{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDQ3Mzkw", "number": 17147, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowNTo0N1rOE1wO9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzo1MTo0MlrOE1xf8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODAwMjQ0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowNTo0N1rOHuNL4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzowNzoxOVrOHuNQdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxMjU3OQ==", "bodyText": "BlobUploadFromUrlOptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17147#discussion_r518212579", "createdAt": "2020-11-05T17:05:47Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "diffHunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.util.CoreUtils;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.BlobHttpHeaders;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.Map;\n+\n+/**\n+ * Extended options that may be passed when uploading a Block Blob from URL.\n+ */\n+public class BlobUploadFromUrlOptions {\n+    private final String sourceUrl;\n+    private BlobHttpHeaders headers;\n+    private Map<String, String> metadata;\n+    private Map<String, String> tags;\n+    private AccessTier tier;\n+    private byte[] contentMd5;\n+    private BlobRequestConditions destinationRequestConditions;\n+    private BlobRequestConditions sourceRequestConditions;\n+    private Boolean copySourceBlobProperties;\n+\n+    /**\n+     * @param sourceUrl The source URL to upload from.\n+     */\n+    public BlobUploadFromUrlOptions(String sourceUrl) {\n+        StorageImplUtils.assertNotNull(\"copySource\", sourceUrl);\n+        this.sourceUrl = sourceUrl;\n+    }\n+\n+    /**\n+     * @return The source URL to upload from.\n+     */\n+    public String getSourceUrl() {\n+        return this.sourceUrl;\n+    }\n+\n+    /**\n+     * @return {@link BlobHttpHeaders}\n+     */\n+    public BlobHttpHeaders getHeaders() {\n+        return headers;\n+    }\n+\n+    /**\n+     * @param headers {@link BlobHttpHeaders}\n+     * @return The updated {@code AppendBlobCreateOptions}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33b9e3cc8f016d8c5ea9c21fc3a4674cee6cfdb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxMzc1MQ==", "bodyText": "Or just options.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17147#discussion_r518213751", "createdAt": "2020-11-05T17:07:19Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "diffHunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.util.CoreUtils;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.BlobHttpHeaders;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.Map;\n+\n+/**\n+ * Extended options that may be passed when uploading a Block Blob from URL.\n+ */\n+public class BlobUploadFromUrlOptions {\n+    private final String sourceUrl;\n+    private BlobHttpHeaders headers;\n+    private Map<String, String> metadata;\n+    private Map<String, String> tags;\n+    private AccessTier tier;\n+    private byte[] contentMd5;\n+    private BlobRequestConditions destinationRequestConditions;\n+    private BlobRequestConditions sourceRequestConditions;\n+    private Boolean copySourceBlobProperties;\n+\n+    /**\n+     * @param sourceUrl The source URL to upload from.\n+     */\n+    public BlobUploadFromUrlOptions(String sourceUrl) {\n+        StorageImplUtils.assertNotNull(\"copySource\", sourceUrl);\n+        this.sourceUrl = sourceUrl;\n+    }\n+\n+    /**\n+     * @return The source URL to upload from.\n+     */\n+    public String getSourceUrl() {\n+        return this.sourceUrl;\n+    }\n+\n+    /**\n+     * @return {@link BlobHttpHeaders}\n+     */\n+    public BlobHttpHeaders getHeaders() {\n+        return headers;\n+    }\n+\n+    /**\n+     * @param headers {@link BlobHttpHeaders}\n+     * @return The updated {@code AppendBlobCreateOptions}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxMjU3OQ=="}, "originalCommit": {"oid": "f33b9e3cc8f016d8c5ea9c21fc3a4674cee6cfdb"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODIwOTc2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzo1MTo0MlrOHuPP3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzo1NzozOVrOHuPe1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0NjM2Ng==", "bodyText": "If this API is on block blob, should the options be BlockBlobUploadFromUrlOptions?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17147#discussion_r518246366", "createdAt": "2020-11-05T17:51:42Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "diffHunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.util.CoreUtils;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.BlobHttpHeaders;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.Map;\n+\n+/**\n+ * Extended options that may be passed when uploading a Block Blob from URL.\n+ */\n+public class BlobUploadFromUrlOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33b9e3cc8f016d8c5ea9c21fc3a4674cee6cfdb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0Nzk3MQ==", "bodyText": "@gapra-msft The short term decision is to put this on Block Blob only to let it mature, but long term goal is to put this on BlobClient as well and advertise as first choice over copy.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17147#discussion_r518247971", "createdAt": "2020-11-05T17:54:15Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "diffHunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.util.CoreUtils;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.BlobHttpHeaders;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.Map;\n+\n+/**\n+ * Extended options that may be passed when uploading a Block Blob from URL.\n+ */\n+public class BlobUploadFromUrlOptions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0NjM2Ng=="}, "originalCommit": {"oid": "f33b9e3cc8f016d8c5ea9c21fc3a4674cee6cfdb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI1MDE5OA==", "bodyText": "Cool. Sounds good to me then", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17147#discussion_r518250198", "createdAt": "2020-11-05T17:57:39Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobUploadFromUrlOptions.java", "diffHunk": "@@ -0,0 +1,179 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.util.CoreUtils;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.BlobHttpHeaders;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.Map;\n+\n+/**\n+ * Extended options that may be passed when uploading a Block Blob from URL.\n+ */\n+public class BlobUploadFromUrlOptions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI0NjM2Ng=="}, "originalCommit": {"oid": "f33b9e3cc8f016d8c5ea9c21fc3a4674cee6cfdb"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2977, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}