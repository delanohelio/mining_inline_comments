{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzI0NDY1", "number": 9335, "title": "receive deferred  message feature", "bodyText": "Add receiveDeferred message feature\nand unit test cases\nfixes #8747", "createdAt": "2020-03-20T20:21:02Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335", "merged": true, "mergeCommit": {"oid": "e0edb751a2c6a5203b373a7756c9482f1a837edd"}, "closed": true, "closedAt": "2020-03-21T00:29:27Z", "author": {"login": "hemanttanwar"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPmYo1gH2gAyMzkxNzI0NDY1OjI2MGViNDZlOGIyOWM4NTRhMDdjZmIyZDZkYTU0NTVmNTU3OTkwNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPoolugH2gAyMzkxNzI0NDY1OmIxNTc4OWQ2ODgxYjRkM2NjMDE1Yzk3MWU3MWY1ZjA3OWZiMGY3MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "260eb46e8b29c854a07cfb2d6da5455f55799072", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/260eb46e8b29c854a07cfb2d6da5455f55799072", "committedDate": "2020-03-20T20:18:15Z", "message": "receive deferred  message feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64d4dd2be9db800642ee95b7becddafb0b43d22b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/64d4dd2be9db800642ee95b7becddafb0b43d22b", "committedDate": "2020-03-20T20:24:08Z", "message": "reduced scope of static constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6501cd0a915d7e6d4dff524669fa54398dcffe0e", "committedDate": "2020-03-20T20:53:51Z", "message": "resolved merge conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODEzMzE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#pullrequestreview-378813315", "createdAt": "2020-03-20T21:09:21Z", "commit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTowOToyMlrOF5jQiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxODowNlrOF5jdhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MDgyNA==", "bodyText": "This exists in ManagementConstants", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395890824", "createdAt": "2020-03-20T21:09:22Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessageSerializer.java", "diffHunk": "@@ -60,6 +60,7 @@\n     private static final String REQUEST_RESPONSE_MESSAGES = \"messages\";\n     private static final String REQUEST_RESPONSE_MESSAGE = \"message\";\n     private static final String REQUEST_RESPONSE_EXPIRATIONS = \"expirations\";\n+    private static final String LOCK_TOKEN_KEY = \"lock-token\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MTU5Ng==", "bodyText": "The grammar before was correct.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395891596", "createdAt": "2020-03-20T21:11:31Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -312,15 +312,16 @@ public String getServiceBusResourceName() {\n     }\n \n     /**\n-     * Receives a deferred {@link ServiceBusMessage}. Deferred messages can only be received by using sequence number.\n+     * Receives a deferred {@link ServiceBusMessage}. Deferred message can only be received by using sequence number.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MzU4OA==", "bodyText": "nit: use final", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395893588", "createdAt": "2020-03-20T21:16:38Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -174,6 +199,47 @@\n         }));\n     }\n \n+    private Flux<ServiceBusReceivedMessage> receiveDeferredMessageBatch(ReceiveMode receiveMode, UUID sessionId,\n+            long... fromSequenceNumbers) {\n+        return isAuthorized(RECEIVE_BY_SEQUENCE_NUMBER_OPERATION).thenMany(createRequestResponse.flatMap(channel -> {\n+            final Message message = createManagementMessage(RECEIVE_BY_SEQUENCE_NUMBER_OPERATION,\n+                channel.getReceiveLinkName());\n+\n+            // set mandatory properties on AMQP message body\n+            HashMap<String, Object> requestBodyMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5Mzk5Mg==", "bodyText": "There are operations already grouped together a top, I would put that up there.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395893992", "createdAt": "2020-03-20T21:17:38Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementConstants.java", "diffHunk": "@@ -30,4 +30,8 @@\n     static final String DEADLETTER_DESCRIPTION_KEY = \"deadletter-description\";\n     static final String PROPERTIES_TO_MODIFY_KEY = \"properties-to-modify\";\n     static final String ASSOCIATED_LINK_NAME_KEY = \"associated-link-name\";\n+    public static final String RECEIVE_BY_SEQUENCE_NUMBER_OPERATION = AmqpConstants.VENDOR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NDE0OQ==", "bodyText": "Where is the case with multiple numbers?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395894149", "createdAt": "2020-03-20T21:18:06Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java", "diffHunk": "@@ -495,6 +495,23 @@ void settleMessage(DispositionStatus dispositionStatus) {\n         verify(managementNode, times(0)).updateDisposition(lockToken2, dispositionStatus, null, null, null);\n     }\n \n+    /**\n+     * Verifies that this receive deferred one messages from a sequence Number.\n+     */\n+    @Test\n+    void receiveDeferredWithSequenceOneMessage() {\n+        // Arrange\n+        final int fromSequenceNumber = 10;\n+        final ServiceBusReceivedMessage receivedMessage = mock(ServiceBusReceivedMessage.class);\n+\n+        when(managementNode.receiveDeferredMessage(receiveOptions.getReceiveMode(), fromSequenceNumber)).thenReturn(Mono.just(receivedMessage));\n+\n+        // Act & Assert\n+        StepVerifier.create(consumer.receiveDeferredMessage(fromSequenceNumber))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6501cd0a915d7e6d4dff524669fa54398dcffe0e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2b44dee1b20c0c59e93224cb735e33ee61eb5b8", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d2b44dee1b20c0c59e93224cb735e33ee61eb5b8", "committedDate": "2020-03-20T21:44:19Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd425ced523861f4502ce58ba8e33ca64806b5ba", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cd425ced523861f4502ce58ba8e33ca64806b5ba", "committedDate": "2020-03-20T21:47:39Z", "message": "review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aa84b1081879179c12dcb308c34782214883654", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7aa84b1081879179c12dcb308c34782214883654", "committedDate": "2020-03-20T21:48:46Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODQ1OTk0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#pullrequestreview-378845994", "createdAt": "2020-03-20T22:31:22Z", "commit": {"oid": "7aa84b1081879179c12dcb308c34782214883654"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjozMToyMlrOF5k5HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjozMToyMlrOF5k5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNzU5Ng==", "bodyText": "I noticed this and in other places, why do you use publishOn(scheduler)? It hasn't reached user code yet, so we don't need to perform work on their scheduler in the case that it is blocking.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9335#discussion_r395917596", "createdAt": "2020-03-20T22:31:22Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -131,6 +136,26 @@\n             .publishOn(scheduler);\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Mono<ServiceBusReceivedMessage> receiveDeferredMessage(ReceiveMode receiveMode, long sequenceNumber) {\n+        return receiveDeferredMessageBatch(receiveMode, null, sequenceNumber)\n+            .next()\n+            .publishOn(scheduler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aa84b1081879179c12dcb308c34782214883654"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b15789d6881b4d3cc015c971e71f5f079fb0f730", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b15789d6881b4d3cc015c971e71f5f079fb0f730", "committedDate": "2020-03-20T22:55:29Z", "message": "review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 647, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}