{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTk4NjI1", "number": 9945, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzowMToxNVrODv0JkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzowMToxNVrODv0JkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDY0MDgxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzowMToxNVrOGCdUzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNDoxOToxNFrOGCecWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzMDc5Nw==", "bodyText": "great finding. awesome", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9945#discussion_r405230797", "createdAt": "2020-04-08T03:01:15Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -137,8 +136,7 @@ private void configureChannelPipelineHandlers() {\n                 reactorNettyRequest.header(header.name(), header.value());\n             }\n             if (restRequest.body() != null) {\n-                Flux<ByteBuf> nettyByteBufFlux = restRequest.body().map(Unpooled::wrappedBuffer);\n-                return reactorNettyOutbound.send(nettyByteBufFlux);\n+                return reactorNettyOutbound.send(restRequest.body());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d37449df4dd990eb263a9e1af43bf8fa02fd4a6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0OTExMw==", "bodyText": "Thanks Mo :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9945#discussion_r405249113", "createdAt": "2020-04-08T04:19:14Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -137,8 +136,7 @@ private void configureChannelPipelineHandlers() {\n                 reactorNettyRequest.header(header.name(), header.value());\n             }\n             if (restRequest.body() != null) {\n-                Flux<ByteBuf> nettyByteBufFlux = restRequest.body().map(Unpooled::wrappedBuffer);\n-                return reactorNettyOutbound.send(nettyByteBufFlux);\n+                return reactorNettyOutbound.send(restRequest.body());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzMDc5Nw=="}, "originalCommit": {"oid": "9d37449df4dd990eb263a9e1af43bf8fa02fd4a6"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2033, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}