{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2ODEwOTk2", "number": 17798, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMDoxNzozNlrOE9Ap4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjoxNjo0OFrOE9CNlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDA5MzEzOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMDoxNzozNlrOH5eSDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMDoyMTowNlrOH5eWaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyNzAyMw==", "bodyText": "Is there something weird here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17798#discussion_r530027023", "createdAt": "2020-11-25T00:17:36Z", "author": {"login": "JonathanGiles"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -639,17 +640,23 @@ public ServiceBusSenderClient buildClient() {\n \n     /**\n      * Builder for creating {@link ServiceBusProcessorClient} to consume messages from a session-based Service Bus\n-     * entity. {@link ServiceBusProcessorClient ServiceBusProcessorClients} provides a push-based mechanism that\n-     * invokes the message processing callback when a message is received or the error handler when an error occurs\n-     * when receiving messages. To create an instance, therefore, configuring the two callbacks -\n-     * {@link #processMessage(Consumer)} and {@link #processError(Consumer)} are necessary. By default, a\n-     * {@link ServiceBusProcessorClient} is configured with auto-completion and auto-lock renewal capabilities.\n-     * {@link ServiceBusProcessorClient ServiceBusProcessorClients} created by this builder can be configured to\n-     * consume messages from {@link #maxConcurrentSessions(int) multiple sessions concurrently}. By default, the\n+     * entity. {@link ServiceBusProcessorClient} processes messages and errors via {@link #processMessage(Consumer)}\n+     * and {@link #processError(Consumer)}.\n+     *\n+     * <p>\n+     * By default, the processor:\n+     * <ul>\n+     *     <li>Automatically settles messages. Disabled via {@link #disableAutoComplete()}</li>\n+     *     <li>Processes 1 session concurrently. Configured via {@link #maxConcurrentSessions(int)}</li>\n+     *     <li>Invokes 1 instance of {@link #processMessage(Consumer) processMessage consumer}. Configured via\n+     *     {@link #maxConcurrentCalls(int)}</li>\n+     * </ul>\n+     * {@link #maxConcurrentCalls(int)} (int) sessions concurrently}. By default, the\n      * processor will receive messages from a single session with rollover.\n+     * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e331a7d71ab0583f2aada22ee361da0a9aa385e8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyODEzNw==", "bodyText": "I thought I caught that one. thanks!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17798#discussion_r530028137", "createdAt": "2020-11-25T00:21:06Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -639,17 +640,23 @@ public ServiceBusSenderClient buildClient() {\n \n     /**\n      * Builder for creating {@link ServiceBusProcessorClient} to consume messages from a session-based Service Bus\n-     * entity. {@link ServiceBusProcessorClient ServiceBusProcessorClients} provides a push-based mechanism that\n-     * invokes the message processing callback when a message is received or the error handler when an error occurs\n-     * when receiving messages. To create an instance, therefore, configuring the two callbacks -\n-     * {@link #processMessage(Consumer)} and {@link #processError(Consumer)} are necessary. By default, a\n-     * {@link ServiceBusProcessorClient} is configured with auto-completion and auto-lock renewal capabilities.\n-     * {@link ServiceBusProcessorClient ServiceBusProcessorClients} created by this builder can be configured to\n-     * consume messages from {@link #maxConcurrentSessions(int) multiple sessions concurrently}. By default, the\n+     * entity. {@link ServiceBusProcessorClient} processes messages and errors via {@link #processMessage(Consumer)}\n+     * and {@link #processError(Consumer)}.\n+     *\n+     * <p>\n+     * By default, the processor:\n+     * <ul>\n+     *     <li>Automatically settles messages. Disabled via {@link #disableAutoComplete()}</li>\n+     *     <li>Processes 1 session concurrently. Configured via {@link #maxConcurrentSessions(int)}</li>\n+     *     <li>Invokes 1 instance of {@link #processMessage(Consumer) processMessage consumer}. Configured via\n+     *     {@link #maxConcurrentCalls(int)}</li>\n+     * </ul>\n+     * {@link #maxConcurrentCalls(int)} (int) sessions concurrently}. By default, the\n      * processor will receive messages from a single session with rollover.\n+     * </p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAyNzAyMw=="}, "originalCommit": {"oid": "e331a7d71ab0583f2aada22ee361da0a9aa385e8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDM0ODM5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjoxNjo0OFrOH5giUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjo0MjowMlrOH5hAyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2Mzk1Mw==", "bodyText": "Should we explain about lock renewal also here ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17798#discussion_r530063953", "createdAt": "2020-11-25T02:16:48Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -639,17 +640,21 @@ public ServiceBusSenderClient buildClient() {\n \n     /**\n      * Builder for creating {@link ServiceBusProcessorClient} to consume messages from a session-based Service Bus\n-     * entity. {@link ServiceBusProcessorClient ServiceBusProcessorClients} provides a push-based mechanism that\n-     * invokes the message processing callback when a message is received or the error handler when an error occurs\n-     * when receiving messages. To create an instance, therefore, configuring the two callbacks -\n-     * {@link #processMessage(Consumer)} and {@link #processError(Consumer)} are necessary. By default, a\n-     * {@link ServiceBusProcessorClient} is configured with auto-completion and auto-lock renewal capabilities.\n-     * {@link ServiceBusProcessorClient ServiceBusProcessorClients} created by this builder can be configured to\n-     * consume messages from {@link #maxConcurrentSessions(int) multiple sessions concurrently}. By default, the\n-     * processor will receive messages from a single session with rollover.\n+     * entity. {@link ServiceBusProcessorClient} processes messages and errors via {@link #processMessage(Consumer)}\n+     * and {@link #processError(Consumer)}. When the processor finishes processing a session, it tries to fetch the\n+     * next session to process.\n+     *\n+     * <p>\n+     * By default, the processor:\n+     * <ul>\n+     *     <li>Automatically settles messages. Disabled via {@link #disableAutoComplete()}</li>\n+     *     <li>Processes 1 session concurrently. Configured via {@link #maxConcurrentSessions(int)}</li>\n+     *     <li>Invokes 1 instance of {@link #processMessage(Consumer) processMessage consumer}. Configured via", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c073621cb27da67a3dfa5ce21ff9aefc3bd1d4bd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA3MTc1Mw==", "bodyText": "We don't have that ability in the session processor? I don't think we have auto renew session lock.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17798#discussion_r530071753", "createdAt": "2020-11-25T02:42:02Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -639,17 +640,21 @@ public ServiceBusSenderClient buildClient() {\n \n     /**\n      * Builder for creating {@link ServiceBusProcessorClient} to consume messages from a session-based Service Bus\n-     * entity. {@link ServiceBusProcessorClient ServiceBusProcessorClients} provides a push-based mechanism that\n-     * invokes the message processing callback when a message is received or the error handler when an error occurs\n-     * when receiving messages. To create an instance, therefore, configuring the two callbacks -\n-     * {@link #processMessage(Consumer)} and {@link #processError(Consumer)} are necessary. By default, a\n-     * {@link ServiceBusProcessorClient} is configured with auto-completion and auto-lock renewal capabilities.\n-     * {@link ServiceBusProcessorClient ServiceBusProcessorClients} created by this builder can be configured to\n-     * consume messages from {@link #maxConcurrentSessions(int) multiple sessions concurrently}. By default, the\n-     * processor will receive messages from a single session with rollover.\n+     * entity. {@link ServiceBusProcessorClient} processes messages and errors via {@link #processMessage(Consumer)}\n+     * and {@link #processError(Consumer)}. When the processor finishes processing a session, it tries to fetch the\n+     * next session to process.\n+     *\n+     * <p>\n+     * By default, the processor:\n+     * <ul>\n+     *     <li>Automatically settles messages. Disabled via {@link #disableAutoComplete()}</li>\n+     *     <li>Processes 1 session concurrently. Configured via {@link #maxConcurrentSessions(int)}</li>\n+     *     <li>Invokes 1 instance of {@link #processMessage(Consumer) processMessage consumer}. Configured via", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2Mzk1Mw=="}, "originalCommit": {"oid": "c073621cb27da67a3dfa5ce21ff9aefc3bd1d4bd"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2704, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}