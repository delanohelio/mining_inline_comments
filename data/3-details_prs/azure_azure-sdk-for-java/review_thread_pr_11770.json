{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NjY0NDE3", "number": 11770, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToyNTo0OFrOECnSLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMjowMlrOECwQiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTc2MjM3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToyNTo0OFrOGfLZRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0Njo1NFrOGfMcNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NTczNQ==", "bodyText": "Why are you adding a public FieldValue to deal with the new receipt changes?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435345735", "createdAt": "2020-06-04T15:25:48Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2Mjg3MQ==", "bodyText": "I only had the strongly typed FormField<T> which could hold any T but now we need a FieldValue to provide a type for conversion for the user.\nSimilar to this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435362871", "createdAt": "2020-06-04T15:46:54Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NTczNQ=="}, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIxMzAxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoxMzoxM1rOGfZylw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMjo1MDo0MVrOGfesNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MTU5MQ==", "bodyText": "How large can this Integer be? According to the service team, we'll eventually start supporting 64-bits integers here (not a concern for Preview 3, I think).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435581591", "createdAt": "2020-06-04T22:13:13Z", "author": {"login": "kinelski"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.LocalDate;\n+import java.time.LocalTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * The FieldValue model.\n+ */\n+@Fluent\n+public final class FieldValue {\n+    private final FieldValueType type;\n+    private Map<String, FormField> formFieldMap;\n+    private List<FormField> formFieldList;\n+    private Float formFieldFloat;\n+    private Integer formFieldInteger;\n+    private LocalDate formFieldDate;\n+    private LocalTime formFieldTime;\n+    private String formFieldString;\n+    private String formFieldPhoneNumber;\n+\n+    /**\n+     * Constructs a FieldValue object\n+     *\n+     * @param type The type of the field.\n+     */\n+    public FieldValue(final FieldValueType type) {\n+        this.type = type;\n+    }\n+\n+    /**\n+     * Set the map value of the field.\n+     *\n+     * @param formFieldMap the map value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldMap(final Map<String, FormField> formFieldMap) {\n+        this.formFieldMap = formFieldMap;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the list value of the field.\n+     *\n+     * @param formFieldList the list of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldList(final List<FormField> formFieldList) {\n+        this.formFieldList = formFieldList;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the float value of the field.\n+     *\n+     * @param formFieldFloat the float value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldFloat(final Float formFieldFloat) {\n+        this.formFieldFloat = formFieldFloat;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the integer value of the field.\n+     *\n+     * @param formFieldInteger the integer value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldInteger(final Integer formFieldInteger) {\n+        this.formFieldInteger = formFieldInteger;\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2MTg3OA==", "bodyText": "I think that should change the generated code for the service to start sending in a Long value so will defer doing this with the service update.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435661878", "createdAt": "2020-06-05T02:50:41Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.LocalDate;\n+import java.time.LocalTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * The FieldValue model.\n+ */\n+@Fluent\n+public final class FieldValue {\n+    private final FieldValueType type;\n+    private Map<String, FormField> formFieldMap;\n+    private List<FormField> formFieldList;\n+    private Float formFieldFloat;\n+    private Integer formFieldInteger;\n+    private LocalDate formFieldDate;\n+    private LocalTime formFieldTime;\n+    private String formFieldString;\n+    private String formFieldPhoneNumber;\n+\n+    /**\n+     * Constructs a FieldValue object\n+     *\n+     * @param type The type of the field.\n+     */\n+    public FieldValue(final FieldValueType type) {\n+        this.type = type;\n+    }\n+\n+    /**\n+     * Set the map value of the field.\n+     *\n+     * @param formFieldMap the map value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldMap(final Map<String, FormField> formFieldMap) {\n+        this.formFieldMap = formFieldMap;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the list value of the field.\n+     *\n+     * @param formFieldList the list of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldList(final List<FormField> formFieldList) {\n+        this.formFieldList = formFieldList;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the float value of the field.\n+     *\n+     * @param formFieldFloat the float value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldFloat(final Float formFieldFloat) {\n+        this.formFieldFloat = formFieldFloat;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the integer value of the field.\n+     *\n+     * @param formFieldInteger the integer value of the field.\n+     *\n+     * @return the FieldValue object itself.\n+     */\n+    public FieldValue setFormFieldInteger(final Integer formFieldInteger) {\n+        this.formFieldInteger = formFieldInteger;\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4MTU5MQ=="}, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIyODI4OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormField.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMDowMFrOGfZ8Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMDowMFrOGfZ8Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NDAxNQ==", "bodyText": "I think this extra space before @param was an accident...?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435584015", "createdAt": "2020-06-04T22:20:00Z", "author": {"login": "kinelski"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormField.java", "diffHunk": "@@ -40,14 +39,13 @@\n \n     /**\n      * Constructs a FormField object.\n-     *\n-     * @param confidence The confidence of the recognized field.\n+     *  @param confidence The confidence of the recognized field.\n      * @param labelText The label text value for the field.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzIzMjc1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMjowMlrOGfZ-7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMjowMlrOGfZ-7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NDc1MA==", "bodyText": "Did you mean receiptLocale property?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11770#discussion_r435584750", "createdAt": "2020-06-04T22:22:02Z", "author": {"login": "kinelski"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -1,6 +1,9 @@\n # Release History\n \n ## 1.0.0-beta.3 (Unreleased)\n+- Removed `USReceipt` and `USReceiptItem`.\n+- Removed the extension class `ReceiptExtensions` that transformed the recognized receipt to `USReceipt`. \n+- Removed `ReceiptType` and the `receiptType` property from `RecognizedReceipt`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa790fe1ef3d3c0730a3c52b88b796e9907c676"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3972, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}