{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4ODkzMjI0", "number": 13634, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxMTo0N1rOETiK_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNjowMVrOETiO0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTE4MjY5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxMTo0N1rOG5UcwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoyMzo1NFrOG5Utqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NzA1Nw==", "bodyText": "This publishOn will have no effect on the reactor chain, since subscribeOn will already switch the threads to Schedulers.elastic(). Take a look at this example at subscribeOn from this article: https://www.woolha.com/tutorials/project-reactor-publishon-vs-subscribeon-difference\nIf you were using different schedulers, then it would make sense to place both of them here.\nSo I guess simpler code will be something like this:\nreturn response\n .map(rsp -> {})\n .subscribeOn(Schedulers.elastic());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462757057", "createdAt": "2020-07-30T06:11:47Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -69,6 +69,63 @@\n             );\n     }\n \n+    private Mono<CosmosItemResponse<byte[]>> replaceItemStream(byte[] payload,\n+                                                               String itemId,\n+                                                               PartitionKey partitionKey,\n+                                                               EncryptionItemRequestOptions encryptionItemRequestOptions) {\n+        Preconditions.checkNotNull(payload, \"payload can't be null\");\n+\n+        // TODO: add diagnostics\n+        assert encryptionItemRequestOptions != null && encryptionItemRequestOptions.getEncryptionOptions() != null;\n+        payload = EncryptionProcessor.encryptAsync(payload, encryptor,\n+            encryptionItemRequestOptions.getEncryptionOptions());\n+\n+        Mono<CosmosItemResponse<byte[]>> response = container.replaceItem(payload,\n+            itemId,\n+            partitionKey,\n+            encryptionItemRequestOptions);\n+\n+        return response\n+            .subscribeOn(Schedulers.elastic())\n+            .publishOn(Schedulers.elastic())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1OTc5MQ==", "bodyText": "you are right. copy pasted code from some other code I have. will fix shortly.\nThanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462759791", "createdAt": "2020-07-30T06:19:39Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -69,6 +69,63 @@\n             );\n     }\n \n+    private Mono<CosmosItemResponse<byte[]>> replaceItemStream(byte[] payload,\n+                                                               String itemId,\n+                                                               PartitionKey partitionKey,\n+                                                               EncryptionItemRequestOptions encryptionItemRequestOptions) {\n+        Preconditions.checkNotNull(payload, \"payload can't be null\");\n+\n+        // TODO: add diagnostics\n+        assert encryptionItemRequestOptions != null && encryptionItemRequestOptions.getEncryptionOptions() != null;\n+        payload = EncryptionProcessor.encryptAsync(payload, encryptor,\n+            encryptionItemRequestOptions.getEncryptionOptions());\n+\n+        Mono<CosmosItemResponse<byte[]>> response = container.replaceItem(payload,\n+            itemId,\n+            partitionKey,\n+            encryptionItemRequestOptions);\n+\n+        return response\n+            .subscribeOn(Schedulers.elastic())\n+            .publishOn(Schedulers.elastic())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NzA1Nw=="}, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2MTM4Nw==", "bodyText": "addressed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462761387", "createdAt": "2020-07-30T06:23:54Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -69,6 +69,63 @@\n             );\n     }\n \n+    private Mono<CosmosItemResponse<byte[]>> replaceItemStream(byte[] payload,\n+                                                               String itemId,\n+                                                               PartitionKey partitionKey,\n+                                                               EncryptionItemRequestOptions encryptionItemRequestOptions) {\n+        Preconditions.checkNotNull(payload, \"payload can't be null\");\n+\n+        // TODO: add diagnostics\n+        assert encryptionItemRequestOptions != null && encryptionItemRequestOptions.getEncryptionOptions() != null;\n+        payload = EncryptionProcessor.encryptAsync(payload, encryptor,\n+            encryptionItemRequestOptions.getEncryptionOptions());\n+\n+        Mono<CosmosItemResponse<byte[]>> response = container.replaceItem(payload,\n+            itemId,\n+            partitionKey,\n+            encryptionItemRequestOptions);\n+\n+        return response\n+            .subscribeOn(Schedulers.elastic())\n+            .publishOn(Schedulers.elastic())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NzA1Nw=="}, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTE5MTM2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNTozMFrOG5Uh5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoyMzo0NVrOG5Uteg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1ODM3Mg==", "bodyText": "We should have new line at the end of the file.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462758372", "createdAt": "2020-07-30T06:15:30Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -246,4 +400,4 @@ ItemDeserializer getItemDeserializer() {\n             return input;\n         }\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2MDI5MQ==", "bodyText": "thanks will address shortly.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462760291", "createdAt": "2020-07-30T06:20:55Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -246,4 +400,4 @@ ItemDeserializer getItemDeserializer() {\n             return input;\n         }\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1ODM3Mg=="}, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc2MTMzOA==", "bodyText": "addressed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462761338", "createdAt": "2020-07-30T06:23:45Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -246,4 +400,4 @@ ItemDeserializer getItemDeserializer() {\n             return input;\n         }\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1ODM3Mg=="}, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTE5MjI0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNTo1MlrOG5UiYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNTo1MlrOG5UiYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1ODQ5OA==", "bodyText": "Thanks for this correction.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462758498", "createdAt": "2020-07-30T06:15:52Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -587,7 +587,7 @@ public String getId() {\n      * Deletes an item.\n      * <p>\n      * After subscription the operation will be performed.\n-     * The {@link Mono} upon successful completion will contain a single Cosmos item response with the replaced item.\n+     * The {@link Mono} upon successful completion will contain a single Cosmos item response with the deleted item.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTE5MjUwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNjowMVrOG5Uiiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjoxNjowMVrOG5Uiiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1ODUzOQ==", "bodyText": "Thanks!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13634#discussion_r462758539", "createdAt": "2020-07-30T06:16:01Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -601,7 +601,7 @@ public String getId() {\n      * Deletes the item.\n      * <p>\n      * After subscription the operation will be performed.\n-     * The {@link Mono} upon successful completion will contain a single Cosmos item response with the replaced item.\n+     * The {@link Mono} upon successful completion will contain a single Cosmos item response with the deleted item.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92dd701b4fcd55545f31a03ddcdfb8e1a007e69"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4779, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}