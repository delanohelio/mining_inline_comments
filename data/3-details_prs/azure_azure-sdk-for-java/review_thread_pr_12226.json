{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDk3MzA2", "number": 12226, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MDozOVrOEGBZEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMzoxMToxM1rOEGI5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzQ5NzE0OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MDozOVrOGkkDyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoxMzo0MVrOGknbCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MjcxMg==", "bodyText": "Does the JVM check both environment and system properties when allowing these headers to be used? If not we should use whichever it uses directly as Configuration will lookup against both.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440992712", "createdAt": "2020-06-16T16:40:39Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+        restrictedHeaders.addAll(DEFAULT_RESTRICTED_HEADERS);\n+        restrictedHeaders.removeAll(allowRestrictedHeaders);\n+        return restrictedHeaders;\n+    }\n+\n+    private Set<String> getAllowRestrictedHeaders() {\n+        Properties properties = getNetworkProperties();\n+        String[] allowRestrictedHeadersNetProperties =\n+            properties.getProperty(JDK_HTTPCLIENT_ALLOW_RESTRICTED_HEADERS, \"\").split(\",\");\n+\n+        // Read all allowed restricted headers from configuration\n+        Configuration config = (this.configuration == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NzgxNg==", "bodyText": "Since most of our proxy and other configurations are checking both, users might want to use the same location (either env var or sys properties) for all their configurations. So, checking both as it makes it easier for the user.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441047816", "createdAt": "2020-06-16T18:13:41Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+        restrictedHeaders.addAll(DEFAULT_RESTRICTED_HEADERS);\n+        restrictedHeaders.removeAll(allowRestrictedHeaders);\n+        return restrictedHeaders;\n+    }\n+\n+    private Set<String> getAllowRestrictedHeaders() {\n+        Properties properties = getNetworkProperties();\n+        String[] allowRestrictedHeadersNetProperties =\n+            properties.getProperty(JDK_HTTPCLIENT_ALLOW_RESTRICTED_HEADERS, \"\").split(\",\");\n+\n+        // Read all allowed restricted headers from configuration\n+        Configuration config = (this.configuration == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MjcxMg=="}, "originalCommit": {"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzUzNDAxOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo1MDozNFrOGkkbsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo1MDozNFrOGkkbsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5ODgzMg==", "bodyText": "There are several ways to have allowlist. Could you update the message here? Also, change whitelist wording.\nDo we want to change the log level to WARNING?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440998832", "createdAt": "2020-06-16T16:50:34Z", "author": {"login": "sima-zhu"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "diffHunk": "@@ -89,7 +75,7 @@\n             if (headers != null) {\n                 for (HttpHeader header : headers) {\n                     final String headerName = header.getName();\n-                    if (!JDK12_RESTRICTED_HEADERS.contains(headerName)) {\n+                    if (!restrictedHeaders.contains(headerName)) {\n                         final String headerValue = header.getValue();\n                         builder.setHeader(headerName, headerValue);\n                     } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU0MDY2OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo1MjoyMVrOGkkf3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoxNjowM1rOGkngNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5OTkwMg==", "bodyText": "What's the purpose of having Case_Insensitive_Order?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440999902", "createdAt": "2020-06-16T16:52:21Z", "author": {"login": "sima-zhu"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0OTE0MQ==", "bodyText": "Case insensitive order will allow for set.contains() to ignore case and evaluate if the header is restricted or not. See unit tests.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441049141", "createdAt": "2020-06-16T18:16:03Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5OTkwMg=="}, "originalCommit": {"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODcyNjMwOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMzoxMToxM1rOGkwN5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMzoxMToxM1rOGkwN5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE5MTkxMA==", "bodyText": "'added to the allow list'", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441191910", "createdAt": "2020-06-16T23:11:13Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "diffHunk": "@@ -89,12 +75,14 @@\n             if (headers != null) {\n                 for (HttpHeader header : headers) {\n                     final String headerName = header.getName();\n-                    if (!JDK12_RESTRICTED_HEADERS.contains(headerName)) {\n+                    if (!restrictedHeaders.contains(headerName)) {\n                         final String headerValue = header.getValue();\n                         builder.setHeader(headerName, headerValue);\n                     } else {\n-                        logger.error(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n-                            + \"and above (unless it is whitelisted in JAVA_HOME/conf/net.properties).\");\n+                        logger.warning(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n+                            + \"and above. This header can be whitelisted in JAVA_HOME/conf/net.properties or in \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2b09e2c05d83e6765ec5503db19abc75d627617"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3853, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}