{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjUwMjk1", "number": 12282, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMDoxNlrOEG2zuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMjo0MVrOEG22vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjI0ODg5OnYy", "diffSide": "RIGHT", "path": "sdk/schemaregistry/azure-data-schemaregistry/src/main/java/com/azure/data/schemaregistry/client/CachedSchemaRegistryClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMDoxNlrOGl6ViA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzowMDozN1rOGmC1fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNjI4MA==", "bodyText": "If we want to include a timeout, it must be configurable by the user?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12282#discussion_r442406280", "createdAt": "2020-06-18T18:00:16Z", "author": {"login": "srnagar"}, "path": "sdk/schemaregistry/azure-data-schemaregistry/src/main/java/com/azure/data/schemaregistry/client/CachedSchemaRegistryClient.java", "diffHunk": "@@ -118,13 +122,26 @@ public SchemaRegistryObject register(\n             \"Registering schema. Group: '{}', name: '{}', serialization type: '{}', payload: '{}'\",\n                 schemaGroup, schemaName, schemaType, schemaString);\n \n-        SchemaId schemaId;\n+        CreateSchemaResponse response;\n         try {\n-            schemaId = this.restService.createSchema(schemaGroup, schemaName, schemaType, schemaString);\n+            response = this.restService.createSchemaWithResponseAsync(schemaGroup, schemaName, schemaType, schemaString)\n+                .block(HTTP_REQUEST_TIMEOUT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629ac6fe80c6e23c265703260d2d95b8c56d0146"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NTUzNQ==", "bodyText": "#12341", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12282#discussion_r442545535", "createdAt": "2020-06-18T23:00:37Z", "author": {"login": "arerlend"}, "path": "sdk/schemaregistry/azure-data-schemaregistry/src/main/java/com/azure/data/schemaregistry/client/CachedSchemaRegistryClient.java", "diffHunk": "@@ -118,13 +122,26 @@ public SchemaRegistryObject register(\n             \"Registering schema. Group: '{}', name: '{}', serialization type: '{}', payload: '{}'\",\n                 schemaGroup, schemaName, schemaType, schemaString);\n \n-        SchemaId schemaId;\n+        CreateSchemaResponse response;\n         try {\n-            schemaId = this.restService.createSchema(schemaGroup, schemaName, schemaType, schemaString);\n+            response = this.restService.createSchemaWithResponseAsync(schemaGroup, schemaName, schemaType, schemaString)\n+                .block(HTTP_REQUEST_TIMEOUT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNjI4MA=="}, "originalCommit": {"oid": "629ac6fe80c6e23c265703260d2d95b8c56d0146"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjI1NjYwOnYy", "diffSide": "RIGHT", "path": "sdk/schemaregistry/azure-data-schemaregistry/src/main/java/com/azure/data/schemaregistry/client/CachedSchemaRegistryClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMjo0MVrOGl6aaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMjo0MVrOGl6aaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNzUyOA==", "bodyText": "Same here, timeout should be an optional method param. You can still have a default in case it's not set.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12282#discussion_r442407528", "createdAt": "2020-06-18T18:02:41Z", "author": {"login": "srnagar"}, "path": "sdk/schemaregistry/azure-data-schemaregistry/src/main/java/com/azure/data/schemaregistry/client/CachedSchemaRegistryClient.java", "diffHunk": "@@ -171,23 +194,35 @@ public SchemaRegistryObject getSchemaByGuid(String schemaId) {\n     }\n \n     @Override\n-    public String getSchemaId(\n-        String schemaGroup, String schemaName, String schemaString, String schemaType) {\n+    public String getSchemaId(String schemaGroup, String schemaName, String schemaString, String schemaType) {\n         if (schemaStringCache.containsKey(schemaString)) {\n             logger.verbose(\"Cache hit schema string. Group: '{}', name: '{}'\", schemaGroup, schemaName);\n             return schemaStringCache.get(schemaString).getSchemaId();\n         }\n \n-        SchemaId schemaId;\n+        GetIdBySchemaContentResponse response;\n         try {\n-            schemaId = this.restService.getIdBySchemaContent(schemaGroup, schemaName, schemaType, schemaString);\n+            response = this.restService\n+                .getIdBySchemaContentWithResponseAsync(schemaGroup, schemaName, schemaType, schemaString)\n+                .block(HTTP_REQUEST_TIMEOUT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "629ac6fe80c6e23c265703260d2d95b8c56d0146"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3869, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}