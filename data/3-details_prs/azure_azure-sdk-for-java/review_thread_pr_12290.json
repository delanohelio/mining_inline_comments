{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODg2NzAz", "number": 12290, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowNjo0OFrOEGZIRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTowMDo0MVrOEG4CiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM4NjMxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowNjo0OFrOGlKRNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTo1N1rOGlKbHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxODc0Mw==", "bodyText": "Docket image nees to be build from benchamrk target folder right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441618743", "createdAt": "2020-06-17T15:06:48Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "diffHunk": "@@ -0,0 +1,7 @@\n+FROM ubuntu:18.04\n+RUN apt-get update && apt-get install -y openjdk-8-jdk net-tools vim\n+COPY ./run_benchmark.sh /usr/app/\n+COPY ./azure-cosmos-benchmark-jar-with-dependencies.jar /usr/app/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTI3OQ==", "bodyText": "Building code and build image are two separate task, so we have copy task which bring the jar and docker config files in one folder before we build docker . Please refer the CI sent offline", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441621279", "createdAt": "2020-06-17T15:09:57Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "diffHunk": "@@ -0,0 +1,7 @@\n+FROM ubuntu:18.04\n+RUN apt-get update && apt-get install -y openjdk-8-jdk net-tools vim\n+COPY ./run_benchmark.sh /usr/app/\n+COPY ./azure-cosmos-benchmark-jar-with-dependencies.jar /usr/app/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxODc0Mw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM5MzM1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowODowM1rOGlKVUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo0MjowOVrOGlL0wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTc5NA==", "bodyText": "Can the docker publishing and consuming latest also be automated?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441619794", "createdAt": "2020-06-17T15:08:03Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "diffHunk": "@@ -0,0 +1,7 @@\n+FROM ubuntu:18.04", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMDA5Ng==", "bodyText": "Is that the test CI referred in IM?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441620096", "createdAt": "2020-06-17T15:08:25Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "diffHunk": "@@ -0,0 +1,7 @@\n+FROM ubuntu:18.04", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTc5NA=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NDIyNg==", "bodyText": "We could use \"FROM ubuntu:latest\" which will bring ubuntu:18.04 which is current latest LTS version.\nI still prefer mentioning version , so when we change it manually and see some different result we can relate to the version change.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441644226", "createdAt": "2020-06-17T15:42:09Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/Dockerfile", "diffHunk": "@@ -0,0 +1,7 @@\n+FROM ubuntu:18.04", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTc5NA=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTcwMTAxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjoyMTo0MVrOGlNXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo1MDo1N1rOGmBaCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw==", "bodyText": "Didn't we have an existing jar-with-dependencies plugin already ?\nWhy can't we use the existing one instead of creating another one here ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441669407", "createdAt": "2020-06-17T16:21:41Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MjMwNg==", "bodyText": "Yes we could use that , but it has version in it . And docker script need exact file name to run. Either i change the existing name to static without version in it . But in doing so devs who compare benchmark across different version , it would be difficult for them to maintain or they have to rename the jar each time.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441672306", "createdAt": "2020-06-17T16:26:19Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NDI0Mw==", "bodyText": "Can wildcard copy followed by move leveraged?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442444243", "createdAt": "2020-06-18T19:10:56Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwODE5MA==", "bodyText": "We can use wild card while copy , but script while running need exact name", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442508190", "createdAt": "2020-06-18T21:18:25Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMDA1OA==", "bodyText": "I also agree with Kushagra's point, if we can we should avoid duplicating the build config for the uber jar.\n@simplynaveen20 in your dockerfile,  you can have a command to discover the jar file name and then copy it to /usr/app/azure-cosmos-benchmark-jar-with-dependencies.jar\nisn't that possible?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442510058", "createdAt": "2020-06-18T21:22:30Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjEyMA==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442522120", "createdAt": "2020-06-18T21:50:57Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/pom.xml", "diffHunk": "@@ -477,6 +477,25 @@ Licensed under the MIT License.\n                   </archive>\n                 </configuration>\n               </execution>\n+              <execution>\n+                <id>make-assembly-ctl</id>\n+                <phase>package</phase>\n+                <goals>\n+                  <goal>single</goal>\n+                </goals>\n+                <configuration>\n+                  <descriptorRefs>\n+                    <descriptorRef>jar-with-dependencies</descriptorRef>\n+                  </descriptorRefs>\n+                  <outputDirectory>${project.build.directory}/ctl</outputDirectory>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2OTQwNw=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTkxODEwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoyMTo1M1rOGlPk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMToyMTo1NFrOGlX4BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTcxNg==", "bodyText": "please follow bash code style for naming variables\nhttps://google.github.io/styleguide/shellguide.html#s7-naming-conventions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441705716", "createdAt": "2020-06-17T17:21:53Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+serviceEndpoint=$Endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MTE1Mw==", "bodyText": "Yes left hand side we can do i.e. serviceEndpoint -> service_endpoint . However right hand side are docker env  variables which does not have as such naming convention mention on docker docs. Also we already have contract established with CTL on those. So If you have strong opinion on docker env  variables please let me know", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441771153", "createdAt": "2020-06-17T19:05:30Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+serviceEndpoint=$Endpoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTcxNg=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgxMjY0MQ==", "bodyText": "Naveen I am referring to all variable names in this file. we should follow the bash code style.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441812641", "createdAt": "2020-06-17T20:26:19Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+serviceEndpoint=$Endpoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTcxNg=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0MTY2OA==", "bodyText": "I know , i was trying to avoid those convention on env variable from docker, as it involve updating scripts on ctl . Anyway I did that now , will contact ctl team", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r441841668", "createdAt": "2020-06-17T21:21:54Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+serviceEndpoint=$Endpoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwNTcxNg=="}, "originalCommit": {"oid": "ccbb5dec09839538480c649a9354b8f1ec4e52b8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjQxNTIwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1MDo0NFrOGl7_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo1MjoyMFrOGmBcCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzMzUyMQ==", "bodyText": "any reason we are going with 2gb? the perf test I do are based on 8gb.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442433521", "createdAt": "2020-06-18T18:50:44Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+service_endpoint=$ctl_endpoint\n+master_key=$ctl_key\n+\n+if [ -z \"$ctl_operation\" ]\n+then\n+operation=ReadLatency\n+else\n+operation=$ctl_operation\n+fi\n+\n+if [ -z \"$ctl_concurrency\" ]\n+then\n+concurrency=50\n+else\n+concurrency=$ctl_concurrency\n+fi\n+\n+if [ -z \"$ctl_consistency_level\" ]\n+then\n+consistency_level=Eventual\n+else\n+consistency_level=$ctl_consistency_level\n+fi\n+\n+if [ -z \"$ctl_number_of_operations\" ]\n+then\n+number_of_operations=-1\n+else\n+number_of_operations=$ctl_number_of_operations\n+fi\n+\n+if [ -z \"$ctl_max_running_time_duration\" ]\n+then\n+max_running_time_duration=PT10H\n+else\n+max_running_time_duration=$ctl_max_running_time_duration\n+fi\n+\n+connection_mode=Direct\n+number_of_precreated_documents=1000\n+gateway_connection_poolsize=5\n+\n+protocol=Tcp\n+\n+col_name=\"testCol\"\n+db_name=\"testdb\"\n+\n+log_filename=\"/tmp/javactl.log\"\n+\n+echo \"log file name is $log_filename\"\n+\n+echo \"serviceEndpoint $service_endpoint, colNmae $col_name operation: $operation, consistencyLevel: $consistency_level, connectionMode: $connection_mode, protocol: $protocol, concurrency: $concurrency\" > $log_filename\n+start=`test \"x$1\" == x && date +%s`\n+jar_file=./azure-cosmos-benchmark-jar-with-dependencies.jar\n+\n+jvm_opt=\"\"\n+#jvm_opt='-Dazure.cosmos.rntbd.threadcount=16 -Dazure.cosmos.directTcp.defaultOptions={\"maxRequestsPerChannel\":10}'\n+additional_benchmark_options=\"\" \n+additional_benchmark_options=\"-documentDataFieldSize 10 -documentDataFieldCount 10\" \n+additional_benchmark_options=\"$additional_benchmark_options -maxConnectionPoolSize $gateway_connection_poolsize\"\n+\n+if [ -z \"$ctl_graphite_endpoint\" ]\n+then\n+java -Xmx2g -Xms2g  $jvm_opt -Dcosmos.directModeProtocol=$protocol -Dazure.cosmos.directModeProtocol=$protocol -jar \"$jar_file\" -serviceEndpoint \"$service_endpoint\" -masterKey \"$master_key\" -databaseId \"$db_name\"  -collectionId \"$col_name\" -consistencyLevel $consistency_level -concurrency $concurrency -numberOfOperations $number_of_operations -operation $operation -connectionMode $connection_mode -maxRunningTimeDuration $max_running_time_duration -numberOfPreCreatedDocuments $number_of_precreated_documents $additional_benchmark_options 2>&1 | tee -a \"$log_filename\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjYzMg==", "bodyText": "It was simple work load as of now, and we don't have big cache . But no harm in making it at 8gb to have one standard number. Changed it", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442522632", "createdAt": "2020-06-18T21:52:20Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+service_endpoint=$ctl_endpoint\n+master_key=$ctl_key\n+\n+if [ -z \"$ctl_operation\" ]\n+then\n+operation=ReadLatency\n+else\n+operation=$ctl_operation\n+fi\n+\n+if [ -z \"$ctl_concurrency\" ]\n+then\n+concurrency=50\n+else\n+concurrency=$ctl_concurrency\n+fi\n+\n+if [ -z \"$ctl_consistency_level\" ]\n+then\n+consistency_level=Eventual\n+else\n+consistency_level=$ctl_consistency_level\n+fi\n+\n+if [ -z \"$ctl_number_of_operations\" ]\n+then\n+number_of_operations=-1\n+else\n+number_of_operations=$ctl_number_of_operations\n+fi\n+\n+if [ -z \"$ctl_max_running_time_duration\" ]\n+then\n+max_running_time_duration=PT10H\n+else\n+max_running_time_duration=$ctl_max_running_time_duration\n+fi\n+\n+connection_mode=Direct\n+number_of_precreated_documents=1000\n+gateway_connection_poolsize=5\n+\n+protocol=Tcp\n+\n+col_name=\"testCol\"\n+db_name=\"testdb\"\n+\n+log_filename=\"/tmp/javactl.log\"\n+\n+echo \"log file name is $log_filename\"\n+\n+echo \"serviceEndpoint $service_endpoint, colNmae $col_name operation: $operation, consistencyLevel: $consistency_level, connectionMode: $connection_mode, protocol: $protocol, concurrency: $concurrency\" > $log_filename\n+start=`test \"x$1\" == x && date +%s`\n+jar_file=./azure-cosmos-benchmark-jar-with-dependencies.jar\n+\n+jvm_opt=\"\"\n+#jvm_opt='-Dazure.cosmos.rntbd.threadcount=16 -Dazure.cosmos.directTcp.defaultOptions={\"maxRequestsPerChannel\":10}'\n+additional_benchmark_options=\"\" \n+additional_benchmark_options=\"-documentDataFieldSize 10 -documentDataFieldCount 10\" \n+additional_benchmark_options=\"$additional_benchmark_options -maxConnectionPoolSize $gateway_connection_poolsize\"\n+\n+if [ -z \"$ctl_graphite_endpoint\" ]\n+then\n+java -Xmx2g -Xms2g  $jvm_opt -Dcosmos.directModeProtocol=$protocol -Dazure.cosmos.directModeProtocol=$protocol -jar \"$jar_file\" -serviceEndpoint \"$service_endpoint\" -masterKey \"$master_key\" -databaseId \"$db_name\"  -collectionId \"$col_name\" -consistencyLevel $consistency_level -concurrency $concurrency -numberOfOperations $number_of_operations -operation $operation -connectionMode $connection_mode -maxRunningTimeDuration $max_running_time_duration -numberOfPreCreatedDocuments $number_of_precreated_documents $additional_benchmark_options 2>&1 | tee -a \"$log_filename\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzMzUyMQ=="}, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjQxOTI4OnYy", "diffSide": "LEFT", "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/AsyncBenchmark.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo1MjowMlrOGl8Cng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo1NTozNVrOGmBg9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNDIwNg==", "bodyText": "any reason we are removing the log messages?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442434206", "createdAt": "2020-06-18T18:52:02Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/AsyncBenchmark.java", "diffHunk": "@@ -84,9 +84,7 @@\n \n         try {\n             cosmosAsyncDatabase = cosmosClient.getDatabase(this.configuration.getDatabaseId());\n-            cosmosAsyncDatabase.read().doOnError(error ->\n-                logger.error(\"Database {} creation failed due to \", this.configuration.getDatabaseId(), error)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMzg5NQ==", "bodyText": "It was mistakenly added in David's PR. This is normal flow, no error log needed . If user didn't  have the db/container available benchmark will create it for them.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442523895", "createdAt": "2020-06-18T21:55:35Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/AsyncBenchmark.java", "diffHunk": "@@ -84,9 +84,7 @@\n \n         try {\n             cosmosAsyncDatabase = cosmosClient.getDatabase(this.configuration.getDatabaseId());\n-            cosmosAsyncDatabase.read().doOnError(error ->\n-                logger.error(\"Database {} creation failed due to \", this.configuration.getDatabaseId(), error)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzNDIwNg=="}, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjQ1MDY1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOTowMDo0MVrOGl8Vtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo1MjoyOFrOGmBcPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzOTA5NQ==", "bodyText": "general idea on setting number_of_precreated_documents is that we should ensure on each BE partition at least there is a few document to read from (this would be a factor of Collection Throughput, partition splitting etc).\nprobably 1000 is good enough but to be safe can we set this to something higher (10,000) maybe?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442439095", "createdAt": "2020-06-18T19:00:41Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+service_endpoint=$ctl_endpoint\n+master_key=$ctl_key\n+\n+if [ -z \"$ctl_operation\" ]\n+then\n+operation=ReadLatency\n+else\n+operation=$ctl_operation\n+fi\n+\n+if [ -z \"$ctl_concurrency\" ]\n+then\n+concurrency=50\n+else\n+concurrency=$ctl_concurrency\n+fi\n+\n+if [ -z \"$ctl_consistency_level\" ]\n+then\n+consistency_level=Eventual\n+else\n+consistency_level=$ctl_consistency_level\n+fi\n+\n+if [ -z \"$ctl_number_of_operations\" ]\n+then\n+number_of_operations=-1\n+else\n+number_of_operations=$ctl_number_of_operations\n+fi\n+\n+if [ -z \"$ctl_max_running_time_duration\" ]\n+then\n+max_running_time_duration=PT10H\n+else\n+max_running_time_duration=$ctl_max_running_time_duration\n+fi\n+\n+connection_mode=Direct\n+number_of_precreated_documents=1000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjY4NQ==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12290#discussion_r442522685", "createdAt": "2020-06-18T21:52:28Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/ctl/run_benchmark.sh", "diffHunk": "@@ -0,0 +1,74 @@\n+#!/bin/bash\n+\n+service_endpoint=$ctl_endpoint\n+master_key=$ctl_key\n+\n+if [ -z \"$ctl_operation\" ]\n+then\n+operation=ReadLatency\n+else\n+operation=$ctl_operation\n+fi\n+\n+if [ -z \"$ctl_concurrency\" ]\n+then\n+concurrency=50\n+else\n+concurrency=$ctl_concurrency\n+fi\n+\n+if [ -z \"$ctl_consistency_level\" ]\n+then\n+consistency_level=Eventual\n+else\n+consistency_level=$ctl_consistency_level\n+fi\n+\n+if [ -z \"$ctl_number_of_operations\" ]\n+then\n+number_of_operations=-1\n+else\n+number_of_operations=$ctl_number_of_operations\n+fi\n+\n+if [ -z \"$ctl_max_running_time_duration\" ]\n+then\n+max_running_time_duration=PT10H\n+else\n+max_running_time_duration=$ctl_max_running_time_duration\n+fi\n+\n+connection_mode=Direct\n+number_of_precreated_documents=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzOTA5NQ=="}, "originalCommit": {"oid": "50c9d892bb84f622c0754770d951624157288527"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3878, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}