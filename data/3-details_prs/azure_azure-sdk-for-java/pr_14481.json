{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODU0Mjk5", "number": 14481, "title": "Adds new API CosmosContainer.readAllItems to retrieve all documents of a logical partition avoiding IO to retrieve query plan", "bodyText": "", "createdAt": "2020-08-26T11:54:11Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481", "merged": true, "mergeCommit": {"oid": "5a96582b029df5b4926da80dae33e7d7f1ef2d47"}, "closed": true, "closedAt": "2020-08-27T07:42:25Z", "author": {"login": "FabianMeiswinkel"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCDERgAH2gAyNDczODU0Mjk5OjczYzlmMDRjNjcwOTU3MzRkZDcxYWZjYTFmMDBkNTlmMTA2NGFkMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCzZgTAFqTQ3NTkyNzAxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73c9f04c67095734dd71afca1f00d59f1064ad21", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/73c9f04c67095734dd71afca1f00d59f1064ad21", "committedDate": "2020-08-24T13:59:28Z", "message": "Enabling query metrics by default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d63712bcf919554bea9134e91c837a20bd338470", "committedDate": "2020-08-24T14:11:59Z", "message": "Adding null-value handling to quey metric validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea53fbcd97f7524429eb8bcbd6c8ce61a40cbfca", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea53fbcd97f7524429eb8bcbd6c8ce61a40cbfca", "committedDate": "2020-08-25T00:31:46Z", "message": "Fix for NPE in GatewayAddressCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bf2117b22d3b44da22330a1ba70e4444a2c81aa", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0bf2117b22d3b44da22330a1ba70e4444a2c81aa", "committedDate": "2020-08-25T00:32:24Z", "message": "Adding comments explaining default value of QueryMetricEnabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32179790336a2adb4622e12d0c98f29e79679977", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/32179790336a2adb4622e12d0c98f29e79679977", "committedDate": "2020-08-25T22:10:33Z", "message": "Adding support for readAllItems of a logical partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "982cc17ac0fa154471430826b31eca79be2471b6", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/982cc17ac0fa154471430826b31eca79be2471b6", "committedDate": "2020-08-26T11:51:31Z", "message": "Adding readAllItems for sync CosmosContainer as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef1242b23c3137d170458bbb4366f1204fcf73b3", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ef1242b23c3137d170458bbb4366f1204fcf73b3", "committedDate": "2020-08-26T11:56:03Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/EnableQueryMetricsByDefault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3514516afbf23f185e8e5ed20bc4e678830df587", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3514516afbf23f185e8e5ed20bc4e678830df587", "committedDate": "2020-08-26T14:39:36Z", "message": "Adding basic unit test for ReadAllItems(PK)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTg3Njk0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475587694", "createdAt": "2020-08-26T15:09:11Z", "commit": {"oid": "3514516afbf23f185e8e5ed20bc4e678830df587"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTowOToxMVrOHHQuZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTowOToxMVrOHHQuZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM3NjEwMQ==", "bodyText": "Is Itemizing (or promoting parts of) request option, to limit to applicable ones?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477376101", "createdAt": "2020-08-26T15:09:11Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -532,6 +534,102 @@ public String getId() {\n         return withContext(context -> readItemInternal(itemId, requestOptions, itemType, context));\n     }\n \n+    /**\n+     * Reads many documents.\n+     *\n+     * @param <T> the type parameter\n+     * @param itemKeyList document id and partition key pair that needs to be read\n+     * @param classType   class type\n+     * @return a Mono with feed response of cosmos items\n+     */\n+    @Beta(Beta.SinceVersion.V4_4_0)\n+    public <T> Mono<FeedResponse<T>> readMany(\n+        List<Pair<String, PartitionKey>> itemKeyList,\n+        Class<T> classType) {\n+\n+        return this.readMany(itemKeyList, null, classType);\n+    }\n+\n+    /**\n+     * Reads many documents.\n+     *\n+     * @param <T> the type parameter\n+     * @param itemKeyList document id and partition key pair that needs to be read\n+     * @param sessionToken the optional Session token - null if the read can be made without specific session token\n+     * @param classType   class type\n+     * @return a Mono with feed response of cosmos items\n+     */\n+    @Beta(Beta.SinceVersion.V4_4_0)\n+    public <T> Mono<FeedResponse<T>> readMany(\n+        List<Pair<String, PartitionKey>> itemKeyList,\n+        String sessionToken,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3514516afbf23f185e8e5ed20bc4e678830df587"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50091deab09652e00f8a61631b0b834c928e93a", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d50091deab09652e00f8a61631b0b834c928e93a", "committedDate": "2020-08-26T15:12:23Z", "message": "Adding benchmark for ReadAllItems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c1c8a5fbd37d8e2975453964004d363542f2ec", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/37c1c8a5fbd37d8e2975453964004d363542f2ec", "committedDate": "2020-08-26T16:17:52Z", "message": "Fixing cosmos-benchmark version as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a31c1bab620ada5d8da99b1af12f0439fbb7f0c0", "committedDate": "2020-08-26T16:36:48Z", "message": "Fixing changelog for cosmos-encryption"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NjkxNDM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475691434", "createdAt": "2020-08-26T17:08:38Z", "commit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzowODozOVrOHHVnuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzoyMDozNFrOHHWD-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1NjMxMw==", "bodyText": "We don't need to increment this version - since cosmos-encryption is not releasing.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477456313", "createdAt": "2020-08-26T17:08:39Z", "author": {"login": "kushagraThapar"}, "path": "eng/jacoco-test-coverage/pom.xml", "diffHunk": "@@ -104,12 +104,12 @@\n     <dependency>\n       <groupId>com.azure</groupId>\n       <artifactId>azure-cosmos</artifactId>\n-      <version>4.3.2-beta.3</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+      <version>4.4.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n     </dependency>\n     <dependency>\n       <groupId>com.azure</groupId>\n       <artifactId>azure-cosmos-encryption</artifactId>\n-      <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+      <version>1.1.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MTg1NQ==", "bodyText": "Same here, we don't need these version increments.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477461855", "createdAt": "2020-08-26T17:17:43Z", "author": {"login": "kushagraThapar"}, "path": "eng/jacoco-test-coverage/pom.xml", "diffHunk": "@@ -360,7 +360,7 @@\n     <dependency>\n       <groupId>com.azure</groupId>\n       <artifactId>azure-spring-data-cosmos-core</artifactId>\n-      <version>3.0.0-beta.2</version> <!-- {x-version-update;com.azure:azure-spring-data-cosmos-core;current} -->\n+      <version>3.1.0-beta.1</version> <!-- {x-version-update;com.azure:azure-spring-data-cosmos-core;current} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MjQ4NA==", "bodyText": "benchmark and encryption should not be incremented. Nor should be spring-data-cosmos modules.\nyou can even skip azure-cosmos version increment here, and just do it one time when we are ready to release.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477462484", "createdAt": "2020-08-26T17:18:48Z", "author": {"login": "kushagraThapar"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -19,9 +19,9 @@ com.azure:azure-core-serializer-json-gson;1.0.0-beta.3;1.0.0-beta.4\n com.azure:azure-core-serializer-json-jackson;1.0.0-beta.3;1.0.0-beta.4\n com.azure:azure-core-test;1.4.0;1.5.0-beta.1\n com.azure:azure-core-tracing-opentelemetry;1.0.0-beta.6;1.0.0-beta.7\n-com.azure:azure-cosmos;4.3.1;4.3.2-beta.3\n-com.azure:azure-cosmos-benchmark;4.0.1-beta.1;4.0.1-beta.1\n-com.azure:azure-cosmos-encryption;1.0.0-beta.1;1.0.0-beta.1\n+com.azure:azure-cosmos;4.3.1;4.4.0-beta.1\n+com.azure:azure-cosmos-benchmark;4.0.1-beta.1;4.1.0-beta.1\n+com.azure:azure-cosmos-encryption;1.1.0-beta.1;1.1.0-beta.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MzIzNg==", "bodyText": "This is not required either.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477463236", "createdAt": "2020-08-26T17:20:02Z", "author": {"login": "kushagraThapar"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -115,7 +115,7 @@ com.microsoft.azure:spring-cloud-azure-stream-binder-test;1.2.8-beta.1;1.2.8-bet\n com.microsoft.azure:spring-cloud-azure-servicebus-topic-stream-binder;1.2.8-beta.1;1.2.8-beta.1\n com.microsoft.azure:spring-cloud-azure-servicebus-queue-stream-binder;1.2.8-beta.1;1.2.8-beta.1\n com.microsoft.azure:spring-cloud-azure-eventhubs-stream-binder;1.2.8-beta.1;1.2.8-beta.1\n-com.microsoft.azure:spring-data-cosmosdb;3.0.0-beta.1;3.0.0-beta.1\n+com.microsoft.azure:spring-data-cosmosdb;3.0.0-beta.1;3.1.0-beta.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MzQwOQ==", "bodyText": "No need to update this. please leave it as it is.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477463409", "createdAt": "2020-08-26T17:20:20Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-encryption/CHANGELOG.md", "diffHunk": "@@ -1,4 +1,4 @@\n # Release History\n \n-## 1.0.0-beta.1 (Unreleased)\n+## 1.1.0-beta.1 (Unreleased)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MzU0Ng==", "bodyText": "Thanks for the changelog update.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477463546", "createdAt": "2020-08-26T17:20:34Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,9 @@\n # Release History\n \n-## 4.3.2-beta.3 (Unreleased)\n-\n+## 4.4.0-beta.1 (Unreleased)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b400574bf547e277e1a112ce236d7a92026fa36", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b400574bf547e277e1a112ce236d7a92026fa36", "committedDate": "2020-08-26T17:50:48Z", "message": "Fixing versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbc349f46d96ee4545cab42c0b5ec40ad2bfbc5f", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbc349f46d96ee4545cab42c0b5ec40ad2bfbc5f", "committedDate": "2020-08-26T18:01:34Z", "message": "Fixing current version of azure-cosmos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b90615590b766a43c19d066326358fca7462573f", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b90615590b766a43c19d066326358fca7462573f", "committedDate": "2020-08-26T18:19:53Z", "message": "Reverting azure-cosmos version bump"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80b91ca9103f8fe082105fc8bb88981304785ccc", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80b91ca9103f8fe082105fc8bb88981304785ccc", "committedDate": "2020-08-26T18:31:54Z", "message": "Bumping azure-cosmos version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "835526482974d6f2aaf5459578e1fac57716bf42", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/835526482974d6f2aaf5459578e1fac57716bf42", "committedDate": "2020-08-26T18:40:21Z", "message": "Reverting unnecessary changelog and readme changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzA0MjM1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475704235", "createdAt": "2020-08-26T17:25:30Z", "commit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzoyNTozMVrOHHWQDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0MDoxMlrOHHY1AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NjYzNw==", "bodyText": "NPE bug if the number of pre-created documents is less than 1000.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477466637", "createdAt": "2020-08-26T17:25:31Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/AsyncQueryBenchmark.java", "diffHunk": "@@ -123,6 +123,11 @@ protected void performWorkload(BaseSubscriber<FeedResponse<PojoizedJson>> baseSu\n \n             SqlQuerySpec query = queryBuilder.toSqlQuerySpec();\n             obs = cosmosAsyncContainer.queryItems(query, options, PojoizedJson.class).byPage();\n+        } else if (configuration.getOperationType() == Configuration.Operation.ReadAllItemsOfLogicalPartition) {\n+\n+            int index = r.nextInt(1000);\n+            String pk = docsToRead.get(index).getProperty(partitionKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NzA2OQ==", "bodyText": "please undo all the pom version changes. here and elsewhere.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477467069", "createdAt": "2020-08-26T17:26:14Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -13,7 +13,7 @@ Licensed under the MIT License.\n \n   <groupId>com.azure</groupId>\n   <artifactId>azure-cosmos-encryption</artifactId>\n-  <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <version>1.1.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ3MDQ4NQ==", "bodyText": "other than V4_4_0 do we need the other ones? perhaps we can start with V4_4_0 only for now?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477470485", "createdAt": "2020-08-26T17:32:08Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/util/Beta.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.util;\n+\n+import static java.lang.annotation.ElementType.METHOD;\n+import static java.lang.annotation.ElementType.PARAMETER;\n+import static java.lang.annotation.ElementType.TYPE;\n+import static java.lang.annotation.ElementType.CONSTRUCTOR;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RetentionPolicy.CLASS)\n+@Target({ TYPE, METHOD, PARAMETER, CONSTRUCTOR })\n+@Inherited\n+/**\n+ * Indicates functionality that is in preview and as such is subject to change in non-backwards compatible ways in future releases,\n+ * including removal, regardless of any compatibility expectations set by the containing library version.\n+ */\n+public @interface Beta {\n+    String warningText() default \"This functionality is in preview and as such is subject to change in non-backwards compatible ways in future releases, including removal, regardless of any compatibility expectations set by the containing library version.\";\n+\n+    /**\n+     * @return the version number when the annotated API was first introduced to the library as in Beta\n+     */\n+    SinceVersion value() default SinceVersion.V4_4_0;\n+\n+    /**\n+     * Azure library version numbers\n+     */\n+    public enum SinceVersion {\n+        /** v4.4.0 */\n+        V4_4_0,\n+\n+        /** v4.5.0 */\n+        V4_5_0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a31c1bab620ada5d8da99b1af12f0439fbb7f0c0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwODg2NQ==", "bodyText": "why do we need to expose session token here?\nDid anyone ask for it? if not can we remove this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477508865", "createdAt": "2020-08-26T18:40:12Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -532,6 +534,102 @@ public String getId() {\n         return withContext(context -> readItemInternal(itemId, requestOptions, itemType, context));\n     }\n \n+    /**\n+     * Reads many documents.\n+     *\n+     * @param <T> the type parameter\n+     * @param itemKeyList document id and partition key pair that needs to be read\n+     * @param classType   class type\n+     * @return a Mono with feed response of cosmos items\n+     */\n+    @Beta(Beta.SinceVersion.V4_4_0)\n+    public <T> Mono<FeedResponse<T>> readMany(\n+        List<Pair<String, PartitionKey>> itemKeyList,\n+        Class<T> classType) {\n+\n+        return this.readMany(itemKeyList, null, classType);\n+    }\n+\n+    /**\n+     * Reads many documents.\n+     *\n+     * @param <T> the type parameter\n+     * @param itemKeyList document id and partition key pair that needs to be read\n+     * @param sessionToken the optional Session token - null if the read can be made without specific session token\n+     * @param classType   class type\n+     * @return a Mono with feed response of cosmos items\n+     */\n+    @Beta(Beta.SinceVersion.V4_4_0)\n+    public <T> Mono<FeedResponse<T>> readMany(\n+        List<Pair<String, PartitionKey>> itemKeyList,\n+        String sessionToken,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80b91ca9103f8fe082105fc8bb88981304785ccc"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "977db82d9e74981d8d1e02261bd1e9e63e4dea8c", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/977db82d9e74981d8d1e02261bd1e9e63e4dea8c", "committedDate": "2020-08-26T18:50:22Z", "message": "Fixing azure-cosmos-benchmark to use dynamic number of precreated documents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzgxNjk4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475781698", "createdAt": "2020-08-26T19:09:00Z", "commit": {"oid": "977db82d9e74981d8d1e02261bd1e9e63e4dea8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTowOTowMFrOHHaA0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTowOTowMFrOHHaA0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyODI3NQ==", "bodyText": "please add one line description to \"-operation\" parameter description, similar to other operations.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477528275", "createdAt": "2020-08-26T19:09:00Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/Configuration.java", "diffHunk": "@@ -163,7 +163,8 @@ public Duration convert(String value) {\n         Mixed,\n         ReadMyWrites,\n         ReadThroughputWithMultipleClients,\n-        CtlWorkload;\n+        CtlWorkload,\n+        ReadAllItemsOfLogicalPartition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977db82d9e74981d8d1e02261bd1e9e63e4dea8c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzgyMzA2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475782306", "createdAt": "2020-08-26T19:09:56Z", "commit": {"oid": "977db82d9e74981d8d1e02261bd1e9e63e4dea8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTowOTo1NlrOHHaC0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxOTowOTo1NlrOHHaC0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyODc4NQ==", "bodyText": "dont' rely on StringUtils from micrometer, that's an external dependency.\nPlease use com.azure.cosmos.implementation.apachecommons.lang.StringUtils instead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477528785", "createdAt": "2020-08-26T19:09:56Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "diffHunk": "@@ -3,22 +3,30 @@\n \n package com.azure.cosmos;\n \n+import com.azure.cosmos.implementation.apachecommons.lang.tuple.Pair;\n import com.azure.cosmos.models.CosmosItemResponse;\n import com.azure.cosmos.models.CosmosContainerProperties;\n import com.azure.cosmos.models.CosmosContainerRequestOptions;\n import com.azure.cosmos.models.CosmosContainerResponse;\n import com.azure.cosmos.models.CosmosItemRequestOptions;\n import com.azure.cosmos.models.CosmosQueryRequestOptions;\n+import com.azure.cosmos.models.FeedResponse;\n import com.azure.cosmos.models.PartitionKey;\n import com.azure.cosmos.models.SqlQuerySpec;\n import com.azure.cosmos.models.ThroughputProperties;\n import com.azure.cosmos.models.ThroughputResponse;\n+import com.azure.cosmos.util.Beta;\n import com.azure.cosmos.util.CosmosPagedFlux;\n import com.azure.cosmos.util.CosmosPagedIterable;\n import com.azure.cosmos.util.UtilBridgeInternal;\n+import io.micrometer.core.instrument.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977db82d9e74981d8d1e02261bd1e9e63e4dea8c"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "546e1b8e19c23f9e93dee0dd14deaf117549384e", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/546e1b8e19c23f9e93dee0dd14deaf117549384e", "committedDate": "2020-08-26T19:14:00Z", "message": "Adding benchmark use case description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a483b4ed80d406054c2ed51243277f3abb65a1c7", "committedDate": "2020-08-26T19:17:45Z", "message": "Fixing wrong StringUtils dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10bab43ffe4c6091e816cfcd4c582a8a96af08a1", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/10bab43ffe4c6091e816cfcd4c582a8a96af08a1", "committedDate": "2020-08-26T19:38:35Z", "message": "Remove unnecessary constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODE2MzUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475816350", "createdAt": "2020-08-26T20:00:50Z", "commit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMDo1MFrOHHbsFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMDo1MFrOHHbsFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NTczMw==", "bodyText": "partitionSplit handling.\nDocumentProducer which is used internally for cross-partition query is recursively split-proof.\nPlease verify two things:\n\nthat this code internally uses DocumentProducer (and hence benefit from DB being split proof.)\nplease make sure if partition split happens before DocumentProducer is instantiated still this is split proof.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477555733", "createdAt": "2020-08-26T20:00:50Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1812,6 +1830,75 @@ public QueryCompatibilityMode getQueryCompatibilityMode() {\n         return changeFeedQueryImpl.executeAsync();\n     }\n \n+    @Override\n+    public Flux<FeedResponse<Document>> readAllDocuments(\n+        String collectionLink,\n+        PartitionKey partitionKey,\n+        CosmosQueryRequestOptions options) {\n+\n+        if (StringUtils.isEmpty(collectionLink)) {\n+            throw new IllegalArgumentException(\"collectionLink\");\n+        }\n+\n+        if (partitionKey == null) {\n+            throw new IllegalArgumentException(\"partitionKey\");\n+        }\n+\n+        RxDocumentServiceRequest request = RxDocumentServiceRequest.create(\n+            OperationType.Query,\n+            ResourceType.Document,\n+            collectionLink,\n+            null\n+        );\n+\n+        // This should not got to backend\n+        Flux<Utils.ValueHolder<DocumentCollection>> collectionObs =\n+            collectionCache.resolveCollectionAsync(null, request).flux();\n+\n+        return collectionObs\n+            .flatMap(documentCollectionResourceResponse -> {\n+\n+                DocumentCollection collection = documentCollectionResourceResponse.v;\n+                if (collection == null) {\n+                    throw new IllegalStateException(\"Collection cannot be null\");\n+                }\n+\n+                PartitionKeyDefinition pkDefinition = collection.getPartitionKey();\n+                String pkSelector = createPkSelector(pkDefinition);\n+                SqlQuerySpec querySpec = createLogicalPartitionScanQuerySpec(partitionKey, pkSelector);\n+\n+                Flux<Utils.ValueHolder<CollectionRoutingMap>> valueHolderMono = this.partitionKeyRangeCache\n+                    .tryLookupAsync(BridgeInternal.getMetaDataDiagnosticContext(request.requestContext.cosmosDiagnostics),\n+                        collection.getResourceId(),\n+                        null,\n+                        null).flux();\n+                return valueHolderMono.flatMap(collectionRoutingMapValueHolder -> {\n+\n+                    CollectionRoutingMap routingMap = collectionRoutingMapValueHolder.v;\n+                    if (routingMap == null) {\n+                        throw new IllegalStateException(\"Failed to get routing map.\");\n+                    }\n+\n+                    String effectivePartitionKeyString = PartitionKeyInternalHelper\n+                        .getEffectivePartitionKeyString(\n+                            BridgeInternal.getPartitionKeyInternal(partitionKey),\n+                            pkDefinition);\n+\n+                    //use routing map to find the partitionKeyRangeId of each\n+                    // effectivePartitionKey\n+                    PartitionKeyRange range =\n+                        routingMap.getRangeByEffectivePartitionKey(effectivePartitionKeyString);\n+\n+                    final CosmosQueryRequestOptions effectiveOptions =\n+                        ModelBridgeInternal.partitionKeyRangeIdInternal(\n+                            ModelBridgeInternal.createQueryRequestOptions(options),\n+                            range.getId());\n+\n+                    return createQuery(collectionLink, querySpec, effectiveOptions, Document.class, ResourceType.Document);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "originalPosition": 306}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODE2NzA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475816708", "createdAt": "2020-08-26T20:01:21Z", "commit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMToyMVrOHHbtIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMToyMVrOHHbtIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NjAwMQ==", "bodyText": "collection stale situation:\ndelete collection, recreate the collection with the same name.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477556001", "createdAt": "2020-08-26T20:01:21Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1812,6 +1830,75 @@ public QueryCompatibilityMode getQueryCompatibilityMode() {\n         return changeFeedQueryImpl.executeAsync();\n     }\n \n+    @Override\n+    public Flux<FeedResponse<Document>> readAllDocuments(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "originalPosition": 243}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODE4MTg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475818187", "createdAt": "2020-08-26T20:03:36Z", "commit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMzozNlrOHHbxmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMzozNlrOHHbxmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NzE0Nw==", "bodyText": "unfortunately some of our existing tests rely on InternalObjectNode which is an internal class.\nCustomers see this and may use this as sample.\nPlease consider replacing InternalObjectNode with ObjectNode for the newly added tests (as this might get used as sample by end users.)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#discussion_r477557147", "createdAt": "2020-08-26T20:03:36Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosItemTest.java", "diffHunk": "@@ -200,6 +200,70 @@ public void queryItemsWithContinuationTokenAndPageSize() throws Exception{\n \n     }\n \n+    @Test(groups = { \"simple\" }, timeOut = TIMEOUT)\n+    public void readAllItemsOfLogicalPartition() throws Exception{\n+        String pkValue = UUID.randomUUID().toString();\n+        InternalObjectNode properties = getDocumentDefinition(UUID.randomUUID().toString(), pkValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODE5NjUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475819652", "createdAt": "2020-08-26T20:05:57Z", "commit": {"oid": "a483b4ed80d406054c2ed51243277f3abb65a1c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODQxMDEx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475841011", "createdAt": "2020-08-26T20:38:20Z", "commit": {"oid": "10bab43ffe4c6091e816cfcd4c582a8a96af08a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ae465a3129debd58fee56524f4f11af60ed0710", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3ae465a3129debd58fee56524f4f11af60ed0710", "committedDate": "2020-08-26T20:48:55Z", "message": "Making readAllDocuments partition split safe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "628c150ce8b20a3316e9f58fd7c3acbb9ff4f4c5", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/628c150ce8b20a3316e9f58fd7c3acbb9ff4f4c5", "committedDate": "2020-08-26T21:54:01Z", "message": "Moving new test in CosmosItemTest to ObjectNode instead of InternalObjectNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcba20bec429ff27bbbbd9c3acdc2e7af00bc623", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dcba20bec429ff27bbbbd9c3acdc2e7af00bc623", "committedDate": "2020-08-26T22:04:20Z", "message": "Adding comment that ItemOperations readMany APIs are deprecated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1OTI3MDE3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14481#pullrequestreview-475927017", "createdAt": "2020-08-26T22:18:06Z", "commit": {"oid": "3ae465a3129debd58fee56524f4f11af60ed0710"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 282, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}