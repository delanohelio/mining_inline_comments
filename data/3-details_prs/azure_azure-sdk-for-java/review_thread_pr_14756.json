{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjMyMDEz", "number": 14756, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzo0ODo0NFrOEfwprQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzo1Mjo1MlrOEfwtDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzM4NDEzOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzo0ODo0NFrOHMP0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzoyMTo1N1rOHMwbXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ==", "bodyText": "query as object?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482604131", "createdAt": "2020-09-02T23:48:44Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNzAyMw==", "bodyText": "This did not come up in yesterday's discussion. Do we really need query as object? Is  not enough?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483127023", "createdAt": "2020-09-03T17:01:29Z", "author": {"login": "vinagesh"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ=="}, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEzODM5OQ==", "bodyText": "Resolved in stand up", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483138399", "createdAt": "2020-09-03T17:21:57Z", "author": {"login": "vinagesh"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDEzMQ=="}, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzM4OTA1OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzo1MTowNlrOHMP3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1OTo1NFrOHMvrnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDg1Mw==", "bodyText": "should the naming be queryTwins? I know in dotnet it was queryAsync but thinking since it may be more meaningful", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482604853", "createdAt": "2020-09-02T23:51:06Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjE3Mw==", "bodyText": "Parity is probably more important here. Feel free to bring it up in a meeting and we can all discuss collectively.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483126173", "createdAt": "2020-09-03T16:59:54Z", "author": {"login": "vinagesh"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNDg1Mw=="}, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzM5Mjc5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMzo1Mjo1MlrOHMP5dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzowMDo1NFrOHMvtyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNTQzMA==", "bodyText": "Don't you need withResponse?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r482605430", "createdAt": "2020-09-02T23:52:52Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)\n+  ```\n+</details>\n \n+<details><summary><b>Sync APIs</b></summary>\n \n ```java\n-TODO:\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public PagedIterable<String> query(String query, Context context)\n+\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @param clazz The model class to convert the query response to.\n+* @param <T> The generic type to convert the query response to.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public <T> PagedIterable<T> query(String query, Class<T> clazz, Context context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjcyOA==", "bodyText": "No this does not return a response. This returns a pageable object to iterate on. The calls are make when you iterate on it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14756#discussion_r483126728", "createdAt": "2020-09-03T17:00:54Z", "author": {"login": "vinagesh"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -771,12 +771,55 @@ public DigitalTwinsResponse<Void> updateComponentWithResponse(String digitalTwin\n </details>\n \n ## Query\n-<details>\n-<summary><b>APIs</b></summary>\n+<details><summary><b>Async APIs</b></summary>\n+\n+  ```java\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public PagedFlux<String> query(String query)\n+\n+  /**\n+  * Query digital twins.\n+  *\n+  * @param query The query string, in SQL-like syntax.\n+  * @param clazz The model class to convert the query response to.\n+  * @param <T> The generic type to convert the query response to.\n+  * @return A {@link PagedFlux} of application/json for the query result items.\n+  */\n+  @ServiceMethod(returns = ReturnType.COLLECTION)\n+  public <T> PagedFlux<T> query(String query, Class<T> clazz)\n+  ```\n+</details>\n \n+<details><summary><b>Sync APIs</b></summary>\n \n ```java\n-TODO:\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public PagedIterable<String> query(String query, Context context)\n+\n+/**\n+* Query digital twins.\n+*\n+* @param query The query string, in SQL-like syntax.\n+* @param context Additional context that is passed through the Http pipeline during the service call.\n+* @param clazz The model class to convert the query response to.\n+* @param <T> The generic type to convert the query response to.\n+* @return A {@link PagedIterable} of application/json for the query result items.\n+*/\n+@ServiceMethod(returns = ReturnType.COLLECTION)\n+public <T> PagedIterable<T> query(String query, Class<T> clazz, Context context)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYwNTQzMA=="}, "originalCommit": {"oid": "95d6c087fd3ca9ad60a1b2d5d51d2a7ac9263139"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1248, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}