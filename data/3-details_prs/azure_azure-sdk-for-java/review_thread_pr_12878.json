{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NzQ1MjUw", "number": 12878, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjozNToyNVrOEMrVyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0NDo0NVrOENA3Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzI4NDU5OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjozNToyNVrOGu7fBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0NjowNFrOGu94NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MjI3Ng==", "bodyText": "These shouldn't have to change. Input-output models should have setter overloads for both varargs and List.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r451862276", "createdAt": "2020-07-08T22:35:25Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "diffHunk": "@@ -35,15 +35,17 @@ public static AnalyzeTextOptions map(com.azure.search.documents.indexes.implemen\n         }\n \n         if (obj.getCharFilters() != null) {\n-            List<CharFilterName> charFilters =\n-                obj.getCharFilters().stream().map(CharFilterNameConverter::map).collect(Collectors.toList());\n+            CharFilterName[] charFilters = obj.getCharFilters().stream()\n+                .map(CharFilterNameConverter::map)\n+                .toArray(CharFilterName[]::new);\n             analyzeTextOptions.setCharFilters(charFilters);\n         }\n \n \n         if (obj.getTokenFilters() != null) {\n-            List<TokenFilterName> tokenFilters =\n-                obj.getTokenFilters().stream().map(TokenFilterNameConverter::map).collect(Collectors.toList());\n+            TokenFilterName[] tokenFilters = obj.getTokenFilters().stream()\n+                .map(TokenFilterNameConverter::map)\n+                .toArray(TokenFilterName[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd012ae2bd68dfca9bbd317cbd073fb20751f7fc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMTQ5Mw==", "bodyText": "Reverted", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r451901493", "createdAt": "2020-07-09T00:46:04Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/implementation/converters/AnalyzeRequestConverter.java", "diffHunk": "@@ -35,15 +35,17 @@ public static AnalyzeTextOptions map(com.azure.search.documents.indexes.implemen\n         }\n \n         if (obj.getCharFilters() != null) {\n-            List<CharFilterName> charFilters =\n-                obj.getCharFilters().stream().map(CharFilterNameConverter::map).collect(Collectors.toList());\n+            CharFilterName[] charFilters = obj.getCharFilters().stream()\n+                .map(CharFilterNameConverter::map)\n+                .toArray(CharFilterName[]::new);\n             analyzeTextOptions.setCharFilters(charFilters);\n         }\n \n \n         if (obj.getTokenFilters() != null) {\n-            List<TokenFilterName> tokenFilters =\n-                obj.getTokenFilters().stream().map(TokenFilterNameConverter::map).collect(Collectors.toList());\n+            TokenFilterName[] tokenFilters = obj.getTokenFilters().stream()\n+                .map(TokenFilterNameConverter::map)\n+                .toArray(TokenFilterName[]::new);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2MjI3Ng=="}, "originalCommit": {"oid": "fd012ae2bd68dfca9bbd317cbd073fb20751f7fc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDQwMjY2OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/AnalyzeTextOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjo0NDoyNFrOGvZYXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODowMDo0OVrOGvcAiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM1MjA5NA==", "bodyText": "The options are input only", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r452352094", "createdAt": "2020-07-09T16:44:24Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/AnalyzeTextOptions.java", "diffHunk": "@@ -201,6 +204,20 @@ public LexicalTokenizerName getTokenizerName() {\n      * @param tokenFilters the tokenFilters value to set.\n      * @return the AnalyzeRequest object itself.\n      */\n+    public AnalyzeTextOptions setTokenFilters(TokenFilterName... tokenFilters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a141a67a3b67fc39b29224975cd6de7178039e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM1NjExNw==", "bodyText": "We can leave the varargs setter here and remove the list one.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r452356117", "createdAt": "2020-07-09T16:51:10Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/AnalyzeTextOptions.java", "diffHunk": "@@ -201,6 +204,20 @@ public LexicalTokenizerName getTokenizerName() {\n      * @param tokenFilters the tokenFilters value to set.\n      * @return the AnalyzeRequest object itself.\n      */\n+    public AnalyzeTextOptions setTokenFilters(TokenFilterName... tokenFilters) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM1MjA5NA=="}, "originalCommit": {"oid": "46a141a67a3b67fc39b29224975cd6de7178039e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5NTE0NQ==", "bodyText": "Removed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r452395145", "createdAt": "2020-07-09T18:00:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/AnalyzeTextOptions.java", "diffHunk": "@@ -201,6 +204,20 @@ public LexicalTokenizerName getTokenizerName() {\n      * @param tokenFilters the tokenFilters value to set.\n      * @return the AnalyzeRequest object itself.\n      */\n+    public AnalyzeTextOptions setTokenFilters(TokenFilterName... tokenFilters) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM1MjA5NA=="}, "originalCommit": {"oid": "46a141a67a3b67fc39b29224975cd6de7178039e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDgxMDkwOnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/CjkBigramTokenFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0NDo0NVrOGvddGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxOToxNlrOGvekUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxODg0Mg==", "bodyText": "This should have a null check. Update this in other places too.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.ignoreScripts = Arrays.asList(ignoreScripts);\n          \n          \n            \n                    this.ignoreScripts = ignoreScripts == null ? null : Arrays.asList(ignoreScripts);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r452418842", "createdAt": "2020-07-09T18:44:45Z", "author": {"login": "srnagar"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/CjkBigramTokenFilter.java", "diffHunk": "@@ -58,6 +61,18 @@ public CjkBigramTokenFilter(@JsonProperty(value = \"name\") String name) {\n      * @param ignoreScripts the ignoreScripts value to set.\n      * @return the CjkBigramTokenFilter object itself.\n      */\n+    public CjkBigramTokenFilter setIgnoreScripts(CjkBigramTokenFilterScripts... ignoreScripts) {\n+        this.ignoreScripts = Arrays.asList(ignoreScripts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c051f0fdf851aa9078e5cc81e17020e840e3c9b4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzNzA3NQ==", "bodyText": "Added checks to all usage of varargs, additionally updated options models as well as they would run into the same issue.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12878#discussion_r452437075", "createdAt": "2020-07-09T19:19:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/indexes/models/CjkBigramTokenFilter.java", "diffHunk": "@@ -58,6 +61,18 @@ public CjkBigramTokenFilter(@JsonProperty(value = \"name\") String name) {\n      * @param ignoreScripts the ignoreScripts value to set.\n      * @return the CjkBigramTokenFilter object itself.\n      */\n+    public CjkBigramTokenFilter setIgnoreScripts(CjkBigramTokenFilterScripts... ignoreScripts) {\n+        this.ignoreScripts = Arrays.asList(ignoreScripts);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxODg0Mg=="}, "originalCommit": {"oid": "c051f0fdf851aa9078e5cc81e17020e840e3c9b4"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3648, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}