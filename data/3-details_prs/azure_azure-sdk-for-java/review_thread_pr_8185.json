{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDQyNjk4", "number": 8185, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTowNzo0MlrODfwCRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTowNzo0MlrODfwCRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjE5NDYzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPolicyProviders.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTowNzo0MlrOFpo0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxNzowNlrOFp92HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIwNDc3Mw==", "bodyText": "Log and throw the exception. Also, this should have been caught in checkstyle.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8185#discussion_r379204773", "createdAt": "2020-02-14T01:07:42Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPolicyProviders.java", "diffHunk": "@@ -36,32 +39,18 @@ public static void addBeforeRetryPolicies(List<HttpPipelinePolicy> policies) {\n      * @param policies Policy list to append the policies.\n      */\n     public static void addAfterRetryPolicies(List<HttpPipelinePolicy> policies) {\n-        addRetryPolicies(policies, () -> getPolicyProviders(false, AfterRetryPolicyProvider.class));\n+        addPolices(policies, AFTER_PROVIDER);\n     }\n \n-    private static void addRetryPolicies(List<HttpPipelinePolicy> policies,\n-        Supplier<Iterator<? extends HttpPolicyProvider>> policySupplier) {\n-        Iterator<? extends HttpPolicyProvider> it = policySupplier.get();\n-        while (it.hasNext()) {\n-            HttpPolicyProvider policyProvider = it.next();\n-            HttpPipelinePolicy policy = policyProvider.create();\n+    private static void addPolices(List<HttpPipelinePolicy> policies,\n+        Iterable<? extends HttpPolicyProvider> providers) {\n+        for (HttpPolicyProvider provider : providers) {\n+            HttpPipelinePolicy policy = provider.create();\n             if (policy == null) {\n-                throw new NullPointerException(\"HttpPipelinePolicy created with \" + policyProvider.getClass()\n-                    + \" resulted in a null policy\");\n+                throw new NullPointerException(String.format(INVALID_POLICY, provider.getClass()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123c95c05f9780ddb593330388e7c93562bfaceb"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0OTIxMg==", "bodyText": "Being used from a static method which conflicts with the logging guidelines, we may want to amend those to allow them in a static only class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8185#discussion_r379549212", "createdAt": "2020-02-14T17:17:06Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPolicyProviders.java", "diffHunk": "@@ -36,32 +39,18 @@ public static void addBeforeRetryPolicies(List<HttpPipelinePolicy> policies) {\n      * @param policies Policy list to append the policies.\n      */\n     public static void addAfterRetryPolicies(List<HttpPipelinePolicy> policies) {\n-        addRetryPolicies(policies, () -> getPolicyProviders(false, AfterRetryPolicyProvider.class));\n+        addPolices(policies, AFTER_PROVIDER);\n     }\n \n-    private static void addRetryPolicies(List<HttpPipelinePolicy> policies,\n-        Supplier<Iterator<? extends HttpPolicyProvider>> policySupplier) {\n-        Iterator<? extends HttpPolicyProvider> it = policySupplier.get();\n-        while (it.hasNext()) {\n-            HttpPolicyProvider policyProvider = it.next();\n-            HttpPipelinePolicy policy = policyProvider.create();\n+    private static void addPolices(List<HttpPipelinePolicy> policies,\n+        Iterable<? extends HttpPolicyProvider> providers) {\n+        for (HttpPolicyProvider provider : providers) {\n+            HttpPipelinePolicy policy = provider.create();\n             if (policy == null) {\n-                throw new NullPointerException(\"HttpPipelinePolicy created with \" + policyProvider.getClass()\n-                    + \" resulted in a null policy\");\n+                throw new NullPointerException(String.format(INVALID_POLICY, provider.getClass()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIwNDc3Mw=="}, "originalCommit": {"oid": "123c95c05f9780ddb593330388e7c93562bfaceb"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3107, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}