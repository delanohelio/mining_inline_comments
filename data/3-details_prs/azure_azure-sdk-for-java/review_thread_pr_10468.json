{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTk3Nzkw", "number": 10468, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMToyMDoxN1rOD1ezrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMToyMDoxN1rOD1ezrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDA1ODcxOnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-secrets/src/main/java/com/azure/security/keyvault/secrets/implementation/KeyVaultCredentialPolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMToyMDoxN1rOGK8nkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMTozMjoxMlrOGK9AsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMjExMw==", "bodyText": "Should this throwable be logged as warning?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10468#discussion_r414132113", "createdAt": "2020-04-23T21:20:17Z", "author": {"login": "srnagar"}, "path": "sdk/keyvault/azure-security-keyvault-secrets/src/main/java/com/azure/security/keyvault/secrets/implementation/KeyVaultCredentialPolicy.java", "diffHunk": "@@ -52,8 +52,20 @@ public KeyVaultCredentialPolicy(TokenCredential credential) {\n             return Mono.error(new RuntimeException(\"Token credentials require a URL using the HTTPS protocol scheme\"));\n         }\n         return next.clone().process()\n-            // Ignore body\n-            .doOnNext(HttpResponse::close)\n+            .doOnNext(httpResponse -> {\n+                // KV follows challenge based auth. Currently every service\n+                // call hit the endpoint for challenge and then resend the\n+                // request with token. The challenge response body is not\n+                // consumed, not draining/closing the body will result in leak.\n+                // Ref: https://github.com/Azure/azure-sdk-for-java/issues/7934\n+                try {\n+                    httpResponse.getBody().subscribe().dispose();\n+                } catch (Throwable ignored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ed702a781bddca0d9ac7b1f7416bd7e18f8319f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzODU0NQ==", "bodyText": "yes, we should, will update the PR. It's not throwing now but I put it as a safeguard to ensure this version of key vault lib works with the future version of reactor-netty HTTP client when it gets addressed in the core level.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10468#discussion_r414138545", "createdAt": "2020-04-23T21:32:12Z", "author": {"login": "anuchandy"}, "path": "sdk/keyvault/azure-security-keyvault-secrets/src/main/java/com/azure/security/keyvault/secrets/implementation/KeyVaultCredentialPolicy.java", "diffHunk": "@@ -52,8 +52,20 @@ public KeyVaultCredentialPolicy(TokenCredential credential) {\n             return Mono.error(new RuntimeException(\"Token credentials require a URL using the HTTPS protocol scheme\"));\n         }\n         return next.clone().process()\n-            // Ignore body\n-            .doOnNext(HttpResponse::close)\n+            .doOnNext(httpResponse -> {\n+                // KV follows challenge based auth. Currently every service\n+                // call hit the endpoint for challenge and then resend the\n+                // request with token. The challenge response body is not\n+                // consumed, not draining/closing the body will result in leak.\n+                // Ref: https://github.com/Azure/azure-sdk-for-java/issues/7934\n+                try {\n+                    httpResponse.getBody().subscribe().dispose();\n+                } catch (Throwable ignored) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMjExMw=="}, "originalCommit": {"oid": "5ed702a781bddca0d9ac7b1f7416bd7e18f8319f"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}