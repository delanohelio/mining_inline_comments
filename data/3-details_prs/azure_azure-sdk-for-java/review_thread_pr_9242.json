{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTI4NTEx", "number": 9242, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNTo1MlrODpmyDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNjo1NlrODpmzvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTUzNjE0OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNTo1MlrOF445Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzozNzozNVrOF45XkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NjY3OA==", "bodyText": "Can this happen? We always request 1 connection.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9242#discussion_r395196678", "createdAt": "2020-03-19T17:25:52Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "diffHunk": "@@ -552,13 +548,24 @@ private EventHubConnectionProcessor buildConnectionProcessor(MessageSerializer m\n         final String product = properties.getOrDefault(NAME_KEY, UNKNOWN);\n         final String clientVersion = properties.getOrDefault(VERSION_KEY, UNKNOWN);\n \n-        final Flux<EventHubAmqpConnection> connectionFlux = Mono.fromCallable(() -> {\n-            final String connectionId = StringUtil.getRandomString(\"MF\");\n+        final Flux<EventHubAmqpConnection> connectionFlux = Flux.create(sink -> {\n+            sink.onRequest(request -> {\n+\n+                if (request == 0) {\n+                    return;\n+                } else if (request > 1) {\n+                    logger.warning(\"Requested more than one connection. Only emitting one. Request: {}\", request);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836b4694a5a6d6dfe9d9bd6609b70956dd49426f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwNDQ5Ng==", "bodyText": "No. should I throw an error instead if this ever happens? was trying to be defensive if we accidentally introduce a bug.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9242#discussion_r395204496", "createdAt": "2020-03-19T17:37:35Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "diffHunk": "@@ -552,13 +548,24 @@ private EventHubConnectionProcessor buildConnectionProcessor(MessageSerializer m\n         final String product = properties.getOrDefault(NAME_KEY, UNKNOWN);\n         final String clientVersion = properties.getOrDefault(VERSION_KEY, UNKNOWN);\n \n-        final Flux<EventHubAmqpConnection> connectionFlux = Mono.fromCallable(() -> {\n-            final String connectionId = StringUtil.getRandomString(\"MF\");\n+        final Flux<EventHubAmqpConnection> connectionFlux = Flux.create(sink -> {\n+            sink.onRequest(request -> {\n+\n+                if (request == 0) {\n+                    return;\n+                } else if (request > 1) {\n+                    logger.warning(\"Requested more than one connection. Only emitting one. Request: {}\", request);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NjY3OA=="}, "originalCommit": {"oid": "836b4694a5a6d6dfe9d9bd6609b70956dd49426f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTU0MDQ3OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionBasedLoadBalancer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNjo1NlrOF4473w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzoyNjo1NlrOF4473w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5NzQwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // So it is okay that there is we return an empty Flux.\n          \n          \n            \n                            // So it is okay to return an empty Flux.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9242#discussion_r395197407", "createdAt": "2020-03-19T17:26:56Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionBasedLoadBalancer.java", "diffHunk": "@@ -112,6 +114,12 @@ void loadBalance() {\n         final Mono<List<String>> partitionsMono = eventHubAsyncClient\n             .getPartitionIds()\n             .timeout(Duration.ofMinutes(1))\n+            .onErrorResume(TimeoutException.class, error -> {\n+                // In the subsequent step where it tries to balance the load, it'll propagate an error to the user.\n+                // So it is okay that there is we return an empty Flux.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "836b4694a5a6d6dfe9d9bd6609b70956dd49426f"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 45, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}