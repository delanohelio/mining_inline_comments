{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NjM1NzY5", "number": 10299, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoxMzozNFrODy-wWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjowOTo0MFrODzD0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NzgzNTc3OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoxMzozNFrOGHWUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzoxMzozNFrOGHWUnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM1ODk0Mw==", "bodyText": "Should we remove \"either of them\" since the list of credentials we try can be more than 2?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10299#discussion_r410358943", "createdAt": "2020-04-17T17:13:34Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -36,18 +38,29 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         AtomicReference<Throwable> cause = new AtomicReference<>();\n+        List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-            .flatMap(p -> p.getToken(request).onErrorResume(t -> {\n-                if (cause.get() != null) {\n-                    t.initCause(cause.get());\n-                }\n-                cause.set(t);\n-                return Mono.empty();\n-            }), 1)\n-            .next()\n-            .switchIfEmpty(Mono.defer(() -> Mono.error(new RuntimeException(\"Tried \"\n-                + credentials.stream().map(c -> c.getClass().getSimpleName()).collect(Collectors.joining(\", \"))\n-                + \" but failed to acquire a token for any of them. Please verify the environment for either of them\"\n-                + \" and see more details in the causes below.\", cause.get()))));\n+                   .flatMap(p -> p.getToken(request).onErrorResume(CredentialUnavailableException.class, t -> {\n+                       exceptions.add(t);\n+                       return Mono.empty();\n+                   }), 1)\n+                   .next()\n+                   .switchIfEmpty(Mono.defer(() -> {\n+\n+                       StringBuilder message = new StringBuilder(\"Tried \"\n+                             + credentials.stream().map(c -> c.getClass().getSimpleName())\n+                                   .collect(Collectors.joining(\", \"))\n+                             + \" but failed to acquire a token for any of them. Please verify the\"\n+                             + \" environment for either of them\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "409b4f1c980b75bfdea8ba453d8d49fa06a5dc36"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODY2NTE1OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMjowOTo0MFrOGHei_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTozNzoyNVrOGIkdxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5MzY5NQ==", "bodyText": "nit: don't need to specify concurrency as 1 for flatmap. It's 1 by default.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10299#discussion_r410493695", "createdAt": "2020-04-17T22:09:40Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -36,18 +38,29 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         AtomicReference<Throwable> cause = new AtomicReference<>();\n+        List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-            .flatMap(p -> p.getToken(request).onErrorResume(t -> {\n-                if (cause.get() != null) {\n-                    t.initCause(cause.get());\n-                }\n-                cause.set(t);\n-                return Mono.empty();\n-            }), 1)\n-            .next()\n-            .switchIfEmpty(Mono.defer(() -> Mono.error(new RuntimeException(\"Tried \"\n-                + credentials.stream().map(c -> c.getClass().getSimpleName()).collect(Collectors.joining(\", \"))\n-                + \" but failed to acquire a token for any of them. Please verify the environment for either of them\"\n-                + \" and see more details in the causes below.\", cause.get()))));\n+                   .flatMap(p -> p.getToken(request).onErrorResume(CredentialUnavailableException.class, t -> {\n+                       exceptions.add(t);\n+                       return Mono.empty();\n+                   }), 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "409b4f1c980b75bfdea8ba453d8d49fa06a5dc36"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzOTIzOA==", "bodyText": "That's not true.\nDefault concurrency is computed via:\nMath.max(16, Integer.parseInt(System.getProperty(\"reactor.bufferSize.small\", \"256\")));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10299#discussion_r411639238", "createdAt": "2020-04-20T19:37:25Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ChainedTokenCredential.java", "diffHunk": "@@ -36,18 +38,29 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         AtomicReference<Throwable> cause = new AtomicReference<>();\n+        List<CredentialUnavailableException> exceptions = new ArrayList<>(4);\n         return Flux.fromIterable(credentials)\n-            .flatMap(p -> p.getToken(request).onErrorResume(t -> {\n-                if (cause.get() != null) {\n-                    t.initCause(cause.get());\n-                }\n-                cause.set(t);\n-                return Mono.empty();\n-            }), 1)\n-            .next()\n-            .switchIfEmpty(Mono.defer(() -> Mono.error(new RuntimeException(\"Tried \"\n-                + credentials.stream().map(c -> c.getClass().getSimpleName()).collect(Collectors.joining(\", \"))\n-                + \" but failed to acquire a token for any of them. Please verify the environment for either of them\"\n-                + \" and see more details in the causes below.\", cause.get()))));\n+                   .flatMap(p -> p.getToken(request).onErrorResume(CredentialUnavailableException.class, t -> {\n+                       exceptions.add(t);\n+                       return Mono.empty();\n+                   }), 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5MzY5NQ=="}, "originalCommit": {"oid": "409b4f1c980b75bfdea8ba453d8d49fa06a5dc36"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1812, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}