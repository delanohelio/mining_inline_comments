{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDk4NTEz", "number": 7629, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToyMDowN1rODaDrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToyODowNVrODaDuuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjQ5Nzg5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ConflictResolutionMode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToyMDowN1rOFgzI7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzowOToyNVrOFhF_nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzNjYyMQ==", "bodyText": "Is it to cover for POJO renames or its case-sensitive?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7629#discussion_r369936621", "createdAt": "2020-01-23T05:20:07Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ConflictResolutionMode.java", "diffHunk": "@@ -11,37 +11,43 @@\n public enum ConflictResolutionMode {\n     /**\n      * Last writer wins conflict resolution mode\n-     * \n-     * Setting the ConflictResolutionMode to \"LAST_WRITER_WINS\" indicates that conflict resolution should be done by \n+     *\n+     * Setting the ConflictResolutionMode to \"LAST_WRITER_WINS\" indicates that conflict resolution should be done by\n      * inspecting a field in the conflicting documents\n      * and picking the document which has the higher value in that path. See\n      * {@link ConflictResolutionPolicy#getConflictResolutionPath()} for details on how to specify the path\n      *\n      */\n-    LAST_WRITER_WINS,\n+    LAST_WRITER_WINS(\"LastWriterWins\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b7fb2a1a6e9362d39deb318c58c01d734da70a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NTUzNQ==", "bodyText": "most of these enum toString are passed as option header in the request.\nThe most common one is Consistency where for each request we used to do Consistency.toString() and as the java enum naming is different from .Net, prior to this PR toString() used to do extra logic to re-construct the .net friendly version of the enum which is acceptable by the service. My changes in the enum ensures we don't reconstruct the enum serialized to String constant values on each request.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7629#discussion_r370245535", "createdAt": "2020-01-23T17:09:25Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ConflictResolutionMode.java", "diffHunk": "@@ -11,37 +11,43 @@\n public enum ConflictResolutionMode {\n     /**\n      * Last writer wins conflict resolution mode\n-     * \n-     * Setting the ConflictResolutionMode to \"LAST_WRITER_WINS\" indicates that conflict resolution should be done by \n+     *\n+     * Setting the ConflictResolutionMode to \"LAST_WRITER_WINS\" indicates that conflict resolution should be done by\n      * inspecting a field in the conflicting documents\n      * and picking the document which has the higher value in that path. See\n      * {@link ConflictResolutionPolicy#getConflictResolutionPath()} for details on how to specify the path\n      *\n      */\n-    LAST_WRITER_WINS,\n+    LAST_WRITER_WINS(\"LastWriterWins\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzNjYyMQ=="}, "originalCommit": {"oid": "b6b7fb2a1a6e9362d39deb318c58c01d734da70a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjUwNjgxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToyODowNVrOFgzOXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzowOTozMlrOFhF_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzODAxNA==", "bodyText": "Nice \ud83d\ude04", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7629#discussion_r369938014", "createdAt": "2020-01-23T05:28:05Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -21,12 +21,14 @@\n public class CosmosAsyncContainer {\n \n     private final CosmosAsyncDatabase database;\n-    private String id;\n+    private final String id;\n+    private final String link;\n     private CosmosAsyncScripts scripts;\n \n     CosmosAsyncContainer(String id, CosmosAsyncDatabase database) {\n         this.id = id;\n         this.database = database;\n+        this.link = getParentLink() + \"/\" + getURIPathSegment() + \"/\" + getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b7fb2a1a6e9362d39deb318c58c01d734da70a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0NTU5NQ==", "bodyText": "thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7629#discussion_r370245595", "createdAt": "2020-01-23T17:09:32Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -21,12 +21,14 @@\n public class CosmosAsyncContainer {\n \n     private final CosmosAsyncDatabase database;\n-    private String id;\n+    private final String id;\n+    private final String link;\n     private CosmosAsyncScripts scripts;\n \n     CosmosAsyncContainer(String id, CosmosAsyncDatabase database) {\n         this.id = id;\n         this.database = database;\n+        this.link = getParentLink() + \"/\" + getURIPathSegment() + \"/\" + getId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzODAxNA=="}, "originalCommit": {"oid": "b6b7fb2a1a6e9362d39deb318c58c01d734da70a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 379, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}