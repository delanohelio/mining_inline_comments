{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NjE1MTQ0", "number": 13601, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoxOTowNFrOEV-ogA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyNTozMlrOEXXn-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDgxNzI4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/FeedResponseDiagnostics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoxOTowNVrOG9C2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjowMjozNFrOG-VS6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2Mjk5Mg==", "bodyText": "looks weird to have the tailing space after QueryPlan constant. can we pass the space in the string builder? or define another constant for the \" \" string?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13601#discussion_r466662992", "createdAt": "2020-08-06T20:19:05Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/FeedResponseDiagnostics.java", "diffHunk": "@@ -4,15 +4,21 @@\n package com.azure.cosmos.implementation;\n \n import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.query.QueryInfo;\n+import com.azure.cosmos.implementation.query.metrics.QueryMetricsTextWriter;\n \n+import java.time.Duration;\n import java.util.Map;\n \n /**\n  * The type Feed response diagnostics.\n  */\n public final class FeedResponseDiagnostics {\n \n+    private final static String EQUALS = \"=\";\n+    private final static String QUERY_PLAN = \"QueryPlan \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7472a6ac33d26315dbedee46183891393018eecb"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMzgwMQ==", "bodyText": "Added another constant. Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13601#discussion_r468013801", "createdAt": "2020-08-10T16:02:34Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/FeedResponseDiagnostics.java", "diffHunk": "@@ -4,15 +4,21 @@\n package com.azure.cosmos.implementation;\n \n import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.query.QueryInfo;\n+import com.azure.cosmos.implementation.query.metrics.QueryMetricsTextWriter;\n \n+import java.time.Duration;\n import java.util.Map;\n \n /**\n  * The type Feed response diagnostics.\n  */\n public final class FeedResponseDiagnostics {\n \n+    private final static String EQUALS = \"=\";\n+    private final static String QUERY_PLAN = \"QueryPlan \";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2Mjk5Mg=="}, "originalCommit": {"oid": "7472a6ac33d26315dbedee46183891393018eecb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDg0Mzg0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyNzoxN1rOG9DGVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyNzoxN1rOG9DGVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2NzA5Mw==", "bodyText": "you have a class field with the same name here and this hides the class field.\ncan this be named something like for more clarity in the test?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CosmosClient gatewayClient = null;\n          \n          \n            \n                    CosmosClient testGatewayClient = null;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13601#discussion_r466667093", "createdAt": "2020-08-06T20:27:17Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -76,38 +79,45 @@ public void afterClass() {\n \n     @Test(groups = {\"simple\"})\n     public void gatewayDiagnostics() {\n-        InternalObjectNode internalObjectNode = getInternalObjectNode();\n-        CosmosItemResponse<InternalObjectNode> createResponse = this.container.createItem(internalObjectNode);\n-        String diagnostics = createResponse.getDiagnostics().toString();\n-        assertThat(diagnostics).contains(\"\\\"connectionMode\\\":\\\"GATEWAY\\\"\");\n-        assertThat(diagnostics).doesNotContain((\"\\\"gatewayStatistics\\\":null\"));\n-        assertThat(diagnostics).contains(\"\\\"operationType\\\":\\\"Create\\\"\");\n-        assertThat(diagnostics).contains(\"\\\"metaDataName\\\":\\\"CONTAINER_LOOK_UP\\\"\");\n-        assertThat(diagnostics).contains(\"\\\"serializationType\\\":\\\"PARTITION_KEY_FETCH_SERIALIZATION\\\"\");\n-        assertThat(diagnostics).contains(\"\\\"userAgent\\\":\\\"\" + Utils.getUserAgent() + \"\\\"\");\n-        assertThat(createResponse.getDiagnostics().getDuration()).isNotNull();\n-        validateTransportRequestTimelineGateway(diagnostics);\n-        validateJson(diagnostics);\n+        CosmosClient gatewayClient = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7472a6ac33d26315dbedee46183891393018eecb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDg0NTE3OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyNzo0MFrOG9DHJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyNzo0MFrOG9DHJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2NzMwMQ==", "bodyText": "you have a class field with the same name here and this hides the class field.\ncan this be named something like for more clarity in the test?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CosmosClient directClient = null;\n          \n          \n            \n                    CosmosClient testDirectClient = null;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13601#discussion_r466667301", "createdAt": "2020-08-06T20:27:40Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -145,22 +151,85 @@ public void systemDiagnosticsForSystemStateInformation() {\n \n     @Test(groups = {\"simple\"})\n     public void directDiagnostics() {\n+        CosmosClient directClient = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7472a6ac33d26315dbedee46183891393018eecb"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTM5NzcwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyNTozMlrOG_H8Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyNTozMlrOG_H8Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MzU3NA==", "bodyText": "nice. thank you.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13601#discussion_r468843574", "createdAt": "2020-08-11T20:25:32Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/encryption/EncryptionCosmosAsyncContainer.java", "diffHunk": "@@ -433,7 +433,10 @@ ItemDeserializer getItemDeserializer() {\n                         }\n \n                     ).collectList().map(itemList ->\n-                        ModelBridgeInternal.createFeedResponseWithQueryMetrics(itemList, page.getResponseHeaders(), BridgeInternal.queryMetricsFromFeedResponse(page))\n+                        ModelBridgeInternal.createFeedResponseWithQueryMetrics(itemList,\n+                            page.getResponseHeaders(),\n+                            BridgeInternal.queryMetricsFromFeedResponse(page),\n+                            ModelBridgeInternal.getQueryPlanDiagnosticsContext(page))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "779698cd10a9f2b06db2e5d15c0d1c7eb21a8326"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4771, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}