{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODI5NDgy", "number": 10354, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MTo0MVrODz5S5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMzozN1rOD0dgmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQyNjkzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/tests.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MTo0MVrOGIk_Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MTo0MVrOGIk_Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0Nzc0Nw==", "bodyText": "this should be formrecognizer", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411647747", "createdAt": "2020-04-20T19:51:41Z", "author": {"login": "danieljurek"}, "path": "sdk/formrecognizer/tests.yml", "diffHunk": "@@ -0,0 +1,12 @@\n+trigger: none\n+\n+jobs:\n+  - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml\n+    parameters:\n+      ServiceDirectory: storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQyODk5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/tests.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MjowOFrOGIlAIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1MjowOFrOGIlAIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY0ODAzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  ServiceDirectory: storage\n          \n          \n            \n                  ServiceDirectory: formrecognizer", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411648032", "createdAt": "2020-04-20T19:52:08Z", "author": {"login": "danieljurek"}, "path": "sdk/formrecognizer/tests.yml", "diffHunk": "@@ -0,0 +1,12 @@\n+trigger: none\n+\n+jobs:\n+  - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml\n+    parameters:\n+      ServiceDirectory: storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQ0MjE4OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/test-resources.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1NTozOVrOGIlIMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1NTozOVrOGIlIMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1MDA5Ng==", "bodyText": "Might be able to get rid of the secondary storage account if it's not needed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411650096", "createdAt": "2020-04-20T19:55:39Z", "author": {"login": "danieljurek"}, "path": "sdk/formrecognizer/test-resources.json", "diffHunk": "@@ -0,0 +1,192 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"endpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        },\n+        \"formRecognizerBaseName\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"[resourceGroup().name]\",\n+            \"metadata\": {\n+                \"description\": \"The base resource name.\"\n+            }\n+        },\n+        \"formRecognizerEndpointSuffix\": {\n+            \"defaultValue\": \".cognitiveservices.azure.com/\",\n+            \"type\": \"String\"\n+        }\n+    },\n+    \"variables\": {\n+        \"storageApiVersion\": \"2019-04-01\",\n+        \"authorizationApiVersion\": \"2018-09-01-preview\",\n+        \"blobDataContributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]\",\n+        \"contributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c')]\",\n+        \"primaryAccountName\": \"[concat('prim', parameters('baseName'))]\",\n+        \"secondaryAccountName\": \"[concat('sec', parameters('baseName'))]\",\n+        \"location\": \"[resourceGroup().location]\",\n+        \"formRecognizerApiVersion\": \"2017-04-18\",\n+        \"azureFormRecognizerUrl\": \"[concat('https://', parameters('formRecognizerBaseName'), parameters('formRecognizerEndpointSuffix'))]\",\n+        \"cognitiveServiceUserRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/a97b65f3-24c7-4388-baec-2e87135dc908')]\"\n+    },\n+    \"resources\": [\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('dataContributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('blobDataContributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('contributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('contributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('primaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQ1MjA4OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/test-resources.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1ODowOVrOGIlN6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOTo1ODowOVrOGIlN6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1MTU2MQ==", "bodyText": "formRecognizerBaseName is redundant, you can just use the baseName and and add any additional formatting in a variable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411651561", "createdAt": "2020-04-20T19:58:09Z", "author": {"login": "danieljurek"}, "path": "sdk/formrecognizer/test-resources.json", "diffHunk": "@@ -0,0 +1,192 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"endpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        },\n+        \"formRecognizerBaseName\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzQ2NDU1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingClientTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDowMToyMlrOGIlVZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTo0MjozOFrOGIo6pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1MzQ3Nw==", "bodyText": "PRIMARY_STORAGE_ACCOUNT_NAME should be something like PRIMARY_STORAGE_ACCOUNT_URL or this hardcoded URL (https://%s.blob.core.windows.net) will affect testing in other clouds.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411653477", "createdAt": "2020-04-20T20:01:22Z", "author": {"login": "danieljurek"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingClientTestBase.java", "diffHunk": "@@ -182,65 +272,41 @@ String getEndpoint() {\n             : Configuration.getGlobalConfiguration().get(\"AZURE_FORM_RECOGNIZER_ENDPOINT\");\n     }\n \n-    static void validateCustomModel(CustomFormModel expectedModel, CustomFormModel actualCustomModel) {\n-        assertNotNull(actualCustomModel.getModelId());\n-        assertEquals(expectedModel.getModelStatus(), actualCustomModel.getModelStatus());\n-        validateErrors(expectedModel.getModelError(), actualCustomModel.getModelError());\n-        assertNotNull(actualCustomModel.getCreatedOn());\n-        assertNotNull(actualCustomModel.getLastUpdatedOn());\n-        validateSubModels(expectedModel.getSubModels(), actualCustomModel.getSubModels());\n-        validateTrainingDocuments(expectedModel.getTrainingDocuments(), actualCustomModel.getTrainingDocuments());\n-    }\n-\n-    static void validateAccountProperties(AccountProperties expectedAccountProperties, AccountProperties actualAccountProperties) {\n-        assertEquals(expectedAccountProperties.getLimit(), actualAccountProperties.getLimit());\n-        assertNotNull(actualAccountProperties.getCount());\n-    }\n-\n-    private static void validateTrainingDocuments(List<TrainingDocumentInfo> expectedTrainingDocuments, List<TrainingDocumentInfo> actualTrainingDocuments) {\n-        List<TrainingDocumentInfo> actualTrainingList = actualTrainingDocuments.stream().collect(Collectors.toList());\n-        List<TrainingDocumentInfo> expectedTrainingList = expectedTrainingDocuments.stream().collect(Collectors.toList());\n-        assertEquals(expectedTrainingList.size(), actualTrainingList.size());\n-        for (int i = 0; i < actualTrainingList.size(); i++) {\n-            TrainingDocumentInfo expectedTrainingDocument = expectedTrainingList.get(i);\n-            TrainingDocumentInfo actualTrainingDocument = actualTrainingList.get(i);\n-            assertEquals(expectedTrainingDocument.getName(), actualTrainingDocument.getName());\n-            assertEquals(expectedTrainingDocument.getPageCount(), actualTrainingDocument.getPageCount());\n-            assertEquals(expectedTrainingDocument.getTrainingStatus(), actualTrainingDocument.getTrainingStatus());\n-            validateErrors(expectedTrainingDocument.getDocumentErrors(), actualTrainingDocument.getDocumentErrors());\n-        }\n-    }\n-\n-    private static void validateErrors(List<FormRecognizerError> expectedErrors, List<FormRecognizerError> actualErrors) {\n-        if (expectedErrors != null && actualErrors != null) {\n-            List<FormRecognizerError> actualErrorList = actualErrors.stream().collect(Collectors.toList());\n-            List<FormRecognizerError> expectedErrorList = expectedErrors.stream().collect(Collectors.toList());\n-            assertEquals(expectedErrorList.size(), actualErrorList.size());\n-            for (int i = 0; i < actualErrorList.size(); i++) {\n-                FormRecognizerError expectedError = expectedErrorList.get(i);\n-                FormRecognizerError actualError = actualErrorList.get(i);\n-                assertEquals(expectedError.getCode(), actualError.getCode());\n-                assertEquals(expectedError.getMessage(), actualError.getMessage());\n+    private String createStorageAndGenerateSas(String folderPath) {\n+        if (interceptorManager.isPlaybackMode()) {\n+            return \"https://isPlaybackmode\";\n+        } else {\n+            String accountName = Configuration.getGlobalConfiguration().get(\"PRIMARY_STORAGE_ACCOUNT_NAME\");\n+            String accountKey = Configuration.getGlobalConfiguration().get(\"PRIMARY_STORAGE_ACCOUNT_KEY\");\n+            StorageSharedKeyCredential credential = new StorageSharedKeyCredential(accountName, accountKey);\n+            String endpoint = String.format(Locale.ROOT, \"https://%s.blob.core.windows.net\", accountName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxMjE2Ng==", "bodyText": "#10380", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r411712166", "createdAt": "2020-04-20T21:42:38Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingClientTestBase.java", "diffHunk": "@@ -182,65 +272,41 @@ String getEndpoint() {\n             : Configuration.getGlobalConfiguration().get(\"AZURE_FORM_RECOGNIZER_ENDPOINT\");\n     }\n \n-    static void validateCustomModel(CustomFormModel expectedModel, CustomFormModel actualCustomModel) {\n-        assertNotNull(actualCustomModel.getModelId());\n-        assertEquals(expectedModel.getModelStatus(), actualCustomModel.getModelStatus());\n-        validateErrors(expectedModel.getModelError(), actualCustomModel.getModelError());\n-        assertNotNull(actualCustomModel.getCreatedOn());\n-        assertNotNull(actualCustomModel.getLastUpdatedOn());\n-        validateSubModels(expectedModel.getSubModels(), actualCustomModel.getSubModels());\n-        validateTrainingDocuments(expectedModel.getTrainingDocuments(), actualCustomModel.getTrainingDocuments());\n-    }\n-\n-    static void validateAccountProperties(AccountProperties expectedAccountProperties, AccountProperties actualAccountProperties) {\n-        assertEquals(expectedAccountProperties.getLimit(), actualAccountProperties.getLimit());\n-        assertNotNull(actualAccountProperties.getCount());\n-    }\n-\n-    private static void validateTrainingDocuments(List<TrainingDocumentInfo> expectedTrainingDocuments, List<TrainingDocumentInfo> actualTrainingDocuments) {\n-        List<TrainingDocumentInfo> actualTrainingList = actualTrainingDocuments.stream().collect(Collectors.toList());\n-        List<TrainingDocumentInfo> expectedTrainingList = expectedTrainingDocuments.stream().collect(Collectors.toList());\n-        assertEquals(expectedTrainingList.size(), actualTrainingList.size());\n-        for (int i = 0; i < actualTrainingList.size(); i++) {\n-            TrainingDocumentInfo expectedTrainingDocument = expectedTrainingList.get(i);\n-            TrainingDocumentInfo actualTrainingDocument = actualTrainingList.get(i);\n-            assertEquals(expectedTrainingDocument.getName(), actualTrainingDocument.getName());\n-            assertEquals(expectedTrainingDocument.getPageCount(), actualTrainingDocument.getPageCount());\n-            assertEquals(expectedTrainingDocument.getTrainingStatus(), actualTrainingDocument.getTrainingStatus());\n-            validateErrors(expectedTrainingDocument.getDocumentErrors(), actualTrainingDocument.getDocumentErrors());\n-        }\n-    }\n-\n-    private static void validateErrors(List<FormRecognizerError> expectedErrors, List<FormRecognizerError> actualErrors) {\n-        if (expectedErrors != null && actualErrors != null) {\n-            List<FormRecognizerError> actualErrorList = actualErrors.stream().collect(Collectors.toList());\n-            List<FormRecognizerError> expectedErrorList = expectedErrors.stream().collect(Collectors.toList());\n-            assertEquals(expectedErrorList.size(), actualErrorList.size());\n-            for (int i = 0; i < actualErrorList.size(); i++) {\n-                FormRecognizerError expectedError = expectedErrorList.get(i);\n-                FormRecognizerError actualError = actualErrorList.get(i);\n-                assertEquals(expectedError.getCode(), actualError.getCode());\n-                assertEquals(expectedError.getMessage(), actualError.getMessage());\n+    private String createStorageAndGenerateSas(String folderPath) {\n+        if (interceptorManager.isPlaybackMode()) {\n+            return \"https://isPlaybackmode\";\n+        } else {\n+            String accountName = Configuration.getGlobalConfiguration().get(\"PRIMARY_STORAGE_ACCOUNT_NAME\");\n+            String accountKey = Configuration.getGlobalConfiguration().get(\"PRIMARY_STORAGE_ACCOUNT_KEY\");\n+            StorageSharedKeyCredential credential = new StorageSharedKeyCredential(accountName, accountKey);\n+            String endpoint = String.format(Locale.ROOT, \"https://%s.blob.core.windows.net\", accountName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY1MzQ3Nw=="}, "originalCommit": {"oid": "a3da90fb9769bfbb1beec970d5c52a9095b31d48"}, "originalPosition": 221}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI0MDMzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo0MDoyNlrOGJZp-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo0MDoyNlrOGJZp-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxMDcxMg==", "bodyText": "NIT:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - It uses the Form recognizer service `v2.0-preview.1` API.\n          \n          \n            \n            - It uses the Form Recognizer service `v2.0-preview.1` API.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412510712", "createdAt": "2020-04-21T21:40:26Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (Unreleased)\n+Version 1.0.0-beta.1 is a preview of our efforts in creating a Azure Form Recognizer client library that is developer-friendly\n+and idiomatic to the Java ecosystem. The principles that guide\n+our efforts can be found in the [Azure SDK Design Guidelines for Java](https://azure.github.io/azure-sdk/java_introduction.html).\n+\n+For more information about this, and preview releases of other Azure SDK libraries, please visit\n+https://azure.github.io/azure-sdk/releases/latest/java.html.\n+\n+- It uses the Form recognizer service `v2.0-preview.1` API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMxNzU3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMToyMVrOGJaVfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMToyMVrOGJaVfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMTg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - FormRecognizerClient to analyze fields/values on custom forms, receipts, and form content/layout\n          \n          \n            \n                - `FormRecognizerClient` to analyze fields/values on custom forms, receipts, and form content/layout", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412521852", "createdAt": "2020-04-21T22:01:21Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (Unreleased)\n+Version 1.0.0-beta.1 is a preview of our efforts in creating a Azure Form Recognizer client library that is developer-friendly\n+and idiomatic to the Java ecosystem. The principles that guide\n+our efforts can be found in the [Azure SDK Design Guidelines for Java](https://azure.github.io/azure-sdk/java_introduction.html).\n+\n+For more information about this, and preview releases of other Azure SDK libraries, please visit\n+https://azure.github.io/azure-sdk/releases/latest/java.html.\n+\n+- It uses the Form recognizer service `v2.0-preview.1` API.\n+- Two client design:\n+    - FormRecognizerClient to analyze fields/values on custom forms, receipts, and form content/layout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMxODE0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMTozM1rOGJaVyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMTozM1rOGJaVyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMTkzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - FormTrainingClient to train custom models (with/without labels), and manage the custom models on your account\n          \n          \n            \n                - `FormTrainingClient` to train custom models (with/without labels), and manage the custom models on your account", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412521931", "createdAt": "2020-04-21T22:01:33Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -0,0 +1,26 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (Unreleased)\n+Version 1.0.0-beta.1 is a preview of our efforts in creating a Azure Form Recognizer client library that is developer-friendly\n+and idiomatic to the Java ecosystem. The principles that guide\n+our efforts can be found in the [Azure SDK Design Guidelines for Java](https://azure.github.io/azure-sdk/java_introduction.html).\n+\n+For more information about this, and preview releases of other Azure SDK libraries, please visit\n+https://azure.github.io/azure-sdk/releases/latest/java.html.\n+\n+- It uses the Form recognizer service `v2.0-preview.1` API.\n+- Two client design:\n+    - FormRecognizerClient to analyze fields/values on custom forms, receipts, and form content/layout\n+    - FormTrainingClient to train custom models (with/without labels), and manage the custom models on your account", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzM1MzQwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMToyN1rOGJapVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo0OTozNVrOGJbtUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNjkzMg==", "bodyText": "these two seems valid model id and status model id?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412526932", "createdAt": "2020-04-21T22:11:27Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -51,36 +51,35 @@\n  * Contains helper methods for generating inputs for test methods\n  */\n final class TestUtils {\n-\n-    static final String VALID_MODEL_ID = \"95537f1b-aac4-4da8-8292-f1b93ac4c8f8\";\n-    static final String LABELED_MODEL_ID = \"a0a3998a-b3c0-4075-aa6b-c4c4affe66b7\";\n     static final String INVALID_MODEL_ID = \"a0a3998a-4c4affe66b7\";\n     static final String INVALID_STATUS_MODEL_ID = \"22138c4e-c4b0-4901-a0e1-6c5beb73fc1d\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDMzNw==", "bodyText": "static final String INVALID_MODEL_ID = \"a0a3998a-4c4affe66b7\";\n\n\nIt is not a valid UUID format for model Id.\n\nstatic final String INVALID_STATUS_MODEL_ID = \"22138c4e-c4b0-4901-a0e1-6c5beb73fc1d\";\n\n\nAnd this one has an invalid status.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412544337", "createdAt": "2020-04-21T22:49:35Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -51,36 +51,35 @@\n  * Contains helper methods for generating inputs for test methods\n  */\n final class TestUtils {\n-\n-    static final String VALID_MODEL_ID = \"95537f1b-aac4-4da8-8292-f1b93ac4c8f8\";\n-    static final String LABELED_MODEL_ID = \"a0a3998a-b3c0-4075-aa6b-c4c4affe66b7\";\n     static final String INVALID_MODEL_ID = \"a0a3998a-4c4affe66b7\";\n     static final String INVALID_STATUS_MODEL_ID = \"22138c4e-c4b0-4901-a0e1-6c5beb73fc1d\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNjkzMg=="}, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzM1NTY2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMjowNVrOGJaqkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMjowNVrOGJaqkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNzI0OQ==", "bodyText": "valid labeled model id ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412527249", "createdAt": "2020-04-21T22:12:05Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -51,36 +51,35 @@\n  * Contains helper methods for generating inputs for test methods\n  */\n final class TestUtils {\n-\n-    static final String VALID_MODEL_ID = \"95537f1b-aac4-4da8-8292-f1b93ac4c8f8\";\n-    static final String LABELED_MODEL_ID = \"a0a3998a-b3c0-4075-aa6b-c4c4affe66b7\";\n     static final String INVALID_MODEL_ID = \"a0a3998a-4c4affe66b7\";\n     static final String INVALID_STATUS_MODEL_ID = \"22138c4e-c4b0-4901-a0e1-6c5beb73fc1d\";\n-    static final String INVALID_STATUS_MODEL_ERROR = \"Model Id \" + INVALID_STATUS_MODEL_ID + \" returned with invalid\"\n-        + \" status.\";\n-\n-    static final String INVALID_SOURCE_URL_ERROR = \"Download failed. Please check your input URL.\";\n-    // TODO (savaity): Do not hardcode, generate SAS URL\n-    static final String VALID_LABELED_DATA_SAS_URL = \"\";\n-    static final String VALID_UNLABELED_DATA_SAS_URL = \"\";\n-    static final Object INVALID_MODEL_ID_ERROR = \"Invalid UUID string: \" + INVALID_MODEL_ID;\n-    static final Object NULL_SOURCE_URL_ERROR = \"'fileSourceUrl' cannot be null.\";\n+    static final String INVALID_RECEIPT_URL = \"https://invalid.blob.core.windows.net/fr/contoso-allinone.jpg\";\n+    static final String INVALID_SOURCE_URL_ERROR = \"Status code 400, \\\"{\\\"error\\\":{\\\"code\\\":\\\"1003\\\",\"\n+        + \"\\\"message\\\":\\\"Parameter 'Source' is not a valid Uri.\\\"}}\\\"\";\n+    static final String INVALID_MODEL_ID_ERROR = \"Invalid UUID string: \" + INVALID_MODEL_ID;\n+    static final String NULL_SOURCE_URL_ERROR = \"'fileSourceUrl' cannot be null.\";\n     static final String INVALID_URL = \"htttttttps://localhost:8080\";\n+    static final String LABELED_MODEL_ID = \"a0a3998a-b3c0-4075-aa6b-c4c4affe66b7\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzM2MDI1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxMzozN1rOGJatNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo1MDoxOFrOGJbubQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNzkyNA==", "bodyText": "create/use a static final variable for the model id.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412527924", "createdAt": "2020-04-21T22:13:37Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -172,7 +171,7 @@ static CustomFormModel getExpectedUnlabeledModel() {\n             }\n         };\n         CustomFormSubModel customFormSubModel = new CustomFormSubModel(null, fieldMap, \"form-0\");\n-        return new CustomFormModel(VALID_MODEL_ID, CustomFormModelStatus.READY,\n+        return new CustomFormModel(\"95537f1b-aac4-4da8-8292-f1b93ac4c8f8\", CustomFormModelStatus.READY,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDYyMQ==", "bodyText": "It isn't reused anywhere else so didn't bother putting it in a static variable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10354#discussion_r412544621", "createdAt": "2020-04-21T22:50:18Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -172,7 +171,7 @@ static CustomFormModel getExpectedUnlabeledModel() {\n             }\n         };\n         CustomFormSubModel customFormSubModel = new CustomFormSubModel(null, fieldMap, \"form-0\");\n-        return new CustomFormModel(VALID_MODEL_ID, CustomFormModelStatus.READY,\n+        return new CustomFormModel(\"95537f1b-aac4-4da8-8292-f1b93ac4c8f8\", CustomFormModelStatus.READY,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyNzkyNA=="}, "originalCommit": {"oid": "4c2a8798a49e6dcf6cea4e57b67a44659d86b934"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4534, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}