{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjQ3MjUw", "number": 15105, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNjoxM1rOEj1tnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxNzozMlrOEm0Osg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDE1NjQ3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPipelinePolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNjoxM1rOHSbkAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMDoxNjoxM1rOHSbkAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4ODAwMg==", "bodyText": "Add a default implementation for getHttpPipelinePosition(), this will default to PER_RETRY.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r489088002", "createdAt": "2020-09-16T00:16:13Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPipelinePolicy.java", "diffHunk": "@@ -17,9 +17,9 @@\n @FunctionalInterface\n public interface HttpPipelinePolicy {\n     /**\n-     * Process provided request context and invokes the next policy.\n+     * Processes provided request context and invokes the next policy.\n      *\n-     * @param context request context\n+     * @param context The request context.\n      * @param next The next policy to invoke.\n      * @return A publisher that initiates the request upon subscription and emits a response on completion.\n      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8b2f1a1f50df63b7a11497d0083d56d229c7f43"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTMwNDkwOnYy", "diffSide": "RIGHT", "path": "eng/versioning/version_client.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMjowODoyN1rOHVkGSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMzowMTo1OFrOHVlTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3MzU3OQ==", "bodyText": "There's already an entry for azure-core. This line can be removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r492373579", "createdAt": "2020-09-21T22:08:27Z", "author": {"login": "srnagar"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -130,6 +130,8 @@ com.microsoft.azure:spring-cloud-starter-azure-appconfiguration-config;1.2.8-bet\n # Format;\n # unreleased_<groupId>:<artifactId>;dependency-version\n # note: The unreleased dependencies will not be manipulated with the automatic PR creation code.\n+unreleased_com.azure:azure-core;1.9.0-beta.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a011ebd5e4392b61bf9576b39f5e4f1ea2481364"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM5MzM0Nw==", "bodyText": "Removed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r492393347", "createdAt": "2020-09-21T23:01:58Z", "author": {"login": "alzimmermsft"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -130,6 +130,8 @@ com.microsoft.azure:spring-cloud-starter-azure-appconfiguration-config;1.2.8-bet\n # Format;\n # unreleased_<groupId>:<artifactId>;dependency-version\n # note: The unreleased dependencies will not be manipulated with the automatic PR creation code.\n+unreleased_com.azure:azure-core;1.9.0-beta.1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3MzU3OQ=="}, "originalCommit": {"oid": "a011ebd5e4392b61bf9576b39f5e4f1ea2481364"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTMxNTYxOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPipelinePolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMjoxMTo1MVrOHVkMTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjowMjo0M1rOHW1wfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3NTExOA==", "bodyText": "I thought @JonathanGiles  suggested creating a separate interface PositionalHttpPipelinePolicy extends HttpPipelinePolicy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r492375118", "createdAt": "2020-09-21T22:11:51Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPipelinePolicy.java", "diffHunk": "@@ -17,11 +18,22 @@\n @FunctionalInterface\n public interface HttpPipelinePolicy {\n     /**\n-     * Process provided request context and invokes the next policy.\n+     * Processes provided request context and invokes the next policy.\n      *\n-     * @param context request context\n+     * @param context The request context.\n      * @param next The next policy to invoke.\n      * @return A publisher that initiates the request upon subscription and emits a response on completion.\n      */\n     Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next);\n+\n+    /**\n+     * Gets the position to place the policy.\n+     * <p>\n+     * By default pipeline policies are positioned {@link HttpPipelinePosition#PER_RETRY}.\n+     *\n+     * @return The position to place the policy.\n+     */\n+    default HttpPipelinePosition getPipelinePosition() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a011ebd5e4392b61bf9576b39f5e4f1ea2481364"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcxMTQ4Ng==", "bodyText": "Discussed offline, going with the default method on the interface as adding a sub-interface would require most HttpPipelinePolicy instance to be updated to implement the new interface.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r493711486", "createdAt": "2020-09-23T16:02:43Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpPipelinePolicy.java", "diffHunk": "@@ -17,11 +18,22 @@\n @FunctionalInterface\n public interface HttpPipelinePolicy {\n     /**\n-     * Process provided request context and invokes the next policy.\n+     * Processes provided request context and invokes the next policy.\n      *\n-     * @param context request context\n+     * @param context The request context.\n      * @param next The next policy to invoke.\n      * @return A publisher that initiates the request upon subscription and emits a response on completion.\n      */\n     Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next);\n+\n+    /**\n+     * Gets the position to place the policy.\n+     * <p>\n+     * By default pipeline policies are positioned {@link HttpPipelinePosition#PER_RETRY}.\n+     *\n+     * @return The position to place the policy.\n+     */\n+    default HttpPipelinePosition getPipelinePosition() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM3NTExOA=="}, "originalCommit": {"oid": "a011ebd5e4392b61bf9576b39f5e4f1ea2481364"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTM3MDc0OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipelinePosition.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxNzozMlrOHXEQng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzoxODozOFrOHXk5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0OTA4Ng==", "bodyText": "Should we call this pipeline \"position\" or should we name this as HttpPolicyEvaluationStrategy? Since this doesn't define the position but defines if this policy needs to be evaluated just once per call or evaluated for every retry attempt.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r493949086", "createdAt": "2020-09-23T23:17:32Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipelinePosition.java", "diffHunk": "@@ -0,0 +1,25 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;\n+\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+\n+/**\n+ * Indicates the position in an {@link HttpPipeline} to place an {@link HttpPipelinePolicy}.\n+ */\n+public enum HttpPipelinePosition {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0907a9bf8b41694786a6df0e6ddd63e1af9154"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ1MzkwMw==", "bodyText": "Both would work in the scenario where we added FIRST and LAST as additional options (HttpPipelinePosition.FIRST, HttpPolicyEvaluationStrategy.FIRST). But, given this is a simple enum I would stick with HttpPipelinePosition, that way we can save HttpPolicyEvaluationStrategy for a more complex scenario (similar to RetryStrategy).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r494453903", "createdAt": "2020-09-24T16:29:17Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipelinePosition.java", "diffHunk": "@@ -0,0 +1,25 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;\n+\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+\n+/**\n+ * Indicates the position in an {@link HttpPipeline} to place an {@link HttpPipelinePolicy}.\n+ */\n+public enum HttpPipelinePosition {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0OTA4Ng=="}, "originalCommit": {"oid": "ff0907a9bf8b41694786a6df0e6ddd63e1af9154"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ4Mzc4NQ==", "bodyText": "Makes sense. Let's keep the current name then!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15105#discussion_r494483785", "createdAt": "2020-09-24T17:18:38Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipelinePosition.java", "diffHunk": "@@ -0,0 +1,25 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;\n+\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+\n+/**\n+ * Indicates the position in an {@link HttpPipeline} to place an {@link HttpPipelinePolicy}.\n+ */\n+public enum HttpPipelinePosition {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0OTA4Ng=="}, "originalCommit": {"oid": "ff0907a9bf8b41694786a6df0e6ddd63e1af9154"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1079, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}