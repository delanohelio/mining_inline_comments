{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDQ4NTQ1", "number": 9616, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MToyNFrODr3NXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MTo1MlrODr3Nzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzE5OTAyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MToyNFrOF8dTQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MToyNFrOF8dTQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzODk0NA==", "bodyText": "To follow along with the other formatting.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.info(\"connectionId[{}] Creating and starting connection to {}:{}\", connectionId,\n          \n          \n            \n                        logger.info(\"connectionId[{}]: Creating and starting connection to {}:{}\", connectionId,", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9616#discussion_r398938944", "createdAt": "2020-03-26T22:51:24Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorConnection.java", "diffHunk": "@@ -335,7 +336,8 @@ private synchronized ClaimsBasedSecurityNode getOrCreateCBSNode() {\n \n     private synchronized Connection getOrCreateConnection() throws IOException {\n         if (connection == null) {\n-            logger.info(\"Creating and starting connection to {}:{}\", handler.getHostname(), handler.getProtocolPort());\n+            logger.info(\"connectionId[{}] Creating and starting connection to {}:{}\", connectionId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd7a464e6f094f50d26517dd87fd196433755f5"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzIwMDE1OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/handler/ConnectionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MTo1MlrOF8dT6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMjo1MTo1MlrOF8dT6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzOTExMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"connectionId[%s] notifyErrorContext does not have an ErrorCondition.\", getConnectionId())));\n          \n          \n            \n                            \"connectionId[%s]: notifyErrorContext does not have an ErrorCondition.\", getConnectionId())));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9616#discussion_r398939112", "createdAt": "2020-03-26T22:51:52Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/handler/ConnectionHandler.java", "diffHunk": "@@ -257,8 +257,8 @@ private void notifyErrorContext(Connection connection, ErrorCondition condition)\n         }\n \n         if (condition == null) {\n-            throw logger.logExceptionAsError(new IllegalStateException(\n-                \"notifyErrorContext does not have an ErrorCondition.\"));\n+            throw logger.logExceptionAsError(new IllegalStateException(String.format(\n+                \"connectionId[%s] notifyErrorContext does not have an ErrorCondition.\", getConnectionId())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd7a464e6f094f50d26517dd87fd196433755f5"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}