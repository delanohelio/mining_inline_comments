{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTc1NzQ4", "number": 9845, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzoyNjoxNVrODuPQDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzoyNjoxNVrODuPQDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODEwOTU5OnYy", "diffSide": "RIGHT", "path": "sdk/dns/mgmt/src/main/java/com/azure/management/dns/implementation/DnsZoneImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzoyNjoxNVrOGAIEsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODo1MToyM1rOGAMCIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NTQ1OA==", "bodyText": "Why set both? Will it affect line 413 when you call both regardless create or update?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9845#discussion_r402785458", "createdAt": "2020-04-03T07:26:15Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/dns/mgmt/src/main/java/com/azure/management/dns/implementation/DnsZoneImpl.java", "diffHunk": "@@ -394,34 +395,25 @@ public DnsZoneImpl withoutTxtRecordSet(String name, String eTag) {\n \n     @Override\n     public DnsZoneImpl withETagCheck() {\n-        if (isInCreateMode()) {\n-            this.dnsZoneETag = \"*\";\n-            return this;\n-        }\n-        return this.withETagCheck(this.inner().etag());\n+        this.eTagState.withImplicitETagCheckOnCreate();\n+        this.eTagState.withImplicitETagCheckOnUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47c4af059d537bed4f43f670631c7fa274514179"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxNDU5MQ==", "bodyText": "withETagCheck() could be available both Create phase and Update phase. So it's required to set both here.\nIn Create phase, line#413 self.inner().etag() is NULL so it will send If-Match: null and If-None-Match:* during creation. In Update phase, it would send If-Match: etag and If-None-Match: *. This is the scenario applied by RecordSet in track 1. I tested it's working when sending If-Match: etag and If-None-Match: * for Update.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9845#discussion_r402814591", "createdAt": "2020-04-03T08:10:17Z", "author": {"login": "xseeseesee"}, "path": "sdk/dns/mgmt/src/main/java/com/azure/management/dns/implementation/DnsZoneImpl.java", "diffHunk": "@@ -394,34 +395,25 @@ public DnsZoneImpl withoutTxtRecordSet(String name, String eTag) {\n \n     @Override\n     public DnsZoneImpl withETagCheck() {\n-        if (isInCreateMode()) {\n-            this.dnsZoneETag = \"*\";\n-            return this;\n-        }\n-        return this.withETagCheck(this.inner().etag());\n+        this.eTagState.withImplicitETagCheckOnCreate();\n+        this.eTagState.withImplicitETagCheckOnUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NTQ1OA=="}, "originalCommit": {"oid": "47c4af059d537bed4f43f670631c7fa274514179"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDA0MA==", "bodyText": "The problem is why does If-None-Match: * work on UPDATE? The condition specified by it is that there being not any match, isn't it? Unless you can find spec elaborating it is acceptable, don't do it.\nThe test pass might be just service behavior, which might not work on another service.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9845#discussion_r402824040", "createdAt": "2020-04-03T08:21:07Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/dns/mgmt/src/main/java/com/azure/management/dns/implementation/DnsZoneImpl.java", "diffHunk": "@@ -394,34 +395,25 @@ public DnsZoneImpl withoutTxtRecordSet(String name, String eTag) {\n \n     @Override\n     public DnsZoneImpl withETagCheck() {\n-        if (isInCreateMode()) {\n-            this.dnsZoneETag = \"*\";\n-            return this;\n-        }\n-        return this.withETagCheck(this.inner().etag());\n+        this.eTagState.withImplicitETagCheckOnCreate();\n+        this.eTagState.withImplicitETagCheckOnUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NTQ1OA=="}, "originalCommit": {"oid": "47c4af059d537bed4f43f670631c7fa274514179"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1MDMzOA==", "bodyText": "Agree. I just commit changes for this. Now it will only set one of them by verifying inner.id().", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9845#discussion_r402850338", "createdAt": "2020-04-03T08:51:23Z", "author": {"login": "xseeseesee"}, "path": "sdk/dns/mgmt/src/main/java/com/azure/management/dns/implementation/DnsZoneImpl.java", "diffHunk": "@@ -394,34 +395,25 @@ public DnsZoneImpl withoutTxtRecordSet(String name, String eTag) {\n \n     @Override\n     public DnsZoneImpl withETagCheck() {\n-        if (isInCreateMode()) {\n-            this.dnsZoneETag = \"*\";\n-            return this;\n-        }\n-        return this.withETagCheck(this.inner().etag());\n+        this.eTagState.withImplicitETagCheckOnCreate();\n+        this.eTagState.withImplicitETagCheckOnUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc4NTQ1OA=="}, "originalCommit": {"oid": "47c4af059d537bed4f43f670631c7fa274514179"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1957, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}