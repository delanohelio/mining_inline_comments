{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNTAxMTQ1", "number": 14338, "title": "Added Nested partition key support feature", "bodyText": "Added Nested partition key support feature\nSupports: #14285\nSupports: #14284\n\nTODO:\n\nFollow up PR with updates in readme, and samples with nested partition key support feature.", "createdAt": "2020-08-21T08:46:11Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338", "merged": true, "mergeCommit": {"oid": "03a7e2957f18a41bcc6cd8e369e99d5dadb488a4"}, "closed": true, "closedAt": "2020-08-26T19:24:44Z", "author": {"login": "kushagraThapar"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBAw7SAH2gAyNDcxNTAxMTQ1OjBiMTdhOThhZjY3NDY4NTExMzI5NzEyMGZkZGY3NTk4MWRiMmM4Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCk0N1AH2gAyNDcxNTAxMTQ1OmE3NDFlMDcyOTliYmIyY2M0NjlkNzdjNThkNjQxZGMzZmI2OGRiZGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b17a98af674685113297120fddf75981db2c828", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b17a98af674685113297120fddf75981db2c828", "committedDate": "2020-08-21T08:44:36Z", "message": "Added Nested partition key support feature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzI1MTk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-472725197", "createdAt": "2020-08-21T18:54:22Z", "commit": {"oid": "0b17a98af674685113297120fddf75981db2c828"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTowNjo0M1rOHE4I_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOToxMDozMlrOHE4PtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg3NjE1Ng==", "bodyText": "you don't need to pass the content to the request, delete doesn't expect a body. you should pass null here as content.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r474876156", "createdAt": "2020-08-21T19:06:43Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1437,15 +1444,33 @@ void captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResp\n             logger.debug(\"Deleting a Document. documentLink: [{}]\", documentLink);\n             String path = Utils.joinPath(documentLink, null);\n             Map<String, String> requestHeaders = this.getRequestHeaders(options, ResourceType.Document, OperationType.Delete);\n-            RxDocumentServiceRequest request = RxDocumentServiceRequest.create(OperationType.Delete,\n-                ResourceType.Document, path, requestHeaders, options);\n+            RxDocumentServiceRequest request;\n+            ByteBuffer content = null;\n+            if (document != null) {\n+                Instant serializationStartTimeUTC = Instant.now();\n+                content = serializeJsonToByteBuffer(document);\n+                Instant serializationEndTime = Instant.now();\n+                SerializationDiagnosticsContext.SerializationDiagnostics serializationDiagnostics = new SerializationDiagnosticsContext.SerializationDiagnostics(\n+                    serializationStartTimeUTC,\n+                    serializationEndTime,\n+                    SerializationDiagnosticsContext.SerializationType.ITEM_SERIALIZATION);\n+                request = RxDocumentServiceRequest.create(OperationType.Delete,\n+                    ResourceType.Document, path, requestHeaders, options, content);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b17a98af674685113297120fddf75981db2c828"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg3Nzg3Ng==", "bodyText": "you don't need the content for the delete operation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r474877876", "createdAt": "2020-08-21T19:10:32Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1437,15 +1444,33 @@ void captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResp\n             logger.debug(\"Deleting a Document. documentLink: [{}]\", documentLink);\n             String path = Utils.joinPath(documentLink, null);\n             Map<String, String> requestHeaders = this.getRequestHeaders(options, ResourceType.Document, OperationType.Delete);\n-            RxDocumentServiceRequest request = RxDocumentServiceRequest.create(OperationType.Delete,\n-                ResourceType.Document, path, requestHeaders, options);\n+            RxDocumentServiceRequest request;\n+            ByteBuffer content = null;\n+            if (document != null) {\n+                Instant serializationStartTimeUTC = Instant.now();\n+                content = serializeJsonToByteBuffer(document);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b17a98af674685113297120fddf75981db2c828"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b38dfde9f6bce4b9630f96e4e5cdb3a57c3b59", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/51b38dfde9f6bce4b9630f96e4e5cdb3a57c3b59", "committedDate": "2020-08-21T21:02:06Z", "message": "Fixed double serialization issue, code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODMyOTYw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-472832960", "createdAt": "2020-08-21T21:39:09Z", "commit": {"oid": "51b38dfde9f6bce4b9630f96e4e5cdb3a57c3b59"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTozOTowOVrOHE-jlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTozOTowOVrOHE-jlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4MTI3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return new InternalObjectNode(((InternalObjectNode) cosmosItem).toJson());\n          \n          \n            \n                        return cosmosItem;\n          \n      \n    \n    \n  \n\non this if branch the item is InternalObjectNode you don't need to serialze and deserialize again.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r474981270", "createdAt": "2020-08-21T21:39:09Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/InternalObjectNode.java", "diffHunk": "@@ -64,6 +64,23 @@ public InternalObjectNode(ObjectNode propertyBag) {\n         super(propertyBag);\n     }\n \n+    /**\n+     * fromObjectToInternalObjectNode returns InternalObjectNode\n+     */\n+    public static InternalObjectNode fromObjectToInternalObjectNode(Object cosmosItem) {\n+        if (cosmosItem instanceof InternalObjectNode) {\n+            return new InternalObjectNode(((InternalObjectNode) cosmosItem).toJson());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51b38dfde9f6bce4b9630f96e4e5cdb3a57c3b59"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/21ec1522411d738576324fb63fa6ebcb8c8438c6", "committedDate": "2020-08-21T21:44:46Z", "message": "Fixed code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTI4OTA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-473128907", "createdAt": "2020-08-24T05:28:37Z", "commit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToyODozOFrOHFVGZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzoyMToyOVrOHFXhhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MDYyOQ==", "bodyText": "Do we need validateItemResponse(properties, itemResponse); here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475350629", "createdAt": "2020-08-24T05:28:38Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosItemTest.java", "diffHunk": "@@ -127,9 +127,19 @@ public void deleteItem() throws Exception {\n         assertThat(deleteResponse.getStatusCode()).isEqualTo(204);\n     }\n \n+    @Test(groups = { \"simple\" }, timeOut = TIMEOUT)\n+    public void deleteItemUsingEntity() throws Exception {\n+        InternalObjectNode properties = getDocumentDefinition(UUID.randomUUID().toString());\n+        CosmosItemResponse<InternalObjectNode> itemResponse = container.createItem(properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1NDM2Ng==", "bodyText": "can we use containerName instead of getContainerName(objectToSave.getClass())?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475354366", "createdAt": "2020-08-24T05:43:15Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -151,11 +149,22 @@ public void setApplicationContext(ApplicationContext applicationContext) throws\n      * @return the inserted item\n      */\n     public <T> T insert(T objectToSave, PartitionKey partitionKey) {\n-        Assert.notNull(objectToSave, \"domainType should not be null\");\n-\n         return insert(getContainerName(objectToSave.getClass()), objectToSave, partitionKey);\n     }\n \n+    /**\n+     * Inserts item into the given container\n+     *\n+     * @param containerName must not be {@literal null}\n+     * @param objectToSave must not be {@literal null}\n+     * @param <T> type class of domain type\n+     * @return the inserted item\n+     */\n+    @Override\n+    public <T> T insert(String containerName, T objectToSave) {\n+        return insert(getContainerName(objectToSave.getClass()), objectToSave, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MDM0NA==", "bodyText": "return Optional.ofNullable(domainType)\n                .map(d -> d.getAnnotation(Container.class))\n                .map(Container::partitionKeyPath)\n                .filter(s -> !s.isEmpty())\n                .orElse(null);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475360344", "createdAt": "2020-08-24T06:03:42Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -291,15 +294,22 @@ private String getContainerName(Class<?> domainType) {\n \n         final Container annotation = domainType.getAnnotation(Container.class);\n \n-        if (annotation != null\n-                && annotation.containerName() != null\n-                && !annotation.containerName().isEmpty()) {\n+        if (annotation != null && !annotation.containerName().isEmpty()) {\n             customContainerName = resolveExpression(annotation.containerName());\n         }\n \n         return customContainerName;\n     }\n \n+    private String getPartitionKeyPathValue(Class<?> domainType) {\n+        final Container annotation = domainType.getAnnotation(Container.class);\n+\n+        if (annotation != null && !annotation.partitionKeyPath().isEmpty()) {\n+            return annotation.partitionKeyPath();\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MTQ0OQ==", "bodyText": "getPartitionKeyPathInDomainType will make it easier to understand.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475361449", "createdAt": "2020-08-24T06:07:10Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -291,15 +294,22 @@ private String getContainerName(Class<?> domainType) {\n \n         final Container annotation = domainType.getAnnotation(Container.class);\n \n-        if (annotation != null\n-                && annotation.containerName() != null\n-                && !annotation.containerName().isEmpty()) {\n+        if (annotation != null && !annotation.containerName().isEmpty()) {\n             customContainerName = resolveExpression(annotation.containerName());\n         }\n \n         return customContainerName;\n     }\n \n+    private String getPartitionKeyPathValue(Class<?> domainType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MTU3NA==", "bodyText": "this.partitionKeyPathInDomainType = getPartitionKeyPathInDomainType(domainType);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475361574", "createdAt": "2020-08-24T06:07:39Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -74,6 +75,8 @@ public CosmosEntityInformation(Class<T> domainType) {\n         this.autoGenerateId = isIdFieldAnnotatedWithGeneratedValue(this.id);\n \n         this.containerName = getContainerName(domainType);\n+        this.partitionKeyPath = getPartitionKeyPathValue(domainType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MTYyNg==", "bodyText": "partitionKeyPathInDomainType", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475361626", "createdAt": "2020-08-24T06:07:48Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -53,6 +53,7 @@\n     private final Field partitionKeyField;\n     private final Field versionField;\n     private final String containerName;\n+    private final String partitionKeyPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2NTE2NQ==", "bodyText": "return \"/\" + Optional.of(partitionKeyField)\n                                 .map(f -> f.getAnnotation(PartitionKey.class))\n                                 .map(PartitionKey::value)\n                                 .filter(s -> !s.isEmpty())\n                                 .orElseGet(partitionKeyField::getName);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475365165", "createdAt": "2020-08-24T06:18:38Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -195,16 +198,16 @@ public String getVersionFieldName() {\n     }\n \n     /**\n-     * Get the field name represented by the supplied partitionKeyField object\n+     * Get the computed partition key path for container\n      *\n-     * @return partition key field name\n+     * @return partition key path\n      */\n-    public String getPartitionKeyFieldName() {\n+    public String getPartitionKeyPath() {\n         if (partitionKeyField == null) {\n-            return null;\n+            return partitionKeyPath == null ? \"/null\" : partitionKeyPath;\n         } else {\n             final PartitionKey partitionKey = partitionKeyField.getAnnotation(PartitionKey.class);\n-            return partitionKey.value().equals(\"\") ? partitionKeyField.getName() : partitionKey.value();\n+            return partitionKey.value().equals(\"\") ? \"/\" + partitionKeyField.getName() : \"/\" + partitionKey.value();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2Njk5OA==", "bodyText": "return Optional.of(domainType)\n                       .map(d -> d.getAnnotation(Container.class))\n                       .map(Container::containerName)\n                       .filter(s -> !s.isEmpty())\n                       .map(ExpressionResolver::resolveExpression)\n                       .orElseGet(domainType::getSimpleName);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475366998", "createdAt": "2020-08-24T06:24:05Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -291,15 +294,22 @@ private String getContainerName(Class<?> domainType) {\n \n         final Container annotation = domainType.getAnnotation(Container.class);\n \n-        if (annotation != null\n-                && annotation.containerName() != null\n-                && !annotation.containerName().isEmpty()) {\n+        if (annotation != null && !annotation.containerName().isEmpty()) {\n             customContainerName = resolveExpression(annotation.containerName());\n         }\n \n         return customContainerName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2NzkwOA==", "bodyText": "To keep same code style, please use information.getPartitionKeyPath() directly instead of define partitionKeyPath.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475367908", "createdAt": "2020-08-24T06:26:33Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -441,9 +459,7 @@ public CosmosContainerProperties createContainerIfNotExists(CosmosEntityInformat\n                 CosmosUtils.fillAndProcessResponseDiagnostics(this.responseDiagnosticsProcessor,\n                     cosmosDatabaseResponse.getDiagnostics(), null);\n                 final CosmosContainerProperties cosmosContainerProperties =\n-                    new CosmosContainerProperties(\n-                        information.getContainerName(), \"/\"\n-                        + information.getPartitionKeyFieldName());\n+                    new CosmosContainerProperties(information.getContainerName(), partitionKeyPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2OTQ2Nw==", "bodyText": "To keep same code style, please use information.getPartitionKeyPath() directly instead of define partitionKeyPath.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475369467", "createdAt": "2020-08-24T06:30:56Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/core/ReactiveCosmosTemplate.java", "diffHunk": "@@ -145,9 +147,7 @@ public void setApplicationContext(@NonNull ApplicationContext applicationContext\n                 CosmosUtils.fillAndProcessResponseDiagnostics(this.responseDiagnosticsProcessor,\n                     cosmosDatabaseResponse.getDiagnostics(), null);\n                 final CosmosContainerProperties cosmosContainerProperties =\n-                    new CosmosContainerProperties(\n-                        information.getContainerName(),\n-                        \"/\" + information.getPartitionKeyFieldName());\n+                    new CosmosContainerProperties(information.getContainerName(), partitionKeyPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4NjE4MQ==", "bodyText": "Can we update logic in CosmosAsyncContainer#createItem\nfrom\n    public <T> Mono<CosmosItemResponse<T>> createItem(\n        T item,\n        PartitionKey partitionKey,\n        CosmosItemRequestOptions options) {\n        if (options == null) {\n            options = new CosmosItemRequestOptions();\n        }\n        ModelBridgeInternal.setPartitionKey(options, partitionKey);\n        return createItem(item, options);\n    }\n\nto\n    public <T> Mono<CosmosItemResponse<T>> createItem(\n        T item,\n        PartitionKey partitionKey,\n        CosmosItemRequestOptions options) {\n        if (options == null) {\n            options = new CosmosItemRequestOptions();\n        }\n        if (partitionKey != null) {\n            ModelBridgeInternal.setPartitionKey(options, partitionKey);\n        }\n        return createItem(item, options);\n    }\n\nSo we can delete  if (partitionKey == null) here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475386181", "createdAt": "2020-08-24T07:12:46Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/core/ReactiveCosmosTemplate.java", "diffHunk": "@@ -370,21 +351,37 @@ public void setApplicationContext(@NonNull ApplicationContext applicationContext\n         generateIdIfNullAndAutoGenerationEnabled(objectToSave, domainType);\n         final JsonNode originalItem = prepareToPersistAndConvertToItemProperties(objectToSave);\n         final CosmosItemRequestOptions options = new CosmosItemRequestOptions();\n+        CosmosAsyncContainer cosmosAsyncContainer = cosmosAsyncClient.getDatabase(this.databaseName)\n+                                                                     .getContainer(containerName);\n+        Mono<CosmosItemResponse<JsonNode>> item;\n         if (partitionKey == null) {\n-            partitionKey = PartitionKey.NONE;\n+            //  if the partition key is null, SDK will get the partitionKey from the object\n+            item = cosmosAsyncContainer.createItem(originalItem, options);\n+        } else {\n+            item = cosmosAsyncContainer.createItem(originalItem, partitionKey, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5MDM0MA==", "bodyText": "Where is the code about SDK will get the partitionKey from the object ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#discussion_r475390340", "createdAt": "2020-08-24T07:21:29Z", "author": {"login": "chenrujun"}, "path": "sdk/cosmos/azure-spring-data-cosmos-core/src/main/java/com/azure/spring/data/cosmos/core/ReactiveCosmosTemplate.java", "diffHunk": "@@ -370,21 +351,37 @@ public void setApplicationContext(@NonNull ApplicationContext applicationContext\n         generateIdIfNullAndAutoGenerationEnabled(objectToSave, domainType);\n         final JsonNode originalItem = prepareToPersistAndConvertToItemProperties(objectToSave);\n         final CosmosItemRequestOptions options = new CosmosItemRequestOptions();\n+        CosmosAsyncContainer cosmosAsyncContainer = cosmosAsyncClient.getDatabase(this.databaseName)\n+                                                                     .getContainer(containerName);\n+        Mono<CosmosItemResponse<JsonNode>> item;\n         if (partitionKey == null) {\n-            partitionKey = PartitionKey.NONE;\n+            //  if the partition key is null, SDK will get the partitionKey from the object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ec1522411d738576324fb63fa6ebcb8c8438c6"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da793304c78a6b166d24ba82920771cc8cdb9b0e", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/da793304c78a6b166d24ba82920771cc8cdb9b0e", "committedDate": "2020-08-25T03:35:07Z", "message": "Code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjU0NzI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-474254725", "createdAt": "2020-08-25T08:30:53Z", "commit": {"oid": "da793304c78a6b166d24ba82920771cc8cdb9b0e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MzUwNjg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-474350685", "createdAt": "2020-08-25T10:35:21Z", "commit": {"oid": "da793304c78a6b166d24ba82920771cc8cdb9b0e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85535f151baa5dc50bdfdf2dab75b46ea4e83a6c", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/85535f151baa5dc50bdfdf2dab75b46ea4e83a6c", "committedDate": "2020-08-25T16:55:01Z", "message": "Code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23810cc6043248a32718acfe9fda732c56155dfb", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/23810cc6043248a32718acfe9fda732c56155dfb", "committedDate": "2020-08-25T21:31:04Z", "message": "Removed unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTA3ODQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14338#pullrequestreview-475107845", "createdAt": "2020-08-26T02:28:49Z", "commit": {"oid": "23810cc6043248a32718acfe9fda732c56155dfb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea3ba8eadc2e4d69f9bcb09ac6530c0caa119a4c", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea3ba8eadc2e4d69f9bcb09ac6530c0caa119a4c", "committedDate": "2020-08-26T04:38:15Z", "message": "Merge branch 'master' into nested_partition_key_feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a741e07299bbb2cc469d77c58d641dc3fb68dbdd", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a741e07299bbb2cc469d77c58d641dc3fb68dbdd", "committedDate": "2020-08-26T05:18:42Z", "message": "Fixed query metrics test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 330, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}