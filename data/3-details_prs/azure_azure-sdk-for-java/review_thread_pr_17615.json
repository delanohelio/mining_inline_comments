{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTY0ODg2", "number": 17615, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDowMzowOVrOE58M-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoxMDo0MlrOE6698Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTkwNjQ5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDowMzowOVrOH0tRXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMjozOTo1OFrOH1Un5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyOTcyNg==", "bodyText": "We should combine all these code into one code block and add some descriptions about how to search resources.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r525029726", "createdAt": "2020-11-17T10:03:09Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,38 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Inject the builder bean.\n+\n+    ```java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a71f13043b918d691a71d10fcc5c3f11019935f8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY3NDQ2OQ==", "bodyText": "Done, please help review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r525674469", "createdAt": "2020-11-18T02:39:58Z", "author": {"login": "moarychan"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,38 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Inject the builder bean.\n+\n+    ```java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyOTcyNg=="}, "originalCommit": {"oid": "a71f13043b918d691a71d10fcc5c3f11019935f8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTc1MjEzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToxNzozOFrOH2NHcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjowNToxNlrOH2N_dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMDA0OA==", "bodyText": "Is there a Java sdk implementation link for this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526600048", "createdAt": "2020-11-19T05:17:38Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Create pattern resolver object, if only one storage type resource used, please call the corresponding constructor.\n+* Pattern search, the **searchPattern** should start with `azure-blob://` or `azure-file://`. Such as `azure-blob://*/*`, it means list all blobs in all containers; `azure-blob://demo-container/**`, it means list all blobs in the demo-container container, including any sub-folder.\n+* Location search, the **searchLocation** should start with `azure-blob://` or `azure-file://`, the remaining file path should exist, otherwise an exception will be thrown.\n+\n+```java\n+AzureStorageResourcePatternResolver storageResourcePatternResolver = new AzureStorageResourcePatternResolver(blobServiceClientBuilder.buildClient());\n+Resource[] resources = storageResourcePatternResolver.getResources(searchPattern);\n+Resource resource = storageResourcePatternResolver.getResource(searchLocation);\n+```\n+\n+#### Multipart upload\n+Files larger than 4 MiB will be uploaded to Azure Storage in parallel. Learn more at [Upload in parallel][storage-blob-scalable-app-upload-files].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0ab676623a38c7e458d5112b2c6b0831d6feb5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYxNDM5MA==", "bodyText": "Not found the suitable link, so remove it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526614390", "createdAt": "2020-11-19T06:05:16Z", "author": {"login": "moarychan"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Create pattern resolver object, if only one storage type resource used, please call the corresponding constructor.\n+* Pattern search, the **searchPattern** should start with `azure-blob://` or `azure-file://`. Such as `azure-blob://*/*`, it means list all blobs in all containers; `azure-blob://demo-container/**`, it means list all blobs in the demo-container container, including any sub-folder.\n+* Location search, the **searchLocation** should start with `azure-blob://` or `azure-file://`, the remaining file path should exist, otherwise an exception will be thrown.\n+\n+```java\n+AzureStorageResourcePatternResolver storageResourcePatternResolver = new AzureStorageResourcePatternResolver(blobServiceClientBuilder.buildClient());\n+Resource[] resources = storageResourcePatternResolver.getResources(searchPattern);\n+Resource resource = storageResourcePatternResolver.getResource(searchLocation);\n+```\n+\n+#### Multipart upload\n+Files larger than 4 MiB will be uploaded to Azure Storage in parallel. Learn more at [Upload in parallel][storage-blob-scalable-app-upload-files].", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMDA0OA=="}, "originalCommit": {"oid": "2c0ab676623a38c7e458d5112b2c6b0831d6feb5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTc1NDI4OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToxODo0OVrOH2NIxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToxODo0OVrOH2NIxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMDM4OA==", "bodyText": "We could remove this line, as the code will show this creation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526600388", "createdAt": "2020-11-19T05:18:49Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Create pattern resolver object, if only one storage type resource used, please call the corresponding constructor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0ab676623a38c7e458d5112b2c6b0831d6feb5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTc2MDA1OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToyMToxOFrOH2NL1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToyMToxOFrOH2NL1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMTE3NA==", "bodyText": "Please add an empty line between these code lines.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526601174", "createdAt": "2020-11-19T05:21:18Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Create pattern resolver object, if only one storage type resource used, please call the corresponding constructor.\n+* Pattern search, the **searchPattern** should start with `azure-blob://` or `azure-file://`. Such as `azure-blob://*/*`, it means list all blobs in all containers; `azure-blob://demo-container/**`, it means list all blobs in the demo-container container, including any sub-folder.\n+* Location search, the **searchLocation** should start with `azure-blob://` or `azure-file://`, the remaining file path should exist, otherwise an exception will be thrown.\n+\n+```java\n+AzureStorageResourcePatternResolver storageResourcePatternResolver = new AzureStorageResourcePatternResolver(blobServiceClientBuilder.buildClient());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0ab676623a38c7e458d5112b2c6b0831d6feb5"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjE4OTkzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoxMDo0MlrOH2RF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOToxOTowN1rOH2TnTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NTE4MQ==", "bodyText": "nit: any sources of this 4 MiB?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526665181", "createdAt": "2020-11-19T08:10:42Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Pattern search, the **searchPattern** should start with `azure-blob://` or `azure-file://`. Such as `azure-blob://*/*`, it means list all blobs in all containers; `azure-blob://demo-container/**`, it means list all blobs in the demo-container container, including any sub-folder.\n+* Location search, the **searchLocation** should start with `azure-blob://` or `azure-file://`, the remaining file path should exist, otherwise an exception will be thrown.\n+\n+```java\n+AzureStorageResourcePatternResolver storageResourcePatternResolver = new AzureStorageResourcePatternResolver(blobServiceClientBuilder.buildClient());\n+\n+Resource[] resources = storageResourcePatternResolver.getResources(searchPattern);\n+Resource resource = storageResourcePatternResolver.getResource(searchLocation);\n+```\n+\n+#### Multipart upload\n+Files larger than 4 MiB will be uploaded to Azure Storage in parallel.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe52fe40fc6a118a413b58c3f7482f408ce04050"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwNjUwOA==", "bodyText": "Keep it consistent with the official website.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17615#discussion_r526706508", "createdAt": "2020-11-19T09:19:07Z", "author": {"login": "moarychan"}, "path": "sdk/spring/azure-spring-boot-starter-storage/README.md", "diffHunk": "@@ -72,6 +72,21 @@ private final BlobServiceAsyncClient blobServiceAsyncClient = blobServiceClientB\n \n ```\n \n+#### Search for resources\n+You can use implementation class `AzureStorageResourcePatternResolver` of `ResourcePatternResolver` to search resource, it supports `blob` or `file` type.\n+* Pattern search, the **searchPattern** should start with `azure-blob://` or `azure-file://`. Such as `azure-blob://*/*`, it means list all blobs in all containers; `azure-blob://demo-container/**`, it means list all blobs in the demo-container container, including any sub-folder.\n+* Location search, the **searchLocation** should start with `azure-blob://` or `azure-file://`, the remaining file path should exist, otherwise an exception will be thrown.\n+\n+```java\n+AzureStorageResourcePatternResolver storageResourcePatternResolver = new AzureStorageResourcePatternResolver(blobServiceClientBuilder.buildClient());\n+\n+Resource[] resources = storageResourcePatternResolver.getResources(searchPattern);\n+Resource resource = storageResourcePatternResolver.getResource(searchLocation);\n+```\n+\n+#### Multipart upload\n+Files larger than 4 MiB will be uploaded to Azure Storage in parallel.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NTE4MQ=="}, "originalCommit": {"oid": "fe52fe40fc6a118a413b58c3f7482f408ce04050"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2878, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}