{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MDE2NTIx", "number": 9017, "reviewThreads": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoxNzo0MFrODnUhnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo1ODoyM1rODn6CbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3MzQwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoxNzo0MFrOF1QBDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo0NDoxM1rOF1o3gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI2Mw==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381263", "createdAt": "2020-03-12T03:17:40Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -494,7 +497,7 @@ public String getId() {\n      * @param partitionKey the partition key\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(String itemId, PartitionKey partitionKey) {\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MzUyNA==", "bodyText": "Yes, this looks good to me.\n@mbhaskar  - I noticed we have some APIs, that do not take classType in parameter, like this one. Is it okay to have type as Object for these ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763524", "createdAt": "2020-03-12T17:03:11Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -494,7 +497,7 @@ public String getId() {\n      * @param partitionKey the partition key\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(String itemId, PartitionKey partitionKey) {\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI2Mw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4ODQxNg==", "bodyText": "The item in case of deleteItem would be null. so Object should work", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391788416", "createdAt": "2020-03-12T17:44:13Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -494,7 +497,7 @@ public String getId() {\n      * @param partitionKey the partition key\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(String itemId, PartitionKey partitionKey) {\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI2Mw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3MzQ3OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoxNzo0NVrOF1QBGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzowMzoyNVrOF1nW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI3NA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381274", "createdAt": "2020-03-12T03:17:45Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -510,7 +513,7 @@ public String getId() {\n      * @param options the request options\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MzY3Mw==", "bodyText": "Same as above. Basically the same APIs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763673", "createdAt": "2020-03-12T17:03:25Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -510,7 +513,7 @@ public String getId() {\n      * @param options the request options\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI3NA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3MzkwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoxODowMFrOF1QBVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzowMzo0N1rOF1nXsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTMzNA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381334", "createdAt": "2020-03-12T03:18:00Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "diffHunk": "@@ -347,7 +347,7 @@ private CosmosItemResponse mapDeleteItemResponseAndBlock(Mono<CosmosAsyncItemRes\n      * @return the cosmos sync item response\n      * @throws CosmosClientException the cosmos client exception\n      */\n-    public CosmosItemResponse deleteItem(String itemId, PartitionKey partitionKey,\n+    public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2Mzg5MA==", "bodyText": "Same API as above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763890", "createdAt": "2020-03-12T17:03:47Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "diffHunk": "@@ -347,7 +347,7 @@ private CosmosItemResponse mapDeleteItemResponseAndBlock(Mono<CosmosAsyncItemRes\n      * @return the cosmos sync item response\n      * @throws CosmosClientException the cosmos client exception\n      */\n-    public CosmosItemResponse deleteItem(String itemId, PartitionKey partitionKey,\n+    public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTMzNA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3ODEzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GlobalAddressResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMToxM1rOF1QD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMToxM1rOF1QD1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTk3Mg==", "bodyText": "This can be the diamond operator on the right hand side", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381972", "createdAt": "2020-03-12T03:21:13Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GlobalAddressResolver.java", "diffHunk": "@@ -125,7 +126,7 @@ private EndpointCache getOrAddEndpoint(URI endpoint) {\n         });\n \n         if (this.addressCacheByEndpoint.size() > this.maxEndpoints) {\n-            List<URI> allEndpoints = new ArrayList(this.endpointManager.getWriteEndpoints());\n+            List<URI> allEndpoints = new ArrayList<URI>(this.endpointManager.getWriteEndpoints());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3ODgyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/QuorumReader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMTo0MVrOF1QENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMTo0MVrOF1QENA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjA2OA==", "bodyText": "Diamond operators", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382068", "createdAt": "2020-03-12T03:21:41Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/QuorumReader.java", "diffHunk": "@@ -320,9 +320,9 @@ public QuorumReader(\n                         (ReplicatedResourceClient.isGlobalStrongEnabled() && this.serviceConfigReader.getDefaultConsistencyLevel() == ConsistencyLevel.STRONG) &&\n                             (entity.requestContext.originalRequestConsistencyLevel == null || entity.requestContext.originalRequestConsistencyLevel == ConsistencyLevel.STRONG);\n \n-                    ValueHolder<Long> readLsn = new ValueHolder(-1);\n-                    ValueHolder<Long> globalCommittedLSN = new ValueHolder(-1);\n-                    ValueHolder<StoreResult> storeResult = new ValueHolder(null);\n+                    ValueHolder<Long> readLsn = new ValueHolder<Long>(-1L);\n+                    ValueHolder<Long> globalCommittedLSN = new ValueHolder<Long>(-1L);\n+                    ValueHolder<StoreResult> storeResult = new ValueHolder<StoreResult>(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU3OTgyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMjoyOVrOF1QEyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTo0OToyMVrOF1s2gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjIxOQ==", "bodyText": "Diamond operator", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382219", "createdAt": "2020-03-12T03:22:29Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -385,8 +385,10 @@ private ReadReplicaResult createReadReplicaResult(List<StoreResult> responseResu\n                                     // TODO: enforceSessionCheck is true, replace with true\n                                     boolean enforceSessionCheck = true;\n \n-                                    MutableVolatile<Boolean> hasGoneException = new MutableVolatile(false);\n-                                    MutableVolatile<ReadReplicaResult> shortCircuitResult = new MutableVolatile();\n+                                    MutableVolatile<Boolean> hasGoneException\n+                                        = new MutableVolatile<Boolean>(false);\n+                                    MutableVolatile<ReadReplicaResult> shortCircuitResult\n+                                        = new MutableVolatile<ReadReplicaResult>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg1MzY5Ng==", "bodyText": "replaced with Diamond operator (including the places you pointed in previous comments).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391853696", "createdAt": "2020-03-12T19:49:21Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -385,8 +385,10 @@ private ReadReplicaResult createReadReplicaResult(List<StoreResult> responseResu\n                                     // TODO: enforceSessionCheck is true, replace with true\n                                     boolean enforceSessionCheck = true;\n \n-                                    MutableVolatile<Boolean> hasGoneException = new MutableVolatile(false);\n-                                    MutableVolatile<ReadReplicaResult> shortCircuitResult = new MutableVolatile();\n+                                    MutableVolatile<Boolean> hasGoneException\n+                                        = new MutableVolatile<Boolean>(false);\n+                                    MutableVolatile<ReadReplicaResult> shortCircuitResult\n+                                        = new MutableVolatile<ReadReplicaResult>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjIxOQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU4MDkwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMzozNlrOF1QFhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowMDoxNVrOF2LeMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw==", "bodyText": "Don't introduce more guava dependencies! :-) Use the standard Java APIs for hashcode", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382407", "createdAt": "2020-03-12T03:23:36Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzMzM2NA==", "bodyText": ":) removed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391533364", "createdAt": "2020-03-12T10:39:45Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDE1Mg==", "bodyText": "Is it possible to suppress this warning and create a work item for this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391890152", "createdAt": "2020-03-12T20:58:24Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAwMjkzNg==", "bodyText": "Ok, now uses the default hashCode from the base class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392002936", "createdAt": "2020-03-13T02:50:17Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NTM3Ng==", "bodyText": "and I see there is an issue link to complete the implementation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392355376", "createdAt": "2020-03-13T17:00:15Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU4MTQzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMzo1MlrOF1QF0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyMTozN1rOF1oBeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ4MQ==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382481", "createdAt": "2020-03-12T03:23:52Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -15,9 +15,9 @@\n  */\n public class CosmosResponse<T extends Resource> {\n     private T properties;\n-    protected final ResourceResponse resourceResponseWrapper;\n+    protected final ResourceResponse<?> resourceResponseWrapper;\n \n-    protected CosmosResponse(ResourceResponse resourceResponse) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NDU4NQ==", "bodyText": "This looks good to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391774585", "createdAt": "2020-03-12T17:21:37Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -15,9 +15,9 @@\n  */\n public class CosmosResponse<T extends Resource> {\n     private T properties;\n-    protected final ResourceResponse resourceResponseWrapper;\n+    protected final ResourceResponse<?> resourceResponseWrapper;\n \n-    protected CosmosResponse(ResourceResponse resourceResponse) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ4MQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTU4MTU0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMzo1NlrOF1QF3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyMTo0MlrOF1oBug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ5NA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382494", "createdAt": "2020-03-12T03:23:56Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -26,7 +26,7 @@ protected CosmosResponse(T properties) {\n         this.resourceResponseWrapper = null;\n     }\n \n-    protected CosmosResponse(ResourceResponse resourceResponse, T properties) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse, T properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NDY1MA==", "bodyText": "This looks good to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391774650", "createdAt": "2020-03-12T17:21:42Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -26,7 +26,7 @@ protected CosmosResponse(T properties) {\n         this.resourceResponseWrapper = null;\n     }\n \n-    protected CosmosResponse(ResourceResponse resourceResponse, T properties) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse, T properties) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ5NA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTY4NjM2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo0NDoxNlrOF1REzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjo1Nzo0OVrOF1nJKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5ODYwNg==", "bodyText": "I think this should have T and Class<T> instead of Object", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391398606", "createdAt": "2020-03-12T04:44:16Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -72,8 +72,8 @@ public static CosmosAsyncDatabaseResponse createCosmosAsyncDatabaseResponse(Reso\n         return new CosmosAsyncItemResponse<>(response, classType);\n     }\n \n-    public static CosmosAsyncItemResponse createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response, Class classType) {\n-        return new CosmosAsyncItemResponse(response, classType);\n+    public static CosmosAsyncItemResponse<Object> createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response) {\n+        return new CosmosAsyncItemResponse<>(response, Object.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MDc0NA==", "bodyText": "@moderakh - the method createCosmosAsyncItemResponseWithObjectType is called from only one place with second parameter as Object.class. here. Hence I thought of simplifying it since the method name itself convey that its Object Type. Do you see any issues?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391470744", "createdAt": "2020-03-12T08:43:15Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -72,8 +72,8 @@ public static CosmosAsyncDatabaseResponse createCosmosAsyncDatabaseResponse(Reso\n         return new CosmosAsyncItemResponse<>(response, classType);\n     }\n \n-    public static CosmosAsyncItemResponse createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response, Class classType) {\n-        return new CosmosAsyncItemResponse(response, classType);\n+    public static CosmosAsyncItemResponse<Object> createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response) {\n+        return new CosmosAsyncItemResponse<>(response, Object.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5ODYwNg=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MDE2OQ==", "bodyText": "@moderakh  - yes this particular API is specifically for Object type -> as this is being called by deleteItem(String id) -> which doesn't take any class type information. So this is for generic object type.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391760169", "createdAt": "2020-03-12T16:57:49Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -72,8 +72,8 @@ public static CosmosAsyncDatabaseResponse createCosmosAsyncDatabaseResponse(Reso\n         return new CosmosAsyncItemResponse<>(response, classType);\n     }\n \n-    public static CosmosAsyncItemResponse createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response, Class classType) {\n-        return new CosmosAsyncItemResponse(response, classType);\n+    public static CosmosAsyncItemResponse<Object> createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response) {\n+        return new CosmosAsyncItemResponse<>(response, Object.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5ODYwNg=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTY4OTE3OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo0NjowNVrOF1RGbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODozNToyM1rOF1qlyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5OTAyMQ==", "bodyText": "@kushagraThapar  I thought we changed this to getItem(). No?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391399021", "createdAt": "2020-03-12T04:46:05Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "diffHunk": "@@ -26,9 +26,8 @@\n      *\n      * @return the resource\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public T getResource() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MTQ2NQ==", "bodyText": "Yes, I thought so too, just checked, we only changed it inCosmosAsyncItemResponse and not this one. We should change it too..\n@anuchandy  -> Can you please rename this API to getItem() - the same way we have it in CosmosAsyncItemResponse", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391761465", "createdAt": "2020-03-12T16:59:47Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "diffHunk": "@@ -26,9 +26,8 @@\n      *\n      * @return the resource\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public T getResource() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5OTAyMQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NTQ5Mg==", "bodyText": "This is changed to getItem() in Async but not in Sync, and should be changed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391775492", "createdAt": "2020-03-12T17:23:08Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "diffHunk": "@@ -26,9 +26,8 @@\n      *\n      * @return the resource\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public T getResource() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5OTAyMQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgxNjY1MQ==", "bodyText": "@kushagraThapar sure, renamed to getItem", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391816651", "createdAt": "2020-03-12T18:35:23Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "diffHunk": "@@ -26,9 +26,8 @@\n      *\n      * @return the resource\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public T getResource() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5OTAyMQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzk2ODY4OnYy", "diffSide": "LEFT", "path": "sdk/cosmos/azure-cosmos/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzowMjowOFrOF1nT1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1Njo1OFrOF1pUaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MjkwMw==", "bodyText": "Do we need to get rid of the whole plugin ?\nWhy can't we just flip the failOnWarning flag to true.\nIn my understanding, by this plugin -> we decide on the java compiler version used for our SDK.\nIn my opinion, we should keep this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391762903", "createdAt": "2020-03-12T17:02:08Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/pom.xml", "diffHunk": "@@ -280,18 +280,6 @@ Licensed under the MIT License.\n         </configuration>\n       </plugin>\n \n-      <!--  CosmosSkip - Needed temporary to not fail on warning on compilation -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4OTcxNQ==", "bodyText": "@kushagraThapar - we removed it to inherit the compiler plugin and related settings from the parent pom file. I'm not sure any of the advantages we get by having it in locally, @JonathanGiles thoughts?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391789715", "createdAt": "2020-03-12T17:46:21Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/pom.xml", "diffHunk": "@@ -280,18 +280,6 @@ Licensed under the MIT License.\n         </configuration>\n       </plugin>\n \n-      <!--  CosmosSkip - Needed temporary to not fail on warning on compilation -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MjkwMw=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NTgxNw==", "bodyText": "I see, yeah inheriting should be totally fine, didn't realize the parent pom's plugin. I am good with this change.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391795817", "createdAt": "2020-03-12T17:56:58Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/pom.xml", "diffHunk": "@@ -280,18 +280,6 @@ Licensed under the MIT License.\n         </configuration>\n       </plugin>\n \n-      <!--  CosmosSkip - Needed temporary to not fail on warning on compilation -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MjkwMw=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzk5MDY3OnYy", "diffSide": "LEFT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ResourceId.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzowODoxNVrOF1niJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1OTo1MlrOF1pbEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2NjU2NA==", "bodyText": "I am really wondering, why do we need to change the implementation package classes ?\n@anuchandy @JonathanGiles  - This will really affect the scope of this PR, as any change in implementation package needs a lot of extra testing and perf runs. It is very difficult to figure our and solve bugs in implementation package.\nWhy can't we skip this warnings from implementation package ?\n@moderakh - your thoughts ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391766564", "createdAt": "2020-03-12T17:08:15Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ResourceId.java", "diffHunk": "@@ -180,21 +180,21 @@ public static ResourceId newAttachmentId(String documentId, int attachmentId) {\n                         ResourceId.blockCopy(buffer, 8, subCollRes, 0, 8);\n \n                         long subCollectionResource = ByteBuffer.wrap(buffer, 8, 8).getLong();\n-                        if ((subCollRes[7] >> 4) == (byte) CollectionChildResourceType.Document) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NzUyMA==", "bodyText": "+1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391797520", "createdAt": "2020-03-12T17:59:52Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ResourceId.java", "diffHunk": "@@ -180,21 +180,21 @@ public static ResourceId newAttachmentId(String documentId, int attachmentId) {\n                         ResourceId.blockCopy(buffer, 8, subCollRes, 0, 8);\n \n                         long subCollectionResource = ByteBuffer.wrap(buffer, 8, 8).getLong();\n-                        if ((subCollRes[7] >> 4) == (byte) CollectionChildResourceType.Document) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2NjU2NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODAwMDIzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoxMDo0NFrOF1noDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzoxOToyOVrOF1zBkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2ODA3OA==", "bodyText": "I am not sure about this one.\n@milismsft  - can you please look at this break statement introduction change ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391768078", "createdAt": "2020-03-12T17:10:44Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);\n                     StatusCodeErrorType docDbError = ExceptionClassifier.classifyClientException(clientException);\n \n+                    // Note: @kushagraThapar and @moderakh to ensure fallthrough is not expected and break is good", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk1NDgzNA==", "bodyText": "Looks good.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391954834", "createdAt": "2020-03-12T23:19:29Z", "author": {"login": "milismsft"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);\n                     StatusCodeErrorType docDbError = ExceptionClassifier.classifyClientException(clientException);\n \n+                    // Note: @kushagraThapar and @moderakh to ensure fallthrough is not expected and break is good", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2ODA3OA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODAxNzc4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoxNToyMlrOF1nzDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo1NjoyOVrOF2LWOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA==", "bodyText": "@David-Noble-at-work can you please look through some of these rntbd changes ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391770894", "createdAt": "2020-03-12T17:15:22Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDg0OQ==", "bodyText": "Adding one note: Netty first checks whether this encoder can handle an object by passing the object to acceptOutboundMessage if it returns true then Netty calls encode with that object. i.e. encode is called only if the object is of RntbdContextRequest.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391800849", "createdAt": "2020-03-12T18:05:53Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MTg3NA==", "bodyText": "Yes, what you say is true and--on my working branch--I've implemented acceptOutboundMessage like this:\n    /**\n     * Returns {@code true} if the given message is an {@link RntbdContextRequest} message.\n     * <p>\n     * If {@code false} this message should be passed to the next {@link ChannelOutboundHandler} in the pipeline.\n     *\n     * @param message the message to encode.\n     * @return {@code true}, if the given message is an an @{link RntbdContextRequest} instance; otherwise {@code false}.\n     */\n    @Override\n    public boolean acceptOutboundMessage(final Object message) {\n        return message.getClass() == RntbdContextRequest.class;\n    }", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392351874", "createdAt": "2020-03-13T16:54:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MzMzOQ==", "bodyText": "Please resolve this whenever you're ready.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392353339", "createdAt": "2020-03-13T16:56:29Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODAxODU2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoxNTozNVrOF1nzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoxNTozNVrOF1nzlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MTAyOA==", "bodyText": "@David-Noble-at-work", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391771028", "createdAt": "2020-03-12T17:15:35Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -37,9 +37,9 @@ public boolean acceptOutboundMessage(final Object message) {\n      * @throws IllegalStateException is thrown if an error occurs\n      */\n     @Override\n-    protected void encode(final ChannelHandlerContext context, final Object message, final ByteBuf out) throws IllegalStateException {\n+    protected void encode(final ChannelHandlerContext context, final RntbdContextRequest message, final ByteBuf out) throws IllegalStateException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODA1Mjg0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyNDo1MlrOF1oJJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyNDo1MlrOF1oJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NjU1MQ==", "bodyText": "Yes, I think fallthrough is intentional here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391776551", "createdAt": "2020-03-12T17:24:52Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "diffHunk": "@@ -866,6 +868,8 @@ private static ConsistencyLevel parseConsistency(String consistency) {\n         }\n     }\n \n+    @SuppressWarnings(\"fallthrough\")\n+    // Note: @kushagraThapar @moderakh to evaluate whether fallthrough intentional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODA1MzM1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyNTowMVrOF1oJgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyNTowMVrOF1oJgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NjY0MA==", "bodyText": "Yes, I think fallthrough is intentional here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391776640", "createdAt": "2020-03-12T17:25:01Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "diffHunk": "@@ -255,6 +255,8 @@ protected static void truncateCollection(DocumentCollection collection) {\n         logger.info(\"Finished truncating collection {}.\", collection.getId());\n     }\n \n+    @SuppressWarnings(\"fallthrough\")\n+    // Note: @kushagraThapar @moderakh to evaluate whether fallthrough intentional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODY3MTU0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/NotFoundException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyNDo0OFrOF1uKCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyNDo0OFrOF1uKCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NTA4Mw==", "bodyText": "Why cant we just cast to (Map<String, String>)  keep the null as it is instead of creating an object", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391875083", "createdAt": "2020-03-12T20:24:48Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/NotFoundException.java", "diffHunk": "@@ -79,7 +80,7 @@ public NotFoundException(String message, HttpHeaders headers, URI requestUri) {\n     }\n \n     NotFoundException(Exception innerException) {\n-        this(RMResources.NotFound, innerException, (Map) null, null);\n+        this(RMResources.NotFound, innerException, new HashMap<>(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc3NzE0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMzoxOVrOF1vNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMzoxOVrOF1vNcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MjMzOQ==", "bodyText": "Is it possible to suppress this warning and create a work item for this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391892339", "createdAt": "2020-03-12T21:03:19Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,12 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(this.version, this.globalLsn, this.localLsnByRegion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYwMDU1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMzo0MDoyM1rOF12xWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyODo0MFrOF2KTqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNjIxOQ==", "bodyText": "Curious: I do not see that this override is required. I sometimes include overrides for debugging purposes. Is that what this one is for or am I missing something?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392016219", "createdAt": "2020-03-13T03:40:23Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,15 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4Mzk0OQ==", "bodyText": "It is flagged by the compiler indicating that while this type has a specialized implementation for equals() but hashCode is missing.\nReference: \"if you are overriding equals method, you should override the hash code method too\" -> https://java2blog.com/hashcode-and-equals-method-in-java/", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392083949", "createdAt": "2020-03-13T08:17:58Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,15 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNjIxOQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNjI5Ng==", "bodyText": "I see that an issue has been logged to implement what I would expect to see: an implementation different than super.hashCode.\nQuestion: Have we switched from TODO () to \"Note: @\" as a marker for work to be done?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392336296", "createdAt": "2020-03-13T16:28:40Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,15 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNjIxOQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYxMzM3OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMzo1MTowNFrOF1240w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjozMDoxNVrOF2KXPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODEzMQ==", "bodyText": "Some additional context on the changes to this file would be helpful. I see a switch with breaks added and a note to verify that the fall-through was unintentional. I know that checkstyle and stopbugs complain about fall-throughs within switches and also about braces around case statements.\nWas the fall-through unintentional?\nIf that's the case is the note still needed?\nTo satisfy checkstyle should we not remove the braces around the case statements?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392018131", "createdAt": "2020-03-13T03:51:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA3ODc3Nw==", "bodyText": "yes, Millis confirmed that fall-through was unintentional, so the addition of break is correct. I will remove the note.\nKushagra did the check-style scan and fixes last week, I don't see braces as reported in check style.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392078777", "createdAt": "2020-03-13T08:04:06Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODEzMQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNzIxNQ==", "bodyText": "Thank you. Please resolve this after the change is in.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392337215", "createdAt": "2020-03-13T16:30:15Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODEzMQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYyMzg0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMzo1OTo0MlrOF12_IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0MTowNFrOF2Kwiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTc0NQ==", "bodyText": "This looks like exactly the set of changes I made on my batch api working branch and so I'm pleased to see them here. I'll do a more thorough comparison of your changes vs mine in a few minutes. Stay tuned...", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392019745", "createdAt": "2020-03-13T03:59:42Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA3OTA0NA==", "bodyText": "cool, sure please compare and share the findings.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392079044", "createdAt": "2020-03-13T08:04:53Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTc0NQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MzY5MQ==", "bodyText": "This is good to go. On my branch I eliminated this local variable declaration and that's not an elimination that I'll ask you to make:\nfinal RntbdContextRequest request = message;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392343691", "createdAt": "2020-03-13T16:41:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTc0NQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYyNTA1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDowMDo1MFrOF12_6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjozNjo0MlrOF2KmVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA==", "bodyText": "Same as above. I want to compare what's in my branch to what's in this PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392019944", "createdAt": "2020-03-13T04:00:50Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDI1Ng==", "bodyText": "Also: do we need the \"rawtypes\" suppression after adding the template types?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020256", "createdAt": "2020-03-13T04:02:28Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4NDcyMQ==", "bodyText": "right, they're not required anymore, removing them.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392084721", "createdAt": "2020-03-13T08:20:10Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MTA3OQ==", "bodyText": "thank you. Please resolve when the change is in.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392341079", "createdAt": "2020-03-13T16:36:42Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYyNzQ0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDowMjo1N1rOF13BcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDowMjo1N1rOF13BcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDMzNw==", "bodyText": "Same as above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020337", "createdAt": "2020-03-13T04:02:57Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdResponse.java", "diffHunk": "@@ -34,7 +34,8 @@\n \n     // region Fields\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTYzMDA1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDowNDo1N1rOF13C-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoxOTo1NFrOF2J_3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDcyOQ==", "bodyText": "Are we tracking issues? Should there not be a reference to an issue when it comes to things like this that--I presume--might need to be done before GA?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020729", "createdAt": "2020-03-13T04:04:57Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +170,21 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA4MjMyMw==", "bodyText": "yes, its reference in the comment. #9046", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392082323", "createdAt": "2020-03-13T08:13:40Z", "author": {"login": "anuchandy"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +170,21 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDcyOQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzMTIzMA==", "bodyText": "thanks for the issue reference", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392331230", "createdAt": "2020-03-13T16:19:54Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +170,21 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDcyOQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTcxOTQ4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo1ODoyM1rOF2LaNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo1ODoyM1rOF2LaNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NDM1OA==", "bodyText": "Nit: an extra few spaces before AtomicIntegerFieldUpdater", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392354358", "createdAt": "2020-03-13T16:58:23Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,10 +35,10 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);\n \n-    private static final AtomicIntegerFieldUpdater REQUEST_LENGTH =\n-        AtomicIntegerFieldUpdater.newUpdater(RntbdRequestRecord.class, \"requestLength\");\n+    private static final AtomicIntegerFieldUpdater<RntbdRequestRecord> REQUEST_LENGTH =\n+            AtomicIntegerFieldUpdater.newUpdater(RntbdRequestRecord.class, \"requestLength\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ae743ddd3cce6fc4a17b305df810e8621bf02c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 176, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}