{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTc0MzM0", "number": 12374, "title": "Sb track2 some live test failure fixes 1", "bodyText": "Separate subscriber /topic for test , like we have for queues\n- To not pollute other test", "createdAt": "2020-06-21T17:21:33Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374", "merged": true, "mergeCommit": {"oid": "78d2941b485de525e1e5093f22d68eaa01c41c3c"}, "closed": true, "closedAt": "2020-06-27T16:54:27Z", "author": {"login": "hemanttanwar"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfYxlegH2gAyNDM3NTc0MzM0OjVjM2NmOTg4YWMxYzY1Y2IxYzRkMTRlNjEwNWQxZDA1ZmNjNDc2NDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvLI2sgFqTQzODYzMTkwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c3cf988ac1c65cb1c4d14e6105d1d05fcc47648", "author": {"user": {"login": "azure-sdk", "name": "Azure SDK Bot"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c3cf988ac1c65cb1c4d14e6105d1d05fcc47648", "committedDate": "2020-05-08T21:29:37Z", "message": "Increment package version after release of com.azure azure-messaging-servicebus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39b9a1a6d1bfd9adf54c91fea1a90144cb02f288", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/39b9a1a6d1bfd9adf54c91fea1a90144cb02f288", "committedDate": "2020-05-12T19:40:58Z", "message": "resolve merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9cc7d2d82c36e62ea253071a1ec5ae29b4f1848", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9cc7d2d82c36e62ea253071a1ec5ae29b4f1848", "committedDate": "2020-05-12T19:50:47Z", "message": "Merge branch 'azure-sdk-increment-package-version-servicebus-386162'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a4b16fd9cc42f7dbc5d746e81ffc8de94e55b6b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a4b16fd9cc42f7dbc5d746e81ffc8de94e55b6b", "committedDate": "2020-05-13T00:26:33Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b67ac9b65651a41709584818e2c3417b6aed44ca", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b67ac9b65651a41709584818e2c3417b6aed44ca", "committedDate": "2020-05-13T04:02:38Z", "message": "Merge branch 'master' of github.com:hemanttanwar/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510e76c7ffb58e006a09779558d7b01246f054a9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/510e76c7ffb58e006a09779558d7b01246f054a9", "committedDate": "2020-05-20T05:17:51Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "663dac49d053f1cb7e6d0bb7664a551b68dab004", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/663dac49d053f1cb7e6d0bb7664a551b68dab004", "committedDate": "2020-06-05T21:43:35Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2962fabdb5ada06fba88a10c18091f9721eeb302", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2962fabdb5ada06fba88a10c18091f9721eeb302", "committedDate": "2020-06-08T04:37:42Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d418224ef3addb68105e241776d19e70aca32bd0", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d418224ef3addb68105e241776d19e70aca32bd0", "committedDate": "2020-06-09T03:45:55Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9dc359ca5e3ba7b40fe71ab0fa2c33d0e5e91b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6a9dc359ca5e3ba7b40fe71ab0fa2c33d0e5e91b", "committedDate": "2020-06-09T21:00:31Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d0d88de524992f7e211400d2b8724691310817", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0d0d88de524992f7e211400d2b8724691310817", "committedDate": "2020-06-10T04:36:54Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80bcfd7bb9cd94cb966e71532fb1b8c39831db32", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80bcfd7bb9cd94cb966e71532fb1b8c39831db32", "committedDate": "2020-06-11T16:59:10Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "136c66a13eacd2e49be05cef94879048c57115c9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/136c66a13eacd2e49be05cef94879048c57115c9", "committedDate": "2020-06-17T00:33:06Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8488ac12c07af9e1bab02403aa35b0de90456b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed8488ac12c07af9e1bab02403aa35b0de90456b", "committedDate": "2020-06-18T00:32:39Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b39760a86078c74e1f07f309a27c0104d1fad7", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b7b39760a86078c74e1f07f309a27c0104d1fad7", "committedDate": "2020-06-20T21:59:15Z", "message": "Keep topics separately to pollute other test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34259f72e7fe2394122815db6e7258e3ee166c30", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/34259f72e7fe2394122815db6e7258e3ee166c30", "committedDate": "2020-06-21T20:40:01Z", "message": "Changing test to use new topic name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f0db6366aef53640c98022aa413451b220db88b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0f0db6366aef53640c98022aa413451b220db88b", "committedDate": "2020-06-22T22:32:38Z", "message": "Creating filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158179d90343acd7d6bb2b081af5dd0487268d73", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/158179d90343acd7d6bb2b081af5dd0487268d73", "committedDate": "2020-06-24T08:18:30Z", "message": "doing message cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "874767a0ec4e8dbc72dce623ef701c96ff74c743", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/874767a0ec4e8dbc72dce623ef701c96ff74c743", "committedDate": "2020-06-24T08:19:24Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e646baced168c351f81f3be8dc24d05265124c7a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e646baced168c351f81f3be8dc24d05265124c7a", "committedDate": "2020-06-24T08:20:28Z", "message": "Merge branch 'master' into sb-track2-some-livetest-failure-fixes-1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a85b7098cc77f5407e383c38049e3e21a0ac1ac5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a85b7098cc77f5407e383c38049e3e21a0ac1ac5", "committedDate": "2020-06-24T19:39:16Z", "message": "improving live test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8551d10ee43c4835af662b79618016c93325f2f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8551d10ee43c4835af662b79618016c93325f2f", "committedDate": "2020-06-24T19:39:52Z", "message": "improving live test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa3ca95af352cb1196120475c69f59001479c7c1", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa3ca95af352cb1196120475c69f59001479c7c1", "committedDate": "2020-06-24T21:47:20Z", "message": "Closing receiver in sender test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b77c5e634648da659a780279296ddc7f873ec6ab", "committedDate": "2020-06-25T19:03:07Z", "message": "Fix timeout in receive for single non rollover session in UnnamedSessionManager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3Nzg0MTAy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-437784102", "createdAt": "2020-06-25T19:11:59Z", "commit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxMTo1OVrOGpIT9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOToxNTowNVrOGpIaiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MDk4MA==", "bodyText": "Why not just an ArrayList? rather than an AtomicReference wrapping a list.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r445780980", "createdAt": "2020-06-25T19:11:59Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -46,6 +46,7 @@\n class ServiceBusReceiverAsyncClientIntegrationTest extends IntegrationTestBase {\n     private final ClientLogger logger = new ClientLogger(ServiceBusReceiverAsyncClientIntegrationTest.class);\n     private final AtomicInteger messagesPending = new AtomicInteger();\n+    private final AtomicReference<List<Long>> messagesDeferredPending = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MTE2MA==", "bodyText": "Clean up these messageIds.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r445781160", "createdAt": "2020-06-25T19:12:17Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -117,7 +133,7 @@ void createTransactionAndRollbackMessagesTest(MessagingEntityType entityType) {\n         // Arrange\n         setSenderAndReceiver(entityType, 0, isSessionEnabled);\n \n-        final String messageId = UUID.randomUUID().toString();\n+        final String messageId = \"createTransactionAndRollbackMessagesTest\";UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MTU3NA==", "bodyText": "Doesn't this overlap with your pendingDeferredMessages member variable at the top?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r445781574", "createdAt": "2020-06-25T19:12:58Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -988,4 +1023,12 @@ private int completeMessages(ServiceBusReceiverAsyncClient client, List<String>\n \n         return lockTokens.size();\n     }\n+\n+    private void completeDeferredMessages(ServiceBusReceiverAsyncClient client, ServiceBusReceivedMessage receivedMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 358}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MjExNw==", "bodyText": "This method is only used once. Why don't we roll in the functionality.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r445782117", "createdAt": "2020-06-25T19:13:56Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/UnnamedSessionManagerIntegrationTest.java", "diffHunk": "@@ -92,10 +95,11 @@ void singleUnnamedSession(MessagingEntityType entityType) {\n                 .assertNext(context -> assertMessageEquals(sessionId, messageId, contents, context))\n                 .assertNext(context -> assertMessageEquals(sessionId, messageId, contents, context))\n                 .assertNext(context -> assertMessageEquals(sessionId, messageId, contents, context))\n-                .expectComplete()\n+                .thenCancel()\n                 .verify(Duration.ofMinutes(2));\n         } finally {\n             subscription.dispose();\n+            completeMessages(receiver, lockTokens, sessionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MjY2NQ==", "bodyText": "Do we need the copyIndex() if we are just going to create one subscription and session subscription for each.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r445782665", "createdAt": "2020-06-25T19:15:05Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/test-resources.json", "diffHunk": "@@ -141,9 +145,9 @@\n     {\n       \"type\": \"Microsoft.ServiceBus/namespaces/topics/subscriptions\",\n       \"apiVersion\": \"2017-04-01\",\n-      \"name\": \"[concat(variables('namespaceName'), '/', variables('topicName'), '/', variables('subscriptionName'), '-', copyIndex())]\",\n+      \"name\": \"[concat(variables('namespaceName'), '/', variables('topicName'), '-', copyIndex(), '/', variables('subscriptionName'), '-0')]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5de77b0144abb823d18b8fa5d8d5c6d5b32eac4b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5de77b0144abb823d18b8fa5d8d5c6d5b32eac4b", "committedDate": "2020-06-25T21:19:06Z", "message": "More debug for using credential test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8f822951b61bf6c8e2502fb2d7faa46d0c1b93", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6b8f822951b61bf6c8e2502fb2d7faa46d0c1b93", "committedDate": "2020-06-25T22:04:10Z", "message": "More debug for using credential test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1fd71f1928ebd6be2e3433f9ee74667ee43dfab", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1fd71f1928ebd6be2e3433f9ee74667ee43dfab", "committedDate": "2020-06-26T00:12:09Z", "message": "More debug for using credential test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "012a41c208bf45bef8a1db640e00d998b6cf32d9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/012a41c208bf45bef8a1db640e00d998b6cf32d9", "committedDate": "2020-06-26T07:15:43Z", "message": "Assigned role for send and listen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5023600468e9f4233aff08237c44443263239f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad5023600468e9f4233aff08237c44443263239f", "committedDate": "2020-06-26T18:25:55Z", "message": "more session related message clean up in integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTM1NzY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438535764", "createdAt": "2020-06-26T19:13:47Z", "commit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOToxMzo0N1rOGpr6aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOToxODo0NFrOGpsDJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NDI2NQ==", "bodyText": "do we need the index parameter?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446364265", "createdAt": "2020-06-26T19:13:47Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -159,7 +154,7 @@ public String getTopicName() {\n      * @return Name of the first subscription.\n      */\n     public String getSubscriptionName(int index) {\n-        return getEntityName(getSubscriptionBaseName(), index);\n+        return getEntityName(getSubscriptionBaseName(), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NDM0Nw==", "bodyText": "Same with this. the index parameter is not used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446364347", "createdAt": "2020-06-26T19:14:00Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -168,7 +163,7 @@ public String getSubscriptionName(int index) {\n      * @return Name of the first session-enabled subscription.\n      */\n     public String getSessionSubscriptionName(int index) {\n-        return getEntityName(getSessionSubscriptionBaseName(), index);\n+        return getEntityName(getSessionSubscriptionBaseName(), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NDU0Nw==", "bodyText": "Add back the documentation?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446364547", "createdAt": "2020-06-26T19:14:26Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -144,13 +144,8 @@ public String getSessionQueueName(int index) {\n         return getEntityName(getSessionQueueBaseName(), index);\n     }\n \n-    /**\n-     * Gets the name of the topic.\n-     *\n-     * @return Name of the topic.\n-     */\n-    public String getTopicName() {\n-        return TestUtils.getTopicName();\n+    public String getTopicName(int index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTAxNA==", "bodyText": "This is already fetched if you look at line 233.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446365014", "createdAt": "2020-06-26T19:15:27Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -233,12 +228,40 @@ protected ServiceBusClientBuilder getBuilder(boolean useCredentials) {\n             .transportType(AmqpTransportType.AMQP)\n             .scheduler(scheduler);\n \n+        logger.info(\"Getting Builder using credentials : [{}] \", useCredentials);\n         if (useCredentials) {\n             final String fullyQualifiedDomainName = getFullyQualifiedDomainName();\n \n             assumeTrue(fullyQualifiedDomainName != null && !fullyQualifiedDomainName.isEmpty(),\n                 \"AZURE_SERVICEBUS_FULLY_QUALIFIED_DOMAIN_NAME variable needs to be set when using credentials.\");\n+            String clientId = System.getenv(\"AZURE_CLIENT_ID\");\n+            String domainName = System.getenv(\"AZURE_SERVICEBUS_FULLY_QUALIFIED_DOMAIN_NAME\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTI0Mw==", "bodyText": "this is duplicated in subsequent lines 266.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446365243", "createdAt": "2020-06-26T19:16:01Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -233,12 +228,40 @@ protected ServiceBusClientBuilder getBuilder(boolean useCredentials) {\n             .transportType(AmqpTransportType.AMQP)\n             .scheduler(scheduler);\n \n+        logger.info(\"Getting Builder using credentials : [{}] \", useCredentials);\n         if (useCredentials) {\n             final String fullyQualifiedDomainName = getFullyQualifiedDomainName();\n \n             assumeTrue(fullyQualifiedDomainName != null && !fullyQualifiedDomainName.isEmpty(),\n                 \"AZURE_SERVICEBUS_FULLY_QUALIFIED_DOMAIN_NAME variable needs to be set when using credentials.\");\n+            String clientId = System.getenv(\"AZURE_CLIENT_ID\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTM3MQ==", "bodyText": "logging an error is not enough. the test should just fail with an assertNotNull", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446365371", "createdAt": "2020-06-26T19:16:17Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -233,12 +228,40 @@ protected ServiceBusClientBuilder getBuilder(boolean useCredentials) {\n             .transportType(AmqpTransportType.AMQP)\n             .scheduler(scheduler);\n \n+        logger.info(\"Getting Builder using credentials : [{}] \", useCredentials);\n         if (useCredentials) {\n             final String fullyQualifiedDomainName = getFullyQualifiedDomainName();\n \n             assumeTrue(fullyQualifiedDomainName != null && !fullyQualifiedDomainName.isEmpty(),\n                 \"AZURE_SERVICEBUS_FULLY_QUALIFIED_DOMAIN_NAME variable needs to be set when using credentials.\");\n+            String clientId = System.getenv(\"AZURE_CLIENT_ID\");\n+            String domainName = System.getenv(\"AZURE_SERVICEBUS_FULLY_QUALIFIED_DOMAIN_NAME\");\n+            String clientSecret = System.getenv(\"AZURE_CLIENT_SECRET\");\n+            String tenantId = System.getenv(\"AZURE_TENANT_ID\");\n+\n+            if (domainName != null ) {\n+                logger.info(\"Getting Builder using credentials with domainName.length : [{}] \", domainName.length());\n+            } else {\n+                logger.error(\"Getting Builder using credentials domainName is null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTY4MQ==", "bodyText": "Still unsure of why we are using an AtomicReference? Tests are run sequentially. Even then, why not a ConcurrentSet.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446365681", "createdAt": "2020-06-26T19:16:58Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -46,6 +46,7 @@\n class ServiceBusReceiverAsyncClientIntegrationTest extends IntegrationTestBase {\n     private final ClientLogger logger = new ClientLogger(ServiceBusReceiverAsyncClientIntegrationTest.class);\n     private final AtomicInteger messagesPending = new AtomicInteger();\n+    private final AtomicReference<List<Long>> messagesDeferredPending = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc4MDk4MA=="}, "originalCommit": {"oid": "b77c5e634648da659a780279296ddc7f873ec6ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NTk1NQ==", "bodyText": "format document. there should be a space.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446365955", "createdAt": "2020-06-26T19:17:32Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -63,26 +64,41 @@\n     @Override\n     protected void beforeTest() {\n         sessionId = UUID.randomUUID().toString();\n+        messagesDeferredPending.set(new ArrayList<>());\n     }\n \n     @Override\n     protected void afterTest() {\n         sharedBuilder =  null;\n         final int pending = messagesPending.get();\n-        if (pending < 1) {\n+        final int pendingDeferred = messagesDeferredPending.get().size();\n+        if (pending < 1 && pendingDeferred < 1) {\n             dispose(receiver, sender, receiveAndDeleteReceiver);\n             return;\n         }\n \n         // In the case that this test failed... we're going to drain the queue or subscription.\n         try {\n-            receiveAndDeleteReceiver.receive()\n-                .map(message -> {\n-                    logger.info(\"Message received: {}\", message.getMessage().getSequenceNumber());\n-                    return message;\n-                })\n-                .timeout(Duration.ofSeconds(15), Mono.empty())\n-                .blockLast();\n+            if (pending > 0) {\n+                receiveAndDeleteReceiver.receive()\n+                    .map(message -> {\n+                        logger.info(\"Message received: {}\", message.getMessage().getSequenceNumber());\n+                        return message;\n+                    })\n+                    .timeout(Duration.ofSeconds(15), Mono.empty())\n+                    .blockLast();\n+            }\n+            if (pendingDeferred > 0) {\n+                for(Long sequenceNumber: messagesDeferredPending.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NjM2OA==", "bodyText": "There should be a try-catch finally around each block. Even if the pending > 0 portion throws an exception, I would want messagesDeferrenedPending to still run.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446366368", "createdAt": "2020-06-26T19:18:25Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -63,26 +64,41 @@\n     @Override\n     protected void beforeTest() {\n         sessionId = UUID.randomUUID().toString();\n+        messagesDeferredPending.set(new ArrayList<>());\n     }\n \n     @Override\n     protected void afterTest() {\n         sharedBuilder =  null;\n         final int pending = messagesPending.get();\n-        if (pending < 1) {\n+        final int pendingDeferred = messagesDeferredPending.get().size();\n+        if (pending < 1 && pendingDeferred < 1) {\n             dispose(receiver, sender, receiveAndDeleteReceiver);\n             return;\n         }\n \n         // In the case that this test failed... we're going to drain the queue or subscription.\n         try {\n-            receiveAndDeleteReceiver.receive()\n-                .map(message -> {\n-                    logger.info(\"Message received: {}\", message.getMessage().getSequenceNumber());\n-                    return message;\n-                })\n-                .timeout(Duration.ofSeconds(15), Mono.empty())\n-                .blockLast();\n+            if (pending > 0) {\n+                receiveAndDeleteReceiver.receive()\n+                    .map(message -> {\n+                        logger.info(\"Message received: {}\", message.getMessage().getSequenceNumber());\n+                        return message;\n+                    })\n+                    .timeout(Duration.ofSeconds(15), Mono.empty())\n+                    .blockLast();\n+            }\n+            if (pendingDeferred > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM2NjUwMQ==", "bodyText": "clean up", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446366501", "createdAt": "2020-06-26T19:18:44Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -212,9 +228,9 @@ void transactionSendReceiveAndCommit(DispositionStatus dispositionStatus) {\n \n         // Arrange\n         final MessagingEntityType entityType = MessagingEntityType.QUEUE;\n-        setSenderAndReceiver(entityType, 0, isSessionEnabled);\n+        setSenderAndReceiver(entityType, TestUtils.USE_CASE_PEEK_TRANSACTION_SENDRECEIVE_AND_COMPLETE, isSessionEnabled);\n \n-        final String messageId1 = UUID.randomUUID().toString();\n+        final String messageId1 = \"transactionSendReceiveAndCommit\";//UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5023600468e9f4233aff08237c44443263239f"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "203ff6dfeacccfae963f1befbd77aceb0ad2f917", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/203ff6dfeacccfae963f1befbd77aceb0ad2f917", "committedDate": "2020-06-26T20:26:56Z", "message": "incorporating review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5cbcdc0be7e99977be6d7427b3fd12ea5327af42", "committedDate": "2020-06-26T21:59:29Z", "message": "incorporating review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjIyNzUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438622750", "createdAt": "2020-06-26T22:10:09Z", "commit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMDowOVrOGpwD4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMDowOVrOGpwD4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMjIyNQ==", "bodyText": "Do we need this method? all it does is call into another method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446432225", "createdAt": "2020-06-26T22:10:09Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/IntegrationTestBase.java", "diffHunk": "@@ -149,26 +149,26 @@ public String getSessionQueueName(int index) {\n      *\n      * @return Name of the topic.\n      */\n-    public String getTopicName() {\n-        return TestUtils.getTopicName();\n+    public String getTopicName(int index) {\n+        return getEntityName(TestUtils.getTopicBaseName(), index);\n     }\n \n     /**\n      * Gets the name of the first subscription.\n      *\n      * @return Name of the first subscription.\n      */\n-    public String getSubscriptionName(int index) {\n-        return getEntityName(getSubscriptionBaseName(), index);\n+    public String getSubscriptionName() {\n+        return getSubscriptionBaseName();\n     }\n \n     /**\n      * Gets the name of the first session-enabled subscription.\n      *\n      * @return Name of the first session-enabled subscription.\n      */\n-    public String getSessionSubscriptionName(int index) {\n-        return getEntityName(getSessionSubscriptionBaseName(), index);\n+    public String getSessionSubscriptionName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjIyOTkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438622991", "createdAt": "2020-06-26T22:10:48Z", "commit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMDo0OFrOGpwEog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMDo0OFrOGpwEog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMjQxOA==", "bodyText": "private final", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446432418", "createdAt": "2020-06-26T22:10:48Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -47,6 +47,7 @@\n     private final ClientLogger logger = new ClientLogger(ServiceBusReceiverAsyncClientIntegrationTest.class);\n     private final AtomicInteger messagesPending = new AtomicInteger();\n \n+    private List<Long> messagesDeferredPending = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjIzNzc5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438623779", "createdAt": "2020-06-26T22:13:13Z", "commit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMzoxM1rOGpwHIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxMzoxM1rOGpwHIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMzA1OA==", "bodyText": "format document. there should be spaces.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446433058", "createdAt": "2020-06-26T22:13:13Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientIntegrationTest.java", "diffHunk": "@@ -827,4 +836,24 @@ private void sendMessage(ServiceBusMessage message) {\n         int number = messagesPending.incrementAndGet();\n         logger.info(\"Number sent: {}\", number);\n     }\n+\n+    private int completeMessages(ServiceBusReceiverClient client, int totalMessages) {\n+        final IterableStream<ServiceBusReceivedMessageContext> contextStream = client.receive(totalMessages, TIMEOUT);\n+        final List<ServiceBusReceivedMessageContext> asList = contextStream.stream().collect(Collectors.toList());\n+        for (ServiceBusReceivedMessageContext context:asList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjI0NTUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438624552", "createdAt": "2020-06-26T22:15:32Z", "commit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxNTozMlrOGpwJcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjoxNTozMlrOGpwJcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQzMzY0OQ==", "bodyText": "nit: empty line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#discussion_r446433649", "createdAt": "2020-06-26T22:15:32Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientIntegrationTest.java", "diffHunk": "@@ -827,4 +836,24 @@ private void sendMessage(ServiceBusMessage message) {\n         int number = messagesPending.incrementAndGet();\n         logger.info(\"Number sent: {}\", number);\n     }\n+\n+    private int completeMessages(ServiceBusReceiverClient client, int totalMessages) {\n+        final IterableStream<ServiceBusReceivedMessageContext> contextStream = client.receive(totalMessages, TIMEOUT);\n+        final List<ServiceBusReceivedMessageContext> asList = contextStream.stream().collect(Collectors.toList());\n+        for (ServiceBusReceivedMessageContext context:asList) {\n+            receiver.complete(context.getMessage());\n+        }\n+        return asList.size();\n+    }\n+\n+    private void completeDeferredMessages(ServiceBusReceiverClient client, ServiceBusReceivedMessage receivedMessage, boolean isSessionEnabled) {\n+        final ServiceBusReceivedMessage message;\n+        if (isSessionEnabled) {\n+            message = client.receiveDeferredMessage(receivedMessage.getSequenceNumber(), sessionId);\n+        } else {\n+            message = client.receiveDeferredMessage(receivedMessage.getSequenceNumber());\n+        }\n+        receiver.complete(message);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cbcdc0be7e99977be6d7427b3fd12ea5327af42"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ca57e7574081fb45ecffc8a3192476bc734cf3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/01ca57e7574081fb45ecffc8a3192476bc734cf3", "committedDate": "2020-06-26T22:22:47Z", "message": "incorporating review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be1870002782cd6a056e63ff7309b6d990d9d966", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/be1870002782cd6a056e63ff7309b6d990d9d966", "committedDate": "2020-06-26T22:31:55Z", "message": "incorporating review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjMxOTA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12374#pullrequestreview-438631909", "createdAt": "2020-06-26T22:39:09Z", "commit": {"oid": "be1870002782cd6a056e63ff7309b6d990d9d966"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3001, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}