{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTYxNTMz", "number": 11101, "title": "File share soft delete", "bodyText": "", "createdAt": "2020-05-12T20:49:31Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101", "merged": true, "mergeCommit": {"oid": "75db8104dc5f9d8712bd1e7d005be06ae2397fde"}, "closed": true, "closedAt": "2020-05-15T20:02:31Z", "author": {"login": "kasobol-msft"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXRm5qgH2gAyNDE2OTYxNTMzOjU5Yzc4YjIxN2E1ZjNiY2QxODhiMDUxZTBkOGEzYjU0ZjVlNmJhOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchnK7YgFqTQxMjkxMDI5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "committedDate": "2020-04-13T16:37:13Z", "message": "change versioned account for tests variable names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbfa86af23cf366fc9904fa86040a473c042ef75", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cbfa86af23cf366fc9904fa86040a473c042ef75", "committedDate": "2020-04-20T15:00:42Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "committedDate": "2020-04-30T15:10:12Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "committedDate": "2020-05-05T16:55:08Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe71dfe62c843fbdc4a710115bb36d05e432db0", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbe71dfe62c843fbdc4a710115bb36d05e432db0", "committedDate": "2020-05-06T01:01:40Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d47d76c6c06f23cc4029e8be34c8f2a82006cfe", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1d47d76c6c06f23cc4029e8be34c8f2a82006cfe", "committedDate": "2020-05-12T20:24:02Z", "message": "regenerate client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74dfd07023de95b3f7fb36d9fd6c83abdda75360", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/74dfd07023de95b3f7fb36d9fd6c83abdda75360", "committedDate": "2020-05-12T20:33:12Z", "message": "fix restore generation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec5c673eccb766e8db6843e1146f2f87a225840", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9ec5c673eccb766e8db6843e1146f2f87a225840", "committedDate": "2020-05-12T20:48:17Z", "message": "bump service version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc1a3f026fd9eadb7dcb95728adec7ec5b96b3fd", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cc1a3f026fd9eadb7dcb95728adec7ec5b96b3fd", "committedDate": "2020-05-12T22:45:45Z", "message": "list deleted shares."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "925235a1754687f3b6b3b5dc05e2e00b98d1d307", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/925235a1754687f3b6b3b5dc05e2e00b98d1d307", "committedDate": "2020-05-13T00:09:33Z", "message": "list undeleted - fix order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03e64a65b977d2de23498755ae50938479a06772", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/03e64a65b977d2de23498755ae50938479a06772", "committedDate": "2020-05-13T21:19:25Z", "message": "impl."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e48eee9c081941e25048e02e7c5dac9edba283e", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8e48eee9c081941e25048e02e7c5dac9edba283e", "committedDate": "2020-05-13T22:13:01Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7572c2d043f9cf81d3dfc88beb5b605763ec91b", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b7572c2d043f9cf81d3dfc88beb5b605763ec91b", "committedDate": "2020-05-14T16:12:23Z", "message": "code samples."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d286b11c0087a79f744f936fbd9fb6e8cfa74a", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8d286b11c0087a79f744f936fbd9fb6e8cfa74a", "committedDate": "2020-05-14T17:02:45Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a8c9f81d1161b095a352a874efcdc9299ec7561", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a8c9f81d1161b095a352a874efcdc9299ec7561", "committedDate": "2020-05-14T17:06:54Z", "message": "Merge branch 'feature/storage/stg73' into feature/storage/share-soft-delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0addd7ef8211c6f29c120ab6cade2f51dee8f9bf", "committedDate": "2020-05-14T17:19:36Z", "message": "fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDU2OTI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#pullrequestreview-412056925", "createdAt": "2020-05-14T18:01:27Z", "commit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowMToyOFrOGVoJ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNTo1OFrOGVoqlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTE5OA==", "bodyText": "Generally it is better to include TODOs outside of the comment for two reasons:\n\nIf we ship a beta or GA but forget to remove it we won't have silly documentation\nIntelliJ and other IDEs offer functionality to highlight TODO comment lines.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425331198", "createdAt": "2020-05-14T18:01:28Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareServiceAsyncClient.java", "diffHunk": "@@ -534,4 +538,64 @@ public String generateAccountSas(AccountSasSignatureValues accountSasSignatureVa\n         return new AccountSasImplUtil(accountSasSignatureValues)\n             .generateSas(SasImplUtils.extractSharedKeyCredential(getHttpPipeline()));\n     }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTUwNg==", "bodyText": "Same as the other TODO comment", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425331506", "createdAt": "2020-05-14T18:02:00Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareServiceAsyncClient.java", "diffHunk": "@@ -534,4 +538,64 @@ public String generateAccountSas(AccountSasSignatureValues accountSasSignatureVa\n         return new AccountSasImplUtil(accountSasSignatureValues)\n             .generateSas(SasImplUtils.extractSharedKeyCredential(getHttpPipeline()));\n     }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareServiceAsyncClient.undeleteShare#String-String}\n+     *\n+     * @param deletedShareName The name of the previously deleted share.\n+     * @param deletedShareVersion The version of the previously deleted share.\n+     * @return A {@link Mono} containing a {@link ShareAsyncClient} used\n+     * to interact with the restored share.\n+     */\n+    public Mono<ShareAsyncClient> undeleteShare(\n+        String deletedShareName, String deletedShareVersion) {\n+        return this.undeleteShareWithResponse(deletedShareName, deletedShareVersion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMjAzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Restores a previously deleted share.\n          \n          \n            \n                 * If the share associated with provided <code>deletedShareName</code>\n          \n          \n            \n                 * already exists, this call will result in a 409 (conflict).\n          \n          \n            \n                 * This API is only functional if Share Soft Delete is enabled\n          \n          \n            \n                 * for the storage account associated with the share.\n          \n          \n            \n                 * For more information, see the\n          \n          \n            \n                 * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n          \n          \n            \n                 * Restores a previously deleted share.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * If the share associated with provided <code>deletedShareName</code>\n          \n          \n            \n                 * already exists, this call will result in a 409 (conflict).\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * This API is only functional if Share Soft Delete is enabled\n          \n          \n            \n                 * for the storage account associated with the share.\n          \n          \n            \n                 * For more information, see the\n          \n          \n            \n                 * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n          \n      \n    \n    \n  \n\nJavadocs are HTML paragraphs so newlines aren't maintained.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425332035", "createdAt": "2020-05-14T18:02:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareServiceAsyncClient.java", "diffHunk": "@@ -534,4 +538,64 @@ public String generateAccountSas(AccountSasSignatureValues accountSasSignatureVa\n         return new AccountSasImplUtil(accountSasSignatureValues)\n             .generateSas(SasImplUtils.extractSharedKeyCredential(getHttpPipeline()));\n     }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMjk4Ng==", "bodyText": "I'm a little confused here, will this undelete the specified share with the name of this share client? I'm guessing this will 409 if we already recreated a share with the delete name because you should rename the share instead?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425332986", "createdAt": "2020-05-14T18:04:31Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareServiceAsyncClient.java", "diffHunk": "@@ -534,4 +538,64 @@ public String generateAccountSas(AccountSasSignatureValues accountSasSignatureVa\n         return new AccountSasImplUtil(accountSasSignatureValues)\n             .generateSas(SasImplUtils.extractSharedKeyCredential(getHttpPipeline()));\n     }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNDU1Mg==", "bodyText": "No need for .then().\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ).then().block();\n          \n          \n            \n                    ).block();", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425334552", "createdAt": "2020-05-14T18:07:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/samples/java/com/azure/storage/file/share/ShareServiceAsyncJavaDocCodeSamples.java", "diffHunk": "@@ -286,4 +288,41 @@ public void generateAccountSas() {\n         String sas = fileServiceAsyncClient.generateAccountSas(sasValues);\n         // END: com.azure.storage.file.share.ShareServiceAsyncClient.generateAccountSas#AccountSasSignatureValues\n     }\n+\n+    /**\n+     * Code snippet for {@link ShareServiceAsyncClient#undeleteShare(String, String)}.\n+     */\n+    public void undeleteShare() {\n+        ShareServiceAsyncClient fileServiceAsyncClient = createAsyncClientWithSASToken();\n+        // BEGIN: com.azure.storage.file.share.ShareServiceAsyncClient.undeleteShare#String-String\n+        ListSharesOptions listSharesOptions = new ListSharesOptions();\n+        listSharesOptions.setIncludeDeleted(true);\n+        fileServiceAsyncClient.listShares(listSharesOptions).flatMap(\n+            deletedShare -> {\n+                Mono<ShareAsyncClient> shareAsyncClient = fileServiceAsyncClient.undeleteShare(\n+                    deletedShare.getName(), deletedShare.getVersion());\n+                return shareAsyncClient;\n+            }\n+        ).then().block();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTQ4Nw==", "bodyText": "Are we guessing that the common pattern will be to list deleted shares to undelete them?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425335487", "createdAt": "2020-05-14T18:08:47Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/samples/java/com/azure/storage/file/share/ShareServiceAsyncJavaDocCodeSamples.java", "diffHunk": "@@ -286,4 +288,41 @@ public void generateAccountSas() {\n         String sas = fileServiceAsyncClient.generateAccountSas(sasValues);\n         // END: com.azure.storage.file.share.ShareServiceAsyncClient.generateAccountSas#AccountSasSignatureValues\n     }\n+\n+    /**\n+     * Code snippet for {@link ShareServiceAsyncClient#undeleteShare(String, String)}.\n+     */\n+    public void undeleteShare() {\n+        ShareServiceAsyncClient fileServiceAsyncClient = createAsyncClientWithSASToken();\n+        // BEGIN: com.azure.storage.file.share.ShareServiceAsyncClient.undeleteShare#String-String\n+        ListSharesOptions listSharesOptions = new ListSharesOptions();\n+        listSharesOptions.setIncludeDeleted(true);\n+        fileServiceAsyncClient.listShares(listSharesOptions).flatMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNzQ3Nw==", "bodyText": "We should probably continue to maintain prefixes in cases where there is stale testing data. I know this has been an issue in the past which caused flakiness in tests.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425337477", "createdAt": "2020-05-14T18:12:21Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileServiceAPITests.groovy", "diffHunk": "@@ -108,38 +112,46 @@ class FileServiceAPITests extends APISpec {\n     def \"List shares with filter\"() {\n         given:\n         LinkedList<ShareItem> testShares = new LinkedList<>()\n-        for (int i = 0; i < 3; i++) {\n+        options.setPrefix(shareName)\n+        for (int i = 0; i < 4; i++) {\n             ShareItem share = new ShareItem().setProperties(new ShareProperties().setQuota(i + 1)).setName(shareName + i)\n             if (i == 2) {\n                 share.setMetadata(testMetadata)\n             }\n \n             testShares.add(share)\n             primaryFileServiceClient.createShareWithResponse(share.getName(), share.getMetadata(), share.getProperties().getQuota(), null, null)\n+\n+            if (i == 3) {\n+                share.getProperties().setDeletedTime(OffsetDateTime.now())\n+                primaryFileServiceClient.deleteShare(share.getName())\n+            }\n         }\n \n         when:\n         def shares = primaryFileServiceClient.listShares(options, null, null).iterator()\n \n         then:\n         for (int i = 0; i < limits; i++) {\n-            FileTestHelper.assertSharesAreEqual(testShares.pop(), shares.next(), includeMetadata, includeSnapshot)\n+            FileTestHelper.assertSharesAreEqual(testShares.pop(), shares.next(), includeMetadata, includeSnapshot, includeDeleted)\n         }\n-        !shares.hasNext()\n+        includeDeleted || !shares.hasNext()\n \n         where:\n-        options                                                                                                | limits | includeMetadata | includeSnapshot\n-        new ListSharesOptions().setPrefix(\"fileserviceapitestslistshareswithfilter\")                           | 3      | false           | true\n-        new ListSharesOptions().setPrefix(\"fileserviceapitestslistshareswithfilter\").setIncludeMetadata(true)  | 3      | true            | true\n-        new ListSharesOptions().setPrefix(\"fileserviceapitestslistshareswithfilter\").setIncludeMetadata(false) | 3      | false           | true\n-        new ListSharesOptions().setPrefix(\"fileserviceapitestslistshareswithfilter\").setMaxResultsPerPage(2)   | 3      | false           | true\n+        options                                           | limits | includeMetadata | includeSnapshot | includeDeleted\n+        new ListSharesOptions()                           | 3      | false           | true            | false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNzkzMg==", "bodyText": "I believe there is a utility method in APISpec that does this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425337932", "createdAt": "2020-05-14T18:13:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileServiceAPITests.groovy", "diffHunk": "@@ -235,4 +252,60 @@ class FileServiceAPITests extends APISpec {\n         INVALID_ALLOWED_ORIGIN | 400        | ShareErrorCode.INVALID_XML_DOCUMENT\n         INVALID_ALLOWED_METHOD | 400        | ShareErrorCode.INVALID_XML_NODE_VALUE\n     }\n+\n+    def \"Restore share min\"() {\n+        given:\n+        def shareClient = primaryFileServiceClient.getShareClient(generateShareName())\n+        shareClient.create()\n+        def fileName = generatePathName()\n+        shareClient.getFileClient(fileName).create(2)\n+        shareClient.delete()\n+        if (TestMode.PLAYBACK != getTestMode()) {\n+            Thread.sleep(30000)\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzODA2Mw==", "bodyText": "Same comment.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425338063", "createdAt": "2020-05-14T18:13:21Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileServiceAPITests.groovy", "diffHunk": "@@ -235,4 +252,60 @@ class FileServiceAPITests extends APISpec {\n         INVALID_ALLOWED_ORIGIN | 400        | ShareErrorCode.INVALID_XML_DOCUMENT\n         INVALID_ALLOWED_METHOD | 400        | ShareErrorCode.INVALID_XML_NODE_VALUE\n     }\n+\n+    def \"Restore share min\"() {\n+        given:\n+        def shareClient = primaryFileServiceClient.getShareClient(generateShareName())\n+        shareClient.create()\n+        def fileName = generatePathName()\n+        shareClient.getFileClient(fileName).create(2)\n+        shareClient.delete()\n+        if (TestMode.PLAYBACK != getTestMode()) {\n+            Thread.sleep(30000)\n+        }\n+        def shareItem = primaryFileServiceClient.listShares(\n+            new ListSharesOptions()\n+                .setPrefix(shareClient.getShareName())\n+                .setIncludeDeleted(true),\n+            null, Context.NONE).first()\n+\n+        when:\n+        def restoredShareClient = primaryFileServiceClient.undeleteShare(shareItem.getName(), shareItem.getVersion())\n+\n+        then:\n+        restoredShareClient.getFileClient(fileName).exists()\n+    }\n+\n+    def \"Restore share max\"() {\n+        given:\n+        def shareClient = primaryFileServiceClient.getShareClient(generateShareName())\n+        shareClient.create()\n+        def fileName = generatePathName()\n+        shareClient.getFileClient(fileName).create(2)\n+        shareClient.delete()\n+        if (TestMode.PLAYBACK != getTestMode()) {\n+            Thread.sleep(30000)\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzOTU0MA==", "bodyText": "I would break this into two parts.\n\nCreate the resources need using a block (or StepVerifier, either works).\nThen use sleep if record before going into when.\n\nRight now this feels that setup contains setup and when logic.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425339540", "createdAt": "2020-05-14T18:15:58Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileServiceAsyncAPITests.groovy", "diffHunk": "@@ -266,4 +272,69 @@ class FileServiceAsyncAPITests extends APISpec {\n         INVALID_ALLOWED_METHOD | 400        | ShareErrorCode.INVALID_XML_NODE_VALUE\n \n     }\n+\n+    def \"Restore share min\"() {\n+        given:\n+        def shareClient = primaryFileServiceAsyncClient.getShareAsyncClient(generateShareName())\n+        def fileName = generatePathName()\n+        def delay = TestMode.PLAYBACK == getTestMode() ? 0L : 30000L\n+        def shareItemMono = shareClient.create()\n+            .then(shareClient.getFileClient(fileName).create(2))\n+            .then(shareClient.delete())\n+            .then(Mono.delay(Duration.ofMillis(delay)))\n+            .then(primaryFileServiceAsyncClient.listShares(\n+                new ListSharesOptions()\n+                    .setPrefix(shareClient.getShareName())\n+                    .setIncludeDeleted(true)).next())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0addd7ef8211c6f29c120ab6cade2f51dee8f9bf"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/05678851176f1ad102e3a82ad77e045675d882a2", "committedDate": "2020-05-14T19:14:40Z", "message": "pr feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTE2NTAw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#pullrequestreview-412116500", "createdAt": "2020-05-14T19:24:41Z", "commit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjYzNjM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#pullrequestreview-412263634", "createdAt": "2020-05-15T00:03:59Z", "commit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDowMzo1OVrOGVyItw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMDowMzo1OVrOGVyItw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ5NDcxMQ==", "bodyText": "The rest docs seem to suggest you can rename the share like you can for containers. Is that no longer true? Or is the swagger not accurate?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#discussion_r425494711", "createdAt": "2020-05-15T00:03:59Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareServiceAsyncClient.java", "diffHunk": "@@ -534,4 +538,74 @@ public String generateAccountSas(AccountSasSignatureValues accountSasSignatureVa\n         return new AccountSasImplUtil(accountSasSignatureValues)\n             .generateSas(SasImplUtils.extractSharedKeyCredential(getHttpPipeline()));\n     }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * <p>\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * </p>\n+     * <p>\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>.\n+     * </p>\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareServiceAsyncClient.undeleteShare#String-String}\n+     *\n+     * @param deletedShareName The name of the previously deleted share.\n+     * @param deletedShareVersion The version of the previously deleted share.\n+     * @return A {@link Mono} containing a {@link ShareAsyncClient} used\n+     * to interact with the restored share.\n+     */\n+    // TODO (kasobol-msft) add link to REST API docs\n+    public Mono<ShareAsyncClient> undeleteShare(\n+        String deletedShareName, String deletedShareVersion) {\n+        return this.undeleteShareWithResponse(deletedShareName, deletedShareVersion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Restores a previously deleted share.\n+     * <p>\n+     * If the share associated with provided <code>deletedShareName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * </p>\n+     * <p>\n+     * This API is only functional if Share Soft Delete is enabled\n+     * for the storage account associated with the share.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>.\n+     * </p>\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareServiceAsyncClient.undeleteShareWithResponse#String-String}\n+     *\n+     * @param deletedShareName The name of the previously deleted share.\n+     * @param deletedShareVersion The version of the previously deleted share.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} contains a {@link\n+     * ShareAsyncClient} used to interact with the restored share.\n+     */\n+    // TODO (kasobol-msft) add link to REST API docs\n+    public Mono<Response<ShareAsyncClient>> undeleteShareWithResponse(\n+        String deletedShareName, String deletedShareVersion) {\n+        try {\n+            return withContext(context ->\n+                undeleteShareWithResponse(\n+                    deletedShareName, deletedShareVersion, context));\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<ShareAsyncClient>> undeleteShareWithResponse(\n+        String deletedShareName, String deletedShareVersion, Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjY2Nzg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#pullrequestreview-412266787", "createdAt": "2020-05-15T00:13:33Z", "commit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTEwMjkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11101#pullrequestreview-412910290", "createdAt": "2020-05-15T19:23:49Z", "commit": {"oid": "05678851176f1ad102e3a82ad77e045675d882a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4260, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}