{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDA3NDI5", "number": 16583, "title": "Adding hashCode and equal method for Option", "bodyText": "Given Option can hold a value or represents an absence of a value,  it makes sense to have hash-code and equality support, like Optional type.\n\"HashCode\":\n\nof(non-null) -> hash_code -> hashCode(non-null)\nempty() -> hash_code -> 0\nuninitialized() -> hash_code -> -1\n\n\"Equal\": Two instances are equal if they are of Option type, and either both are uninitialized state or both are initialized with the same value.", "createdAt": "2020-10-20T02:18:15Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16583", "merged": true, "mergeCommit": {"oid": "eed5de7a73a281c49179c795ebbc8e2d4b4a579e"}, "closed": true, "closedAt": "2020-10-20T15:43:36Z", "author": {"login": "anuchandy"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUPLvLgH2gAyNTA2NDA3NDI5OmU1NGUzNWMyMTI0MTVjMGRjNDQ0MmIxZmUzOGQwMGZmYTY4ZWU4ZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUTVxjAFqTUxMjM4OTg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e54e35c212415c0dc4442b1fe38d00ffa68ee8f5", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e54e35c212415c0dc4442b1fe38d00ffa68ee8f5", "committedDate": "2020-10-20T02:17:07Z", "message": "Adding hashCode and equal method for Option"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzg5ODcz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16583#pullrequestreview-512389873", "createdAt": "2020-10-20T07:07:16Z", "commit": {"oid": "e54e35c212415c0dc4442b1fe38d00ffa68ee8f5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzowNzoxN1rOHktkgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzowNzoxN1rOHktkgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1NzQxMQ==", "bodyText": "nice \ud83d\udc4f", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16583#discussion_r508257411", "createdAt": "2020-10-20T07:07:17Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/Option.java", "diffHunk": "@@ -81,6 +82,53 @@ public T getValue() {\n         return this.value;\n     }\n \n+    /**\n+     * Indicates whether some other object is \"equal to\" this Option. The\n+     * other object is considered equal if:\n+     * <ul>\n+     * <li>it is also an {@code Option} and;\n+     * <li>both instances are not initialized or;\n+     * <li>both instances are initialized and values are \"equal to\" each other via {@code equals()}.\n+     * </ul>\n+     *\n+     * @param obj an object to be tested for equality\n+     * @return {code true} if the other object is \"equal to\" this object otherwise {@code false}\n+     */\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (!(obj instanceof Option)) {\n+            return false;\n+        }\n+        Option<?> other = (Option<?>) obj;\n+        if (this.isInitialized ^ other.isInitialized) {\n+            // one is 'initialized' and the other one is not.\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e54e35c212415c0dc4442b1fe38d00ffa68ee8f5"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1836, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}