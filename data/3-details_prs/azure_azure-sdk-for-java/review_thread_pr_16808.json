{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjA5MjYx", "number": 16808, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0ODoxNlrOEyGctg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0ODoxNlrOEyGctg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTY5OTEwOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0ODoxNlrOHojq-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMjoxNToxOFrOHokZUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4OTUzMQ==", "bodyText": "Same as in .NET, should CreateDigitalTwinOptions be CreateOrReplaceDigitalTwinOptions, esp since etag is a part of these options?\n@timtay-microsoft Let me know if this has been discussed already, I might have missed it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16808#discussion_r512289531", "createdAt": "2020-10-26T21:48:16Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -141,11 +141,11 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      * @return A {@link DigitalTwinsResponse} containing the deserialized application/json object representing the digital twin created.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public <T> Mono<DigitalTwinsResponse<T>> createDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {\n-        return withContext(context -> createDigitalTwinWithResponse(digitalTwinId, digitalTwin, clazz, options, context));\n+    public <T> Mono<DigitalTwinsResponse<T>> createOrReplaceDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4403e2340f80b2f5e4fda4873a8263a4516cd6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5NzQ0NQ==", "bodyText": "Yes, good catch. I'll update these options objects as well", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16808#discussion_r512297445", "createdAt": "2020-10-26T22:06:02Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -141,11 +141,11 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      * @return A {@link DigitalTwinsResponse} containing the deserialized application/json object representing the digital twin created.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public <T> Mono<DigitalTwinsResponse<T>> createDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {\n-        return withContext(context -> createDigitalTwinWithResponse(digitalTwinId, digitalTwin, clazz, options, context));\n+    public <T> Mono<DigitalTwinsResponse<T>> createOrReplaceDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4OTUzMQ=="}, "originalCommit": {"oid": "6f4403e2340f80b2f5e4fda4873a8263a4516cd6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMwMTM5NA==", "bodyText": "#16829", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16808#discussion_r512301394", "createdAt": "2020-10-26T22:15:18Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -141,11 +141,11 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      * @return A {@link DigitalTwinsResponse} containing the deserialized application/json object representing the digital twin created.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public <T> Mono<DigitalTwinsResponse<T>> createDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {\n-        return withContext(context -> createDigitalTwinWithResponse(digitalTwinId, digitalTwin, clazz, options, context));\n+    public <T> Mono<DigitalTwinsResponse<T>> createOrReplaceDigitalTwinWithResponse(String digitalTwinId, T digitalTwin, Class<T> clazz, CreateDigitalTwinOptions options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4OTUzMQ=="}, "originalCommit": {"oid": "6f4403e2340f80b2f5e4fda4873a8263a4516cd6"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3830, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}