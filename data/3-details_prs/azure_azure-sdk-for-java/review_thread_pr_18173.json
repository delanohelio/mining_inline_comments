{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTY0NzEw", "number": 18173, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzowNlrOFGD4Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToyNDoxNFrOFGh_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk5MzI3OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzowNlrOIG42pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzowNlrOIG42pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg2Mg==", "bodyText": "Delete booleam parameter, use different class for webapp and webapi.\nAADClientRegistrationRepository\nAADWebAppClientRegistrationRepository\nAADWebApiClientRegistrationRepository", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544093862", "createdAt": "2020-12-16T08:13:06Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "diffHunk": "@@ -40,7 +40,8 @@ public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(\n             clientRegistrationInitialization.createDefaultClient(),\n             clientRegistrationInitialization.createAuthzClients(),\n-            aadAuthenticationProperties);\n+            aadAuthenticationProperties,\n+            false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk5NTQyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzo0NFrOIG434w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzo0NFrOIG434w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDE3OQ==", "bodyText": "if (authz.isOnDemand()) {\n    if()...\n    if()...\n}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094179", "createdAt": "2020-12-16T08:13:44Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -126,6 +127,13 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n+            scopes.add(\"openid\");\n+        }\n+        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n+            scopes.add(\"profile\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk5Njg5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNDoxMlrOIG44zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNDoxMlrOIG44zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDQxMg==", "bodyText": "result.scope(scopes);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094412", "createdAt": "2020-12-16T08:14:12Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -126,6 +127,13 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n+            scopes.add(\"openid\");\n+        }\n+        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n+            scopes.add(\"profile\");\n+        }\n         result.scope(authz.getScopes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk5OTMwOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNDo0M1rOIG46Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNDo0M1rOIG46Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDc0Nw==", "bodyText": "Add test for both configurations.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094747", "createdAt": "2020-12-16T08:14:43Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java", "diffHunk": "@@ -144,9 +144,8 @@ public void aadAwareClientRepository() {\n                 assertTrue(clientRepo.isAuthzClient(\"graph\"));\n \n                 List<ClientRegistration> clients = collectClients(clientRepo);\n-                assertEquals(2, clients.size());\n-                assertEquals(\"graph\", clients.get(0).getRegistrationId());\n-                assertEquals(\"azure\", clients.get(1).getRegistrationId());\n+                assertEquals(1, clients.size());\n+                assertEquals(\"azure\", clients.get(0).getRegistrationId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTAwMTM2OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNToxOFrOIG47RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNToxOFrOIG47RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTA0NQ==", "bodyText": "Rename this file to AADWebAppConfiguration", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544095045", "createdAt": "2020-12-16T08:15:18Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -51,7 +51,8 @@ public AzureClientRegistrationRepository clientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTAwNTI3OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNjowN1rOIG49ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNjowN1rOIG49ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTU4OQ==", "bodyText": "Rename this file to AADWebApiConfiguration", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544095589", "createdAt": "2020-12-16T08:16:07Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "diffHunk": "@@ -40,7 +40,8 @@ public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzkyNzcyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNToyNDoxNFrOIHlO_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNjozNTowM1rOIHmulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ==", "bodyText": "This is not updated yet.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544820991", "createdAt": "2020-12-17T05:24:14Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -161,6 +161,15 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")) {\n+                scopes.add(\"profile\");\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2411440f5b5ae9acbf8b6a7008247cfb94b625f9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMTE4OQ==", "bodyText": "sorry , i missed that", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544821189", "createdAt": "2020-12-17T05:24:53Z", "author": {"login": "zhichengliu12581"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -161,6 +161,15 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")) {\n+                scopes.add(\"profile\");\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ=="}, "originalCommit": {"oid": "2411440f5b5ae9acbf8b6a7008247cfb94b625f9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg0NTQ2Mw==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544845463", "createdAt": "2020-12-17T06:35:03Z", "author": {"login": "zhichengliu12581"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -161,6 +161,15 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")) {\n+                scopes.add(\"profile\");\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ=="}, "originalCommit": {"oid": "2411440f5b5ae9acbf8b6a7008247cfb94b625f9"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2592, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}