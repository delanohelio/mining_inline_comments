{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0Mjk1NjA2", "number": 17699, "title": "Eagerly Read Response Body When it will be Deserialized", "bodyText": "This PR adds a default API HttpClient.send(HttpRequest, Context) which sends an HTTP request with contextual information passed into the HttpClient. Including contextual information in the HttpClient request allows for the client to modify how it processes the request. The first modification is passing a contextual flag indicating that the response for the request will be deserialized to a POJO indicating to the HttpClient to eagerly consume the entire response. Eagerly reading the body will help reduce exception cases where a server only responds with partial data, or is slowly returning data, which leads to the client timing out the connection resulting in exceptions being raised to caller code. Now the exception will be thrown before the retry policy and it will catch and retry the request.", "createdAt": "2020-11-19T23:19:46Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699", "merged": true, "mergeCommit": {"oid": "6da331b0e5c20545a14469fd3859c3a6050b1d9d"}, "closed": true, "closedAt": "2020-11-24T21:57:41Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeLJqCAH2gAyNTI0Mjk1NjA2OmE3ZjhlNzdhYTkyOTIwMTI4ZjFhMzFjYTk0YjI5NmU4YzM4MmYxMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfwehSAH2gAyNTI0Mjk1NjA2OmIwMzk1NjA1ZjFiZDdkMTcyODFiNjNlMWE5MGZmMzdhZDVhOTViYmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7f8e77aa92920128f1a31ca94b296e8c382f132", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a7f8e77aa92920128f1a31ca94b296e8c382f132", "committedDate": "2020-11-19T23:14:28Z", "message": "Update HttpClient to eagerly read response when body will be deserialized to a POJO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a18cf3bf258659a0996522377ebc0dd2981325", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/40a18cf3bf258659a0996522377ebc0dd2981325", "committedDate": "2020-11-20T18:46:48Z", "message": "Update OkHttp and JDK HttpClients to support eagerly reading response body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c960d28cd89e90be7bed022a6e14b8bfa3255543", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c960d28cd89e90be7bed022a6e14b8bfa3255543", "committedDate": "2020-11-23T22:29:46Z", "message": "Merge branch 'master' into AzHttp_EagerlyReadEnitreBodyForPOJOs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTA5OTcy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#pullrequestreview-536909972", "createdAt": "2020-11-23T22:56:06Z", "commit": {"oid": "40a18cf3bf258659a0996522377ebc0dd2981325"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo1NjowNlrOH4inMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMjo1NjowNlrOH4inMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA0OTM5Mw==", "bodyText": "This seems like an unfortunate perf regression. Why wouldn't the value be stored as a Boolean in the Context?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#discussion_r529049393", "createdAt": "2020-11-23T22:56:06Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "diffHunk": "@@ -52,9 +52,30 @@\n \n     @Override\n     public Mono<HttpResponse> send(HttpRequest request) {\n+        return send(request, Context.NONE);\n+    }\n+\n+    @Override\n+    public Mono<HttpResponse> send(HttpRequest request, Context context) {\n+        boolean eagerlyReadResponse = context.getData(\"eagerly-read-response\")\n+            .map(data -> Boolean.parseBoolean(data.toString()))\n+            .orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40a18cf3bf258659a0996522377ebc0dd2981325"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a13d692702eeec865a9c70260bf127bfd6945a62", "committedDate": "2020-11-23T23:28:35Z", "message": "Remove boolean parsing and use casting instead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDQ0MDI3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#pullrequestreview-537044027", "createdAt": "2020-11-24T03:07:43Z", "commit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Nzg5Mjc5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#pullrequestreview-537789279", "createdAt": "2020-11-24T18:21:41Z", "commit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoyMTo0MVrOH5PoQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo1MzoxOFrOH5Qxbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4Njk0Ng==", "bodyText": "It would be good to add javadoc even though it's not a public class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#discussion_r529786946", "createdAt": "2020-11-24T18:21:41Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/BufferedJdkHttpResponse.java", "diffHunk": "@@ -0,0 +1,30 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.jdk.httpclient;\n+\n+import com.azure.core.http.HttpHeaders;\n+import com.azure.core.http.HttpRequest;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+import java.nio.ByteBuffer;\n+\n+final class BufferedJdkHttpResponse extends JdkHttpResponseBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc5MTQ5NQ==", "bodyText": "Can the user also control this behavior or is this intended for internal use only?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#discussion_r529791495", "createdAt": "2020-11-24T18:29:13Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/rest/RestProxy.java", "diffHunk": "@@ -120,7 +122,8 @@ public Object invoke(Object proxy, final Method method, Object[] args) {\n             final SwaggerMethodParser methodParser = getMethodParser(method);\n             final HttpRequest request = createHttpRequest(methodParser, args);\n             Context context = methodParser.setContext(args)\n-                .addData(\"caller-method\", methodParser.getFullyQualifiedMethodName());\n+                .addData(\"caller-method\", methodParser.getFullyQualifiedMethodName())\n+                .addData(\"eagerly-read-response\", isReturnTypeDecodable(methodParser.getReturnType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwMTAwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#discussion_r529801008", "createdAt": "2020-11-24T18:45:18Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/OkHttpResponse.java", "diffHunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.okhttp;\n+\n+import com.azure.core.http.HttpRequest;\n+import com.azure.core.util.logging.ClientLogger;\n+import okhttp3.Response;\n+import okhttp3.ResponseBody;\n+import reactor.core.Exceptions;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+\n+/**\n+ * Default HTTP response for OkHttp.\n+ */\n+final class OkHttpResponse extends OkHttpResponseBase {\n+    // using 4K as default buffer size: https://stackoverflow.com/a/237495/1473510\n+    private static final int BYTE_BUFFER_CHUNK_SIZE = 4096;\n+\n+    private final ClientLogger logger = new ClientLogger(OkHttpResponse.class);\n+\n+    private final ResponseBody responseBody;\n+\n+    OkHttpResponse(Response response, HttpRequest request) {\n+        super(response, request);\n+        // innerResponse.body() getter will not return null for server returned responses.\n+        // It can be null:\n+        // [a]. if response is built manually with null body (e.g for mocking)\n+        // [b]. for the cases described here\n+        // [ref](https://square.github.io/okhttp/4.x/okhttp/okhttp3/-response/body/).\n+        //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwNTY3OQ==", "bodyText": "Why do we need to duplicate? The underlying byte array is still shared.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17699#discussion_r529805679", "createdAt": "2020-11-24T18:53:18Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/http/BufferedHttpResponse.java", "diffHunk": "@@ -31,7 +31,8 @@ public BufferedHttpResponse(HttpResponse innerHttpResponse) {\n         this.cachedBody = FluxUtil.collectBytesInByteBufferStream(innerHttpResponse.getBody())\n             .map(ByteBuffer::wrap)\n             .flux()\n-            .cache();\n+            .cache()\n+            .map(ByteBuffer::duplicate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13d692702eeec865a9c70260bf127bfd6945a62"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0395605f1bd7d17281b63e1a90ff37ad5a95bbc", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b0395605f1bd7d17281b63e1a90ff37ad5a95bbc", "committedDate": "2020-11-24T21:17:40Z", "message": "Added missing Javadocs, new constant key for eagerly reading responses, and CHANGELOG entries"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1616, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}