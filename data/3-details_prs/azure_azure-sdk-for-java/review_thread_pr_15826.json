{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MjczNDk0", "number": 15826, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMToyM1rOEo7_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNToyNTo0MFrOEr5_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzYxNTE2OnYy", "diffSide": "LEFT", "path": "sdk/resourcemanager/azure-resourcemanager-keyvault/src/main/java/com/azure/resourcemanager/keyvault/implementation/SecretImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTowMToyM1rOHaUGNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMzozODoyOFrOHe51hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1NDI5NQ==", "bodyText": "@xccc-msft\nNow that I've removed the per-item GET request, and added the enabled method, I believe I can let customer handle this case.\nCustomer should be able to check enabled method return, and then decide whether to do a getValue or not.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15826#discussion_r497354295", "createdAt": "2020-09-30T09:01:23Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-keyvault/src/main/java/com/azure/resourcemanager/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -76,24 +98,20 @@ public boolean managed() {\n         return vault\n             .secretClient()\n             .listPropertiesOfSecretVersions(name())\n-            .flatMap(p -> {\n-                if (p.isEnabled()) {\n-                    return vault.secretClient().getSecret(p.getName(), p.getVersion());\n-                } else {\n-                    return Mono.just(new KeyVaultSecret(p.getName(), null).setProperties(p));\n-                }\n-            })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a04eca0403a016d7f6c9a46a292448c430108633"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE2NjkxNg==", "bodyText": "The change looks good. One question is for the secret version. When the customer want to get value for enabled secret, I think .getSecret(name, version) should have version param passed too. Not sure if I missed any part, but it seems it alwarys pass NULL as per your changes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15826#discussion_r502166916", "createdAt": "2020-10-09T03:38:28Z", "author": {"login": "xseeseesee"}, "path": "sdk/resourcemanager/azure-resourcemanager-keyvault/src/main/java/com/azure/resourcemanager/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -76,24 +98,20 @@ public boolean managed() {\n         return vault\n             .secretClient()\n             .listPropertiesOfSecretVersions(name())\n-            .flatMap(p -> {\n-                if (p.isEnabled()) {\n-                    return vault.secretClient().getSecret(p.getName(), p.getVersion());\n-                } else {\n-                    return Mono.just(new KeyVaultSecret(p.getName(), null).setProperties(p));\n-                }\n-            })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM1NDI5NQ=="}, "originalCommit": {"oid": "a04eca0403a016d7f6c9a46a292448c430108633"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDc0NDM2OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-keyvault/src/main/java/com/azure/resourcemanager/keyvault/implementation/SecretImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNToyNTo0MFrOHe7ncQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNToyNTo0MFrOHe7ncQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE5NjA4MQ==", "bodyText": "Get the version param fixed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15826#discussion_r502196081", "createdAt": "2020-10-09T05:25:40Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-keyvault/src/main/java/com/azure/resourcemanager/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -76,24 +98,20 @@ public boolean managed() {\n         return vault\n             .secretClient()\n             .listPropertiesOfSecretVersions(name())\n-            .flatMap(p -> {\n-                if (p.isEnabled()) {\n-                    return vault.secretClient().getSecret(p.getName(), p.getVersion());\n-                } else {\n-                    return Mono.just(new KeyVaultSecret(p.getName(), null).setProperties(p));\n-                }\n-            })\n             .map(this::wrapModel);\n     }\n \n     @Override\n-    protected Mono<KeyVaultSecret> getInnerAsync() {\n-        return vault.secretClient().getSecret(name(), null);\n+    protected Mono<SecretProperties> getInnerAsync() {\n+        return vault.secretClient().getSecret(name(), innerModel().getVersion()).map(secret -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7a1187f4b75224003762621c4b453c300ca6d41"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 701, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}