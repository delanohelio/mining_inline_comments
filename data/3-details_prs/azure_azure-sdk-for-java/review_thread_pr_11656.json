{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjkyMTM5", "number": 11656, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMToxNDozOVrOEBj--Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoyMzoyOFrOEBlrkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDczNTkzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMToxNDozOVrOGde8tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0MDoxNlrOGdfWvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2ODk0OQ==", "bodyText": "should I throw exception here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433568949", "createdAt": "2020-06-02T01:14:39Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,8 +120,12 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3MzAyNQ==", "bodyText": "Yes, throw IllegalArgumentException - with message - only Http Proxy type is supported.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433573025", "createdAt": "2020-06-02T01:30:43Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,8 +120,12 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2ODk0OQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTYxMw==", "bodyText": "Thanks, changed the message to be \"Only http proxy type is supported.\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433575613", "createdAt": "2020-06-02T01:40:16Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,8 +120,12 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2ODk0OQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDczNjM4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMToxNDo1N1rOGde8-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDowNjo0MlrOGdhXQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTAxOQ==", "bodyText": "should I also add the proxy type?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433569019", "createdAt": "2020-06-02T01:14:57Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -130,7 +135,8 @@ public String toString() {\n             \"requestTimeout=\" + requestTimeout +\n             \", maxConnectionPoolSize=\" + maxConnectionPoolSize +\n             \", idleConnectionTimeout=\" + idleConnectionTimeout +\n-            \", inetSocketProxyAddress=\" + inetSocketProxyAddress +\n+            \", proxyType=\" + proxy.getType() +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3MzI1OA==", "bodyText": "to the toString() - yes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433573258", "createdAt": "2020-06-02T01:31:31Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -130,7 +135,8 @@ public String toString() {\n             \"requestTimeout=\" + requestTimeout +\n             \", maxConnectionPoolSize=\" + maxConnectionPoolSize +\n             \", idleConnectionTimeout=\" + idleConnectionTimeout +\n-            \", inetSocketProxyAddress=\" + inetSocketProxyAddress +\n+            \", proxyType=\" + proxy.getType() +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTAxOQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTkzNA==", "bodyText": "just found out that the spotbug checks all the properties should be referenced in the toString(), so need to exclude the proxy check for pattern UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433575934", "createdAt": "2020-06-02T01:41:40Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -130,7 +135,8 @@ public String toString() {\n             \"requestTimeout=\" + requestTimeout +\n             \", maxConnectionPoolSize=\" + maxConnectionPoolSize +\n             \", idleConnectionTimeout=\" + idleConnectionTimeout +\n-            \", inetSocketProxyAddress=\" + inetSocketProxyAddress +\n+            \", proxyType=\" + proxy.getType() +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTAxOQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwNDU3NA==", "bodyText": "I am wondering why this wasn't a problem with InetSocketAddress ?\nIt was also present in toString() and was not initialized in Constructor.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433604574", "createdAt": "2020-06-02T03:48:29Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -130,7 +135,8 @@ public String toString() {\n             \"requestTimeout=\" + requestTimeout +\n             \", maxConnectionPoolSize=\" + maxConnectionPoolSize +\n             \", idleConnectionTimeout=\" + idleConnectionTimeout +\n-            \", inetSocketProxyAddress=\" + inetSocketProxyAddress +\n+            \", proxyType=\" + proxy.getType() +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTAxOQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwODUxNQ==", "bodyText": "oo, I see, I think the UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR was really checking is that I used proxy.getType, proxy.getAddress, but it might never be inistialized, so may get null pointer exception.\nUpdated to check proxy is null or not.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433608515", "createdAt": "2020-06-02T04:06:42Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -130,7 +135,8 @@ public String toString() {\n             \"requestTimeout=\" + requestTimeout +\n             \", maxConnectionPoolSize=\" + maxConnectionPoolSize +\n             \", idleConnectionTimeout=\" + idleConnectionTimeout +\n-            \", inetSocketProxyAddress=\" + inetSocketProxyAddress +\n+            \", proxyType=\" + proxy.getType() +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTAxOQ=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDczODQyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/HttpClientConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMToxNjoxNFrOGde-Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0Mzo0NFrOGdfaAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTMyNg==", "bodyText": "changed the method name here since it could be non http?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433569326", "createdAt": "2020-06-02T01:16:14Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/HttpClientConfig.java", "diffHunk": "@@ -30,7 +30,7 @@ public HttpClientConfig withPoolSize(int maxPoolSize) {\n         return this;\n     }\n \n-    public HttpClientConfig withHttpProxy(InetSocketAddress proxy) {\n+    public HttpClientConfig withProxy(ProxyOptions proxy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3MzUwNw==", "bodyText": "Although this is internal so doesn't matter - with withProxy looks good.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433573507", "createdAt": "2020-06-02T01:32:26Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/HttpClientConfig.java", "diffHunk": "@@ -30,7 +30,7 @@ public HttpClientConfig withPoolSize(int maxPoolSize) {\n         return this;\n     }\n \n-    public HttpClientConfig withHttpProxy(InetSocketAddress proxy) {\n+    public HttpClientConfig withProxy(ProxyOptions proxy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTMyNg=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NjQ1MQ==", "bodyText": "thanks", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433576451", "createdAt": "2020-06-02T01:43:44Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/HttpClientConfig.java", "diffHunk": "@@ -30,7 +30,7 @@ public HttpClientConfig withPoolSize(int maxPoolSize) {\n         return this;\n     }\n \n-    public HttpClientConfig withHttpProxy(InetSocketAddress proxy) {\n+    public HttpClientConfig withProxy(ProxyOptions proxy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2OTMyNg=="}, "originalCommit": {"oid": "b373edb0a508bd4a436f4e51bdcb5f8a49f34fed"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTAxMzk0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoyMzoyOFrOGdhlzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo1ODo0NVrOGd1x4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMjIzOQ==", "bodyText": "as we don't support password with proxy, shouldn't we throw if password is set?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433612239", "createdAt": "2020-06-02T04:23:28Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,18 +120,26 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {\n+            throw new IllegalArgumentException(\"Only http proxy type is supported.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b9a0657e0c6e0d12e194c17c40e4046a0d60577"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYzNDcyOA==", "bodyText": "I am not sure. may be we should, may be we should not, it will just get ignored.\nBut we definitely should add more documentation to setProxy() API that we only support HTTP proxy as of now - without any username and password.\nI see, setProxy() docs are incorrect and should be updated.\n@xinlian12 - please create another PR for this - with updated docs - \"that we only support  HTTP proxy type with just the routing address. Username and password are not supported\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433634728", "createdAt": "2020-06-02T05:51:26Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,18 +120,26 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {\n+            throw new IllegalArgumentException(\"Only http proxy type is supported.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMjIzOQ=="}, "originalCommit": {"oid": "3b9a0657e0c6e0d12e194c17c40e4046a0d60577"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk0MzAxMQ==", "bodyText": "Thanks~ have created another PR for the docs update:\nchttps://github.com//pull/11672", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11656#discussion_r433943011", "createdAt": "2020-06-02T14:58:45Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/GatewayConnectionConfig.java", "diffHunk": "@@ -119,18 +120,26 @@ public InetSocketAddress getProxy() {\n      * @return the {@link GatewayConnectionConfig}.\n      */\n \n-    public GatewayConnectionConfig setProxy(InetSocketAddress proxy) {\n-        this.inetSocketProxyAddress = proxy;\n+    public GatewayConnectionConfig setProxy(ProxyOptions proxy) {\n+        if (proxy.getType() != ProxyOptions.Type.HTTP) {\n+            throw new IllegalArgumentException(\"Only http proxy type is supported.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMjIzOQ=="}, "originalCommit": {"oid": "3b9a0657e0c6e0d12e194c17c40e4046a0d60577"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4054, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}