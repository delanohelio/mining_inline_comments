{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODY3NjUz", "number": 13721, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo1OTozOVrOEUuOlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo1MTozMlrOEUvJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0MzczOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/EntityHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo1OTozOVrOG7FLeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo1OTozOVrOG7FLeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDAyNQ==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604025", "createdAt": "2020-08-03T18:59:39Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/EntityHelper.java", "diffHunk": "@@ -138,13 +168,21 @@ public static void setTopicName(TopicDescription topicDescription, String topicN\n      * Interface for accessing methods on a queue.\n      */\n     public interface QueueAccessor {\n+        /**\n+         * Sets properties on the {@link QueueProperties} based on the CreateQueueOptions.\n+         *\n+         * @param options The create queue options to set.\n+         * @return A new {@link QueueProperties} with the properties set.\n+         */\n+        QueueProperties createQueue(CreateQueueOptions options);\n+\n         /**\n          * Sets the name on a queueDescription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0NjU5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMDo0MVrOG7FNWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMDo0MVrOG7FNWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDUwNg==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604506", "createdAt": "2020-08-03T19:00:41Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public CreateQueueBodyContent setType(String type) {\n      *\n      * @return the queueDescription value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0NzA1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMDo1MlrOG7FNqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMDo1MlrOG7FNqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDU4Ng==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604586", "createdAt": "2020-08-03T19:00:52Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/CreateQueueBodyContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public CreateQueueBodyContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Properties of the new queue.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0ODMyOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMToxNlrOG7FOdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMToxNlrOG7FOdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDc4OA==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604788", "createdAt": "2020-08-03T19:01:16Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0ODYxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMToyMlrOG7FOpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMToyMlrOG7FOpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDgzNw==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604837", "createdAt": "2020-08-03T19:01:22Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.\n      *\n-     * @param queueDescription the queueDescription value to set.\n+     * @param queueProperties the queueDescription value to set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0OTA2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMToyOFrOG7FO6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOToxMjo0N1rOG7FjTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDkwNA==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464604904", "createdAt": "2020-08-03T19:01:28Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYxMDEyNg==", "bodyText": "These are auto-generated from AutoRest. In another PR, I'm going to pull the actual QueueDescription class into implementation and have a separate QueueProperties class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464610126", "createdAt": "2020-08-03T19:12:47Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionEntryContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionEntryContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNDkwNA=="}, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY0OTcyOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMTo0NFrOG7FPVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMTo0NFrOG7FPVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTAxNA==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605014", "createdAt": "2020-08-03T19:01:44Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionResponseContent setType(String type) {\n      *\n      * @return the queueDescription value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY1MDA0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMTo1MVrOG7FPgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMTo1MVrOG7FPgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTA1Ng==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605056", "createdAt": "2020-08-03T19:01:51Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/models/QueueDescriptionResponseContent.java", "diffHunk": "@@ -52,18 +52,18 @@ public QueueDescriptionResponseContent setType(String type) {\n      *\n      * @return the queueDescription value.\n      */\n-    public QueueDescription getQueueDescription() {\n-        return this.queueDescription;\n+    public QueueProperties getQueueProperties() {\n+        return this.queueProperties;\n     }\n \n     /**\n      * Set the queueDescription property: Description of a Service Bus queue resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY1MzI4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMjo1NlrOG7FRhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMjo1NlrOG7FRhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTU3NA==", "bodyText": "Should this be named getAutoDeleteDurationOnIdle()?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605574", "createdAt": "2020-08-03T19:02:56Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY1NDY3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMzozMFrOG7FSdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowMzozMFrOG7FSdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNTgxMw==", "bodyText": "Missing is prefix.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464605813", "createdAt": "2020-08-03T19:03:30Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY1NzMyOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNDoyN1rOG7FUEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNDoyN1rOG7FUEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjIyNw==", "bodyText": "isPartitioningEnabled?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606227", "createdAt": "2020-08-03T19:04:27Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {\n+        return this.deadLetteringOnMessageExpiration;\n+    }\n+\n+    /**\n+     * Set the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @param deadLetteringOnMessageExpiration the deadLetteringOnMessageExpiration value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDeadLetteringOnMessageExpiration(boolean deadLetteringOnMessageExpiration) {\n+        this.deadLetteringOnMessageExpiration = deadLetteringOnMessageExpiration;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @return the duplicateDetectionHistoryTimeWindow value.\n+     */\n+    public Duration getDuplicateDetectionHistoryTimeWindow() {\n+        return this.duplicateDetectionHistoryTimeWindow;\n+    }\n+\n+    /**\n+     * Set the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @param duplicateDetectionHistoryTimeWindow the duplicateDetectionHistoryTimeWindow value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDuplicateDetectionHistoryTimeWindow(Duration duplicateDetectionHistoryTimeWindow) {\n+        this.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the enableBatchedOperations property: Value that indicates whether server-side batched operations are\n+     * enabled.\n+     *\n+     * @return the enableBatchedOperations value.\n+     */\n+    public boolean enableBatchedOperations() {\n+        return this.enableBatchedOperations;\n+    }\n+\n+    /**\n+     * Set the enableBatchedOperations property: Value that indicates whether server-side batched operations are\n+     * enabled.\n+     *\n+     * @param enableBatchedOperations the enableBatchedOperations value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setEnableBatchedOperations(boolean enableBatchedOperations) {\n+        this.enableBatchedOperations = enableBatchedOperations;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the enablePartitioning property: A value that indicates whether the queue is to be partitioned across\n+     * multiple message brokers.\n+     *\n+     * @return the enablePartitioning value.\n+     */\n+    public boolean enablePartitioning() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 279}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY2MDY1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNTozNFrOG7FWHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNTozNFrOG7FWHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjc1MQ==", "bodyText": "Change this to QueueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606751", "createdAt": "2020-08-03T19:05:34Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "diffHunk": "@@ -15,16 +15,14 @@\n import java.time.OffsetDateTime;\n import java.util.ArrayList;\n import java.util.List;\n-\n-import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n-import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+import java.util.Objects;\n \n /** The QueueDescription model. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY2MTkzOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNjowMVrOG7FW8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNjowMVrOG7FW8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNjk2MQ==", "bodyText": "Update all javadocs in this class to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464606961", "createdAt": "2020-08-03T19:06:01Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueProperties.java", "diffHunk": "@@ -337,7 +326,7 @@ public String getName() {\n      * @param queueName Name of the queue.\n      * @return the QueueDescription object itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY2MzA2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueRuntimeInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNjoyMVrOG7FXkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNjoyMVrOG7FXkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNzEyMg==", "bodyText": "Change this to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464607122", "createdAt": "2020-08-03T19:06:21Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/QueueRuntimeInfo.java", "diffHunk": "@@ -14,29 +15,39 @@\n @Immutable\n public class QueueRuntimeInfo {\n     private final String name;\n-    private final MessageCountDetails details;\n     private final long messageCount;\n     private final long sizeInBytes;\n     private final OffsetDateTime accessedAt;\n     private final OffsetDateTime createdAt;\n     private final OffsetDateTime updatedAt;\n+    private final int activeMessageCount;\n+    private final int deadLetterMessageCount;\n+    private final int scheduledMessageCount;\n+    private final int transferDeadLetterMessageCount;\n+    private final int transferMessageCount;\n \n     /**\n      * Creates a new instance with runtime properties extracted from the given QueueDescription.\n      *\n-     * @param queueDescription Queue description to extract runtime information from.\n+     * @param queueProperties Queue description to extract runtime information from.\n      *\n      * @throws NullPointerException if {@code queueDescription} is null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTY2NjU0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusManagementClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNzozMVrOG7FZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTowNzozMVrOG7FZrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYwNzY2MA==", "bodyText": "Update the variable names to queueProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464607660", "createdAt": "2020-08-03T19:07:31Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusManagementClientTest.java", "diffHunk": "@@ -266,14 +275,14 @@ void updateQueue() {\n     @Test\n     void updateQueueWithResponse() {\n         // Arrange\n-        final QueueDescription description = mock(QueueDescription.class);\n-        final QueueDescription result = mock(QueueDescription.class);\n+        final QueueProperties description = mock(QueueProperties.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTc4MzIxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/EntityHelperTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo0NzozMFrOG7GhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTozMToxMlrOG8bW2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNTk5Ng==", "bodyText": "If we set negative values to these numbers, We should validate these values.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464625996", "createdAt": "2020-08-03T19:47:30Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/EntityHelperTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.implementation;\n+\n+import com.azure.messaging.servicebus.models.CreateQueueOptions;\n+import com.azure.messaging.servicebus.models.EntityStatus;\n+import com.azure.messaging.servicebus.models.QueueProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.time.Duration;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * {@link EntityHelper} tests.\n+ */\n+class EntityHelperTest {\n+    @Test\n+    void createQueue() {\n+        // Arrange\n+        final String queueName = \"some-queue\";\n+        final CreateQueueOptions expected = new CreateQueueOptions(queueName)\n+            .setAutoDeleteOnIdle(Duration.ofSeconds(15))\n+            .setDefaultMessageTimeToLive(Duration.ofSeconds(50))\n+            .setDeadLetteringOnMessageExpiration(true)\n+            .setDuplicateDetectionHistoryTimeWindow(Duration.ofSeconds(13))\n+            .setEnableBatchedOperations(false)\n+            .setEnablePartitioning(true)\n+            .setForwardTo(\"Forward-To-This-Queue\")\n+            .setForwardDeadLetteredMessagesTo(\"Dead-Lettered-Forward-To\")\n+            .setLockDuration(Duration.ofSeconds(120))\n+            .setMaxDeliveryCount(15)\n+            .setMaxSizeInMegabytes(2048)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNTk2Mg==", "bodyText": "Our guidelines say to do as little validation as possible and offset it to the service. I'd expect the service to do this validation and throw.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r466015962", "createdAt": "2020-08-05T21:31:12Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/EntityHelperTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.implementation;\n+\n+import com.azure.messaging.servicebus.models.CreateQueueOptions;\n+import com.azure.messaging.servicebus.models.EntityStatus;\n+import com.azure.messaging.servicebus.models.QueueProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.time.Duration;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+/**\n+ * {@link EntityHelper} tests.\n+ */\n+class EntityHelperTest {\n+    @Test\n+    void createQueue() {\n+        // Arrange\n+        final String queueName = \"some-queue\";\n+        final CreateQueueOptions expected = new CreateQueueOptions(queueName)\n+            .setAutoDeleteOnIdle(Duration.ofSeconds(15))\n+            .setDefaultMessageTimeToLive(Duration.ofSeconds(50))\n+            .setDeadLetteringOnMessageExpiration(true)\n+            .setDuplicateDetectionHistoryTimeWindow(Duration.ofSeconds(13))\n+            .setEnableBatchedOperations(false)\n+            .setEnablePartitioning(true)\n+            .setForwardTo(\"Forward-To-This-Queue\")\n+            .setForwardDeadLetteredMessagesTo(\"Dead-Lettered-Forward-To\")\n+            .setLockDuration(Duration.ofSeconds(120))\n+            .setMaxDeliveryCount(15)\n+            .setMaxSizeInMegabytes(2048)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNTk5Ng=="}, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTc5MzY3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo1MTozMlrOG7GoHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDo0NjoyMVrOG8aADQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNzc0MA==", "bodyText": "I see that generally, there is no Null check, is this by design ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r464627740", "createdAt": "2020-08-03T19:51:32Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {\n+        return this.deadLetteringOnMessageExpiration;\n+    }\n+\n+    /**\n+     * Set the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @param deadLetteringOnMessageExpiration the deadLetteringOnMessageExpiration value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDeadLetteringOnMessageExpiration(boolean deadLetteringOnMessageExpiration) {\n+        this.deadLetteringOnMessageExpiration = deadLetteringOnMessageExpiration;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @return the duplicateDetectionHistoryTimeWindow value.\n+     */\n+    public Duration getDuplicateDetectionHistoryTimeWindow() {\n+        return this.duplicateDetectionHistoryTimeWindow;\n+    }\n+\n+    /**\n+     * Set the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @param duplicateDetectionHistoryTimeWindow the duplicateDetectionHistoryTimeWindow value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDuplicateDetectionHistoryTimeWindow(Duration duplicateDetectionHistoryTimeWindow) {\n+        this.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5Mzc0MQ==", "bodyText": "Yes. I try to do as little client validation if the service can do it. No value is === \"use the default service value\". It's not an invalid value.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13721#discussion_r465993741", "createdAt": "2020-08-05T20:46:21Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/models/CreateQueueOptions.java", "diffHunk": "@@ -0,0 +1,497 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.ServiceBusManagementAsyncClient;\n+import com.azure.messaging.servicebus.ServiceBusManagementClient;\n+\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_DUPLICATE_DETECTION_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_LOCK_DURATION;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_MAX_DELIVERY_COUNT;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.DEFAULT_QUEUE_SIZE;\n+import static com.azure.messaging.servicebus.implementation.ServiceBusConstants.MAX_DURATION;\n+\n+/**\n+ * Represents the set of options that can be specified for the creation of a queue.\n+ *\n+ * @see ServiceBusManagementAsyncClient#createQueue(CreateQueueOptions)\n+ * @see ServiceBusManagementClient#createQueue(CreateQueueOptions)\n+ */\n+@Fluent\n+public class CreateQueueOptions {\n+    private final String name;\n+\n+    private Duration autoDeleteOnIdle;\n+    private Duration defaultMessageTimeToLive;\n+    private boolean deadLetteringOnMessageExpiration;\n+    private Duration duplicateDetectionHistoryTimeWindow;\n+    private boolean enableBatchedOperations;\n+    private boolean enablePartitioning;\n+    private String forwardTo;\n+    private String forwardDeadLetteredMessagesTo;\n+    private Duration lockDuration;\n+    private int maxDeliveryCount;\n+    private int maxSizeInMegabytes;\n+    private boolean requiresDuplicateDetection;\n+    private boolean requiresSession;\n+    private String userMetadata;\n+    private EntityStatus status;\n+\n+    /**\n+     * Creates an instance with the name of the queue. Default values for the queue are populated. The properties\n+     * populated with defaults are:\n+     *\n+     * <ul>\n+     *     <li>{@link #setAutoDeleteOnIdle(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDefaultMessageTimeToLive(Duration)} is max duration value.</li>\n+     *     <li>{@link #setDuplicateDetectionHistoryTimeWindow(Duration)} is max duration value, but duplication\n+     *     detection is disabled.</li>\n+     *     <li>{@link #setRequiresDuplicateDetection(boolean)} is false.</li>\n+     *     <li>{@link #setEnableBatchedOperations(boolean)} is true.</li>\n+     *     <li>{@link #setLockDuration(Duration)} is 1 minute.</li>\n+     *     <li>{@link #setMaxDeliveryCount(int)} is 10.</li>\n+     *     <li>{@link #setMaxSizeInMegabytes(int)} is 1024MB.</li>\n+     *     <li>{@link #setRequiresSession(boolean)} is false.</li>\n+     *     <li>{@link #setStatus(EntityStatus)} is {@link EntityStatus#ACTIVE}.</li>\n+     * </ul>\n+     *\n+     * @param queueName Name of the queue.\n+     *\n+     * @throws NullPointerException if {@code queueName} is a null.\n+     * @throws IllegalArgumentException if {@code queueName} is an empty string.\n+     */\n+    public CreateQueueOptions(String queueName) {\n+        Objects.requireNonNull(queueName, \"'queueName' cannot be null.\");\n+\n+        if (queueName.isEmpty()) {\n+            ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logThrowableAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queueName;\n+        this.autoDeleteOnIdle = MAX_DURATION;\n+        this.defaultMessageTimeToLive = MAX_DURATION;\n+        this.duplicateDetectionHistoryTimeWindow = DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = true;\n+        this.enablePartitioning = false;\n+        this.lockDuration = DEFAULT_LOCK_DURATION;\n+        this.maxDeliveryCount = DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = DEFAULT_QUEUE_SIZE;\n+        this.requiresDuplicateDetection = false;\n+        this.requiresSession = false;\n+        this.deadLetteringOnMessageExpiration = false;\n+        this.status = EntityStatus.ACTIVE;\n+    }\n+\n+    /**\n+     * Initializes a new instance based on the specified {@link QueueProperties} instance. This is useful for creating a\n+     * new queue based on the properties of an existing queue.\n+     *\n+     * @param queue Existing queue to create options with.\n+     */\n+    public CreateQueueOptions(QueueProperties queue) {\n+        Objects.requireNonNull(queue, \"'queue' cannot be null.\");\n+        Objects.requireNonNull(queue.getName(), \"Queue name cannot be null.\");\n+\n+        if (queue.getName().isEmpty()) {\n+            final ClientLogger logger = new ClientLogger(CreateQueueOptions.class);\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\"Queue name cannot be empty.\"));\n+        }\n+\n+        this.name = queue.getName();\n+        this.autoDeleteOnIdle = queue.getAutoDeleteOnIdle();\n+        this.defaultMessageTimeToLive = queue.getDefaultMessageTimeToLive();\n+\n+        this.deadLetteringOnMessageExpiration = queue.deadLetteringOnMessageExpiration() != null\n+            ? queue.deadLetteringOnMessageExpiration()\n+            : false;\n+        this.duplicateDetectionHistoryTimeWindow = queue.getDuplicateDetectionHistoryTimeWindow() != null\n+            ? queue.getDuplicateDetectionHistoryTimeWindow()\n+            : DEFAULT_DUPLICATE_DETECTION_DURATION;\n+        this.enableBatchedOperations = queue.enableBatchedOperations() != null\n+            ? queue.enableBatchedOperations()\n+            : false;\n+        this.enablePartitioning = queue.enablePartitioning() != null\n+            ? queue.enablePartitioning()\n+            : false;\n+\n+        this.forwardTo = queue.getForwardTo();\n+        this.forwardDeadLetteredMessagesTo = queue.getForwardDeadLetteredMessagesTo();\n+        this.lockDuration = queue.getLockDuration();\n+\n+        this.maxDeliveryCount = queue.getMaxDeliveryCount() != null\n+            ? queue.getMaxDeliveryCount()\n+            : DEFAULT_MAX_DELIVERY_COUNT;\n+        this.maxSizeInMegabytes = queue.getMaxSizeInMegabytes() != null\n+            ? queue.getMaxSizeInMegabytes()\n+            : DEFAULT_QUEUE_SIZE;\n+\n+        this.requiresDuplicateDetection = queue.requiresDuplicateDetection() != null\n+            ? queue.requiresDuplicateDetection()\n+            : false;\n+\n+        this.requiresSession = queue.requiresSession() != null\n+            ? queue.requiresSession()\n+            : false;\n+\n+        this.status = queue.getStatus();\n+        this.userMetadata = queue.getUserMetadata();\n+    }\n+\n+    /**\n+     * Gets the name of the queue.\n+     *\n+     * @return The name of the queue.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Get the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @return the autoDeleteOnIdle value.\n+     */\n+    public Duration getAutoDeleteOnIdle() {\n+        return this.autoDeleteOnIdle;\n+    }\n+\n+    /**\n+     * Set the autoDeleteOnIdle property: ISO 8601 timeSpan idle interval after which the queue is automatically\n+     * deleted. The minimum duration is 5 minutes.\n+     *\n+     * @param autoDeleteOnIdle the autoDeleteOnIdle value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setAutoDeleteOnIdle(Duration autoDeleteOnIdle) {\n+        this.autoDeleteOnIdle = autoDeleteOnIdle;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @return the defaultMessageTimeToLive value.\n+     */\n+    public Duration getDefaultMessageTimeToLive() {\n+        return this.defaultMessageTimeToLive;\n+    }\n+\n+    /**\n+     * Set the defaultMessageTimeToLive property: ISO 8601 default message timespan to live value. This is the duration\n+     * after which the message expires, starting from when the message is sent to Service Bus. This is the default value\n+     * used when TimeToLive is not set on a message itself.\n+     *\n+     * @param defaultMessageTimeToLive the defaultMessageTimeToLive value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive) {\n+        this.defaultMessageTimeToLive = defaultMessageTimeToLive;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @return the deadLetteringOnMessageExpiration value.\n+     */\n+    public boolean deadLetteringOnMessageExpiration() {\n+        return this.deadLetteringOnMessageExpiration;\n+    }\n+\n+    /**\n+     * Set the deadLetteringOnMessageExpiration property: A value that indicates whether this queue has dead letter\n+     * support when a message expires.\n+     *\n+     * @param deadLetteringOnMessageExpiration the deadLetteringOnMessageExpiration value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDeadLetteringOnMessageExpiration(boolean deadLetteringOnMessageExpiration) {\n+        this.deadLetteringOnMessageExpiration = deadLetteringOnMessageExpiration;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @return the duplicateDetectionHistoryTimeWindow value.\n+     */\n+    public Duration getDuplicateDetectionHistoryTimeWindow() {\n+        return this.duplicateDetectionHistoryTimeWindow;\n+    }\n+\n+    /**\n+     * Set the duplicateDetectionHistoryTimeWindow property: ISO 8601 timeSpan structure that defines the duration of\n+     * the duplicate detection history. The default value is 10 minutes.\n+     *\n+     * @param duplicateDetectionHistoryTimeWindow the duplicateDetectionHistoryTimeWindow value to set.\n+     *\n+     * @return the CreateQueueOptions object itself.\n+     */\n+    public CreateQueueOptions setDuplicateDetectionHistoryTimeWindow(Duration duplicateDetectionHistoryTimeWindow) {\n+        this.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNzc0MA=="}, "originalCommit": {"oid": "b6de732edfe48c53c11ed1dc9e69caa963cacfbb"}, "originalPosition": 246}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4716, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}