{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5Mjg4Mzkz", "number": 7130, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzowMzozOVrODV2gGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzowMzozOVrODV2gGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM5NjQwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/microsoft-azure-cosmos/src/main/java/com/azure/data/cosmos/internal/http/ReactorNettyClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNzowMzozOVrOFaSL7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxODoyMjoyMlrOFaSajA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTI2Mw==", "bodyText": "Might the method override be removed now that the body of close is empty?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7130#discussion_r363105263", "createdAt": "2020-01-05T17:03:39Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/microsoft-azure-cosmos/src/main/java/com/azure/data/cosmos/internal/http/ReactorNettyClient.java", "diffHunk": "@@ -172,31 +172,26 @@ public HttpHeaders headers() {\n \n         @Override\n         public Flux<ByteBuf> body() {\n-            return bodyIntern().doFinally(s -> this.close());\n+            return bodyIntern();\n         }\n \n         @Override\n         public Mono<byte[]> bodyAsByteArray() {\n-            return bodyIntern().aggregate().asByteArray().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asByteArray();\n         }\n \n         @Override\n         public Mono<String> bodyAsString() {\n-            return bodyIntern().aggregate().asString().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString();\n         }\n \n         @Override\n         public Mono<String> bodyAsString(Charset charset) {\n-            return bodyIntern().aggregate().asString(charset).doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString(charset);\n         }\n \n         @Override\n         public void close() {\n-            if (reactorNettyConnection.channel().eventLoop().inEventLoop()) {\n-                reactorNettyConnection.dispose();\n-            } else {\n-                reactorNettyConnection.channel().eventLoop().execute(reactorNettyConnection::dispose);\n-            }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29cabd22d2334ef2ad90424fcd6dc9f76403428"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwODE1Ng==", "bodyText": "Makes sense, will remove the empty method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7130#discussion_r363108156", "createdAt": "2020-01-05T18:03:52Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/microsoft-azure-cosmos/src/main/java/com/azure/data/cosmos/internal/http/ReactorNettyClient.java", "diffHunk": "@@ -172,31 +172,26 @@ public HttpHeaders headers() {\n \n         @Override\n         public Flux<ByteBuf> body() {\n-            return bodyIntern().doFinally(s -> this.close());\n+            return bodyIntern();\n         }\n \n         @Override\n         public Mono<byte[]> bodyAsByteArray() {\n-            return bodyIntern().aggregate().asByteArray().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asByteArray();\n         }\n \n         @Override\n         public Mono<String> bodyAsString() {\n-            return bodyIntern().aggregate().asString().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString();\n         }\n \n         @Override\n         public Mono<String> bodyAsString(Charset charset) {\n-            return bodyIntern().aggregate().asString(charset).doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString(charset);\n         }\n \n         @Override\n         public void close() {\n-            if (reactorNettyConnection.channel().eventLoop().inEventLoop()) {\n-                reactorNettyConnection.dispose();\n-            } else {\n-                reactorNettyConnection.channel().eventLoop().execute(reactorNettyConnection::dispose);\n-            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTI2Mw=="}, "originalCommit": {"oid": "a29cabd22d2334ef2ad90424fcd6dc9f76403428"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwOTAwNA==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7130#discussion_r363109004", "createdAt": "2020-01-05T18:22:22Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/microsoft-azure-cosmos/src/main/java/com/azure/data/cosmos/internal/http/ReactorNettyClient.java", "diffHunk": "@@ -172,31 +172,26 @@ public HttpHeaders headers() {\n \n         @Override\n         public Flux<ByteBuf> body() {\n-            return bodyIntern().doFinally(s -> this.close());\n+            return bodyIntern();\n         }\n \n         @Override\n         public Mono<byte[]> bodyAsByteArray() {\n-            return bodyIntern().aggregate().asByteArray().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asByteArray();\n         }\n \n         @Override\n         public Mono<String> bodyAsString() {\n-            return bodyIntern().aggregate().asString().doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString();\n         }\n \n         @Override\n         public Mono<String> bodyAsString(Charset charset) {\n-            return bodyIntern().aggregate().asString(charset).doFinally(s -> this.close());\n+            return bodyIntern().aggregate().asString(charset);\n         }\n \n         @Override\n         public void close() {\n-            if (reactorNettyConnection.channel().eventLoop().inEventLoop()) {\n-                reactorNettyConnection.dispose();\n-            } else {\n-                reactorNettyConnection.channel().eventLoop().execute(reactorNettyConnection::dispose);\n-            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTI2Mw=="}, "originalCommit": {"oid": "a29cabd22d2334ef2ad90424fcd6dc9f76403428"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 579, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}