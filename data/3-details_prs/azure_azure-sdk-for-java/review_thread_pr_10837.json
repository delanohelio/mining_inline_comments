{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjI4NTU3", "number": 10837, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0Mjo0M1rOD57NAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToyNzowMFrOD6AKAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDY1NDA5OnYy", "diffSide": "LEFT", "path": "sdk/servicebus/azure-messaging-servicebus/CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0Mjo0M1rOGRePGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0Mjo0M1rOGRePGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk3NDM2Mw==", "bodyText": "This reminds me, I should remove CONTRIBUTING.md from Event Hubs too. I will do it when I update the versions for May release.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r420974363", "createdAt": "2020-05-06T17:42:43Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/CONTRIBUTING.md", "diffHunk": "@@ -1,92 +0,0 @@\n-# Contributing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cedd0e4d0eb20816de96f579d5a468819d941b2"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDY1NjY1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0MzoxOFrOGReQsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0MzoxOFrOGReQsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk3NDc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Create a Service Bus client using Microsoft identity platform (formerly Azure Active Directory)\n          \n          \n            \n            #### Create a Service Bus client using Microsoft Identity platform (formerly Azure Active Directory)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r420974769", "createdAt": "2020-05-06T17:43:18Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -43,27 +44,58 @@ have to be online at the same time.\n - [Maven][maven]\n - Microsoft Azure subscription\n   - You can create a free account at: https://azure.microsoft.com\n+- Azure Service Bus instance\n+  - Step-by-step guide for [creating a Service Bus instance using Azure Portal][service_bus_create]\n \n-### Adding the package to your product\n+### Include the package\n \n [//]: # ({x-version-update-start;com.azure:azure-messaging-servicebus;current})\n ```xml\n <dependency>\n     <groupId>com.azure</groupId>\n     <artifactId>azure-messaging-servicebus</artifactId>\n-    <version>7.0.0-beta.1</version>\n+    <version>7.0.0-beta.2</version>\n </dependency>\n ```\n [//]: # ({x-version-update-end})\n \n ### Authenticate the client\n \n-For the Service Bus client library to interact with an Service Bus, it will need to understand how to connect\n-and authorize with it.\n+For the Service Bus client library to interact with Service Bus, it will need to understand how to connect and authorize\n+with it.\n+\n+#### Create Service Bus clients using a connection string\n+\n+The easiest means for doing so is to use a connection string, which automatically created when creating a Service Bus\n+namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n+[get a Service Bus connection string][service_bus_connection_string].\n+\n+Both the asynchronous and synchronous Service Bus sender and receiver clients are instantiated using\n+`ServiceBusClientBuilder`. The snippets below create a synchronous Service Bus sender and an asynchronous receiver,\n+respectively.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L27 -->\n+```java\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .sender()\n+    .queueName(\"<< QUEUE NAME >>\")\n+    .buildClient();\n+```\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L34-L39 -->\n+```java\n+ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .receiver()\n+    .topicName(\"<< TOPIC NAME >>\")\n+    .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+    .buildAsyncClient();\n+```\n \n-#### Create an Service Bus client using Microsoft identity platform (formerly Azure Active Directory)\n+#### Create a Service Bus client using Microsoft identity platform (formerly Azure Active Directory)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cedd0e4d0eb20816de96f579d5a468819d941b2"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDY2NDA1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0NTowMFrOGReVRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0NTowMFrOGReVRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk3NTk0Mg==", "bodyText": "Remove locale en-us", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r420975942", "createdAt": "2020-05-06T17:45:00Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -224,66 +324,40 @@ services. When an AMQP exception is thrown, examining the error condition field\n exception occurred and if possible, how to mitigate this exception. A list of all the AMQP exceptions can be found in\n [OASIS AMQP Version 1.0 Transport Errors][oasis_amqp_v1_error].\n \n-The [`AmqpErrorContext`][AmqpErrorContext] in the [`AmqpException`][AmqpException] provides information about the AMQP\n-session, link, or connection that the exception occurred in. This is useful to diagnose which level in the transport\n-this exception occurred at and whether it was an issue in one of the producers or consumers.\n-\n-#### Operation cancelled exception\n-\n-It occurs when the underlying AMQP layer encounters an abnormal link abort or the connection is disconnected in an\n-unexpected fashion. It is recommended to attempt to verify the current state and retry if necessary.\n-\n-### Handling transient AMQP exceptions\n-\n-If a transient AMQP exception occurs, the client library retries the operation as many times as the\n-[AmqpRetryOptions][AmqpRetryOptions] allows. Afterwards, the operation fails and an exception is propagated back to the\n-user.\n-\n-### Default SSL library\n-\n-All client libraries, by default, use the Tomcat-native Boring SSL library to enable native-level performance for SSL\n-operations. The Boring SSL library is an uber jar containing native libraries for Linux / macOS / Windows, and provides\n-better performance compared to the default SSL implementation within the JDK. For more information, including how to\n-reduce the dependency size, refer to the [performance tuning][performance_tuning] section of the wiki.\n+The recommended way to solve the specific exception the AMQP exception represents is to follow the\n+[Service Bus Messaging Exceptions][servicebus_messaging_exceptions] guidance.\n \n ## Next steps\n \n Beyond those discussed, the Azure Service Bus client library offers support for many additional scenarios to help take\n-advantage of the full feature set of the Azure Service Bus service. In order to help explore some of the these scenarios,\n-the following set of sample is available [here][samples_readme].\n+advantage of the full feature set of the Azure Service Bus service. In order to help explore some of these scenarios,\n+check out the [samples README][samples_readme].\n \n ## Contributing\n \n If you would like to become an active contributor to this project please refer to our [Contribution\n-Guidelines](./CONTRIBUTING.md) for more information.\n+Guidelines](./../../../CONTRIBUTING.md) for more information.\n \n <!-- Links -->\n [aad_authorization]: https://docs.microsoft.com/azure/service-bus-messaging/authenticate-application\n [amqp_transport_error]: https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-amqp-error\n [AmqpErrorCondition]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorCondition.java\n-[AmqpErrorContext]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorContext.java\n-[AmqpException]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpException.java\n [api_documentation]: https://aka.ms/java-docs\n-[app_registration_page]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#get-values-for-signing-in\n-[application_client_secret]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#create-a-new-application-secret\n [java_8_sdk_javadocs]: https://docs.oracle.com/javase/8/docs/api/java/util/logging/package-summary.html\n-[LogLevels]: ../../core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java\n+[logging]: https://github.com/Azure/azure-sdk-for-java/wiki/Logging-with-Azure-SDK\n [maven]: https://maven.apache.org/\n+[message-sessions]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cedd0e4d0eb20816de96f579d5a468819d941b2"}, "originalPosition": 428}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDY2NTI2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0NToxOFrOGReV_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo0NToxOFrOGReV_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk3NjEyNQ==", "bodyText": "Same here - remove en-us", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r420976125", "createdAt": "2020-05-06T17:45:18Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -224,66 +324,40 @@ services. When an AMQP exception is thrown, examining the error condition field\n exception occurred and if possible, how to mitigate this exception. A list of all the AMQP exceptions can be found in\n [OASIS AMQP Version 1.0 Transport Errors][oasis_amqp_v1_error].\n \n-The [`AmqpErrorContext`][AmqpErrorContext] in the [`AmqpException`][AmqpException] provides information about the AMQP\n-session, link, or connection that the exception occurred in. This is useful to diagnose which level in the transport\n-this exception occurred at and whether it was an issue in one of the producers or consumers.\n-\n-#### Operation cancelled exception\n-\n-It occurs when the underlying AMQP layer encounters an abnormal link abort or the connection is disconnected in an\n-unexpected fashion. It is recommended to attempt to verify the current state and retry if necessary.\n-\n-### Handling transient AMQP exceptions\n-\n-If a transient AMQP exception occurs, the client library retries the operation as many times as the\n-[AmqpRetryOptions][AmqpRetryOptions] allows. Afterwards, the operation fails and an exception is propagated back to the\n-user.\n-\n-### Default SSL library\n-\n-All client libraries, by default, use the Tomcat-native Boring SSL library to enable native-level performance for SSL\n-operations. The Boring SSL library is an uber jar containing native libraries for Linux / macOS / Windows, and provides\n-better performance compared to the default SSL implementation within the JDK. For more information, including how to\n-reduce the dependency size, refer to the [performance tuning][performance_tuning] section of the wiki.\n+The recommended way to solve the specific exception the AMQP exception represents is to follow the\n+[Service Bus Messaging Exceptions][servicebus_messaging_exceptions] guidance.\n \n ## Next steps\n \n Beyond those discussed, the Azure Service Bus client library offers support for many additional scenarios to help take\n-advantage of the full feature set of the Azure Service Bus service. In order to help explore some of the these scenarios,\n-the following set of sample is available [here][samples_readme].\n+advantage of the full feature set of the Azure Service Bus service. In order to help explore some of these scenarios,\n+check out the [samples README][samples_readme].\n \n ## Contributing\n \n If you would like to become an active contributor to this project please refer to our [Contribution\n-Guidelines](./CONTRIBUTING.md) for more information.\n+Guidelines](./../../../CONTRIBUTING.md) for more information.\n \n <!-- Links -->\n [aad_authorization]: https://docs.microsoft.com/azure/service-bus-messaging/authenticate-application\n [amqp_transport_error]: https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-amqp-error\n [AmqpErrorCondition]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorCondition.java\n-[AmqpErrorContext]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorContext.java\n-[AmqpException]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpException.java\n [api_documentation]: https://aka.ms/java-docs\n-[app_registration_page]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#get-values-for-signing-in\n-[application_client_secret]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#create-a-new-application-secret\n [java_8_sdk_javadocs]: https://docs.oracle.com/javase/8/docs/api/java/util/logging/package-summary.html\n-[LogLevels]: ../../core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java\n+[logging]: https://github.com/Azure/azure-sdk-for-java/wiki/Logging-with-Azure-SDK\n [maven]: https://maven.apache.org/\n+[message-sessions]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions\n [oasis_amqp_v1_error]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-error\n [oasis_amqp_v1]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-overview-v1.0-os.html\n-[performance_tuning]: https://github.com/Azure/azure-sdk-for-java/wiki/Performance-Tuning\n+[product_docs]: https://docs.microsoft.com/azure/service-bus-messaging\n [qpid_proton_j_apache]: http://qpid.apache.org/proton/\n [queue_concept]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-overview#queues\n [RetryOptions]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/AmqpRetryOptions.java\n-[sample_readme]: ./src/samples/README.md\n-[sample-receive-async-aad-message]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAzureIdentityAsyncSample.java\n-[sample-receive-async-message]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAsyncSample.java\n-[sample-receive-message-and-settle]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAndSettleAsyncSample.java\n-[sample-receive-message-synchronously]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageSyncSample.java\n-[sample-send-async-aad-message]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageWithAzureIdentityAsyncSample.java\n-[sample-send-async-message]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageAsyncSample.java\n-[sample-send-batch-messages]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageBatchSyncSample.java\n+[sample_examples]: ./src/samples/java/com/azure/messaging/servicebus/\n+[samples_readme]: ./src/samples/README.md\n [service_bus_connection_string]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-create-namespace-portal#get-the-connection-string\n+[servicebus_create]: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-create-namespace-portal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cedd0e4d0eb20816de96f579d5a468819d941b2"}, "originalPosition": 447}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTE3MTkxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDowMTowNVrOGRjRRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzozNTowNlrOGRtMCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1NjgzOQ==", "bodyText": "Is the ? meant to be part of the link name?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421056839", "createdAt": "2020-05-06T20:01:05Z", "author": {"login": "alzimmermsft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -1,39 +1,40 @@\n # Azure Service Bus client library for Java\n \n Microsoft Azure Service Bus is a fully managed enterprise integration message broker. Service Bus can decouple\n-applications and services. Service Bus offers a reliable and secure platform for asynchronous transfer of data\n-and state. Data is transferred between different applications and services using messages. If you would like to know\n-more about Azure Service Bus, you may wish to review: [What is Service Bus](https://docs.microsoft.com/en-us/azure/service-bus-messaging)?\n+applications and services. Service Bus offers a reliable and secure platform for asynchronous transfer of data and\n+state. Data is transferred between different applications and services using messages. If you would like to know more\n+about Azure Service Bus, you may wish to review: [What is Service Bus][product_docs]?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxOTMzNw==", "bodyText": "Good catch.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421219337", "createdAt": "2020-05-07T03:35:06Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -1,39 +1,40 @@\n # Azure Service Bus client library for Java\n \n Microsoft Azure Service Bus is a fully managed enterprise integration message broker. Service Bus can decouple\n-applications and services. Service Bus offers a reliable and secure platform for asynchronous transfer of data\n-and state. Data is transferred between different applications and services using messages. If you would like to know\n-more about Azure Service Bus, you may wish to review: [What is Service Bus](https://docs.microsoft.com/en-us/azure/service-bus-messaging)?\n+applications and services. Service Bus offers a reliable and secure platform for asynchronous transfer of data and\n+state. Data is transferred between different applications and services using messages. If you would like to know more\n+about Azure Service Bus, you may wish to review: [What is Service Bus][product_docs]?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1NjgzOQ=="}, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTE4Mzg3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDowNDozNlrOGRjY2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDowNDozNlrOGRjY2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA1ODc3OQ==", "bodyText": "I know it is redundant when reading the README sequentially but we should say The easiest means for authenticating, using doing so out of context is confusing.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The easiest means for doing so is to use a connection string, which automatically created when creating a Service Bus\n          \n          \n            \n            The easiest means for authenticating is to use a connection string, which automatically created when creating a Service Bus", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421058779", "createdAt": "2020-05-06T20:04:36Z", "author": {"login": "alzimmermsft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -43,27 +44,58 @@ have to be online at the same time.\n - [Maven][maven]\n - Microsoft Azure subscription\n   - You can create a free account at: https://azure.microsoft.com\n+- Azure Service Bus instance\n+  - Step-by-step guide for [creating a Service Bus instance using Azure Portal][service_bus_create]\n \n-### Adding the package to your product\n+### Include the package\n \n [//]: # ({x-version-update-start;com.azure:azure-messaging-servicebus;current})\n ```xml\n <dependency>\n     <groupId>com.azure</groupId>\n     <artifactId>azure-messaging-servicebus</artifactId>\n-    <version>7.0.0-beta.1</version>\n+    <version>7.0.0-beta.2</version>\n </dependency>\n ```\n [//]: # ({x-version-update-end})\n \n ### Authenticate the client\n \n-For the Service Bus client library to interact with an Service Bus, it will need to understand how to connect\n-and authorize with it.\n+For the Service Bus client library to interact with Service Bus, it will need to understand how to connect and authorize\n+with it.\n+\n+#### Create Service Bus clients using a connection string\n+\n+The easiest means for doing so is to use a connection string, which automatically created when creating a Service Bus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTE5OTU5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDowOToxNlrOGRjixQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMjo0ODo1MlrOGRseEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA2MTMxNw==", "bodyText": "Do we want to include a Charset in the getBytes call?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421061317", "createdAt": "2020-05-06T20:09:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -100,92 +130,163 @@ ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .buildAsyncClient();\n ```\n \n-##### Service Bus Roles\n-\n-When using Azure Active Directory, your principal must be assigned a role which allows access to Service Bus, such\n-as the `Azure Service Bus Data Owner`, `Azure Service Bus Data Sender` and `Azure Service Bus Data Receiver`\n-[role][servicebus_roles].\n-For more information about using Azure Active Directory authorization with Service Bus, please refer to\n-[the associated documentation][aad_authorization].\n-\n ## Key concepts\n \n You can interact with the primary resource types within a Service Bus Namespace, of which multiple can exist and\n-on which actual message transmission takes place, the namespace often serving as an application container:\n-\n-* [Queue][queue_concept]: Allows for Sending and Receiving of messages, ordered first-in-first-out.  Often used for\n-point-to-point communication.\n+on which actual message transmission takes place. The namespace often serves as an application container:\n \n-* [Topic][topic_concept]: As opposed to Queues, Topics are better suited to publish/subscribe scenarios.  A topic can\n-be sent to, but requires a subscription, of which there can be multiple in parallel, to consume from.\n-\n-* [Subscription][subscription_concept]: The mechanism to consume from a Topic.  Each subscription is independent, and\n-receaves a copy of each message sent to the topic.\n+* A **[queue][queue_concept]** allows for the sending and receiving of messages, ordered first-in-first-out. It is often\n+  used for point-to-point communication.\n+* A **[topic][topic_concept]** is better suited to publisher and subscriber scenarios. A topic publishes messages to\n+  _subscriptions_, of which, multiple can exist simultaneously.\n+* A **[subscription][subscription_concept]** receives messages from a topic. Each subscription is independent and\n+  receives a copy of the message sent to the topic.\n \n ## Examples\n \n-### Create a sender or receiver using connection string\n-\n-The easiest means for doing so is to use a connection string, which is created automatically when creating an Service Bus\n-namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n-[get an Service Bus connection string][service_bus_connection_string].\n+### Send messages\n \n-Both the asynchronous and synchronous Service Bus sender and receiver clients can be created using\n-`ServiceBusClientBuilder`.The examples are explained blow.\n+You'll need to create an asynchronous [`ServiceBusSenderAsyncClient`][ServiceBusSenderAsyncClient] or a synchronous\n+[`ServiceBusSenderClient`][ServiceBusSenderClient] to send messages. Each sender can send messages to either a queue or\n+a topic.\n \n-The snippet below creates an asynchronous Service Bus sender.\n+The snippet below creates a synchronous `ServiceBusSender` to publish a message to a queue.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L28 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L65-L74 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusSenderAsyncClient sender = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .sender()\n     .queueName(\"<< QUEUE NAME >>\")\n-    .buildAsyncClient();\n+    .buildClient();\n+List<ServiceBusMessage> messages = Arrays.asList(\n+    new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+    new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 226}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5NTgyOQ==", "bodyText": "I believe we're considering doing a default string => utf8-bytes type conversion in all the libraries, so doesn't sound like a bad idea.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421095829", "createdAt": "2020-05-06T21:13:02Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -100,92 +130,163 @@ ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .buildAsyncClient();\n ```\n \n-##### Service Bus Roles\n-\n-When using Azure Active Directory, your principal must be assigned a role which allows access to Service Bus, such\n-as the `Azure Service Bus Data Owner`, `Azure Service Bus Data Sender` and `Azure Service Bus Data Receiver`\n-[role][servicebus_roles].\n-For more information about using Azure Active Directory authorization with Service Bus, please refer to\n-[the associated documentation][aad_authorization].\n-\n ## Key concepts\n \n You can interact with the primary resource types within a Service Bus Namespace, of which multiple can exist and\n-on which actual message transmission takes place, the namespace often serving as an application container:\n-\n-* [Queue][queue_concept]: Allows for Sending and Receiving of messages, ordered first-in-first-out.  Often used for\n-point-to-point communication.\n+on which actual message transmission takes place. The namespace often serves as an application container:\n \n-* [Topic][topic_concept]: As opposed to Queues, Topics are better suited to publish/subscribe scenarios.  A topic can\n-be sent to, but requires a subscription, of which there can be multiple in parallel, to consume from.\n-\n-* [Subscription][subscription_concept]: The mechanism to consume from a Topic.  Each subscription is independent, and\n-receaves a copy of each message sent to the topic.\n+* A **[queue][queue_concept]** allows for the sending and receiving of messages, ordered first-in-first-out. It is often\n+  used for point-to-point communication.\n+* A **[topic][topic_concept]** is better suited to publisher and subscriber scenarios. A topic publishes messages to\n+  _subscriptions_, of which, multiple can exist simultaneously.\n+* A **[subscription][subscription_concept]** receives messages from a topic. Each subscription is independent and\n+  receives a copy of the message sent to the topic.\n \n ## Examples\n \n-### Create a sender or receiver using connection string\n-\n-The easiest means for doing so is to use a connection string, which is created automatically when creating an Service Bus\n-namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n-[get an Service Bus connection string][service_bus_connection_string].\n+### Send messages\n \n-Both the asynchronous and synchronous Service Bus sender and receiver clients can be created using\n-`ServiceBusClientBuilder`.The examples are explained blow.\n+You'll need to create an asynchronous [`ServiceBusSenderAsyncClient`][ServiceBusSenderAsyncClient] or a synchronous\n+[`ServiceBusSenderClient`][ServiceBusSenderClient] to send messages. Each sender can send messages to either a queue or\n+a topic.\n \n-The snippet below creates an asynchronous Service Bus sender.\n+The snippet below creates a synchronous `ServiceBusSender` to publish a message to a queue.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L28 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L65-L74 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusSenderAsyncClient sender = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .sender()\n     .queueName(\"<< QUEUE NAME >>\")\n-    .buildAsyncClient();\n+    .buildClient();\n+List<ServiceBusMessage> messages = Arrays.asList(\n+    new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+    new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA2MTMxNw=="}, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 226}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNzU3MA==", "bodyText": "I can specify it. Trying to decrease the length of characters. lol", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421207570", "createdAt": "2020-05-07T02:48:52Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -100,92 +130,163 @@ ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .buildAsyncClient();\n ```\n \n-##### Service Bus Roles\n-\n-When using Azure Active Directory, your principal must be assigned a role which allows access to Service Bus, such\n-as the `Azure Service Bus Data Owner`, `Azure Service Bus Data Sender` and `Azure Service Bus Data Receiver`\n-[role][servicebus_roles].\n-For more information about using Azure Active Directory authorization with Service Bus, please refer to\n-[the associated documentation][aad_authorization].\n-\n ## Key concepts\n \n You can interact with the primary resource types within a Service Bus Namespace, of which multiple can exist and\n-on which actual message transmission takes place, the namespace often serving as an application container:\n-\n-* [Queue][queue_concept]: Allows for Sending and Receiving of messages, ordered first-in-first-out.  Often used for\n-point-to-point communication.\n+on which actual message transmission takes place. The namespace often serves as an application container:\n \n-* [Topic][topic_concept]: As opposed to Queues, Topics are better suited to publish/subscribe scenarios.  A topic can\n-be sent to, but requires a subscription, of which there can be multiple in parallel, to consume from.\n-\n-* [Subscription][subscription_concept]: The mechanism to consume from a Topic.  Each subscription is independent, and\n-receaves a copy of each message sent to the topic.\n+* A **[queue][queue_concept]** allows for the sending and receiving of messages, ordered first-in-first-out. It is often\n+  used for point-to-point communication.\n+* A **[topic][topic_concept]** is better suited to publisher and subscriber scenarios. A topic publishes messages to\n+  _subscriptions_, of which, multiple can exist simultaneously.\n+* A **[subscription][subscription_concept]** receives messages from a topic. Each subscription is independent and\n+  receives a copy of the message sent to the topic.\n \n ## Examples\n \n-### Create a sender or receiver using connection string\n-\n-The easiest means for doing so is to use a connection string, which is created automatically when creating an Service Bus\n-namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n-[get an Service Bus connection string][service_bus_connection_string].\n+### Send messages\n \n-Both the asynchronous and synchronous Service Bus sender and receiver clients can be created using\n-`ServiceBusClientBuilder`.The examples are explained blow.\n+You'll need to create an asynchronous [`ServiceBusSenderAsyncClient`][ServiceBusSenderAsyncClient] or a synchronous\n+[`ServiceBusSenderClient`][ServiceBusSenderClient] to send messages. Each sender can send messages to either a queue or\n+a topic.\n \n-The snippet below creates an asynchronous Service Bus sender.\n+The snippet below creates a synchronous `ServiceBusSender` to publish a message to a queue.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L28 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L65-L74 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusSenderAsyncClient sender = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .sender()\n     .queueName(\"<< QUEUE NAME >>\")\n-    .buildAsyncClient();\n+    .buildClient();\n+List<ServiceBusMessage> messages = Arrays.asList(\n+    new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+    new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA2MTMxNw=="}, "originalCommit": {"oid": "b9d660115f41a4d7d205582b4ad510cf5c24b88d"}, "originalPosition": 226}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM1NzQxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NToxMVrOGRlDcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNjoxNzoxNVrOGRv4FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NjA2NA==", "bodyText": "Why does one say receiving and the other processing?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421086064", "createdAt": "2020-05-06T20:55:11Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwNzEwMw==", "bodyText": "Grammarly told me to try another verb. LOL.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421207103", "createdAt": "2020-05-07T02:47:21Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NjA2NA=="}, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI2MzM4MQ==", "bodyText": "I would expect both the bullet points to use the same verb", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421263381", "createdAt": "2020-05-07T06:17:15Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NjA2NA=="}, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM2MTk2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NjozM1rOGRlGLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMjo1MDo1NlrOGRsgNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4Njc2NA==", "bodyText": "I thought they were missing only in the sync client right?\nAlso, \"schedule and cancel\" doesnt mean much on their own\n\nAdd missing APIs for scheduling to send messages at a later time and cancelling such scheduled messages", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421086764", "createdAt": "2020-05-06T20:56:33Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIwODExOQ==", "bodyText": "Yes, the async client is ServiceBusSenderAsyncClient", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421208119", "createdAt": "2020-05-07T02:50:56Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4Njc2NA=="}, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM2NDk4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NzoyNlrOGRlH_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NzoyNlrOGRlH_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NzIyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Add support to send a collection of messages at once\n          \n          \n            \n            - Add support to send a collection of messages at once without needing to create a `ServiceBusMessageBatch` first. This will throw an error/exception will the messages cannot fit as per batch size restrictions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421087228", "createdAt": "2020-05-06T20:57:26Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient\n+- Add support to send a collection of messages at once", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM2NjA4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1Nzo0N1rOGRlItQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1Nzo0N1rOGRlItQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NzQxMw==", "bodyText": "It would be nice if we can add a few words as to why we did so", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421087413", "createdAt": "2020-05-06T20:57:47Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient\n+- Add support to send a collection of messages at once\n+- Change return type from `ServiceBusReceivedMessage` to `ServiceBusReceivedMessageContext` when calling `receive()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM2ODYxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1ODoyN1rOGRlKIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1ODoyN1rOGRlKIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4Nzc3OA==", "bodyText": "as opposed to... ? It would also be nice to mention why we chose to do this", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421087778", "createdAt": "2020-05-06T20:58:27Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient\n+- Add support to send a collection of messages at once\n+- Change return type from `ServiceBusReceivedMessage` to `ServiceBusReceivedMessageContext` when calling `receive()`\n+- Fix message settlement to occur on receive link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM3MDM0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1ODo1NVrOGRlLKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1ODo1NVrOGRlLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4ODA0Mg==", "bodyText": "I would skip this unless there are a few that we want to call out", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421088042", "createdAt": "2020-05-06T20:58:55Z", "author": {"login": "ramya-rao-a"}, "path": "sdk/servicebus/azure-messaging-servicebus/CHANGELOG.md", "diffHunk": "@@ -1,7 +1,14 @@\n # Release History\n \n-## 7.0.0-beta.2 (Unreleased)\n-\n+## 7.0.0-beta.2 (2020-05-07)\n+\n+- Add support for receiving messages from specific sessions\n+- Add support for processing messages from multiple sessions\n+- Add missing schedule and cancel APIs in ServiceBusSenderClient\n+- Add support to send a collection of messages at once\n+- Change return type from `ServiceBusReceivedMessage` to `ServiceBusReceivedMessageContext` when calling `receive()`\n+- Fix message settlement to occur on receive link\n+- Various bug fixes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTQwOTI3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowOTozMVrOGRliOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowOTozMVrOGRliOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5Mzk0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Azure SDK for Java supports an Azure Identity package, making it simple to get credentials from the Microsoft identity\n          \n          \n            \n            Azure SDK for Java supports the Azure Identity package, making it simple to get credentials from the Microsoft identity\n          \n      \n    \n    \n  \n\n(or are these a series of packages and not just one?)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421093947", "createdAt": "2020-05-06T21:09:31Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -43,27 +44,58 @@ have to be online at the same time.\n - [Maven][maven]\n - Microsoft Azure subscription\n   - You can create a free account at: https://azure.microsoft.com\n+- Azure Service Bus instance\n+  - Step-by-step guide for [creating a Service Bus instance using Azure Portal][service_bus_create]\n \n-### Adding the package to your product\n+### Include the package\n \n [//]: # ({x-version-update-start;com.azure:azure-messaging-servicebus;current})\n ```xml\n <dependency>\n     <groupId>com.azure</groupId>\n     <artifactId>azure-messaging-servicebus</artifactId>\n-    <version>7.0.0-beta.1</version>\n+    <version>7.0.0-beta.2</version>\n </dependency>\n ```\n [//]: # ({x-version-update-end})\n \n ### Authenticate the client\n \n-For the Service Bus client library to interact with an Service Bus, it will need to understand how to connect\n-and authorize with it.\n+For the Service Bus client library to interact with Service Bus, it will need to understand how to connect and authorize\n+with it.\n+\n+#### Create Service Bus clients using a connection string\n+\n+The easiest means for doing so is to use a connection string, which automatically created when creating a Service Bus\n+namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n+[get a Service Bus connection string][service_bus_connection_string].\n+\n+Both the asynchronous and synchronous Service Bus sender and receiver clients are instantiated using\n+`ServiceBusClientBuilder`. The snippets below create a synchronous Service Bus sender and an asynchronous receiver,\n+respectively.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L29-L33 -->\n+```java\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .sender()\n+    .queueName(\"<< QUEUE NAME >>\")\n+    .buildClient();\n+```\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L40-L45 -->\n+```java\n+ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .receiver()\n+    .topicName(\"<< TOPIC NAME >>\")\n+    .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+    .buildAsyncClient();\n+```\n \n-#### Create an Service Bus client using Microsoft identity platform (formerly Azure Active Directory)\n+#### Create a Service Bus client using Microsoft Identity platform (formerly Azure Active Directory)\n \n-Azure SDK for Java supports an Azure Identity package, making it simple get credentials from Microsoft identity\n+Azure SDK for Java supports an Azure Identity package, making it simple to get credentials from the Microsoft identity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTQzMzkxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToxNjo1OFrOGRlxXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo0ODo0NlrOGRtYcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5NzgyMw==", "bodyText": "Is it worth showing how to check the context for an error?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421097823", "createdAt": "2020-05-06T21:16:58Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -100,92 +130,163 @@ ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .buildAsyncClient();\n ```\n \n-##### Service Bus Roles\n-\n-When using Azure Active Directory, your principal must be assigned a role which allows access to Service Bus, such\n-as the `Azure Service Bus Data Owner`, `Azure Service Bus Data Sender` and `Azure Service Bus Data Receiver`\n-[role][servicebus_roles].\n-For more information about using Azure Active Directory authorization with Service Bus, please refer to\n-[the associated documentation][aad_authorization].\n-\n ## Key concepts\n \n You can interact with the primary resource types within a Service Bus Namespace, of which multiple can exist and\n-on which actual message transmission takes place, the namespace often serving as an application container:\n-\n-* [Queue][queue_concept]: Allows for Sending and Receiving of messages, ordered first-in-first-out.  Often used for\n-point-to-point communication.\n+on which actual message transmission takes place. The namespace often serves as an application container:\n \n-* [Topic][topic_concept]: As opposed to Queues, Topics are better suited to publish/subscribe scenarios.  A topic can\n-be sent to, but requires a subscription, of which there can be multiple in parallel, to consume from.\n-\n-* [Subscription][subscription_concept]: The mechanism to consume from a Topic.  Each subscription is independent, and\n-receaves a copy of each message sent to the topic.\n+* A **[queue][queue_concept]** allows for the sending and receiving of messages, ordered first-in-first-out. It is often\n+  used for point-to-point communication.\n+* A **[topic][topic_concept]** is better suited to publisher and subscriber scenarios. A topic publishes messages to\n+  _subscriptions_, of which, multiple can exist simultaneously.\n+* A **[subscription][subscription_concept]** receives messages from a topic. Each subscription is independent and\n+  receives a copy of the message sent to the topic.\n \n ## Examples\n \n-### Create a sender or receiver using connection string\n-\n-The easiest means for doing so is to use a connection string, which is created automatically when creating an Service Bus\n-namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n-[get an Service Bus connection string][service_bus_connection_string].\n+### Send messages\n \n-Both the asynchronous and synchronous Service Bus sender and receiver clients can be created using\n-`ServiceBusClientBuilder`.The examples are explained blow.\n+You'll need to create an asynchronous [`ServiceBusSenderAsyncClient`][ServiceBusSenderAsyncClient] or a synchronous\n+[`ServiceBusSenderClient`][ServiceBusSenderClient] to send messages. Each sender can send messages to either a queue or\n+a topic.\n \n-The snippet below creates an asynchronous Service Bus sender.\n+The snippet below creates a synchronous `ServiceBusSender` to publish a message to a queue.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L28 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L65-L74 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusSenderAsyncClient sender = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .sender()\n     .queueName(\"<< QUEUE NAME >>\")\n-    .buildAsyncClient();\n+    .buildClient();\n+List<ServiceBusMessage> messages = Arrays.asList(\n+    new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+    new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));\n+\n+sender.send(messages);\n ```\n \n-The snippet below creates an asynchronous Service Bus receiver.\n+### Receive messages\n+\n+You'll need to create an asynchronous [`ServiceBusReceiverAsyncClient`][ServiceBusReceiverAsyncClient] or a synchronous\n+[`ServiceBusReceiverClient`][ServiceBusReceiverClient] to receive messages. Each receiver can consume messages from\n+either a queue or a topic subscription.\n+\n+#### Receive a batch of messages\n+\n+The snippet below creates a `ServiceBusReceiverClient` to receive messages from a topic subscription. It returns a batch\n+of messages when 10 messages are received or until 30 seconds have elapsed, whichever happens first.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L35-L41 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L81-L94 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .receiver()\n     .topicName(\"<< TOPIC NAME >>\")\n     .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+    .receiveMode(ReceiveMode.PEEK_LOCK)\n+    .buildClient();\n+\n+IterableStream<ServiceBusReceivedMessageContext> messages = receiver.receive(10, Duration.ofSeconds(30));\n+messages.forEach(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();\n+    System.out.printf(\"Id: %s. Contents: %s%n\", message.getMessageId(),\n+        new String(message.getBody(), StandardCharsets.UTF_8));\n+});\n+```\n+\n+#### Receive a stream of messages\n+\n+The asynchronous `ServiceBusReceiverAsyncClient` continuously fetches messages until the `subscription` is disposed.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L101-L115 -->\n+```java\n+ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .receiver()\n+    .queueName(\"<< QUEUE NAME >>\")\n     .buildAsyncClient();\n+\n+Disposable subscription = receiver.receive().subscribe(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();\n+    System.out.printf(\"Id: %s%n\", message.getMessageId());\n+    System.out.printf(\"Contents: %s%n\", new String(message.getBody(), StandardCharsets.UTF_8));\n+}, error -> {\n+        System.err.println(\"Error occurred while receiving messages: \" + error);\n+    }, () -> {\n+        System.out.println(\"Finished receiving messages.\");\n+    });\n+```\n+\n+### Settle messages\n+\n+When a message is received, it can be settled using any of the `complete()`, `abandon()`, `defer()`, or `deadLetter()`\n+overloads. The sample below completes a received message from synchronous `ServiceBusReceiverClient`.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L130-L135 -->\n+```java\n+receiver.receive(10).forEach(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 296}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMjUxNQ==", "bodyText": "It's in a sample. Not part of a mainstream scenario", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421222515", "createdAt": "2020-05-07T03:48:46Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -100,92 +130,163 @@ ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n     .buildAsyncClient();\n ```\n \n-##### Service Bus Roles\n-\n-When using Azure Active Directory, your principal must be assigned a role which allows access to Service Bus, such\n-as the `Azure Service Bus Data Owner`, `Azure Service Bus Data Sender` and `Azure Service Bus Data Receiver`\n-[role][servicebus_roles].\n-For more information about using Azure Active Directory authorization with Service Bus, please refer to\n-[the associated documentation][aad_authorization].\n-\n ## Key concepts\n \n You can interact with the primary resource types within a Service Bus Namespace, of which multiple can exist and\n-on which actual message transmission takes place, the namespace often serving as an application container:\n-\n-* [Queue][queue_concept]: Allows for Sending and Receiving of messages, ordered first-in-first-out.  Often used for\n-point-to-point communication.\n+on which actual message transmission takes place. The namespace often serves as an application container:\n \n-* [Topic][topic_concept]: As opposed to Queues, Topics are better suited to publish/subscribe scenarios.  A topic can\n-be sent to, but requires a subscription, of which there can be multiple in parallel, to consume from.\n-\n-* [Subscription][subscription_concept]: The mechanism to consume from a Topic.  Each subscription is independent, and\n-receaves a copy of each message sent to the topic.\n+* A **[queue][queue_concept]** allows for the sending and receiving of messages, ordered first-in-first-out. It is often\n+  used for point-to-point communication.\n+* A **[topic][topic_concept]** is better suited to publisher and subscriber scenarios. A topic publishes messages to\n+  _subscriptions_, of which, multiple can exist simultaneously.\n+* A **[subscription][subscription_concept]** receives messages from a topic. Each subscription is independent and\n+  receives a copy of the message sent to the topic.\n \n ## Examples\n \n-### Create a sender or receiver using connection string\n-\n-The easiest means for doing so is to use a connection string, which is created automatically when creating an Service Bus\n-namespace. If you aren't familiar with shared access policies in Azure, you may wish to follow the step-by-step guide to\n-[get an Service Bus connection string][service_bus_connection_string].\n+### Send messages\n \n-Both the asynchronous and synchronous Service Bus sender and receiver clients can be created using\n-`ServiceBusClientBuilder`.The examples are explained blow.\n+You'll need to create an asynchronous [`ServiceBusSenderAsyncClient`][ServiceBusSenderAsyncClient] or a synchronous\n+[`ServiceBusSenderClient`][ServiceBusSenderClient] to send messages. Each sender can send messages to either a queue or\n+a topic.\n \n-The snippet below creates an asynchronous Service Bus sender.\n+The snippet below creates a synchronous `ServiceBusSender` to publish a message to a queue.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L23-L28 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L65-L74 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusSenderAsyncClient sender = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .sender()\n     .queueName(\"<< QUEUE NAME >>\")\n-    .buildAsyncClient();\n+    .buildClient();\n+List<ServiceBusMessage> messages = Arrays.asList(\n+    new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+    new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));\n+\n+sender.send(messages);\n ```\n \n-The snippet below creates an asynchronous Service Bus receiver.\n+### Receive messages\n+\n+You'll need to create an asynchronous [`ServiceBusReceiverAsyncClient`][ServiceBusReceiverAsyncClient] or a synchronous\n+[`ServiceBusReceiverClient`][ServiceBusReceiverClient] to receive messages. Each receiver can consume messages from\n+either a queue or a topic subscription.\n+\n+#### Receive a batch of messages\n+\n+The snippet below creates a `ServiceBusReceiverClient` to receive messages from a topic subscription. It returns a batch\n+of messages when 10 messages are received or until 30 seconds have elapsed, whichever happens first.\n \n-<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L35-L41 -->\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L81-L94 -->\n ```java\n-String connectionString = \"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\";\n-ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n-    .connectionString(connectionString)\n+ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n     .receiver()\n     .topicName(\"<< TOPIC NAME >>\")\n     .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+    .receiveMode(ReceiveMode.PEEK_LOCK)\n+    .buildClient();\n+\n+IterableStream<ServiceBusReceivedMessageContext> messages = receiver.receive(10, Duration.ofSeconds(30));\n+messages.forEach(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();\n+    System.out.printf(\"Id: %s. Contents: %s%n\", message.getMessageId(),\n+        new String(message.getBody(), StandardCharsets.UTF_8));\n+});\n+```\n+\n+#### Receive a stream of messages\n+\n+The asynchronous `ServiceBusReceiverAsyncClient` continuously fetches messages until the `subscription` is disposed.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L101-L115 -->\n+```java\n+ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n+    .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+    .receiver()\n+    .queueName(\"<< QUEUE NAME >>\")\n     .buildAsyncClient();\n+\n+Disposable subscription = receiver.receive().subscribe(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();\n+    System.out.printf(\"Id: %s%n\", message.getMessageId());\n+    System.out.printf(\"Contents: %s%n\", new String(message.getBody(), StandardCharsets.UTF_8));\n+}, error -> {\n+        System.err.println(\"Error occurred while receiving messages: \" + error);\n+    }, () -> {\n+        System.out.println(\"Finished receiving messages.\");\n+    });\n+```\n+\n+### Settle messages\n+\n+When a message is received, it can be settled using any of the `complete()`, `abandon()`, `defer()`, or `deadLetter()`\n+overloads. The sample below completes a received message from synchronous `ServiceBusReceiverClient`.\n+\n+<!-- embedme ./src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java#L130-L135 -->\n+```java\n+receiver.receive(10).forEach(context -> {\n+    ServiceBusReceivedMessage message = context.getMessage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5NzgyMw=="}, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 296}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTQ0MTg0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToxOToyM1rOGRl2NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToxOToyM1rOGRl2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5OTA2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [servicebus_messsaging_exceptions]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-exceptions\n          \n          \n            \n            [servicebus_messaging_exceptions]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-exceptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421099060", "createdAt": "2020-05-06T21:19:23Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/README.md", "diffHunk": "@@ -224,66 +325,40 @@ services. When an AMQP exception is thrown, examining the error condition field\n exception occurred and if possible, how to mitigate this exception. A list of all the AMQP exceptions can be found in\n [OASIS AMQP Version 1.0 Transport Errors][oasis_amqp_v1_error].\n \n-The [`AmqpErrorContext`][AmqpErrorContext] in the [`AmqpException`][AmqpException] provides information about the AMQP\n-session, link, or connection that the exception occurred in. This is useful to diagnose which level in the transport\n-this exception occurred at and whether it was an issue in one of the producers or consumers.\n-\n-#### Operation cancelled exception\n-\n-It occurs when the underlying AMQP layer encounters an abnormal link abort or the connection is disconnected in an\n-unexpected fashion. It is recommended to attempt to verify the current state and retry if necessary.\n-\n-### Handling transient AMQP exceptions\n-\n-If a transient AMQP exception occurs, the client library retries the operation as many times as the\n-[AmqpRetryOptions][AmqpRetryOptions] allows. Afterwards, the operation fails and an exception is propagated back to the\n-user.\n-\n-### Default SSL library\n-\n-All client libraries, by default, use the Tomcat-native Boring SSL library to enable native-level performance for SSL\n-operations. The Boring SSL library is an uber jar containing native libraries for Linux / macOS / Windows, and provides\n-better performance compared to the default SSL implementation within the JDK. For more information, including how to\n-reduce the dependency size, refer to the [performance tuning][performance_tuning] section of the wiki.\n+The recommended way to solve the specific exception the AMQP exception represents is to follow the\n+[Service Bus Messaging Exceptions][servicebus_messaging_exceptions] guidance.\n \n ## Next steps\n \n Beyond those discussed, the Azure Service Bus client library offers support for many additional scenarios to help take\n-advantage of the full feature set of the Azure Service Bus service. In order to help explore some of the these scenarios,\n-the following set of sample is available [here][samples_readme].\n+advantage of the full feature set of the Azure Service Bus service. In order to help explore some of these scenarios,\n+check out the [samples README][samples_readme].\n \n ## Contributing\n \n If you would like to become an active contributor to this project please refer to our [Contribution\n-Guidelines](./CONTRIBUTING.md) for more information.\n+Guidelines](./../../../CONTRIBUTING.md) for more information.\n \n <!-- Links -->\n [aad_authorization]: https://docs.microsoft.com/azure/service-bus-messaging/authenticate-application\n [amqp_transport_error]: https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-amqp-error\n [AmqpErrorCondition]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorCondition.java\n-[AmqpErrorContext]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpErrorContext.java\n-[AmqpException]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpException.java\n [api_documentation]: https://aka.ms/java-docs\n-[app_registration_page]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#get-values-for-signing-in\n-[application_client_secret]: https://docs.microsoft.com/azure/active-directory/develop/howto-create-service-principal-portal#create-a-new-application-secret\n [java_8_sdk_javadocs]: https://docs.oracle.com/javase/8/docs/api/java/util/logging/package-summary.html\n-[LogLevels]: ../../core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java\n+[logging]: https://github.com/Azure/azure-sdk-for-java/wiki/Logging-with-Azure-SDK\n [maven]: https://maven.apache.org/\n+[message-sessions]: https://docs.microsoft.com/azure/service-bus-messaging/message-sessions\n [oasis_amqp_v1_error]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-error\n [oasis_amqp_v1]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-overview-v1.0-os.html\n-[performance_tuning]: https://github.com/Azure/azure-sdk-for-java/wiki/Performance-Tuning\n+[product_docs]: https://docs.microsoft.com/azure/service-bus-messaging\n [qpid_proton_j_apache]: http://qpid.apache.org/proton/\n [queue_concept]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-overview#queues\n [RetryOptions]: ../../core/azure-core-amqp/src/main/java/com/azure/core/amqp/AmqpRetryOptions.java\n-[sample_readme]: ./src/samples/README.md\n-[sample-receive-async-aad-message]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAzureIdentityAsyncSample.java\n-[sample-receive-async-message]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAsyncSample.java\n-[sample-receive-message-and-settle]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageAndSettleAsyncSample.java\n-[sample-receive-message-synchronously]: ./src/samples/java/com/azure/messaging/servicebus/ReceiveMessageSyncSample.java\n-[sample-send-async-aad-message]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageWithAzureIdentityAsyncSample.java\n-[sample-send-async-message]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageAsyncSample.java\n-[sample-send-batch-messages]: ./src/samples/java/com/azure/messaging/servicebus/SendMessageBatchSyncSample.java\n+[sample_examples]: ./src/samples/java/com/azure/messaging/servicebus/\n+[samples_readme]: ./src/samples/README.md\n [service_bus_connection_string]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-create-namespace-portal#get-the-connection-string\n+[servicebus_create]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-create-namespace-portal\n+[servicebus_messsaging_exceptions]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-exceptions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 453}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTQ2NTYwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToyNzowMFrOGRmE6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMToyNzowMFrOGRmE6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwMjgyNA==", "bodyText": "might be true? :) I mean, it's unnamed so it's whatever the next available session is.\nNot sure if this is a copy/paste error or not but it might warrant some explanatory text either way.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10837#discussion_r421102824", "createdAt": "2020-05-06T21:27:00Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReadmeSamples.java", "diffHunk": "@@ -55,19 +59,118 @@ public void createAsynchronousServiceBusReceiverWithAzureIdentity() {\n     }\n \n     /**\n-     * Code sample for creating an asynchronous Service Bus receiver using Aad.\n+     * Sends messages to a queue.\n      */\n-    public void createAsynchronousServiceBusReceiverWithAad() {\n-        ClientSecretCredential credential = new ClientSecretCredentialBuilder()\n-            .clientId(\"<< APPLICATION (CLIENT) ID >>\")\n-            .clientSecret(\"<< APPLICATION SECRET >>\")\n-            .tenantId(\"<< TENANT ID >>\")\n-            .build();\n+    public void sendMessage() {\n+        ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+            .sender()\n+            .queueName(\"<< QUEUE NAME >>\")\n+            .buildClient();\n+        List<ServiceBusMessage> messages = Arrays.asList(\n+            new ServiceBusMessage(\"Hello world\".getBytes()).setMessageId(\"1\"),\n+            new ServiceBusMessage(\"Bonjour\".getBytes()).setMessageId(\"2\"));\n+\n+        sender.send(messages);\n+    }\n+\n+    /**\n+     * Receives messages from a topic and subscription.\n+     */\n+    public void receiveMessages() {\n+        ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+            .receiver()\n+            .topicName(\"<< TOPIC NAME >>\")\n+            .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+            .receiveMode(ReceiveMode.PEEK_LOCK)\n+            .buildClient();\n \n+        IterableStream<ServiceBusReceivedMessageContext> messages = receiver.receive(10, Duration.ofSeconds(30));\n+        messages.forEach(context -> {\n+            ServiceBusReceivedMessage message = context.getMessage();\n+            System.out.printf(\"Id: %s. Contents: %s%n\", message.getMessageId(),\n+                new String(message.getBody(), StandardCharsets.UTF_8));\n+        });\n+    }\n+\n+    /**\n+     * Receives messages asynchronously.\n+     */\n+    public void receiveMessagesAsync() {\n         ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n-            .credential(\"<<fully-qualified-namespace>>\", credential)\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n             .receiver()\n-            .queueName(\"<<queue-name>>\")\n+            .queueName(\"<< QUEUE NAME >>\")\n+            .buildAsyncClient();\n+\n+        Disposable subscription = receiver.receive().subscribe(context -> {\n+            ServiceBusReceivedMessage message = context.getMessage();\n+            System.out.printf(\"Id: %s%n\", message.getMessageId());\n+            System.out.printf(\"Contents: %s%n\", new String(message.getBody(), StandardCharsets.UTF_8));\n+        }, error -> {\n+                System.err.println(\"Error occurred while receiving messages: \" + error);\n+            }, () -> {\n+                System.out.println(\"Finished receiving messages.\");\n+            });\n+    }\n+\n+    /**\n+     * Complete a message.\n+     */\n+    public void completeMessage() {\n+        ServiceBusReceiverClient receiver = new ServiceBusClientBuilder()\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+            .receiver()\n+            .topicName(\"<< TOPIC NAME >>\")\n+            .subscriptionName(\"<< SUBSCRIPTION NAME >>\")\n+            .receiveMode(ReceiveMode.PEEK_LOCK)\n+            .buildClient();\n+\n+        receiver.receive(10).forEach(context -> {\n+            ServiceBusReceivedMessage message = context.getMessage();\n+\n+            // Process message and then complete it.\n+            receiver.complete(message);\n+        });\n+    }\n+\n+    /**\n+     * Create a session message.\n+     */\n+    public void createSessionMessage() {\n+        ServiceBusSenderClient sender = new ServiceBusClientBuilder()\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+            .sender()\n+            .queueName(\"<< QUEUE NAME >>\")\n+            .buildClient();\n+\n+        ServiceBusMessage message = new ServiceBusMessage(\"Hello world\".getBytes())\n+            .setSessionId(\"greetings\");\n+\n+        sender.send(message);\n+    }\n+\n+    /**\n+     * Create session receiver for \"greetings\"\n+     */\n+    public void namedSessionReceiver() {\n+        ServiceBusReceiverAsyncClient receiver = new ServiceBusClientBuilder()\n+            .connectionString(\"<< CONNECTION STRING FOR THE SERVICE BUS NAMESPACE >>\")\n+            .sessionReceiver()\n+            .queueName(\"<< QUEUE NAME >>\")\n+            .sessionId(\"greetings\")\n+            .buildAsyncClient();\n+    }\n+\n+    /**\n+     * Create session receiver for \"greetings\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8218e52b76f3aee91ed1ca56017289904b96c715"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4365, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}