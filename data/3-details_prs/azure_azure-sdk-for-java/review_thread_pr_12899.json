{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTc2Mjk5", "number": 12899, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNToyNzozNlrOEMvv8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNToyNzozNlrOEMvv8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODAwNjg4OnYy", "diffSide": "RIGHT", "path": "sdk/management/docs/DESIGN_PREVIEW.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNToyNzozNlrOGvCJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNTo1MDoyNVrOGvqpiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk3MTUzNQ==", "bodyText": "it's little confusing the method name and return type is using different term: Accepted and Activation. Is there better names? Same confusing on Class name. I can see Accepted from httpstatus code, will it be good such as beginCreateResult or beginLROResult etc?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12899#discussion_r451971535", "createdAt": "2020-07-09T05:27:36Z", "author": {"login": "yungezz"}, "path": "sdk/management/docs/DESIGN_PREVIEW.md", "diffHunk": "@@ -0,0 +1,54 @@\n+# Design for Azure Management Libraries for Java (Preview)\n+\n+## Fluent interface\n+\n+### Fine control over long-running operation\n+\n+Resource provision takes time, a typical solution adopted by Azure services is the [long-running operation (LRO)][lro].\n+\n+Fluent interface does the polling operations in background, and only returns the final result.\n+\n+Azure Management Libraries supports fine control over the polling for certain important resources, via `Accepted` and `SyncPoller` class. Method verb is `beginCreate` and `beginDelete`.\n+\n+`Accepted` class provides following functionalities:\n+- `ActivationResponse` via `getAcceptedResult` method provides the response of the first activation operation. Note that though it wraps a resource instance, some action on this resource instance will not work, since it is not provisioned yet.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "244b6a761461abf08820b70cd325aa84b7b7df85"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxOTE1NQ==", "bodyText": "ActivationResponse extends SimpleResponse which implements Response, hence named as Response.\nActivation is mostly from here https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core/src/main/java/com/azure/core/util/polling/PollerFlux.java#L58-L61\nMaybe I can change the method to getActivationResponse.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12899#discussion_r452019155", "createdAt": "2020-07-09T07:30:57Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/management/docs/DESIGN_PREVIEW.md", "diffHunk": "@@ -0,0 +1,54 @@\n+# Design for Azure Management Libraries for Java (Preview)\n+\n+## Fluent interface\n+\n+### Fine control over long-running operation\n+\n+Resource provision takes time, a typical solution adopted by Azure services is the [long-running operation (LRO)][lro].\n+\n+Fluent interface does the polling operations in background, and only returns the final result.\n+\n+Azure Management Libraries supports fine control over the polling for certain important resources, via `Accepted` and `SyncPoller` class. Method verb is `beginCreate` and `beginDelete`.\n+\n+`Accepted` class provides following functionalities:\n+- `ActivationResponse` via `getAcceptedResult` method provides the response of the first activation operation. Note that though it wraps a resource instance, some action on this resource instance will not work, since it is not provisioned yet.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk3MTUzNQ=="}, "originalCommit": {"oid": "244b6a761461abf08820b70cd325aa84b7b7df85"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYzNTAxOQ==", "bodyText": "Renamed to getActivationResponse", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12899#discussion_r452635019", "createdAt": "2020-07-10T05:50:25Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/management/docs/DESIGN_PREVIEW.md", "diffHunk": "@@ -0,0 +1,54 @@\n+# Design for Azure Management Libraries for Java (Preview)\n+\n+## Fluent interface\n+\n+### Fine control over long-running operation\n+\n+Resource provision takes time, a typical solution adopted by Azure services is the [long-running operation (LRO)][lro].\n+\n+Fluent interface does the polling operations in background, and only returns the final result.\n+\n+Azure Management Libraries supports fine control over the polling for certain important resources, via `Accepted` and `SyncPoller` class. Method verb is `beginCreate` and `beginDelete`.\n+\n+`Accepted` class provides following functionalities:\n+- `ActivationResponse` via `getAcceptedResult` method provides the response of the first activation operation. Note that though it wraps a resource instance, some action on this resource instance will not work, since it is not provisioned yet.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk3MTUzNQ=="}, "originalCommit": {"oid": "244b6a761461abf08820b70cd325aa84b7b7df85"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3655, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}