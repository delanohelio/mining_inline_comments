{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NTI5NzEz", "number": 14162, "title": "Bug: BasuAuthorizationProvider credential update/refresh", "bodyText": "Current implementation update the keys of the in-use instance on the fly with un-desired results.\nFix is implemented to have this mechanism in a consistent way which results in mutating the macInstance.\nAlso quick question: Won't AzureCredentials.Key needs to be volatile?", "createdAt": "2020-08-17T01:17:38Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162", "merged": true, "mergeCommit": {"oid": "19b8554feacf5ce28bf3de054a907b44644eff75"}, "closed": true, "closedAt": "2020-08-19T17:15:24Z", "author": {"login": "kirankumarkolli"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_n688AH2gAyNDY4NTI5NzEzOjk4ZjczZjM2ZmQwY2FlNzZmMTQ4ODI1Yzk5M2E4ZjE2ZTE3NjQyOWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAc_wcgFqTQ3MDU1MTA1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "98f73f36fd0cae76f148825c993a8f16e176429d", "author": {"user": {"login": "kirankumarkolli", "name": "Kiran Kumar Kolli"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/98f73f36fd0cae76f148825c993a8f16e176429d", "committedDate": "2020-08-17T01:14:00Z", "message": "BasuAuthorizationProvider credential update/refresh bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80e7385faea38c023a4ab0048de9bd0e6e6b1ccb", "author": {"user": {"login": "kirankumarkolli", "name": "Kiran Kumar Kolli"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80e7385faea38c023a4ab0048de9bd0e6e6b1ccb", "committedDate": "2020-08-17T01:33:06Z", "message": "Always fall back the cached instance part."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzQ1MjA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#pullrequestreview-468745208", "createdAt": "2020-08-17T18:43:07Z", "commit": {"oid": "80e7385faea38c023a4ab0048de9bd0e6e6b1ccb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50c2f1c66b50127eb853e81600386db60d3ebec7", "author": {"user": {"login": "kirankumarkolli", "name": "Kiran Kumar Kolli"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/50c2f1c66b50127eb853e81600386db60d3ebec7", "committedDate": "2020-08-17T18:49:55Z", "message": "Merge branch 'master' into users/kirankk/credential_change_fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzUyNDYw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#pullrequestreview-468752460", "createdAt": "2020-08-17T18:54:32Z", "commit": {"oid": "50c2f1c66b50127eb853e81600386db60d3ebec7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo1NDozMlrOHB29IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo1NDozMlrOHB29IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxMTAwOQ==", "bodyText": "I am concerned about this synchronized code piece, since this will be called on every request. My concern is this will slow down things.\nDo we need synchronized block here even though credential is volatile now ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#discussion_r471711009", "createdAt": "2020-08-17T18:54:32Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/BaseAuthorizationTokenProvider.java", "diffHunk": "@@ -203,25 +202,28 @@ private Mac getMacInstance() {\n \n         //  Master key has changed, or this is the first time we are getting mac instance\n         if (masterKeyLatestHashCode != this.masterKeyHashCode) {\n-            byte[] masterKeyBytes = this.credential.getKey().getBytes(StandardCharsets.UTF_8);\n-            byte[] masterKeyDecodedBytes = Utils.Base64Decoder.decode(masterKeyBytes);\n-            SecretKey signingKey = new SecretKeySpec(masterKeyDecodedBytes, \"HMACSHA256\");\n-            try {\n-                Mac macInstance = Mac.getInstance(\"HMACSHA256\");\n-                macInstance.init(signingKey);\n-                //  Update the master key hash code\n-                this.masterKeyHashCode = masterKeyLatestHashCode;\n-                return macInstance;\n-            } catch (NoSuchAlgorithmException | InvalidKeyException e) {\n-                throw new IllegalStateException(e);\n-            }\n-        } else {\n-            //  Master key hasn't changed, return the cloned mac instance\n-            try {\n-                return (Mac)this.macInstance.clone();\n-            } catch (CloneNotSupportedException e) {\n-                throw new IllegalStateException(e);\n+            synchronized (this.credential) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c2f1c66b50127eb853e81600386db60d3ebec7"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMDk2MTMy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#pullrequestreview-470096132", "createdAt": "2020-08-19T03:16:51Z", "commit": {"oid": "50c2f1c66b50127eb853e81600386db60d3ebec7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzoxNjo1MVrOHCvQsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzoxNjo1MVrOHCvQsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYzMzUyMw==", "bodyText": "Yes, that is correct assumption. We can proceed with this PR. looks good to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#discussion_r472633523", "createdAt": "2020-08-19T03:16:51Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/BaseAuthorizationTokenProvider.java", "diffHunk": "@@ -203,25 +202,28 @@ private Mac getMacInstance() {\n \n         //  Master key has changed, or this is the first time we are getting mac instance\n         if (masterKeyLatestHashCode != this.masterKeyHashCode) {\n-            byte[] masterKeyBytes = this.credential.getKey().getBytes(StandardCharsets.UTF_8);\n-            byte[] masterKeyDecodedBytes = Utils.Base64Decoder.decode(masterKeyBytes);\n-            SecretKey signingKey = new SecretKeySpec(masterKeyDecodedBytes, \"HMACSHA256\");\n-            try {\n-                Mac macInstance = Mac.getInstance(\"HMACSHA256\");\n-                macInstance.init(signingKey);\n-                //  Update the master key hash code\n-                this.masterKeyHashCode = masterKeyLatestHashCode;\n-                return macInstance;\n-            } catch (NoSuchAlgorithmException | InvalidKeyException e) {\n-                throw new IllegalStateException(e);\n-            }\n-        } else {\n-            //  Master key hasn't changed, return the cloned mac instance\n-            try {\n-                return (Mac)this.macInstance.clone();\n-            } catch (CloneNotSupportedException e) {\n-                throw new IllegalStateException(e);\n+            synchronized (this.credential) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcxMTAwOQ=="}, "originalCommit": {"oid": "50c2f1c66b50127eb853e81600386db60d3ebec7"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ec84de60d1c1e0ce3940fd94914be7c2ed68cb", "author": {"user": {"login": "kirankumarkolli", "name": "Kiran Kumar Kolli"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/30ec84de60d1c1e0ce3940fd94914be7c2ed68cb", "committedDate": "2020-08-19T09:18:15Z", "message": "Little more refractoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca56f96945f53384c856c81d08519694754251c1", "author": {"user": {"login": "kirankumarkolli", "name": "Kiran Kumar Kolli"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ca56f96945f53384c856c81d08519694754251c1", "committedDate": "2020-08-19T09:19:01Z", "message": "Merge branch 'master' into users/kirankk/credential_change_fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTUxMDUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#pullrequestreview-470551050", "createdAt": "2020-08-19T15:04:11Z", "commit": {"oid": "ca56f96945f53384c856c81d08519694754251c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTowNDoxM1rOHDLtvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTowNDoxM1rOHDLtvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5OTcwOA==", "bodyText": "what is the benefit of using ReentrantLock here?\nkey rotation doesn't happen often and this adds a bit to complexity.\nWhy aren't we simply using synchronized?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14162#discussion_r473099708", "createdAt": "2020-08-19T15:04:13Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/BaseAuthorizationTokenProvider.java", "diffHunk": "@@ -198,32 +200,51 @@ public String getAuthorizationTokenUsingResourceTokens(Map<String, String> resou\n     }\n \n     private Mac getMacInstance() {\n+        reInitializeIfPossible();\n+\n+        try {\n+            return (Mac)this.macInstance.clone();\n+        } catch (CloneNotSupportedException e) {\n+            throw new IllegalStateException(e);\n+        }\n+    }\n+\n+    /*\n+     * Ensures that this.macInstance is initialized\n+     * In-case of credential change, optimistically will try to refresh the macInstance\n+     *\n+     * Implementation is non-blocking, the one which acquire the lock will try to refresh\n+     * with new credentials\n+     *\n+     * NOTE: Calling it CTOR ensured that default is initialized.\n+     */\n+    private void reInitializeIfPossible() {\n         int masterKeyLatestHashCode = this.credential.getKey().hashCode();\n \n         //  Master key has changed, or this is the first time we are getting mac instance\n         if (masterKeyLatestHashCode != this.masterKeyHashCode) {\n-            synchronized (this.credential) {\n-                if (masterKeyLatestHashCode != this.masterKeyHashCode) {\n-                    byte[] masterKeyBytes = this.credential.getKey().getBytes(StandardCharsets.UTF_8);\n-                    byte[] masterKeyDecodedBytes = Utils.Base64Decoder.decode(masterKeyBytes);\n-                    SecretKey signingKey = new SecretKeySpec(masterKeyDecodedBytes, \"HMACSHA256\");\n-                    try {\n-                        Mac macInstance = Mac.getInstance(\"HMACSHA256\");\n-                        macInstance.init(signingKey);\n-                        //  Update the master key hash code\n-                        this.masterKeyHashCode = masterKeyLatestHashCode;\n-                        this.macInstance = macInstance;\n-                    } catch (NoSuchAlgorithmException | InvalidKeyException e) {\n-                        throw new IllegalStateException(e);\n+            // Try to acquire the lock, the one who got lock will try to refresh the macInstance\n+            boolean lockAcquired = this.macInstanceLock.tryLock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca56f96945f53384c856c81d08519694754251c1"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 402, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}