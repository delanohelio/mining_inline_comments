{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjUwODUz", "number": 17025, "title": "Non markable is on buffered upload", "bodyText": "This PR allows customers to pass a non-markable InputStream to BlobClient.upload when it would previously throw an UnsupportedOperationException. This method uses buffered upload, so it does not rely on the marking/resetting of the stream the way simple uploads do. Furthermore, it is meant to be a general purpose upload, and v8 also supports nonmarkable streams in this case.", "createdAt": "2020-10-30T19:52:58Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025", "merged": true, "mergeCommit": {"oid": "9e152f81f3d45a4ebbf1904e6ce5946ac46963d0"}, "closed": true, "closedAt": "2020-11-02T22:16:22Z", "author": {"login": "rickle-msft"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXFxPQAH2gAyNTEzMjUwODUzOjU3MDQ2NjNkZDQyODQyNWU2ZWQ3NGNjM2JhODk1NjNmMTQ5NjZhNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYpqxxgH2gAyNTEzMjUwODUzOjU5NTIyYWZlZWU1YTlhNzMxZDZiNTg1OGNkNTRkYjQ1YWNlYzcyY2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5704663dd428425e6ed74cc3ba89563f14966a6c", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5704663dd428425e6ed74cc3ba89563f14966a6c", "committedDate": "2020-10-28T23:00:48Z", "message": "Added change for nonMarkable is on buffered upload"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/158db394c28ab6691f92086bd10754b8b6a64def", "committedDate": "2020-10-30T19:45:28Z", "message": "Added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTkxNDY1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-520991465", "createdAt": "2020-10-30T19:53:21Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1MzoyMlrOHreIxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1MzoyMlrOHreIxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDU4Mw==", "bodyText": "This should be false", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515344583", "createdAt": "2020-10-30T19:53:22Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -294,7 +294,7 @@\n             final Map<String, String> metadataFinal = options.getMetadata() == null\n                 ? new HashMap<>() : options.getMetadata();\n             Flux<ByteBuffer> data = options.getDataFlux() == null ? Utility.convertStreamToByteBuffer(\n-                options.getDataStream(), options.getLength(), BLOB_DEFAULT_UPLOAD_BLOCK_SIZE)\n+                options.getDataStream(), options.getLength(), BLOB_DEFAULT_UPLOAD_BLOCK_SIZE, true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTkyMTEz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-520992113", "createdAt": "2020-10-30T19:54:27Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDoyN1rOHreKqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDoyN1rOHreKqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NTA2NA==", "bodyText": "Should be false", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515345064", "createdAt": "2020-10-30T19:54:27Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/DataLakeFileAsyncClient.java", "diffHunk": "@@ -318,7 +318,7 @@ public String getFileName() {\n             Flux<ByteBuffer> data = options.getDataFlux() == null ? Utility.convertStreamToByteBuffer(\n                 options.getDataStream(), options.getLength(),\n                 // We can only buffer up to max int due to restrictions in ByteBuffer.\n-                (int) Math.min(Integer.MAX_VALUE, validatedParallelTransferOptions.getBlockSizeLong()))\n+                (int) Math.min(Integer.MAX_VALUE, validatedParallelTransferOptions.getBlockSizeLong()), true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTkyMzQ5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-520992349", "createdAt": "2020-10-30T19:54:51Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDo1MlrOHreLUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDo1MlrOHreLUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NTIzNQ==", "bodyText": "Should add a test for this", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515345235", "createdAt": "2020-10-30T19:54:52Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/DataLakeFileClient.java", "diffHunk": "@@ -341,7 +341,7 @@ public void append(InputStream data, long fileOffset, long length) {\n \n         Objects.requireNonNull(data);\n         Flux<ByteBuffer> fbb = Utility.convertStreamToByteBuffer(data, length,\n-            BlobAsyncClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE);\n+            BlobAsyncClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTkyNTMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-520992533", "createdAt": "2020-10-30T19:55:12Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NToxMlrOHreL5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NToxMlrOHreL5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NTM4MQ==", "bodyText": "Should add a test for this", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515345381", "createdAt": "2020-10-30T19:55:12Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileClient.java", "diffHunk": "@@ -971,7 +971,7 @@ public ShareFileUploadInfo upload(InputStream data, long length) {\n     public Response<ShareFileUploadInfo> uploadWithResponse(InputStream data, long length, Long offset,\n         ShareRequestConditions requestConditions, Duration timeout, Context context) {\n         return StorageImplUtils.blockWithOptionalTimeout(shareFileAsyncClient.uploadWithResponse(Utility\n-                .convertStreamToByteBuffer(data, length, (int) ShareFileAsyncClient.FILE_DEFAULT_BLOCK_SIZE),\n+                .convertStreamToByteBuffer(data, length, (int) ShareFileAsyncClient.FILE_DEFAULT_BLOCK_SIZE, true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDEwNzU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-521010758", "createdAt": "2020-10-30T20:26:44Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyNjo0NFrOHrfAqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyNjo0NFrOHrfAqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1ODg5MQ==", "bodyText": "Can you also make sure the extra length tests get in datalake too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515358891", "createdAt": "2020-10-30T20:26:44Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/specialized/BlockBlobAPITest.groovy", "diffHunk": "@@ -1433,10 +1471,43 @@ class BlockBlobAPITest extends APISpec {\n \n         where:\n         dataSizeList                         | blockCount\n+        [10, 100, 1000, 10000]               | 0\n         [4 * Constants.MB + 1, 10]           | 2\n         [4 * Constants.MB, 4 * Constants.MB] | 2\n     }\n \n+    @Unroll\n+    @Requires({ liveMode() })\n+    def \"Buffered upload sync handle pathing with transient failure\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDEwODI4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-521010828", "createdAt": "2020-10-30T20:26:52Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDU0Nzk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-521054797", "createdAt": "2020-10-30T21:48:34Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMTo0ODozNFrOHrhYNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMTo0ODozNFrOHrhYNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5NzY4NA==", "bodyText": "Given this is a public API should make this a new overload and have the previous method pass the default case which appears to be true.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#discussion_r515397684", "createdAt": "2020-10-30T21:48:34Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -220,22 +220,30 @@ public static OffsetDateTime parseDate(String dateString) {\n      * @param data The input data which needs to convert to ByteBuffer.\n      * @param length The expected input data length.\n      * @param blockSize The size of each ByteBuffer.\n+     * @param markAndReset Whether the stream needs to be marked and reset. This should generally always be true to\n+     * support retries. It is false in the case of buffered upload to support non markable streams because buffered\n+     * upload uses its own mechanisms to support retries.\n      * @return {@link ByteBuffer} which contains the input data.\n      * @throws UnexpectedLengthException when input data length mismatch input length.\n      * @throws RuntimeException When I/O error occurs.\n      */\n-    public static Flux<ByteBuffer> convertStreamToByteBuffer(InputStream data, long length, int blockSize) {\n-        data.mark(Integer.MAX_VALUE);\n+    public static Flux<ByteBuffer> convertStreamToByteBuffer(InputStream data, long length, int blockSize,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDU4NjI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17025#pullrequestreview-521058625", "createdAt": "2020-10-30T21:58:20Z", "commit": {"oid": "158db394c28ab6691f92086bd10754b8b6a64def"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3c3cabb368b51d208634899dfcbef5a5abe743b", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a3c3cabb368b51d208634899dfcbef5a5abe743b", "committedDate": "2020-10-30T23:23:19Z", "message": "PR feedback and more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd28b8955e41f0c8694f69c211781353ae1b096", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2bd28b8955e41f0c8694f69c211781353ae1b096", "committedDate": "2020-11-02T18:22:10Z", "message": "Added missing recording file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59522afeee5a9a731d6b5858cd54db45acec72cd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59522afeee5a9a731d6b5858cd54db45acec72cd", "committedDate": "2020-11-02T19:24:15Z", "message": "Added missing recording"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1615, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}