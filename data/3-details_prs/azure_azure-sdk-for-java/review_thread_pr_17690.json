{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MjI1Njg2", "number": 17690, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDo1NzozNlrOE7UZdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDo1NzozNlrOE7UZdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjM1NjM5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-netty/src/main/java/com/azure/core/http/netty/implementation/ReadTimeoutHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMDo1NzozNlrOH25cEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1ODo0OVrOH3dGRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMyNjIyNA==", "bodyText": "Why is this check required? Can this method be called multiple times? If yes, what's the impact of trying to close the context each time?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17690#discussion_r527326224", "createdAt": "2020-11-20T00:57:36Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-netty/src/main/java/com/azure/core/http/netty/implementation/ReadTimeoutHandler.java", "diffHunk": "@@ -65,6 +66,10 @@ private void readTimeoutRunnable(ChannelHandlerContext ctx) {\n         }\n \n         // No progress has been made since the last timeout event, channel has timed out.\n-        ctx.fireExceptionCaught(new TimeoutException(String.format(READ_TIMED_OUT_MESSAGE, timeoutMillis)));\n+        if (!closed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b474fa01e1dabaa6d9857238e9edda115e617892"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg4NTc2NQ==", "bodyText": "The check is there to ensure that we don't fire the exception multiple times. As for what happens if close is called multiple times I am not certain and can take a look into this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17690#discussion_r527885765", "createdAt": "2020-11-20T18:11:25Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-http-netty/src/main/java/com/azure/core/http/netty/implementation/ReadTimeoutHandler.java", "diffHunk": "@@ -65,6 +66,10 @@ private void readTimeoutRunnable(ChannelHandlerContext ctx) {\n         }\n \n         // No progress has been made since the last timeout event, channel has timed out.\n-        ctx.fireExceptionCaught(new TimeoutException(String.format(READ_TIMED_OUT_MESSAGE, timeoutMillis)));\n+        if (!closed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMyNjIyNA=="}, "originalCommit": {"oid": "b474fa01e1dabaa6d9857238e9edda115e617892"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMDQ3MQ==", "bodyText": "Looked into the safety of calling close multiple times and the answer is unknown as this will trigger the close handler for other handlers, so it would be dependent on the configuration of the Netty pipeline. In our default instance it is safe to call multiple times but that isn't a guarantee.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17690#discussion_r527910471", "createdAt": "2020-11-20T18:58:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-http-netty/src/main/java/com/azure/core/http/netty/implementation/ReadTimeoutHandler.java", "diffHunk": "@@ -65,6 +66,10 @@ private void readTimeoutRunnable(ChannelHandlerContext ctx) {\n         }\n \n         // No progress has been made since the last timeout event, channel has timed out.\n-        ctx.fireExceptionCaught(new TimeoutException(String.format(READ_TIMED_OUT_MESSAGE, timeoutMillis)));\n+        if (!closed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMyNjIyNA=="}, "originalCommit": {"oid": "b474fa01e1dabaa6d9857238e9edda115e617892"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2775, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}