{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTE2MjE5", "number": 11205, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NDo1OFrOD80rkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODoxNDoxN1rOEAnslQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTA0MjcyOnYy", "diffSide": "LEFT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NDo1OFrOGV_1XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NDo1OFrOGV_1XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxOTEzMw==", "bodyText": "remove apiVersion setter", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r425719133", "createdAt": "2020-05-15T10:44:58Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "diffHunk": "@@ -52,17 +52,6 @@ public StorageManagementClientBuilder host(String host) {\n      */\n     private String apiVersion;\n \n-    /**\n-     * Sets Api Version.\n-     *\n-     * @param apiVersion the apiVersion value.\n-     * @return the StorageManagementClientBuilder.\n-     */\n-    public StorageManagementClientBuilder apiVersion(String apiVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adee25a187df81660e6d6f5e6ddae4940e58069"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTA0NDA5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NToyNlrOGV_2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NToyNlrOGV_2QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxOTM2MQ==", "bodyText": "Make these package private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r425719361", "createdAt": "2020-05-15T10:45:26Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "diffHunk": "@@ -0,0 +1,365 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.management.storage;\n+\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.management.AzureServiceClient;\n+import com.azure.management.storage.inner.BlobContainersClient;\n+import com.azure.management.storage.inner.BlobServicesClient;\n+import com.azure.management.storage.inner.EncryptionScopesClient;\n+import com.azure.management.storage.inner.FileServicesClient;\n+import com.azure.management.storage.inner.FileSharesClient;\n+import com.azure.management.storage.inner.ManagementPoliciesClient;\n+import com.azure.management.storage.inner.ObjectReplicationPoliciesOperationsClient;\n+import com.azure.management.storage.inner.OperationsClient;\n+import com.azure.management.storage.inner.PrivateEndpointConnectionsClient;\n+import com.azure.management.storage.inner.PrivateLinkResourcesClient;\n+import com.azure.management.storage.inner.QueueServicesClient;\n+import com.azure.management.storage.inner.QueuesClient;\n+import com.azure.management.storage.inner.SkusClient;\n+import com.azure.management.storage.inner.StorageAccountsClient;\n+import com.azure.management.storage.inner.TableServicesClient;\n+import com.azure.management.storage.inner.TablesClient;\n+import com.azure.management.storage.inner.UsagesClient;\n+\n+/** Initializes a new instance of the StorageManagementClient type. */\n+public final class StorageManagementClient extends AzureServiceClient {\n+    private final ClientLogger logger = new ClientLogger(StorageManagementClient.class);\n+\n+    /** The ID of the target subscription. */\n+    private String subscriptionId;\n+\n+    /**\n+     * Gets The ID of the target subscription.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    public String getSubscriptionId() {\n+        return this.subscriptionId;\n+    }\n+\n+    /**\n+     * Sets The ID of the target subscription.\n+     *\n+     * @param subscriptionId the subscriptionId value.\n+     * @return the service client itself.\n+     */\n+    StorageManagementClient setSubscriptionId(String subscriptionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adee25a187df81660e6d6f5e6ddae4940e58069"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTA0NDU1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NTozN1rOGV_2kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NTozN1rOGV_2kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxOTQ0MQ==", "bodyText": "package private", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r425719441", "createdAt": "2020-05-15T10:45:37Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "diffHunk": "@@ -0,0 +1,365 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.management.storage;\n+\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.management.AzureServiceClient;\n+import com.azure.management.storage.inner.BlobContainersClient;\n+import com.azure.management.storage.inner.BlobServicesClient;\n+import com.azure.management.storage.inner.EncryptionScopesClient;\n+import com.azure.management.storage.inner.FileServicesClient;\n+import com.azure.management.storage.inner.FileSharesClient;\n+import com.azure.management.storage.inner.ManagementPoliciesClient;\n+import com.azure.management.storage.inner.ObjectReplicationPoliciesOperationsClient;\n+import com.azure.management.storage.inner.OperationsClient;\n+import com.azure.management.storage.inner.PrivateEndpointConnectionsClient;\n+import com.azure.management.storage.inner.PrivateLinkResourcesClient;\n+import com.azure.management.storage.inner.QueueServicesClient;\n+import com.azure.management.storage.inner.QueuesClient;\n+import com.azure.management.storage.inner.SkusClient;\n+import com.azure.management.storage.inner.StorageAccountsClient;\n+import com.azure.management.storage.inner.TableServicesClient;\n+import com.azure.management.storage.inner.TablesClient;\n+import com.azure.management.storage.inner.UsagesClient;\n+\n+/** Initializes a new instance of the StorageManagementClient type. */\n+public final class StorageManagementClient extends AzureServiceClient {\n+    private final ClientLogger logger = new ClientLogger(StorageManagementClient.class);\n+\n+    /** The ID of the target subscription. */\n+    private String subscriptionId;\n+\n+    /**\n+     * Gets The ID of the target subscription.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    public String getSubscriptionId() {\n+        return this.subscriptionId;\n+    }\n+\n+    /**\n+     * Sets The ID of the target subscription.\n+     *\n+     * @param subscriptionId the subscriptionId value.\n+     * @return the service client itself.\n+     */\n+    StorageManagementClient setSubscriptionId(String subscriptionId) {\n+        this.subscriptionId = subscriptionId;\n+        return this;\n+    }\n+\n+    /** server parameter. */\n+    private String host;\n+\n+    /**\n+     * Gets server parameter.\n+     *\n+     * @return the host value.\n+     */\n+    public String getHost() {\n+        return this.host;\n+    }\n+\n+    /**\n+     * Sets server parameter.\n+     *\n+     * @param host the host value.\n+     * @return the service client itself.\n+     */\n+    StorageManagementClient setHost(String host) {\n+        this.host = host;\n+        return this;\n+    }\n+\n+    /** Api Version. */\n+    private String apiVersion;\n+\n+    /**\n+     * Gets Api Version.\n+     *\n+     * @return the apiVersion value.\n+     */\n+    public String getApiVersion() {\n+        return this.apiVersion;\n+    }\n+\n+    /**\n+     * Sets Api Version.\n+     *\n+     * @param apiVersion the apiVersion value.\n+     * @return the service client itself.\n+     */\n+    StorageManagementClient setApiVersion(String apiVersion) {\n+        this.apiVersion = apiVersion;\n+        return this;\n+    }\n+\n+    /** The HTTP pipeline to send requests through. */\n+    private final HttpPipeline httpPipeline;\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    public HttpPipeline getHttpPipeline() {\n+        return this.httpPipeline;\n+    }\n+\n+    /** The OperationsClient object to access its operations. */\n+    private final OperationsClient operations;\n+\n+    /**\n+     * Gets the OperationsClient object to access its operations.\n+     *\n+     * @return the OperationsClient object.\n+     */\n+    public OperationsClient operations() {\n+        return this.operations;\n+    }\n+\n+    /** The SkusClient object to access its operations. */\n+    private final SkusClient skus;\n+\n+    /**\n+     * Gets the SkusClient object to access its operations.\n+     *\n+     * @return the SkusClient object.\n+     */\n+    public SkusClient skus() {\n+        return this.skus;\n+    }\n+\n+    /** The StorageAccountsClient object to access its operations. */\n+    private final StorageAccountsClient storageAccounts;\n+\n+    /**\n+     * Gets the StorageAccountsClient object to access its operations.\n+     *\n+     * @return the StorageAccountsClient object.\n+     */\n+    public StorageAccountsClient storageAccounts() {\n+        return this.storageAccounts;\n+    }\n+\n+    /** The UsagesClient object to access its operations. */\n+    private final UsagesClient usages;\n+\n+    /**\n+     * Gets the UsagesClient object to access its operations.\n+     *\n+     * @return the UsagesClient object.\n+     */\n+    public UsagesClient usages() {\n+        return this.usages;\n+    }\n+\n+    /** The ManagementPoliciesClient object to access its operations. */\n+    private final ManagementPoliciesClient managementPolicies;\n+\n+    /**\n+     * Gets the ManagementPoliciesClient object to access its operations.\n+     *\n+     * @return the ManagementPoliciesClient object.\n+     */\n+    public ManagementPoliciesClient managementPolicies() {\n+        return this.managementPolicies;\n+    }\n+\n+    /** The PrivateEndpointConnectionsClient object to access its operations. */\n+    private final PrivateEndpointConnectionsClient privateEndpointConnections;\n+\n+    /**\n+     * Gets the PrivateEndpointConnectionsClient object to access its operations.\n+     *\n+     * @return the PrivateEndpointConnectionsClient object.\n+     */\n+    public PrivateEndpointConnectionsClient privateEndpointConnections() {\n+        return this.privateEndpointConnections;\n+    }\n+\n+    /** The PrivateLinkResourcesClient object to access its operations. */\n+    private final PrivateLinkResourcesClient privateLinkResources;\n+\n+    /**\n+     * Gets the PrivateLinkResourcesClient object to access its operations.\n+     *\n+     * @return the PrivateLinkResourcesClient object.\n+     */\n+    public PrivateLinkResourcesClient privateLinkResources() {\n+        return this.privateLinkResources;\n+    }\n+\n+    /** The ObjectReplicationPoliciesOperationsClient object to access its operations. */\n+    private final ObjectReplicationPoliciesOperationsClient objectReplicationPoliciesOperations;\n+\n+    /**\n+     * Gets the ObjectReplicationPoliciesOperationsClient object to access its operations.\n+     *\n+     * @return the ObjectReplicationPoliciesOperationsClient object.\n+     */\n+    public ObjectReplicationPoliciesOperationsClient objectReplicationPoliciesOperations() {\n+        return this.objectReplicationPoliciesOperations;\n+    }\n+\n+    /** The EncryptionScopesClient object to access its operations. */\n+    private final EncryptionScopesClient encryptionScopes;\n+\n+    /**\n+     * Gets the EncryptionScopesClient object to access its operations.\n+     *\n+     * @return the EncryptionScopesClient object.\n+     */\n+    public EncryptionScopesClient encryptionScopes() {\n+        return this.encryptionScopes;\n+    }\n+\n+    /** The BlobServicesClient object to access its operations. */\n+    private final BlobServicesClient blobServices;\n+\n+    /**\n+     * Gets the BlobServicesClient object to access its operations.\n+     *\n+     * @return the BlobServicesClient object.\n+     */\n+    public BlobServicesClient blobServices() {\n+        return this.blobServices;\n+    }\n+\n+    /** The BlobContainersClient object to access its operations. */\n+    private final BlobContainersClient blobContainers;\n+\n+    /**\n+     * Gets the BlobContainersClient object to access its operations.\n+     *\n+     * @return the BlobContainersClient object.\n+     */\n+    public BlobContainersClient blobContainers() {\n+        return this.blobContainers;\n+    }\n+\n+    /** The FileServicesClient object to access its operations. */\n+    private final FileServicesClient fileServices;\n+\n+    /**\n+     * Gets the FileServicesClient object to access its operations.\n+     *\n+     * @return the FileServicesClient object.\n+     */\n+    public FileServicesClient fileServices() {\n+        return this.fileServices;\n+    }\n+\n+    /** The FileSharesClient object to access its operations. */\n+    private final FileSharesClient fileShares;\n+\n+    /**\n+     * Gets the FileSharesClient object to access its operations.\n+     *\n+     * @return the FileSharesClient object.\n+     */\n+    public FileSharesClient fileShares() {\n+        return this.fileShares;\n+    }\n+\n+    /** The QueueServicesClient object to access its operations. */\n+    private final QueueServicesClient queueServices;\n+\n+    /**\n+     * Gets the QueueServicesClient object to access its operations.\n+     *\n+     * @return the QueueServicesClient object.\n+     */\n+    public QueueServicesClient queueServices() {\n+        return this.queueServices;\n+    }\n+\n+    /** The QueuesClient object to access its operations. */\n+    private final QueuesClient queues;\n+\n+    /**\n+     * Gets the QueuesClient object to access its operations.\n+     *\n+     * @return the QueuesClient object.\n+     */\n+    public QueuesClient queues() {\n+        return this.queues;\n+    }\n+\n+    /** The TableServicesClient object to access its operations. */\n+    private final TableServicesClient tableServices;\n+\n+    /**\n+     * Gets the TableServicesClient object to access its operations.\n+     *\n+     * @return the TableServicesClient object.\n+     */\n+    public TableServicesClient tableServices() {\n+        return this.tableServices;\n+    }\n+\n+    /** The TablesClient object to access its operations. */\n+    private final TablesClient tables;\n+\n+    /**\n+     * Gets the TablesClient object to access its operations.\n+     *\n+     * @return the TablesClient object.\n+     */\n+    public TablesClient tables() {\n+        return this.tables;\n+    }\n+\n+    /** Initializes an instance of StorageManagementClient client. */\n+    public StorageManagementClient() {\n+        this(\n+            new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy()).build(),\n+            AzureEnvironment.AZURE);\n+    }\n+\n+    /**\n+     * Initializes an instance of StorageManagementClient client.\n+     *\n+     * @param httpPipeline The HTTP pipeline to send requests through.\n+     */\n+    public StorageManagementClient(HttpPipeline httpPipeline) {\n+        this(httpPipeline, AzureEnvironment.AZURE);\n+    }\n+\n+    /**\n+     * Initializes an instance of StorageManagementClient client.\n+     *\n+     * @param httpPipeline The HTTP pipeline to send requests through.\n+     * @param environment The Azure environment.\n+     */\n+    StorageManagementClient(HttpPipeline httpPipeline, AzureEnvironment environment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adee25a187df81660e6d6f5e6ddae4940e58069"}, "originalPosition": 344}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTA0NTcxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/inner/StorageAccountsClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NjowM1rOGV_3Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDo0NjowM1rOGV_3Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxOTY1MA==", "bodyText": "Rename it to Client", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r425719650", "createdAt": "2020-05-15T10:46:03Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/inner/StorageAccountsClient.java", "diffHunk": "@@ -35,41 +36,42 @@\n import com.azure.management.resources.fluentcore.collection.InnerSupportsDelete;\n import com.azure.management.resources.fluentcore.collection.InnerSupportsGet;\n import com.azure.management.resources.fluentcore.collection.InnerSupportsListing;\n-import com.azure.management.storage.AccountSasParameters;\n-import com.azure.management.storage.BlobRestoreParameters;\n-import com.azure.management.storage.BlobRestoreRange;\n-import com.azure.management.storage.ListKeyExpand;\n-import com.azure.management.storage.ServiceSasParameters;\n-import com.azure.management.storage.StorageAccountCheckNameAvailabilityParameters;\n-import com.azure.management.storage.StorageAccountCreateParameters;\n-import com.azure.management.storage.StorageAccountExpand;\n-import com.azure.management.storage.StorageAccountRegenerateKeyParameters;\n-import com.azure.management.storage.StorageAccountUpdateParameters;\n+import com.azure.management.storage.StorageManagementClient;\n+import com.azure.management.storage.models.AccountSasParameters;\n+import com.azure.management.storage.models.BlobRestoreParameters;\n+import com.azure.management.storage.models.BlobRestoreRange;\n+import com.azure.management.storage.models.ListKeyExpand;\n+import com.azure.management.storage.models.ServiceSasParameters;\n+import com.azure.management.storage.models.StorageAccountCheckNameAvailabilityParameters;\n+import com.azure.management.storage.models.StorageAccountCreateParameters;\n+import com.azure.management.storage.models.StorageAccountExpand;\n+import com.azure.management.storage.models.StorageAccountRegenerateKeyParameters;\n+import com.azure.management.storage.models.StorageAccountUpdateParameters;\n import java.nio.ByteBuffer;\n import java.time.OffsetDateTime;\n import java.util.List;\n import reactor.core.publisher.Flux;\n import reactor.core.publisher.Mono;\n \n /** An instance of this class provides access to all the operations defined in StorageAccounts. */\n-public final class StorageAccountsInner\n+public final class StorageAccountsClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adee25a187df81660e6d6f5e6ddae4940e58069"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDc3ODY5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo0OTo0NlrOGcAKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo0OTo0NlrOGcAKnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxNjAyOQ==", "bodyText": "This annotation should use the builder classname - StorageManagementClientBuilder.class", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432016029", "createdAt": "2020-05-28T17:49:46Z", "author": {"login": "srnagar"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClient.java", "diffHunk": "@@ -0,0 +1,319 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.management.storage;\n+\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.management.AzureServiceClient;\n+import com.azure.management.storage.fluent.BlobContainersClient;\n+import com.azure.management.storage.fluent.BlobServicesClient;\n+import com.azure.management.storage.fluent.EncryptionScopesClient;\n+import com.azure.management.storage.fluent.FileServicesClient;\n+import com.azure.management.storage.fluent.FileSharesClient;\n+import com.azure.management.storage.fluent.ManagementPoliciesClient;\n+import com.azure.management.storage.fluent.ObjectReplicationPoliciesOperationsClient;\n+import com.azure.management.storage.fluent.OperationsClient;\n+import com.azure.management.storage.fluent.PrivateEndpointConnectionsClient;\n+import com.azure.management.storage.fluent.PrivateLinkResourcesClient;\n+import com.azure.management.storage.fluent.QueueServicesClient;\n+import com.azure.management.storage.fluent.QueuesClient;\n+import com.azure.management.storage.fluent.SkusClient;\n+import com.azure.management.storage.fluent.StorageAccountsClient;\n+import com.azure.management.storage.fluent.TableServicesClient;\n+import com.azure.management.storage.fluent.TablesClient;\n+import com.azure.management.storage.fluent.UsagesClient;\n+\n+/** Initializes a new instance of the StorageManagementClient type. */\n+@ServiceClient(builder = ServiceClientBuilder.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDc5ODY2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/fluent/BlobContainersClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzo1NTo1NlrOGcAXmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMjoyMDoyOFrOGcMsRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxOTM1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String resourceGroupName, String accountName, String maxpagesize, String filter, ListSharesExpand include) {\n          \n          \n            \n                    String resourceGroupName, String accountName, String maxPageSize, String filter, ListSharesExpand include) {", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432019352", "createdAt": "2020-05-28T17:55:56Z", "author": {"login": "srnagar"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/fluent/BlobContainersClient.java", "diffHunk": "@@ -298,14 +312,15 @@\n      *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n      * @param maxpagesize Optional. Specified maximum number of containers that can be included in the list.\n      * @param filter Optional. When specified, only container names starting with the filter will be listed.\n+     * @param include Optional, used to include the properties for soft deleted blob containers.\n      * @throws IllegalArgumentException thrown if parameters fail the validation.\n      * @throws ManagementException thrown if the request is rejected by server.\n      * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n      * @return response schema.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<PagedResponse<ListContainerItemInner>> listSinglePageAsync(\n-        String resourceGroupName, String accountName, String maxpagesize, String filter) {\n+        String resourceGroupName, String accountName, String maxpagesize, String filter, ListSharesExpand include) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIyMTI1Mw==", "bodyText": "Source here \"name\": \"$maxpagesize\" https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#L172\nWill try something similar as https://github.com/Azure/autorest.java/blob/v4/fluentnamer/readme.md\nin mgmt swagger readme (so it apply to single service). But it is not there yet.\n  fluentnamer:\n    input: modelerfour/identity\n    naming:\n      override:\n        eTag: etag\n        userName: username\n        metaData: metadata\n        timeStamp: timestamp\n        hostName: hostname\n        webHook: webhook\n        coolDown: cooldown\n        resourceregion: resourceRegion\n        sTag: stag\n        tagname: tagName\n        tagvalue: tagValue", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432221253", "createdAt": "2020-05-29T02:20:28Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/fluent/BlobContainersClient.java", "diffHunk": "@@ -298,14 +312,15 @@\n      *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n      * @param maxpagesize Optional. Specified maximum number of containers that can be included in the list.\n      * @param filter Optional. When specified, only container names starting with the filter will be listed.\n+     * @param include Optional, used to include the properties for soft deleted blob containers.\n      * @throws IllegalArgumentException thrown if parameters fail the validation.\n      * @throws ManagementException thrown if the request is rejected by server.\n      * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n      * @return response schema.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<PagedResponse<ListContainerItemInner>> listSinglePageAsync(\n-        String resourceGroupName, String accountName, String maxpagesize, String filter) {\n+        String resourceGroupName, String accountName, String maxpagesize, String filter, ListSharesExpand include) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxOTM1Mg=="}, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDg1NTE1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODoxMzoxN1rOGcA8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMjoyMzozNVrOGcMu7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyODgzNw==", "bodyText": "In track 2, we've named this as endpoint instead of host.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432028837", "createdAt": "2020-05-28T18:13:17Z", "author": {"login": "srnagar"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "diffHunk": "@@ -96,11 +85,11 @@ public StorageManagementClientBuilder pipeline(HttpPipeline pipeline) {\n     }\n \n     /**\n-     * Builds an instance of StorageManagementClientImpl with the provided parameters.\n+     * Builds an instance of StorageManagementClient with the provided parameters.\n      *\n-     * @return an instance of StorageManagementClientImpl.\n+     * @return an instance of StorageManagementClient.\n      */\n-    public StorageManagementClientImpl buildClient() {\n+    public StorageManagementClient buildClient() {\n         if (host == null) {\n             this.host = \"https://management.azure.com\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIyMTkzMg==", "bodyText": "I guess it is in swagger as well https://github.com/Azure/azure-rest-api-specs/blob/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json#L8\nI will see if I can rename it in generator for mgmt.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432221932", "createdAt": "2020-05-29T02:23:35Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "diffHunk": "@@ -96,11 +85,11 @@ public StorageManagementClientBuilder pipeline(HttpPipeline pipeline) {\n     }\n \n     /**\n-     * Builds an instance of StorageManagementClientImpl with the provided parameters.\n+     * Builds an instance of StorageManagementClient with the provided parameters.\n      *\n-     * @return an instance of StorageManagementClientImpl.\n+     * @return an instance of StorageManagementClient.\n      */\n-    public StorageManagementClientImpl buildClient() {\n+    public StorageManagementClient buildClient() {\n         if (host == null) {\n             this.host = \"https://management.azure.com\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyODgzNw=="}, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDg1ODQ1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODoxNDoxN1rOGcA-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMjoyNDowNlrOGcMvXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyOTQxNw==", "bodyText": "Do you still need the null check for apiVersion now that the setter is removed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432029417", "createdAt": "2020-05-28T18:14:17Z", "author": {"login": "srnagar"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "diffHunk": "@@ -96,11 +85,11 @@ public StorageManagementClientBuilder pipeline(HttpPipeline pipeline) {\n     }\n \n     /**\n-     * Builds an instance of StorageManagementClientImpl with the provided parameters.\n+     * Builds an instance of StorageManagementClient with the provided parameters.\n      *\n-     * @return an instance of StorageManagementClientImpl.\n+     * @return an instance of StorageManagementClient.\n      */\n-    public StorageManagementClientImpl buildClient() {\n+    public StorageManagementClient buildClient() {\n         if (host == null) {\n             this.host = \"https://management.azure.com\";\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIyMjA0NA==", "bodyText": "I will try to address it when tweaking generator.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11205#discussion_r432222044", "createdAt": "2020-05-29T02:24:06Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/StorageManagementClientBuilder.java", "diffHunk": "@@ -96,11 +85,11 @@ public StorageManagementClientBuilder pipeline(HttpPipeline pipeline) {\n     }\n \n     /**\n-     * Builds an instance of StorageManagementClientImpl with the provided parameters.\n+     * Builds an instance of StorageManagementClient with the provided parameters.\n      *\n-     * @return an instance of StorageManagementClientImpl.\n+     * @return an instance of StorageManagementClient.\n      */\n-    public StorageManagementClientImpl buildClient() {\n+    public StorageManagementClient buildClient() {\n         if (host == null) {\n             this.host = \"https://management.azure.com\";\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyOTQxNw=="}, "originalCommit": {"oid": "b3127616113cbed7a997231ea2fd307a049c59c6"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4286, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}