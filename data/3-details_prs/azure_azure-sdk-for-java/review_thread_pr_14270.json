{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTk2MzI5", "number": 14270, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDo0OFrOEZ3lEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzo1NzoxMlrOEaSyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTYwNDY0OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDo0OFrOHC8f3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODozODo0OVrOHC9LFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ==", "bodyText": "It would be nice if we can try parse it, regex maybe. We can give user the string, and if we can parse, put value to commonRateLimits.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472850399", "createdAt": "2020-08-19T08:20:48Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header\n+ */\n+public class ResourceManagerThrottlingInfo {\n+    // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n+    private static final List<String> COMMON_RATE_LIMIT_HEADERS = Arrays.asList(\n+        \"x-ms-ratelimit-remaining-subscription-reads\",\n+        \"x-ms-ratelimit-remaining-subscription-writes\",\n+        \"x-ms-ratelimit-remaining-tenant-reads\",\n+        \"x-ms-ratelimit-remaining-tenant-writes\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-requests\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-entities-read\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-requests\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-entities-read\"\n+    );\n+\n+    // refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n+    private static final String RESOURCE_RATE_LIMIT_HEADERS = \"x-ms-ratelimit-remaining-resource\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1NzA2NQ==", "bodyText": "It could be parsed, but it contains two value for different duration 3 min and 30 min. What should we use? such as x-ms-ratelimit-remaining-resource-3min?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472857065", "createdAt": "2020-08-19T08:31:36Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header\n+ */\n+public class ResourceManagerThrottlingInfo {\n+    // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n+    private static final List<String> COMMON_RATE_LIMIT_HEADERS = Arrays.asList(\n+        \"x-ms-ratelimit-remaining-subscription-reads\",\n+        \"x-ms-ratelimit-remaining-subscription-writes\",\n+        \"x-ms-ratelimit-remaining-tenant-reads\",\n+        \"x-ms-ratelimit-remaining-tenant-writes\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-requests\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-entities-read\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-requests\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-entities-read\"\n+    );\n+\n+    // refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n+    private static final String RESOURCE_RATE_LIMIT_HEADERS = \"x-ms-ratelimit-remaining-resource\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ=="}, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2MTQ2MQ==", "bodyText": "Yes, maybe x-ms-ratelimit-remaining-resource-PutVM3Min and x-ms-ratelimit-remaining-resource-PutVM30Min for Microsoft.Compute/PutVM3Min;239,Microsoft.Compute/PutVM30Min;1199.\nOr maybe a data structure more complex than key/value pair?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472861461", "createdAt": "2020-08-19T08:38:49Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header\n+ */\n+public class ResourceManagerThrottlingInfo {\n+    // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n+    private static final List<String> COMMON_RATE_LIMIT_HEADERS = Arrays.asList(\n+        \"x-ms-ratelimit-remaining-subscription-reads\",\n+        \"x-ms-ratelimit-remaining-subscription-writes\",\n+        \"x-ms-ratelimit-remaining-tenant-reads\",\n+        \"x-ms-ratelimit-remaining-tenant-writes\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-requests\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-entities-read\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-requests\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-entities-read\"\n+    );\n+\n+    // refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n+    private static final String RESOURCE_RATE_LIMIT_HEADERS = \"x-ms-ratelimit-remaining-resource\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ=="}, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTYxNzY3OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyNDoxNlrOHC8oJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyNDoxNlrOHC8oJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MjUxOQ==", "bodyText": "Probably need to notify that the code in callback is not thread-safe.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472852519", "createdAt": "2020-08-19T08:24:16Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "diffHunk": "@@ -7,86 +7,28 @@\n import com.azure.core.http.HttpPipelineNextPolicy;\n import com.azure.core.http.HttpResponse;\n import com.azure.core.http.policy.HttpPipelinePolicy;\n-import com.azure.core.util.DateTimeRfc1123;\n-import com.azure.core.util.FluxUtil;\n-import com.azure.core.util.logging.ClientLogger;\n-import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.time.Instant;\n-import java.time.OffsetDateTime;\n-import java.util.concurrent.TimeUnit;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import java.util.function.Consumer;\n \n /**\n- * A Http Pipeline Policy for automatic retry when Azure Resource Manager is throttling\n- * because of too many read/write requests.\n- * <p>\n- * For each subscription and tenant, Azure Resource Manager limits read requests to 15,000 per hour and\n- *   write requests to 1,200 per hour. These limits apply to each Azure Resource Manager instance.\n+ * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private static final String RETRY_MESSAGE_FORMAT =\n-        \"Azure Resource Manager read/write per hour limit reached. Will retry in: %d seconds\";\n+    private final Consumer<? super ResourceManagerThrottlingInfo> callback;\n+\n+    /**\n+     * Creates the resource manager throttling policy\n+     * @param callback consume the ResourceManagerThrottlingInfo for every request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTYyMjQ0OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyNToxOFrOHC8q-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo0MDoxM1rOHC_h2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ==", "bodyText": "If possible, get info on whether network/storage has limit but does not return in headers.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472853241", "createdAt": "2020-08-19T08:25:18Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3MzI4MA==", "bodyText": "I didn't see the network/storage have specific header for throttling.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472873280", "createdAt": "2020-08-19T08:57:14Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ=="}, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwMDA1Nw==", "bodyText": "I know. I mean if other service has limitation but not visible in header, we should mention it in javadoc (that this util tries to help but in some case not able to).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472900057", "createdAt": "2020-08-19T09:40:13Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ=="}, "originalCommit": {"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTk4OTU2OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzoxNDo1OFrOHDn96A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjowMzozMFrOHDr_vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjYwMA==", "bodyText": "Should we put Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\") to a static, to save runtime cost to do it every time?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473562600", "createdAt": "2020-08-20T03:14:58Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -47,6 +50,11 @@ public ResourceManagerThrottlingInfo(HttpHeaders headers) {\n             }\n         }\n         resourceRateLimit = headers.getValue(RESOURCE_RATE_LIMIT_HEADERS);\n+        Matcher matcher = Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\").matcher(resourceRateLimit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODYwNg==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628606", "createdAt": "2020-08-20T06:03:30Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -47,6 +50,11 @@ public ResourceManagerThrottlingInfo(HttpHeaders headers) {\n             }\n         }\n         resourceRateLimit = headers.getValue(RESOURCE_RATE_LIMIT_HEADERS);\n+        Matcher matcher = Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\").matcher(resourceRateLimit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjYwMA=="}, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTk5MjIzOnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzoxNjoyMlrOHDn_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjowMzoyNFrOHDr_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Mjk3OQ==", "bodyText": "a specific rate limit header value from compute should be enough. without parsed here seems grammatically not correct.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473562979", "createdAt": "2020-08-20T03:16:22Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -83,7 +91,7 @@ public static ResourceManagerThrottlingInfo fromHeaders(HttpHeaders headers) {\n \n     /**\n      * refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n-     * @return a specific rate limit from compute\n+     * @return a specific rate limit header value without parsed from compute", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODUzMw==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628533", "createdAt": "2020-08-20T06:03:24Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -83,7 +91,7 @@ public static ResourceManagerThrottlingInfo fromHeaders(HttpHeaders headers) {\n \n     /**\n      * refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n-     * @return a specific rate limit from compute\n+     * @return a specific rate limit header value without parsed from compute", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Mjk3OQ=="}, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDA2MjY1OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzo1NzoxMlrOHDom2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjowMzoxNlrOHDr_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3MzA4MQ==", "bodyText": "The callback seems better to take a HttpResponse, so received be able to match request/response with throttling info.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473573081", "createdAt": "2020-08-20T03:57:12Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "diffHunk": "@@ -7,86 +7,28 @@\n import com.azure.core.http.HttpPipelineNextPolicy;\n import com.azure.core.http.HttpResponse;\n import com.azure.core.http.policy.HttpPipelinePolicy;\n-import com.azure.core.util.DateTimeRfc1123;\n-import com.azure.core.util.FluxUtil;\n-import com.azure.core.util.logging.ClientLogger;\n-import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.time.Instant;\n-import java.time.OffsetDateTime;\n-import java.util.concurrent.TimeUnit;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import java.util.function.Consumer;\n \n /**\n- * A Http Pipeline Policy for automatic retry when Azure Resource Manager is throttling\n- * because of too many read/write requests.\n- * <p>\n- * For each subscription and tenant, Azure Resource Manager limits read requests to 15,000 per hour and\n- *   write requests to 1,200 per hour. These limits apply to each Azure Resource Manager instance.\n+ * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private static final String RETRY_MESSAGE_FORMAT =\n-        \"Azure Resource Manager read/write per hour limit reached. Will retry in: %d seconds\";\n+    private final Consumer<? super ResourceManagerThrottlingInfo> callback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODQ4Mw==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628483", "createdAt": "2020-08-20T06:03:16Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "diffHunk": "@@ -7,86 +7,28 @@\n import com.azure.core.http.HttpPipelineNextPolicy;\n import com.azure.core.http.HttpResponse;\n import com.azure.core.http.policy.HttpPipelinePolicy;\n-import com.azure.core.util.DateTimeRfc1123;\n-import com.azure.core.util.FluxUtil;\n-import com.azure.core.util.logging.ClientLogger;\n-import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.time.Instant;\n-import java.time.OffsetDateTime;\n-import java.util.concurrent.TimeUnit;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import java.util.function.Consumer;\n \n /**\n- * A Http Pipeline Policy for automatic retry when Azure Resource Manager is throttling\n- * because of too many read/write requests.\n- * <p>\n- * For each subscription and tenant, Azure Resource Manager limits read requests to 15,000 per hour and\n- *   write requests to 1,200 per hour. These limits apply to each Azure Resource Manager instance.\n+ * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private static final String RETRY_MESSAGE_FORMAT =\n-        \"Azure Resource Manager read/write per hour limit reached. Will retry in: %d seconds\";\n+    private final Consumer<? super ResourceManagerThrottlingInfo> callback;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3MzA4MQ=="}, "originalCommit": {"oid": "ff61c045f401d702f38598667c1c018bd51e170a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1553, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}