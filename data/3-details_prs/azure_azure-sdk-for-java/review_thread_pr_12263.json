{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzU4MjU3", "number": 12263, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMjoyNlrOEGCTrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMjoyNlrOEGCTrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzY0NzE4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMjoyNlrOGkllvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoxNzowMVrOGknjIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzc5MA==", "bodyText": "Shouldnt filePath be part of the constructor of Options?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12263#discussion_r441017790", "createdAt": "2020-06-16T17:22:26Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClient.java", "diffHunk": "@@ -188,31 +191,35 @@ public void uploadFromFile(String filePath, boolean overwrite) {\n     public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions,\n         BlobHttpHeaders headers, Map<String, String> metadata, AccessTier tier, BlobRequestConditions requestConditions,\n         Duration timeout) throws UncheckedIOException {\n-        this.uploadFromFile(filePath, new BlobUploadFromFileOptions()\n+        this.uploadFromFileWithResponse(filePath, new BlobUploadFromFileOptions()\n                 .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n                 .setTier(tier).setRequestConditions(requestConditions),\n-            timeout);\n+            timeout, null);\n     }\n \n     /**\n      * Creates a new block blob, or updates the content of an existing block blob.\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile#String-BlobUploadFromFileOptions-Duration}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse#String-BlobUploadFromFileOptions-Duration-Context}\n      *\n      * @param filePath Path of the file to upload\n      * @param options {@link BlobUploadFromFileOptions}\n      * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n      * @throws UncheckedIOException If an I/O error occurs\n+     * @return Information about the uploaded block blob.\n      */\n     @Override\n-    public void uploadFromFile(String filePath, BlobUploadFromFileOptions options, Duration timeout)\n+    public Response<BlockBlobItem> uploadFromFileWithResponse(String filePath, BlobUploadFromFileOptions options,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0990e4162c760742a81a4911022b3c23250f5ae9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyMDU4Ng==", "bodyText": "Good point. I forgot about that part.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12263#discussion_r441020586", "createdAt": "2020-06-16T17:27:10Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClient.java", "diffHunk": "@@ -188,31 +191,35 @@ public void uploadFromFile(String filePath, boolean overwrite) {\n     public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions,\n         BlobHttpHeaders headers, Map<String, String> metadata, AccessTier tier, BlobRequestConditions requestConditions,\n         Duration timeout) throws UncheckedIOException {\n-        this.uploadFromFile(filePath, new BlobUploadFromFileOptions()\n+        this.uploadFromFileWithResponse(filePath, new BlobUploadFromFileOptions()\n                 .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n                 .setTier(tier).setRequestConditions(requestConditions),\n-            timeout);\n+            timeout, null);\n     }\n \n     /**\n      * Creates a new block blob, or updates the content of an existing block blob.\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile#String-BlobUploadFromFileOptions-Duration}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse#String-BlobUploadFromFileOptions-Duration-Context}\n      *\n      * @param filePath Path of the file to upload\n      * @param options {@link BlobUploadFromFileOptions}\n      * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n      * @throws UncheckedIOException If an I/O error occurs\n+     * @return Information about the uploaded block blob.\n      */\n     @Override\n-    public void uploadFromFile(String filePath, BlobUploadFromFileOptions options, Duration timeout)\n+    public Response<BlockBlobItem> uploadFromFileWithResponse(String filePath, BlobUploadFromFileOptions options,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzc5MA=="}, "originalCommit": {"oid": "0990e4162c760742a81a4911022b3c23250f5ae9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0OTg5MA==", "bodyText": "Done.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12263#discussion_r441049890", "createdAt": "2020-06-16T18:17:01Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClient.java", "diffHunk": "@@ -188,31 +191,35 @@ public void uploadFromFile(String filePath, boolean overwrite) {\n     public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions,\n         BlobHttpHeaders headers, Map<String, String> metadata, AccessTier tier, BlobRequestConditions requestConditions,\n         Duration timeout) throws UncheckedIOException {\n-        this.uploadFromFile(filePath, new BlobUploadFromFileOptions()\n+        this.uploadFromFileWithResponse(filePath, new BlobUploadFromFileOptions()\n                 .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n                 .setTier(tier).setRequestConditions(requestConditions),\n-            timeout);\n+            timeout, null);\n     }\n \n     /**\n      * Creates a new block blob, or updates the content of an existing block blob.\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile#String-BlobUploadFromFileOptions-Duration}\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse#String-BlobUploadFromFileOptions-Duration-Context}\n      *\n      * @param filePath Path of the file to upload\n      * @param options {@link BlobUploadFromFileOptions}\n      * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n      * @throws UncheckedIOException If an I/O error occurs\n+     * @return Information about the uploaded block blob.\n      */\n     @Override\n-    public void uploadFromFile(String filePath, BlobUploadFromFileOptions options, Duration timeout)\n+    public Response<BlockBlobItem> uploadFromFileWithResponse(String filePath, BlobUploadFromFileOptions options,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzc5MA=="}, "originalCommit": {"oid": "0990e4162c760742a81a4911022b3c23250f5ae9"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}