{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MjU3MDY5", "number": 17872, "title": "add spring security resource server sample", "bodyText": "add spring security resource server sample\nupdate README file", "createdAt": "2020-11-30T03:49:35Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872", "merged": true, "mergeCommit": {"oid": "627fad2e5960b7e864f58c80b4b41976f78872e8"}, "closed": true, "closedAt": "2020-12-14T06:45:02Z", "author": {"login": "ZhuXiaoBing-cn"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhdCB6AH2gAyNTI5MjU3MDY5OmQ5Y2Q1M2YxZDBhNzQ0MDViMzNiYzlhYzhiMjI3ZDlkNjYyZDRjNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdl_yx3gFqTU1MTA3NTMwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41", "committedDate": "2020-11-30T03:46:12Z", "message": "* add spring security resource server sample\n* update README file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNjE3NzA0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-540617704", "createdAt": "2020-11-30T06:03:40Z", "commit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNjowMzo0MFrOH7s7uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNjoyMjoxMlrOH7tQ9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NDIxNg==", "bodyText": "an Java --> a java?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532364216", "createdAt": "2020-11-30T06:03:40Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NDk4Mg==", "bodyText": "version 1.8 and above --> version 1.8 or above", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532364982", "createdAt": "2020-11-30T06:06:13Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 and above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2NTA1Mw==", "bodyText": "3.0 and above --> 3.0  or above", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532365053", "createdAt": "2020-11-30T06:06:29Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 and above.\n+- [Maven](https://maven.apache.org/) 3.0 and above", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2OTY1NQ==", "bodyText": "I feel a little confusing by the sentence here at first.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r532369655", "createdAt": "2020-11-30T06:22:12Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect an Java web API by restricting access to its resources to authorized accounts only.\n+Obtain Bearer Token in the request head of resources and carry out analysis and verification. After verification,\n+injects AzureOAuth2AuthenticatedPrincipal object that is associated with the thread of the current user request. \n+Token claimsset, Authorities, JWS headers etc. are accessible from the object which can be used for role based authorization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9cd53f1d0a74405b33bc9ac8b227d9d662d4c41"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8019eb9970efb2ac9ad6d28c62fee5e6a974a955", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8019eb9970efb2ac9ad6d28c62fee5e6a974a955", "committedDate": "2020-11-30T08:50:34Z", "message": "* Modify the link\n* Update README file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "917b984699a53b12a9ef0ffb7ecec6304cf27f81", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/917b984699a53b12a9ef0ffb7ecec6304cf27f81", "committedDate": "2020-11-30T09:23:43Z", "message": "* Update README file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf36292f75b370e917462353a29512cd7b6b504d", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bf36292f75b370e917462353a29512cd7b6b504d", "committedDate": "2020-12-03T07:33:46Z", "message": "* Update sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da9db4365bb49c936cf02e5237cb497730b4c62", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2da9db4365bb49c936cf02e5237cb497730b4c62", "committedDate": "2020-12-04T09:46:46Z", "message": "* Update application.properties and pom.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTI1NTk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-547925596", "createdAt": "2020-12-09T08:06:30Z", "commit": {"oid": "2da9db4365bb49c936cf02e5237cb497730b4c62"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26dd564ac7a790c8cc00de84ef41c9d5265a3e74", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/26dd564ac7a790c8cc00de84ef41c9d5265a3e74", "committedDate": "2020-12-09T10:15:14Z", "message": "Merge branch 'master' into add_resource_server_sample_and_update_readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5d909dbe172415f3f9e2c6d57655c77fca2258", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d5d909dbe172415f3f9e2c6d57655c77fca2258", "committedDate": "2020-12-09T10:19:27Z", "message": "Merge branch 'master' and update AzureJwtBearerTokenAuthenticationConverter.java path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzYxNzE3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-548761717", "createdAt": "2020-12-10T01:59:34Z", "commit": {"oid": "3d5d909dbe172415f3f9e2c6d57655c77fca2258"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "author": {"user": {"login": "backwind1233", "name": "zhihaoguo"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/98be46bc6846f9c98aa8755d9ee71eb6b596e4dd", "committedDate": "2020-12-10T02:15:47Z", "message": "refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzczNTYy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-548773562", "createdAt": "2020-12-10T02:32:42Z", "commit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMjozMjo0MlrOICyrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMjo0NDoyN1rOICy7Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5ODM0NQ==", "bodyText": "We refactor this and [instruction] below in @moarychan's PR, please follow this #17862 to change.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539798345", "createdAt": "2020-12-10T02:32:42Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5ODQzNw==", "bodyText": "Need to change this too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539798437", "createdAt": "2020-12-10T02:33:02Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081\n+```\n+\n+### Run with Maven \n+First, we need to ensure that this [instruction] is completed before run.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5OTA4OA==", "bodyText": "Change this H in Headers to lowercase.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539799088", "createdAt": "2020-12-10T02:34:53Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc5OTgyOQ==", "bodyText": "Please add a space before which", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539799829", "createdAt": "2020-12-10T02:36:59Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMDc1MA==", "bodyText": "This configuration entry is not required, right? Perhaps we could remove this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539800750", "createdAt": "2020-12-10T02:39:39Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,113 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, Headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here,which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjA5MA==", "bodyText": "We should move this under the ## Examples section.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802090", "createdAt": "2020-12-10T02:43:40Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjIyNA==", "bodyText": "Please use reference link style here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802224", "createdAt": "2020-12-10T02:44:02Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjI4Mw==", "bodyText": "not required.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802283", "createdAt": "2020-12-10T02:44:14Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.\n+\n+#### Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+####  Configure application.properties:\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+#Use a port that is not occupied\n+server.port=8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwMjM4Ng==", "bodyText": "Why is this needed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r539802386", "createdAt": "2020-12-10T02:44:27Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -263,6 +263,52 @@ logging.level.org.hibernate=ERROR\n For more information about setting logging in spring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logging).\n  \n \n+### Protect the Resource API through Resource Server\n+Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resource-server](https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md) for access resource api.\n+\n+#### Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+####  Configure application.properties:\n+```properties\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98be46bc6846f9c98aa8755d9ee71eb6b596e4dd"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ba98be2ecbb1aa0019588c4985958da83f4e561", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ba98be2ecbb1aa0019588c4985958da83f4e561", "committedDate": "2020-12-10T08:08:28Z", "message": "Update readme file and properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125c3563e28b8943cfd87b12dbd55fba9daeb656", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/125c3563e28b8943cfd87b12dbd55fba9daeb656", "committedDate": "2020-12-10T08:09:24Z", "message": "Merge branch 'master' into add_resource_server_sample_and_update_readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f96240fa74355fe1cefb839257a6ecd75d8ca81", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f96240fa74355fe1cefb839257a6ecd75d8ca81", "committedDate": "2020-12-10T09:36:42Z", "message": "Update readme file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzY3NjI0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-549767624", "createdAt": "2020-12-11T02:58:04Z", "commit": {"oid": "125c3563e28b8943cfd87b12dbd55fba9daeb656"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjo1ODowNVrOIDm48A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjo1ODowNVrOIDm48A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1MzgwOA==", "bodyText": "Sorry for didn't make it clear last time, I meant the configuration server.port=8081 is not required last time", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540653808", "createdAt": "2020-12-11T02:58:05Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -284,14 +266,6 @@ Please refer to [azure-spring-boot-sample-active-directory-spring-oauth2-resourc\n   </dependencies>\n ```\n \n-####  Configure application.properties:\n-```properties\n-azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n-azure.activedirectory.session-stateless=true\n-#Use a port that is not occupied\n-server.port=8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3563e28b8943cfd87b12dbd55fba9daeb656"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fdd32071c1b873d77323726dc46641622f2cedf", "committedDate": "2020-12-11T03:28:07Z", "message": "add back the #### Configure application.properties: section"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzgxNDQx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-549781441", "createdAt": "2020-12-11T03:44:16Z", "commit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Nzk4MTI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-549798129", "createdAt": "2020-12-11T04:44:21Z", "commit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0NDoyMVrOIDo65Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0NjoxN1rOIDo9Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzA3Nw==", "bodyText": "This is not needed, in @moarychan's PR we already included the install part.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687077", "createdAt": "2020-12-11T04:44:21Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)\n+- You register your web APP in App registrations in the Azure portal.\n+- A Web APP runtime that requires access to a Web API.\n+\n+### Environment checklist\n+We need to ensure that this [environment checklist][ready-to-run-checklist] is completed before the run.\n+\n+## Include the package\n+```xml\n+  <dependencies>\n+    <dependency>\n+      <groupId>com.azure.spring</groupId>\n+      <artifactId>azure-spring-boot-starter-active-directory</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-resource-server</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-oauth2-jose</artifactId>\n+    </dependency>\n+  </dependencies>\n+```\n+\n+## Register your web API\n+In this section, you register your web API in App registrations in the Azure portal.\n+    \n+### Choose your Azure AD tenant\n+\n+To register your apps manually, choose the Azure Active Directory (Azure AD) tenant where you want to create your apps.\n+\n+1. Sign in to the [Azure portal](https://portal.azure.com/) with either a work or school account or a personal Microsoft account.\n+2. If your account is present in more than one Azure AD tenant, select your profile at the upper right, and then select **Switch directory**.\n+3. Change your portal session to the Azure AD tenant you want to use.\n+\n+### Register the web API\n+\n+1. Go to the Microsoft identity platform for developers App registrations portal.\n+\n+2. Select New registration.\n+    ![Select New registration](docs/image-select-new-registration.png \"Select new registration\")\n+\n+3. When the Register an application page opens, enter your application's registration information:\n+    ![Scope Config](docs/image-register-an-application.png \"Register an application\")\n+    \n+4. In the **Expose an API** section, select **Add a scope**, accept the proposed Application ID URI `(api://{clientId})` (back up the Application ID URI here, which will be used in the properties file) by selecting **Save and Continue**.\n+   ![App-Id-Uri Config](docs/image-app-id-uri-config.png \"App-id-uri Config\")\n+   Then enter the following information:\n+   - For **Scope name**, enter **File.read**.\n+   - For **Who can consent**, ensure that the **Admins and users** option is selected.\n+   - In the **Admin consent display name** box, enter **Access File.read as a user**.\n+   - In the **Admin consent description** box, enter **Accesses the File.read web API as a user**.\n+   - In the **User consent display name** box, enter **Access File.read as a user**.\n+   - In the **User consent description** box, enter **Accesses the File.read web API as a user**.\n+   - For **State**, keep **Enabled**.\n+   - Select **Add scope**.\n+   ![Scope Config](docs/image-scope-configurations.png \"Scope Config\")\n+\n+If you still don't understand, you can look at this [register app or web api][Register app or web API] and another [expose scoped permission to web api][Expose scoped permission to web API]. I believe it will also help you.\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+azure.activedirectory.client-id=xxxxxx-your-client-id-xxxxxx\n+azure.activedirectory.app-id-uri=xxxxxxxx-app-id-uri-xxxxxxxxxx\n+azure.activedirectory.session-stateless=true\n+```\n+\n+### Run with Maven \n+```shell\n+# Under sdk/spring project root directory\n+mvn clean install -DskipTests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzQ2MA==", "bodyText": "These requirements are included in the environment checklist already.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687460", "createdAt": "2020-12-11T04:45:45Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NzYxOA==", "bodyText": "Change the link to reference style", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#discussion_r540687618", "createdAt": "2020-12-11T04:46:17Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-spring-security-resource-server/README.md", "diffHunk": "@@ -0,0 +1,125 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter Resource Server library for Java\n+\n+## Key concepts\n+This sample illustrates how to protect a Java web API by restricting access to its resources to authorized accounts only.\n+\n+1. The bearer token is obtained from the request header. \n+2. `JwtDecoder`  is used to parse the token into `Jwt`.\n+3. Claims, headers etc in `Jwt` will be extracted, they will be wrapped in `AzureOAuth2AuthenticatedPrincipal` object.\n+4. `AzureOAuth2AuthenticatedPrincipal` will eventually be set into SecurityContext.\n+\n+\n+## Getting started\n+\n+To run this sample, you'll need:\n+\n+- A [Java Development Kit (JDK)][jdk_link], version 1.8 or above.\n+- [Maven](https://maven.apache.org/) 3.0 or above\n+- An Internet connection\n+- A Windows machine (necessary if you want to run the app on Windows)\n+- An OS X machine (necessary if you want to run the app on Mac)\n+- A Linux machine (necessary if you want to run the app on Linux)\n+- An Azure Active Directory (Azure AD) tenant. For more information on how to get an Azure AD tenant, see [How to get an Azure AD tenant](https://azure.microsoft.com/documentation/articles/active-directory-howto-tenant/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fdd32071c1b873d77323726dc46641622f2cedf"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b41a3d54ae4db300998ba47b8eaca6253526e5", "author": {"user": {"login": "ZhuXiaoBing-cn", "name": "Xiaobing Zhu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/21b41a3d54ae4db300998ba47b8eaca6253526e5", "committedDate": "2020-12-11T05:15:51Z", "message": "Adjust Getting Started related content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDc1MzAx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17872#pullrequestreview-551075301", "createdAt": "2020-12-14T06:31:55Z", "commit": {"oid": "21b41a3d54ae4db300998ba47b8eaca6253526e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1542, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}