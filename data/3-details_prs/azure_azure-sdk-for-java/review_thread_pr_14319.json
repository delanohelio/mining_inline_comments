{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjQwMTEx", "number": 14319, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToyNDowM1rOEbn3-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToyNDowM1rOEbn3-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDAwMzEzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/FileAPITest.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToyNDowM1rOHFqP2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDozNjo0OFrOHF9BDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzExMw==", "bodyText": "Can we verify the value of the time?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14319#discussion_r475697113", "createdAt": "2020-08-24T15:24:03Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/FileAPITest.groovy", "diffHunk": "@@ -3364,6 +3367,53 @@ class FileAPITest extends APISpec {\n         null     | null       | null        | null         | garbageLeaseID\n     }\n \n+    @Unroll\n+    def \"Schedule deletion\"() {\n+        given:\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        (expiryTimeProperty != null) == hasExpiry\n+\n+        where:\n+        fileScheduleDeletionOptions                                                             | hasExpiry\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.CREATION_TIME) | true\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.NOW)           | true\n+        new FileScheduleDeletionOptions()                                                       | false\n+        null                                                                                    | false\n+    }\n+\n+    def \"Schedule deletion time\"() {\n+        given:\n+        def fileScheduleDeletionOptions = new FileScheduleDeletionOptions(getUTCNow().plusDays(1))\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        expiryTimeProperty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42bbbf03e38b903e02778c7263bb21f37073a2"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwNzQwOA==", "bodyText": "yeah I can do that", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14319#discussion_r475707408", "createdAt": "2020-08-24T15:38:40Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/FileAPITest.groovy", "diffHunk": "@@ -3364,6 +3367,53 @@ class FileAPITest extends APISpec {\n         null     | null       | null        | null         | garbageLeaseID\n     }\n \n+    @Unroll\n+    def \"Schedule deletion\"() {\n+        given:\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        (expiryTimeProperty != null) == hasExpiry\n+\n+        where:\n+        fileScheduleDeletionOptions                                                             | hasExpiry\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.CREATION_TIME) | true\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.NOW)           | true\n+        new FileScheduleDeletionOptions()                                                       | false\n+        null                                                                                    | false\n+    }\n+\n+    def \"Schedule deletion time\"() {\n+        given:\n+        def fileScheduleDeletionOptions = new FileScheduleDeletionOptions(getUTCNow().plusDays(1))\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        expiryTimeProperty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzExMw=="}, "originalCommit": {"oid": "dc42bbbf03e38b903e02778c7263bb21f37073a2"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAwNDYyMA==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14319#discussion_r476004620", "createdAt": "2020-08-25T00:36:48Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/FileAPITest.groovy", "diffHunk": "@@ -3364,6 +3367,53 @@ class FileAPITest extends APISpec {\n         null     | null       | null        | null         | garbageLeaseID\n     }\n \n+    @Unroll\n+    def \"Schedule deletion\"() {\n+        given:\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        (expiryTimeProperty != null) == hasExpiry\n+\n+        where:\n+        fileScheduleDeletionOptions                                                             | hasExpiry\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.CREATION_TIME) | true\n+        new FileScheduleDeletionOptions(Duration.ofDays(1), FileExpirationOffset.NOW)           | true\n+        new FileScheduleDeletionOptions()                                                       | false\n+        null                                                                                    | false\n+    }\n+\n+    def \"Schedule deletion time\"() {\n+        given:\n+        def fileScheduleDeletionOptions = new FileScheduleDeletionOptions(getUTCNow().plusDays(1))\n+        def fileClient = fsc.getFileClient(generatePathName())\n+        fileClient.create()\n+\n+        when:\n+        fileClient.scheduleDeletionWithResponse(fileScheduleDeletionOptions, null, null)\n+        def expiryTimeProperty = fileClient.getProperties().getExpiresOn()\n+\n+        then:\n+        expiryTimeProperty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY5NzExMw=="}, "originalCommit": {"oid": "dc42bbbf03e38b903e02778c7263bb21f37073a2"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1572, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}