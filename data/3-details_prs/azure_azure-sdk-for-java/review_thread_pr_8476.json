{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzY2ODkz", "number": 8476, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODozM1rODi11KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODozM1rODi11KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODYwMTM3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/OkHttpAsyncHttpClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDoyODozM1rOFuUG1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDozNDo1MFrOFuUSOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODI0Ng==", "bodyText": "Do we still need the null check for mocking (a) and cacheResponse, networkResponse etc (b)?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8476#discussion_r384108246", "createdAt": "2020-02-25T20:28:33Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/OkHttpAsyncHttpClient.java", "diffHunk": "@@ -178,29 +178,21 @@ public void onResponse(okhttp3.Call call, okhttp3.Response response) {\n     private static class OkHttpResponse extends HttpResponse {\n         private final int statusCode;\n         private final HttpHeaders headers;\n-        private final Mono<ResponseBody> responseBodyMono;\n+        private final ResponseBody responseBody;\n         // using 4K as default buffer size: https://stackoverflow.com/a/237495/1473510\n         private static final int BYTE_BUFFER_CHUNK_SIZE = 4096;\n \n         OkHttpResponse(Response innerResponse, HttpRequest request) {\n             super(request);\n             this.statusCode = innerResponse.code();\n             this.headers = fromOkHttpHeaders(innerResponse.headers());\n-            if (innerResponse.body() == null) {\n-                // innerResponse.body() getter will not return null for server returned responses.\n-                // It can be null:\n-                // [a]. if response is built manually with null body (e.g for mocking)\n-                // [b]. for the cases described here\n-                // [ref](https://square.github.io/okhttp/4.x/okhttp/okhttp3/-response/body/).\n-                //\n-                this.responseBodyMono = Mono.empty();\n-            } else {\n-                this.responseBodyMono = Mono.using(innerResponse::body,\n-                    Mono::just,\n-                    // Resource cleanup\n-                    // square.github.io/okhttp/4.x/okhttp/okhttp3/-response-body/#the-response-body-must-be-closed\n-                    ResponseBody::close, /* Change in behavior since reactor-core 3.3.0.RELEASE */ false);\n-            }\n+            // innerResponse.body() getter will not return null for server returned responses.\n+            // It can be null:\n+            // [a]. if response is built manually with null body (e.g for mocking)\n+            // [b]. for the cases described here\n+            // [ref](https://square.github.io/okhttp/4.x/okhttp/okhttp3/-response/body/).\n+            //\n+            this.responseBody = innerResponse.body();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db1f40c282ef85ad98b7c2c6fcf70f40239850a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExMTE2Mw==", "bodyText": "we do that in each of the places this.responseBody is used.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8476#discussion_r384111163", "createdAt": "2020-02-25T20:34:50Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/OkHttpAsyncHttpClient.java", "diffHunk": "@@ -178,29 +178,21 @@ public void onResponse(okhttp3.Call call, okhttp3.Response response) {\n     private static class OkHttpResponse extends HttpResponse {\n         private final int statusCode;\n         private final HttpHeaders headers;\n-        private final Mono<ResponseBody> responseBodyMono;\n+        private final ResponseBody responseBody;\n         // using 4K as default buffer size: https://stackoverflow.com/a/237495/1473510\n         private static final int BYTE_BUFFER_CHUNK_SIZE = 4096;\n \n         OkHttpResponse(Response innerResponse, HttpRequest request) {\n             super(request);\n             this.statusCode = innerResponse.code();\n             this.headers = fromOkHttpHeaders(innerResponse.headers());\n-            if (innerResponse.body() == null) {\n-                // innerResponse.body() getter will not return null for server returned responses.\n-                // It can be null:\n-                // [a]. if response is built manually with null body (e.g for mocking)\n-                // [b]. for the cases described here\n-                // [ref](https://square.github.io/okhttp/4.x/okhttp/okhttp3/-response/body/).\n-                //\n-                this.responseBodyMono = Mono.empty();\n-            } else {\n-                this.responseBodyMono = Mono.using(innerResponse::body,\n-                    Mono::just,\n-                    // Resource cleanup\n-                    // square.github.io/okhttp/4.x/okhttp/okhttp3/-response-body/#the-response-body-must-be-closed\n-                    ResponseBody::close, /* Change in behavior since reactor-core 3.3.0.RELEASE */ false);\n-            }\n+            // innerResponse.body() getter will not return null for server returned responses.\n+            // It can be null:\n+            // [a]. if response is built manually with null body (e.g for mocking)\n+            // [b]. for the cases described here\n+            // [ref](https://square.github.io/okhttp/4.x/okhttp/okhttp3/-response/body/).\n+            //\n+            this.responseBody = innerResponse.body();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEwODI0Ng=="}, "originalCommit": {"oid": "9db1f40c282ef85ad98b7c2c6fcf70f40239850a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 339, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}