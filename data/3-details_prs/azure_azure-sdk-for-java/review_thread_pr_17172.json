{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Mzg5OTU1", "number": 17172, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxMToyN1rOE1Vzvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxMToyN1rOE1Vzvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzY3Mjk1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxMToyN1rOHtj_Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzowNDowOFrOHuCTiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzYzMA==", "bodyText": "Should we be more specific here? only when substatus code  = 0, then retry the write operation.\nMaybe we can have a specific exception type for 410/0, similar to split/migration exception", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17172#discussion_r517537630", "createdAt": "2020-11-04T18:11:27Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "diffHunk": "@@ -863,15 +863,19 @@ static String getHeader(String[] names, String[] values, String name) {\n                                 break;\n                             } else {\n                                 // Have the request URL in the exception message for debugging purposes.\n-                                exception = new GoneException(\n+                                GoneException goneExceptionFromService = new GoneException(\n                                         String.format(\n                                                 RMResources.ExceptionMessage,\n                                                 RMResources.Gone),\n                                         response.headers(),\n                                         request.uri());\n+                                goneExceptionFromService.setIsBasedOn410ResponseFromService();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dd696ac71982437e1ec16f5b8ffa20698ab5b97"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczODA2OA==", "bodyText": "Synced offline.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17172#discussion_r517738068", "createdAt": "2020-11-05T02:01:23Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "diffHunk": "@@ -863,15 +863,19 @@ static String getHeader(String[] names, String[] values, String name) {\n                                 break;\n                             } else {\n                                 // Have the request URL in the exception message for debugging purposes.\n-                                exception = new GoneException(\n+                                GoneException goneExceptionFromService = new GoneException(\n                                         String.format(\n                                                 RMResources.ExceptionMessage,\n                                                 RMResources.Gone),\n                                         response.headers(),\n                                         request.uri());\n+                                goneExceptionFromService.setIsBasedOn410ResponseFromService();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzYzMA=="}, "originalCommit": {"oid": "8dd696ac71982437e1ec16f5b8ffa20698ab5b97"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAzNDMxMw==", "bodyText": "To elaborate what Annie and I discussed offline: Setting the flag indicating that a 410 results in a GoneException because of retrieving a 410 from the service is intentional. We special case certain sub status codes because we need to change the business logic upstream to refresh caches or route differently etc. - there might be additional sub status codes in the future which require special handling and we can add new exception types then.\nThis new flag in the GoneException simply indicates whether a 410 was retrieved form the service - it is used right now to determine whether from an idempotency perspective it is safe to rtery (which is true for any 410 retrieved form the service - we simply don't need the flag in the other special exceptions used for 410 with different substatuscode like PartitionSplitException etc.) - So not constraining setting teh flag to just sub status code 0 is intentional - and if the backend should introduce any additional sub status code it would still continue to be safe to retry from an idempotency perspective - so there is no concern there that would force us to special case substatus code 0 etc.\nI disagree that using a different excetion type would make sense for this case - the GoneException indicating that we retrieved a 410 Gone status code was originally made for this case where we actually get a 410 response. If we would want to signal the different cases for which we use GoneException right now - all the transient GoneExceptions that we generate client-side (because of transport exceptions, because we can't get address for primary replica etc.) should have their own exception types. IMO the benefit is very small (it would help to avoid some confusion - but not much more) and the refactoring would be significant. I am not in favor of doing it, Annie agreed in offline discussion and if anyone thinks this should happen I think it should happen in a separate PR to do the refactoring of all the transient client-side generated GoneExceptions.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17172#discussion_r518034313", "createdAt": "2020-11-05T13:04:08Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "diffHunk": "@@ -863,15 +863,19 @@ static String getHeader(String[] names, String[] values, String name) {\n                                 break;\n                             } else {\n                                 // Have the request URL in the exception message for debugging purposes.\n-                                exception = new GoneException(\n+                                GoneException goneExceptionFromService = new GoneException(\n                                         String.format(\n                                                 RMResources.ExceptionMessage,\n                                                 RMResources.Gone),\n                                         response.headers(),\n                                         request.uri());\n+                                goneExceptionFromService.setIsBasedOn410ResponseFromService();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzYzMA=="}, "originalCommit": {"oid": "8dd696ac71982437e1ec16f5b8ffa20698ab5b97"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2994, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}