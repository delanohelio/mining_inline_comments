{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTI1MDE5", "number": 16597, "title": "Move JsonPatchDocument from azure-core-experimental to azure-core", "bodyText": "This PR moves JsonPatchDocument from the azure-core-expermintal package into the azure-core package. In addition to moving packages JsonPatchOperation and JsonPatchOperationKind have been made package private and JsonPatchDocument.getOperations() has been removed. JsonPatchDocument continues to use a custom Jackson JsonSerializer which has also been made package private.", "createdAt": "2020-10-20T15:59:38Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597", "merged": true, "mergeCommit": {"oid": "5dad048a97f90e8ed650d64908fce296db1d4fef"}, "closed": true, "closedAt": "2020-10-20T23:30:36Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUNZbwAH2gAyNTA2OTI1MDE5OmU2MzZiNGY1OGJjMjE4NGUzMDQ3NTE3N2I5OTcxMjVlYjIyYjdlMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUhWr5AFqTUxMzIwNTUxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e636b4f58bc2184e30475177b997125eb22b7e36", "committedDate": "2020-10-20T00:12:16Z", "message": "Move JsonPatchDocument from azure-core-experimental to azure-core"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTMxNTgw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#pullrequestreview-512931580", "createdAt": "2020-10-20T16:40:43Z", "commit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo0MDo0M1rOHlHXCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo1ODozN1rOHlIElw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3OTk0Nw==", "bodyText": "wondering whether we really need a Supplier instance or just taking Option is good enough. We seem to invoke the supplier immediately.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#discussion_r508679947", "createdAt": "2020-10-20T16:40:43Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/jsonpatch/JsonPatchDocument.java", "diffHunk": "@@ -89,18 +90,18 @@ public JsonPatchDocument appendAdd(String path, Object value) {\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAddRaw#String-String}\n+     * {@codesnippet com.azure.core.util.jsonpatch.JsonPatchDocument.appendAddRaw#String-String}\n      *\n      * @param path The path to apply the addition.\n      * @param rawJson The raw JSON value that will be added to the path.\n      * @return The updated JsonPatchDocument object.\n      * @throws NullPointerException If {@code path} is null.\n      */\n     public JsonPatchDocument appendAddRaw(String path, String rawJson) {\n-        return appendAddInternal(path, () -> Optional.ofNullable(rawJson));\n+        return appendAddInternal(path, () -> Option.of(rawJson));\n     }\n \n-    private JsonPatchDocument appendAddInternal(String path, Supplier<Optional<String>> jsonSupplier) {\n+    private JsonPatchDocument appendAddInternal(String path, Supplier<Option<String>> jsonSupplier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MTYwNw==", "bodyText": "not sure but probably static + DCL is safe in latest version of java, I remember spot bug alerting DCL in the past. jfyi, there is also an init-on-demand-holder pattern for these cases which won't require an explicit lock.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#discussion_r508691607", "createdAt": "2020-10-20T16:58:37Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/jsonpatch/JsonPatchDocument.java", "diffHunk": "@@ -236,46 +237,56 @@ public JsonPatchDocument appendTest(String path, Object value) {\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTestRaw#String-String}\n+     * {@codesnippet com.azure.core.util.jsonpatch.JsonPatchDocument.appendTestRaw#String-String}\n      *\n      * @param path The path to test.\n      * @param rawJson The raw JSON value that will be used to test against.\n      * @return The updated JsonPatchDocument object.\n      * @throws NullPointerException If {@code path} is null.\n      */\n     public JsonPatchDocument appendTestRaw(String path, String rawJson) {\n-        return appendTestInternal(path, () -> Optional.ofNullable(rawJson));\n+        return appendTestInternal(path, () -> Option.of(rawJson));\n     }\n \n-    private JsonPatchDocument appendTestInternal(String path, Supplier<Optional<String>> jsonSupplier) {\n+    private JsonPatchDocument appendTestInternal(String path, Supplier<Option<String>> jsonSupplier) {\n         Objects.requireNonNull(path, \"'path' cannot be null.\");\n \n         return appendOperation(JsonPatchOperationKind.TEST, null, path, jsonSupplier.get());\n     }\n \n-    private Optional<String> serializeValue(Object value) {\n+    private Option<String> serializeValue(Object value) {\n         if (value == null) {\n-            return Optional.empty();\n+            return Option.empty();\n         }\n \n         String rawValue;\n         try {\n+            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+\n             if (serializer == null) {\n-                rawValue = MAPPER.writeValueAsString(value);\n+                if (DEFAULT_SERIALIZER == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "originalPosition": 224}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTgxMTA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#pullrequestreview-512981109", "createdAt": "2020-10-20T17:41:43Z", "commit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzo0MTo0NFrOHlJsxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzo0NjoxOFrOHlJ3tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxODI3OA==", "bodyText": "This is missing version tag.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#discussion_r508718278", "createdAt": "2020-10-20T17:41:44Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/pom.xml", "diffHunk": "@@ -97,6 +97,12 @@\n       <artifactId>netty-tcnative-boringssl-static</artifactId>\n       <version>2.0.31.Final</version> <!-- {x-version-update;io.netty:netty-tcnative-boringssl-static;external_dependency} -->\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-core-serializer-json-jackson</artifactId>\n+      <version>1.1.0-beta.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxODYyNw==", "bodyText": "Why do we need resource manager dependency in azure-core?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#discussion_r508718627", "createdAt": "2020-10-20T17:42:19Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/pom.xml", "diffHunk": "@@ -145,6 +151,12 @@\n       <version>1.22</version> <!-- {x-version-update;org.openjdk.jmh:jmh-generator-annprocess;external_dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure.resourcemanager</groupId>\n+      <artifactId>azure-resourcemanager-resources</artifactId>\n+      <version>2.0.0</version>\n+      <scope>compile</scope>\n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcyMTA3OA==", "bodyText": "Yeah, I agree that if we want lazy loading use holder pattern. DCL with static might not be safe. If this is a constant then, it should be initialized by the classloader in a static block.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#discussion_r508721078", "createdAt": "2020-10-20T17:46:18Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/jsonpatch/JsonPatchDocument.java", "diffHunk": "@@ -236,46 +237,56 @@ public JsonPatchDocument appendTest(String path, Object value) {\n      *\n      * <p><strong>Code Samples</strong></p>\n      *\n-     * {@codesnippet com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTestRaw#String-String}\n+     * {@codesnippet com.azure.core.util.jsonpatch.JsonPatchDocument.appendTestRaw#String-String}\n      *\n      * @param path The path to test.\n      * @param rawJson The raw JSON value that will be used to test against.\n      * @return The updated JsonPatchDocument object.\n      * @throws NullPointerException If {@code path} is null.\n      */\n     public JsonPatchDocument appendTestRaw(String path, String rawJson) {\n-        return appendTestInternal(path, () -> Optional.ofNullable(rawJson));\n+        return appendTestInternal(path, () -> Option.of(rawJson));\n     }\n \n-    private JsonPatchDocument appendTestInternal(String path, Supplier<Optional<String>> jsonSupplier) {\n+    private JsonPatchDocument appendTestInternal(String path, Supplier<Option<String>> jsonSupplier) {\n         Objects.requireNonNull(path, \"'path' cannot be null.\");\n \n         return appendOperation(JsonPatchOperationKind.TEST, null, path, jsonSupplier.get());\n     }\n \n-    private Optional<String> serializeValue(Object value) {\n+    private Option<String> serializeValue(Object value) {\n         if (value == null) {\n-            return Optional.empty();\n+            return Option.empty();\n         }\n \n         String rawValue;\n         try {\n+            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+\n             if (serializer == null) {\n-                rawValue = MAPPER.writeValueAsString(value);\n+                if (DEFAULT_SERIALIZER == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MTYwNw=="}, "originalCommit": {"oid": "e636b4f58bc2184e30475177b997125eb22b7e36"}, "originalPosition": 224}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f788b70780a3d3c86570b4128858b6739cb938b", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7f788b70780a3d3c86570b4128858b6739cb938b", "committedDate": "2020-10-20T21:28:25Z", "message": "Merge branch 'master' into AzCore_MoveJsonPatchDocument"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "433f32832714d0f3889808806be2c18aad395a3d", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/433f32832714d0f3889808806be2c18aad395a3d", "committedDate": "2020-10-20T22:01:13Z", "message": "Removed circular dependency, fixed lazy JsonSerializer instantiation, removed unnecessary Supplier pattern, created test-only JsonSerializer implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52c92524fc3b3c64cc45e87255ed131f9089db35", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/52c92524fc3b3c64cc45e87255ed131f9089db35", "committedDate": "2020-10-20T22:03:16Z", "message": "Add missing export to module-info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2eb533c215a1fecc894c0e87c9061a9500ed6f8", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e2eb533c215a1fecc894c0e87c9061a9500ed6f8", "committedDate": "2020-10-20T22:29:51Z", "message": "Remove exports and opens from azure-core-experimental for jsonpatch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjA1NTE2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16597#pullrequestreview-513205516", "createdAt": "2020-10-20T23:27:22Z", "commit": {"oid": "e2eb533c215a1fecc894c0e87c9061a9500ed6f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1846, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}