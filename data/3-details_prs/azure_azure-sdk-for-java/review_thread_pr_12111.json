{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzcwNDkz", "number": 12111, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0OTo0M1rOEE39gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjoxODoyN1rOEFtzeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ2NjI1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0OTo0M1rOGixTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo0OTo0M1rOGixTvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjYzNw==", "bodyText": "Will move this to a common function.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439112637", "createdAt": "2020-06-11T22:49:43Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -188,15 +178,22 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n-        beginRecognizeCustomForms(Flux<ByteBuffer> form, String modelId, long length, FormContentType formContentType,\n-        boolean includeTextDetails, Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        beginRecognizeCustomForms(RecognizeCustomFormsOptions recognizeCustomFormsOptions) {\n+        final String modelId = recognizeCustomFormsOptions.getModelId();\n+        Flux<ByteBuffer> buffer;\n+        if (recognizeCustomFormsOptions.getForm() != null) {\n+            buffer = Utility.toFluxByteBuffer(recognizeCustomFormsOptions.getForm());\n+        } else {\n+            buffer = recognizeCustomFormsOptions.getFormData();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTQ3MTMxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjo1MjowNlrOGixWxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0MDoyOVrOGjOICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzQxNQ==", "bodyText": "Still debating if I should keep this API, as I think this parameter set would be more commonly used. And want to keep it simple for the users to pass in FormContentType without having to create options even if it isn't necessarily required.\n@srnagar  thoughts?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439113415", "createdAt": "2020-06-11T22:52:06Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -225,7 +205,7 @@\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<FormPage>>\n         beginRecognizeContent(InputStream form, long length, FormContentType formContentType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NDc3OQ==", "bodyText": "If user studies show that this is a more commonly used parameter set, then I think having this method will make it easier for the majority of the users compared to creating options.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439584779", "createdAt": "2020-06-12T18:40:29Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -225,7 +205,7 @@\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<FormPage>>\n         beginRecognizeContent(InputStream form, long length, FormContentType formContentType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMzQxNQ=="}, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODM3NzUyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeCustomFormsOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNDo1MlrOGjNs6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNDo1MlrOGjNs6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3NzgzNQ==", "bodyText": "Add javadoc", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439577835", "createdAt": "2020-06-12T18:24:52Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeCustomFormsOptions.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.azure.ai.formrecognizer.models;\n+\n+import reactor.core.publisher.Flux;\n+\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+public class RecognizeCustomFormsOptions extends RecognizeOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODM4MDIwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNTo0MlrOGjNulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNTo0MlrOGjNulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3ODI2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static final Duration DEFAULT_DURATION = Duration.ofSeconds(5);\n          \n          \n            \n                static final Duration DEFAULT_POLL_INTERVAL = Duration.ofSeconds(5);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439578260", "createdAt": "2020-06-12T18:25:42Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeOptions.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import reactor.core.publisher.Flux;\n+\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+@Fluent\n+public class RecognizeOptions {\n+    private FormContentType formContentType;\n+    private boolean includeTextContent;\n+    private Duration pollInterval;\n+    private InputStream form;\n+    private Flux<ByteBuffer> formData;\n+    private long length;\n+    private String formUrl;\n+    static final Duration DEFAULT_DURATION = Duration.ofSeconds(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODM4NDMzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNzoxMlrOGjNxTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODoyNzoxMlrOGjNxTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3ODk1OA==", "bodyText": "This should be set to DEFAULT_DURATION in case the setter is not called.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439578958", "createdAt": "2020-06-12T18:27:12Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeOptions.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import reactor.core.publisher.Flux;\n+\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+import java.time.Duration;\n+import java.util.Objects;\n+\n+@Fluent\n+public class RecognizeOptions {\n+    private FormContentType formContentType;\n+    private boolean includeTextContent;\n+    private Duration pollInterval;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODM5MjkyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODozMDoyOVrOGjN2_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMDoyMTowNFrOGjQlsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4MDQxMw==", "bodyText": "Should this be named BeginRecognizeReceiptsOptions as per guidelines?\n\nDO name the options type after the name of the service method it is used for, such that the type is named Options. For example, above the method was createBlob, and so the options type was named CreateBlobOptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439580413", "createdAt": "2020-06-12T18:30:29Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -355,10 +322,7 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<RecognizedReceipt>>\n-        beginRecognizeReceipts(InputStream receipt, long length, FormContentType formContentType,\n-        boolean includeTextDetails, Duration pollInterval) {\n-        Flux<ByteBuffer> buffer = Utility.toFluxByteBuffer(receipt);\n-        return client.beginRecognizeReceipts(buffer, length, formContentType, includeTextDetails, pollInterval)\n-            .getSyncPoller();\n+        beginRecognizeReceipts(RecognizeOptions recognizeOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 241}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyNTEzNg==", "bodyText": "I think this could serve as an exception since RecognizeOPtions is not confined to just receipts API. It can be applied to the receipt and content API.\nI remember discussing this with @JonathanGiles that some options could be more generic in nature and could be applied to more than one method. So, in that case, we cannot follow the <operation-name>Options naming.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439625136", "createdAt": "2020-06-12T20:21:04Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -355,10 +322,7 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<RecognizedReceipt>>\n-        beginRecognizeReceipts(InputStream receipt, long length, FormContentType formContentType,\n-        boolean includeTextDetails, Duration pollInterval) {\n-        Flux<ByteBuffer> buffer = Utility.toFluxByteBuffer(receipt);\n-        return client.beginRecognizeReceipts(buffer, length, formContentType, includeTextDetails, pollInterval)\n-            .getSyncPoller();\n+        beginRecognizeReceipts(RecognizeOptions recognizeOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4MDQxMw=="}, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 241}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODQyOTA3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0Mzo1NFrOGjOOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoyOTo0MlrOGjT4jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NjMwNQ==", "bodyText": "Do we need this method? It's the same as beginRecognizeContent(RecognizeOptions recognizeOptions) below.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439586305", "createdAt": "2020-06-12T18:43:54Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -242,10 +237,9 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<FormPage>>\n-        beginRecognizeContentFromUrl(String formUrl, Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n-        return new PollerFlux<OperationResult, List<FormPage>>(interval,\n-            contentAnalyzeActivationOperation(formUrl),\n+        beginRecognizeContentFromUrl(RecognizeOptions recognizeOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyNTg4NQ==", "bodyText": "I think we should have  beginRecognizeContentFromUrl(RecognizeOptions recognizeOptions)\ntoo, since it allows the user an option to pass the configurable options when passing in a URL input for the form/receipt.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439625885", "createdAt": "2020-06-12T20:22:58Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -242,10 +237,9 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<FormPage>>\n-        beginRecognizeContentFromUrl(String formUrl, Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n-        return new PollerFlux<OperationResult, List<FormPage>>(interval,\n-            contentAnalyzeActivationOperation(formUrl),\n+        beginRecognizeContentFromUrl(RecognizeOptions recognizeOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NjMwNQ=="}, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3OTExNw==", "bodyText": "Updated to remove the suggested overload as it can be accessed via  beginRecognizeContent(RecognizeOptions recognizeOptions)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439679117", "createdAt": "2020-06-12T23:29:42Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -242,10 +237,9 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<FormPage>>\n-        beginRecognizeContentFromUrl(String formUrl, Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n-        return new PollerFlux<OperationResult, List<FormPage>>(interval,\n-            contentAnalyzeActivationOperation(formUrl),\n+        beginRecognizeContentFromUrl(RecognizeOptions recognizeOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NjMwNQ=="}, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODQzNDE3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxODo0NTozOFrOGjORHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoyODoyN1rOGjT3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NzEwMA==", "bodyText": "This method can be removed now as there is beginRecognizeCustomForms(RecognizeCustomFormsOptions recognizeCustomFormsOptions).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439587100", "createdAt": "2020-06-12T18:45:38Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -120,15 +117,15 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n-        beginRecognizeCustomFormsFromUrl(String formUrl, String modelId, boolean includeTextDetails,\n-        Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        beginRecognizeCustomFormsFromUrl(RecognizeCustomFormsOptions recognizeCustomFormsOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3ODkyMA==", "bodyText": "Updated it to be package-private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r439678920", "createdAt": "2020-06-12T23:28:27Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -120,15 +117,15 @@\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n-        beginRecognizeCustomFormsFromUrl(String formUrl, String modelId, boolean includeTextDetails,\n-        Duration pollInterval) {\n-        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        beginRecognizeCustomFormsFromUrl(RecognizeCustomFormsOptions recognizeCustomFormsOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4NzEwMA=="}, "originalCommit": {"oid": "e3fd68deb7f89cf1c23fe856c43cc6451f6f9ecc"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjgxNDQ3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMTo0MFrOGj2LRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowMTo0MFrOGj2LRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MDk2Ng==", "bodyText": "nit: recognize APIs", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440240966", "createdAt": "2020-06-15T15:01:40Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,8 @@\n \n ## 1.0.0-beta.4 (Unreleased)\n ### Breaking Changes\n+- Add `RecognizeOptions` and `RecognizeCustomFormOptions` to pass configurable options when using recognize API's on", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3246f5fbf7612ace2758f949c8d100d8daaa3f13"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjgyNzk0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowNTowNFrOGj2USg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOToxNzozM1rOGj_ZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzI3NA==", "bodyText": "nit: It's a little confusing that RecognizeCustomFormsOptions takes arguments in the order (form, length, modelId), while this function takes it in (form, modelId, length)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440243274", "createdAt": "2020-06-15T15:05:04Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -157,7 +139,8 @@\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n         beginRecognizeCustomForms(Flux<ByteBuffer> form, String modelId, long length, FormContentType formContentType) {\n-        return beginRecognizeCustomForms(form, modelId, length, formContentType, false, null);\n+        return beginRecognizeCustomForms(new RecognizeCustomFormsOptions(form, length, modelId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3246f5fbf7612ace2758f949c8d100d8daaa3f13"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5MTk2OQ==", "bodyText": "I think (form, length, modelId) could be the correct ordering. I will update to follow that ordering and get consistent, thanks!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440391969", "createdAt": "2020-06-15T19:17:33Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -157,7 +139,8 @@\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n         beginRecognizeCustomForms(Flux<ByteBuffer> form, String modelId, long length, FormContentType formContentType) {\n-        return beginRecognizeCustomForms(form, modelId, length, formContentType, false, null);\n+        return beginRecognizeCustomForms(new RecognizeCustomFormsOptions(form, length, modelId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MzI3NA=="}, "originalCommit": {"oid": "3246f5fbf7612ace2758f949c8d100d8daaa3f13"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mjg0MDAxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowNzo0NlrOGj2b5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTowNzo0NlrOGj2b5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NTIyMg==", "bodyText": "You should also add that you're switching includeTextDetails -> includeTextContent in the options class", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440245222", "createdAt": "2020-06-15T15:07:46Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,8 @@\n \n ## 1.0.0-beta.4 (Unreleased)\n ### Breaking Changes\n+- Add `RecognizeOptions` and `RecognizeCustomFormOptions` to pass configurable options when using recognize API's on\n+FormRecognizerClient.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3246f5fbf7612ace2758f949c8d100d8daaa3f13"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDI4MDk4OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjoxNTozNlrOGkElog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjoxNTozNlrOGkElog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ3NzA5MA==", "bodyText": "Remove the annotation too as this now a package-private method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440477090", "createdAt": "2020-06-15T22:15:36Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -94,41 +96,20 @@\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<RecognizedForm>>\n         beginRecognizeCustomFormsFromUrl(String formUrl, String modelId) {\n-        return beginRecognizeCustomFormsFromUrl(formUrl, modelId, false, null);\n+        return beginRecognizeCustomFormsFromUrl(new RecognizeCustomFormsOptions(formUrl, modelId));\n     }\n \n-    /**\n-     * Recognizes form data from documents using optical character recognition (OCR) and a custom trained\n-     * model.\n-     * <p>The service does not support cancellation of the long running operation and returns with an\n-     * error message indicating absence of cancellation support.</p>\n-     *\n-     * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomFormsFromUrl#string-string-boolean-Duration}\n-     *\n-     * @param formUrl The source URL to the input form.\n-     * @param modelId The UUID string format custom trained model Id to be used.\n-     * @param includeTextDetails Include text lines and element references in the result.\n-     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n-     * 5 seconds is used.\n-     *\n-     * @return A {@link PollerFlux} that polls the recognize custom form operation until it has completed, has failed,\n-     * or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n-     * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n-     * an {@link OperationStatus#FAILED}.\n-     * @throws NullPointerException If {@code formUrl}, {@code modelId} is {@code null}.\n-     */\n     @ServiceMethod(returns = ReturnType.COLLECTION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e800c9875d6ffb80f566cbe1a406d2fbcf5b4f5e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDI4Nzk0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjoxODoyN1rOGkEpww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjoxODoyN1rOGkEpww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ3ODE0Nw==", "bodyText": "Add a null check for recognizeOptions before using it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12111#discussion_r440478147", "createdAt": "2020-06-15T22:18:27Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -305,14 +267,17 @@\n      * @throws NullPointerException If {@code form} is {@code null}.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<OperationResult, List<FormPage>> beginRecognizeContent(\n-        Flux<ByteBuffer> form, long length, FormContentType formContentType, Duration pollInterval) {\n+    public PollerFlux<OperationResult, List<FormPage>> beginRecognizeContent(RecognizeOptions recognizeOptions) {\n+        if (recognizeOptions.getFormUrl() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e800c9875d6ffb80f566cbe1a406d2fbcf5b4f5e"}, "originalPosition": 242}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3895, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}