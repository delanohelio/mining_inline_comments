{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTE2MDgy", "number": 15561, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoxMjo1MFrOEmsu8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzo0OToyOFrOEm0opA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDE0MjU5OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoxMjo1MFrOHW4fYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoxMjo1MFrOHW4fYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc1NjI1Ng==", "bodyText": "NOTE: I'll update the external_dep file before merging, as that will impact other libraries using MSAL too.\nCurrently, the scope of review is kept till Identity only.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r493756256", "createdAt": "2020-09-23T17:12:50Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/pom.xml", "diffHunk": "@@ -32,7 +32,7 @@\n     <dependency>\n       <groupId>com.microsoft.azure</groupId>\n       <artifactId>msal4j</artifactId>\n-      <version>1.6.2</version> <!-- {x-version-update;com.microsoft.azure:msal4j;external_dependency} -->\n+      <version>1.7.0</version> <!-- {x-version-update;com.microsoft.azure:msal4j;external_dependency} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "046af3e04c67bf821934ad7272bc0779b98281a9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTQyODU2OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredential.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzo0NzoxOVrOHXEy0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjowNToxNFrOHXuOyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1Nzg0Mg==", "bodyText": "nit: The formatting looks a bit odd. Probably moving the instantiation of AuthenticationRecord outside of set() would make it more readable too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r493957842", "createdAt": "2020-09-23T23:47:19Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredential.java", "diffHunk": "@@ -119,8 +119,9 @@\n     private AccessToken updateCache(MsalToken msalToken) {\n         cachedToken.set(\n                 new MsalAuthenticationAccount(\n-                        new AuthenticationRecord(msalToken.getAuthenticationResult(),\n-                                identityClient.getTenantId(), identityClient.getClientId())));\n+                    new AuthenticationRecord(msalToken.getAuthenticationResult(),\n+                                identityClient.getTenantId(), identityClient.getClientId()),\n+                    msalToken.getAccount().getTenantProfiles()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYzNjc0NA==", "bodyText": "agreed,\nwill update it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r494636744", "createdAt": "2020-09-24T22:05:14Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredential.java", "diffHunk": "@@ -119,8 +119,9 @@\n     private AccessToken updateCache(MsalToken msalToken) {\n         cachedToken.set(\n                 new MsalAuthenticationAccount(\n-                        new AuthenticationRecord(msalToken.getAuthenticationResult(),\n-                                identityClient.getTenantId(), identityClient.getClientId())));\n+                    new AuthenticationRecord(msalToken.getAuthenticationResult(),\n+                                identityClient.getTenantId(), identityClient.getClientId()),\n+                    msalToken.getAccount().getTenantProfiles()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1Nzg0Mg=="}, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTQzMzM5OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzo0ODozN1rOHXE1wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjowNDozM1rOHXuNxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1ODU5NA==", "bodyText": "Do we need to special-case this for a list with size 1? Can createFromCertificateChain handle a list that has just 1 entry?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r493958594", "createdAt": "2020-09-23T23:48:37Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -172,9 +174,15 @@ private ConfidentialClientApplication getConfidentialClientApplication() {\n                 if (certificatePassword == null) {\n                     byte[] pemCertificateBytes = Files.readAllBytes(Paths.get(certificatePath));\n \n-                    credential = ClientCredentialFactory.createFromCertificate(\n-                        CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n-                        CertificateUtil.publicKeyFromPem(pemCertificateBytes));\n+                    List<X509Certificate> x509CertificateList =  CertificateUtil.publicKeyFromPem(pemCertificateBytes);\n+                    PrivateKey privateKey = CertificateUtil.privateKeyFromPem(pemCertificateBytes);\n+                    if (x509CertificateList.size() == 1) {\n+                        credential = ClientCredentialFactory.createFromCertificate(\n+                            privateKey, x509CertificateList.get(0));\n+                    } else {\n+                        credential = ClientCredentialFactory.createFromCertificateChain(\n+                            privateKey, x509CertificateList);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYzNjQ4NA==", "bodyText": "yeah, we need to special case it, to ensure that the cert chain is empty and is not sent as part of the request, when there's only one cert to send.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r494636484", "createdAt": "2020-09-24T22:04:33Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -172,9 +174,15 @@ private ConfidentialClientApplication getConfidentialClientApplication() {\n                 if (certificatePassword == null) {\n                     byte[] pemCertificateBytes = Files.readAllBytes(Paths.get(certificatePath));\n \n-                    credential = ClientCredentialFactory.createFromCertificate(\n-                        CertificateUtil.privateKeyFromPem(pemCertificateBytes),\n-                        CertificateUtil.publicKeyFromPem(pemCertificateBytes));\n+                    List<X509Certificate> x509CertificateList =  CertificateUtil.publicKeyFromPem(pemCertificateBytes);\n+                    PrivateKey privateKey = CertificateUtil.privateKeyFromPem(pemCertificateBytes);\n+                    if (x509CertificateList.size() == 1) {\n+                        credential = ClientCredentialFactory.createFromCertificate(\n+                            privateKey, x509CertificateList.get(0));\n+                    } else {\n+                        credential = ClientCredentialFactory.createFromCertificateChain(\n+                            privateKey, x509CertificateList);\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1ODU5NA=="}, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTQzNzE2OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/CertificateUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzo0OToyOFrOHXE4LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjowMzo0NVrOHXuMkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1OTIxMg==", "bodyText": "Pattern compilation is expensive. So, maybe it's good to just make this pattern into a static final constant.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r493959212", "createdAt": "2020-09-23T23:49:28Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/CertificateUtil.java", "diffHunk": "@@ -54,24 +56,31 @@ public static PrivateKey privateKeyFromPem(byte[] pem) {\n     }\n \n     /**\n-     * Extracts the X509Certificate certificate from a PEM certificate.\n+     * Extracts the X509Certificate certificate/certificate-chain from a PEM certificate.\n      * @param pem the contents of a PEM certificate.\n-     * @return the X509Certificate certificate\n+     * @return the {@link List} of X509Certificate certificate\n      */\n-    public static X509Certificate publicKeyFromPem(byte[] pem) {\n-        Pattern pattern = Pattern.compile(\"(?s)-----BEGIN CERTIFICATE-----.*-----END CERTIFICATE-----\");\n+    public static List<X509Certificate> publicKeyFromPem(byte[] pem) {\n+        Pattern pattern = Pattern.compile(\"(?s)-----BEGIN CERTIFICATE-----.*?-----END CERTIFICATE-----\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYzNjE3Ng==", "bodyText": "In this case, it is only called once during client construction and not in any API call.\nSo, having it localized will help to get it garbage collected, after use.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15561#discussion_r494636176", "createdAt": "2020-09-24T22:03:45Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/util/CertificateUtil.java", "diffHunk": "@@ -54,24 +56,31 @@ public static PrivateKey privateKeyFromPem(byte[] pem) {\n     }\n \n     /**\n-     * Extracts the X509Certificate certificate from a PEM certificate.\n+     * Extracts the X509Certificate certificate/certificate-chain from a PEM certificate.\n      * @param pem the contents of a PEM certificate.\n-     * @return the X509Certificate certificate\n+     * @return the {@link List} of X509Certificate certificate\n      */\n-    public static X509Certificate publicKeyFromPem(byte[] pem) {\n-        Pattern pattern = Pattern.compile(\"(?s)-----BEGIN CERTIFICATE-----.*-----END CERTIFICATE-----\");\n+    public static List<X509Certificate> publicKeyFromPem(byte[] pem) {\n+        Pattern pattern = Pattern.compile(\"(?s)-----BEGIN CERTIFICATE-----.*?-----END CERTIFICATE-----\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk1OTIxMg=="}, "originalCommit": {"oid": "e0ebb7e08de74a0d90f52e195a86fa4d58458556"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 837, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}