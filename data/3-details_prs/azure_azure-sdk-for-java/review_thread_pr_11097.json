{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODY1MTI4", "number": 11097, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozOTozMFrOD7xx1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo0NjoxM1rOD8Rk2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA4MTUwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODozOTozMFrOGUT-Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo1OToxOVrOGUUsLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MTg3NA==", "bodyText": "missing closing", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423951874", "createdAt": "2020-05-12T18:39:30Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "diffHunk": "@@ -26,7 +27,7 @@ private Utility() {\n \n     /**\n      * Automatically detect byte buffer's content type.\n-     *\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2MzY5NA==", "bodyText": "Javadoc is formatted correctly even without closing tags https://stackoverflow.com/questions/33787753/javadoc-closing-tags", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423963694", "createdAt": "2020-05-12T18:59:19Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "diffHunk": "@@ -26,7 +27,7 @@ private Utility() {\n \n     /**\n      * Automatically detect byte buffer's content type.\n-     *\n+     * <p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MTg3NA=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA5MDY1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0MjowNVrOGUUD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0MjowNVrOGUUD7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MzM5MQ==", "bodyText": "can merge two lines in one", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423953391", "createdAt": "2020-05-12T18:42:05Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "diffHunk": "@@ -86,34 +83,31 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration}\n-     *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure storage\n-     * blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n-     * @param includeSubFolders to indicate if sub folders within the set of prefix folders will\n-     * also need to be included when searching for content to be preprocessed.\n-     * @param filePrefix A case-sensitive prefix string to filter documents in the source path\n-     * for training. For example, when using a Azure storage blob Uri, use the prefix to restrict\n-     * sub folders for training.\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration}\n+     *\n+     * @param trainingFilesUrl an externally accessible Azure storage blob container Uri (preferably a\n+     * Shared Access Signature Uri).\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n+     * @param trainModelOptions Filter to apply to the documents in the source path for training.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} that polls the extract receipt operation until it\n      * has completed, has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile,\n-        boolean includeSubFolders, String filePrefix, Duration pollInterval) {\n-        return client.beginTraining(fileSourceUrl, useLabelFile, includeSubFolders,\n-            filePrefix, pollInterval).getSyncPoller();\n+    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,\n+        boolean useTrainingLabels,\n+        TrainModelOptions trainModelOptions, Duration pollInterval) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDA5NTA3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0MzoxOVrOGUUGyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0MzoxOVrOGUUGyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NDEyMQ==", "bodyText": "this seems odd, can be closed in last line and then begin .subscribe( from this line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423954121", "createdAt": "2020-05-12T18:43:19Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -44,39 +46,39 @@ public void beginTraining() {\n                                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n                 });\n             });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining#string-boolean\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining#string-boolean\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#beginTraining} with options\n+     * Code snippet for {@link FormTrainingAsyncClient#beginTraining(String, boolean, TrainModelOptions, Duration)}\n+     * with options\n      */\n     public void beginTrainingWithOptions() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining#string-boolean-boolean-string-Duration\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining#string-boolean-trainModelOptions-Duration\n         String trainingSetSource = \"{training-set-SAS-URL}\";\n-        boolean isIncludeSubFolders = false; // {is-include-subfolders}\n-        String filePrefix = \"{file-prefix}\";\n-        boolean useLabelFile = true;\n-\n-        formTrainingAsyncClient.beginTraining(trainingSetSource, useLabelFile, isIncludeSubFolders, filePrefix,\n-            Duration.ofSeconds(5)).subscribe(recognizePollingOperation -> {\n-                // if training polling operation completed, retrieve the final result.\n-                recognizePollingOperation.getFinalResult().subscribe(customFormModel -> {\n-                    System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n-                    System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n-                    customFormModel.getSubModels().forEach(customFormSubModel ->\n-                        customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->\n-                            System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n-                                key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n+        TrainModelOptions trainModelOptions = new TrainModelOptions().setIncludeSubFolders(false).setPrefix(\n+            \"Invoice\");\n+\n+        formTrainingAsyncClient.beginTraining(trainingSetSource, true, trainModelOptions, Duration.ofSeconds(5)\n+        ).subscribe(recognizePollingOperation -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDE2NzkwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTowMzoyM1rOGUU1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo0ODowNlrOGUWYaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2NjEwMw==", "bodyText": "nitpick: seems like this spacing isn't as good as how it used to be", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423966103", "createdAt": "2020-05-12T19:03:23Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "diffHunk": "@@ -61,15 +62,15 @@ private Utility() {\n             // current chunk don't have enough bytes so return true to get next Chunk if there is one.\n             return true;\n         })\n-        .takeWhile(doContinue -> doContinue)\n-        .then(Mono.defer(() -> {\n-            if (contentType[0] != null) {\n-                return Mono.just(contentType[0]);\n-            } else {\n-                return Mono.error(new RuntimeException(\"Content type could not be detected. \"\n-                    + \"Should use other overload API that takes content type.\"));\n-            }\n-        }));\n+            .takeWhile(doContinue -> doContinue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MTQwMQ==", "bodyText": "Yeah, they were correctly formatted now.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423991401", "createdAt": "2020-05-12T19:48:06Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/Utility.java", "diffHunk": "@@ -61,15 +62,15 @@ private Utility() {\n             // current chunk don't have enough bytes so return true to get next Chunk if there is one.\n             return true;\n         })\n-        .takeWhile(doContinue -> doContinue)\n-        .then(Mono.defer(() -> {\n-            if (contentType[0] != null) {\n-                return Mono.just(contentType[0]);\n-            } else {\n-                return Mono.error(new RuntimeException(\"Content type could not be detected. \"\n-                    + \"Should use other overload API that takes content type.\"));\n-            }\n-        }));\n+            .takeWhile(doContinue -> doContinue)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2NjEwMw=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDE3ODA1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTowNjoyN1rOGUU8FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTowNjoyN1rOGUU8FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2Nzc2NA==", "bodyText": "Random 's' here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423967764", "createdAt": "2020-05-12T19:06:27Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -91,21 +97,23 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining#string-boolean}\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining#string-boolean}\n      *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure\n+     * @param trainingFilesUrl source URL parameter that is either an externally accessible Azure\n      * storage blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n      *\n      * @return A {@link PollerFlux} that polls the training model operation until it has completed, has failed, or has\n      * been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public PollerFlux<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile) {\n-        return beginTraining(fileSourceUrl, useLabelFile, false, null, null);\n+    public PollerFlux<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,\n+        boolean useTrainingLabels) {\n+        return beginTraining(trainingFilesUrl, useTrainingLabels, null, null);\n     }\n \n     /**\n+     * s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDE5ODI2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxMjoxMlrOGUVI4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoyMTozOVrOGUcTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTA0Mw==", "bodyText": "this is probably a question for the wider team, but should we include pollInterval in the TrainModelOptions? I feel like it's not necessarily related (since pollInterval is more about the LROPoller itself), but the user might be confused seeing this and wondering why pollInterval isn't a training model option? Not sure what your thoguhts are on this, I don't feel strongly either way, just wanted to bring it up.\nI'm assuming useLabelFile is also not in TrainModelOptions since we want it more exposed to the user, right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423971043", "createdAt": "2020-05-12T19:12:12Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "diffHunk": "@@ -86,34 +83,31 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration}\n-     *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure storage\n-     * blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n-     * @param includeSubFolders to indicate if sub folders within the set of prefix folders will\n-     * also need to be included when searching for content to be preprocessed.\n-     * @param filePrefix A case-sensitive prefix string to filter documents in the source path\n-     * for training. For example, when using a Azure storage blob Uri, use the prefix to restrict\n-     * sub folders for training.\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration}\n+     *\n+     * @param trainingFilesUrl an externally accessible Azure storage blob container Uri (preferably a\n+     * Shared Access Signature Uri).\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n+     * @param trainModelOptions Filter to apply to the documents in the source path for training.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} that polls the extract receipt operation until it\n      * has completed, has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile,\n-        boolean includeSubFolders, String filePrefix, Duration pollInterval) {\n-        return client.beginTraining(fileSourceUrl, useLabelFile, includeSubFolders,\n-            filePrefix, pollInterval).getSyncPoller();\n+    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MDgxOQ==", "bodyText": "I'm assuming useLabelFile is also not in TrainModelOptions since we want it more exposed to the user, right?\n\nYup, API's are using useTrainingLabels to distinguish  between labeled and unlabeled return result so not containing it in an object and explicitly exposed.\n\nbut should we include pollInterval in the TrainModelOptions?\n\nI am open to doing that.\nWe could even consider removing pollInterval as an option all together since we don't have a lot of supporting use cases to include it?\n@kristapratico @annelo-msft", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423990819", "createdAt": "2020-05-12T19:47:03Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "diffHunk": "@@ -86,34 +83,31 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration}\n-     *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure storage\n-     * blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n-     * @param includeSubFolders to indicate if sub folders within the set of prefix folders will\n-     * also need to be included when searching for content to be preprocessed.\n-     * @param filePrefix A case-sensitive prefix string to filter documents in the source path\n-     * for training. For example, when using a Azure storage blob Uri, use the prefix to restrict\n-     * sub folders for training.\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration}\n+     *\n+     * @param trainingFilesUrl an externally accessible Azure storage blob container Uri (preferably a\n+     * Shared Access Signature Uri).\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n+     * @param trainModelOptions Filter to apply to the documents in the source path for training.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} that polls the extract receipt operation until it\n      * has completed, has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile,\n-        boolean includeSubFolders, String filePrefix, Duration pollInterval) {\n-        return client.beginTraining(fileSourceUrl, useLabelFile, includeSubFolders,\n-            filePrefix, pollInterval).getSyncPoller();\n+    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTA0Mw=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mjk0Mw==", "bodyText": "Guidelines say we need to support it: https://azure.github.io/azure-sdk/general_design.html#long-running-operations\nWhere is pollInterval on the /Analyze methods? I would place it in the same spot across methods - which I think would be outside of TrainModelOptions, but correct me if I'm wrong.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424082943", "createdAt": "2020-05-12T23:04:51Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "diffHunk": "@@ -86,34 +83,31 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration}\n-     *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure storage\n-     * blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n-     * @param includeSubFolders to indicate if sub folders within the set of prefix folders will\n-     * also need to be included when searching for content to be preprocessed.\n-     * @param filePrefix A case-sensitive prefix string to filter documents in the source path\n-     * for training. For example, when using a Azure storage blob Uri, use the prefix to restrict\n-     * sub folders for training.\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration}\n+     *\n+     * @param trainingFilesUrl an externally accessible Azure storage blob container Uri (preferably a\n+     * Shared Access Signature Uri).\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n+     * @param trainModelOptions Filter to apply to the documents in the source path for training.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} that polls the extract receipt operation until it\n      * has completed, has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile,\n-        boolean includeSubFolders, String filePrefix, Duration pollInterval) {\n-        return client.beginTraining(fileSourceUrl, useLabelFile, includeSubFolders,\n-            filePrefix, pollInterval).getSyncPoller();\n+    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTA0Mw=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4ODM3OQ==", "bodyText": "Yeah, it is not included in any Model.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424088379", "createdAt": "2020-05-12T23:21:39Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingClient.java", "diffHunk": "@@ -86,34 +83,31 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * error message indicating absence of cancellation support.</p>\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration}\n-     *\n-     * @param fileSourceUrl source URL parameter that is either an externally accessible Azure storage\n-     * blob container Uri (preferably a Shared Access Signature Uri).\n-     * @param useLabelFile Boolean to specify the use of labeled files for training the model.\n-     * @param includeSubFolders to indicate if sub folders within the set of prefix folders will\n-     * also need to be included when searching for content to be preprocessed.\n-     * @param filePrefix A case-sensitive prefix string to filter documents in the source path\n-     * for training. For example, when using a Azure storage blob Uri, use the prefix to restrict\n-     * sub folders for training.\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration}\n+     *\n+     * @param trainingFilesUrl an externally accessible Azure storage blob container Uri (preferably a\n+     * Shared Access Signature Uri).\n+     * @param useTrainingLabels Boolean to specify the use of labeled files for training the model.\n+     * @param trainModelOptions Filter to apply to the documents in the source path for training.\n      * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} that polls the extract receipt operation until it\n      * has completed, has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile,\n-        boolean includeSubFolders, String filePrefix, Duration pollInterval) {\n-        return client.beginTraining(fileSourceUrl, useLabelFile, includeSubFolders,\n-            filePrefix, pollInterval).getSyncPoller();\n+    public SyncPoller<OperationResult, CustomFormModel> beginTraining(String trainingFilesUrl,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTA0Mw=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDIwMzA3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxMzoyOFrOGUVL1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxMzoyOFrOGUVL1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MTc5Nw==", "bodyText": "probably better to change the code snippets to, making it trainingFilesUrl, useTrainingLabels", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423971797", "createdAt": "2020-05-12T19:13:28Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -19,17 +21,17 @@\n      * Code snippet for {@link FormTrainingAsyncClient} initialization\n      */\n     public void formTrainingAsyncClientInInitialization() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.initialization\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.initialization\n         FormTrainingAsyncClient formTrainingAsyncClient = new FormRecognizerClientBuilder().buildAsyncClient()\n             .getFormTrainingAsyncClient();\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.initialization\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.initialization\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#beginTraining}\n+     * Code snippet for {@link FormTrainingAsyncClient#beginTraining(String, boolean)}\n      */\n     public void beginTraining() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining#string-boolean\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining#string-boolean\n         String trainingSetSource = \"{training-set-SAS-URL}\";\n         boolean useLabelFile = true;\n         formTrainingAsyncClient.beginTraining(trainingSetSource, useLabelFile).subscribe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDIwNzgyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxNTowNlrOGUVPOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo0Mjo1OVrOGUWN-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MjY2NQ==", "bodyText": "maybe you're going to address this in another PR, but from this meeting we also determined to change getModelInfos -> getCustomModels", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423972665", "createdAt": "2020-05-12T19:15:06Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -106,72 +108,72 @@ public void getCustomModelWithResponse() {\n                     System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n                         key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getAccountProperties}\n+     * Code snippet for {@link FormTrainingAsyncClient#getAccountProperties()}\n      */\n     public void getAccountProperties() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties\n         formTrainingAsyncClient.getAccountProperties().subscribe(accountProperties -> {\n             System.out.printf(\"Max number of models that can be trained for this account: %s%n\",\n-                accountProperties.getLimit());\n-            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCount());\n+                accountProperties.getCustomModelLimit());\n+            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCustomModelCount());\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getAccountPropertiesWithResponse}\n+     * Code snippet for {@link FormTrainingAsyncClient#getAccountPropertiesWithResponse()}\n      */\n     public void getAccountPropertiesWithResponse() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n         formTrainingAsyncClient.getAccountPropertiesWithResponse().subscribe(response -> {\n             System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n             AccountProperties accountProperties = response.getValue();\n             System.out.printf(\"Max number of models that can be trained for this account: %s%n\",\n-                accountProperties.getLimit());\n-            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCount());\n+                accountProperties.getCustomModelLimit());\n+            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCustomModelCount());\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n     }\n \n     /**\n      * Code snippet for {@link FormTrainingAsyncClient#deleteModel}\n      */\n     public void deleteModel() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel#string\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel#string\n         String modelId = \"{model_id}\";\n         formTrainingAsyncClient.deleteModel(modelId).subscribe(val ->\n             System.out.printf(\"Model Id: %s is deleted%n\", modelId));\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#deleteModelWithResponse}\n+     * Code snippet for {@link FormTrainingAsyncClient#deleteModelWithResponse(String)}\n      */\n     public void deleteModelWithResponse() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse#string\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse#string\n         String modelId = \"{model_id}\";\n         formTrainingAsyncClient.deleteModelWithResponse(modelId).subscribe(response -> {\n             System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n             System.out.printf(\"Model Id: %s is deleted%n\", modelId);\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getModelInfos}\n+     * Code snippet for {@link FormTrainingAsyncClient#getModelInfos()}\n      */\n     public void getModelInfos() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getModelInfos", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4ODczMQ==", "bodyText": "yup, will address some of the name changes in another PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r423988731", "createdAt": "2020-05-12T19:42:59Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -106,72 +108,72 @@ public void getCustomModelWithResponse() {\n                     System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n                         key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getAccountProperties}\n+     * Code snippet for {@link FormTrainingAsyncClient#getAccountProperties()}\n      */\n     public void getAccountProperties() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties\n         formTrainingAsyncClient.getAccountProperties().subscribe(accountProperties -> {\n             System.out.printf(\"Max number of models that can be trained for this account: %s%n\",\n-                accountProperties.getLimit());\n-            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCount());\n+                accountProperties.getCustomModelLimit());\n+            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCustomModelCount());\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getAccountPropertiesWithResponse}\n+     * Code snippet for {@link FormTrainingAsyncClient#getAccountPropertiesWithResponse()}\n      */\n     public void getAccountPropertiesWithResponse() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n         formTrainingAsyncClient.getAccountPropertiesWithResponse().subscribe(response -> {\n             System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n             AccountProperties accountProperties = response.getValue();\n             System.out.printf(\"Max number of models that can be trained for this account: %s%n\",\n-                accountProperties.getLimit());\n-            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCount());\n+                accountProperties.getCustomModelLimit());\n+            System.out.printf(\"Current count of trained custom models: %d%n\", accountProperties.getCustomModelCount());\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse\n     }\n \n     /**\n      * Code snippet for {@link FormTrainingAsyncClient#deleteModel}\n      */\n     public void deleteModel() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel#string\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel#string\n         String modelId = \"{model_id}\";\n         formTrainingAsyncClient.deleteModel(modelId).subscribe(val ->\n             System.out.printf(\"Model Id: %s is deleted%n\", modelId));\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#deleteModelWithResponse}\n+     * Code snippet for {@link FormTrainingAsyncClient#deleteModelWithResponse(String)}\n      */\n     public void deleteModelWithResponse() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse#string\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse#string\n         String modelId = \"{model_id}\";\n         formTrainingAsyncClient.deleteModelWithResponse(modelId).subscribe(response -> {\n             System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n             System.out.printf(\"Model Id: %s is deleted%n\", modelId);\n         });\n-        // END: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse#string\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse#string\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingAsyncClient#getModelInfos}\n+     * Code snippet for {@link FormTrainingAsyncClient#getModelInfos()}\n      */\n     public void getModelInfos() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getModelInfos", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MjY2NQ=="}, "originalCommit": {"oid": "3b366d643145771679329c4d5a554b45e667d9f4"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg5NDg5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzoyMlrOGUcBPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzoyMlrOGUcBPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mzc3Mg==", "bodyText": "should the parameteruseTrainingLabels have ()?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424083772", "createdAt": "2020-05-12T23:07:22Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients\n+- Rename parameter `fileSourceUrl` to `trainingFilesUrl` on FormTrainingClients\n+- Rename parameter `useLabelFile` to `useTrainingLabels()` on FormTrainingClients", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e276beb17c18086c62b80b8edd9240fe2e8b7e1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDkxNjEwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNzoyNVrOGUcOBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMToxMjoyNFrOGUeKBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzA0NQ==", "bodyText": "Also correct me if I'm wrong, but it looks like you use the property name prefix in the code, not filePrefix", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424087045", "createdAt": "2020-05-12T23:17:25Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients\n+- Rename parameter `fileSourceUrl` to `trainingFilesUrl` on FormTrainingClients\n+- Rename parameter `useLabelFile` to `useTrainingLabels()` on FormTrainingClients\n+- Add `TrainModelOptions` model for training file filter properties of `filePrefix` and `includeSubFolders`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e276beb17c18086c62b80b8edd9240fe2e8b7e1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMTA0MQ==", "bodyText": "Oh, this is referring to the param name previously exposed in the API's and not the generated client names.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424101041", "createdAt": "2020-05-13T00:03:38Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients\n+- Rename parameter `fileSourceUrl` to `trainingFilesUrl` on FormTrainingClients\n+- Rename parameter `useLabelFile` to `useTrainingLabels()` on FormTrainingClients\n+- Add `TrainModelOptions` model for training file filter properties of `filePrefix` and `includeSubFolders`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzA0NQ=="}, "originalCommit": {"oid": "1e276beb17c18086c62b80b8edd9240fe2e8b7e1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNDIwNQ==", "bodyText": "Oh got it. Maybe say that it's replacing those parameters?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424104205", "createdAt": "2020-05-13T00:15:59Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients\n+- Rename parameter `fileSourceUrl` to `trainingFilesUrl` on FormTrainingClients\n+- Rename parameter `useLabelFile` to `useTrainingLabels()` on FormTrainingClients\n+- Add `TrainModelOptions` model for training file filter properties of `filePrefix` and `includeSubFolders`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzA0NQ=="}, "originalCommit": {"oid": "1e276beb17c18086c62b80b8edd9240fe2e8b7e1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDExODc5MQ==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424118791", "createdAt": "2020-05-13T01:12:24Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients\n+- Rename parameter `fileSourceUrl` to `trainingFilesUrl` on FormTrainingClients\n+- Rename parameter `useLabelFile` to `useTrainingLabels()` on FormTrainingClients\n+- Add `TrainModelOptions` model for training file filter properties of `filePrefix` and `includeSubFolders`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzA0NQ=="}, "originalCommit": {"oid": "1e276beb17c18086c62b80b8edd9240fe2e8b7e1"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzY0NDk3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyNTo0NVrOGU3Ebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyNTo0NVrOGU3Ebg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyNjk1OA==", "bodyText": "nitpick: adopt the training... (sorry)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424526958", "createdAt": "2020-05-13T15:25:45Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/CHANGELOG.md", "diffHunk": "@@ -2,6 +2,12 @@\n \n ## 1.0.0-beta.3 (Unreleased)\n \n+FormTraining Client updates:\n+- Adopt to `training` namespace for Form Recognizer Training Clients", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81ceddb5259b248b38e857fd706eed08aca4ae63"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTI5MTE0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingClientJavaDocCodeSnippets.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo0NjoxM1rOGVHUSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzo0NjoxM1rOGVHUSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5MzE2Mg==", "bodyText": "nit: doesn't need a new line", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11097#discussion_r424793162", "createdAt": "2020-05-13T23:46:13Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingClientJavaDocCodeSnippets.java", "diffHunk": "@@ -21,57 +23,58 @@\n      * Code snippet for {@link FormTrainingClient} initialization\n      */\n     public void formTrainingClientInInitialization() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingClient.initialization\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingClient.initialization\n         FormTrainingClient formTrainingClient = new FormRecognizerClientBuilder().buildClient()\n             .getFormTrainingClient();\n-        // END: com.azure.ai.formrecognizer.FormTrainingClient.initialization\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingClient.initialization\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingClient#beginTraining}\n+     * Code snippet for {@link FormTrainingClient#beginTraining(String, boolean)}\n      */\n     public void beginTraining() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean\n-        String trainingSetSource = \"{training-set-SAS-URL}\";\n-        boolean useLabelFile = true;\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean\n+        String trainingFilesUrl = \"{training-set-SAS-URL}\";\n+        boolean useTrainingLabels = true;\n         CustomFormModel customFormModel =\n-            formTrainingClient.beginTraining(trainingSetSource, useLabelFile).getFinalResult();\n+            formTrainingClient.beginTraining(trainingFilesUrl, useTrainingLabels).getFinalResult();\n         System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n         System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n         customFormModel.getSubModels().forEach(customFormSubModel ->\n             customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->\n                 System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n                     key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n-        // END: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean\n     }\n \n     /**\n-     * Code snippet for {@link FormTrainingClient#beginTraining} with options\n+     * Code snippet for {@link FormTrainingClient#beginTraining(String, boolean, TrainModelOptions, Duration)}\n+     * with options\n      */\n     public void beginTrainingWithOptions() {\n-        // BEGIN: com.azure.ai.formrecognizer.FormTrainingClient.beginTraining#string-boolean-boolean-string-Duration\n-        String trainingSetSource = \"{training-set-SAS-URL}\";\n-        boolean isIncludeSubFolders = false; // {is-include-subfolders}\n-        String filePrefix = \"{file-prefix}\";\n-        boolean useLabelFile = true;\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingClient.beginTraining#string-boolean-trainModelOptions-Duration\n+        String trainingFilesUrl = \"{training-set-SAS-URL}\";\n+        TrainModelOptions trainModelOptions = new TrainModelOptions().setIncludeSubFolders(false)\n+            .setPrefix(\"Invoice\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81ceddb5259b248b38e857fd706eed08aca4ae63"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4234, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}