{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NDA5MjIy", "number": 9860, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjoxNjoyN1rODunEHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMjozNTo0OFrODu7MDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjAxMTE3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjoxNjoyN1rOGArSYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjoxNjoyN1rOGArSYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MjQwMw==", "bodyText": "Package-private class renamed from ReceiveMessageOptions.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403362403", "createdAt": "2020-04-03T22:16:27Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4312eaafaaeb0990cc3f064a0b36b781f73950"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzE4NTk3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDoxNjo0NFrOGA0bcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDoxNjo0NFrOGA0bcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMjE3OA==", "bodyText": "May be explaining here that  To disable auto-renew, user have to set MaxAutoRenewDuration to zero. And default is true", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403512178", "createdAt": "2020-04-04T20:16:44Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -346,25 +353,44 @@ public String getEntityPath() {\n     }\n \n     /**\n-     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity and completes them\n+     * when they are finished processing.\n      *\n      * @return A stream of messages from the Service Bus entity.\n      */\n     public Flux<ServiceBusReceivedMessage> receive() {\n+        return receive(defaultReceiveOptions);\n+    }\n+\n+    /**\n+     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     *\n+     * @return A stream of messages from the Service Bus entity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzIwMjQ3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDozODoyNVrOGA0jlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMTozMTowMVrOGA1KbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDI2Mg==", "bodyText": "One option could be calculate isAutoRenewLock here using maxAutoLockRenewal value and  remove this argument isAutoRenewLock being passed in. But  it is not must.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403514262", "createdAt": "2020-04-04T20:38:25Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java", "diffHunk": "@@ -34,24 +42,26 @@\n     private final ClientLogger logger = new ClientLogger(ServiceBusMessageProcessor.class);\n     private final boolean isAutoComplete;\n     private final AmqpRetryOptions retryOptions;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> completeFunction;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> onAbandon;\n-    private final Function<ServiceBusReceivedMessage, Mono<Instant>> onRenewLock;\n+    private final AmqpErrorContext errorContext;\n+    private final Function<MessageLockToken, Mono<Void>> completeFunction;\n+    private final Function<MessageLockToken, Mono<Void>> onAbandon;\n+    private final Function<MessageLockToken, Mono<Instant>> onRenewLock;\n     private final Deque<ServiceBusReceivedMessage> messageQueue = new ConcurrentLinkedDeque<>();\n     private final boolean isAutoRenewLock;\n     private final Duration maxAutoLockRenewal;\n     private final MessageLockContainer messageLockContainer;\n \n     ServiceBusMessageProcessor(boolean isAutoComplete, boolean isAutoRenewLock, Duration maxAutoLockRenewal,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUyNDIwNQ==", "bodyText": "I thought about that. But decoupling it seemed like a better approach to separate responsibility.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403524205", "createdAt": "2020-04-04T21:31:01Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java", "diffHunk": "@@ -34,24 +42,26 @@\n     private final ClientLogger logger = new ClientLogger(ServiceBusMessageProcessor.class);\n     private final boolean isAutoComplete;\n     private final AmqpRetryOptions retryOptions;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> completeFunction;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> onAbandon;\n-    private final Function<ServiceBusReceivedMessage, Mono<Instant>> onRenewLock;\n+    private final AmqpErrorContext errorContext;\n+    private final Function<MessageLockToken, Mono<Void>> completeFunction;\n+    private final Function<MessageLockToken, Mono<Void>> onAbandon;\n+    private final Function<MessageLockToken, Mono<Instant>> onRenewLock;\n     private final Deque<ServiceBusReceivedMessage> messageQueue = new ConcurrentLinkedDeque<>();\n     private final boolean isAutoRenewLock;\n     private final Duration maxAutoLockRenewal;\n     private final MessageLockContainer messageLockContainer;\n \n     ServiceBusMessageProcessor(boolean isAutoComplete, boolean isAutoRenewLock, Duration maxAutoLockRenewal,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDI2Mg=="}, "originalCommit": {"oid": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTMwODMxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMjozNTo0OFrOGBD9WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMjozNTo0OFrOGBD9WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc2NjYxNg==", "bodyText": "While  you are changing this to String, you can look at receiveDeferredMessage , there is a problem where we are not calling addOrUpdate  in receiveDeferredMessage  in PEEK LOCK mode. Thus once we receive DeferredMessage, it can not be Completed or deadLetter because MessageLockContainer does not have an entry for this message lock.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403766616", "createdAt": "2020-04-05T22:35:48Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java", "diffHunk": "@@ -23,7 +23,7 @@\n      * @return The updated value in the container. If the expiration time in the container is larger than\n      *     {@code lockTokenExpiration}, then the current container value is used.\n      */\n-    public Instant addOrUpdate(UUID lockToken, Instant lockTokenExpiration) {\n+    public Instant addOrUpdate(String lockToken, Instant lockTokenExpiration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6459a3269b2902e0299b32dd76be5bbeaf4ecdd9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1975, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}