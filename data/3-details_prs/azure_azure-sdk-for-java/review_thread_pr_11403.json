{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTgzOTc3", "number": 11403, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMDo0OTowN1rOD_GT7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDozNlrOEB7Zkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDkwMjg3OnYy", "diffSide": "LEFT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/FormRecognizerClientImplBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMDo0OTowN1rOGZmgbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMDo0OTowN1rOGZmgbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ5ODQ3Ng==", "bodyText": "All files under implementation/ are auto-generated and can be skipped for review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r429498476", "createdAt": "2020-05-23T00:49:07Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/FormRecognizerClientImplBuilder.java", "diffHunk": "@@ -11,39 +11,37 @@\n import com.azure.core.http.policy.RetryPolicy;\n import com.azure.core.http.policy.UserAgentPolicy;\n \n-/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdb6a613203f91714a143be53707f9f4688ead5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjMxNTAyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxODo1NTo0OVrOGar9Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyMjo1OFrOGas3CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNjMwMg==", "bodyText": "I'm not sure if we want to include a copy model sample in the readme. I know for python, we only included it in the list of samples later on, since this isn't a heavily-used scenario. Adding @kristapratico if she has any insights", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430636302", "createdAt": "2020-05-26T18:55:49Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/README.md", "diffHunk": "@@ -279,16 +281,35 @@ customModels.forEach(customFormModelInfo -> {\n // Delete Custom Model\n formTrainingClient.deleteModel(modelId.get());\n ```\n+### Copy model", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1MTE0NQ==", "bodyText": "agree that this is not a champion scenario", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430651145", "createdAt": "2020-05-26T19:22:58Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/README.md", "diffHunk": "@@ -279,16 +281,35 @@ customModels.forEach(customFormModelInfo -> {\n // Delete Custom Model\n formTrainingClient.deleteModel(modelId.get());\n ```\n+### Copy model", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzNjMwMg=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjMzMDYyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowMDoyMFrOGasHKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0MDozM1rOGavjmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzODg5MQ==", "bodyText": "I would link this to getCopyAuthorization and say it's its output, since users aren't expected to build their own CopyAuthorization class. Python ex here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430638891", "createdAt": "2020-05-26T19:00:20Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NTMyMA==", "bodyText": "not necessarily. Someone outside of the running app could have shared the copy authorization, so not in all cases we need to call getCopyAuthorization", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430695320", "createdAt": "2020-05-26T20:40:33Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzODg5MQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjMzNTIzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowMTo0NFrOGasKKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0MjoxMVrOGavmXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzOTY1Nw==", "bodyText": "Mention that this is passed to beginCopyModel. Link for python example here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430639657", "createdAt": "2020-05-26T19:01:44Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NjAzMQ==", "bodyText": "it could be ...", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430696031", "createdAt": "2020-05-26T20:42:11Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYzOTY1Nw=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM1MDAxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowNjoxM1rOGasTwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowNjoxM1rOGasTwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MjExNA==", "bodyText": "I think this is validation the parameters to beginCopyModel. If so, I think you should say \"target\" cannot be null", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430642114", "createdAt": "2020-05-26T19:06:13Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -356,6 +472,88 @@ public FormRecognizerServiceVersion getServiceVersion() {\n                 null));\n     }\n \n+    private Function<PollingContext<OperationResult>, Mono<CustomFormModelInfo>> fetchCopyModelResultOperation(\n+        String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                return service.getCustomModelCopyResultWithResponseAsync(UUID.fromString(modelId), resultUid)\n+                    .map(modelSimpleResponse -> {\n+                        CopyOperationResult copyOperationResult = modelSimpleResponse.getValue();\n+                        return new CustomFormModelInfo(modelId,\n+                            CustomFormModelStatus.fromString(copyOperationResult.getStatus().toString()),\n+                            copyOperationResult.getCreatedDateTime(),\n+                            copyOperationResult.getLastUpdatedDateTime());\n+                    });\n+            } catch (RuntimeException ex) {\n+                return monoError(logger, ex);\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<PollResponse<OperationResult>>>\n+        createCopyPollOperation(String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                PollResponse<OperationResult> operationResultPollResponse = pollingContext.getLatestResponse();\n+                UUID targetId = UUID.fromString(operationResultPollResponse.getValue().getResultId());\n+                return service.getCustomModelCopyResultAsync(UUID.fromString(modelId), targetId)\n+                    .flatMap(modelSimpleResponse ->\n+                        processCopyModelResponse(modelSimpleResponse, operationResultPollResponse));\n+            } catch (HttpResponseException e) {\n+                logger.logExceptionAsError(e);\n+                return Mono.just(new PollResponse<>(LongRunningOperationStatus.FAILED, null));\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<OperationResult>> getCopyActivationOperation(\n+        String modelId, CopyAuthorization copyAuthorization) {\n+        return (pollingContext) -> {\n+            try {\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                Objects.requireNonNull(copyAuthorization, \"'copyAuthorization' cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM1MTAzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowNjozMVrOGasUYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDoxMzo1NlrOGausIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MjI3NQ==", "bodyText": "why is there an empty case", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430642275", "createdAt": "2020-05-26T19:06:31Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -356,6 +472,88 @@ public FormRecognizerServiceVersion getServiceVersion() {\n                 null));\n     }\n \n+    private Function<PollingContext<OperationResult>, Mono<CustomFormModelInfo>> fetchCopyModelResultOperation(\n+        String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                return service.getCustomModelCopyResultWithResponseAsync(UUID.fromString(modelId), resultUid)\n+                    .map(modelSimpleResponse -> {\n+                        CopyOperationResult copyOperationResult = modelSimpleResponse.getValue();\n+                        return new CustomFormModelInfo(modelId,\n+                            CustomFormModelStatus.fromString(copyOperationResult.getStatus().toString()),\n+                            copyOperationResult.getCreatedDateTime(),\n+                            copyOperationResult.getLastUpdatedDateTime());\n+                    });\n+            } catch (RuntimeException ex) {\n+                return monoError(logger, ex);\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<PollResponse<OperationResult>>>\n+        createCopyPollOperation(String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                PollResponse<OperationResult> operationResultPollResponse = pollingContext.getLatestResponse();\n+                UUID targetId = UUID.fromString(operationResultPollResponse.getValue().getResultId());\n+                return service.getCustomModelCopyResultAsync(UUID.fromString(modelId), targetId)\n+                    .flatMap(modelSimpleResponse ->\n+                        processCopyModelResponse(modelSimpleResponse, operationResultPollResponse));\n+            } catch (HttpResponseException e) {\n+                logger.logExceptionAsError(e);\n+                return Mono.just(new PollResponse<>(LongRunningOperationStatus.FAILED, null));\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<OperationResult>> getCopyActivationOperation(\n+        String modelId, CopyAuthorization copyAuthorization) {\n+        return (pollingContext) -> {\n+            try {\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                Objects.requireNonNull(copyAuthorization, \"'copyAuthorization' cannot be null.\");\n+                CopyRequest copyRequest = new CopyRequest()\n+                    .setTargetResourceId(copyAuthorization.getResourceId())\n+                    .setTargetResourceRegion(copyAuthorization.getResourceRegion())\n+                    .setCopyAuthorization(new CopyAuthorizationResult()\n+                        .setModelId(copyAuthorization.getModelId())\n+                        .setAccessToken(copyAuthorization.getAccessToken())\n+                        .setExpirationDateTimeTicks(copyAuthorization.getExpirationDateTimeTicks()));\n+                return service.copyCustomModelWithResponseAsync(UUID.fromString(modelId), copyRequest)\n+                    .map(response ->\n+                        new OperationResult(parseModelId(response.getDeserializedHeaders().getOperationLocation())));\n+            } catch (RuntimeException ex) {\n+                return monoError(logger, ex);\n+            }\n+        };\n+    }\n+\n+    private static Mono<PollResponse<OperationResult>> processCopyModelResponse(\n+        CopyOperationResult copyModel,\n+        PollResponse<OperationResult> copyModelOperationResponse) {\n+        LongRunningOperationStatus status;\n+        switch (copyModel.getStatus()) {\n+            case NOT_STARTED:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4MTEyMg==", "bodyText": "It is kind of a fall-through, so it will behave similarly as the next case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430681122", "createdAt": "2020-05-26T20:13:56Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -356,6 +472,88 @@ public FormRecognizerServiceVersion getServiceVersion() {\n                 null));\n     }\n \n+    private Function<PollingContext<OperationResult>, Mono<CustomFormModelInfo>> fetchCopyModelResultOperation(\n+        String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                return service.getCustomModelCopyResultWithResponseAsync(UUID.fromString(modelId), resultUid)\n+                    .map(modelSimpleResponse -> {\n+                        CopyOperationResult copyOperationResult = modelSimpleResponse.getValue();\n+                        return new CustomFormModelInfo(modelId,\n+                            CustomFormModelStatus.fromString(copyOperationResult.getStatus().toString()),\n+                            copyOperationResult.getCreatedDateTime(),\n+                            copyOperationResult.getLastUpdatedDateTime());\n+                    });\n+            } catch (RuntimeException ex) {\n+                return monoError(logger, ex);\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<PollResponse<OperationResult>>>\n+        createCopyPollOperation(String modelId) {\n+        return (pollingContext) -> {\n+            try {\n+                PollResponse<OperationResult> operationResultPollResponse = pollingContext.getLatestResponse();\n+                UUID targetId = UUID.fromString(operationResultPollResponse.getValue().getResultId());\n+                return service.getCustomModelCopyResultAsync(UUID.fromString(modelId), targetId)\n+                    .flatMap(modelSimpleResponse ->\n+                        processCopyModelResponse(modelSimpleResponse, operationResultPollResponse));\n+            } catch (HttpResponseException e) {\n+                logger.logExceptionAsError(e);\n+                return Mono.just(new PollResponse<>(LongRunningOperationStatus.FAILED, null));\n+            }\n+        };\n+    }\n+\n+    private Function<PollingContext<OperationResult>, Mono<OperationResult>> getCopyActivationOperation(\n+        String modelId, CopyAuthorization copyAuthorization) {\n+        return (pollingContext) -> {\n+            try {\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n+                Objects.requireNonNull(copyAuthorization, \"'copyAuthorization' cannot be null.\");\n+                CopyRequest copyRequest = new CopyRequest()\n+                    .setTargetResourceId(copyAuthorization.getResourceId())\n+                    .setTargetResourceRegion(copyAuthorization.getResourceRegion())\n+                    .setCopyAuthorization(new CopyAuthorizationResult()\n+                        .setModelId(copyAuthorization.getModelId())\n+                        .setAccessToken(copyAuthorization.getAccessToken())\n+                        .setExpirationDateTimeTicks(copyAuthorization.getExpirationDateTimeTicks()));\n+                return service.copyCustomModelWithResponseAsync(UUID.fromString(modelId), copyRequest)\n+                    .map(response ->\n+                        new OperationResult(parseModelId(response.getDeserializedHeaders().getOperationLocation())));\n+            } catch (RuntimeException ex) {\n+                return monoError(logger, ex);\n+            }\n+        };\n+    }\n+\n+    private static Mono<PollResponse<OperationResult>> processCopyModelResponse(\n+        CopyOperationResult copyModel,\n+        PollResponse<OperationResult> copyModelOperationResponse) {\n+        LongRunningOperationStatus status;\n+        switch (copyModel.getStatus()) {\n+            case NOT_STARTED:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MjI3NQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 212}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM1Njc3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowODoyMFrOGasYPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDoxNTo1OFrOGauwXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MzI2Mw==", "bodyText": "why is this final and the rest are not", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430643263", "createdAt": "2020-05-26T19:08:20Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.ai.formrecognizer.models.OperationResult;\n+import com.azure.ai.formrecognizer.training.FormTrainingClient;\n+import com.azure.ai.formrecognizer.training.FormTrainingClientBuilder;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * Sample for copying a custom model from a source Form Recognizer resource to a target Form Recognizer resource.\n+ */\n+public class CopyModel {\n+\n+    /**\n+     * Main method to invoke this demo.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     */\n+    public static void main(final String[] args) {\n+        // Instantiate a client that will be used to call the service.\n+\n+        FormTrainingClient client = new FormTrainingClientBuilder()\n+            .credential(new AzureKeyCredential(\"{key}\"))\n+            .endpoint(\"https://{endpoint}.cognitiveservices.azure.com/\")\n+            .buildClient();\n+\n+        String targetResourceId = \"target-resource-Id\";\n+        String targetResourceRegion = \"target-resource-region\";\n+        final String copyModelId = \"copy-model-Id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4MjIwNA==", "bodyText": "I will update this to not be final, it doesn't add a lot and will avoid too much of code in the user-samples.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430682204", "createdAt": "2020-05-26T20:15:58Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.ai.formrecognizer.models.OperationResult;\n+import com.azure.ai.formrecognizer.training.FormTrainingClient;\n+import com.azure.ai.formrecognizer.training.FormTrainingClientBuilder;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * Sample for copying a custom model from a source Form Recognizer resource to a target Form Recognizer resource.\n+ */\n+public class CopyModel {\n+\n+    /**\n+     * Main method to invoke this demo.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     */\n+    public static void main(final String[] args) {\n+        // Instantiate a client that will be used to call the service.\n+\n+        FormTrainingClient client = new FormTrainingClientBuilder()\n+            .credential(new AzureKeyCredential(\"{key}\"))\n+            .endpoint(\"https://{endpoint}.cognitiveservices.azure.com/\")\n+            .buildClient();\n+\n+        String targetResourceId = \"target-resource-Id\";\n+        String targetResourceRegion = \"target-resource-region\";\n+        final String copyModelId = \"copy-model-Id\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MzI2Mw=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM2NDU0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxMDo0MFrOGasc-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxMDo0MFrOGasc-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NDQ3Mg==", "bodyText": "Why are these final, but the above variables in the code snippet not", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430644472", "createdAt": "2020-05-26T19:10:40Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -194,4 +195,88 @@ public void getModelInfos() {\n                 customModel.getLastUpdatedOn()));\n         // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getModelInfos\n     }\n+\n+    /**\n+     * Code snippet for {@link FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)}\n+     */\n+    public void beginCopy() {\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization\n+        String resourceId = \"target-resource-Id\";\n+        String resourceRegion = \"target-resource-region\";\n+        String copyModelId = \"copy-model-Id\";\n+        formTrainingAsyncClient.getCopyAuthorization(resourceId, resourceRegion)\n+            .subscribe(copyAuthorization -> formTrainingAsyncClient.beginCopyModel(copyModelId, copyAuthorization)\n+                .subscribe(copyPoller -> copyPoller.getFinalResult().subscribe(customFormModelInfo -> {\n+                    System.out.printf(\"Copied model has model Id: %s, model status: %s, was created on: %s,\"\n+                            + \" last updated on: %s.%n\",\n+                        customFormModelInfo.getModelId(),\n+                        customFormModelInfo.getStatus(),\n+                        customFormModelInfo.getCreatedOn(),\n+                        customFormModelInfo.getLastUpdatedOn());\n+                })));\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization\n+    }\n+\n+    /**\n+     * Code snippet for {@link FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization, Duration)}\n+     */\n+    public void beginCopyOverload() {\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration\n+        String resourceId = \"target-resource-Id\";\n+        String resourceRegion = \"target-resource-region\";\n+        String copyModelId = \"copy-model-Id\";\n+        formTrainingAsyncClient.getCopyAuthorization(resourceId, resourceRegion)\n+            .subscribe(copyAuthorization -> formTrainingAsyncClient.beginCopyModel(copyModelId, copyAuthorization,\n+                Duration.ofSeconds(5)).subscribe(copyPoller ->\n+                copyPoller.getFinalResult().subscribe(customFormModelInfo -> {\n+                    System.out.printf(\"Copied model has model Id: %s, model status: %s, was created on: %s,\"\n+                            + \" last updated on: %s.%n\",\n+                        customFormModelInfo.getModelId(),\n+                        customFormModelInfo.getStatus(),\n+                        customFormModelInfo.getCreatedOn(),\n+                        customFormModelInfo.getLastUpdatedOn());\n+                })));\n+        // END: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration\n+    }\n+\n+    /**\n+     * Code snippet for {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)}\n+     */\n+    public void getCopyAuthorization() {\n+        // BEGIN: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string\n+        final String resourceId = \"target-resource-Id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjQzNjkwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTozMjozMlrOGatKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODowMTozMVrOGcStoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NjE5NQ==", "bodyText": "Same question I had for Jeremy: Azure/azure-sdk-for-js#9068 (comment)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430656195", "createdAt": "2020-05-26T19:32:32Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxOTkwNA==", "bodyText": "Added fromJson and toJson in the CopyAuthorization model similar to .NET", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432319904", "createdAt": "2020-05-29T08:01:31Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NjE5NQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjQ2MTM5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/beginCopy.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTozNzoyNFrOGatZ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDoyOToyNVrOGavMVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2MDA2NA==", "bodyText": "are you able to redact this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430660064", "createdAt": "2020-05-26T19:37:24Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/beginCopy.json", "diffHunk": "@@ -0,0 +1,185 @@\n+{\n+  \"networkCallRecords\" : [ {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"53304602-443d-4f98-9b69-81ae971dc90a\",\n+      \"Content-Type\" : \"application/json\"\n+    },\n+    \"Response\" : {\n+      \"x-envoy-upstream-service-time\" : \"99\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"b4276ca7-e1a7-40c2-a952-c648c4827acd\",\n+      \"retry-after\" : \"0\",\n+      \"Content-Length\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:31 GMT\",\n+      \"Location\" : \"https://savaity-formrecognizer.cognitiveservices.azure.com/formrecognizer/v2.0-preview/custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"66ddf8db-e599-4578-94d6-fb93f9f8c7ad\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"276\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"08d5d8dc-52a7-4f64-83f0-9b7d4ee35492\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"creating\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:32Z\\\"}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:38 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"c2a2b281-f601-424b-b0c6-0359be5ffcc3\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"130\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"82d23bfb-35d3-4476-926a-e81acedd312a\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"creating\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:32Z\\\"}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:43 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"049f7d8a-790b-4a69-927f-e8f20e70c3b5\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"135\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"952b6c07-9f80-4170-a885-b002b6a83121\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"ready\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:44Z\\\"},\\\"keys\\\":{\\\"clusters\\\":{\\\"0\\\":[\\\"Additional Notes:\\\",\\\"Address:\\\",\\\"Address:\\\",\\\"Company Name:\\\",\\\"Company Phone:\\\",\\\"Dated As:\\\",\\\"Email:\\\",\\\"Hero Limited\\\",\\\"Name:\\\",\\\"Phone:\\\",\\\"Phone:\\\",\\\"Purchase Order\\\",\\\"Purchase Order\\\",\\\"Purchase Order #:\\\",\\\"SUBTOTAL\\\",\\\"Seattle, WA 93849 Phone:\\\",\\\"Shipped From\\\",\\\"Shipped To\\\",\\\"TAX\\\",\\\"TOTAL\\\",\\\"Vendor Name:\\\",\\\"Website:\\\"]}},\\\"trainResult\\\":{\\\"trainingDocuments\\\":[{\\\"documentName\\\":\\\"Form_1.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_2.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_3.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_4.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_5.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"}],\\\"errors\\\":[]}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:48 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"a5e45ad5-0f62-4743-8184-1cd09555f3a9\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"52\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"b5fa36fc-24ed-4101-9a46-0ff67624e29a\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"ready\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:44Z\\\"},\\\"keys\\\":{\\\"clusters\\\":{\\\"0\\\":[\\\"Additional Notes:\\\",\\\"Address:\\\",\\\"Address:\\\",\\\"Company Name:\\\",\\\"Company Phone:\\\",\\\"Dated As:\\\",\\\"Email:\\\",\\\"Hero Limited\\\",\\\"Name:\\\",\\\"Phone:\\\",\\\"Phone:\\\",\\\"Purchase Order\\\",\\\"Purchase Order\\\",\\\"Purchase Order #:\\\",\\\"SUBTOTAL\\\",\\\"Seattle, WA 93849 Phone:\\\",\\\"Shipped From\\\",\\\"Shipped To\\\",\\\"TAX\\\",\\\"TOTAL\\\",\\\"Vendor Name:\\\",\\\"Website:\\\"]}},\\\"trainResult\\\":{\\\"trainingDocuments\\\":[{\\\"documentName\\\":\\\"Form_1.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_2.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_3.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_4.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_5.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"}],\\\"errors\\\":[]}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:49 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/copyAuthorization\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"b09019cc-99e3-423f-8816-e7240d871aa2\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"5066\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"f4f91cb6-06d7-47f9-81b7-95fa0e79da83\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Body\" : \"{\\\"modelId\\\":\\\"097f586f-6b4b-4afa-ab7b-5fa8f259de70\\\",\\\"accessToken\\\":\\\"f4f91cb6-06d7-47f9-81b7-95fa0e79da83\\\",\\\"expirationDateTimeTicks\\\":637258662546371777}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY4OTM2NA==", "bodyText": "yeah, we shouldn't expose at least the access token information", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430689364", "createdAt": "2020-05-26T20:29:25Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/beginCopy.json", "diffHunk": "@@ -0,0 +1,185 @@\n+{\n+  \"networkCallRecords\" : [ {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"53304602-443d-4f98-9b69-81ae971dc90a\",\n+      \"Content-Type\" : \"application/json\"\n+    },\n+    \"Response\" : {\n+      \"x-envoy-upstream-service-time\" : \"99\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"b4276ca7-e1a7-40c2-a952-c648c4827acd\",\n+      \"retry-after\" : \"0\",\n+      \"Content-Length\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:31 GMT\",\n+      \"Location\" : \"https://savaity-formrecognizer.cognitiveservices.azure.com/formrecognizer/v2.0-preview/custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"66ddf8db-e599-4578-94d6-fb93f9f8c7ad\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"276\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"08d5d8dc-52a7-4f64-83f0-9b7d4ee35492\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"creating\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:32Z\\\"}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:38 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"c2a2b281-f601-424b-b0c6-0359be5ffcc3\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"130\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"82d23bfb-35d3-4476-926a-e81acedd312a\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"creating\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:32Z\\\"}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:43 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"049f7d8a-790b-4a69-927f-e8f20e70c3b5\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"135\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"952b6c07-9f80-4170-a885-b002b6a83121\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"ready\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:44Z\\\"},\\\"keys\\\":{\\\"clusters\\\":{\\\"0\\\":[\\\"Additional Notes:\\\",\\\"Address:\\\",\\\"Address:\\\",\\\"Company Name:\\\",\\\"Company Phone:\\\",\\\"Dated As:\\\",\\\"Email:\\\",\\\"Hero Limited\\\",\\\"Name:\\\",\\\"Phone:\\\",\\\"Phone:\\\",\\\"Purchase Order\\\",\\\"Purchase Order\\\",\\\"Purchase Order #:\\\",\\\"SUBTOTAL\\\",\\\"Seattle, WA 93849 Phone:\\\",\\\"Shipped From\\\",\\\"Shipped To\\\",\\\"TAX\\\",\\\"TOTAL\\\",\\\"Vendor Name:\\\",\\\"Website:\\\"]}},\\\"trainResult\\\":{\\\"trainingDocuments\\\":[{\\\"documentName\\\":\\\"Form_1.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_2.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_3.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_4.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_5.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"}],\\\"errors\\\":[]}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:48 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"GET\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/fe513b46-8f89-48c9-ae2a-d688edeee3ac?includeKeys=true\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"a5e45ad5-0f62-4743-8184-1cd09555f3a9\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"52\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"b5fa36fc-24ed-4101-9a46-0ff67624e29a\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"200\",\n+      \"Body\" : \"{\\\"modelInfo\\\":{\\\"modelId\\\":\\\"fe513b46-8f89-48c9-ae2a-d688edeee3ac\\\",\\\"status\\\":\\\"ready\\\",\\\"createdDateTime\\\":\\\"2020-05-22T21:30:32Z\\\",\\\"lastUpdatedDateTime\\\":\\\"2020-05-22T21:30:44Z\\\"},\\\"keys\\\":{\\\"clusters\\\":{\\\"0\\\":[\\\"Additional Notes:\\\",\\\"Address:\\\",\\\"Address:\\\",\\\"Company Name:\\\",\\\"Company Phone:\\\",\\\"Dated As:\\\",\\\"Email:\\\",\\\"Hero Limited\\\",\\\"Name:\\\",\\\"Phone:\\\",\\\"Phone:\\\",\\\"Purchase Order\\\",\\\"Purchase Order\\\",\\\"Purchase Order #:\\\",\\\"SUBTOTAL\\\",\\\"Seattle, WA 93849 Phone:\\\",\\\"Shipped From\\\",\\\"Shipped To\\\",\\\"TAX\\\",\\\"TOTAL\\\",\\\"Vendor Name:\\\",\\\"Website:\\\"]}},\\\"trainResult\\\":{\\\"trainingDocuments\\\":[{\\\"documentName\\\":\\\"Form_1.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_2.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_3.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_4.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"},{\\\"documentName\\\":\\\"Form_5.jpg\\\",\\\"pages\\\":1,\\\"errors\\\":[],\\\"status\\\":\\\"succeeded\\\"}],\\\"errors\\\":[]}}\",\n+      \"Date\" : \"Fri, 22 May 2020 21:30:49 GMT\",\n+      \"Content-Type\" : \"application/json; charset=utf-8\"\n+    },\n+    \"Exception\" : null\n+  }, {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/copyAuthorization\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"b09019cc-99e3-423f-8816-e7240d871aa2\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"5066\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"f4f91cb6-06d7-47f9-81b7-95fa0e79da83\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Body\" : \"{\\\"modelId\\\":\\\"097f586f-6b4b-4afa-ab7b-5fa8f259de70\\\",\\\"accessToken\\\":\\\"f4f91cb6-06d7-47f9-81b7-95fa0e79da83\\\",\\\"expirationDateTimeTicks\\\":637258662546371777}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2MDA2NA=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY1MDE0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/models/TrainRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozMjowMlrOGavRkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozNDozNVrOGavXXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MDcwNg==", "bodyText": "out of curiosity, why all these formatting changes?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430690706", "createdAt": "2020-05-26T20:32:02Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/models/TrainRequest.java", "diffHunk": "@@ -7,9 +7,7 @@\n import com.azure.core.annotation.Fluent;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n-/**\n- * The TrainRequest model.\n- */\n+/** The TrainRequest model. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MjE5MA==", "bodyText": "Yeah, I think autorest for Java underwent some major changes. Talking with them separately on this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430692190", "createdAt": "2020-05-26T20:34:35Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/models/TrainRequest.java", "diffHunk": "@@ -7,9 +7,7 @@\n import com.azure.core.annotation.Fluent;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n-/**\n- * The TrainRequest model.\n- */\n+/** The TrainRequest model. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MDcwNg=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY2NDUyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozNjowN1rOGavbCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxMzoyNlrOGb-51A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzEzMQ==", "bodyText": "in .NET we are only exposing the ModelId and the expiration date, as for now, there is no evidence user will like to see/manipulate the rest of the information.\nAll the other information is only used by the service and it is available to be shared with the convenience method Krista pointed out in a previous comment", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430693131", "createdAt": "2020-05-26T20:36:07Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzY5MQ==", "bodyText": "https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/formrecognizer/Azure.AI.FormRecognizer/src/CopyAuthorization.cs#L14", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430693691", "createdAt": "2020-05-26T20:37:10Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzEzMQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NTM0OA==", "bodyText": "In Java currently, we don't have an efficient way of keeping fields private as they have to be shared across the package to be accessed in the respective client classes.\nMore discussion on this - #10346 (comment)\nMight investigate this in a separate issue - #11476", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r431995348", "createdAt": "2020-05-28T17:13:26Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzEzMQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY2NzAyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozNjo1MlrOGavcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxMzo0NFrOGb-6iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzU0MQ==", "bodyText": "in .NET we are exposing the date itself and not the ticks. Consider changing the format too so it is more useful for the user.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430693541", "createdAt": "2020-05-26T20:36:52Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpirationDateTimeTicks() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzcxNg==", "bodyText": "Also, the name we use is ExpiresOn see https://github.com/Azure/azure-sdk-for-net/blob/master/sdk/formrecognizer/Azure.AI.FormRecognizer/src/CopyAuthorization.cs#L14", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430693716", "createdAt": "2020-05-26T20:37:13Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpirationDateTimeTicks() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzU0MQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NTUyOA==", "bodyText": "Updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r431995528", "createdAt": "2020-05-28T17:13:44Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpirationDateTimeTicks() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5MzU0MQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY3MTA0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozODowNlrOGavfHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDozODowNlrOGavfHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NDE3NQ==", "bodyText": "we call this region as this class contains the information of the Resource, so we thought better eliminate that from the name", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430694175", "createdAt": "2020-05-26T20:38:06Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Immutable\n+public final class CopyAuthorization {\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private final String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private final String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private final String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private final String resourceRegion;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private final long expirationDateTimeTicks;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param resourceRegion The region of the resource\n+     * @param expirationDateTimeTicks The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String resourceRegion,\n+        final long expirationDateTimeTicks) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.resourceRegion = resourceRegion;\n+        this.expirationDateTimeTicks = expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpirationDateTimeTicks() {\n+        return this.expirationDateTimeTicks;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */\n+    public String getResourceRegion() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY4NjIxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0MzozN1rOGavo5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNjowMVrOGaxJ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NjY3OQ==", "bodyText": "I imagine this a Java thing, so apologies here, but why would we need in some cases the response and not others?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430696679", "createdAt": "2020-05-26T20:43:37Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion) {\n+        return getCopyAuthorizationWithResponse(resourceId, resourceRegion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     * This should be called by the target resource (where the model will be copied to) and the output can be passed as\n+     * the target parameter into {@link FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)}.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported by\n+     * Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse#string-string}\n+     *\n+     * @return A {@link Response} containing the {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<CopyAuthorization>> getCopyAuthorizationWithResponse(String resourceId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5ODMzMA==", "bodyText": "The withResponse suffixed methods in Java are considered as the advanced scenarios where the user might be interested in getting back the HttpResponse and also have the ability to pass in Context (diagnostics/tracing).  So every API should have the ability to get the response via at least a single method.\nIn Java, we don't want to send back the response on all methods to keep the return type simpler and easier to use.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430698330", "createdAt": "2020-05-26T20:47:00Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion) {\n+        return getCopyAuthorizationWithResponse(resourceId, resourceRegion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     * This should be called by the target resource (where the model will be copied to) and the output can be passed as\n+     * the target parameter into {@link FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)}.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported by\n+     * Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse#string-string}\n+     *\n+     * @return A {@link Response} containing the {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<CopyAuthorization>> getCopyAuthorizationWithResponse(String resourceId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NjY3OQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTUwMg==", "bodyText": "ohh cool. Thank you for the explanation", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430721502", "createdAt": "2020-05-26T21:36:01Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -324,6 +329,117 @@ public FormRecognizerServiceVersion getServiceVersion() {\n             continuationToken -> listNextPageModelInfo(continuationToken, context));\n     }\n \n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target) {\n+        return beginCopyModel(modelId, target, null);\n+    }\n+\n+    /**\n+     * Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n+     *\n+     * <p>This should be called with the source Form Recognizer resource (with the model that is intended to be copied).\n+     * The target parameter should be supplied from the target resource's output from\n+     * {@link FormTrainingAsyncClient#getCopyAuthorization(String, String)} method.\n+     * </p>\n+     *\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel#string-copyAuthorization-Duration}\n+     *\n+     * @param modelId Model identifier of the model to copy to the target Form Recognizer resource\n+     * @param target the copy authorization to the target Form Recognizer resource\n+     * @param pollInterval Duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return A {@link PollerFlux} that polls the copy model operation until it has completed, has failed,\n+     * or has been cancelled.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public PollerFlux<OperationResult, CustomFormModelInfo> beginCopyModel(String modelId,\n+        CopyAuthorization target, Duration pollInterval) {\n+        final Duration interval = pollInterval != null ? pollInterval : DEFAULT_DURATION;\n+        return new PollerFlux<OperationResult, CustomFormModelInfo>(\n+            interval,\n+            getCopyActivationOperation(modelId, target),\n+            createCopyPollOperation(modelId),\n+            (activationResponse, context) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n+            fetchCopyModelResultOperation(modelId));\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported\n+     * by Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization#string-string}\n+     *\n+     * @return The {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion) {\n+        return getCopyAuthorizationWithResponse(resourceId, resourceRegion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Generate authorization for copying a custom model into the target Form Recognizer resource.\n+     * This should be called by the target resource (where the model will be copied to) and the output can be passed as\n+     * the target parameter into {@link FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)}.\n+     *\n+     * @param resourceId Azure Resource Id of the target Form Recognizer resource where the model will be copied to.\n+     * @param resourceRegion Location of the target Form Recognizer resource. A valid Azure  region name supported by\n+     * Cognitive Services.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse#string-string}\n+     *\n+     * @return A {@link Response} containing the {@link CopyAuthorization}\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<CopyAuthorization>> getCopyAuthorizationWithResponse(String resourceId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5NjY3OQ=="}, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjY5ODA2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0NzozN1rOGavwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0NzozN1rOGavwig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5ODYzNA==", "bodyText": "it will be good to clarify that this is the client that contains the model we want to copy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430698634", "createdAt": "2020-05-26T20:47:37Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.ai.formrecognizer.models.OperationResult;\n+import com.azure.ai.formrecognizer.training.FormTrainingClient;\n+import com.azure.ai.formrecognizer.training.FormTrainingClientBuilder;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * Sample for copying a custom model from a source Form Recognizer resource to a target Form Recognizer resource.\n+ */\n+public class CopyModel {\n+\n+    /**\n+     * Main method to invoke this demo.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     */\n+    public static void main(final String[] args) {\n+        // Instantiate a client that will be used to call the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjcwMzQ5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0OToyNVrOGavz6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo0OToyNVrOGavz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY5OTQ5Nw==", "bodyText": "actually, looking at this sample, we are copying a model from a source to the same source (which is a valid scenario).\nit will be good to add that clarification, and/or add a sample that copies a model from a resource to another resource.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430699497", "createdAt": "2020-05-26T20:49:25Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.ai.formrecognizer.models.OperationResult;\n+import com.azure.ai.formrecognizer.training.FormTrainingClient;\n+import com.azure.ai.formrecognizer.training.FormTrainingClientBuilder;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * Sample for copying a custom model from a source Form Recognizer resource to a target Form Recognizer resource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjcwNzY2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo1MDo0OVrOGav2lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo1MDo0OVrOGav2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMDE4Mw==", "bodyText": "good to add a comment saying this is the id of the model we want to copy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430700183", "createdAt": "2020-05-26T20:50:49Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/CopyModel.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import com.azure.ai.formrecognizer.models.CustomFormModelInfo;\n+import com.azure.ai.formrecognizer.models.OperationResult;\n+import com.azure.ai.formrecognizer.training.FormTrainingClient;\n+import com.azure.ai.formrecognizer.training.FormTrainingClientBuilder;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * Sample for copying a custom model from a source Form Recognizer resource to a target Form Recognizer resource.\n+ */\n+public class CopyModel {\n+\n+    /**\n+     * Main method to invoke this demo.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     */\n+    public static void main(final String[] args) {\n+        // Instantiate a client that will be used to call the service.\n+\n+        FormTrainingClient client = new FormTrainingClientBuilder()\n+            .credential(new AzureKeyCredential(\"{key}\"))\n+            .endpoint(\"https://{endpoint}.cognitiveservices.azure.com/\")\n+            .buildClient();\n+\n+        String targetResourceId = \"target-resource-Id\";\n+        String targetResourceRegion = \"target-resource-region\";\n+        final String copyModelId = \"copy-model-Id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjcxNzQ5OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo1Mzo1N1rOGav81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDo1Mzo1N1rOGav81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcwMTc4MQ==", "bodyText": "This shouldn't work. modelId's should be different", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430701781", "createdAt": "2020-05-26T20:53:57Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientTest.java", "diffHunk": "@@ -255,4 +263,78 @@ public void beginTrainingUnlabeledResult(HttpClient httpClient, FormRecognizerSe\n             validateCustomModelData(syncPoller.getFinalResult(), false);\n         });\n     }\n+\n+    /**\n+     * Verifies the result of the copy operation for valid parameters.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.formrecognizer.TestUtils#getTestParameters\")\n+    void beginCopy(HttpClient httpClient, FormRecognizerServiceVersion serviceVersion) {\n+        client = getFormTrainingAsyncClient(httpClient, serviceVersion);\n+        beginTrainingUnlabeledRunner((trainingFilesUrl, useTrainingLabels) -> {\n+            SyncPoller<OperationResult, CustomFormModel> syncPoller =\n+                client.beginTraining(trainingFilesUrl, useTrainingLabels).getSyncPoller();\n+            syncPoller.waitForCompletion();\n+            final CustomFormModel actualModel = syncPoller.getFinalResult();\n+\n+            beginCopyRunner((resourceId, resourceRegion) -> {\n+                final Mono<CopyAuthorization> target =\n+                    client.getCopyAuthorization(resourceId, resourceRegion);\n+                final PollerFlux<OperationResult,\n+                    CustomFormModelInfo> copyPoller = client.beginCopyModel(actualModel.getModelId(), target.block());\n+                final CustomFormModelInfo copyModel = copyPoller.getSyncPoller().getFinalResult();\n+                assertEquals(actualModel.getModelId(), copyModel.getModelId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjc3MDcxOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxMjowOFrOGawfGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToxMjowOFrOGawfGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxMDU1Mg==", "bodyText": "when this is enabled, this shouldn't work either", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r430710552", "createdAt": "2020-05-26T21:12:08Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormTrainingAsyncClientTest.java", "diffHunk": "@@ -255,4 +263,78 @@ public void beginTrainingUnlabeledResult(HttpClient httpClient, FormRecognizerSe\n             validateCustomModelData(syncPoller.getFinalResult(), false);\n         });\n     }\n+\n+    /**\n+     * Verifies the result of the copy operation for valid parameters.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.formrecognizer.TestUtils#getTestParameters\")\n+    void beginCopy(HttpClient httpClient, FormRecognizerServiceVersion serviceVersion) {\n+        client = getFormTrainingAsyncClient(httpClient, serviceVersion);\n+        beginTrainingUnlabeledRunner((trainingFilesUrl, useTrainingLabels) -> {\n+            SyncPoller<OperationResult, CustomFormModel> syncPoller =\n+                client.beginTraining(trainingFilesUrl, useTrainingLabels).getSyncPoller();\n+            syncPoller.waitForCompletion();\n+            final CustomFormModel actualModel = syncPoller.getFinalResult();\n+\n+            beginCopyRunner((resourceId, resourceRegion) -> {\n+                final Mono<CopyAuthorization> target =\n+                    client.getCopyAuthorization(resourceId, resourceRegion);\n+                final PollerFlux<OperationResult,\n+                    CustomFormModelInfo> copyPoller = client.beginCopyModel(actualModel.getModelId(), target.block());\n+                final CustomFormModelInfo copyModel = copyPoller.getSyncPoller().getFinalResult();\n+                assertEquals(actualModel.getModelId(), copyModel.getModelId());\n+                assertNotNull(actualModel.getCreatedOn());\n+                // assertEquals(actualModel.getCreatedOn(), copyModel.getCreatedOn());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34601d0f71f9ecf62d883655fd79a02351470e83"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDA3MDAwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDo1OToyN1rOGcgeQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjozNTo1N1rOGcj_-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NTM0Nw==", "bodyText": "Here you say resourceRegion but below shows region. Is that right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432545347", "createdAt": "2020-05-29T14:59:27Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU3NjEyNw==", "bodyText": "Because we pass a dict, we can't alter the names (hence we use the service names). it needs to work if I call get_copy_authorization() and then pass the dict into the REST service. The user should not have to do any renames.\nSince Java/.NET have a toJSON() convenience method they can do the renames for the user there.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432576127", "createdAt": "2020-05-29T15:49:37Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NTM0Nw=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYwMzEzMA==", "bodyText": "sorry @kristapratico I deleted the previous comment before realizing you replied to it since it was wrong. Feel free to ignore", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432603130", "createdAt": "2020-05-29T16:35:57Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NTM0Nw=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDMxODM2OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjowMzo0M1rOGci7dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDo0ODo1MFrOGeDbsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4NTU5MA==", "bodyText": "Semi-related to @kristapratico comment:\n@maririos and @samvaity : I notice that you guys both have region as the name in CopyAuthorization, but getCopyAuthorization takes resourceRegion (java ex here)\nShould region and resourceRegion be standardized?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432585590", "createdAt": "2020-05-29T16:03:43Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1Nzg5NQ==", "bodyText": "I think so too that we should standardize on this. I see that python calls its resource_region (here).\n@maririos Do you think we can call it resourceRegion on the CopyAuthorization model too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433457895", "createdAt": "2020-06-01T20:00:41Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4NTU5MA=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1OTY2NA==", "bodyText": "we decided to leave the method signatures constant across languages, (resourceRegion) but for the types in CopyAuthorization object, that only exists in Java and .NET, .NET team was more inclined to leave it as Region, as it is already understood that the information here is about a resource.\nOther point is that this property is not available for the public in .NET so the name could always change.\n@samvaity could u remind me again, why is it that we don't hide this properties in Java?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r434159664", "createdAt": "2020-06-02T20:34:51Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4NTU5MA=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2NjcwNA==", "bodyText": "@maririos #11403 (comment)\nI will update this field to be called resourceRegion as in Java we are exposing it and will help maintain consistency.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r434166704", "createdAt": "2020-06-02T20:48:50Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4NTU5MA=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDQ4MzU0OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/copyAuthorization.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1NDozMVrOGcklvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjo0Njo0OVrOGdAY3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxMjc5Ng==", "bodyText": "Is there a concern if we keep exposing the access token?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432612796", "createdAt": "2020-05-29T16:54:31Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/copyAuthorization.json", "diffHunk": "@@ -0,0 +1,25 @@\n+{\n+  \"networkCallRecords\" : [ {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/copyAuthorization\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"880541f0-5dc2-4ef0-9be5-805fe85abe22\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"5225\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"769cd41c-9602-4373-ba38-a2531643e041\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Body\" : \"{\\\"modelId\\\":\\\"97bf97bc-3210-4c84-a0ef-9472dec722a0\\\",\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\\\"expirationDateTimeTicks\\\":637258696186131476}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA2ODI1NA==", "bodyText": "Removed the tests for now will update in #11637", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433068254", "createdAt": "2020-06-01T06:46:49Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/session-records/copyAuthorization.json", "diffHunk": "@@ -0,0 +1,25 @@\n+{\n+  \"networkCallRecords\" : [ {\n+    \"Method\" : \"POST\",\n+    \"Uri\" : \"https://REDACTED.cognitiveservices.azure.com/formrecognizer/v2.0-preview//custom/models/copyAuthorization\",\n+    \"Headers\" : {\n+      \"User-Agent\" : \"azsdk-java-azure-ai-formrecognizer/1.0.0-beta.3 (11.0.5; Windows 10 10.0)\",\n+      \"x-ms-client-request-id\" : \"880541f0-5dc2-4ef0-9be5-805fe85abe22\"\n+    },\n+    \"Response\" : {\n+      \"Transfer-Encoding\" : \"chunked\",\n+      \"x-envoy-upstream-service-time\" : \"5225\",\n+      \"Strict-Transport-Security\" : \"max-age=31536000; includeSubDomains; preload\",\n+      \"x-content-type-options\" : \"nosniff\",\n+      \"apim-request-id\" : \"769cd41c-9602-4373-ba38-a2531643e041\",\n+      \"retry-after\" : \"0\",\n+      \"StatusCode\" : \"201\",\n+      \"Body\" : \"{\\\"modelId\\\":\\\"97bf97bc-3210-4c84-a0ef-9472dec722a0\\\",\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\\\"expirationDateTimeTicks\\\":637258696186131476}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxMjc5Ng=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDQ5Mzk4OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/CopyAuthorizationSerializerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1Njo0N1rOGcksqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNjo1Njo0N1rOGcksqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYxNDU2OA==", "bodyText": "we should verify that the properties were serialized correctly too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432614568", "createdAt": "2020-05-29T16:56:47Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/CopyAuthorizationSerializerTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.CopyAuthorization;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class CopyAuthorizationSerializerTest {\n+\n+    private static final String MODEL_ID = \"97bf97bc-3210-4c84-a0ef-9472dec711a0\";\n+    private static final String ACCESS_TOKEN = \"769cd41c-9602-4373-ba38-a2531643e041\";\n+    private static final String RESOURCE_ID = \"97bf97bc-3210-4c84-a0ef-9472dec711a0\";\n+    private static final String REGION = \"westus2\";\n+    private static final long EXPIRATION_DATE_TIME = 637258696186131476L;\n+\n+    /**\n+     * Test for {@link CopyAuthorization#toJson()} and {@link CopyAuthorization#fromJson(String)}.\n+     */\n+    @Test\n+    public void toJsonTest() throws IOException {\n+        CopyAuthorization copyAuthorization = new CopyAuthorization(MODEL_ID, ACCESS_TOKEN, RESOURCE_ID, REGION,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDU0NTM3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzowOToxNVrOGclNvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzowOTozMlrOGclOUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyMzAzNw==", "bodyText": "I don't see where we are making the changes so that when we create the json string, we transform the property names to what the REST API is expecting. i.e. the string should look something like:\n{\"modelId\": \"26f7c09b-3e1d-4348-b98d-18187afcbf17\", \"accessToken\": \"82ea8d63-1eaa-498c-bd8b-xxxxxxxx\", \"expirationDateTimeTicks\": 637251564427472980, \"resourceId\": \"xxxxx\", \"resourceRegion\": \"westus2\"}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432623037", "createdAt": "2020-05-29T17:09:15Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */\n+    public String getRegion() {\n+        return region;\n+    }\n+\n+    /**\n+     * Converts the CopyAuthorization object to its equivalent json string representation.\n+     *\n+     * @return the json string representation of the CopyAuthorization object.\n+     * @throws IOException exception from serialization\n+     */\n+    public String toJson() throws IOException {\n+        return SERIALIZER.serialize(this, SerializerEncoding.JSON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyMzE4Ng==", "bodyText": "without xxx :P", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r432623186", "createdAt": "2020-05-29T17:09:32Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,197 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the modelId value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;\n+    }\n+\n+    /**\n+     * Get the token claim used to authorize the request.\n+     *\n+     * @return the accessToken value.\n+     */\n+    public String getAccessToken() {\n+        return this.accessToken;\n+    }\n+\n+    /**\n+     * Get the time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     *\n+     * @return the expirationDateTimeTicks value.\n+     */\n+    public long getExpiresOn() {\n+        return this.expiresOn;\n+    }\n+\n+    /**\n+     * Get the Azure Resource Id of the target Form Recognizer resource\n+     * where the model will be copied to.\n+     *\n+     * @return the resourceId value.\n+     */\n+    public String getResourceId() {\n+        return resourceId;\n+    }\n+\n+    /**\n+     * Get the location of the target Form Recognizer resource.\n+     *\n+     * @return the resourceRegion value.\n+     */\n+    public String getRegion() {\n+        return region;\n+    }\n+\n+    /**\n+     * Converts the CopyAuthorization object to its equivalent json string representation.\n+     *\n+     * @return the json string representation of the CopyAuthorization object.\n+     * @throws IOException exception from serialization\n+     */\n+    public String toJson() throws IOException {\n+        return SERIALIZER.serialize(this, SerializerEncoding.JSON);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYyMzAzNw=="}, "originalCommit": {"oid": "fb8f100ddefc172e9acc16c04a98a2bad44b8c2e"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTI1NTEwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNTo1Nzo1MFrOGdQbBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo1ODozOFrOGd4uWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDk0OA==", "bodyText": "we should have this 2, otherwise the BeginCopyMethod will fail with missing properties", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433330948", "createdAt": "2020-06-01T15:57:50Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -35,17 +37,20 @@\n     /*\n      * Resource Identifier.\n      */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b97d9f42b684aa49ebafdbb20eb0c0adb373b7e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQxNjM3NA==", "bodyText": "We still return these values in the object creation. They are just ignored when we jsonify the object.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433416374", "createdAt": "2020-06-01T18:37:39Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -35,17 +37,20 @@\n     /*\n      * Resource Identifier.\n      */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDk0OA=="}, "originalCommit": {"oid": "1b97d9f42b684aa49ebafdbb20eb0c0adb373b7e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4NjIxMw==", "bodyText": "We still need them when we create the json string. If I ask you for an uth token so I cam copy my model into your account and you give me a string with only modelid, access token, and expiration date, my StartCopyModel in .NET will fail.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433986213", "createdAt": "2020-06-02T15:53:40Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -35,17 +37,20 @@\n     /*\n      * Resource Identifier.\n      */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDk0OA=="}, "originalCommit": {"oid": "1b97d9f42b684aa49ebafdbb20eb0c0adb373b7e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk5MTI1Ng==", "bodyText": "See the string I mentioned before:\n{\"modelId\": \"26f7c09b-3e1d-4348-b98d-18187afcbf17\", \"accessToken\": \"82ea8d63-1eaa-498c-bd8b-xxxxxxxx\", \"expirationDateTimeTicks\": 637251564427472980, \"resourceId\": \"xxxxx\", \"resourceRegion\": \"westus2\"}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433991256", "createdAt": "2020-06-02T15:58:38Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -35,17 +37,20 @@\n     /*\n      * Resource Identifier.\n      */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDk0OA=="}, "originalCommit": {"oid": "1b97d9f42b684aa49ebafdbb20eb0c0adb373b7e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTY4MTMyOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODowNzowMlrOGdUqvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODowNzowMlrOGdUqvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQwMDUxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (copyResult.getStatus().equals(OperationStatus.FAILED)) {\n          \n          \n            \n                    if (OperationStatus.FAILED.equals(copyResult.getStatus())) {", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433400511", "createdAt": "2020-06-01T18:07:02Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -423,4 +621,21 @@ public FormRecognizerServiceVersion getServiceVersion() {\n         }\n         return Mono.just(new PollResponse<>(status, trainingModelOperationResponse.getValue()));\n     }\n+\n+    /**\n+     * Helper method that throws a {@link HttpResponseException} if {@link CopyOperationResult#getStatus()} is\n+     * {@link OperationStatus#FAILED}.\n+     *\n+     * @param copyResult The copy operation response returned from the service.\n+     */\n+    private void throwIfCopyOperationStatusInvalid(CopyOperationResult copyResult) {\n+        if (copyResult.getStatus().equals(OperationStatus.FAILED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b45a315f1efd0bdd0a3105ba9661e3b70d7fefa"}, "originalPosition": 278}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTkwNTA3OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToxNzozOFrOGdW3cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToxNzozOFrOGdW3cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjUzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());\n          \n          \n            \n                            Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n          \n          \n            \n                            Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");\n          \n          \n            \n                            final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433436530", "createdAt": "2020-06-01T19:17:38Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/FormTrainingAsyncClient.java", "diffHunk": "@@ -356,6 +472,88 @@ public FormRecognizerServiceVersion getServiceVersion() {\n                 null));\n     }\n \n+    private Function<PollingContext<OperationResult>, Mono<CustomFormModelInfo>> fetchCopyModelResultOperation(\n+        String modelId, String copyModelId) {\n+        return (pollingContext) -> {\n+            try {\n+                final UUID resultUid = UUID.fromString(pollingContext.getLatestResponse().getValue().getResultId());\n+                Objects.requireNonNull(modelId, \"'modelId' cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b45a315f1efd0bdd0a3105ba9661e3b70d7fefa"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTk4NDAzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo0MjozN1rOGdXozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo0MjozN1rOGdXozg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0OTE2Ng==", "bodyText": "nit: we don't need this keyword here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r433449166", "createdAt": "2020-06-01T19:42:37Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/CopyAuthorization.java", "diffHunk": "@@ -0,0 +1,202 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.serializer.JacksonAdapter;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The CopyAuthorization model.\n+ */\n+@Fluent\n+public final class CopyAuthorization {\n+    private static final SerializerAdapter SERIALIZER = new JacksonAdapter();\n+\n+    CopyAuthorization() {\n+        super();\n+    }\n+\n+    /*\n+     * Model identifier.\n+     */\n+    private String modelId;\n+\n+    /*\n+     * Token claim used to authorize the request.\n+     */\n+    private String accessToken;\n+\n+    /*\n+     * Resource Identifier.\n+     */\n+    @JsonIgnore\n+    private String resourceId;\n+\n+    /*\n+     * Region of the resource.\n+     */\n+    @JsonIgnore\n+    private String region;\n+\n+    /*\n+     * The time when the access token expires. The date is represented as the\n+     * number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.\n+     */\n+    @JsonProperty(\"expirationDateTimeTicks\")\n+    private long expiresOn;\n+\n+    /**\n+     * Create a CopyAuthorization object\n+     *\n+     * @param modelId The model identifier\n+     * @param accessToken The token used to authorize the request\n+     * @param resourceId The resource identifier\n+     * @param region The region of the resource\n+     * @param expiresOn The expiry time of the token\n+     */\n+    public CopyAuthorization(final String modelId, final String accessToken, final String resourceId,\n+        final String region, final long expiresOn) {\n+        this.modelId = modelId;\n+        this.accessToken = accessToken;\n+        this.resourceId = resourceId;\n+        this.region = region;\n+        this.expiresOn = expiresOn;\n+    }\n+\n+    /**\n+     * Get the modelId property.\n+     *\n+     * @return the {@code modelId} value.\n+     */\n+    public String getModelId() {\n+        return this.modelId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b45a315f1efd0bdd0a3105ba9661e3b70d7fefa"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDU3MjM1OnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/CopyAuthorizationSerializerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDozNlrOGeExfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozODoyNlrOGeE3_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODY3MQ==", "bodyText": "is this a fake value? just making sure we are not exposing a real access token", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r434188671", "createdAt": "2020-06-02T21:34:36Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/CopyAuthorizationSerializerTest.java", "diffHunk": "@@ -9,19 +9,19 @@\n import java.io.IOException;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class CopyAuthorizationSerializerTest {\n \n     private static final String MODEL_ID = \"97bf97bc-3210-4c84-a0ef-9472dec711a0\";\n     private static final String ACCESS_TOKEN = \"769cd41c-9602-4373-ba38-a2531643e041\";\n-    private static final String RESOURCE_ID = \"77bf97bc-3210-4c84-a0ef-9472dec712a0\";\n+    private static final String RESOURCE_ID = \"77bf97bc-3210-4c84-a0ef-9462dec712a0\";\n     private static final String REGION = \"westus2\";\n     private static final long EXPIRES_ON = 637258696186131476L;\n     private static final String EXPECTED_JSON_STRING = \"{\\\"modelId\\\":\\\"97bf97bc-3210-4c84-a0ef-9472dec711a0\\\",\"\n-        + \"\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\\\"expirationDateTimeTicks\\\":637258696186131476}\";\n+        + \"\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec57b0f453f5717963b25d3d664e26852ec845c6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5MDMzNA==", "bodyText": "Yup, it's fake. Randomly generated, just wanted to use the correct format.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11403#discussion_r434190334", "createdAt": "2020-06-02T21:38:26Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/CopyAuthorizationSerializerTest.java", "diffHunk": "@@ -9,19 +9,19 @@\n import java.io.IOException;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertFalse;\n-import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class CopyAuthorizationSerializerTest {\n \n     private static final String MODEL_ID = \"97bf97bc-3210-4c84-a0ef-9472dec711a0\";\n     private static final String ACCESS_TOKEN = \"769cd41c-9602-4373-ba38-a2531643e041\";\n-    private static final String RESOURCE_ID = \"77bf97bc-3210-4c84-a0ef-9472dec712a0\";\n+    private static final String RESOURCE_ID = \"77bf97bc-3210-4c84-a0ef-9462dec712a0\";\n     private static final String REGION = \"westus2\";\n     private static final long EXPIRES_ON = 637258696186131476L;\n     private static final String EXPECTED_JSON_STRING = \"{\\\"modelId\\\":\\\"97bf97bc-3210-4c84-a0ef-9472dec711a0\\\",\"\n-        + \"\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\\\"expirationDateTimeTicks\\\":637258696186131476}\";\n+        + \"\\\"accessToken\\\":\\\"769cd41c-9602-4373-ba38-a2531643e041\\\",\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODY3MQ=="}, "originalCommit": {"oid": "ec57b0f453f5717963b25d3d664e26852ec845c6"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4124, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}