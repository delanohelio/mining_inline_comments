{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDk2NTU2", "number": 9123, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMDozNFrODoaLfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzozMjoyNVrODo7E-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk4NTU5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMDozNFrOF28JzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODozODoyNFrOF3pQhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1Mjk3Mg==", "bodyText": "Any reason /path is required?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r393152972", "createdAt": "2020-03-16T16:30:34Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -15,8 +18,18 @@\n  * RESERVED FOR INTERNAL USE.\n  */\n public class ModelHelper {\n-    public static final Pattern IP_V4_URL_PATTERN = Pattern\n-        .compile(\"(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})|(?:localhost)\");\n+\n+    /**\n+     * Determines whether or not the passed authority is IP style, that is it is of the format\n+     * \"&lt;host&gt;:&lt;port&gt;\".\n+     *\n+     * @param authority The authority of a URL.\n+     * @throws MalformedURLException If the authority is malformed.\n+     * @return Whether the authority is IP style.\n+     */\n+    public static boolean determineAuthorityIsIpStyle(String authority) throws MalformedURLException {\n+        return new URL(\"http://\" +  authority + \"/path\").getPort() != -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e1b4cd9540e75c16c395baf01b74094834eee55"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MTk3Mw==", "bodyText": "It was a required parameter for an overload of URL constructor that I was initially trying to use, but I can try this without it and see if it still works", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r393891973", "createdAt": "2020-03-17T18:38:24Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -15,8 +18,18 @@\n  * RESERVED FOR INTERNAL USE.\n  */\n public class ModelHelper {\n-    public static final Pattern IP_V4_URL_PATTERN = Pattern\n-        .compile(\"(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})|(?:localhost)\");\n+\n+    /**\n+     * Determines whether or not the passed authority is IP style, that is it is of the format\n+     * \"&lt;host&gt;:&lt;port&gt;\".\n+     *\n+     * @param authority The authority of a URL.\n+     * @throws MalformedURLException If the authority is malformed.\n+     * @return Whether the authority is IP style.\n+     */\n+    public static boolean determineAuthorityIsIpStyle(String authority) throws MalformedURLException {\n+        return new URL(\"http://\" +  authority + \"/path\").getPort() != -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1Mjk3Mg=="}, "originalCommit": {"oid": "9e1b4cd9540e75c16c395baf01b74094834eee55"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk4ODAzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMTowOVrOF28LYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMTowOVrOF28LYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1MzM3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * \"&lt;host&gt;:&lt;port&gt;\".\n          \n          \n            \n                 * {@code \"<host><port>\"}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r393153377", "createdAt": "2020-03-16T16:31:09Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -15,8 +18,18 @@\n  * RESERVED FOR INTERNAL USE.\n  */\n public class ModelHelper {\n-    public static final Pattern IP_V4_URL_PATTERN = Pattern\n-        .compile(\"(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})|(?:localhost)\");\n+\n+    /**\n+     * Determines whether or not the passed authority is IP style, that is it is of the format\n+     * \"&lt;host&gt;:&lt;port&gt;\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e1b4cd9540e75c16c395baf01b74094834eee55"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjk5MzY5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjozMjo0MVrOF28PEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODozODo0NFrOF3pRTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1NDMyMg==", "bodyText": "Does this issue affect Queues as well? I know it also supports IP-style URLs in Azurite.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r393154322", "createdAt": "2020-03-16T16:32:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "diffHunk": "@@ -102,7 +103,12 @@ public String getHost() {\n      */\n     public BlobUrlParts setHost(String host) {\n         this.host = host;\n-        this.isIpUrl = ModelHelper.IP_V4_URL_PATTERN.matcher(host).find();\n+        try {\n+            this.isIpUrl = ModelHelper.determineAuthorityIsIpStyle(host);\n+        } catch (MalformedURLException e) {\n+            throw logger.logExceptionAsError(new IllegalStateException(\"Authority is malformed. Host: \"\n+                + host));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e1b4cd9540e75c16c395baf01b74094834eee55"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjE3Mw==", "bodyText": "Yea I should probably bring it over there as well. Thanks for thinking of that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r393892173", "createdAt": "2020-03-17T18:38:44Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "diffHunk": "@@ -102,7 +103,12 @@ public String getHost() {\n      */\n     public BlobUrlParts setHost(String host) {\n         this.host = host;\n-        this.isIpUrl = ModelHelper.IP_V4_URL_PATTERN.matcher(host).find();\n+        try {\n+            this.isIpUrl = ModelHelper.determineAuthorityIsIpStyle(host);\n+        } catch (MalformedURLException e) {\n+            throw logger.logExceptionAsError(new IllegalStateException(\"Authority is malformed. Host: \"\n+                + host));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE1NDMyMg=="}, "originalCommit": {"oid": "9e1b4cd9540e75c16c395baf01b74094834eee55"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjM3MDgwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzoyOTo0NFrOF3xlDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMzoxMlrOF4S_wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyODMwMQ==", "bodyText": "Should this be illegal state or illegal argument? isnt the url technically something the user provided to us?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r394028301", "createdAt": "2020-03-17T23:29:44Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "diffHunk": "@@ -338,10 +343,15 @@ public static BlobUrlParts parse(String url) {\n     public static BlobUrlParts parse(URL url) {\n         BlobUrlParts parts = new BlobUrlParts().setScheme(url.getProtocol());\n \n-        if (ModelHelper.IP_V4_URL_PATTERN.matcher(url.getHost()).find()) {\n-            parseIpUrl(url, parts);\n-        } else {\n-            parseNonIpUrl(url, parts);\n+        try {\n+            if (ModelHelper.determineAuthorityIsIpStyle(url.getAuthority())) {\n+                parseIpUrl(url, parts);\n+            } else {\n+                parseNonIpUrl(url, parts);\n+            }\n+        } catch (MalformedURLException e) {\n+            throw parts.logger.logExceptionAsError(new IllegalStateException(\"Authority is malformed. Host: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e71a00aee201839198eb27f459e72b0d31d9ee1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NTgwOQ==", "bodyText": "I think it should be IllegalState. The parameter type is URL, so that means we're starting with valid URL. The only way it's possibly malformed is if we constructed the dummy URL wrong, which is our fault. And given that we're using syntax that is known to be valid, if it somehow becomes malformed, I think it's fair to call the state illegal.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r394575809", "createdAt": "2020-03-18T19:03:12Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "diffHunk": "@@ -338,10 +343,15 @@ public static BlobUrlParts parse(String url) {\n     public static BlobUrlParts parse(URL url) {\n         BlobUrlParts parts = new BlobUrlParts().setScheme(url.getProtocol());\n \n-        if (ModelHelper.IP_V4_URL_PATTERN.matcher(url.getHost()).find()) {\n-            parseIpUrl(url, parts);\n-        } else {\n-            parseNonIpUrl(url, parts);\n+        try {\n+            if (ModelHelper.determineAuthorityIsIpStyle(url.getAuthority())) {\n+                parseIpUrl(url, parts);\n+            } else {\n+                parseNonIpUrl(url, parts);\n+            }\n+        } catch (MalformedURLException e) {\n+            throw parts.logger.logExceptionAsError(new IllegalStateException(\"Authority is malformed. Host: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyODMwMQ=="}, "originalCommit": {"oid": "1e71a00aee201839198eb27f459e72b0d31d9ee1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjM3MjI0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzozMDozMFrOF3xl7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzozMDozMFrOF3xl7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyODUyNQ==", "bodyText": "nit. extra new lines", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r394028525", "createdAt": "2020-03-17T23:30:30Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobUrlParts.java", "diffHunk": "@@ -466,4 +476,6 @@ private static void parseNonIpUrl(URL url, BlobUrlParts parts) {\n \n         return retVals;\n     }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e71a00aee201839198eb27f459e72b0d31d9ee1"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjM3NTYwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzozMjoyNVrOF3xoDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzozMjoyNVrOF3xoDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyOTA2OQ==", "bodyText": "Doesnt matter too much but the wording here is a little weird \"that is it is\", should there be a comma somewhere or something?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9123#discussion_r394029069", "createdAt": "2020-03-17T23:32:25Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -7,16 +7,27 @@\n import com.azure.storage.blob.models.ParallelTransferOptions;\n import com.azure.storage.blob.specialized.BlockBlobAsyncClient;\n \n-import java.util.regex.Pattern;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n \n /**\n  * This class provides helper methods for common model patterns.\n  *\n  * RESERVED FOR INTERNAL USE.\n  */\n public class ModelHelper {\n-    public static final Pattern IP_V4_URL_PATTERN = Pattern\n-        .compile(\"(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3})|(?:localhost)\");\n+\n+    /**\n+     * Determines whether or not the passed authority is IP style, that is it is of the format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e71a00aee201839198eb27f459e72b0d31d9ee1"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}