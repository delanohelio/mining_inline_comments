{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMjMyOTMw", "number": 16088, "title": "Add LogLevel Hooks to HttpLogOptions and HttpLoggingPolicy", "bodyText": "Fixes #11477\nThis PR adds two new interfaces HttpRequestLogger and HttpResponseLogger to handle logging requests and responses in HttpLoggingPolicy. The interfaces function similarly where they have a method that determines the logging level for a request/response and a method that logs the request/response if the ClientLogger is capable of logging at the expected logging level.\nHttpLogOptions has been updated with two new getters and setters to configure the HttpRequestLogger and HttpResponseLogger that will be used by HttpLoggingPolicy. Each property will have a default if it isn't set which is the current logic that HttpLoggingPolicy uses, LogLevel.INFORMATIONAL for default log level and its implementation functions for logging requests and responses.\nWith the new changes HttpLoggingPolicy can be configured to log with specific goals in mind, the following are a few scenarios:\n\n\nWhen responses take longer than expected to return the log level for the response can be escalated. For example, if the response takes more than 5 seconds to return it will be logged at the warning level, if the response takes more than 15 seconds to return it will be logged at the error level.\n\n\nYou have a nightly job which copies log files from your application servers and performs processing on the logs. This requires specific information to be logged in a well known format. The request and response logging functions can be customized to ensure the logging format complies with the processing requirements.", "createdAt": "2020-10-08T22:41:41Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088", "merged": true, "mergeCommit": {"oid": "7a28de3272f7777eb8dc50403f8d3e9636e0000e"}, "closed": true, "closedAt": "2021-07-15T22:35:14Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQpd8JAH2gAyNTAwMjMyOTMwOjU4OGNhNGFmZTg0OTkyNDMzNjE2ODQxYmVhM2NiNjdlMjAwODk4MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeqwgZNAH2gAyNTAwMjMyOTMwOmY5MDdkMDUwMTY5ODc3ZjFkMTg3OGYxYWVlZjZjNmIyMGE0Y2MwMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "588ca4afe84992433616841bea3cb67e20089811", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/588ca4afe84992433616841bea3cb67e20089811", "committedDate": "2020-10-08T22:38:50Z", "message": "Add functions to HttpLogOptions to determine the log level for request and response logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b407864619eeefd82dc6523b5e14ad2db7cfdbc", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b407864619eeefd82dc6523b5e14ad2db7cfdbc", "committedDate": "2020-10-12T22:20:13Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b51dad20d578b5a81e1cfe5f8334683acaa31595", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b51dad20d578b5a81e1cfe5f8334683acaa31595", "committedDate": "2020-10-14T23:11:45Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e78ca71c650c908cc91bece4db7f508ae601462", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e78ca71c650c908cc91bece4db7f508ae601462", "committedDate": "2020-10-15T20:36:34Z", "message": "Added configuration for custom HTTP request and HTTP response logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b6b3fec9591d310f103295a3d3eb1069f1cc5a", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e3b6b3fec9591d310f103295a3d3eb1069f1cc5a", "committedDate": "2020-10-19T21:34:31Z", "message": "Add HttpRequestLogger and HttpResponseLogger interfaces which allows for custom logging strategies to be passed into HttpLoggingPolicy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0633212d2ef3181abbe497f2ac7822688908b91d", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0633212d2ef3181abbe497f2ac7822688908b91d", "committedDate": "2020-10-19T21:40:27Z", "message": "Removed options bags classes that were unused prototypes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c21b47068b39adb35cb29884546e7ebf04d2f06", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c21b47068b39adb35cb29884546e7ebf04d2f06", "committedDate": "2020-10-21T17:20:31Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53882456d596dc733945d804fa96a43d3feafba2", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/53882456d596dc733945d804fa96a43d3feafba2", "committedDate": "2020-10-21T17:49:59Z", "message": "Return HttpResponse when not logging it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTkxNzA1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#pullrequestreview-512191705", "createdAt": "2020-10-19T22:02:23Z", "commit": {"oid": "0633212d2ef3181abbe497f2ac7822688908b91d"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMjowMjoyNFrOHkjRWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODoyODoyOFrOHl8sKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4ODY2NQ==", "bodyText": "Do we need this default log level here for Http logging? I think it's okay to make all HTTP request/response logging informational by default. This will minimize the number of places where log levels are configured.\nIf there's a need to change teh default, then customers have the options of providing customer request/response logger using setRequestLogger() and setResponseLogger().", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r508088665", "createdAt": "2020-10-19T22:02:24Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLogOptions.java", "diffHunk": "@@ -202,12 +210,92 @@ public boolean isPrettyPrintBody() {\n     /**\n      * Sets flag to allow pretty printing of message bodies.\n      *\n-     * @param prettyPrintBody If true, pretty prints message bodies when logging. If the detailLevel does not\n-     *                        include body logging, this flag does nothing.\n+     * @param prettyPrintBody If true, pretty prints message bodies when logging. If the detailLevel does not include\n+     * body logging, this flag does nothing.\n      * @return The updated HttpLogOptions object.\n      */\n     public HttpLogOptions setPrettyPrintBody(boolean prettyPrintBody) {\n         this.prettyPrintBody = prettyPrintBody;\n         return this;\n     }\n+\n+    /**\n+     * Gets the {@link LogLevel} used by default when logging requests and responses.\n+     * <p>\n+     * {@link HttpRequestLogger#getLogLevel(LogLevel, HttpPipelineCallContext)} and {@link\n+     * HttpResponseLogger#getLogLevel(LogLevel, HttpResponse, Duration)} can be used to set the {@link LogLevel} for\n+     * each request and response being logged.\n+     * <p>\n+     * By default {@link LogLevel#INFORMATIONAL} is used.\n+     *\n+     * @return The {@link LogLevel} used by default when logging requests and responses.\n+     */\n+    public LogLevel getDefaultLogLevel() {\n+        return defaultLogLevel;\n+    }\n+\n+    /**\n+     * Sets the {@link LogLevel} used by default when logging requests and responses.\n+     * <p>\n+     * {@link HttpRequestLogger#getLogLevel(LogLevel, HttpPipelineCallContext)} and {@link\n+     * HttpResponseLogger#getLogLevel(LogLevel, HttpResponse, Duration)} can be used to set the {@link LogLevel} for\n+     * each request and response being logged.\n+     * <p>\n+     * By default {@link LogLevel#INFORMATIONAL} is used.\n+     *\n+     * @param defaultLogLevel The default log level.\n+     * @return The updated HttpLogOptions object.\n+     */\n+    public HttpLogOptions setDefaultLogLevel(LogLevel defaultLogLevel) {\n+        this.defaultLogLevel = defaultLogLevel;\n+        return this;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0633212d2ef3181abbe497f2ac7822688908b91d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTUzOTcyNg==", "bodyText": "Do we need this method? For anyone implementing this interface, they can simply use the logRequest method to log at whatever level they want. We can then make this a functional interface.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r509539726", "createdAt": "2020-10-21T18:11:59Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpRequestLogger.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Manages logging HTTP requests in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpRequestLogger {\n+    /**\n+     * Retrieves the {@link LogLevel} used to log the current request.\n+     *\n+     * @param defaultLogLevel The default log level to use.\n+     * @param callContext The contextual information about the request, including headers, body, and metadata.\n+     * @return The {@link LogLevel} used to log the current request.\n+     */\n+    LogLevel getLogLevel(LogLevel defaultLogLevel, HttpPipelineCallContext callContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53882456d596dc733945d804fa96a43d3feafba2"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU0MDIxOA==", "bodyText": "Same as above. Can we just have the logResponse() method in this interface?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r509540218", "createdAt": "2020-10-21T18:12:33Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpResponseLogger.java", "diffHunk": "@@ -0,0 +1,38 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+import java.time.Duration;\n+\n+/**\n+ * Manages logging HTTP responses in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpResponseLogger {\n+    /**\n+     * Retrieves the {@link LogLevel} used to log the current response.\n+     *\n+     * @param defaultLogLevel The default log level to use.\n+     * @param response The HTTP response.\n+     * @param responseDuration The duration between sending the request and receiving the response.\n+     * @return The {@link LogLevel} used to log the current request.\n+     */\n+    LogLevel getLogLevel(LogLevel defaultLogLevel, HttpResponse response, Duration responseDuration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53882456d596dc733945d804fa96a43d3feafba2"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU0MzQwNA==", "bodyText": "Why do we need to pass the logLevel here? The HttpRequestLogger implementation should be able to determine what log level to use (from the callContext) instead of the caller passing in the level.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r509543404", "createdAt": "2020-10-21T18:16:23Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpRequestLogger.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Manages logging HTTP requests in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpRequestLogger {\n+    /**\n+     * Retrieves the {@link LogLevel} used to log the current request.\n+     *\n+     * @param defaultLogLevel The default log level to use.\n+     * @param callContext The contextual information about the request, including headers, body, and metadata.\n+     * @return The {@link LogLevel} used to log the current request.\n+     */\n+    LogLevel getLogLevel(LogLevel defaultLogLevel, HttpPipelineCallContext callContext);\n+\n+    /**\n+     * Logs the request.\n+     *\n+     * @param logger The {@link ClientLogger} used to log the request.\n+     * @param logLevel The {@link LogLevel} used to loge the request.\n+     * @param callContext The contextual information about the request, including headers, body, and metadata.\n+     * @return A reactive response that will indicate that the response has been logged.\n+     */\n+    Mono<Void> logRequest(ClientLogger logger, LogLevel logLevel, HttpPipelineCallContext callContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53882456d596dc733945d804fa96a43d3feafba2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU1MzcwNA==", "bodyText": "The HttpPipelineCallContext doesn't include the HTTP response. If it did, which seems to have been the intention going by the javadoc on this class, we could have used the HttpPipelineCallContext for passing in the response duration as well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r509553704", "createdAt": "2020-10-21T18:28:28Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpResponseLogger.java", "diffHunk": "@@ -0,0 +1,38 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+import java.time.Duration;\n+\n+/**\n+ * Manages logging HTTP responses in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpResponseLogger {\n+    /**\n+     * Retrieves the {@link LogLevel} used to log the current response.\n+     *\n+     * @param defaultLogLevel The default log level to use.\n+     * @param response The HTTP response.\n+     * @param responseDuration The duration between sending the request and receiving the response.\n+     * @return The {@link LogLevel} used to log the current request.\n+     */\n+    LogLevel getLogLevel(LogLevel defaultLogLevel, HttpResponse response, Duration responseDuration);\n+\n+    /**\n+     * Logs the request.\n+     *\n+     * @param logger The {@link ClientLogger} used to log the request.\n+     * @param logLevel The {@link LogLevel} used to loge the request.\n+     * @param response The HTTP response.\n+     * @param responseDuration The duration between sending the request and receiving the response.\n+     * @return A reactive response that will indicate that the response has been logged.\n+     */\n+    Mono<HttpResponse> logResponse(ClientLogger logger, LogLevel logLevel, HttpResponse response,\n+        Duration responseDuration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53882456d596dc733945d804fa96a43d3feafba2"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec0060c150749bc46dd62311c00aea02bb4bd28a", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec0060c150749bc46dd62311c00aea02bb4bd28a", "committedDate": "2020-10-21T20:09:22Z", "message": "Remove LogLevel parameter from interface APIs, changed getLogLevel to a default interface method, removed defaultLogLevel from HttpLogOptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTU2MjI3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#pullrequestreview-514156227", "createdAt": "2020-10-21T20:23:49Z", "commit": {"oid": "ec0060c150749bc46dd62311c00aea02bb4bd28a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoyMzo0OVrOHmDcJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoyMzo0OVrOHmDcJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY2NDI5Mw==", "bodyText": "nit; sued -> used", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r509664293", "createdAt": "2020-10-21T20:23:49Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLogOptions.java", "diffHunk": "@@ -202,12 +207,60 @@ public boolean isPrettyPrintBody() {\n     /**\n      * Sets flag to allow pretty printing of message bodies.\n      *\n-     * @param prettyPrintBody If true, pretty prints message bodies when logging. If the detailLevel does not\n-     *                        include body logging, this flag does nothing.\n+     * @param prettyPrintBody If true, pretty prints message bodies when logging. If the detailLevel does not include\n+     * body logging, this flag does nothing.\n      * @return The updated HttpLogOptions object.\n      */\n     public HttpLogOptions setPrettyPrintBody(boolean prettyPrintBody) {\n         this.prettyPrintBody = prettyPrintBody;\n         return this;\n     }\n+\n+    /**\n+     * Gets the {@link HttpRequestLogger} that will be used to log requests.\n+     * <p>\n+     * A default logger will be used if one isn't supplied.\n+     *\n+     * @return The {@link HttpRequestLogger} that will be used to log requests.\n+     */\n+    public HttpRequestLogger getRequestLogger() {\n+        return requestLogger;\n+    }\n+\n+    /**\n+     * Sets the {@link HttpRequestLogger} that will be used to log requests.\n+     * <p>\n+     * A default logger will be used if one isn't supplied.\n+     *\n+     * @param requestLogger The {@link HttpRequestLogger} that will be used to log requests.\n+     * @return The updated HttpLogOptions object.\n+     */\n+    public HttpLogOptions setRequestLogger(HttpRequestLogger requestLogger) {\n+        this.requestLogger = requestLogger;\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the {@link HttpResponseLogger} that will be used to log responses.\n+     * <p>\n+     * A default logger will be used if one isn't supplied.\n+     *\n+     * @return The {@link HttpResponseLogger} that will be used to log responses.\n+     */\n+    public HttpResponseLogger getResponseLogger() {\n+        return responseLogger;\n+    }\n+\n+    /**\n+     * Sets the {@link HttpResponseLogger} that will be used to log responses.\n+     * <p>\n+     * A default logger will be sued if one isn't supplied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0060c150749bc46dd62311c00aea02bb4bd28a"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a241bba9bb42efcbd31e84621af8c3e5397ee561", "committedDate": "2020-10-21T20:40:44Z", "message": "Javadoc updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0OTY2NzM3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#pullrequestreview-514966737", "createdAt": "2020-10-22T17:35:33Z", "commit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzozNTozNFrOHmss2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo0NjowN1rOHmtFzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MDMxNQ==", "bodyText": "Looks like this is unused and can be removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r510340315", "createdAt": "2020-10-22T17:35:34Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpLogOptions.java", "diffHunk": "@@ -22,6 +23,11 @@\n     private Set<String> allowedHeaderNames;\n     private Set<String> allowedQueryParamNames;\n     private boolean prettyPrintBody;\n+\n+    private LogLevel defaultLogLevel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MTM1OQ==", "bodyText": "Add @FunctionalInterface annotation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r510341359", "createdAt": "2020-10-22T17:37:11Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpRequestLogger.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Manages logging HTTP requests in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpRequestLogger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MTk0MQ==", "bodyText": "Add @FunctionalInterface annotation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r510341941", "createdAt": "2020-10-22T17:38:12Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpResponseLogger.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+import java.time.Duration;\n+\n+/**\n+ * Manages logging HTTP responses in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpResponseLogger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0MjU3Ng==", "bodyText": "Does this have to be async? If we don't need this to be async, then users who are not familiar with reactor can also use this to customize logging.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r510342576", "createdAt": "2020-10-22T17:39:13Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpRequestLogger.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Manages logging HTTP requests in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpRequestLogger {\n+    /**\n+     * Gets the {@link LogLevel} used to log the HTTP request.\n+     * <p>\n+     * By default this will return {@link LogLevel#INFORMATIONAL}.\n+     *\n+     * @param callContext The information used to send the HTTP request.\n+     * @return The {@link LogLevel} used to log the HTTP request.\n+     */\n+    default LogLevel getLogLevel(HttpPipelineCallContext callContext) {\n+        return LogLevel.INFORMATIONAL;\n+    }\n+\n+    /**\n+     * Logs the HTTP request.\n+     * <p>\n+     * To get the {@link LogLevel} used to log the HTTP request use {@link #getLogLevel(HttpPipelineCallContext)}.\n+     *\n+     * @param logger The {@link ClientLogger} used to log the HTTP request.\n+     * @param callContext The information used to send the HTTP request.\n+     * @return A reactive response that indicates that the HTTP request has been logged.\n+     */\n+    Mono<Void> logRequest(ClientLogger logger, HttpPipelineCallContext callContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NjcwMw==", "bodyText": "Wondering if responseDuration is the only criteria for deciding the log level. For e.g. the level maybe decided on the number of retry attempts too. Can we pass this in a context so we can add other data, if necessary? Same for logResponse method too.\ndefault LogLevel getLogLevel(HttpResponse response, Context context)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r510346703", "createdAt": "2020-10-22T17:46:07Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpResponseLogger.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.logging.LogLevel;\n+import reactor.core.publisher.Mono;\n+\n+import java.time.Duration;\n+\n+/**\n+ * Manages logging HTTP responses in {@link HttpLoggingPolicy}.\n+ */\n+public interface HttpResponseLogger {\n+    /**\n+     * Gets the {@link LogLevel} used to log the HTTP response.\n+     * <p>\n+     * By default this will return {@link LogLevel#INFORMATIONAL}.\n+     *\n+     * @param response The HTTP response.\n+     * @param responseDuration The duration between sending the request and receiving the response.\n+     * @return The {@link LogLevel} used to log the HTTP response.\n+     */\n+    default LogLevel getLogLevel(HttpResponse response, Duration responseDuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a241bba9bb42efcbd31e84621af8c3e5397ee561"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f611b739c6640209877fec066340a4c4f0ac6a82", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f611b739c6640209877fec066340a4c4f0ac6a82", "committedDate": "2020-10-22T18:08:30Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8cfbc39734d0e8107eb95e5caffea83580a9e74", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a8cfbc39734d0e8107eb95e5caffea83580a9e74", "committedDate": "2020-10-22T20:20:08Z", "message": "Add logger option bag classes to pass information for logging the request or response, made HttpPipelineCallContext's Context property accessible via getContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25504583e504c0a889a9803f95acdc68b9436d60", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/25504583e504c0a889a9803f95acdc68b9436d60", "committedDate": "2020-11-13T22:50:40Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f091cd485b8c296cac07608b8f018338386e553", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f091cd485b8c296cac07608b8f018338386e553", "committedDate": "2021-01-19T22:03:55Z", "message": "Pull in upstream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85795bf9a045e1ef7dbd0731862acd65d2d49644", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/85795bf9a045e1ef7dbd0731862acd65d2d49644", "committedDate": "2021-02-02T16:57:38Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75196720bcfa566b7111f49e3ba7cc11240f835e", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/75196720bcfa566b7111f49e3ba7cc11240f835e", "committedDate": "2021-04-05T16:15:20Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80c3bf4ab8ff5d298adafbb87e76134c01e7b889", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80c3bf4ab8ff5d298adafbb87e76134c01e7b889", "committedDate": "2021-04-27T20:02:54Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6198bbbeb2cf654731358a41314e95be04537bd2", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6198bbbeb2cf654731358a41314e95be04537bd2", "committedDate": "2021-04-27T20:35:34Z", "message": "Use accessor pattern instead of making API public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "052ac13134cdff241ecd28658e062f390c321b1d", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/052ac13134cdff241ecd28658e062f390c321b1d", "committedDate": "2021-05-11T19:59:51Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd3bbd4729af664a90af569a150d08149015f91a", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cd3bbd4729af664a90af569a150d08149015f91a", "committedDate": "2021-05-19T15:23:52Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f1a5b6c6b98ad8e0f5285e3f3d6df1fce8de941", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f1a5b6c6b98ad8e0f5285e3f3d6df1fce8de941", "committedDate": "2021-06-15T17:10:21Z", "message": "Merge branch 'master' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95813cc1f36085a1f1528bcd92ea14ee27422477", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/95813cc1f36085a1f1528bcd92ea14ee27422477", "committedDate": "2021-06-30T23:59:14Z", "message": "Merge branch 'main' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzAzNTcwMTI2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#pullrequestreview-703570126", "createdAt": "2021-07-11T10:08:22Z", "commit": {"oid": "95813cc1f36085a1f1528bcd92ea14ee27422477"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xMVQxMDowODoyMlrOJ8iTRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xMVQxMDowODo1OVrOJ8iTrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzQ1NjMyNA==", "bodyText": "We have been using *Options suffix for types that allow customizing requests (with setter methods). Since this is providing additional context for logging requests (read-only), it might be better to name this as HttpRequestLoggingContext.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r667456324", "createdAt": "2021-07-11T10:08:22Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpRequestLoggingOptions.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpRequest;\n+import com.azure.core.util.Context;\n+\n+/**\n+ * Options class containing information available during HTTP request logging.\n+ */\n+public final class HttpRequestLoggingOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95813cc1f36085a1f1528bcd92ea14ee27422477"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzQ1NjQyOQ==", "bodyText": "Same here - name this as HttpResponseLoggingContext.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16088#discussion_r667456429", "createdAt": "2021-07-11T10:08:59Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/policy/HttpResponseLoggingOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http.policy;\n+\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.util.Context;\n+\n+import java.time.Duration;\n+\n+/**\n+ * Options class containing information available during HTTP response logging.\n+ */\n+public final class HttpResponseLoggingOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95813cc1f36085a1f1528bcd92ea14ee27422477"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a0fb835d095eeeed0e823bc3c10423fb02367f", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/43a0fb835d095eeeed0e823bc3c10423fb02367f", "committedDate": "2021-07-12T19:53:31Z", "message": "Merge branch 'main' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "381ea82f3814f85a0f838c665f7d5ba1da6b57d3", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/381ea82f3814f85a0f838c665f7d5ba1da6b57d3", "committedDate": "2021-07-12T21:14:42Z", "message": "Merge branch 'AzCore_AddHttpLoggingHooks' of github.com:alzimmermsft/azure-sdk-for-java into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68208e2f35987155670b03572c77d0ca71d183fc", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/68208e2f35987155670b03572c77d0ca71d183fc", "committedDate": "2021-07-15T21:42:31Z", "message": "Merge branch 'main' into AzCore_AddHttpLoggingHooks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f907d050169877f1d1878f1aeef6c6b20a4cc018", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f907d050169877f1d1878f1aeef6c6b20a4cc018", "committedDate": "2021-07-15T21:44:02Z", "message": "Rename Options to Context"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2203, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}