{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzEzMDM1", "number": 8699, "title": "query optimization", "bodyText": "Prior to this PR, query deserialization worked in the following way:\n\nDocumentServiceResponse deserializes String body to JsonArray\nDocumentServiceResponse serializes elements of JsonArray back to String\nDocumentServiceResponse serializes string to Document as JsonNode\nDocument will get deserialized to customer user type\n\nThis PR removes the intermediate unnecessary steps 2. and 3.\nnew behaviour:\n\nDocumentServiceResponse deserializes byte[] body to JsonArray\nDocuments will get deserialized to customer user type\n\nMeaning one less round of serialization/deserialization per item.\nAlso this PR removes intermediate String state moving to byte[] array in more places (query spec, etc).\nMore PRs to come.", "createdAt": "2020-03-04T17:11:42Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699", "merged": true, "mergeCommit": {"oid": "688487f4f526e3cc23587d166af00c5245dcec6b"}, "closed": true, "closedAt": "2020-03-05T08:06:37Z", "author": {"login": "moderakh"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKaG4DAH2gAyMzgzNzEzMDM1Ojk1MzhmMGJlNjQwYTUzM2FjMjQyODIzZTNmZTZhZTc4OTZkMGMyODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLHqNGgFqTM3MDY1OTMyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283", "author": {"user": {"login": "moderakh", "name": "Mohammad Derakhshani"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9538f0be640a533ac242823e3fe6ae7896d0c283", "committedDate": "2020-03-04T17:10:22Z", "message": "remove intermediate String in serialization/deserialization, use byte[], and remove one unnecessary round of serializaiton/deserialization for query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTk1MDIy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#pullrequestreview-369195022", "createdAt": "2020-03-04T23:17:31Z", "commit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxNzozMVrOFyBJ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxODo0MlrOFyBLgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk5MjAzOA==", "bodyText": "Does this needs to be public ?\nIt exposes ObjectNode to public surface", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#discussion_r387992038", "createdAt": "2020-03-04T23:17:31Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Database.java", "diffHunk": "@@ -16,6 +18,16 @@\n  */\n public final class Database extends Resource {\n \n+    /**\n+     * Constructor.\n+     *\n+     * @param objectNode the {@link ObjectNode} that represent the\n+     * {@link JsonSerializable}\n+     */\n+    public Database(ObjectNode objectNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk5MjA3Ng==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#discussion_r387992076", "createdAt": "2020-03-04T23:17:38Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Document.java", "diffHunk": "@@ -21,6 +23,16 @@\n  */\n public class Document extends Resource {\n \n+    /**\n+     * Constructor.\n+     *\n+     * @param objectNode the {@link ObjectNode} that represent the\n+     * {@link JsonSerializable}\n+     */\n+    public Document(ObjectNode objectNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk5MjQ0OQ==", "bodyText": "Same, and everywhere else. azure-core will not allow exposing ObjectNode", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#discussion_r387992449", "createdAt": "2020-03-04T23:18:42Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/DocumentCollection.java", "diffHunk": "@@ -27,6 +29,16 @@\n     private UniqueKeyPolicy uniqueKeyPolicy;\n     private PartitionKeyDefinition partitionKeyDefinition;\n \n+    /**\n+     * Constructor.\n+     *\n+     * @param objectNode the {@link ObjectNode} that represent the\n+     * {@link JsonSerializable}\n+     */\n+    public DocumentCollection(ObjectNode objectNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTk4NTU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#pullrequestreview-369198555", "createdAt": "2020-03-04T23:25:57Z", "commit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjU5MzI3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#pullrequestreview-370659327", "createdAt": "2020-03-06T22:14:41Z", "commit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjoxNDo0MVrOFzJEAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMjoxNDo0MVrOFzJEAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3MDE3Nw==", "bodyText": "When we down cast JsonNode to ObjectNode we should make sure it is never an ArrayNode. Why don't we just use it as JsonNode itself and why do we need to convert it to ObjectNode any reason? I understand that we were previously converting it to a ObjectNode eventually node->json->objectnode. So this might not be an issue but just a thought", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8699#discussion_r389170177", "createdAt": "2020-03-06T22:14:41Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentServiceResponse.java", "diffHunk": "@@ -135,18 +138,12 @@ public String getResponseBodyAsString() {\n                 // Aggregate on single partition collection may return the aggregated value only\n                 // In that case it needs to encapsulated in a special document\n \n-                String resourceJson = jToken.isValueNode() || jToken.isArray()// to add nulls, arrays, objects\n-                        ? String.format(\"{\\\"%s\\\": %s}\", Constants.Properties.VALUE, jToken.toString())\n-                                : toJson(jToken);\n-                        T resource = null;\n-                        try {\n-                            resource = c.getConstructor(String.class).newInstance(resourceJson);\n-                        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException\n-                                | InvocationTargetException | NoSuchMethodException | SecurityException e) {\n-                            throw new IllegalStateException(\"Failed to instantiate class object.\", e);\n-                        }\n-\n-                        queryResults.add(resource);\n+                JsonNode resourceJson = jToken.isValueNode() || jToken.isArray()// to add nulls, arrays, objects\n+                        ? fromJson(String.format(\"{\\\"%s\\\": %s}\", Constants.Properties.VALUE, jToken.toString()))\n+                                : jToken;\n+\n+               T resource = (T) BridgeInternal.instantiateJsonSerializable((ObjectNode) resourceJson, c);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538f0be640a533ac242823e3fe6ae7896d0c283"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 998, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}