{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNDY5ODk2", "number": 16241, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozOTo0MVrOEtGlTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoyNzoyMVrOEtJfVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI5MjMxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozOTo0MVrOHgtLZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozNTozNVrOHgvrtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NjY3OA==", "bodyText": "please don't do concat in the logger\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                logger.error(\"Error during pre populating item \"+throwable.getMessage());\n          \n          \n            \n                                logger.error(\"Error during pre populating item\", throwable);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504056678", "createdAt": "2020-10-13T15:39:41Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \"+throwable.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd49ea7ec38014b2ed8cdbf15b4909db0c2a5e8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NzcxNw==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504097717", "createdAt": "2020-10-13T16:35:35Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \"+throwable.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1NjY3OA=="}, "originalCommit": {"oid": "ccd49ea7ec38014b2ed8cdbf15b4909db0c2a5e8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzMyODQzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTo0NzoyNlrOHgth_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozNToyOFrOHgvrTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MjQ2Mg==", "bodyText": "please fix the code style.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            successCount.get()-failureCount.get(), container.getId());\n          \n          \n            \n                            successCount.get() - failureCount.get(), container.getId());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504062462", "createdAt": "2020-10-13T15:47:26Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \"+throwable.getMessage());\n+                    return Mono.empty();\n+                }).doOnSuccess(pojoizedJson -> {\n+                    successCount.incrementAndGet();\n                 }).flux();\n                 createDocumentObservables.add(obs);\n             }\n             docsToRead.put(container.getId(),\n                 Flux.merge(Flux.fromIterable(createDocumentObservables), 100).collectList().block());\n             logger.info(\"Finished pre-populating {} documents for container {}\",\n-                numberOfPreCreatedDocuments, container.getId());\n+                successCount.get()-failureCount.get(), container.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd49ea7ec38014b2ed8cdbf15b4909db0c2a5e8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NzYxMw==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504097613", "createdAt": "2020-10-13T16:35:28Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \"+throwable.getMessage());\n+                    return Mono.empty();\n+                }).doOnSuccess(pojoizedJson -> {\n+                    successCount.incrementAndGet();\n                 }).flux();\n                 createDocumentObservables.add(obs);\n             }\n             docsToRead.put(container.getId(),\n                 Flux.merge(Flux.fromIterable(createDocumentObservables), 100).collectList().block());\n             logger.info(\"Finished pre-populating {} documents for container {}\",\n-                numberOfPreCreatedDocuments, container.getId());\n+                successCount.get()-failureCount.get(), container.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA2MjQ2Mg=="}, "originalCommit": {"oid": "ccd49ea7ec38014b2ed8cdbf15b4909db0c2a5e8"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY0NzUzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjo1NTo1NlrOHgwqvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNjozNlrOHgxDeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMzg1Mg==", "bodyText": "We are not throwing error in case of pre-populating failures, is this intentional ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504113852", "createdAt": "2020-10-13T16:55:56Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \", throwable.getMessage());\n+                    return Mono.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a05b17b340fa6dd27fa8e93fe4fec7d4fabc89d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDE4Ng==", "bodyText": "Yes this is intentional , this was causing ctl failure if there was single failure on pre populated document create.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504120186", "createdAt": "2020-10-13T17:06:36Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \", throwable.getMessage());\n+                    return Mono.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExMzg1Mg=="}, "originalCommit": {"oid": "3a05b17b340fa6dd27fa8e93fe4fec7d4fabc89d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Nzc2ODUyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoyNzoyMVrOHgx1FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNjoxM1rOHg1ZjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMjg4NQ==", "bodyText": "logging this as warning instead? Doesn't do any harm, correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504132885", "createdAt": "2020-10-13T17:27:21Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \", throwable.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a05b17b340fa6dd27fa8e93fe4fec7d4fabc89d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MTM3Mg==", "bodyText": "Thanks , that make sense , i will keep it in note and add in it next time when i touch ctl, need this to get merge now", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16241#discussion_r504191372", "createdAt": "2020-10-13T19:06:13Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos-benchmark/src/main/java/com/azure/cosmos/benchmark/ctl/AsyncCtlWorkload.java", "diffHunk": "@@ -276,13 +279,23 @@ private void createPrePopulatedDocs(int numberOfPreCreatedDocuments) {\n                     PojoizedJson x =\n                         resp.getItem();\n                     return x;\n+                }).onErrorResume(throwable -> {\n+                    failureCount.incrementAndGet();\n+                    logger.error(\"Error during pre populating item \", throwable.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMjg4NQ=="}, "originalCommit": {"oid": "3a05b17b340fa6dd27fa8e93fe4fec7d4fabc89d"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4090, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}