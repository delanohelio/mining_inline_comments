{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTYyOTcw", "number": 15964, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyOTo0M1rOEq0ztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyOTo0M1rOEq0ztQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzQwODUzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-cryptography/src/test/java/com/azure/storage/blob/specialized/cryptography/EncyptedBlockBlobAPITest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyOTo0M1rOHdQLvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoyMjozNFrOHdYi7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNTkwMw==", "bodyText": "Can you leave a comment that explains this tests the policy is in the right place because if it were added per retry, it would be after the credentials and auth would fail because we changed a signed header", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15964#discussion_r500435903", "createdAt": "2020-10-06T16:29:43Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/test/java/com/azure/storage/blob/specialized/cryptography/EncyptedBlockBlobAPITest.groovy", "diffHunk": "@@ -1462,6 +1468,32 @@ class EncyptedBlockBlobAPITest extends APISpec {\n         3 * Constants.MB| Constants.MB  || 4 // Encryption padding will add an extra block\n     }\n \n+    def getPerCallVersionPolicy() {\n+        return new HttpPipelinePolicy() {\n+            @Override\n+            Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+                context.getHttpRequest().setHeader(\"x-ms-version\",\"2017-11-09\")\n+                return next.process()\n+            }\n+            @Override\n+            HttpPipelinePosition getPipelinePosition() {\n+                return HttpPipelinePosition.PER_CALL\n+            }\n+        }\n+    }\n+\n+    def \"Per call policy\"() {\n+        def client = getEncryptedClientBuilder(fakeKey, fakeKeyResolver, primaryCredential, bec.getBlobUrl(), getPerCallVersionPolicy()).buildEncryptedBlobClient()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "170b266c1d0f7ee9ccfb18075784fa2383a40ea2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3MjkwOA==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15964#discussion_r500572908", "createdAt": "2020-10-06T20:22:34Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/test/java/com/azure/storage/blob/specialized/cryptography/EncyptedBlockBlobAPITest.groovy", "diffHunk": "@@ -1462,6 +1468,32 @@ class EncyptedBlockBlobAPITest extends APISpec {\n         3 * Constants.MB| Constants.MB  || 4 // Encryption padding will add an extra block\n     }\n \n+    def getPerCallVersionPolicy() {\n+        return new HttpPipelinePolicy() {\n+            @Override\n+            Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+                context.getHttpRequest().setHeader(\"x-ms-version\",\"2017-11-09\")\n+                return next.process()\n+            }\n+            @Override\n+            HttpPipelinePosition getPipelinePosition() {\n+                return HttpPipelinePosition.PER_CALL\n+            }\n+        }\n+    }\n+\n+    def \"Per call policy\"() {\n+        def client = getEncryptedClientBuilder(fakeKey, fakeKeyResolver, primaryCredential, bec.getBlobUrl(), getPerCallVersionPolicy()).buildEncryptedBlobClient()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNTkwMw=="}, "originalCommit": {"oid": "170b266c1d0f7ee9ccfb18075784fa2383a40ea2"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3581, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}