{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMzEwMDY3", "number": 14323, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowMzowNFrOEawX3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNToyMlrOEawZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDkwOTc0OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowMzowNFrOHEYGyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowMzowNFrOHEYGyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MTMwNw==", "bodyText": "this line and next line can be merged.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14323#discussion_r474351307", "createdAt": "2020-08-21T01:03:04Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "diffHunk": "@@ -120,13 +133,15 @@ public Object getProperty(String name) {\n      *\n      * <p>\n      * <b>Note</b>: Doesn't update Feature Management, just stores values in cache. Call\n-     * {@code initFeatures} to update Feature Management, but make sure its done in the last {@code\n+     * {@code initFeatures} to update Feature Management, but make sure its done in the\n+     * last {@code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d95073d9448739ae2970c10328cca1ba3dc8f4a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDkxMTc5OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNDoyNFrOHEYIBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNDoyNFrOHEYIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MTYyMQ==", "bodyText": "indentation", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14323#discussion_r474351621", "createdAt": "2020-08-21T01:04:24Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "diffHunk": "@@ -205,20 +229,21 @@ private String getKeyVaultEntry(String value) {\n     }\n \n     /**\n-     * Initializes Feature Management configurations. Only one {@code AppConfigurationPropertySource} can call this, and\n-     * it needs to be done after the rest have run initProperties.\n+     * Initializes Feature Management configurations. Only one\n+     * {@code AppConfigurationPropertySource} can call this, and it needs to be done after\n+     * the rest have run initProperties.\n      *\n      * @param featureSet Feature Flag info to be set to this property source.\n      */\n     void initFeatures(FeatureSet featureSet) {\n         ObjectMapper featureMapper = new ObjectMapper();\n         featureMapper.setPropertyNamingStrategy(PropertyNamingStrategy.KEBAB_CASE);\n         properties.put(FEATURE_MANAGEMENT_KEY,\n-            featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));\n+                featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d95073d9448739ae2970c10328cca1ba3dc8f4a"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDkxMTk3OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNDozMlrOHEYIHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNjowOFrOHEYJjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MTY0Nw==", "bodyText": "indentation", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14323#discussion_r474351647", "createdAt": "2020-08-21T01:04:32Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "diffHunk": "@@ -205,20 +229,21 @@ private String getKeyVaultEntry(String value) {\n     }\n \n     /**\n-     * Initializes Feature Management configurations. Only one {@code AppConfigurationPropertySource} can call this, and\n-     * it needs to be done after the rest have run initProperties.\n+     * Initializes Feature Management configurations. Only one\n+     * {@code AppConfigurationPropertySource} can call this, and it needs to be done after\n+     * the rest have run initProperties.\n      *\n      * @param featureSet Feature Flag info to be set to this property source.\n      */\n     void initFeatures(FeatureSet featureSet) {\n         ObjectMapper featureMapper = new ObjectMapper();\n         featureMapper.setPropertyNamingStrategy(PropertyNamingStrategy.KEBAB_CASE);\n         properties.put(FEATURE_MANAGEMENT_KEY,\n-            featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));\n+                featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));\n     }\n \n     private FeatureSet addToFeatureSet(FeatureSet featureSet, List<ConfigurationSetting> settings, Date date)\n-        throws IOException {\n+            throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d95073d9448739ae2970c10328cca1ba3dc8f4a"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MjAxMw==", "bodyText": "there are more in the same file", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14323#discussion_r474352013", "createdAt": "2020-08-21T01:06:08Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "diffHunk": "@@ -205,20 +229,21 @@ private String getKeyVaultEntry(String value) {\n     }\n \n     /**\n-     * Initializes Feature Management configurations. Only one {@code AppConfigurationPropertySource} can call this, and\n-     * it needs to be done after the rest have run initProperties.\n+     * Initializes Feature Management configurations. Only one\n+     * {@code AppConfigurationPropertySource} can call this, and it needs to be done after\n+     * the rest have run initProperties.\n      *\n      * @param featureSet Feature Flag info to be set to this property source.\n      */\n     void initFeatures(FeatureSet featureSet) {\n         ObjectMapper featureMapper = new ObjectMapper();\n         featureMapper.setPropertyNamingStrategy(PropertyNamingStrategy.KEBAB_CASE);\n         properties.put(FEATURE_MANAGEMENT_KEY,\n-            featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));\n+                featureMapper.convertValue(featureSet.getFeatureManagement(), LinkedHashMap.class));\n     }\n \n     private FeatureSet addToFeatureSet(FeatureSet featureSet, List<ConfigurationSetting> settings, Date date)\n-        throws IOException {\n+            throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MTY0Nw=="}, "originalCommit": {"oid": "9d95073d9448739ae2970c10328cca1ba3dc8f4a"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDkxMzU1OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNToyMlrOHEYI-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTowNToyMlrOHEYI-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MTg2NQ==", "bodyText": "indentation", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14323#discussion_r474351865", "createdAt": "2020-08-21T01:05:22Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-spring-cloud-appconfiguration-config/src/main/java/com/microsoft/azure/spring/cloud/config/AppConfigurationPropertySource.java", "diffHunk": "@@ -189,7 +213,7 @@ private String getKeyVaultEntry(String value) {\n             // one\n             if (!keyVaultClients.containsKey(uri.getHost())) {\n                 KeyVaultClient client = new KeyVaultClient(appConfigurationProperties, uri, keyVaultCredentialProvider,\n-                    keyVaultClientProvider);\n+                        keyVaultClientProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d95073d9448739ae2970c10328cca1ba3dc8f4a"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1578, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}