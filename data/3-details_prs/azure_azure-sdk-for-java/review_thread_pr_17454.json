{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzY3MjU5", "number": 17454, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyOTo1NlrOE3a4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjozNzozMFrOE3cMZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTQ3NTE3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMToyOTo1NlrOHwwVvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0Mjo0OVrOHwz89w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4NTY5Mg==", "bodyText": "Since you are adding validation, I would add a @throws to say what runtime exceptions are thrown.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520885692", "createdAt": "2020-11-10T21:29:56Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessage.java", "diffHunk": "@@ -267,6 +271,7 @@ public String getMessageId() {\n      * @return The updated {@link ServiceBusMessage}.\n      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NDg4Nw==", "bodyText": "Added.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520944887", "createdAt": "2020-11-10T23:42:49Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessage.java", "diffHunk": "@@ -267,6 +271,7 @@ public String getMessageId() {\n      * @return The updated {@link ServiceBusMessage}.\n      */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4NTY5Mg=="}, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTY1NDI5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjoyNToxMFrOHwyBJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0Mjo0MFrOHwz8rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxMzE5MA==", "bodyText": "We can add this in java doc for all the settlement operation (for ex complete, abandon.. etc ) in the client\n@throws UnsupportedOperationException section.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520913190", "createdAt": "2020-11-10T22:25:10Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -987,6 +986,11 @@ private boolean isManagementToken(String lockToken) {\n         } else if (message.isSettled()) {\n             return Mono.error(logger.logExceptionAsError(\n                 new IllegalArgumentException(\"The message has either been deleted or already settled.\")));\n+        } else if (message.getLockToken() == null) {\n+            // message must be a peeked message (or somehow they created a message w/o a lock token)\n+            return Mono.error(\n+                logger.logExceptionAsError(new UnsupportedOperationException(\"This operation is not supported for peeked messages. Only messages received using receiveMessages() or receiveMessagesWithContext() in PEEK_LOCK mode can be settled.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NDgxMw==", "bodyText": "Added.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520944813", "createdAt": "2020-11-10T23:42:40Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -987,6 +986,11 @@ private boolean isManagementToken(String lockToken) {\n         } else if (message.isSettled()) {\n             return Mono.error(logger.logExceptionAsError(\n                 new IllegalArgumentException(\"The message has either been deleted or already settled.\")));\n+        } else if (message.getLockToken() == null) {\n+            // message must be a peeked message (or somehow they created a message w/o a lock token)\n+            return Mono.error(\n+                logger.logExceptionAsError(new UnsupportedOperationException(\"This operation is not supported for peeked messages. Only messages received using receiveMessages() or receiveMessagesWithContext() in PEEK_LOCK mode can be settled.\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxMzE5MA=="}, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTY4NDc4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjozNToyN1rOHwyTNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzozMzoxNFrOHwzvAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxNzgxNA==", "bodyText": "We might want to put in receiveDeferredMessages API  (which take in Iterable<Long> sequenceNumbers  ) in sync and async client that empty list will complete the flux without sending to service bus .", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520917814", "createdAt": "2020-11-10T22:35:27Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -189,7 +189,17 @@\n      */\n     @Override\n     public Flux<ServiceBusReceivedMessage> receiveDeferredMessages(ReceiveMode receiveMode, String sessionId,\n-        String associatedLinkName, Iterable<Long> sequenceNumbers) {\n+                                                                   String associatedLinkName, Iterable<Long> sequenceNumbers) {\n+        if (sequenceNumbers == null) {\n+            return fluxError(logger, new NullPointerException(\"'sequenceNumbers' cannot be null\"));\n+        }\n+\n+        final List<Long> numbers = new ArrayList<>();\n+        sequenceNumbers.forEach(s -> numbers.add(s));\n+\n+        if (numbers.isEmpty()) {\n+            return Flux.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0MTMxNA==", "bodyText": "Thinking about this a bit more - are we sure that's something that needs documenting? We're no longer treating it as an error condition so this just seems to fall under normal operating conditions.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520941314", "createdAt": "2020-11-10T23:33:14Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -189,7 +189,17 @@\n      */\n     @Override\n     public Flux<ServiceBusReceivedMessage> receiveDeferredMessages(ReceiveMode receiveMode, String sessionId,\n-        String associatedLinkName, Iterable<Long> sequenceNumbers) {\n+                                                                   String associatedLinkName, Iterable<Long> sequenceNumbers) {\n+        if (sequenceNumbers == null) {\n+            return fluxError(logger, new NullPointerException(\"'sequenceNumbers' cannot be null\"));\n+        }\n+\n+        final List<Long> numbers = new ArrayList<>();\n+        sequenceNumbers.forEach(s -> numbers.add(s));\n+\n+        if (numbers.isEmpty()) {\n+            return Flux.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxNzgxNA=="}, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTY5MDYzOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjozNzozMFrOHwyW4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzo0MjoyOVrOHwz8ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxODc1Mg==", "bodyText": "This is done by intellij for you, without you knowing . This should have 4 spaces before  int .  I see few more places like this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520918752", "createdAt": "2020-11-10T22:37:30Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -291,7 +298,7 @@\n      */\n     @Override\n     public Flux<Long> schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime,\n-        int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {\n+                               int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzNTcxMg==", "bodyText": "Gah, will fix :|", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520935712", "createdAt": "2020-11-10T23:18:17Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -291,7 +298,7 @@\n      */\n     @Override\n     public Flux<Long> schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime,\n-        int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {\n+                               int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxODc1Mg=="}, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0NDc0Ng==", "bodyText": "Fixed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17454#discussion_r520944746", "createdAt": "2020-11-10T23:42:29Z", "author": {"login": "richardpark-msft"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -291,7 +298,7 @@\n      */\n     @Override\n     public Flux<Long> schedule(List<ServiceBusMessage> messages, OffsetDateTime scheduledEnqueueTime,\n-        int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {\n+                               int maxLinkSize, String associatedLinkName, ServiceBusTransactionContext transactionContext) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkxODc1Mg=="}, "originalCommit": {"oid": "a19c91e135488f5b4e7b8318acb38fbc27ec4e89"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2904, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}