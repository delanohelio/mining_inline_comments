{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTg1NTM3", "number": 15234, "title": "Fix javadocs for ADT, fix usage of T vs Object in createDigitalTwin and createRelationship APIs", "bodyText": "Also fixed tests not using those APIs in the correct way, and a few other miscellaneous issues.\nOther than the javadoc changes, there is one bigger callout that I want you to look at:\nI want to change the create APIs that look like this:\npublic <T> Mono<T> createDigitalTwin(String digitalTwinId, Object digitalTwin, Class<T> clazz)\t\nTo look like this instead:\npublic <T> Mono<T> createDigitalTwin(String digitalTwinId, T digitalTwin, Class<T> clazz)\nThis applies to the createRelationship APIs as well. Because we were taking the digital twin as an object, our e2e tests were passing in json strings into these constructors which didn't seem right to me. We basically had code like:\nString someDigitalTwinString = \"...\";\nBasicDigitalTwin deserializedDigitalTwin = digitalTwinClient.createDigitalTwin(\"someDigitalTwinId\", someDigitalTwinString, BasicDigitalTwin.class);\nRestful create APIs generally should return the same type that was passed in, so with my change here the code will look more like:\nBasicDigitalTwin someDeserializedDigitalTwin = new BasicDigitalTwin();\nBasicDigitalTwin deserializedDigitalTwin = digitalTwinClient.createDigitalTwin(\"someDigitalTwinId\", someDigitalTwinString, BasicDigitalTwin.class);", "createdAt": "2020-09-15T21:19:20Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234", "merged": true, "mergeCommit": {"oid": "a68b2d12ad28ad8f226d1d8a2524d8a37ca81951"}, "closed": true, "closedAt": "2020-09-16T00:32:37Z", "author": {"login": "timtay-microsoft"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJOh1jgH2gAyNDg3NTg1NTM3OjJhZWQ3OGViNzRlZjI1Njk5ODk1NWFkN2ZlMDE3ZTJiMGQ5NDYwNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJPtdZgFqTQ4OTE1NjI4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2aed78eb74ef256998955ad7fe017e2b0d946076", "committedDate": "2020-09-15T21:18:11Z", "message": "Fix javadocs for ADT, fix usage of T vs Object in createDigitalTwin and createRelationship APIs\n\nAlso fixed tests not using those APIs in the correct way"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDk5MjU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489099255", "createdAt": "2020-09-15T21:21:04Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMTowNVrOHSU-Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMTowNVrOHSU-Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MDA0Nw==", "bodyText": "@abhipsaMisra I believe you were in favor of taking an Object here rather than a T, so I wanted to discuss this again. In our e2e tests, this API was being called such that the digitalTwin argument was a String and the return type was of type T (BasicDigitalTwin). Is that expected? My understanding was that we wanted to take and return the same type here.\nWith this change, our e2e tests now pass in a BasicDigitalTwin instance, and the function returns a BasicDigitalTwin instance which made more sense to me, but I'd like to hear everyone's opinion on this", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488980047", "createdAt": "2020-09-15T21:21:05Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -143,17 +143,17 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      * Creates a digital twin.\n      *\n      * @param digitalTwinId The Id of the digital twin.\n-     * @param digitalTwin The application/json digital twin to create.\n-     * @param clazz The model class to deserialize the response with.\n-     * @param <T> The generic type to deserialize the digital twin with.\n+     * @param digitalTwin The application/json object representing the digital twin to create.\n+     * @param clazz The model class to serialize the request with and deserialize the response with.\n+     * @param <T> The generic type to serialize the request with and deserialize the response with.\n      * @return A {@link DigitalTwinsResponse} containing the deserialized application/json object representing the digital twin created.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public <T> Mono<DigitalTwinsResponse<T>> createDigitalTwinWithResponse(String digitalTwinId, Object digitalTwin, Class<T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTAyODA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489102809", "createdAt": "2020-09-15T21:23:04Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMzowNFrOHSVB9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMzowNFrOHSVB9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MDk4Mg==", "bodyText": "This function was sitting in the models API section, so I moved it back to the correct section", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488980982", "createdAt": "2020-09-15T21:23:04Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -585,6 +589,12 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n             nextLink -> withContext(context -> listRelationshipsNextPage(nextLink, context)));\n     }\n \n+    PagedFlux<String> listRelationships(String digitalTwinId, String relationshipName, Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 219}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTA0MzAz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489104303", "createdAt": "2020-09-15T21:23:51Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMzo1MVrOHSVDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyMzo1MVrOHSVDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MTMyMg==", "bodyText": "the changes from lines 819 to 827 are just swapping the order of these two list APIs. Now the minimal list API is above the maximal list API for consistency", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488981322", "createdAt": "2020-09-15T21:23:51Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -816,24 +828,24 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n     }\n \n     /**\n-     * Gets the list of models by iterating through a collection.\n-     * @param listModelOptions The options to follow when listing the models. For example, the page size hint can be specified.\n-     * @return A {@link PagedFlux} of ModelData and the http response.\n+     * List all of the models in this digital twins instance.\n+     * @return A {@link PagedFlux} of {@link ModelData} that enumerates all the models.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<ModelData> listModels(ListModelOptions listModelOptions) {\n-        return new PagedFlux<>(\n-            () -> withContext(context -> listModelsSinglePageAsync(listModelOptions, context)),\n-            nextLink -> withContext(context -> listModelsNextSinglePageAsync(nextLink, context)));\n+    public PagedFlux<ModelData> listModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 281}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTA0ODg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489104887", "createdAt": "2020-09-15T21:24:08Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNDowOVrOHSVD6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNDowOVrOHSVD6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MTQ4Mw==", "bodyText": "This function was sitting in the models API section, so I moved it back to the correct section", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488981483", "createdAt": "2020-09-15T21:24:09Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -913,12 +925,6 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n         return protocolLayer.getDigitalTwinModels().deleteWithResponseAsync(modelId, context);\n     }\n \n-    PagedFlux<String> listRelationships(String digitalTwinId, String relationshipName, Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 315}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTA3MDM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489107034", "createdAt": "2020-09-15T21:25:18Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNToxOFrOHSVGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNToxOFrOHSVGCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MjAyNA==", "bodyText": "The changes from lines 505 to 522 are just swapping the order that these two list APIs appear. Now the minimal API is above the maximal API for consistency", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488982024", "createdAt": "2020-09-15T21:25:18Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -494,32 +506,32 @@ public ModelData getModel(String modelId) {\n      * Gets a model, including the model metadata and the model definition.\n      * @param modelId The Id of the model.\n      * @param context Additional context that is passed through the Http pipeline during the service call.\n-     * @return The ModelData and the http response\n+     * @return A {@link Response} containing a {@link ModelData} instance that contains the model and its metadata.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Response<ModelData> getModelWithResponse(String modelId, Context context) {\n         return digitalTwinsAsyncClient.getModelWithResponse(modelId, context).block();\n     }\n \n     /**\n-     * Gets the list of models by iterating through a collection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 364}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTA4NDA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489108407", "createdAt": "2020-09-15T21:26:04Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNjowNFrOHSVHbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNjowNFrOHSVHbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MjM4MQ==", "bodyText": "Event routes get their own sample, so no need for these TODO comments", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488982381", "createdAt": "2020-09-15T21:26:04Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "diffHunk": "@@ -118,15 +118,6 @@ public static void main(String[] args) throws IOException, InterruptedException\n \n         // Create all the relationships\n         connectTwinsTogether();\n-\n-        // TODO: Creating event route", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTEwNTY1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489110565", "createdAt": "2020-09-15T21:27:16Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNzoxNlrOHSVJlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMToyNzoxNlrOHSVJlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4MjkzNA==", "bodyText": "Our e2e tests that used the APIs that take objects rather than strings were still passing in strings. This didn't seem right to me, even if the tests still passed. I added this function so that when we use those APIs, we pass in objects like BasicDigitalTwin rather than the raw json string", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488982934", "createdAt": "2020-09-15T21:27:16Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/DigitalTwinsTestBase.java", "diffHunk": "@@ -120,4 +126,9 @@ protected DigitalTwinsAsyncClient getAsyncClient(HttpClient httpClient, DigitalT\n             return Mono.just(new AccessToken(\"someFakeToken\", OffsetDateTime.MAX));\n         }\n     }\n+\n+    // Used for converting json strings into BasicDigitalTwins, BasicRelationships, etc.\n+    static <T> T deserializeJsonString(String rawJsonString, Class<T> clazz) throws JsonProcessingException {\n+        return new ObjectMapper().readValue(rawJsonString, clazz);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTIzODg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489123888", "createdAt": "2020-09-15T21:34:54Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNDo1NFrOHSVW7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozNDo1NFrOHSVW7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk4NjM1MA==", "bodyText": "Note that the return type is different than the passed in type (BasicDigitalTwin vs string)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#discussion_r488986350", "createdAt": "2020-09-15T21:34:54Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/test/java/com/azure/digitaltwins/core/ComponentsTests.java", "diffHunk": "@@ -48,7 +49,7 @@ public void componentLifecycleTest(HttpClient httpClient, DigitalTwinsServiceVer\n             List<ModelData> createdList = client.createModels(modelsList);\n             logger.info(\"Created {} models successfully\", createdList.size());\n \n-            BasicDigitalTwin createdTwin = client.createDigitalTwin(roomWithWifiTwinId, roomWithWifiTwin,BasicDigitalTwin.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTQ4MTE2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489148116", "createdAt": "2020-09-15T22:21:34Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTU2Mjg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15234#pullrequestreview-489156284", "createdAt": "2020-09-15T22:40:48Z", "commit": {"oid": "2aed78eb74ef256998955ad7fe017e2b0d946076"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3338, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}