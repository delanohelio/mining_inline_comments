{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDA0NTA1", "number": 14657, "title": "Update Identity Credentials Aug 2020", "bodyText": "Fixes #14548 , #14486", "createdAt": "2020-08-31T16:32:44Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657", "merged": true, "mergeCommit": {"oid": "361274c7c5a05f5ca8dba39bd7d1d5517942eef9"}, "closed": true, "closedAt": "2020-09-11T17:15:10Z", "author": {"login": "g2vinay"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEVVvSgH2gAyNDc2NDA0NTA1OjQ3MTUwMjQ3Yjc0YzgwZjA1M2ViOTZmMjQ0MTkzMGU1YTNlNjNiZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH4DF7AH2gAyNDc2NDA0NTA1OmI4MzA4ZDA1Y2RiMWQ3NzBhMDJhZDk3OTJlMzY5Njc2ZGM4ZTE0MGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "47150247b74c80f053eb96f2441930e5a3e63bd1", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/47150247b74c80f053eb96f2441930e5a3e63bd1", "committedDate": "2020-08-31T16:24:41Z", "message": "Add CredenUnavailableException on adfs tenants."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/51e3f8dcdcefe54585c2b5164e14a7d155666288", "committedDate": "2020-08-31T16:31:48Z", "message": "Merge remote-tracking branch 'upstream/master' into update-identity-credentials-aug-2020"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDIzNzM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-479023734", "createdAt": "2020-08-31T22:56:15Z", "commit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1NjoxNVrOHKMjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1NjoxNVrOHKMjFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzM5OQ==", "bodyText": "Should this error also apply to service principal authentication as well? I'm not familiar enough with the IntelliJ plug-in, but can you authenticate a service principal in an ADFS instance? Does it not try to actually authenticate the SP, but rather just store the credentials?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r480453399", "createdAt": "2020-08-31T22:56:15Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -337,6 +338,10 @@ private PublicClientApplication getPublicClientApplication(boolean sharedTokenCa\n                 }\n             } else if (authType.equalsIgnoreCase(\"DC\")) {\n \n+                if (isADFSTenant()) {\n+                    return Mono.error(new CredentialUnavailableException(\"IntelliJCredential  \"\n+                                         + \"authentication unavailable. ADFS tenant/authorities are not supported.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de8f97fe11a375443f98eb3984d7510a3ae9537", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9de8f97fe11a375443f98eb3984d7510a3ae9537", "committedDate": "2020-09-02T07:23:40Z", "message": "add redirect URI to IBC."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5d7f79c1663b55c351f013b808e72b04873aed39", "committedDate": "2020-09-02T16:40:10Z", "message": "fix dead store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjA4NDA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481208409", "createdAt": "2020-09-02T19:13:24Z", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxMzoyNFrOHL-stQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxMzoyNFrOHL-stQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMzYzNw==", "bodyText": "Should either port or redirectUrl be required?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482323637", "createdAt": "2020-09-02T19:13:24Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjE2MDk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481216096", "createdAt": "2020-09-02T19:17:02Z", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxNzowMlrOHL-5iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxNzowMlrOHL-5iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNjkyMA==", "bodyText": "I wouldn't default to localhost here. We are secretly setting a default here and it will throw an error from AAD saying the redirect URL is not valid. The user will probably scratch the head wondering where he has set the redirect URL. A better error message would be \"Either a port or a redirect URl must be provided on InteractiveBrowserCredentialBuilder, which leads them to read the javadocs there and understand what they need to do.\nYou could also do this validation in the build() method on InteractiveBrowserCredential.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482326920", "createdAt": "2020-09-02T19:17:02Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -639,10 +648,21 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @param port the port on which the HTTP server is listening\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n+    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, Integer port,\n+                                                              String redirectURL) {\n         URI redirectUri;\n+        String redirect;\n+\n+        if (port != null) {\n+            redirect = HTTP_LOCALHOST + \":\" + port;\n+        } else if (redirectURL != null) {\n+            redirect = redirectURL;\n+        } else {\n+            redirect = HTTP_LOCALHOST;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjQ2MjAy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481246202", "createdAt": "2020-09-02T19:46:04Z", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0NjowNFrOHMBEFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1MDowMVrOHMBY1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2MjM4OQ==", "bodyText": "Why do we want to deprecate this? Redirect URL will force the user to include the host and the port when they just want to change the port.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482362389", "createdAt": "2020-09-02T19:46:04Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -17,14 +17,19 @@\n public class InteractiveBrowserCredentialBuilder extends AadCredentialBuilderBase<InteractiveBrowserCredentialBuilder> {\n     private Integer port;\n     private boolean automaticAuthentication = true;\n+    private String redirectURL;\n \n     /**\n      * Sets the port for the local HTTP server, for which {@code http://localhost:{port}} must be\n      * registered as a valid reply URL on the application.\n      *\n+     * @deprecated Configure the redirectURL as {@code http://localhost:{port}} via\n+     * {@link InteractiveBrowserCredentialBuilder#redirectUrl(String)} instead.\n+     *\n      * @param port the port on which the credential will listen for the browser authentication result\n      * @return the InteractiveBrowserCredentialBuilder itself\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NDE5MQ==", "bodyText": "nit: use camelcase redirectUrl", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482364191", "createdAt": "2020-09-02T19:47:22Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NzcwMQ==", "bodyText": "Can redirectUrl be null? Should we have a null check here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482367701", "createdAt": "2020-09-02T19:50:01Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {\n+        this.redirectURL = redirectURL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjY0MjA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481264208", "createdAt": "2020-09-02T20:12:21Z", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjg3MDU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481287058", "createdAt": "2020-09-02T20:46:41Z", "commit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0Njo0MVrOHMGAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0Njo0MVrOHMGAdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0MzM4MQ==", "bodyText": "What if the redirectUrl contains a port already? Should we throw here is both port and redirectUrl are specified?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482443381", "createdAt": "2020-09-02T20:46:41Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);\n             }});\n-        return new InteractiveBrowserCredential(clientId, tenantId, port, automaticAuthentication,\n+        return new InteractiveBrowserCredential(clientId, tenantId, port, redirectURL, automaticAuthentication,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7484c4465a63275106961500999b588fd5001db", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d7484c4465a63275106961500999b588fd5001db", "committedDate": "2020-09-02T22:30:31Z", "message": "address feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMzgwODgx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#pullrequestreview-481380881", "createdAt": "2020-09-02T23:29:37Z", "commit": {"oid": "d7484c4465a63275106961500999b588fd5001db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d68f3d7a605503b41011aa33a697996a2657a3e", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d68f3d7a605503b41011aa33a697996a2657a3e", "committedDate": "2020-09-11T16:20:53Z", "message": "update changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8308d05cdb1d770a02ad9792e369676dc8e140e", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b8308d05cdb1d770a02ad9792e369676dc8e140e", "committedDate": "2020-09-11T16:32:46Z", "message": "resolve conflict"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4965, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}