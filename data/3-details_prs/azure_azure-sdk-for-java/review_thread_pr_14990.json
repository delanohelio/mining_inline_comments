{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDg4ODAy", "number": 14990, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTo0MToyOVrOEh1CCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MjoyOVrOEh5Tag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTA3MzM2OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/handler/ReceiveLinkHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOTo0MToyOVrOHPXNYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOToxODoxMVrOHPqu_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MDk0Ng==", "bodyText": "Delete empty class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r485870946", "createdAt": "2020-09-09T19:41:29Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/handler/ReceiveLinkHandlerTest.java", "diffHunk": "@@ -0,0 +1,10 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.amqp.implementation.handler;\n+\n+/**\n+ * Tests for {@link ReceiveLinkHandler}.\n+ */\n+class ReceiveLinkHandlerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091b1f3eaa4b20238475c75aed79c5693c4b59b9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE5MDg0NA==", "bodyText": "Oh yes. This should have tests in it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r486190844", "createdAt": "2020-09-10T09:18:11Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/handler/ReceiveLinkHandlerTest.java", "diffHunk": "@@ -0,0 +1,10 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.amqp.implementation.handler;\n+\n+/**\n+ * Tests for {@link ReceiveLinkHandler}.\n+ */\n+class ReceiveLinkHandlerTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MDk0Ng=="}, "originalCommit": {"oid": "091b1f3eaa4b20238475c75aed79c5693c4b59b9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTc1OTMyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNToyMlrOHPdwtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNToyMlrOHPdwtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3ODI5NQ==", "bodyText": "Just curious if we need to cache the last event?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r485978295", "createdAt": "2020-09-09T23:35:22Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorConnection.java", "diffHunk": "@@ -106,23 +107,12 @@ public ReactorConnection(String connectionId, ConnectionOptions connectionOption\n         this.connectionMono = Mono.fromCallable(this::getOrCreateConnection)\n             .doOnSubscribe(c -> hasConnection.set(true));\n \n-        this.subscriptions = Disposables.composite(\n-            this.handler.getEndpointStates().subscribe(\n-                state -> {\n-                    logger.verbose(\"connectionId[{}]: Connection state: {}\", connectionId, state);\n-                    endpointStatesSink.next(AmqpEndpointStateUtil.getConnectionState(state));\n-                }, error -> {\n-                    logger.error(\"connectionId[{}] Error occurred in connection endpoint.\", connectionId, error);\n-                    endpointStatesSink.error(error);\n-                }, () -> {\n-                    endpointStatesSink.next(AmqpEndpointState.CLOSED);\n-                    endpointStatesSink.complete();\n-                }),\n-\n-            this.handler.getErrors().subscribe(error -> {\n-                logger.error(\"connectionId[{}] Error occurred in connection handler.\", connectionId, error);\n-                endpointStatesSink.error(error);\n-            }));\n+        this.endpointStates = this.handler.getEndpointStates()\n+            .takeUntilOther(shutdownSignals)\n+            .map(state -> {\n+                logger.verbose(\"connectionId[{}]: State {}\", connectionId, state);\n+                return AmqpEndpointStateUtil.getConnectionState(state);\n+            }).subscribeWith(ReplayProcessor.cacheLastOrDefault(AmqpEndpointState.UNINITIALIZED));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b13b380fae5db73af433724a773d59c19418a3"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTc2MzI3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorReceiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzozNVrOHPdzBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzozNVrOHPdzBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3ODg4NQ==", "bodyText": "Nice! Although, I haven't observed duplicates here generally but this is a nice improvement!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r485978885", "createdAt": "2020-09-09T23:37:35Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorReceiver.java", "diffHunk": "@@ -69,43 +67,28 @@ protected ReactorReceiver(String entityPath, Receiver receiver, ReceiveLinkHandl\n                 }\n             })\n             .subscribeWith(EmitterProcessor.create());\n-\n-        this.subscriptions = Disposables.composite(\n-            this.handler.getEndpointStates().subscribe(\n-                state -> {\n-                    logger.verbose(\"Connection state: {}\", state);\n-                    endpointStateSink.next(AmqpEndpointStateUtil.getConnectionState(state));\n-                }, error -> {\n-                    logger.error(\"connectionId[{}] linkName[{}] entityPath[{}] Error occurred in connection.\",\n-                        handler.getConnectionId(), receiver.getName(), entityPath, error);\n-                    endpointStateSink.error(error);\n-                    dispose();\n-                }, () -> {\n-                    endpointStateSink.next(AmqpEndpointState.CLOSED);\n-                    dispose();\n-                }),\n-\n-            this.handler.getErrors().subscribe(error -> {\n-                logger.error(\"connectionId[{}] linkName[{}] entityPath[{}] Error occurred in link.\",\n-                    handler.getConnectionId(), receiver.getName(), entityPath, error);\n-                endpointStateSink.error(error);\n-                dispose();\n-            }),\n-\n-            this.tokenManager.getAuthorizationResults().subscribe(\n-                response -> {\n-                    logger.verbose(\"Token refreshed: {}\", response);\n-                    hasAuthorized.set(true);\n-                }, error -> {\n-                    logger.info(\"connectionId[{}], path[{}], linkName[{}] - tokenRenewalFailure[{}]\",\n-                        handler.getConnectionId(), this.entityPath, getLinkName(), error.getMessage());\n-                    hasAuthorized.set(false);\n-                }, () -> hasAuthorized.set(false)));\n+        this.endpointStates = this.handler.getEndpointStates()\n+            .map(state -> {\n+                logger.verbose(\"connectionId[{}], path[{}], linkName[{}]: State {}\", handler.getConnectionId(),\n+                    entityPath, getLinkName(), state);\n+                return AmqpEndpointStateUtil.getConnectionState(state);\n+            })\n+            .subscribeWith(ReplayProcessor.cacheLastOrDefault(AmqpEndpointState.UNINITIALIZED));\n+\n+        this.subscriptions = this.tokenManager.getAuthorizationResults().subscribe(\n+            response -> {\n+                logger.verbose(\"Token refreshed: {}\", response);\n+                hasAuthorized.set(true);\n+            }, error -> {\n+                logger.info(\"connectionId[{}], path[{}], linkName[{}] - tokenRenewalFailure[{}]\",\n+                    handler.getConnectionId(), this.entityPath, getLinkName(), error.getMessage());\n+                hasAuthorized.set(false);\n+            }, () -> hasAuthorized.set(false));\n     }\n \n     @Override\n     public Flux<AmqpEndpointState> getEndpointStates() {\n-        return endpointStates;\n+        return endpointStates.distinct();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b13b380fae5db73af433724a773d59c19418a3"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTc2OTE3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MDozNVrOHPd2cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOToyMToxNFrOHPq2Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3OTc2Mw==", "bodyText": "should this be private or protected? We already have a dispose() that's public and implements the interface method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r485979763", "createdAt": "2020-09-09T23:40:35Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSender.java", "diffHunk": "@@ -293,13 +283,35 @@ public boolean isDisposed() {\n \n     @Override\n     public void dispose() {\n+        dispose(null);\n+    }\n+\n+    /**\n+     * Disposes of the sender when an exception is encountered.\n+     *\n+     * @param errorCondition Error condition associated with close operation.\n+     */\n+    public void dispose(ErrorCondition errorCondition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b13b380fae5db73af433724a773d59c19418a3"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE5MjczOA==", "bodyText": "This dispose was if we had to close the connection because of an error. :/ I expected the dispose() to be used when it is closed normally. Let me update this to package-private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r486192738", "createdAt": "2020-09-10T09:21:14Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSender.java", "diffHunk": "@@ -293,13 +283,35 @@ public boolean isDisposed() {\n \n     @Override\n     public void dispose() {\n+        dispose(null);\n+    }\n+\n+    /**\n+     * Disposes of the sender when an exception is encountered.\n+     *\n+     * @param errorCondition Error condition associated with close operation.\n+     */\n+    public void dispose(ErrorCondition errorCondition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3OTc2Mw=="}, "originalCommit": {"oid": "99b13b380fae5db73af433724a773d59c19418a3"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTc3MzIyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/ReactorConnectionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MjoyOVrOHPd4rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MjoyOVrOHPd4rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4MDMzMw==", "bodyText": "Empty test can be removed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14990#discussion_r485980333", "createdAt": "2020-09-09T23:42:29Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/test/java/com/azure/core/amqp/implementation/ReactorConnectionTest.java", "diffHunk": "@@ -364,7 +362,7 @@ void cannotCreateResourcesOnFailure() {\n     }\n \n     @Test\n-    void cannotCreateSessionWhenDisposed() {\n+    void closesDownstreamLinks() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b13b380fae5db73af433724a773d59c19418a3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1148, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}