{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0ODY5MTcy", "number": 10313, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0ODoyN1rODzBnbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMToyM1rOD0Ru9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODMwNDQ3OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo0ODoyN1rOGHbB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTowOTo1NVrOGHdMQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzNjA2NQ==", "bodyText": "Let's aim to remove these on-off configurations from children POMs where possible.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410436065", "createdAt": "2020-04-17T19:48:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -105,6 +111,14 @@\n           <statelessTestsetReporter implementation=\"org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter\">\n             <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>\n           </statelessTestsetReporter>\n+          <properties>\n+            <configurationParameters>\n+              junit.jupiter.conditions.deactivate = *\n+              junit.jupiter.extensions.autodetection.enabled = true\n+              junit.jupiter.testinstance.lifecycle.default = per_class\n+              junit.jupiter.execution.parallel.enabled = true\n+            </configurationParameters>\n+          </properties>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6af28f7f99b26bc22ecf378732fcdbb050702da2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzODAzNA==", "bodyText": "Yes, ideally, this surefire plugin should not be in these modules. It should be configured only in parent.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410438034", "createdAt": "2020-04-17T19:52:31Z", "author": {"login": "srnagar"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -105,6 +111,14 @@\n           <statelessTestsetReporter implementation=\"org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter\">\n             <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>\n           </statelessTestsetReporter>\n+          <properties>\n+            <configurationParameters>\n+              junit.jupiter.conditions.deactivate = *\n+              junit.jupiter.extensions.autodetection.enabled = true\n+              junit.jupiter.testinstance.lifecycle.default = per_class\n+              junit.jupiter.execution.parallel.enabled = true\n+            </configurationParameters>\n+          </properties>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzNjA2NQ=="}, "originalCommit": {"oid": "6af28f7f99b26bc22ecf378732fcdbb050702da2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MTQ5MA==", "bodyText": "This was removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410471490", "createdAt": "2020-04-17T21:09:55Z", "author": {"login": "alzimmermsft"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -105,6 +111,14 @@\n           <statelessTestsetReporter implementation=\"org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter\">\n             <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>\n           </statelessTestsetReporter>\n+          <properties>\n+            <configurationParameters>\n+              junit.jupiter.conditions.deactivate = *\n+              junit.jupiter.extensions.autodetection.enabled = true\n+              junit.jupiter.testinstance.lifecycle.default = per_class\n+              junit.jupiter.execution.parallel.enabled = true\n+            </configurationParameters>\n+          </properties>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzNjA2NQ=="}, "originalCommit": {"oid": "6af28f7f99b26bc22ecf378732fcdbb050702da2"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODUyOTA3OnYy", "diffSide": "LEFT", "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMToxMjo0NFrOGHdQPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjozMzoxM1rOGIdU2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MjUwOA==", "bodyText": "Could you port the surefire extension change to check the display in both console and report?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410472508", "createdAt": "2020-04-17T21:12:44Z", "author": {"login": "sima-zhu"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -93,20 +93,11 @@\n       <version>1.0.4</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-test-watcher</artifactId>\n+      <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-test-watcher;dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c765dce7b10bdfeeddcf48fd0441876abc9f07"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3Mzk4MA==", "bodyText": "Is this what you were looking for in the console output?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410473980", "createdAt": "2020-04-17T21:16:19Z", "author": {"login": "alzimmermsft"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -93,20 +93,11 @@\n       <version>1.0.4</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-test-watcher</artifactId>\n+      <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-test-watcher;dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MjUwOA=="}, "originalCommit": {"oid": "34c765dce7b10bdfeeddcf48fd0441876abc9f07"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3NTA4NA==", "bodyText": "IDE is working always. Need to check the surefire report under target.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410475084", "createdAt": "2020-04-17T21:19:09Z", "author": {"login": "sima-zhu"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -93,20 +93,11 @@\n       <version>1.0.4</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-test-watcher</artifactId>\n+      <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-test-watcher;dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MjUwOA=="}, "originalCommit": {"oid": "34c765dce7b10bdfeeddcf48fd0441876abc9f07"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyMjI2NA==", "bodyText": "This still has surefire-reports in target.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411522264", "createdAt": "2020-04-20T16:33:13Z", "author": {"login": "alzimmermsft"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/pom.xml", "diffHunk": "@@ -93,20 +93,11 @@\n       <version>1.0.4</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-test-watcher</artifactId>\n+      <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-test-watcher;dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MjUwOA=="}, "originalCommit": {"oid": "34c765dce7b10bdfeeddcf48fd0441876abc9f07"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDc4OTc3OnYy", "diffSide": "RIGHT", "path": "eng/azure-test-watcher/src/main/java/com/azure/testing/package-info.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMDo1Nzo1OFrOGHuLjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjozMzoyMlrOGIdVUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTgzNw==", "bodyText": "nit: add new line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410749837", "createdAt": "2020-04-18T20:57:58Z", "author": {"login": "conniey"}, "path": "eng/azure-test-watcher/src/main/java/com/azure/testing/package-info.java", "diffHunk": "@@ -0,0 +1,7 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+/**\n+ * Package containing JUnit 5 testing extensions.\n+ */\n+package com.azure.testing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyMjM4NQ==", "bodyText": "Added", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411522385", "createdAt": "2020-04-20T16:33:22Z", "author": {"login": "alzimmermsft"}, "path": "eng/azure-test-watcher/src/main/java/com/azure/testing/package-info.java", "diffHunk": "@@ -0,0 +1,7 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+/**\n+ * Package containing JUnit 5 testing extensions.\n+ */\n+package com.azure.testing;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTgzNw=="}, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDc5MTA5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMDo1ODo1NlrOGHuMJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOToyMzoyNFrOGIj9jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTk5MA==", "bodyText": "Is there a reason this can't be lumped into azure-core-test? It's only used for tests. It'll give azure-core-test a reason to live.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r410749990", "createdAt": "2020-04-18T20:58:56Z", "author": {"login": "conniey"}, "path": "pom.xml", "diffHunk": "@@ -8,6 +8,7 @@\n   <packaging>pom</packaging>\n   <version>1.0.0</version><!-- Need not change for every release-->\n   <modules>\n+    <module>eng/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAzOTMxNA==", "bodyText": "Won't be usable in Azure Core due to circular dependencies.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411039314", "createdAt": "2020-04-20T01:28:46Z", "author": {"login": "alzimmermsft"}, "path": "pom.xml", "diffHunk": "@@ -8,6 +8,7 @@\n   <packaging>pom</packaging>\n   <version>1.0.0</version><!-- Need not change for every release-->\n   <modules>\n+    <module>eng/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTk5MA=="}, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2MjM1Nw==", "bodyText": "@alzimmermsft this should probably be in the common with perf-test-core and smoke-tests, instead of eng.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411362357", "createdAt": "2020-04-20T13:08:23Z", "author": {"login": "JimSuplizio"}, "path": "pom.xml", "diffHunk": "@@ -8,6 +8,7 @@\n   <packaging>pom</packaging>\n   <version>1.0.0</version><!-- Need not change for every release-->\n   <modules>\n+    <module>eng/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTk5MA=="}, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNTkwMw==", "bodyText": "Moving this into common makes sense to me, will move it in the next commit.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411505903", "createdAt": "2020-04-20T16:11:10Z", "author": {"login": "alzimmermsft"}, "path": "pom.xml", "diffHunk": "@@ -8,6 +8,7 @@\n   <packaging>pom</packaging>\n   <version>1.0.0</version><!-- Need not change for every release-->\n   <modules>\n+    <module>eng/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTk5MA=="}, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMDk4OA==", "bodyText": "Moved into common", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r411630988", "createdAt": "2020-04-20T19:23:24Z", "author": {"login": "alzimmermsft"}, "path": "pom.xml", "diffHunk": "@@ -8,6 +8,7 @@\n   <packaging>pom</packaging>\n   <version>1.0.0</version><!-- Need not change for every release-->\n   <modules>\n+    <module>eng/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0OTk5MA=="}, "originalCommit": {"oid": "f3701ff340ee43a0e8a4b9a2b18761f63bc226ed"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQwOTg2OnYy", "diffSide": "RIGHT", "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyNzo1MlrOGJIxdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo1NDo1OFrOGKDb5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNDEwMQ==", "bodyText": "nit: completed -> Completed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r412234101", "createdAt": "2020-04-21T14:27:52Z", "author": {"login": "conniey"}, "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.testing;\n+\n+import org.junit.jupiter.api.extension.AfterTestExecutionCallback;\n+import org.junit.jupiter.api.extension.BeforeTestExecutionCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+/**\n+ * JUnit 5 extension class which reports on testing running and simple metrics about the test such as run time.\n+ */\n+public class AzureTestWatcher implements BeforeTestExecutionCallback, AfterTestExecutionCallback {\n+\n+    @Override\n+    public void beforeTestExecution(ExtensionContext extensionContext) {\n+        String displayName = extensionContext.getDisplayName();\n+        getStore(extensionContext).put(extensionContext.getRequiredTestMethod(), System.currentTimeMillis());\n+\n+        String testName = \"\";\n+        String fullyQualifiedTestName = \"\";\n+        if (extensionContext.getTestMethod().isPresent()) {\n+            Method method = extensionContext.getTestMethod().get();\n+            testName = method.getName();\n+            fullyQualifiedTestName = method.getDeclaringClass().getName() + \".\" + testName;\n+        }\n+\n+        if (!Objects.equals(displayName, testName)) {\n+            System.out.printf(\"Starting test %s (%s), \", fullyQualifiedTestName, displayName);\n+        } else {\n+            System.out.printf(\"Starting test %s, \", fullyQualifiedTestName);\n+        }\n+    }\n+\n+    @Override\n+    public void afterTestExecution(ExtensionContext context) {\n+        Method testMethod = context.getRequiredTestMethod();\n+        long start = getStore(context).remove(testMethod, long.class);\n+        long duration = System.currentTimeMillis() - start;\n+\n+        System.out.printf(\"completed in %d ms.%n\", duration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5NTIzOQ==", "bodyText": "The idea was that this and the other print statement would form a single line.\nTest begins, console view:\nStarting test {qualified name} ({display name})\nTest completes, console view:\nStarting test {qualified name} ({display name}), completed in {millis} ms.{newline}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r413195239", "createdAt": "2020-04-22T17:54:58Z", "author": {"login": "alzimmermsft"}, "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.testing;\n+\n+import org.junit.jupiter.api.extension.AfterTestExecutionCallback;\n+import org.junit.jupiter.api.extension.BeforeTestExecutionCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+/**\n+ * JUnit 5 extension class which reports on testing running and simple metrics about the test such as run time.\n+ */\n+public class AzureTestWatcher implements BeforeTestExecutionCallback, AfterTestExecutionCallback {\n+\n+    @Override\n+    public void beforeTestExecution(ExtensionContext extensionContext) {\n+        String displayName = extensionContext.getDisplayName();\n+        getStore(extensionContext).put(extensionContext.getRequiredTestMethod(), System.currentTimeMillis());\n+\n+        String testName = \"\";\n+        String fullyQualifiedTestName = \"\";\n+        if (extensionContext.getTestMethod().isPresent()) {\n+            Method method = extensionContext.getTestMethod().get();\n+            testName = method.getName();\n+            fullyQualifiedTestName = method.getDeclaringClass().getName() + \".\" + testName;\n+        }\n+\n+        if (!Objects.equals(displayName, testName)) {\n+            System.out.printf(\"Starting test %s (%s), \", fullyQualifiedTestName, displayName);\n+        } else {\n+            System.out.printf(\"Starting test %s, \", fullyQualifiedTestName);\n+        }\n+    }\n+\n+    @Override\n+    public void afterTestExecution(ExtensionContext context) {\n+        Method testMethod = context.getRequiredTestMethod();\n+        long start = getStore(context).remove(testMethod, long.class);\n+        long duration = System.currentTimeMillis() - start;\n+\n+        System.out.printf(\"completed in %d ms.%n\", duration);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNDEwMQ=="}, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQxNjA5OnYy", "diffSide": "RIGHT", "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyODo1MFrOGJI1EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyODo1MFrOGJI1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNTAyNA==", "bodyText": "Do you need a %n for these too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r412235024", "createdAt": "2020-04-21T14:28:50Z", "author": {"login": "conniey"}, "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.testing;\n+\n+import org.junit.jupiter.api.extension.AfterTestExecutionCallback;\n+import org.junit.jupiter.api.extension.BeforeTestExecutionCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+/**\n+ * JUnit 5 extension class which reports on testing running and simple metrics about the test such as run time.\n+ */\n+public class AzureTestWatcher implements BeforeTestExecutionCallback, AfterTestExecutionCallback {\n+\n+    @Override\n+    public void beforeTestExecution(ExtensionContext extensionContext) {\n+        String displayName = extensionContext.getDisplayName();\n+        getStore(extensionContext).put(extensionContext.getRequiredTestMethod(), System.currentTimeMillis());\n+\n+        String testName = \"\";\n+        String fullyQualifiedTestName = \"\";\n+        if (extensionContext.getTestMethod().isPresent()) {\n+            Method method = extensionContext.getTestMethod().get();\n+            testName = method.getName();\n+            fullyQualifiedTestName = method.getDeclaringClass().getName() + \".\" + testName;\n+        }\n+\n+        if (!Objects.equals(displayName, testName)) {\n+            System.out.printf(\"Starting test %s (%s), \", fullyQualifiedTestName, displayName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQyMDQ0OnYy", "diffSide": "RIGHT", "path": "common/azure-test-watcher/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoyOTozOFrOGJI35Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo1NTozN1rOGKDd6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNTc0OQ==", "bodyText": "Should this line have that x-version-update metadata?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r412235749", "createdAt": "2020-04-21T14:29:38Z", "author": {"login": "conniey"}, "path": "common/azure-test-watcher/pom.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-test-watcher</artifactId>\n+  <version>1.0.0-beta.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5NTc1NQ==", "bodyText": "This won't be managed by the versioning script, it should be treated the same as the code-quality-reports and jacoco projects.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r413195755", "createdAt": "2020-04-22T17:55:37Z", "author": {"login": "alzimmermsft"}, "path": "common/azure-test-watcher/pom.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-test-watcher</artifactId>\n+  <version>1.0.0-beta.1</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNTc0OQ=="}, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQyMjY3OnYy", "diffSide": "RIGHT", "path": "sdk/parents/azure-client-sdk-parent/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDowNVrOGJI5Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo1OTo1MFrOGKDplA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjExOQ==", "bodyText": "nit: alphabetise", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r412236119", "createdAt": "2020-04-21T14:30:05Z", "author": {"login": "conniey"}, "path": "sdk/parents/azure-client-sdk-parent/pom.xml", "diffHunk": "@@ -1458,6 +1464,7 @@\n \n   <modules>\n     <module>../../../common/perf-test-core</module>\n+    <module>../../../common/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5ODc0MA==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r413198740", "createdAt": "2020-04-22T17:59:50Z", "author": {"login": "alzimmermsft"}, "path": "sdk/parents/azure-client-sdk-parent/pom.xml", "diffHunk": "@@ -1458,6 +1464,7 @@\n \n   <modules>\n     <module>../../../common/perf-test-core</module>\n+    <module>../../../common/azure-test-watcher</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjExOQ=="}, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQzMDkzOnYy", "diffSide": "RIGHT", "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMToyNFrOGJI-Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzo1Njo1MVrOGKDhfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNzMyNg==", "bodyText": "this could be a static method because it doesn't rely on any state from its parent class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r412237326", "createdAt": "2020-04-21T14:31:24Z", "author": {"login": "conniey"}, "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.testing;\n+\n+import org.junit.jupiter.api.extension.AfterTestExecutionCallback;\n+import org.junit.jupiter.api.extension.BeforeTestExecutionCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+/**\n+ * JUnit 5 extension class which reports on testing running and simple metrics about the test such as run time.\n+ */\n+public class AzureTestWatcher implements BeforeTestExecutionCallback, AfterTestExecutionCallback {\n+\n+    @Override\n+    public void beforeTestExecution(ExtensionContext extensionContext) {\n+        String displayName = extensionContext.getDisplayName();\n+        getStore(extensionContext).put(extensionContext.getRequiredTestMethod(), System.currentTimeMillis());\n+\n+        String testName = \"\";\n+        String fullyQualifiedTestName = \"\";\n+        if (extensionContext.getTestMethod().isPresent()) {\n+            Method method = extensionContext.getTestMethod().get();\n+            testName = method.getName();\n+            fullyQualifiedTestName = method.getDeclaringClass().getName() + \".\" + testName;\n+        }\n+\n+        if (!Objects.equals(displayName, testName)) {\n+            System.out.printf(\"Starting test %s (%s), \", fullyQualifiedTestName, displayName);\n+        } else {\n+            System.out.printf(\"Starting test %s, \", fullyQualifiedTestName);\n+        }\n+    }\n+\n+    @Override\n+    public void afterTestExecution(ExtensionContext context) {\n+        Method testMethod = context.getRequiredTestMethod();\n+        long start = getStore(context).remove(testMethod, long.class);\n+        long duration = System.currentTimeMillis() - start;\n+\n+        System.out.printf(\"completed in %d ms.%n\", duration);\n+    }\n+\n+    private ExtensionContext.Store getStore(ExtensionContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5NjY2OQ==", "bodyText": "Good point, will replace getClass() with AzureTestWatcher.class and make this method static.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10313#discussion_r413196669", "createdAt": "2020-04-22T17:56:51Z", "author": {"login": "alzimmermsft"}, "path": "common/azure-test-watcher/src/main/java/com/azure/testing/AzureTestWatcher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.testing;\n+\n+import org.junit.jupiter.api.extension.AfterTestExecutionCallback;\n+import org.junit.jupiter.api.extension.BeforeTestExecutionCallback;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+\n+import java.lang.reflect.Method;\n+import java.util.Objects;\n+\n+/**\n+ * JUnit 5 extension class which reports on testing running and simple metrics about the test such as run time.\n+ */\n+public class AzureTestWatcher implements BeforeTestExecutionCallback, AfterTestExecutionCallback {\n+\n+    @Override\n+    public void beforeTestExecution(ExtensionContext extensionContext) {\n+        String displayName = extensionContext.getDisplayName();\n+        getStore(extensionContext).put(extensionContext.getRequiredTestMethod(), System.currentTimeMillis());\n+\n+        String testName = \"\";\n+        String fullyQualifiedTestName = \"\";\n+        if (extensionContext.getTestMethod().isPresent()) {\n+            Method method = extensionContext.getTestMethod().get();\n+            testName = method.getName();\n+            fullyQualifiedTestName = method.getDeclaringClass().getName() + \".\" + testName;\n+        }\n+\n+        if (!Objects.equals(displayName, testName)) {\n+            System.out.printf(\"Starting test %s (%s), \", fullyQualifiedTestName, displayName);\n+        } else {\n+            System.out.printf(\"Starting test %s, \", fullyQualifiedTestName);\n+        }\n+    }\n+\n+    @Override\n+    public void afterTestExecution(ExtensionContext context) {\n+        Method testMethod = context.getRequiredTestMethod();\n+        long start = getStore(context).remove(testMethod, long.class);\n+        long duration = System.currentTimeMillis() - start;\n+\n+        System.out.printf(\"completed in %d ms.%n\", duration);\n+    }\n+\n+    private ExtensionContext.Store getStore(ExtensionContext context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNzMyNg=="}, "originalCommit": {"oid": "debbbcae970e8d845fa977848bed040ca3a8917e"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1823, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}