{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzM5ODk1", "number": 18182, "title": "FixForEmptyStoreResponseStatisticsList ", "bodyText": "Fix for #18126\nRootcause:\nCurrently we do verifyCanContinueOnException when creating storeResult, for PartitionKeyRangeGoneException, PartitionKeyRangeIsSplittingException, PartitionIsMigratingException we throw the exception before record it.\nFix:\nFirst record the response, then do verifyCanContinueOnException\nBefore change: \t\"responseStatisticsList\": [],\nAfter change:\n\"responseStatisticsList\": [{\n\"storeResult\": {\n\"storePhysicalAddress\": \"rntbd://cdb-ms-prod-westus2-fd28.documents.azure.com:14120/apps/436c3df8-cdfa-42b7-8f4c-0488f02160c6/services/fbfedf76-fde1-4642-b2bb-d15100160538/partitions/a6039e37-1a27-4d83-8345-de02217c84c0/replicas/132524124018886985s/\",\n\"lsn\": 0,\n\"globalCommittedLsn\": -1,\n\"partitionKeyRangeId\": null,\n\"isValid\": false,\n\"statusCode\": 410,\n\"subStatusCode\": 1007,\n\"isGone\": true,\n\"isNotFound\": false,\n\"isInvalidPartition\": false,\n\"requestCharge\": 0.0,\n\"itemLSN\": -1,\n\"sessionToken\": null,\n\"exception\": \"The requested resource is no longer available at the server.\",\n\"transportRequestTimeline\": [{\n\"eventName\": \"created\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.400859900Z\",\n\"durationInMicroSec\": 49028\n}, {\n\"eventName\": \"queued\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.449888500Z\",\n\"durationInMicroSec\": 0\n}, {\n\"eventName\": \"channelAcquisitionStarted\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.449888500Z\",\n\"durationInMicroSec\": 274977\n}, {\n\"eventName\": \"pipelined\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.724866Z\",\n\"durationInMicroSec\": 113352\n}, {\n\"eventName\": \"transitTime\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.838218800Z\",\n\"durationInMicroSec\": 14998\n}, {\n\"eventName\": \"received\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.853217200Z\",\n\"durationInMicroSec\": 32984\n}, {\n\"eventName\": \"completed\",\n\"startTimeUTC\": \"2020-12-16T19:52:03.886201400Z\",\n\"durationInMicroSec\": 2028\n},\n...\n]", "createdAt": "2020-12-16T17:53:25Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182", "merged": true, "mergeCommit": {"oid": "7f575960cfdd0d903d11af05ad75e9410d73f0f8"}, "closed": true, "closedAt": "2021-01-11T19:26:31Z", "author": {"login": "xinlian12"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmyngrAH2gAyNTQxMzM5ODk1OjYzYzQ3ZjBlYTdjNGI5Y2VjMGMxMGY3NTE1ZmU4ZGRmNmViMTRjODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtijaogH2gAyNTQxMzM5ODk1OmFjNTI4MWYxYzY4ODhhOGIwZmI2M2M0NGJhM2ZjYjFlODhiMmY1NTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63c47f0ea7c4b9cec0c10f7515fe8ddf6eb14c89", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/63c47f0ea7c4b9cec0c10f7515fe8ddf6eb14c89", "committedDate": "2020-12-16T17:44:46Z", "message": "fix for empty store response statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41f81238f9f7925cdc452b694825be3380ce63b9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/41f81238f9f7925cdc452b694825be3380ce63b9", "committedDate": "2020-12-16T17:53:03Z", "message": "clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "181b1174411889178043328895a8663934cb066e", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/181b1174411889178043328895a8663934cb066e", "committedDate": "2020-12-16T18:35:43Z", "message": "resolve compilation failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDE4NzM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-554018734", "createdAt": "2020-12-16T19:33:38Z", "commit": {"oid": "181b1174411889178043328895a8663934cb066e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTozMzozOVrOIHVyJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTozMzozOVrOIHVyJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU2Nzg0NA==", "bodyText": "nit: same line", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#discussion_r544567844", "createdAt": "2020-12-16T19:33:39Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -656,6 +649,33 @@ private ReadReplicaResult createReadReplicaResult(List<StoreResult> responseResu\n         return task;\n     }\n \n+    StoreResult createAndRecordStoreResult(\n+        RxDocumentServiceRequest request,\n+        StoreResponse storeResponse,\n+        Exception responseException,\n+        boolean requiresValidLsn,\n+        boolean useLocalLSNBasedHeaders,\n+        Uri storePhysicalAddress) {\n+\n+        StoreResult storeResult = this.createStoreResult(storeResponse, responseException, requiresValidLsn, useLocalLSNBasedHeaders, storePhysicalAddress);\n+\n+        try {\n+            BridgeInternal.recordResponse(request.requestContext.cosmosDiagnostics, request, storeResult);\n+            if (request.requestContext.requestChargeTracker != null) {\n+                request.requestContext.requestChargeTracker.addCharge(storeResult.requestCharge);\n+            }\n+        }\n+        catch (Exception e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181b1174411889178043328895a8663934cb066e"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f03f046474350360aab314084ef88ce668a0cec3", "committedDate": "2020-12-16T21:38:08Z", "message": "clean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTEwMTUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-554110150", "createdAt": "2020-12-16T21:45:54Z", "commit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NTo1NFrOIHahUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NTo1NFrOIHahUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NTQ1Ng==", "bodyText": "There is one problem observed if throw exception here: based on the current logic, we may do not record the response from other replicas:\nList<Flux> storeResult = readStoreTasks\n.stream()\n.map(item -> toStoreResult(entity, item, readMode, requiresValidLsn))\n.collect(Collectors.toList());\nFlux allStoreResults = Flux.merge(storeResult);\nreturn allStoreResults.collectList().onErrorResume(e -> {\nTwo solutions can think of now:\n\ndo not do verifyCanContinueOnException check when create and record store results, add the logic after get all store results\nInstead of Flux.merge, change to Flux.mergeDelayError", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#discussion_r544645456", "createdAt": "2020-12-16T21:45:54Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -656,6 +649,32 @@ private ReadReplicaResult createReadReplicaResult(List<StoreResult> responseResu\n         return task;\n     }\n \n+    StoreResult createAndRecordStoreResult(\n+        RxDocumentServiceRequest request,\n+        StoreResponse storeResponse,\n+        Exception responseException,\n+        boolean requiresValidLsn,\n+        boolean useLocalLSNBasedHeaders,\n+        Uri storePhysicalAddress) {\n+\n+        StoreResult storeResult = this.createStoreResult(storeResponse, responseException, requiresValidLsn, useLocalLSNBasedHeaders, storePhysicalAddress);\n+\n+        try {\n+            BridgeInternal.recordResponse(request.requestContext.cosmosDiagnostics, request, storeResult);\n+            if (request.requestContext.requestChargeTracker != null) {\n+                request.requestContext.requestChargeTracker.addCharge(storeResult.requestCharge);\n+            }\n+        } catch (Exception e){\n+            logger.error(\"Unexpected failure while recording response\", e);\n+        }\n+\n+        if (responseException !=null) {\n+            verifyCanContinueOnException(storeResult.getException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODQ1MTI4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-555845128", "createdAt": "2020-12-18T22:13:28Z", "commit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMjoxMzoyOFrOII0QJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMjoxNTo1NlrOII0Ttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExNTYyMA==", "bodyText": "why this null check ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#discussion_r546115620", "createdAt": "2020-12-18T22:13:28Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -849,6 +867,10 @@ private static int generateNextRandom(int maxValue) {\n     }\n \n     static void verifyCanContinueOnException(CosmosException ex) {\n+        if (ex == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExNjUzNA==", "bodyText": "if two replica reach the diagnostic capture block at same time then we will have two results ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#discussion_r546116534", "createdAt": "2020-12-18T22:15:56Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/directconnectivity/ConsistencyWriterTest.java", "diffHunk": "@@ -193,6 +205,53 @@ public void timeout2() throws Exception {\n         subscriber.assertError(RequestTimeoutException.class);\n     }\n \n+    @Test(groups = \"unit\", dataProvider = \"storeResponseArgProvider\")\n+    public void storeResponseRecordedOnException(Exception ex, StoreResponse storeResponse) {\n+        DiagnosticsClientContext clientContext = mockDiagnosticsClientContext();\n+        TransportClientWrapper transportClientWrapper;\n+\n+        if (ex != null) {\n+            transportClientWrapper = new TransportClientWrapper.Builder.ReplicaResponseBuilder\n+                .SequentialBuilder()\n+                .then(ex)\n+                .build();\n+        } else {\n+            transportClientWrapper = new TransportClientWrapper.Builder.ReplicaResponseBuilder\n+                .SequentialBuilder()\n+                .then(storeResponse)\n+                .build();\n+        }\n+\n+        Uri primaryUri = Uri.create(\"primary\");\n+        Uri secondaryUri1 = Uri.create(\"secondary1\");\n+        Uri secondaryUri2 = Uri.create(\"secondary2\");\n+        Uri secondaryUri3 = Uri.create(\"secondary3\");\n+\n+        AddressSelectorWrapper addressSelectorWrapper = AddressSelectorWrapper.Builder.Simple.create()\n+            .withPrimary(primaryUri)\n+            .withSecondary(ImmutableList.of(secondaryUri1, secondaryUri2, secondaryUri3))\n+            .build();\n+        sessionContainer = Mockito.mock(ISessionContainer.class);\n+        IAuthorizationTokenProvider authorizationTokenProvider = Mockito.mock(IAuthorizationTokenProvider.class);\n+        serviceConfigReader = Mockito.mock(GatewayServiceConfigurationReader.class);\n+\n+        consistencyWriter = new ConsistencyWriter(clientContext,\n+            addressSelectorWrapper.addressSelector,\n+            sessionContainer,\n+            transportClientWrapper.transportClient,\n+            authorizationTokenProvider,\n+            serviceConfigReader,\n+            false);\n+\n+        TimeoutHelper timeoutHelper = Mockito.mock(TimeoutHelper.class);\n+        RxDocumentServiceRequest dsr = mockDocumentServiceRequest(clientContext);\n+\n+        consistencyWriter.writeAsync(dsr, timeoutHelper, false).subscribe();\n+\n+        String cosmosDiagnostics = dsr.requestContext.cosmosDiagnostics.toString();\n+        assertThat(cosmosDiagnostics).containsOnlyOnce(\"storeResult\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODQ5MTM3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-555849137", "createdAt": "2020-12-18T22:23:21Z", "commit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODY5NTYz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-555869563", "createdAt": "2020-12-18T23:02:32Z", "commit": {"oid": "f03f046474350360aab314084ef88ce668a0cec3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4f2f1e8bbc1428d27b44ebb2a546054d9853e6", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e4f2f1e8bbc1428d27b44ebb2a546054d9853e6", "committedDate": "2020-12-18T23:14:01Z", "message": "resolve comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODc1MDQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18182#pullrequestreview-555875046", "createdAt": "2020-12-18T23:20:59Z", "commit": {"oid": "0e4f2f1e8bbc1428d27b44ebb2a546054d9853e6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72edcb8e4d746cda1dee242a63e4e36ee6a06e02", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/72edcb8e4d746cda1dee242a63e4e36ee6a06e02", "committedDate": "2021-01-06T16:51:55Z", "message": "fix failed conflictResolutionPolicyCRUD test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f6cf6b084910dc688b7e70a322367c96a037cd4", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1f6cf6b084910dc688b7e70a322367c96a037cd4", "committedDate": "2021-01-06T16:54:30Z", "message": "merge and resolve conflicts from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac5281f1c6888a8b0fb63c44ba3fcb1e88b2f557", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ac5281f1c6888a8b0fb63c44ba3fcb1e88b2f557", "committedDate": "2021-01-06T16:59:17Z", "message": "fix conflictResolutionPolicyCRUD test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1279, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}