{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzM4MzQx", "number": 10382, "title": "Blob tags", "bodyText": "", "createdAt": "2020-04-20T22:36:54Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382", "merged": true, "mergeCommit": {"oid": "409a94c8bacb032f49f3e9361991e99e43a41d61"}, "closed": true, "closedAt": "2020-05-26T21:37:56Z", "author": {"login": "rickle-msft"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVuFryAH2gAyNDA2MzM4MzQxOjBlYTRmNjM0NGQyMDViOTdlM2QxZmZiZWE5MzljYjUzN2FmODMxYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclLNVYAH2gAyNDA2MzM4MzQxOjYyN2NlZGQ4NzAyOTgxNGM5YmEwOTUyNDEwOGYzNzkyODRmY2MzYzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ea4f6344d205b97e3d1ffbea939cb537af831a7", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ea4f6344d205b97e3d1ffbea939cb537af831a7", "committedDate": "2020-04-08T20:40:20Z", "message": "Generated for tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "508873be6cee821ced2c41b2dd142392285e79a1", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/508873be6cee821ced2c41b2dd142392285e79a1", "committedDate": "2020-04-08T20:43:59Z", "message": "Really did it this time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6ed6b081c0f33b58dae741be3d91b680f6f7f2a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e6ed6b081c0f33b58dae741be3d91b680f6f7f2a", "committedDate": "2020-04-09T21:40:21Z", "message": "Fixed BlobItemProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "677679b9a823fc974c91ceba5fa23e087e5ae50a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/677679b9a823fc974c91ceba5fa23e087e5ae50a", "committedDate": "2020-04-09T21:48:05Z", "message": "Updated existing apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02f7f41c2d9a1972d6c176afd3c3612fc47294eb", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/02f7f41c2d9a1972d6c176afd3c3612fc47294eb", "committedDate": "2020-04-09T21:48:11Z", "message": "Merge branch 'blobTags' of github.com:rickle-msft/azure-sdk-for-java into blobTags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e4ad546409ecf9715362647e12273a7ff9a000", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d3e4ad546409ecf9715362647e12273a7ff9a000", "committedDate": "2020-04-14T18:12:53Z", "message": "Added all new apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a8c9c0393cbc05bab89691a0fb5a4b5e033d545", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a8c9c0393cbc05bab89691a0fb5a4b5e033d545", "committedDate": "2020-04-14T19:15:18Z", "message": "Removed contentLength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b57c3af27265a81ca561715fb921477c020d5676", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b57c3af27265a81ca561715fb921477c020d5676", "committedDate": "2020-04-14T20:44:14Z", "message": "Resolved build issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d11143c4eae6b9274f048ea9d9f2f1a3d3f68ed", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d11143c4eae6b9274f048ea9d9f2f1a3d3f68ed", "committedDate": "2020-04-14T21:25:32Z", "message": "Added javadocs to new methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99804695d8ec0cf4e24e48afef91f8bb40cfa66a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/99804695d8ec0cf4e24e48afef91f8bb40cfa66a", "committedDate": "2020-04-15T17:38:18Z", "message": "Added code snippets to all new apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37af33773ce4e86ca0a7bfe4eb2fcb80395ab888", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/37af33773ce4e86ca0a7bfe4eb2fcb80395ab888", "committedDate": "2020-04-15T23:31:03Z", "message": "Fixed up code snippets. Started on tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36226f73343b7f49486c0d17d7be437db3da408", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b36226f73343b7f49486c0d17d7be437db3da408", "committedDate": "2020-04-16T17:21:33Z", "message": "Fixed up serialization problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f8acc694ac50b0e87391b4d241491198cb1090", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/84f8acc694ac50b0e87391b4d241491198cb1090", "committedDate": "2020-04-20T17:23:05Z", "message": "Finished just about all tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beb124bc461664de474622bded5d38a4d233441f", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/beb124bc461664de474622bded5d38a4d233441f", "committedDate": "2020-04-20T20:33:13Z", "message": "Added test for tagCount on list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d836c579e8247404afbbd55e7acf7e81f9d9e9", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/88d836c579e8247404afbbd55e7acf7e81f9d9e9", "committedDate": "2020-04-20T21:27:07Z", "message": "Added recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd", "committedDate": "2020-04-20T22:31:03Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into blobTags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODYxMDQ4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396861048", "createdAt": "2020-04-20T22:38:02Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODowMlrOGIqg8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODowMlrOGIqg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczODM1Mw==", "bodyText": "Need to consider if this is a breaking change and possibly revert", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411738353", "createdAt": "2020-04-20T22:38:02Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/models/BlobFlatListSegment.java", "diffHunk": "@@ -21,14 +21,14 @@\n      * The blobItems property.\n      */\n     @JsonProperty(\"Blob\")\n-    private List<BlobItem> blobItems = new ArrayList<>();\n+    private List<BlobItemInternal> blobItems = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODYxMjIy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396861222", "createdAt": "2020-04-20T22:38:26Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODoyN1rOGIqhmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozODoyN1rOGIqhmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczODUyMw==", "bodyText": "Need to consider if this is a breaking change and possibly revert", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411738523", "createdAt": "2020-04-20T22:38:27Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/models/BlobHierarchyListSegment.java", "diffHunk": "@@ -57,7 +57,7 @@ public BlobHierarchyListSegment setBlobPrefixes(List<BlobPrefix> blobPrefixes) {\n      *\n      * @return the blobItems value.\n      */\n-    public List<BlobItem> getBlobItems() {\n+    public List<BlobItemInternal> getBlobItems() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODYxNzUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396861750", "createdAt": "2020-04-20T22:39:38Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozOTozOFrOGIqjqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjozOTozOFrOGIqjqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczOTA0OQ==", "bodyText": "Formatting?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411739049", "createdAt": "2020-04-20T22:39:38Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobAsyncClientBase.java", "diffHunk": "@@ -1226,8 +1317,9 @@ private void downloadToFileCleanup(AsynchronousFileChannel channel, String fileP\n                     hd.getCopyCompletionTime(), hd.getCopyStatusDescription(), hd.isServerEncrypted(),\n                     hd.isIncrementalCopy(), hd.getDestinationSnapshot(), AccessTier.fromString(hd.getAccessTier()),\n                     hd.isAccessTierInferred(), ArchiveStatus.fromString(hd.getArchiveStatus()),\n-                    hd.getEncryptionKeySha256(), hd.getAccessTierChangeTime(), hd.getMetadata(),\n-                    hd.getBlobCommittedBlockCount(), hd.getVersionId(), hd.isCurrentVersion());\n+                    hd.getEncryptionKeySha256(), hd.getEncryptionScope(), hd.getAccessTierChangeTime(),\n+                        hd.getMetadata(), hd.getBlobCommittedBlockCount(), hd.getVersionId(), hd.isCurrentVersion(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 248}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODYzNzY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396863764", "createdAt": "2020-04-20T22:44:21Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjo0NDoyMlrOGIqr2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzowNDoxNFrOGIrMcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0MTE0NQ==", "bodyText": "if possible please use Collections.emptyMap(). It's immutable singleton so less allocation.\n(Same could be applied to metadata I guess.)\n(And other places we do that for metadata and tags).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411741145", "createdAt": "2020-04-20T22:44:22Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -241,11 +241,55 @@\n     public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data,\n         ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String, String> metadata,\n         AccessTier tier, BlobRequestConditions requestConditions) {\n+        return this.uploadWithResponse(data, parallelTransferOptions, headers, metadata, null, tier, requestConditions);\n+    }\n+\n+    /**\n+     * Creates a new block blob, or updates the content of an existing block blob. Updating an existing block blob\n+     * overwrites any existing metadata on the blob. Partial updates are not supported with this method; the content of\n+     * the existing blob is overwritten with the new content. To perform a partial update of a block blob's, use {@link\n+     * BlockBlobAsyncClient#stageBlock(String, Flux, long) stageBlock} and\n+     * {@link BlockBlobAsyncClient#commitBlockList(List)}, which this method uses internally. For more information,\n+     * see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block\">Azure\n+     * Docs for Put Block</a> and the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block-list\">Azure\n+     * Docs for Put Block List</a>.\n+     * <p>\n+     * The data passed need not support multiple subscriptions/be replayable as is required in other upload methods when\n+     * retries are enabled, and the length of the data need not be known in advance. Therefore, this method should\n+     * support uploading any arbitrary data source, including network streams. This behavior is possible because this\n+     * method will perform some internal buffering as configured by the blockSize and numBuffers parameters, so while\n+     * this method may offer additional convenience, it will not be as performant as other options, which should be\n+     * preferred when possible.\n+     * <p>\n+     * Typically, the greater the number of buffers used, the greater the possible parallelism when transferring the\n+     * data. Larger buffers means we will have to stage fewer blocks and therefore require fewer IO operations. The\n+     * trade-offs between these values are context-dependent, so some experimentation may be required to optimize inputs\n+     * for a given scenario.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#Flux-ParallelTransferOptions-BlobHttpHeaders-Map-AccessTier-BlobRequestConditions}\n+     *\n+     * @param data The data to write to the blob. Unlike other upload methods, this method does not require that the\n+     * {@code Flux} be replayable. In other words, it does not have to support multiple subscribers and is not expected\n+     * to produce the same values across subscriptions.\n+     * @param parallelTransferOptions {@link ParallelTransferOptions} used to configure buffered uploading.\n+     * @param headers {@link BlobHttpHeaders}\n+     * @param metadata Metadata to associate with the blob.\n+     * @param tags Tags to associate with the destination blob.\n+     * @param tier {@link AccessTier} for the destination blob.\n+     * @param requestConditions {@link BlobRequestConditions}\n+     * @return A reactive response containing the information of the uploaded block blob.\n+     */\n+    public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data,\n+        ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String, String> metadata,\n+        Map<String, String> tags, AccessTier tier, BlobRequestConditions requestConditions) {\n         try {\n             final Map<String, String> metadataFinal = metadata == null ? new HashMap<>() : metadata;\n+            final Map<String, String> tagsFinal = tags == null ? new HashMap<>() : tags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0MzI3NA==", "bodyText": "Collections.emptyList() would be better here (and other similar places)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411743274", "createdAt": "2020-04-20T22:49:12Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -778,7 +779,9 @@ public String getEncryptionScope() {\n                 .map(response -> {\n                     List<BlobItem> value = response.getValue().getSegment() == null\n                         ? new ArrayList<>(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0MzU4OQ==", "bodyText": "Yes.\nThis could have only two overloads findBlobsByTags(query) and findBlobsByTags(query,options)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411743589", "createdAt": "2020-04-20T22:50:01Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -329,6 +331,72 @@ public String getAccountUrl() {\n                 null, Context.NONE), timeout);\n     }\n \n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.filterBlobs#String}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query) {\n+        return this.findBlobsByTags(query, null, null);\n+    }\n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobAsyncServiceClient.filterBlobs#String-Integer}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @param maxResultsPerPage The maximum number of results to return in a given page.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query, Integer maxResultsPerPage) {\n+        try {\n+            return findBlobsByTags(query, maxResultsPerPage, null);\n+        } catch (RuntimeException ex) {\n+            return pagedFluxError(logger, ex);\n+        }\n+    }\n+\n+    // TODO: options instead of maxResults?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NDc0NQ==", "bodyText": "If you're doing that please remove TODO.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411744745", "createdAt": "2020-04-20T22:52:54Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceVersion.java", "diffHunk": "@@ -11,7 +11,7 @@\n public enum BlobServiceVersion implements ServiceVersion {\n     V2019_02_02(\"2019-02-02\"),\n     V2019_07_07(\"2019-07-07\"),\n-    V2019_12_12(\"2019-10-10\"); // TODO (gapra) : Change this to 12-12 once stage gets to 12-12\n+    V2019_12_12(\"2019-12-12\"); // TODO (gapra) : Change this to 12-12 once stage gets to 12-12", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NDk0NA==", "bodyText": "Do we want to introduce option bag here as well ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411744944", "createdAt": "2020-04-20T22:53:19Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceClient.java", "diffHunk": "@@ -193,6 +194,40 @@ public String getAccountUrl() {\n         return new PagedIterable<>(blobServiceAsyncClient.listBlobContainersWithOptionalTimeout(options, timeout));\n     }\n \n+    /**\n+     * Returns a lazy loaded list of blobs in this account whose tags match the query expression. The returned\n+     * {@link PagedIterable} can be consumed while new items are automatically retrieved as needed. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceClient.filterBlobs#String}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @return The list of blobs.\n+     */\n+    public PagedIterable<FilterBlobItem> findBlobsByTags(String query) {\n+        return this.findBlobsByTags(query, null, null);\n+    }\n+\n+    /**\n+     * Returns a lazy loaded list of blobs in this account whose tags match the query expression. The returned\n+     * {@link PagedIterable} can be consumed while new items are automatically retrieved as needed. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceClient.filterBlobs#String-Integer-Duration}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @param maxResultsPerPage The maximum number of results to return in a given page.\n+     * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n+     * @return The list of blobs.\n+     */\n+    public PagedIterable<FilterBlobItem> findBlobsByTags(String query, Integer maxResultsPerPage, Duration timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NzM1OQ==", "bodyText": "Should this work with versionID? It's already in stg73 branch.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411747359", "createdAt": "2020-04-20T22:59:00Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobAsyncClientBase.java", "diffHunk": "@@ -1348,6 +1440,108 @@ private void downloadToFileCleanup(AsynchronousFileChannel channel, String fileP\n             .map(response -> new SimpleResponse<>(response, null));\n     }\n \n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Map<String, String>> getTags() {\n+        return this.getTagsWithResponse().map(Response::getValue);\n+    }\n+\n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Response<Map<String, String>>> getTagsWithResponse() {\n+        try {\n+            return withContext(this::getTagsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Map<String, String>>> getTagsWithResponse(Context context) {\n+        return this.azureBlobStorage.blobs().getTagsWithRestResponseAsync(null, null, null, null, snapshot,\n+            null /* versionId */, context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 295}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NzUzMw==", "bodyText": "same here. however I'm not sure if you can update tags on version. AFAIK version should be immutable and be result of write operations.\nDoes updating/setting tags bump blob version? (updating metadata does that)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411747533", "createdAt": "2020-04-20T22:59:23Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobAsyncClientBase.java", "diffHunk": "@@ -1348,6 +1440,108 @@ private void downloadToFileCleanup(AsynchronousFileChannel channel, String fileP\n             .map(response -> new SimpleResponse<>(response, null));\n     }\n \n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Map<String, String>> getTags() {\n+        return this.getTagsWithResponse().map(Response::getValue);\n+    }\n+\n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Response<Map<String, String>>> getTagsWithResponse() {\n+        try {\n+            return withContext(this::getTagsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Map<String, String>>> getTagsWithResponse(Context context) {\n+        return this.azureBlobStorage.blobs().getTagsWithRestResponseAsync(null, null, null, null, snapshot,\n+            null /* versionId */, context)\n+            .map(response -> {\n+                Map<String, String> tags = new HashMap<>();\n+                for(BlobTag tag : response.getValue().getBlobTagSet()) {\n+                    tags.put(tag.getKey(), tag.getValue());\n+                }\n+                return new SimpleResponse<>(response, tags);\n+            });\n+    }\n+\n+    /**\n+     * Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be\n+     * preserved, they must be downloaded and included in the call to this method.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setTags#Map}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"ADD DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @param tags Tags to associate with the blob.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Void> setTags(Map<String, String> tags) {\n+        return this.setTagsWithResponse(tags).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be\n+     * preserved, they must be downloaded and included in the call to this method.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.setTagsWithResponse#Map}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"ADD DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @param tags Tags to associate with the blob.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Response<Void>> setTagsWithResponse(Map<String, String> tags) {\n+        try {\n+            return withContext(context -> setTagsWithResponse(tags, context));\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Void>> setTagsWithResponse(Map<String, String> tags, Context context) {\n+        List<BlobTag> tagList = null;\n+        if (tags != null) {\n+            tagList = new ArrayList<>();\n+            for (String tag : tags.keySet()) {\n+                tagList.add(new BlobTag().setKey(tag).setValue(tags.get(tag)));\n+            }\n+        }\n+        BlobTags t = new BlobTags().setBlobTagSet(tagList);\n+        return this.azureBlobStorage.blobs().setTagsWithRestResponseAsync(null, null, null, snapshot,\n+            null /* versionId */, null, null, null, t, context)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 355}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0OTQ4OA==", "bodyText": "Please use long as block size and don't use deprecated constructor below.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411749488", "createdAt": "2020-04-20T23:04:14Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/samples/java/com/azure/storage/blob/BlobClientJavaDocCodeSnippets.java", "diffHunk": "@@ -429,4 +429,34 @@ public void uploadFromFile2() throws IOException {\n         }\n         // END: com.azure.storage.blob.BlobClient.uploadFromFile#String-ParallelTransferOptions-BlobHttpHeaders-Map-AccessTier-BlobRequestConditions-Duration\n     }\n+\n+    /**\n+     * Code snippet for {@link BlobClient#uploadFromFile(String, ParallelTransferOptions, BlobHttpHeaders, Map, Map, AccessTier, BlobRequestConditions, Duration)}\n+     *\n+     * @throws IOException If an I/O error occurs\n+     */\n+    public void uploadFromFile3() throws IOException {\n+        // BEGIN: com.azure.storage.blob.BlobClient.uploadFromFile#String-ParallelTransferOptions-BlobHttpHeaders-Map-Map-AccessTier-BlobRequestConditions-Duration\n+        BlobHttpHeaders headers = new BlobHttpHeaders()\n+            .setContentMd5(\"data\".getBytes(StandardCharsets.UTF_8))\n+            .setContentLanguage(\"en-US\")\n+            .setContentType(\"binary\");\n+\n+        Map<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n+        Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n+        BlobRequestConditions requestConditions = new BlobRequestConditions()\n+            .setLeaseId(leaseId)\n+            .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n+        Integer blockSize = 100 * 1024 * 1024; // 100 MB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTAzNzYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396903761", "createdAt": "2020-04-21T00:13:31Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxMzozMlrOGIs43g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxMzozMlrOGIs43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc3NzI0Ng==", "bodyText": "Is this method empty now?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411777246", "createdAt": "2020-04-21T00:13:32Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobClient.java", "diffHunk": "@@ -270,8 +295,34 @@ public void uploadFromFile(String filePath, boolean overwrite) {\n     public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions,\n         BlobHttpHeaders headers, Map<String, String> metadata, AccessTier tier, BlobRequestConditions requestConditions,\n         Duration timeout) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA0NjEx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396904611", "createdAt": "2020-04-21T00:16:04Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxNjowNVrOGIs8Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxNjowNVrOGIs8Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc3ODExMA==", "bodyText": "rename code snippet", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411778110", "createdAt": "2020-04-21T00:16:05Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -329,6 +331,72 @@ public String getAccountUrl() {\n                 null, Context.NONE), timeout);\n     }\n \n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.filterBlobs#String}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf9d78ce51220c39a9c697350d12aba47a6b0149", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf9d78ce51220c39a9c697350d12aba47a6b0149", "committedDate": "2020-04-21T00:17:21Z", "message": "Minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA1MjY4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396905268", "createdAt": "2020-04-21T00:18:13Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxODoxM1rOGIs_AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoxODoxM1rOGIs_AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc3ODgxNg==", "bodyText": "could we return like BlobItem? What are the properties we want to expose on this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411778816", "createdAt": "2020-04-21T00:18:13Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -329,6 +331,72 @@ public String getAccountUrl() {\n                 null, Context.NONE), timeout);\n     }\n \n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.filterBlobs#String}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query) {\n+        return this.findBlobsByTags(query, null, null);\n+    }\n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobAsyncServiceClient.filterBlobs#String-Integer}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @param maxResultsPerPage The maximum number of results to return in a given page.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query, Integer maxResultsPerPage) {\n+        try {\n+            return findBlobsByTags(query, maxResultsPerPage, null);\n+        } catch (RuntimeException ex) {\n+            return pagedFluxError(logger, ex);\n+        }\n+    }\n+\n+    // TODO: options instead of maxResults?\n+    // TODO: Return type?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA3MjMy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396907232", "createdAt": "2020-04-21T00:24:28Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNDoyOFrOGItHAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNDoyOFrOGItHAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MDg2NQ==", "bodyText": "How do the tags get populated in swagger? Is it similar to metadata? Or completely different. Why do we need to do this set thing?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411780865", "createdAt": "2020-04-21T00:24:28Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobItem.java", "diffHunk": "@@ -15,6 +18,35 @@\n @JacksonXmlRootElement(localName = \"Blob\")\n @Fluent\n public final class BlobItem {\n+\n+\n+    public BlobItem() {\n+\n+    }\n+\n+    /**\n+     * Initializes a new blob item.\n+     *\n+     * @param blobItemInternal The internal structure from which to pull state.\n+     */\n+    public BlobItem(BlobItemInternal blobItemInternal) {\n+        this.name = blobItemInternal.getName();\n+        this.deleted = blobItemInternal.isDeleted();\n+        this.snapshot = blobItemInternal.getSnapshot();\n+        this.properties = blobItemInternal.getProperties();\n+        this.metadata = blobItemInternal.getMetadata();\n+        this.versionId = blobItemInternal.getVersionId();\n+        this.isCurrentVersion = blobItemInternal.isCurrentVersion();\n+        this.isPrefix = blobItemInternal.isPrefix();\n+\n+        this.tags = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA3NDk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396907497", "createdAt": "2020-04-21T00:25:20Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNToyMFrOGItIAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNToyMFrOGItIAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MTEyMw==", "bodyText": "If this is internal only, it can go in implementation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411781123", "createdAt": "2020-04-21T00:25:20Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobItemInternal.java", "diffHunk": "@@ -0,0 +1,251 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.storage.blob.models;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2OTA3ODc1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-396907875", "createdAt": "2020-04-21T00:26:35Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNjozNVrOGItJeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwMDoyNjozNVrOGItJeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc4MTQ5Nw==", "bodyText": "Do we want to consider deprecating the setters if we no longer want people to use them?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r411781497", "createdAt": "2020-04-21T00:26:35Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobItem.java", "diffHunk": "@@ -124,82 +154,91 @@ public BlobItem setSnapshot(String snapshot) {\n     }\n \n     /**\n-     * Get the versionId property: The versionId property.\n+     * Get the properties property: The properties property.\n      *\n-     * @return the versionId value.\n+     * @return the properties value.\n      */\n-    public String getVersionId() {\n-        return this.versionId;\n+    public BlobItemProperties getProperties() {\n+        return this.properties;\n     }\n \n     /**\n-     * Set the versionId property: The versionId property.\n+     * Set the properties property: The properties property.\n      *\n-     * @param versionId the versionId value to set.\n+     * @param properties the properties value to set.\n      * @return the BlobItem object itself.\n      */\n-    public BlobItem setVersionId(String versionId) {\n-        this.versionId = versionId;\n+    public BlobItem setProperties(BlobItemProperties properties) {\n+        this.properties = properties;\n         return this;\n     }\n \n     /**\n-     * Get the isCurrentVersion property: The isCurrentVersion property.\n+     * Get the metadata property: The metadata property.\n      *\n-     * @return the isCurrentVersion value.\n+     * @return the metadata value.\n      */\n-    public Boolean isCurrentVersion() {\n-        return this.isCurrentVersion;\n+    public Map<String, String> getMetadata() {\n+        return this.metadata;\n     }\n \n     /**\n-     * Set the isCurrentVersion property: The isCurrentVersion property.\n+     * Set the metadata property: The metadata property.\n      *\n-     * @param isCurrentVersion the isCurrentVersion value to set.\n+     * @param metadata the metadata value to set.\n      * @return the BlobItem object itself.\n      */\n-    public BlobItem setIsCurrentVersion(Boolean isCurrentVersion) {\n-        this.isCurrentVersion = isCurrentVersion;\n+    public BlobItem setMetadata(Map<String, String> metadata) {\n+        this.metadata = metadata;\n         return this;\n     }\n \n     /**\n-     * Get the properties property: The properties property.\n+     * Get the tags property: The tag property.\n      *\n-     * @return the properties value.\n+     * @return the metadata value.\n      */\n-    public BlobItemProperties getProperties() {\n-        return this.properties;\n+    public Map<String, String> getTags() {\n+        return this.tags;\n     }\n \n     /**\n-     * Set the properties property: The properties property.\n+     * Get the versionId property: The versionId property.\n      *\n-     * @param properties the properties value to set.\n+     * @return the versionId value.\n+     */\n+    public String getVersionId() {\n+        return this.versionId;\n+    }\n+\n+    /**\n+     * Set the versionId property: The versionId property.\n+     *\n+     * @param versionId the versionId value to set.\n      * @return the BlobItem object itself.\n      */\n-    public BlobItem setProperties(BlobItemProperties properties) {\n-        this.properties = properties;\n+    public BlobItem setVersionId(String versionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 175}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDU5NDQy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-397459442", "createdAt": "2020-04-21T16:01:40Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjowMTo0MlrOGJMoDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo0MDozMFrOGJbdNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5NzIzMA==", "bodyText": "Is this in a public API? If not should probably go in implementation", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r412297230", "createdAt": "2020-04-21T16:01:42Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobTagSet.java", "diffHunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.storage.blob.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.implementation.models.BlobTag;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;\n+import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * a collection of blob tags.\n+ */\n+@Fluent\n+public final class BlobTagSet {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNDUzNA==", "bodyText": "What are all the null params in this? are they valid to put on the max overload?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r412314534", "createdAt": "2020-04-21T16:40:11Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobAsyncClientBase.java", "diffHunk": "@@ -1348,6 +1440,108 @@ private void downloadToFileCleanup(AsynchronousFileChannel channel, String fileP\n             .map(response -> new SimpleResponse<>(response, null));\n     }\n \n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTags}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Map<String, String>> getTags() {\n+        return this.getTagsWithResponse().map(Response::getValue);\n+    }\n+\n+    /**\n+     * Returns the blob's tags.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobAsyncClientBase.getTagsWithResponse}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"GET DOCS LINK\">Azure Docs</a></p>\n+     *\n+     * @return A reactive response containing the blob's tags.\n+     */\n+    public Mono<Response<Map<String, String>>> getTagsWithResponse() {\n+        try {\n+            return withContext(this::getTagsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Map<String, String>>> getTagsWithResponse(Context context) {\n+        return this.azureBlobStorage.blobs().getTagsWithRestResponseAsync(null, null, null, null, snapshot,\n+            null /* versionId */, context)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0NzM1OQ=="}, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 295}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0MDIxMw==", "bodyText": "do we need a snippet for the max overloads too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r412540213", "createdAt": "2020-04-21T22:40:30Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/samples/java/com/azure/storage/blob/specialized/BlobAsyncClientBaseJavaDocCodeSnippets.java", "diffHunk": "@@ -198,6 +198,25 @@ public void setMetadataCodeSnippet() {\n         // END: com.azure.storage.blob.specialized.BlobAsyncClientBase.setMetadata#Map\n     }\n \n+    /**\n+     * Code snippets for {@link BlobAsyncClientBase#getTags()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MzQyNjA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-398342607", "createdAt": "2020-04-22T16:02:30Z", "commit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjowMjozMVrOGJ-TeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjoxNDo0OFrOGJ-32w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMTE2MQ==", "bodyText": "Would we want to reorder the arguments so tags is at the end to promote an easier upgrade path for current SDK users?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r413111161", "createdAt": "2020-04-22T16:02:31Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -241,11 +241,55 @@\n     public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data,\n         ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String, String> metadata,\n         AccessTier tier, BlobRequestConditions requestConditions) {\n+        return this.uploadWithResponse(data, parallelTransferOptions, headers, metadata, null, tier, requestConditions);\n+    }\n+\n+    /**\n+     * Creates a new block blob, or updates the content of an existing block blob. Updating an existing block blob\n+     * overwrites any existing metadata on the blob. Partial updates are not supported with this method; the content of\n+     * the existing blob is overwritten with the new content. To perform a partial update of a block blob's, use {@link\n+     * BlockBlobAsyncClient#stageBlock(String, Flux, long) stageBlock} and\n+     * {@link BlockBlobAsyncClient#commitBlockList(List)}, which this method uses internally. For more information,\n+     * see the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block\">Azure\n+     * Docs for Put Block</a> and the <a href=\"https://docs.microsoft.com/rest/api/storageservices/put-block-list\">Azure\n+     * Docs for Put Block List</a>.\n+     * <p>\n+     * The data passed need not support multiple subscriptions/be replayable as is required in other upload methods when\n+     * retries are enabled, and the length of the data need not be known in advance. Therefore, this method should\n+     * support uploading any arbitrary data source, including network streams. This behavior is possible because this\n+     * method will perform some internal buffering as configured by the blockSize and numBuffers parameters, so while\n+     * this method may offer additional convenience, it will not be as performant as other options, which should be\n+     * preferred when possible.\n+     * <p>\n+     * Typically, the greater the number of buffers used, the greater the possible parallelism when transferring the\n+     * data. Larger buffers means we will have to stage fewer blocks and therefore require fewer IO operations. The\n+     * trade-offs between these values are context-dependent, so some experimentation may be required to optimize inputs\n+     * for a given scenario.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient.uploadWithResponse#Flux-ParallelTransferOptions-BlobHttpHeaders-Map-AccessTier-BlobRequestConditions}\n+     *\n+     * @param data The data to write to the blob. Unlike other upload methods, this method does not require that the\n+     * {@code Flux} be replayable. In other words, it does not have to support multiple subscribers and is not expected\n+     * to produce the same values across subscriptions.\n+     * @param parallelTransferOptions {@link ParallelTransferOptions} used to configure buffered uploading.\n+     * @param headers {@link BlobHttpHeaders}\n+     * @param metadata Metadata to associate with the blob.\n+     * @param tags Tags to associate with the destination blob.\n+     * @param tier {@link AccessTier} for the destination blob.\n+     * @param requestConditions {@link BlobRequestConditions}\n+     * @return A reactive response containing the information of the uploaded block blob.\n+     */\n+    public Mono<Response<BlockBlobItem>> uploadWithResponse(Flux<ByteBuffer> data,\n+        ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String, String> metadata,\n+        Map<String, String> tags, AccessTier tier, BlobRequestConditions requestConditions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExOTY5Ng==", "bodyText": "Collection.singletonList?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r413119696", "createdAt": "2020-04-22T16:13:47Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -329,6 +331,72 @@ public String getAccountUrl() {\n                 null, Context.NONE), timeout);\n     }\n \n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.filterBlobs#String}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query) {\n+        return this.findBlobsByTags(query, null, null);\n+    }\n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobAsyncServiceClient.filterBlobs#String-Integer}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @param maxResultsPerPage The maximum number of results to return in a given page.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query, Integer maxResultsPerPage) {\n+        try {\n+            return findBlobsByTags(query, maxResultsPerPage, null);\n+        } catch (RuntimeException ex) {\n+            return pagedFluxError(logger, ex);\n+        }\n+    }\n+\n+    // TODO: options instead of maxResults?\n+    // TODO: Return type?\n+    PagedFlux<FilterBlobItem> findBlobsByTags(String query, Integer maxResults, Duration timeout) {\n+        throwOnAnonymousAccess();\n+        Function<String, Mono<PagedResponse<FilterBlobItem>>> func =\n+            marker -> findBlobsByTags(query, marker, maxResults, timeout)\n+                .map(response -> {\n+                    List<FilterBlobItem> value = response.getValue().getBlobs() == null\n+                        ? new ArrayList<>(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEyMDQ3NQ==", "bodyText": "Thoughts on adding some convenience method to build a query?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r413120475", "createdAt": "2020-04-22T16:14:48Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -329,6 +331,72 @@ public String getAccountUrl() {\n                 null, Context.NONE), timeout);\n     }\n \n+\n+    /**\n+     * Returns a reactive Publisher emitting the blobs in this account whose tags match the query expression. For more\n+     * information, including information on the query syntax, see the <a href=\"DOC LINK NEEDED\">Azure Docs</a>.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.filterBlobs#String}\n+     *\n+     * @param query Filters the results to return only blobs whose tags match the specified expression.\n+     * @return A reactive response emitting the list of blobs.\n+     */\n+    public PagedFlux<FilterBlobItem> findBlobsByTags(String query) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0edae6d2d0f746f94c0fffe5d6abf91c9838dd"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb53eb01abdd08ddadbe74f8fcc3717e04473306", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fb53eb01abdd08ddadbe74f8fcc3717e04473306", "committedDate": "2020-04-22T18:15:44Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8622c70fed9854c7258b5259a3b0758700628ac7", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8622c70fed9854c7258b5259a3b0758700628ac7", "committedDate": "2020-04-22T18:30:11Z", "message": "Removed unnecessary overload on BlobProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NjE3MjUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-398617251", "createdAt": "2020-04-22T21:53:33Z", "commit": {"oid": "8622c70fed9854c7258b5259a3b0758700628ac7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "251ce94490b09d22f8a1efd90137956e2f9f8a1c", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/251ce94490b09d22f8a1efd90137956e2f9f8a1c", "committedDate": "2020-04-22T23:38:44Z", "message": "CI fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c24b8f6227dc5214fd6edc3feac420d8478c08eb", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c24b8f6227dc5214fd6edc3feac420d8478c08eb", "committedDate": "2020-04-22T23:50:39Z", "message": "CI fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be4ae88d87cd9453405d2dc446937d3e69dc176", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2be4ae88d87cd9453405d2dc446937d3e69dc176", "committedDate": "2020-04-24T17:06:25Z", "message": "Refactored method signatures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de65545e7f9cba2e31660bebecd21ae216a0b12d", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/de65545e7f9cba2e31660bebecd21ae216a0b12d", "committedDate": "2020-04-27T19:17:17Z", "message": "CI updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edd58639e741d62fd22fbfbf3c70c9b172c24a22", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/edd58639e741d62fd22fbfbf3c70c9b172c24a22", "committedDate": "2020-04-27T19:13:57Z", "message": "CI updates"}, "afterCommit": {"oid": "de65545e7f9cba2e31660bebecd21ae216a0b12d", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/de65545e7f9cba2e31660bebecd21ae216a0b12d", "committedDate": "2020-04-27T19:17:17Z", "message": "CI updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "454580a64019d867da83a8ab6879979c0458b8de", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/454580a64019d867da83a8ab6879979c0458b8de", "committedDate": "2020-04-27T21:16:40Z", "message": "Added docs to new types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77268363e07c74cdd3b466da81524e0140599f71", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/77268363e07c74cdd3b466da81524e0140599f71", "committedDate": "2020-04-27T21:32:55Z", "message": "Fixed code snippet problems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e230a729b02e041917096b0b82cc39aee8477bbe", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e230a729b02e041917096b0b82cc39aee8477bbe", "committedDate": "2020-04-27T22:17:08Z", "message": "CI fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff", "committedDate": "2020-04-28T21:06:11Z", "message": "Hopefully fixed sas tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MzM5OTg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-405339988", "createdAt": "2020-05-04T20:55:22Z", "commit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo1NToyMlrOGQR08g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMTowNDo1N1rOGQSJcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyMjQ4Mg==", "bodyText": "Do we want to deprecate these max overload methods ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r419722482", "createdAt": "2020-05-04T20:55:22Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobClient.java", "diffHunk": "@@ -270,8 +297,27 @@ public void uploadFromFile(String filePath, boolean overwrite) {\n     public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyNDA1NQ==", "bodyText": "I think this is regression. Please check generator version you're using with https://github.com/Azure/azure-sdk-for-java/tree/master/sdk/storage/azure-storage-blob/swagger#generation .", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r419724055", "createdAt": "2020-05-04T20:58:20Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/AzureBlobStorageImpl.java", "diffHunk": "@@ -203,7 +203,7 @@ public BlockBlobsImpl blockBlobs() {\n      * Initializes an instance of AzureBlobStorage client.\n      */\n     public AzureBlobStorageImpl() {\n-        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy()).build());\n+        new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyNTU0Mw==", "bodyText": "Why this rename is required?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r419725543", "createdAt": "2020-05-04T21:00:53Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/models/CustomHierarchicalListingDeserializer.java", "diffHunk": "@@ -17,11 +16,11 @@\n \n     @Override\n     public BlobHierarchyListSegment deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n-        ArrayList<BlobItem> blobItems = new ArrayList<>();\n+        ArrayList<BlobItemInternal> blobItems = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcyNzczMQ==", "bodyText": "we should preserve this comment.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#discussion_r419727731", "createdAt": "2020-05-04T21:04:57Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobOutputStream.java", "diffHunk": "@@ -186,9 +204,9 @@ void commit() {\n \n         private BlockBlobOutputStream(final BlobAsyncClient client,\n             final ParallelTransferOptions parallelTransferOptions, final BlobHttpHeaders headers,\n-            final Map<String, String> metadata, final AccessTier tier, final BlobRequestConditions requestConditions,\n-            Context context) {\n-            super(Integer.MAX_VALUE); // writeThreshold is effectively not used by BlockBlobOutputStream.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c360edc6f6ca4b7cd876b15ad5b7a2ac93959ff"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55291e0d192d8c47aeaa4bbbd3ad222c33593944", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/55291e0d192d8c47aeaa4bbbd3ad222c33593944", "committedDate": "2020-05-06T22:45:53Z", "message": "Merged 73 regeneration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1180c2d9a927b49af2a69ffb61a9125cb5a57cef", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1180c2d9a927b49af2a69ffb61a9125cb5a57cef", "committedDate": "2020-05-06T22:50:10Z", "message": "CI fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4a478db988041e69fdfe0011a8cfeec76e1c8cb", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b4a478db988041e69fdfe0011a8cfeec76e1c8cb", "committedDate": "2020-05-14T20:55:29Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into blobTags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b648c5b2ab71fdab6247d0fc2475eb020c63be4", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b648c5b2ab71fdab6247d0fc2475eb020c63be4", "committedDate": "2020-05-14T21:24:53Z", "message": "CI fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4188ae770289fa1d9592b016337e566758f4b819", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4188ae770289fa1d9592b016337e566758f4b819", "committedDate": "2020-05-14T22:22:12Z", "message": "Fixed merge errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd53abb24fd4e941dd87e9ceb5af1edf478d047", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1dd53abb24fd4e941dd87e9ceb5af1edf478d047", "committedDate": "2020-05-14T22:54:40Z", "message": "CI fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40805ba3c46ee525221daa8a36f37a65161e1e4", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c40805ba3c46ee525221daa8a36f37a65161e1e4", "committedDate": "2020-05-14T23:18:57Z", "message": "Javadoc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f37b1322a3d2a8ae86c8d6ffa26520a22b1c57e1", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f37b1322a3d2a8ae86c8d6ffa26520a22b1c57e1", "committedDate": "2020-05-14T23:51:00Z", "message": "Javadoc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ef02ecfc7f05136358fcb728b5f4ef0dd95dbfe", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ef02ecfc7f05136358fcb728b5f4ef0dd95dbfe", "committedDate": "2020-05-15T00:11:17Z", "message": "Unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4176d725b9e617429be23418babdc9864e9b4e9e", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4176d725b9e617429be23418babdc9864e9b4e9e", "committedDate": "2020-05-26T19:16:46Z", "message": "Fixed generator regression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjE2NzA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10382#pullrequestreview-418616709", "createdAt": "2020-05-26T19:32:36Z", "commit": {"oid": "4176d725b9e617429be23418babdc9864e9b4e9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a39bb6676644d794f22413373dbca56b724aa029", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a39bb6676644d794f22413373dbca56b724aa029", "committedDate": "2020-05-26T19:34:37Z", "message": "added back comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "627cedd87029814c9ba09524108f379284fcc3c0", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/627cedd87029814c9ba09524108f379284fcc3c0", "committedDate": "2020-05-26T21:04:48Z", "message": "Merge branch 'feature/storage/stg73' into blobTags"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}