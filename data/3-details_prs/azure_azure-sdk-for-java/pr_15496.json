{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMjQ2Nzky", "number": 15496, "title": "Added support to specify block size in BlobInputStream", "bodyText": "Resolves #14739", "createdAt": "2020-09-22T23:34:20Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496", "merged": true, "mergeCommit": {"oid": "f6d8eb23296258ec26bc875432d153d4cbd211d9"}, "closed": true, "closedAt": "2020-09-23T22:50:49Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLgnZoAH2gAyNDkxMjQ2NzkyOmQxODhiNmNkY2I2OGNhM2M2MzViYmExYmEwODEyMDIzOTRkOTU3NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLwf0aAFqTQ5NDkwNzQyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d188b6cdcb68ca3c635bba1ba081202394d9574c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d188b6cdcb68ca3c635bba1ba081202394d9574c", "committedDate": "2020-09-22T23:30:24Z", "message": "Added support to specify chunk size in BlobInputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c149c6e0c5eb5087d5da729aff121cdc9c7877b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3c149c6e0c5eb5087d5da729aff121cdc9c7877b", "committedDate": "2020-09-22T23:32:34Z", "message": "Renamed chunkSize to blockSize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "705c3bac367eb07c7346f9a49fba6a0a61e37913", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/705c3bac367eb07c7346f9a49fba6a0a61e37913", "committedDate": "2020-09-22T23:47:00Z", "message": "Analyze step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4e626c91c13e5452490e53d381b1dfd064165e5", "committedDate": "2020-09-23T00:01:05Z", "message": "Made method non final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODgzMDQ4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496#pullrequestreview-494883048", "createdAt": "2020-09-23T17:21:58Z", "commit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTA1NjQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496#pullrequestreview-494905645", "createdAt": "2020-09-23T17:51:30Z", "commit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1MTozMFrOHW56wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1MTozMFrOHW56wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3OTY0OQ==", "bodyText": "So this is a minor change where we will make an additional service call to get the properties of the blob before opening the stream. Are we okay with that? If so, we should add a quick document stating that we will be doing this as it is a behavioral change from the past.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496#discussion_r493779649", "createdAt": "2020-09-23T17:51:30Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobClientBase.java", "diffHunk": "@@ -233,7 +235,23 @@ public final BlobInputStream openInputStream() {\n      * @throws BlobStorageException If a storage service error occurred.\n      */\n     public final BlobInputStream openInputStream(BlobRange range, BlobRequestConditions requestConditions) {\n-        return new BlobInputStream(client, range.getOffset(), range.getCount(), requestConditions);\n+        return openInputStream(new BlobInputStreamOptions().setRange(range).setRequestConditions(requestConditions));\n+    }\n+\n+    /**\n+     * Opens a blob input stream to download the specified range of the blob.\n+     *\n+     * @param options {@link BlobInputStreamOptions}\n+     * @return An <code>InputStream</code> object that represents the stream to use for reading from the blob.\n+     * @throws BlobStorageException If a storage service error occurred.\n+     */\n+    public BlobInputStream openInputStream(BlobInputStreamOptions options) {\n+        options = options == null ? new BlobInputStreamOptions() : options;\n+        BlobRange range = options.getRange() == null ? new BlobRange(0) : options.getRange();\n+        int chunkSize = options.getBlockSize() == null ? 4 * Constants.MB : options.getBlockSize();\n+\n+        return new BlobInputStream(client, range.getOffset(), range.getCount(), chunkSize,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTA3NDI0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496#pullrequestreview-494907424", "createdAt": "2020-09-23T17:53:52Z", "commit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1Mzo1M1rOHW6AMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1Mzo1M1rOHW6AMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MTA0Mw==", "bodyText": "If we are going to say the default if 4 MB should the getter check for blockSize == null and return 4 * Constants.MB?\nreturn (blockSize == null) ? 4 * Constants.MB : blockSize;\nIf this change is made, we could also change the return type to int instead of Integer.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15496#discussion_r493781043", "createdAt": "2020-09-23T17:53:53Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobInputStreamOptions.java", "diffHunk": "@@ -0,0 +1,71 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.models.BlobRange;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+\n+/**\n+ * Extended options that may be passed when opening a blob input stream.\n+ */\n+@Fluent\n+public class BlobInputStreamOptions {\n+\n+    private BlobRange range;\n+    private BlobRequestConditions requestConditions;\n+    private Integer blockSize;\n+\n+    /**\n+     * @return {@link BlobRange}\n+     */\n+    public BlobRange getRange() {\n+        return range;\n+    }\n+\n+    /**\n+     * @param range {@link BlobRange}\n+     * @return The updated options.\n+     */\n+    public BlobInputStreamOptions setRange(BlobRange range) {\n+        this.range = range;\n+        return this;\n+    }\n+\n+    /**\n+     * @return {@link BlobRequestConditions}\n+     */\n+    public BlobRequestConditions getRequestConditions() {\n+        return requestConditions;\n+    }\n+\n+    /**\n+     * @param requestConditions {@link BlobRequestConditions}\n+     * @return The updated options.\n+     */\n+    public BlobInputStreamOptions setRequestConditions(BlobRequestConditions requestConditions) {\n+        this.requestConditions = requestConditions;\n+        return this;\n+    }\n+\n+    /**\n+     * @return The size of each data chunk returned from the service. If block size is large, input stream will make\n+     * fewer network calls, but each individual call will send more data and will therefore take longer.\n+     * The default value is 4 MB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4e626c91c13e5452490e53d381b1dfd064165e5"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3359, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}