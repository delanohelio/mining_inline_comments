{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDg2NDk0", "number": 16696, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo0Nzo0NVrOEw5gTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NTo0M1rOEw5rOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzA5MjYwOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo0Nzo0NVrOHmvQUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo0Nzo0NVrOHmvQUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4MjE2Mw==", "bodyText": "Enumerate all imports instead of using *", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510382163", "createdAt": "2020-10-22T18:47:45Z", "author": {"login": "srnagar"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -5,10 +5,9 @@\n \n import com.azure.core.annotation.ServiceClientBuilder;\n import com.azure.core.credential.TokenCredential;\n-import com.azure.core.http.HttpClient;\n-import com.azure.core.http.HttpPipeline;\n-import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ca8a71914c6745e1f1b329779d152b4c7ef72e3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzExMjkxOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1Mzo0NVrOHmvdjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NToxNFrOHmvhBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTU1MQ==", "bodyText": "How do we feel about formatting ternary operations like we do in .NET?\nString applicationId = clientOptions == null\n    ? httpLogOptions.getApplicationId()\n    : clientOptions.GetApplicationId();", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510385551", "createdAt": "2020-10-22T18:53:45Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjQzOA==", "bodyText": "Sure, that looks a bit cleaner", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386438", "createdAt": "2020-10-22T18:55:14Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NTU1MQ=="}, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzExNjM3OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NDo0MFrOHmvfvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NTowMFrOHmvgfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjExMA==", "bodyText": "Does Java have null coalesce? Like String applicationId = clientOptions?.getApplicationId ?? httpLogOptions.getApplicationId;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386110", "createdAt": "2020-10-22T18:54:40Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjMwMQ==", "bodyText": "Nope", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386301", "createdAt": "2020-10-22T18:55:00Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -76,17 +88,26 @@ public DigitalTwinsClientBuilder()\n         httpLogOptions = new HttpLogOptions();\n     }\n \n-    private static HttpPipeline buildPipeline(TokenCredential tokenCredential, String endpoint,\n-                                              HttpLogOptions httpLogOptions, HttpClient httpClient,\n-                                              List<HttpPipelinePolicy> additionalPolicies, RetryPolicy retryPolicy,\n-                                              Configuration configuration, Map<String, String> properties) {\n+    private static HttpPipeline buildPipeline(TokenCredential tokenCredential,\n+                                              String endpoint,\n+                                              HttpLogOptions httpLogOptions,\n+                                              ClientOptions clientOptions,\n+                                              HttpClient httpClient,\n+                                              List<HttpPipelinePolicy> additionalPolicies,\n+                                              RetryPolicy retryPolicy,\n+                                              Configuration configuration,\n+                                              Map<String, String> properties) {\n         // Closest to API goes first, closest to wire goes last.\n         List<HttpPipelinePolicy> policies = new ArrayList<>();\n \n         String clientName = properties.getOrDefault(SDK_NAME, \"UnknownName\");\n         String clientVersion = properties.getOrDefault(SDK_VERSION, \"UnknownVersion\");\n \n-        policies.add(new UserAgentPolicy(httpLogOptions.getApplicationId(), clientName, clientVersion, configuration));\n+        // Give precedence to applicationId configured in clientOptions over the one configured in httpLogOptions.\n+        // Azure.Core deprecated setting the applicationId in httpLogOptions.\n+        String applicationId =\n+            clientOptions == null ? httpLogOptions.getApplicationId() : clientOptions.getApplicationId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NjExMA=="}, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzEyMDU2OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NTo0M1rOHmviQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODo1NzoyMFrOHmvlug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg==", "bodyText": "Does it matter in Java (for memory optimization) to initialize a list with a known size ahead of time, and could you get that from clientOptions.getHeaders()?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510386752", "createdAt": "2020-10-22T18:55:43Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -106,6 +127,14 @@ private static HttpPipeline buildPipeline(TokenCredential tokenCredential, Strin\n \n         policies.addAll(additionalPolicies);\n \n+        // If client options has headers configured, add a policy for each\n+        if (clientOptions != null) {\n+            List<HttpHeader> httpHeaderList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NzE0Mg==", "bodyText": "Good idea. ArrayList does have a constructor that takes the expected size", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510387142", "createdAt": "2020-10-22T18:56:27Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -106,6 +127,14 @@ private static HttpPipeline buildPipeline(TokenCredential tokenCredential, Strin\n \n         policies.addAll(additionalPolicies);\n \n+        // If client options has headers configured, add a policy for each\n+        if (clientOptions != null) {\n+            List<HttpHeader> httpHeaderList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg=="}, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4NzY0Mg==", "bodyText": "But the getHeaders() call is just an iterable, so there isn't a way to know the size until iterated on, so that would be a wash", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16696#discussion_r510387642", "createdAt": "2020-10-22T18:57:20Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClientBuilder.java", "diffHunk": "@@ -106,6 +127,14 @@ private static HttpPipeline buildPipeline(TokenCredential tokenCredential, Strin\n \n         policies.addAll(additionalPolicies);\n \n+        // If client options has headers configured, add a policy for each\n+        if (clientOptions != null) {\n+            List<HttpHeader> httpHeaderList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM4Njc1Mg=="}, "originalCommit": {"oid": "f72f51104f6646139f85117f96535b7ffd176ac2"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3906, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}