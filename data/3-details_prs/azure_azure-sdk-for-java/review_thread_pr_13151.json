{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTcyNTgy", "number": 13151, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo1OTowNFrOEO4o4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo1OTowNFrOEO4o4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDQzNDg5OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo1OTowNFrOGySxHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxODoxNjozMFrOGy25Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM4OTQ2OA==", "bodyText": "Where are you setting this client secret  in ConfidentialClient ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13151#discussion_r455389468", "createdAt": "2020-07-15T21:59:04Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -550,13 +550,19 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      */\n     public Mono<MsalToken> authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode,\n                                                              URI redirectUrl) {\n-        return publicClientApplicationAccessor.getValue()\n-                .flatMap(pc -> Mono.fromFuture(() -> pc.acquireToken(\n-                AuthorizationCodeParameters.builder(authorizationCode, redirectUrl)\n-                    .scopes(new HashSet<>(request.getScopes()))\n-                    .build()))\n-                .onErrorMap(t -> new ClientAuthenticationException(\"Failed to acquire token with authorization code\",\n-                    null, t)).map(ar -> new MsalToken(ar, options)));\n+        AuthorizationCodeParameters parameters = AuthorizationCodeParameters.builder(authorizationCode, redirectUrl)\n+            .scopes(new HashSet<>(request.getScopes()))\n+            .build();\n+        Mono<IAuthenticationResult> acquireToken;\n+        if (clientSecret != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffaf2c81702f5b30eb56cfe1056ab8bfe378ecf2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4MTM1OA==", "bodyText": "per offline discussion, this is set in the constructor of the IdentityClient.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13151#discussion_r455981358", "createdAt": "2020-07-16T18:16:30Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -550,13 +550,19 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      */\n     public Mono<MsalToken> authenticateWithAuthorizationCode(TokenRequestContext request, String authorizationCode,\n                                                              URI redirectUrl) {\n-        return publicClientApplicationAccessor.getValue()\n-                .flatMap(pc -> Mono.fromFuture(() -> pc.acquireToken(\n-                AuthorizationCodeParameters.builder(authorizationCode, redirectUrl)\n-                    .scopes(new HashSet<>(request.getScopes()))\n-                    .build()))\n-                .onErrorMap(t -> new ClientAuthenticationException(\"Failed to acquire token with authorization code\",\n-                    null, t)).map(ar -> new MsalToken(ar, options)));\n+        AuthorizationCodeParameters parameters = AuthorizationCodeParameters.builder(authorizationCode, redirectUrl)\n+            .scopes(new HashSet<>(request.getScopes()))\n+            .build();\n+        Mono<IAuthenticationResult> acquireToken;\n+        if (clientSecret != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM4OTQ2OA=="}, "originalCommit": {"oid": "ffaf2c81702f5b30eb56cfe1056ab8bfe378ecf2"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 33, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}