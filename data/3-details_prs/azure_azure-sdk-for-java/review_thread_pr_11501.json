{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MzE0OTc2", "number": 11501, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo0NjoyMVrOEAkX2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo0NjoyMVrOEAkX2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDMxMzg1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo0NjoyMVrOGb7eLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODoyOTozM1rOGcBe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA==", "bodyText": "We are replacing getResourceId() -> with getId()\nCan you please make sure these tests pass ?\nHere and everywhere else in your changes ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r431939118", "createdAt": "2020-05-28T15:46:21Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0MjU5NQ==", "bodyText": "Please don't replace this in the tests. ResourceId is a unique value, however id may not necessary be unique.\nTo access package private getResource you can use BridgeInternal if needed. please roll back these changes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r431942595", "createdAt": "2020-05-28T15:51:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3Mjc0Nw==", "bodyText": "So basically what this comes to is that UUID.randomUUID().toString() does not generate unique IDs??? If yes than we have a bigger problem through the whole test bed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r431972747", "createdAt": "2020-05-28T16:36:13Z", "author": {"login": "milismsft"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4MjAyMg==", "bodyText": "Milis, are you taking into account that ID may not necessarily be unique across multiple partitions?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r431982022", "createdAt": "2020-05-28T16:51:49Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMzU4NA==", "bodyText": "The IDs for all those tests are generated using the API I just mentioned; they pretty much should be unique as they come out from it. The second thing is that there are no partition setting that are applicable to databases, containers, container scripts for instance. All these tests use the IDs to count the results (see Reactor collect() call following them).\nSo unless we have a special test that create a batch of documents and they all inserted in two or more sets with different partition key values, we should be fine.\nI'm running the full set of tests; that should give us the validation we need, right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r432003584", "createdAt": "2020-05-28T17:27:24Z", "author": {"login": "milismsft"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxMDk5OA==", "bodyText": "@milismsft  as the goal of the PR is to change the public api, I suggest we don't change how tests work. If you have thought on improving the tests please consider anything other than public api change outside of the PR for public api change.\nas a pattern we rely on resourceId to ensure we cover having same id across multiple partition scenario.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r432010998", "createdAt": "2020-05-28T17:40:32Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzNzYyNw==", "bodyText": "FeedResponseListValidator.exactlyContainsInAnyOrder uses resourceId internally for validation.\nnow on your side you are passing Id and on the other side it compares against resoruceId, I suspect the tests will fail. if you don't want to go with BridgeInternal approach for non-partitioned resources please use FeedResponseListValidator.containsExactlyIds and please make sure the tests after this change pass.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11501#discussion_r432037627", "createdAt": "2020-05-28T18:29:33Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserQueryTest.java", "diffHunk": "@@ -86,7 +86,7 @@ public void queryAllUsers() throws Exception {\n \n         FeedResponseListValidator<CosmosUserProperties> validator = new FeedResponseListValidator.Builder<CosmosUserProperties>()\n                 .totalSize(expectedUsers.size())\n-                .exactlyContainsInAnyOrder(expectedUsers.stream().map(d -> d.getResourceId()).collect(Collectors.toList()))\n+                .exactlyContainsInAnyOrder(expectedUsers.stream().map(CosmosUserProperties::getId).collect(Collectors.toList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzOTExOA=="}, "originalCommit": {"oid": "585c227ce5d3b939d94449fe6bfc28e4552130cc"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4087, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}