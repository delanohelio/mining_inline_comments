{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjc2MTEx", "number": 9202, "title": "Refactoring perf tests", "bodyText": "", "createdAt": "2020-03-18T21:32:45Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202", "merged": true, "mergeCommit": {"oid": "2d1ee9aca91fcc745b07f5289d6f981cb2ef163f"}, "closed": true, "closedAt": "2020-03-19T21:24:03Z", "author": {"login": "srnagar"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOm-gIgH2gAyMzkwNjc2MTExOmQ3N2IzYjdlZmZkMDI5OTI1MmIzN2M1ZDY0MzdhYWNjMzNkN2Y4OWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPSnJoAFqTM3ODA5OTQ3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d77b3b7effd0299252b37c5d6437aacc33d7f89e", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d77b3b7effd0299252b37c5d6437aacc33d7f89e", "committedDate": "2020-03-17T18:25:41Z", "message": "Initial set of refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dad2df39b8b5c0af710f64eac76b58a50ff15205", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dad2df39b8b5c0af710f64eac76b58a50ff15205", "committedDate": "2020-03-18T21:31:15Z", "message": "Refactoring storage perf tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c41b8d6dac20baf13fc3b225c87061040c2c6e33", "committedDate": "2020-03-18T21:51:51Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjY5ODA0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#pullrequestreview-377269804", "createdAt": "2020-03-18T22:08:11Z", "commit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjYzODUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#pullrequestreview-377263850", "createdAt": "2020-03-18T21:56:43Z", "commit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo1Njo0NFrOF4YSpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjoxMjo1OFrOF4YtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjU2NA==", "bodyText": "It's not a huge deal, but I would prefer to keep the size and count options on separate classes since they will not be relevant to every perf test.  The root base class PerfStressOptions should only contain options which apply to every perf test.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394662564", "createdAt": "2020-03-18T21:56:44Z", "author": {"login": "mikeharder"}, "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java", "diffHunk": "@@ -38,6 +38,28 @@\n     @Parameter(names = { \"--sync\" }, description = \"Runs sync version of test\")\n     private boolean sync = false;\n \n+    @Parameter(names = { \"-s\", \"--size\" }, description = \"Size of payload (in bytes)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjcyNQ==", "bodyText": "I would also like to keep .NET and Java as consistent as possible, and these are on separate classes in .NET.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394662725", "createdAt": "2020-03-18T21:57:05Z", "author": {"login": "mikeharder"}, "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java", "diffHunk": "@@ -38,6 +38,28 @@\n     @Parameter(names = { \"--sync\" }, description = \"Runs sync version of test\")\n     private boolean sync = false;\n \n+    @Parameter(names = { \"-s\", \"--size\" }, description = \"Size of payload (in bytes)\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MjU2NA=="}, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MzI3Ng==", "bodyText": "I assume this is better for perf since we don't allocate a new array every time?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394663276", "createdAt": "2020-03-18T21:58:14Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadBlobTest.java", "diffHunk": "@@ -49,7 +48,9 @@ public void write(int b) throws IOException {\n     public Mono<Void> runAsync() {\n         return blobAsyncClient.download()\n             .map(b -> {\n-                b.get(new byte[b.remaining()]);\n+                for (int i = 0; i < b.remaining(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzA1NA==", "bodyText": "Should be better for perf since we don't create new flux every iteration.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394667054", "createdAt": "2020-03-18T22:07:28Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlobTest.java", "diffHunk": "@@ -21,6 +27,6 @@ public void run() {\n \n     @Override\n     public Mono<Void> runAsync() {\n-        return blobAsyncClient.upload(RandomFlux.create(options.getSize()), null, true).then();\n+        return blobAsyncClient.upload(randomByteBufferFlux, null, true).then();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzY5Ng==", "bodyText": "Why move from static to instance?  All instances of this test should be able to upload from the same file on disk, right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394667696", "createdAt": "2020-03-18T22:08:55Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadFromFileTest.java", "diffHunk": "@@ -3,33 +3,31 @@\n \n package com.azure.storage.blob.perf;\n \n+import static com.azure.perf.test.core.TestDataCreationHelper.createRandomInputStream;\n+\n+import com.azure.perf.test.core.PerfStressOptions;\n+import com.azure.storage.blob.perf.core.BlobTestBase;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-\n-import com.azure.perf.test.core.RandomStream;\n-import com.azure.perf.test.core.SizeOptions;\n-import com.azure.storage.blob.perf.core.BlobTestBase;\n import reactor.core.publisher.Mono;\n \n-public class UploadFromFileTest extends BlobTestBase<SizeOptions> {\n+public class UploadFromFileTest extends BlobTestBase<PerfStressOptions> {\n+\n+    private final Path tempFile;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2ODA2OA==", "bodyText": "Either way would work, but my preference is to share the same file unless each test needs its own file.  It may also be slightly faster since the OS disk cache only needs to cache one file, not N files.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394668068", "createdAt": "2020-03-18T22:09:49Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadFromFileTest.java", "diffHunk": "@@ -3,33 +3,31 @@\n \n package com.azure.storage.blob.perf;\n \n+import static com.azure.perf.test.core.TestDataCreationHelper.createRandomInputStream;\n+\n+import com.azure.perf.test.core.PerfStressOptions;\n+import com.azure.storage.blob.perf.core.BlobTestBase;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-\n-import com.azure.perf.test.core.RandomStream;\n-import com.azure.perf.test.core.SizeOptions;\n-import com.azure.storage.blob.perf.core.BlobTestBase;\n import reactor.core.publisher.Mono;\n \n-public class UploadFromFileTest extends BlobTestBase<SizeOptions> {\n+public class UploadFromFileTest extends BlobTestBase<PerfStressOptions> {\n+\n+    private final Path tempFile;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzY5Ng=="}, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2ODU2Ng==", "bodyText": "Moving this from static to instance actually breaks the test, since the file is only created and deleted in globalSetup, not per-instance setup.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394668566", "createdAt": "2020-03-18T22:10:57Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadFromFileTest.java", "diffHunk": "@@ -3,33 +3,31 @@\n \n package com.azure.storage.blob.perf;\n \n+import static com.azure.perf.test.core.TestDataCreationHelper.createRandomInputStream;\n+\n+import com.azure.perf.test.core.PerfStressOptions;\n+import com.azure.storage.blob.perf.core.BlobTestBase;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-\n-import com.azure.perf.test.core.RandomStream;\n-import com.azure.perf.test.core.SizeOptions;\n-import com.azure.storage.blob.perf.core.BlobTestBase;\n import reactor.core.publisher.Mono;\n \n-public class UploadFromFileTest extends BlobTestBase<SizeOptions> {\n+public class UploadFromFileTest extends BlobTestBase<PerfStressOptions> {\n+\n+    private final Path tempFile;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzY5Ng=="}, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2OTAxNw==", "bodyText": "Could a single InputStream or Flux<ByteBuffer> be used for all test instances?  If so these should be static.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394669017", "createdAt": "2020-03-18T22:12:09Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlockBlobTest.java", "diffHunk": "@@ -3,24 +3,33 @@\n \n package com.azure.storage.blob.perf;\n \n-import com.azure.perf.test.core.RandomFlux;\n-import com.azure.perf.test.core.RandomStream;\n-import com.azure.perf.test.core.SizeOptions;\n+import static com.azure.perf.test.core.TestDataCreationHelper.createRandomByteBufferFlux;\n+import static com.azure.perf.test.core.TestDataCreationHelper.createRandomInputStream;\n+\n+import com.azure.perf.test.core.PerfStressOptions;\n import com.azure.storage.blob.perf.core.BlobTestBase;\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+import reactor.core.publisher.Flux;\n import reactor.core.publisher.Mono;\n \n-public class UploadBlockBlobTest extends BlobTestBase<SizeOptions> {\n-    public UploadBlockBlobTest(SizeOptions options) {\n+public class UploadBlockBlobTest extends BlobTestBase<PerfStressOptions> {\n+    private final InputStream randomInputStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2OTMzMA==", "bodyText": "Though is it safe to reuse the same flux for each iteration?  Or is the flux \"used up\" after the first upload so we would need to create a new one every time?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#discussion_r394669330", "createdAt": "2020-03-18T22:12:58Z", "author": {"login": "mikeharder"}, "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlobTest.java", "diffHunk": "@@ -21,6 +27,6 @@ public void run() {\n \n     @Override\n     public Mono<Void> runAsync() {\n-        return blobAsyncClient.upload(RandomFlux.create(options.getSize()), null, true).then();\n+        return blobAsyncClient.upload(randomByteBufferFlux, null, true).then();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2NzA1NA=="}, "originalCommit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzM1MTMw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#pullrequestreview-377335130", "createdAt": "2020-03-19T00:24:24Z", "commit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzM3NzQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#pullrequestreview-377337746", "createdAt": "2020-03-19T00:32:55Z", "commit": {"oid": "c41b8d6dac20baf13fc3b225c87061040c2c6e33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a870372c5dda584bf13603a589b02ff715da355", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2a870372c5dda584bf13603a589b02ff715da355", "committedDate": "2020-03-19T06:31:04Z", "message": "Use single temp file for upload tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MDk5NDcx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9202#pullrequestreview-378099471", "createdAt": "2020-03-19T21:16:00Z", "commit": {"oid": "2a870372c5dda584bf13603a589b02ff715da355"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 727, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}