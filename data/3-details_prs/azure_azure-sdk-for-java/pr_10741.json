{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODE2NjU2", "number": 10741, "title": "Added content response on write enabled feature to Gateway and Direct TCP", "bodyText": "This PR:\n\nAdds contentResponseOnWriteEnabled argument to CosmosClientBuilder and all internal client builders.\nBy default the value for the argument is set to false -> Item write operations will not return content response.\nThis feature only works in Gateway and Direct TCP mode. (Direct HTTP is implemented on the backend, but needs to be released)\nExposes new APIs - getETag() on CosmosItemResponse and CosmosAsyncItemResponse\nAdded configuration options for Write Throughput and Write Latency Benchmarks.\nUpdated client builders in TestSuiteBase to support contentResponseOnWriteEnabled  testing.\nUpdated and closed some open github issues that have already been fixed.", "createdAt": "2020-05-06T00:22:55Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741", "merged": true, "mergeCommit": {"oid": "3742ebfbcefbabbbd3c08b5cf15a440ff57b06f9"}, "closed": true, "closedAt": "2020-05-07T17:14:55Z", "author": {"login": "kushagraThapar"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcedYDoAH2gAyNDEzODE2NjU2OjQyMzllOGJhOWEzY2JlNDhhM2JhMmQ2MDdlYTIyNmE3MWJhYjRiNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceyIp5gH2gAyNDEzODE2NjU2OjRhNzUyMjZlNjMwODkyYjc2ZWRiZGUwZDc0ODZmM2NkODFhZmRkNmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73", "committedDate": "2020-05-06T00:17:20Z", "message": "Added return minimal response feature to Gateway and Direct TCP for item write operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjY2NjMx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406266631", "createdAt": "2020-05-06T02:09:19Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjowOToxOVrOGRB1OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjowOToxOVrOGRB1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODk4NA==", "bodyText": "ChangeFeedProcessor is a read-only, how minimal response impacts it?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420508984", "createdAt": "2020-05-06T02:09:19Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-examples/src/main/java/com/azure/cosmos/examples/ChangeFeed/SampleChangeFeedProcessor.java", "diffHunk": "@@ -121,6 +121,7 @@ public static CosmosAsyncClient getCosmosClient() {\n                 .key(SampleConfigurations.MASTER_KEY)\n                 .connectionPolicy(ConnectionPolicy.getDefaultPolicy())\n                 .consistencyLevel(ConsistencyLevel.EVENTUAL)\n+                .returnMinimalResponse(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjY3MDI0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406267024", "createdAt": "2020-05-06T02:10:56Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoxMDo1N1rOGRB24A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoxMDo1N1rOGRB24A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwOTQwOA==", "bodyText": ".NET is using name 'NoResponseContent'.\n/cc: @j82w", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420509408", "createdAt": "2020-05-06T02:10:57Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncClient.java", "diffHunk": "@@ -163,6 +166,20 @@ CosmosKeyCredential cosmosKeyCredential() {\n         return cosmosKeyCredential;\n     }\n \n+    /**\n+     * Gets the boolean which indicates whether to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it\n+     * on the client.\n+     *\n+     * @return a boolean indicating whether resource will be included in the response or not\n+     */\n+    boolean isReturnMinimalResponse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjY3NjU3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406267657", "createdAt": "2020-05-06T02:13:37Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoxMzozOFrOGRB5FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoxMzozOFrOGRB5FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwOTk3Mg==", "bodyText": "What are scenarios for it?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420509972", "createdAt": "2020-05-06T02:13:38Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentServiceRequest.java", "diffHunk": "@@ -26,8 +26,6 @@\n  * This is core Transport/Connection agnostic request to the Azure Cosmos DB database service.\n  */\n public class RxDocumentServiceRequest implements Cloneable {\n-    private static final char PREFER_HEADER_SEPERATOR = ';';\n-    private static final String PREFER_HEADER_VALUE_FORMAT = \"%s=%s\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjY4MTE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406268115", "createdAt": "2020-05-06T02:15:18Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjY4MDkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406268091", "createdAt": "2020-05-06T02:15:09Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoxNToxMFrOGRB6ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjozNTozOVrOGRCNRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMDQwMw==", "bodyText": "good catch.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420510403", "createdAt": "2020-05-06T02:15:10Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "diffHunk": "@@ -84,7 +84,7 @@ public HttpTransportClient(Configs configs, Duration requestTimeout, UserAgentCo\n \n         // Set requested API version header for version enforcement.\n         this.defaultHeaders.put(HttpConstants.HttpHeaders.VERSION, HttpConstants.Versions.CURRENT_VERSION);\n-        this.defaultHeaders.put(HttpConstants.HttpHeaders.CACHE_CONTROL, HttpConstants.HeaderValues.NoCache);\n+        this.defaultHeaders.put(HttpConstants.HttpHeaders.CACHE_CONTROL, HttpConstants.HeaderValues.NO_CACHE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMjk5OQ==", "bodyText": "given that currently the only preferred header is minimal response, I wonder if we can avoid string concatination here:\ninstead of\npreferHeaderName + \"=\" + preferHeaderValue\nwe just pass minimanRespose=true", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420512999", "createdAt": "2020-05-06T02:26:13Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -915,6 +928,27 @@ private static void validateResource(Resource resource) {\n         return headers;\n     }\n \n+    static Map<String, String> addPreferHeader(String preferHeaderName, String preferHeaderValue, Map<String, String> headers) {\n+        if (headers == null) {\n+            headers = new HashMap<>();\n+        }\n+        return addPreferHeader(preferHeaderName + \"=\" + preferHeaderValue, headers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxNTE0MQ==", "bodyText": "we usually target emulator for database and container CRUD test, because otherwise we may run out of master resource budget in prod.\ncan we target emulator here too? that will help in ensuring less random test failure due to master budget throttling", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420515141", "createdAt": "2020-05-06T02:35:39Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/ReturnMinimalResponseTest.java", "diffHunk": "@@ -0,0 +1,266 @@\n+/*\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License.\n+ *\n+ */\n+\n+package com.azure.cosmos;\n+\n+import com.azure.cosmos.implementation.CosmosItemProperties;\n+import com.azure.cosmos.models.CosmosContainerProperties;\n+import com.azure.cosmos.models.CosmosContainerRequestOptions;\n+import com.azure.cosmos.models.CosmosContainerResponse;\n+import com.azure.cosmos.models.CosmosDatabaseProperties;\n+import com.azure.cosmos.models.CosmosDatabaseRequestOptions;\n+import com.azure.cosmos.models.CosmosDatabaseResponse;\n+import com.azure.cosmos.models.CosmosItemRequestOptions;\n+import com.azure.cosmos.models.CosmosItemResponse;\n+import com.azure.cosmos.models.IndexingMode;\n+import com.azure.cosmos.models.IndexingPolicy;\n+import com.azure.cosmos.models.ModelBridgeInternal;\n+import com.azure.cosmos.models.PartitionKey;\n+import com.azure.cosmos.models.PartitionKeyDefinition;\n+import com.azure.cosmos.rx.TestSuiteBase;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class ReturnMinimalResponseTest extends TestSuiteBase {\n+\n+    private final String preExistingDatabaseId = CosmosDatabaseForTest.generateId();\n+    private final List<String> databases = new ArrayList<>();\n+    private CosmosClient client;\n+    private CosmosContainer container;\n+    private CosmosDatabase createdDatabase;\n+\n+    //  Currently Gateway and Direct TCP support minimal response feature.\n+    @Factory(dataProvider = \"clientBuildersWithDirectTcpWithReturnMinimalResponse\")\n+    public ReturnMinimalResponseTest(CosmosClientBuilder clientBuilder) {\n+        super(clientBuilder);\n+    }\n+\n+    @BeforeClass(groups = {\"simple\"}, timeOut = SETUP_TIMEOUT)\n+    public void beforeClass() {\n+        assertThat(this.client).isNull();\n+        this.client = getClientBuilder().buildClient();\n+        createdDatabase = createSyncDatabase(client, preExistingDatabaseId);\n+        CosmosAsyncContainer asyncContainer = getSharedMultiPartitionCosmosContainer(this.client.asyncClient());\n+        container = client.getDatabase(asyncContainer.getDatabase().getId()).getContainer(asyncContainer.getId());\n+    }\n+\n+    @AfterClass(groups = {\"simple\"}, timeOut = SHUTDOWN_TIMEOUT, alwaysRun = true)\n+    public void afterClass() {\n+        safeDeleteSyncDatabase(createdDatabase);\n+        for (String dbId : databases) {\n+            safeDeleteSyncDatabase(client.getDatabase(dbId));\n+        }\n+        safeCloseSyncClient(client);\n+    }\n+\n+    @Test(groups = {\"simple\"}, timeOut = TIMEOUT)\n+    public void createDatabase_withMinimalResponseConfig() throws CosmosClientException {\n+        CosmosDatabaseProperties databaseDefinition = new CosmosDatabaseProperties(CosmosDatabaseForTest.generateId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/85d8c46fd2ff71cfc6a149947731ea85a74ed261", "committedDate": "2020-05-06T04:13:47Z", "message": "Updated name to noContentResponseOnWrite.\nUpdated cosmos container and database tests to emulator groups.\nRemoved prefer header generic logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzU2NTI2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406356526", "createdAt": "2020-05-06T07:20:02Z", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Mzg2OTM4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406386938", "createdAt": "2020-05-06T08:08:40Z", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDM0NTQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406434546", "createdAt": "2020-05-06T09:15:25Z", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxNToyNlrOGRKeqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxNToyNlrOGRKeqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1MDY2NQ==", "bodyText": "NIT: I think pretty much all customers identifying this setting will also ask themselves whether this flag will have impact on RU charges. Would be good to document that it doesn't (at least my understanding) here - or at least in the FAQ for the feature.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420650665", "createdAt": "2020-05-06T09:15:26Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -291,6 +292,39 @@ public CosmosClientBuilder keyCredential(CosmosKeyCredential cosmosKeyCredential\n         return this;\n     }\n \n+    /**\n+     * Gets the boolean which indicates whether to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it\n+     * on the client.\n+     *\n+     * By-default, this is true.\n+     *\n+     * @return a boolean indicating whether resource will be included in the response or not\n+     */\n+    boolean isNoContentResponseOnWrite() {\n+        return noContentResponseOnWrite;\n+    }\n+\n+    /**\n+     * Sets the boolean to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If set to true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it on the client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDQ1NTIx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406445521", "createdAt": "2020-05-06T09:30:38Z", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTozMDozOFrOGRLABA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTozMDozOFrOGRLABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1OTIwNA==", "bodyText": "For other similar configs we are using the Enabled suffix\nisSessionCapturingOverrideEnabled\nisConnectionReuseAcrossClientsEnabled\nshould we change this to isNoContentResponseOnWriteEnabled to be consistent with the other APIs?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420659204", "createdAt": "2020-05-06T09:30:38Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -291,6 +292,39 @@ public CosmosClientBuilder keyCredential(CosmosKeyCredential cosmosKeyCredential\n         return this;\n     }\n \n+    /**\n+     * Gets the boolean which indicates whether to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it\n+     * on the client.\n+     *\n+     * By-default, this is true.\n+     *\n+     * @return a boolean indicating whether resource will be included in the response or not\n+     */\n+    boolean isNoContentResponseOnWrite() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDQ2MDYy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406446062", "createdAt": "2020-05-06T09:31:25Z", "commit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTozMToyNVrOGRLBqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTozMToyNVrOGRLBqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1OTYyNw==", "bodyText": "similarly\nFor other similar configs we are using the Enabled suffix\nsessionCapturingOverrideEnabled\nconnectionReuseAcrossClientsEnabled\nshould we change this to noContentResponseOnWriteEnabled to be consistent with the other APIs?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420659627", "createdAt": "2020-05-06T09:31:25Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -291,6 +292,39 @@ public CosmosClientBuilder keyCredential(CosmosKeyCredential cosmosKeyCredential\n         return this;\n     }\n \n+    /**\n+     * Gets the boolean which indicates whether to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it\n+     * on the client.\n+     *\n+     * By-default, this is true.\n+     *\n+     * @return a boolean indicating whether resource will be included in the response or not\n+     */\n+    boolean isNoContentResponseOnWrite() {\n+        return noContentResponseOnWrite;\n+    }\n+\n+    /**\n+     * Sets the boolean to only return the headers and status code in Cosmos DB response\n+     * in case of Create, Update and Delete operations on CosmosItem.\n+     *\n+     * If set to true, this removes the resource from response. It reduces networking\n+     * and CPU load by not sending the resource back over the network and serializing it on the client.\n+     *\n+     * By-default, this is true.\n+     *\n+     * @param noContentResponseOnWrite a boolean indicating whether resource will be included in the response or not\n+     * @return current cosmosClientBuilder\n+     */\n+    public CosmosClientBuilder noContentResponseOnWrite(boolean noContentResponseOnWrite) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d8c46fd2ff71cfc6a149947731ea85a74ed261"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjYzMjY5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#pullrequestreview-406263269", "createdAt": "2020-05-06T01:54:13Z", "commit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo1NDoxM1rOGRBn6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjowNzoyMlrOGRBzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTU3Nw==", "bodyText": "LGTM", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420505577", "createdAt": "2020-05-06T01:54:13Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdConstants.java", "diffHunk": "@@ -572,7 +572,8 @@ public byte id() {\n         ContentSerializationFormat((short) 0x0065, RntbdTokenType.Byte, false),\n         AllowTentativeWrites((short) 0x0066, RntbdTokenType.Byte, false),\n         IsUserRequest((short) 0x0067, RntbdTokenType.Byte, false),\n-        SharedOfferThroughput((short) 0x0068, RntbdTokenType.ULong, false);\n+        SharedOfferThroughput((short) 0x0068, RntbdTokenType.ULong, false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTk3Ng==", "bodyText": "LGTM", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420505976", "createdAt": "2020-05-06T01:55:41Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestHeaders.java", "diffHunk": "@@ -29,6 +28,7 @@\n import java.util.function.Supplier;\n \n import static com.azure.cosmos.implementation.HttpConstants.HttpHeaders;\n+import static com.azure.cosmos.implementation.HttpConstants.HeaderValues;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODA5OQ==", "bodyText": "Thanks for removing this. I was showing some code to a customer and noticed these very old comments were still present.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420508099", "createdAt": "2020-05-06T02:05:13Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/VeryLargeDocumentQueryTest.java", "diffHunk": "@@ -39,9 +39,6 @@ public VeryLargeDocumentQueryTest(CosmosClientBuilder clientBuilder) {\n         super(clientBuilder);\n     }\n \n-    // TODO (DANOBLE) VeryLargeDocumentQueryTest::queryLargeDocuments intermittently times out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODE0Ng==", "bodyText": "Thanks for removing this too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420508146", "createdAt": "2020-05-06T02:05:33Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/VeryLargeDocumentQueryTest.java", "diffHunk": "@@ -83,8 +80,6 @@ private void createLargeDocument() {\n                     .verify(Duration.ofMillis(subscriberValidationTimeout));\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODI3Mw==", "bodyText": "Thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420508273", "createdAt": "2020-05-06T02:06:11Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/UserDefinedFunctionUpsertReplaceTest.java", "diffHunk": "@@ -65,8 +65,6 @@ public void replaceUserDefinedFunction() throws Exception {\n         validateSuccess(replaceObservable, validatorForReplace);\n     }\n \n-    // TODO (DANOBLE) UserDefinedFunctionUpsertReplaceTest initialization consistently times out in CI environments.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwODUzNQ==", "bodyText": "thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10741#discussion_r420508535", "createdAt": "2020-05-06T02:07:22Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/ParallelDocumentQueryTest.java", "diffHunk": "@@ -373,8 +373,6 @@ public void queryDocumentsPojo(){\n \n     }\n \n-    // TODO (DANOBLE) ParallelDocumentQueryTest initialization intermittently fails in CI environments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4239e8ba9a3cbe48a3ba2d607ea226a71bab4b73"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d3377b980e4276a1ec58e8109262601a9c45ca", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9d3377b980e4276a1ec58e8109262601a9c45ca", "committedDate": "2020-05-06T16:22:32Z", "message": "Finalized name and updated documentation regarding RU usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86b4710f522eea7c5104a9374ba50e782b623ac2", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/86b4710f522eea7c5104a9374ba50e782b623ac2", "committedDate": "2020-05-06T18:43:13Z", "message": "Fixed benchmark configurations, internal TestSuiteBase async document clients with content response on write flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "228f38b7b260561118589515764462cf3c0a3eac", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/228f38b7b260561118589515764462cf3c0a3eac", "committedDate": "2020-05-06T20:37:33Z", "message": "Fixed more tests by enabling content on response. Updated names of tests to reflect correct value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03e4a8b364c6a3f6e1ec0f73af55d00a1a18755", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f03e4a8b364c6a3f6e1ec0f73af55d00a1a18755", "committedDate": "2020-05-06T22:10:46Z", "message": "Fixed negation check of content response flag on write throughput and write latency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a75226e630892b76edbde0d7486f3cd81afdd6e", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4a75226e630892b76edbde0d7486f3cd81afdd6e", "committedDate": "2020-05-07T00:28:31Z", "message": "Fixed more tests client builders with content response on write disabled"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4572, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}