{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0ODM1MjMy", "number": 15101, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1MTowMVrOEimRfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1MTowMVrOEimRfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzE0MTA4OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2UserService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo1MTowMVrOHQkYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMTo1MToxOVrOHRBf5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNTM3NA==", "bodyText": "this is just a style comment, but I personally find the original form of the throw (1 line versus 5 lines) easier to read.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15101#discussion_r487135374", "createdAt": "2020-09-11T15:51:01Z", "author": {"login": "joshfree"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2UserService.java", "diffHunk": "@@ -50,25 +45,44 @@ public OidcUser loadUser(OidcUserRequest userRequest) throws OAuth2Authenticatio\n             // https://github.com/MicrosoftDocs/azure-docs/issues/8121#issuecomment-387090099\n             // In AAD App Registration configure oauth2AllowImplicitFlow to true\n             final ClientRegistration registration = userRequest.getClientRegistration();\n-            final AzureADGraphClient graphClient = new AzureADGraphClient(\n+            final AzureADGraphClient azureADGraphClient = new AzureADGraphClient(\n                 registration.getClientId(),\n                 registration.getClientSecret(),\n-                aadAuthProps,\n-                serviceEndpointsProps\n+                aadAuthenticationProperties,\n+                serviceEndpointsProperties\n             );\n-            String graphApiToken = graphClient\n-                .acquireTokenForGraphApi(userRequest.getIdToken().getTokenValue(), aadAuthProps.getTenantId())\n+            String graphApiToken = azureADGraphClient\n+                .acquireTokenForGraphApi(\n+                    userRequest.getIdToken().getTokenValue(),\n+                    aadAuthenticationProperties.getTenantId()\n+                )\n                 .accessToken();\n-            mappedAuthorities = graphClient.getGrantedAuthorities(graphApiToken);\n+            mappedAuthorities = azureADGraphClient.getGrantedAuthorities(graphApiToken);\n         } catch (MalformedURLException e) {\n-            throw wrapException(INVALID_REQUEST, \"Failed to acquire token for Graph API.\", null, e);\n+            throw toOAuth2AuthenticationException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b36fb1c552e7d77f5d256572fc8c8c80983bd0"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxMjM4OA==", "bodyText": "Hi, @joshfree .\nThank you for your feedback.\nHere is my principal about whether to break line:\n\nIf line length <= 120, it should be written in 1 line.\nIf length > 120, write 1 parameter in one line, which will make code easier to read.\n\nIn this case, I renamed method name from wrapException to toOAuth2AuthenticationException, this will make this line's length > 120, so I write each parameter in a line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15101#discussion_r487612388", "createdAt": "2020-09-14T01:51:19Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2UserService.java", "diffHunk": "@@ -50,25 +45,44 @@ public OidcUser loadUser(OidcUserRequest userRequest) throws OAuth2Authenticatio\n             // https://github.com/MicrosoftDocs/azure-docs/issues/8121#issuecomment-387090099\n             // In AAD App Registration configure oauth2AllowImplicitFlow to true\n             final ClientRegistration registration = userRequest.getClientRegistration();\n-            final AzureADGraphClient graphClient = new AzureADGraphClient(\n+            final AzureADGraphClient azureADGraphClient = new AzureADGraphClient(\n                 registration.getClientId(),\n                 registration.getClientSecret(),\n-                aadAuthProps,\n-                serviceEndpointsProps\n+                aadAuthenticationProperties,\n+                serviceEndpointsProperties\n             );\n-            String graphApiToken = graphClient\n-                .acquireTokenForGraphApi(userRequest.getIdToken().getTokenValue(), aadAuthProps.getTenantId())\n+            String graphApiToken = azureADGraphClient\n+                .acquireTokenForGraphApi(\n+                    userRequest.getIdToken().getTokenValue(),\n+                    aadAuthenticationProperties.getTenantId()\n+                )\n                 .accessToken();\n-            mappedAuthorities = graphClient.getGrantedAuthorities(graphApiToken);\n+            mappedAuthorities = azureADGraphClient.getGrantedAuthorities(graphApiToken);\n         } catch (MalformedURLException e) {\n-            throw wrapException(INVALID_REQUEST, \"Failed to acquire token for Graph API.\", null, e);\n+            throw toOAuth2AuthenticationException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNTM3NA=="}, "originalCommit": {"oid": "e9b36fb1c552e7d77f5d256572fc8c8c80983bd0"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1075, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}