{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTU5NjMz", "number": 14444, "title": "Identity adfs support aug 2020", "bodyText": "Fixes #14183 #14188  #14653 , #13460\nThis PR adds ADFS Authorities support to Identity SDK.\nAlso upgrades the MSAL version in the repo to 1.6.2 everywhere.", "createdAt": "2020-08-25T23:35:31Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444", "merged": true, "mergeCommit": {"oid": "db97b97c7100b6c969002b32f948d073d84264cb"}, "closed": true, "closedAt": "2020-08-31T08:45:03Z", "author": {"login": "g2vinay"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCScRFgH2gAyNDczNTU5NjMzOmQ1MmRlYWM4ZTEyYzY2ZmFlOTc5MzI5ZjVhZDA5MmNkM2ZjYTA4NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEG6mPAH2gAyNDczNTU5NjMzOmM1ZDFkZDhmOGVkZjJhYmFjY2JlMGRhZTRhMDdkNGY5NDA4ZDQzOWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d52deac8e12c66fae979329f5ad092cd3fca0841", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d52deac8e12c66fae979329f5ad092cd3fca0841", "committedDate": "2020-08-25T07:54:15Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e12a3170d111646c005577073e1f2dd9c4d04f5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e12a3170d111646c005577073e1f2dd9c4d04f5", "committedDate": "2020-08-25T23:33:47Z", "message": "add support for adfs tenants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d253f2a3e5a360db0b71db57070db66c4f18ddd4", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d253f2a3e5a360db0b71db57070db66c4f18ddd4", "committedDate": "2020-08-25T23:43:39Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "469921b561ec89d3367d653246298935d42e4f9f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/469921b561ec89d3367d653246298935d42e4f9f", "committedDate": "2020-08-28T21:37:43Z", "message": "code updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a7cce118159bfa7ee6052c67cb6addbaa54e8a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/50a7cce118159bfa7ee6052c67cb6addbaa54e8a", "committedDate": "2020-08-28T21:55:16Z", "message": "update pom."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b742b5def48de8ed54370019295995429d2783d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b742b5def48de8ed54370019295995429d2783d", "committedDate": "2020-08-28T22:14:15Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDU0MzUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#pullrequestreview-478054352", "createdAt": "2020-08-28T22:22:36Z", "commit": {"oid": "4b742b5def48de8ed54370019295995429d2783d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDU0Mzk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#pullrequestreview-478054396", "createdAt": "2020-08-28T22:22:47Z", "commit": {"oid": "4b742b5def48de8ed54370019295995429d2783d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjoyMjo0N1rOHJV7Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjoyNDowNFrOHJV8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1ODQ3OQ==", "bodyText": "Use string constants.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#discussion_r479558479", "createdAt": "2020-08-28T22:22:47Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -640,38 +639,20 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @return a Publisher that emits an AccessToken\n      */\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n-        String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        return AuthorizationCodeListener.create(port)\n-            .flatMap(server -> {\n-                URI redirectUri;\n-                String browserUri;\n-                try {\n-                    redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n-                    browserUri =\n-                        String.format(\"%s/oauth2/v2.0/authorize?response_type=code&response_mode=query&prompt\"\n-                                + \"=select_account&client_id=%s&redirect_uri=%s&state=%s&scope=%s\",\n-                            authorityUrl,\n-                            clientId,\n-                            redirectUri.toString(),\n-                            UUID.randomUUID(),\n-                            String.join(\" \", request.getScopes()));\n-                } catch (URISyntaxException e) {\n-                    return server.dispose().then(Mono.error(e));\n-                }\n+        URI redirectUri;\n+        try {\n+            redirectUri = new URI(String.format(\"http://localhost:%s\", port));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b742b5def48de8ed54370019295995429d2783d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1ODgzNg==", "bodyText": "Do you need to use fromFuture? Can it just be:\n.flatMap(pc -> pc.acquireToken(parameters));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#discussion_r479558836", "createdAt": "2020-08-28T22:24:04Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -640,38 +639,20 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @return a Publisher that emits an AccessToken\n      */\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n-        String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        return AuthorizationCodeListener.create(port)\n-            .flatMap(server -> {\n-                URI redirectUri;\n-                String browserUri;\n-                try {\n-                    redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n-                    browserUri =\n-                        String.format(\"%s/oauth2/v2.0/authorize?response_type=code&response_mode=query&prompt\"\n-                                + \"=select_account&client_id=%s&redirect_uri=%s&state=%s&scope=%s\",\n-                            authorityUrl,\n-                            clientId,\n-                            redirectUri.toString(),\n-                            UUID.randomUUID(),\n-                            String.join(\" \", request.getScopes()));\n-                } catch (URISyntaxException e) {\n-                    return server.dispose().then(Mono.error(e));\n-                }\n+        URI redirectUri;\n+        try {\n+            redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n+        } catch (URISyntaxException e) {\n+            return Mono.error(logger.logExceptionAsError(new RuntimeException(e)));\n+        }\n+        InteractiveRequestParameters parameters = InteractiveRequestParameters.builder(redirectUri)\n+                                                     .scopes(new HashSet<>(request.getScopes()))\n+                                                     .build();\n+        Mono<IAuthenticationResult> acquireToken = publicClientApplicationAccessor.getValue()\n+                               .flatMap(pc -> Mono.fromFuture(() -> pc.acquireToken(parameters)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b742b5def48de8ed54370019295995429d2783d"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "154187521731bd08db06f17b55573f791dba8be8", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/154187521731bd08db06f17b55573f791dba8be8", "committedDate": "2020-08-30T22:13:26Z", "message": "Address Feedback + Code Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d1dd8f8edf2abaccbe0dae4a07d4f9408d439a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c5d1dd8f8edf2abaccbe0dae4a07d4f9408d439a", "committedDate": "2020-08-30T23:36:22Z", "message": "fix module info"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 262, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}