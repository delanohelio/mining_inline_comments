{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwOTcyNjE4", "number": 16887, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0MToxOFrOEyi5bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0Njo1OFrOEyjBMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDM2MDEzOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0MToxOFrOHpQCAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0MToxOFrOHpQCAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxNjMyMw==", "bodyText": "Can you make it a const (DEFAULT_POLL_INTERVAL) and reuse in all other methods as well? I guess the only other operation right now is the beginCreateSearch but you will also add the beginReleasePhoneNumber, and you can use the same default for everything", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16887#discussion_r513016323", "createdAt": "2020-10-27T20:41:18Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -847,48 +847,53 @@\n      */\n \n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<Void, Void> beginPurchaseSearch(String searchId, Duration pollInterval) {\n+    public PollerFlux<PhoneNumberSearch, \n+        PhoneNumberSearch> beginPurchaseSearch(String searchId, Duration pollInterval) {\n         Objects.requireNonNull(searchId, \"'searchId' can not be null.\");\n-        Objects.requireNonNull(pollInterval, \"'pollInterval' can not be null.\");\n+        \n+        if (pollInterval == null) {\n+            pollInterval = Duration.ofSeconds(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fbde25606580ac4df4fe2a1c53562d426b52cfa"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDM3NDkyOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0NTozNFrOHpQLAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0NTozNFrOHpQLAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxODYyNA==", "bodyText": "nit: do you mind moving Mono> to the line above, will look cleaner :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16887#discussion_r513018624", "createdAt": "2020-10-27T20:45:34Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -847,48 +847,53 @@\n      */\n \n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<Void, Void> beginPurchaseSearch(String searchId, Duration pollInterval) {\n+    public PollerFlux<PhoneNumberSearch, \n+        PhoneNumberSearch> beginPurchaseSearch(String searchId, Duration pollInterval) {\n         Objects.requireNonNull(searchId, \"'searchId' can not be null.\");\n-        Objects.requireNonNull(pollInterval, \"'pollInterval' can not be null.\");\n+        \n+        if (pollInterval == null) {\n+            pollInterval = Duration.ofSeconds(5);\n+        }\n \n-        return new PollerFlux<Void, Void>(pollInterval,\n+        return new PollerFlux<PhoneNumberSearch, PhoneNumberSearch>(pollInterval,\n             purchaseSearchActivationOperation(searchId),\n             purchaseSearchPollOperation(searchId),\n             (activationResponse, pollingContext) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n             purchaseSearchFetchResultOperation());\n     }\n \n-    private Function<PollingContext<Void>, Mono<Void>> purchaseSearchActivationOperation(String searchId) {\n-\n+    private Function<PollingContext<PhoneNumberSearch>, \n+        Mono<PhoneNumberSearch>> purchaseSearchActivationOperation(String searchId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fbde25606580ac4df4fe2a1c53562d426b52cfa"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDM4MDAyOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDo0Njo1OFrOHpQN-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMTo1MjoyM1rOHpSZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxOTM4Ng==", "bodyText": "Can we use more descriptive parameter names than res, agh?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16887#discussion_r513019386", "createdAt": "2020-10-27T20:46:58Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -847,48 +847,53 @@\n      */\n \n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<Void, Void> beginPurchaseSearch(String searchId, Duration pollInterval) {\n+    public PollerFlux<PhoneNumberSearch, \n+        PhoneNumberSearch> beginPurchaseSearch(String searchId, Duration pollInterval) {\n         Objects.requireNonNull(searchId, \"'searchId' can not be null.\");\n-        Objects.requireNonNull(pollInterval, \"'pollInterval' can not be null.\");\n+        \n+        if (pollInterval == null) {\n+            pollInterval = Duration.ofSeconds(5);\n+        }\n \n-        return new PollerFlux<Void, Void>(pollInterval,\n+        return new PollerFlux<PhoneNumberSearch, PhoneNumberSearch>(pollInterval,\n             purchaseSearchActivationOperation(searchId),\n             purchaseSearchPollOperation(searchId),\n             (activationResponse, pollingContext) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n             purchaseSearchFetchResultOperation());\n     }\n \n-    private Function<PollingContext<Void>, Mono<Void>> purchaseSearchActivationOperation(String searchId) {\n-\n+    private Function<PollingContext<PhoneNumberSearch>, \n+        Mono<PhoneNumberSearch>> purchaseSearchActivationOperation(String searchId) {\n         return (pollingContext) -> {\n-            Mono<Void> response = purchaseSearch(searchId);\n-            return response;\n+            Mono<PhoneNumberSearch> res = purchaseSearch(searchId).flatMap(agh -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fbde25606580ac4df4fe2a1c53562d426b52cfa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAyMzA1NQ==", "bodyText": "Also, I find it weird that the argument in flatmap is not used.. is that normal pattern?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16887#discussion_r513023055", "createdAt": "2020-10-27T20:53:53Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -847,48 +847,53 @@\n      */\n \n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<Void, Void> beginPurchaseSearch(String searchId, Duration pollInterval) {\n+    public PollerFlux<PhoneNumberSearch, \n+        PhoneNumberSearch> beginPurchaseSearch(String searchId, Duration pollInterval) {\n         Objects.requireNonNull(searchId, \"'searchId' can not be null.\");\n-        Objects.requireNonNull(pollInterval, \"'pollInterval' can not be null.\");\n+        \n+        if (pollInterval == null) {\n+            pollInterval = Duration.ofSeconds(5);\n+        }\n \n-        return new PollerFlux<Void, Void>(pollInterval,\n+        return new PollerFlux<PhoneNumberSearch, PhoneNumberSearch>(pollInterval,\n             purchaseSearchActivationOperation(searchId),\n             purchaseSearchPollOperation(searchId),\n             (activationResponse, pollingContext) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n             purchaseSearchFetchResultOperation());\n     }\n \n-    private Function<PollingContext<Void>, Mono<Void>> purchaseSearchActivationOperation(String searchId) {\n-\n+    private Function<PollingContext<PhoneNumberSearch>, \n+        Mono<PhoneNumberSearch>> purchaseSearchActivationOperation(String searchId) {\n         return (pollingContext) -> {\n-            Mono<Void> response = purchaseSearch(searchId);\n-            return response;\n+            Mono<PhoneNumberSearch> res = purchaseSearch(searchId).flatMap(agh -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxOTM4Ng=="}, "originalCommit": {"oid": "3fbde25606580ac4df4fe2a1c53562d426b52cfa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA1NTAwOQ==", "bodyText": "I used agh to test, forgot to remove that!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16887#discussion_r513055009", "createdAt": "2020-10-27T21:52:23Z", "author": {"login": "jbeauregardb"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -847,48 +847,53 @@\n      */\n \n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PollerFlux<Void, Void> beginPurchaseSearch(String searchId, Duration pollInterval) {\n+    public PollerFlux<PhoneNumberSearch, \n+        PhoneNumberSearch> beginPurchaseSearch(String searchId, Duration pollInterval) {\n         Objects.requireNonNull(searchId, \"'searchId' can not be null.\");\n-        Objects.requireNonNull(pollInterval, \"'pollInterval' can not be null.\");\n+        \n+        if (pollInterval == null) {\n+            pollInterval = Duration.ofSeconds(5);\n+        }\n \n-        return new PollerFlux<Void, Void>(pollInterval,\n+        return new PollerFlux<PhoneNumberSearch, PhoneNumberSearch>(pollInterval,\n             purchaseSearchActivationOperation(searchId),\n             purchaseSearchPollOperation(searchId),\n             (activationResponse, pollingContext) -> Mono.error(new RuntimeException(\"Cancellation is not supported\")),\n             purchaseSearchFetchResultOperation());\n     }\n \n-    private Function<PollingContext<Void>, Mono<Void>> purchaseSearchActivationOperation(String searchId) {\n-\n+    private Function<PollingContext<PhoneNumberSearch>, \n+        Mono<PhoneNumberSearch>> purchaseSearchActivationOperation(String searchId) {\n         return (pollingContext) -> {\n-            Mono<Void> response = purchaseSearch(searchId);\n-            return response;\n+            Mono<PhoneNumberSearch> res = purchaseSearch(searchId).flatMap(agh -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxOTM4Ng=="}, "originalCommit": {"oid": "3fbde25606580ac4df4fe2a1c53562d426b52cfa"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3879, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}