{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjkyMzQ1", "number": 17235, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTozOTo1MVrOE10O8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoyMDo0MlrOE11Fdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODY1Nzc4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTozOTo1MVrOHuTpPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTozOTo1MVrOHuTpPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMxODM5Ng==", "bodyText": "Should we use Collections.emptyMap() here to use a singleton instead of creating a new instance?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518318396", "createdAt": "2020-11-05T19:39:51Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java", "diffHunk": "@@ -15,8 +18,19 @@\n      * @param name The blob name\n      */\n     public TaggedBlobItem(String containerName, String name) {\n+        this(containerName, name, new HashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODY2ODAxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo0Mjo1N1rOHuTv0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowNzoyOVrOHuUkbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw==", "bodyText": "Thoughts on deferring instantiation of a new map until we know the FilterBlobItem has tags, if it doesn't use the singleton Collections.emptyMap().", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518320083", "createdAt": "2020-11-05T19:42:57Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNzU3Nw==", "bodyText": "This translates responses of an API where you filter blobs by tags. Unless you're purposefully using an older service version, tags should never be empty.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518327577", "createdAt": "2020-11-05T19:56:41Z", "author": {"login": "jaschrep-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMTU3OQ==", "bodyText": "Given a refactor Gauri suggested, it may actually be good to do this, as the guarantee I presented would no longer be applicable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518331579", "createdAt": "2020-11-05T20:03:56Z", "author": {"login": "jaschrep-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMzU1MA==", "bodyText": "yeah, we shouldn't create empty maps if not required.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518333550", "createdAt": "2020-11-05T20:07:29Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODcxODEwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1NzoyNlrOHuUOzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1NzoyNlrOHuUOzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyODAxNA==", "bodyText": "Could we consolidate this logic (BlobTagSet -> Map of tags) into another method in ModelHelper? There's some duplicate logic in BlobAsyncClient.getTagsWithResponse and ModelHelper.populateBlobItem,", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518328014", "createdAt": "2020-11-05T19:57:26Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();\n+        if (filterBlobItem.getTags() != null && filterBlobItem.getTags().getBlobTagSet() != null) {\n+            for (BlobTag tag : filterBlobItem.getTags().getBlobTagSet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODcyNjQzOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/swagger/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1OTo0N1rOHuUTtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowOTowMlrOHuUnoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyOTI3MA==", "bodyText": "Just a reminder to eventually revert this when the swagger has been merged", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518329270", "createdAt": "2020-11-05T19:59:47Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/swagger/README.md", "diffHunk": "@@ -15,7 +15,7 @@ autorest --use=@microsoft.azure/autorest.java@3.0.4 --use=jianghaolu/autorest.mo\n \n ### Code generation settings\n ``` yaml\n-input-file: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/storage-dataplane-preview/specification/storage/data-plane/Microsoft.BlobStorage/preview/2020-02-10/blob.json\n+input-file: https://raw.githubusercontent.com/seanmcc-msft/azure-rest-api-specs/feature/storage/blobTags75/specification/storage/data-plane/Microsoft.BlobStorage/preview/2020-04-08/blob.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzNDM2OA==", "bodyText": "Well, not revert but update the version\nhttps://raw.githubusercontent.com/Azure/azure-rest-api-specs/storage-dataplane-preview/specification/storage/data-plane/Microsoft.BlobStorage/preview/2020-04-08/blob.json", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518334368", "createdAt": "2020-11-05T20:09:02Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/swagger/README.md", "diffHunk": "@@ -15,7 +15,7 @@ autorest --use=@microsoft.azure/autorest.java@3.0.4 --use=jianghaolu/autorest.mo\n \n ### Code generation settings\n ``` yaml\n-input-file: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/storage-dataplane-preview/specification/storage/data-plane/Microsoft.BlobStorage/preview/2020-02-10/blob.json\n+input-file: https://raw.githubusercontent.com/seanmcc-msft/azure-rest-api-specs/feature/storage/blobTags75/specification/storage/data-plane/Microsoft.BlobStorage/preview/2020-04-08/blob.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyOTI3MA=="}, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODcyOTk4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ServiceAPITest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowMDo0MVrOHuUV5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowMDo0MVrOHuUV5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyOTgyOQ==", "bodyText": "is there a reason why we're specifically checking against the service version here? We generally always run tests against the latest version, so this may not be necessary", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518329829", "createdAt": "2020-11-05T20:00:41Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ServiceAPITest.groovy", "diffHunk": "@@ -278,6 +278,11 @@ class ServiceAPITest extends APISpec {\n \n         then:\n         results.size() == 1\n+        if (primaryBlobServiceClient.getServiceVersion() >= BlobServiceVersion.V2020_04_08) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODc0Mzg5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ServiceAPITest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowNDo1MFrOHuUerg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowNDo1MFrOHuUerg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMjA3OA==", "bodyText": "I think we don't do things like that in java. tests run with latest version.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518332078", "createdAt": "2020-11-05T20:04:50Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ServiceAPITest.groovy", "diffHunk": "@@ -278,6 +278,11 @@ class ServiceAPITest extends APISpec {\n \n         then:\n         results.size() == 1\n+        if (primaryBlobServiceClient.getServiceVersion() >= BlobServiceVersion.V2020_04_08) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODc5NzM1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoyMDo0M1rOHuU_xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoyMDo0M1rOHuU_xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MDU0OQ==", "bodyText": "if (blobTags ==null || blobTags.getBlobTagSet() == null || blobTags.getBlobTagsSet().isEmpty()) {\n return Collections.emptyMap();\n} else {\n   tags = new HashMap<>();\n   for (BlobTag tag : blobTags.getBlobTagSet()) {\n       tags.put(tag.getKey(), tag.getValue());\n  }\n  return tags;\n}\n\ngives much less branches and might make future reader happier.\nYou can also try streams API to reduce this even more see https://mkyong.com/java8/java-8-convert-list-to-map/", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518340549", "createdAt": "2020-11-05T20:20:43Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -245,20 +249,38 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         blobItem.setCurrentVersion(blobItemInternal.isCurrentVersion());\n         blobItem.setIsPrefix(blobItemInternal.isPrefix());\n \n-        Map<String, String> tags = new HashMap<>();\n-        if (blobItemInternal.getBlobTags() != null && blobItemInternal.getBlobTags().getBlobTagSet() != null) {\n-            for (BlobTag tag : blobItemInternal.getBlobTags().getBlobTagSet()) {\n-                tags.put(tag.getKey(), tag.getValue());\n-            }\n-        }\n-        blobItem.setTags(tags);\n+        blobItem.setTags(tagMapFromBlobTags(blobItemInternal.getBlobTags()));\n \n         blobItem.setObjectReplicationSourcePolicies(\n             transformObjectReplicationMetadata(blobItemInternal.getObjectReplicationMetadata()));\n \n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        return new TaggedBlobItem(filterBlobItem.getContainerName(), filterBlobItem.getName(),\n+            tagMapFromBlobTags(filterBlobItem.getTags()));\n+    }\n+\n+    private static Map<String, String> tagMapFromBlobTags(BlobTags blobTags) {\n+        Map<String, String> tags;\n+        if (blobTags != null && blobTags.getBlobTagSet() != null) {\n+            if (blobTags.getBlobTagSet().size() == 0){\n+                return Collections.emptyMap();\n+            }\n+\n+            tags = new HashMap<>();\n+            for (BlobTag tag : blobTags.getBlobTagSet()) {\n+                tags.put(tag.getKey(), tag.getValue());\n+            }\n+        }\n+        else {\n+            tags = Collections.emptyMap();\n+        }\n+\n+        return tags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8961969c41c2a502cb85291f7e94b2a45d586760"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3041, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}