{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTcwODcz", "number": 15816, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNDo0MjoxOVrOEo3fTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOToxNjo0MlrOEpK1Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMjg3NjMxOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNDo0MjoxOVrOHaNFaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1NTo0MVrOHam1_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzOTQwMQ==", "bodyText": "We should not need to import JUnit packages here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497239401", "createdAt": "2020-09-30T04:42:19Z", "author": {"login": "waynemo"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -9,20 +9,26 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n+import com.azure.communication.administration.models.*;\n import com.azure.communication.common.CommunicationClientCredential;\n import com.azure.communication.common.CommunicationUser;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n import com.azure.core.http.HttpClient;\n import com.azure.core.http.netty.NettyAsyncHttpClientBuilder;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.rest.PagedIterable;\n+import org.junit.jupiter.api.Assertions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2MTQzNg==", "bodyText": "I think you are right, it would have got included while I was testing with assertions.. will remove them", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497661436", "createdAt": "2020-09-30T16:55:41Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -9,20 +9,26 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n+import com.azure.communication.administration.models.*;\n import com.azure.communication.common.CommunicationClientCredential;\n import com.azure.communication.common.CommunicationUser;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n import com.azure.core.http.HttpClient;\n import com.azure.core.http.netty.NettyAsyncHttpClientBuilder;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.rest.PagedIterable;\n+import org.junit.jupiter.api.Assertions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzOTQwMQ=="}, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMjg4MDE1OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNDo0NDoyOFrOHaNHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo1OTo1M1rOHanAkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzOTk2Ng==", "bodyText": "This policy is not needed. Authentication will automatically be handled by the CommunicationClientCredential.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497239966", "createdAt": "2020-09-30T04:44:28Z", "author": {"login": "waynemo"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +114,230 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal\n+        String endpoint = \"https://<RESOURCE_NAME>.communication.azure.com\";\n+        String accessToken = \"SECRET\";\n+\n+        // Create an HttpClient builder of your choice and customize it\n+        HttpClient httpClient = new NettyAsyncHttpClientBuilder().build();\n+\n+        CommunicationClientCredential credential = new CommunicationClientCredential(accessToken);\n+        HttpPipelinePolicy hmacAuthenticationPolicy = new HmacAuthenticationPolicy(credential);\n+\n+        PhoneNumberClient phoneNumberClient = new PhoneNumberClientBuilder()\n+            .endpoint(endpoint)\n+            .credential(credential)\n+            .addPolicy(hmacAuthenticationPolicy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY2NDE0Ng==", "bodyText": "Thanks for pointing out, fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497664146", "createdAt": "2020-09-30T16:59:53Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +114,230 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal\n+        String endpoint = \"https://<RESOURCE_NAME>.communication.azure.com\";\n+        String accessToken = \"SECRET\";\n+\n+        // Create an HttpClient builder of your choice and customize it\n+        HttpClient httpClient = new NettyAsyncHttpClientBuilder().build();\n+\n+        CommunicationClientCredential credential = new CommunicationClientCredential(accessToken);\n+        HttpPipelinePolicy hmacAuthenticationPolicy = new HmacAuthenticationPolicy(credential);\n+\n+        PhoneNumberClient phoneNumberClient = new PhoneNumberClientBuilder()\n+            .endpoint(endpoint)\n+            .credential(credential)\n+            .addPolicy(hmacAuthenticationPolicy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIzOTk2Ng=="}, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMjkxNjIwOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNTowNjoyNlrOHaNc0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzoyMToxN1rOHan3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0NTM5NA==", "bodyText": "Since phoneNumberClient.listPhonePlanGroups returns an Iterable, you should be able to use the for loop on it directly.\nPagedIterable<PhonePlanGroup> pagedIterable = phoneNumberClient.listPhonePlanGroups(countryCode, locale, true);\nfor (PhonePlanGroup phonePlanGroup: pagedIterable) {\n    System.out.println(\"Phone Plan GroupId: \" + phonePlanGroup.getPhonePlanGroupId());\n    System.out.println(\"Phone Plan NumberType: \" + phonePlanGroup.getPhoneNumberType());\n}\n\nWe can do the same for all the other examples instead of collecting to a list first.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497245394", "createdAt": "2020-09-30T05:06:26Z", "author": {"login": "waynemo"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +114,230 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal\n+        String endpoint = \"https://<RESOURCE_NAME>.communication.azure.com\";\n+        String accessToken = \"SECRET\";\n+\n+        // Create an HttpClient builder of your choice and customize it\n+        HttpClient httpClient = new NettyAsyncHttpClientBuilder().build();\n+\n+        CommunicationClientCredential credential = new CommunicationClientCredential(accessToken);\n+        HttpPipelinePolicy hmacAuthenticationPolicy = new HmacAuthenticationPolicy(credential);\n+\n+        PhoneNumberClient phoneNumberClient = new PhoneNumberClientBuilder()\n+            .endpoint(endpoint)\n+            .credential(credential)\n+            .addPolicy(hmacAuthenticationPolicy)\n+            .httpClient(httpClient)\n+            .buildClient();\n+\n+        return phoneNumberClient;\n+    }\n+\n+    /**\n+     * Sample code to get all supported countries\n+     *\n+     * @return supported countries\n+     */\n+    public List<PhoneNumberCountry> getSupportedCountries() {\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<PhoneNumberCountry> phoneNumberCountries = phoneNumberClient\n+                .listAllSupportedCountries(locale)\n+                .stream()\n+                .collect(Collectors.toList());\n+\n+            for (PhoneNumberCountry phoneNumberCountry:\n+                phoneNumberCountries) {\n+                System.out.println(\"Phone Number Country Code: \" + phoneNumberCountry.getCountryCode());\n+                System.out.println(\"Phone Number Country Name: \" + phoneNumberCountry.getLocalizedName());\n+            }\n+\n+            return phoneNumberCountries;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Sample code to get a list of all acquired phone numbers\n+     *\n+     * @return the acquired phone numbers\n+     */\n+    public List<AcquiredPhoneNumber> getAcquiredPhoneNumbers() {\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<AcquiredPhoneNumber> acquiredPhoneNumbers = phoneNumberClient\n+                .listAllPhoneNumbers(locale)\n+                .stream()\n+                .collect(Collectors.toList());\n+\n+            for (AcquiredPhoneNumber acquiredPhoneNumber:\n+                 acquiredPhoneNumbers) {\n+               System.out.println(\"Acquired Phone Number: \" + acquiredPhoneNumber.getPhoneNumber());\n+            }\n+\n+            return acquiredPhoneNumbers;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Sample code to get a list of all phone plan groups\n+     *\n+     * @return phone plans groups\n+     */\n+    public List<PhonePlanGroup> getPhonePlanGroups() {\n+        String countryCode = \"US\";\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<PhonePlanGroup> phonePlanGroups = phoneNumberClient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY3ODEyOA==", "bodyText": "Sure, that makes sense. Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497678128", "createdAt": "2020-09-30T17:21:17Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +114,230 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal\n+        String endpoint = \"https://<RESOURCE_NAME>.communication.azure.com\";\n+        String accessToken = \"SECRET\";\n+\n+        // Create an HttpClient builder of your choice and customize it\n+        HttpClient httpClient = new NettyAsyncHttpClientBuilder().build();\n+\n+        CommunicationClientCredential credential = new CommunicationClientCredential(accessToken);\n+        HttpPipelinePolicy hmacAuthenticationPolicy = new HmacAuthenticationPolicy(credential);\n+\n+        PhoneNumberClient phoneNumberClient = new PhoneNumberClientBuilder()\n+            .endpoint(endpoint)\n+            .credential(credential)\n+            .addPolicy(hmacAuthenticationPolicy)\n+            .httpClient(httpClient)\n+            .buildClient();\n+\n+        return phoneNumberClient;\n+    }\n+\n+    /**\n+     * Sample code to get all supported countries\n+     *\n+     * @return supported countries\n+     */\n+    public List<PhoneNumberCountry> getSupportedCountries() {\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<PhoneNumberCountry> phoneNumberCountries = phoneNumberClient\n+                .listAllSupportedCountries(locale)\n+                .stream()\n+                .collect(Collectors.toList());\n+\n+            for (PhoneNumberCountry phoneNumberCountry:\n+                phoneNumberCountries) {\n+                System.out.println(\"Phone Number Country Code: \" + phoneNumberCountry.getCountryCode());\n+                System.out.println(\"Phone Number Country Name: \" + phoneNumberCountry.getLocalizedName());\n+            }\n+\n+            return phoneNumberCountries;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Sample code to get a list of all acquired phone numbers\n+     *\n+     * @return the acquired phone numbers\n+     */\n+    public List<AcquiredPhoneNumber> getAcquiredPhoneNumbers() {\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<AcquiredPhoneNumber> acquiredPhoneNumbers = phoneNumberClient\n+                .listAllPhoneNumbers(locale)\n+                .stream()\n+                .collect(Collectors.toList());\n+\n+            for (AcquiredPhoneNumber acquiredPhoneNumber:\n+                 acquiredPhoneNumbers) {\n+               System.out.println(\"Acquired Phone Number: \" + acquiredPhoneNumber.getPhoneNumber());\n+            }\n+\n+            return acquiredPhoneNumbers;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Sample code to get a list of all phone plan groups\n+     *\n+     * @return phone plans groups\n+     */\n+    public List<PhonePlanGroup> getPhonePlanGroups() {\n+        String countryCode = \"US\";\n+        String locale = \"en-us\";\n+\n+        try {\n+            PhoneNumberClient phoneNumberClient = createPhoneNumberClient();\n+\n+            List<PhonePlanGroup> phonePlanGroups = phoneNumberClient", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI0NTM5NA=="}, "originalCommit": {"oid": "969036b3ec2e0497b026f37a1840ea6b08f76f40"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjA0NTA2OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOToxNjo0MlrOHarzjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOToxOTo1M1rOHar54g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MjczNA==", "bodyText": "Nit: s/Your/You", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497742734", "createdAt": "2020-09-30T19:16:42Z", "author": {"login": "whisper6284"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +117,218 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35e286993c98a1b758d39ff5ffafd00b06c5e9e2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0NDM1NA==", "bodyText": "Got copied over incorrectly, will fix it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15816#discussion_r497744354", "createdAt": "2020-09-30T19:19:53Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/samples/java/com/azure/communication/administration/ReadmeSamples.java", "diffHunk": "@@ -108,4 +117,218 @@ public void deleteUser() {\n             e.printStackTrace();\n         }\n     }\n+\n+    /**\n+     * Sample code for creating a sync Phone Number Client.\n+     *\n+     * @return the Phone Number Client.\n+     * @throws NoSuchAlgorithmException if Communication Client Credential HMAC not available\n+     * @throws InvalidKeyException if Communication Client Credential access key is not valid\n+     */\n+    public PhoneNumberClient createPhoneNumberClient()\n+        throws NoSuchAlgorithmException, InvalidKeyException {\n+        // Your can find your endpoint and access token from your resource in the Azure Portal", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MjczNA=="}, "originalCommit": {"oid": "35e286993c98a1b758d39ff5ffafd00b06c5e9e2"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 691, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}