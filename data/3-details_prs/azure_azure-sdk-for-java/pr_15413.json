{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMDY5MzYz", "number": 15413, "title": "mgmt update sample for service principal and msi enabled virtual machine", "bodyText": "Remove ManageServicePricipal as it's not supported after removing AuthFile.\nAdd ManageVirtualMachineFromMSIEnabledVirtualMachine as ManagedIdentityCredential supported in azure-identity.", "createdAt": "2020-09-21T06:24:18Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15413", "merged": true, "mergeCommit": {"oid": "1ddbb5b13af238f1dbff1b5213b63df123e3914e"}, "closed": true, "closedAt": "2020-09-22T02:56:08Z", "author": {"login": "xseeseesee"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdK9Qy_AH2gAyNDkwMDY5MzYzOjYxMjI3ZDFiZGNkN2JmZWI4OWM1NWEyOGRhYTdiZjA3Y2U0OGQ1NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdK9iXAgH2gAyNDkwMDY5MzYzOjRjOTA0YWI4N2Q2YzVkODM0YmJlZDkzMDE0MzMyMGM2YjQwYmYwMzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61227d1bdcd7bfeb89c55a28daa7bf07ce48d547", "author": {"user": {"login": "xseeseesee", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/61227d1bdcd7bfeb89c55a28daa7bf07ce48d547", "committedDate": "2020-09-21T06:19:02Z", "message": "Remove sample of ManageServicePricipal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6316e58e8d20dffd25af9e42fc58fcca6662bde1", "author": {"user": {"login": "xseeseesee", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6316e58e8d20dffd25af9e42fc58fcca6662bde1", "committedDate": "2020-09-21T06:21:01Z", "message": "add sample for msi enabled virtual machine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzAzOTk1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15413#pullrequestreview-492303995", "createdAt": "2020-09-21T06:26:38Z", "commit": {"oid": "6316e58e8d20dffd25af9e42fc58fcca6662bde1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyNjozOFrOHVB_iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyNjozOFrOHVB_iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNDc5Mg==", "bodyText": "Remove here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15413#discussion_r491814792", "createdAt": "2020-09-21T06:26:38Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resourcemanager/azure-resourcemanager-samples/src/main/java/com/azure/resourcemanager/compute/samples/ManageVirtualMachineFromMSIEnabledVirtualMachine.java", "diffHunk": "@@ -1,95 +1,94 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n-//\n-//package com.microsoft.azure.management.compute.samples;\n-//\n-//import com.microsoft.azure.AzureEnvironment;\n-//import com.microsoft.azure.credentials.MSICredentials;\n-//import com.microsoft.azure.management.Azure;\n-//import com.microsoft.azure.management.compute.KnownLinuxVirtualMachineImage;\n-//import com.microsoft.azure.management.compute.VirtualMachine;\n-//import com.microsoft.azure.management.compute.VirtualMachineSizeTypes;\n-//import com.microsoft.azure.management.resources.fluentcore.arm.Region;\n-//import com.microsoft.azure.management.samples.Utils;\n-//import com.microsoft.rest.LogLevel;\n-//\n-///**\n-// * Azure Compute sample for managing virtual machine from Managed Service Identity (MSI) enabled virtual machine -\n-// *   - Create a virtual machine using MSI credentials from System assigned or User Assigned MSI enabled VM.\n-// */\n-//public final class ManageVirtualMachineFromMSIEnabledVirtualMachine {\n-//    /**\n-//     * Main entry point.\n-//     *\n-//     * @param args the parameters\n-//     */\n-//    public static void main(String[] args) {\n-//        try {\n-//            final Region region = Region.US_WEST_CENTRAL;\n-//\n-//            // This sample required to be run from a MSI (User Assigned or System Assigned) enabled virtual machine with role\n-//            // based contributor access to the resource group specified as the second command line argument.\n-//            //\n-//            // see https://github.com/Azure-Samples/compute-java-manage-user-assigned-msi-enabled-virtual-machine.git\n-//            //\n-//\n-//            final String usage = \"Usage: mvn clean compile exec:java -Dexec.args=\\\"<subscription-id> <rg-name> [<client-id>]\\\"\";\n-//            if (args.length < 2) {\n-//                throw new IllegalArgumentException(usage);\n-//            }\n-//\n-//            final String subscriptionId = args[0];\n-//            final String resourceGroupName = args[1];\n-//            final String clientId = args.length > 2 ? args[2] : null;\n-//            final String linuxVMName = Utils.createRandomName(\"VM1\");\n-//            final String userName = \"tirekicker\";\n-//            final String password = Utils.password();\n-//\n-//            //=============================================================\n-//            // MSI Authenticate\n-//\n-//            MSICredentials credentials = new MSICredentials(AzureEnvironment.AZURE);\n-//            if (clientId != null) {\n-//                // If User Assigned MSI client id is specified then switch to \"User Assigned MSI\" auth mode\n-//                //\n-//                credentials = credentials.withClientId(clientId);\n-//            }\n-//\n-//            Azure azure = Azure.configure()\n-//                    .withLogLevel(LogLevel.BODY_AND_HEADERS)\n-//                    .authenticate(credentials)\n-//                    .withSubscription(subscriptionId);\n-//\n-//            // Print selected subscription\n-//            System.out.println(\"Selected subscription: \" + azure.subscriptionId());\n-//\n-//            //=============================================================\n-//            // Create a Linux VM using MSI credentials\n-//\n-//            System.out.println(\"Creating a Linux VM using MSI credentials\");\n-//\n-//            VirtualMachine virtualMachine = azure.virtualMachines()\n-//                    .define(linuxVMName)\n-//                    .withRegion(region)\n-//                    .withExistingResourceGroup(resourceGroupName)\n-//                    .withNewPrimaryNetwork(\"10.0.0.0/28\")\n-//                    .withPrimaryPrivateIPAddressDynamic()\n-//                    .withoutPrimaryPublicIPAddress()\n-//                    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n-//                    .withRootUsername(userName)\n-//                    .withRootPassword(password)\n-//                    .withSize(VirtualMachineSizeTypes.STANDARD_DS2_V2)\n-//                    .create();\n-//\n-//            System.out.println(\"Created virtual machine using MSI credentials\");\n-//            Utils.print(virtualMachine);\n-//\n-//        } catch (Exception e) {\n-//            System.out.println(e.getMessage());\n-//            e.printStackTrace();\n-//        }\n-//    }\n-//\n-//    private ManageVirtualMachineFromMSIEnabledVirtualMachine() {\n-//    }\n-//}\n+\n+package com.azure.resourcemanager.compute.samples;\n+\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.identity.ManagedIdentityCredential;\n+import com.azure.identity.ManagedIdentityCredentialBuilder;\n+import com.azure.resourcemanager.Azure;\n+import com.azure.resourcemanager.compute.models.KnownLinuxVirtualMachineImage;\n+import com.azure.resourcemanager.compute.models.VirtualMachine;\n+import com.azure.resourcemanager.resources.fluentcore.arm.Region;\n+import com.azure.resourcemanager.samples.Utils;\n+\n+/**\n+ * Azure Compute sample for managing virtual machine from Managed Service Identity (MSI) enabled virtual machine -\n+ *   - Create a virtual machine using MSI credentials from System assigned or User Assigned MSI enabled VM.\n+ */\n+public final class ManageVirtualMachineFromMSIEnabledVirtualMachine {\n+    /**\n+     * Main entry point.\n+     *\n+     * @param args the parameters\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            final Region region = Region.US_WEST_CENTRAL;\n+\n+            // This sample required to be run from a ManagedIdentityCredential (User Assigned or System Assigned) enabled virtual\n+            // machine with role based contributor access to the resource group specified as the second command line argument.\n+            //\n+            // see https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview\n+            //\n+\n+            final String usage = \"Usage: mvn clean compile exec:java -Dexec.args=\\\"<subscription-id> <rg-name> <client-id>\\\"\";\n+            if (args.length < 2) {\n+                throw new IllegalArgumentException(usage);\n+            }\n+\n+            final String subscriptionId = args[0];\n+            final String resourceGroupName = args[1];\n+            final String clientId = args[2];\n+            final String linuxVMName = \"yourVirtualMachineName\";\n+            final String userName = \"tirekicker\";\n+            final String password = Utils.password();\n+\n+            //=============================================================\n+            // ManagedIdentityCredential Authenticate\n+\n+            ManagedIdentityCredential credential = new ManagedIdentityCredentialBuilder()\n+                .clientId(clientId)\n+                .build();\n+\n+            AzureProfile profile = new AzureProfile(null, subscriptionId, AzureEnvironment.AZURE);\n+\n+            Azure azure = Azure.configure()\n+                    .withLogLevel(HttpLogDetailLevel.BASIC)\n+                    .authenticate(credential, profile)\n+                    .withSubscription(subscriptionId);\n+\n+            // Print selected subscription\n+            System.out.println(\"Selected subscription: \" + azure.subscriptionId());\n+\n+            //=============================================================\n+            // Create a Linux VM using MSI credentials\n+\n+            System.out.println(\"Creating a Linux VM using ManagedIdentityCredential.\");\n+\n+            VirtualMachine virtualMachine = azure.virtualMachines()\n+                    .define(linuxVMName)\n+                    .withRegion(region)\n+                    .withExistingResourceGroup(resourceGroupName)\n+                    .withNewPrimaryNetwork(\"10.0.0.0/28\")\n+                    .withPrimaryPrivateIPAddressDynamic()\n+                    .withoutPrimaryPublicIPAddress()\n+                    .withPopularLinuxImage(KnownLinuxVirtualMachineImage.UBUNTU_SERVER_16_04_LTS)\n+                    .withRootUsername(userName)\n+                    .withRootPassword(password)\n+                    .create();\n+\n+            System.out.println(\"Created virtual machine using ManagedIdentityCredential.\");\n+            Utils.print(virtualMachine);\n+\n+        } catch (Exception e) {\n+            System.out.println(e.getMessage());\n+            e.printStackTrace();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6316e58e8d20dffd25af9e42fc58fcca6662bde1"}, "originalPosition": 182}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e755c1e8464d5d0fd2616e626b55e47b67ef74", "author": {"user": {"login": "xseeseesee", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d3e755c1e8464d5d0fd2616e626b55e47b67ef74", "committedDate": "2020-09-21T06:29:26Z", "message": "make clientId optional for ManagedIdentityCredential in the sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c904ab87d6c5d834bbed930143320c6b40bf037", "author": {"user": {"login": "xseeseesee", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4c904ab87d6c5d834bbed930143320c6b40bf037", "committedDate": "2020-09-21T06:38:13Z", "message": "update in SAMPLE.md and remove try-catch block"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3428, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}