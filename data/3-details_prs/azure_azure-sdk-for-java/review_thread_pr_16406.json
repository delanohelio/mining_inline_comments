{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDIwNDk4", "number": 16406, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNToyMzo1MlrOEuk1cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNToyMzo1MlrOEuk1cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjczNDU4OnYy", "diffSide": "LEFT", "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNToyMzo1MlrOHjE0Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODoyNzoyN1rOHjLmng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0MTE1NA==", "bodyText": "Is there no exception thrown anymore? What happens if the timeout expires?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16406#discussion_r506541154", "createdAt": "2020-10-16T15:23:52Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableClient.java", "diffHunk": "@@ -413,7 +409,6 @@ public void deleteEntity(String partitionKey, String rowKey, String eTag) {\n      *                                    table, or if {@code eTag} is not {@code null} and the existing entity's eTag\n      *                                    does not match that of the provided entity.\n      * @throws IllegalArgumentException if the provided partition key or row key are {@code null} or empty.\n-     * @throws RuntimeException if the provided timeout expires.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7a70a67735d675944d2513c875ab567e1770976"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1MjMxOA==", "bodyText": "Right, so this is interesting. In Tables, operations that work at the Entity level accept a \"timeout\" parameter that can be sent to the service, where as Table level operations do not. The server also enforces certain limitations on the timeout value itself, such it will be capped to a max value that varies depending on the operation. If the server-side timeout expires, the server will return an error. I haven't seen this happen in practice and it's not documented specifically in the REST api docs or swagger so I'm not sure what error code is returned in this case, vs. other failures.\nI will have to do some research and then document the correct type of exception the customer receives when the server-side timeout expires, but I'll file a separate issue for that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16406#discussion_r506652318", "createdAt": "2020-10-16T18:27:27Z", "author": {"login": "bsiegel"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableClient.java", "diffHunk": "@@ -413,7 +409,6 @@ public void deleteEntity(String partitionKey, String rowKey, String eTag) {\n      *                                    table, or if {@code eTag} is not {@code null} and the existing entity's eTag\n      *                                    does not match that of the provided entity.\n      * @throws IllegalArgumentException if the provided partition key or row key are {@code null} or empty.\n-     * @throws RuntimeException if the provided timeout expires.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0MTE1NA=="}, "originalCommit": {"oid": "e7a70a67735d675944d2513c875ab567e1770976"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}