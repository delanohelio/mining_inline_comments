{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTk4NTM2", "number": 12615, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozNjo1NFrOEJ3w4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxNjo1N1rOEKMvUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg2Mjc0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozNjo1NFrOGqmLeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozNjo1NFrOGqmLeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODkwNQ==", "bodyText": "This should be removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447318905", "createdAt": "2020-06-29T23:36:54Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -312,15 +312,17 @@ public String getEntityPath() {\n      * @throws NullPointerException if {@code lockToken} is null.\n      * @throws UnsupportedOperationException if the receiver was opened in {@link ReceiveMode#RECEIVE_AND_DELETE}\n      * mode.\n-     * @throws IllegalArgumentException if {@link MessageLockToken#getLockToken()} returns a null lock token.\n+     * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n      */\n-    public Mono<Void> complete(MessageLockToken lockToken) {\n-        if (lockToken instanceof ServiceBusReceivedMessage) {\n+    public Mono<Void> complete(String lockToken) {\n+        /*if (lockToken instanceof ServiceBusReceivedMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baad98a9ac5e3858f271c19762b596e6c595c14"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg2NjMzOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozODozNVrOGqmNjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozODozNVrOGqmNjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxOTQzNg==", "bodyText": "Remove dead code.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447319436", "createdAt": "2020-06-29T23:38:35Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1206,40 +1200,33 @@ private boolean isManagementToken(String lockToken) {\n         return managementNodeLocks.contains(lockToken);\n     }\n \n-    private Mono<Void> updateDisposition(MessageLockToken message, DispositionStatus dispositionStatus,\n+    private Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus,\n         String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify,\n         String sessionId, ServiceBusTransactionContext transactionContext) {\n \n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, dispositionStatus.getValue())));\n-        } else if (Objects.isNull(message)) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage' cannot be null.\"));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n+        } else if (Objects.isNull(lockToken)) {\n+            return monoError(logger, new NullPointerException(\"'lockToken' cannot be null.\"));\n+        } else if (lockToken.isEmpty()) {\n+            return monoError(logger, new IllegalArgumentException(\"'lockToken' cannot be empty.\"));\n         }\n \n         if (receiverOptions.getReceiveMode() != ReceiveMode.PEEK_LOCK) {\n             return Mono.error(logger.logExceptionAsError(new UnsupportedOperationException(String.format(\n                 \"'%s' is not supported on a receiver opened in ReceiveMode.RECEIVE_AND_DELETE.\", dispositionStatus))));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n         }\n \n-        final String lockToken = message.getLockToken();\n         final String sessionIdToUse;\n-        if (message instanceof ServiceBusReceivedMessage) {\n+        /*if (message instanceof ServiceBusReceivedMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baad98a9ac5e3858f271c19762b596e6c595c14"}, "originalPosition": 377}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg3NTk5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0MzoxM1rOGqmTCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0MzoxM1rOGqmTCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDg0Mw==", "bodyText": "You don't need to mock this anymore you can set the string and return it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447320843", "createdAt": "2020-06-29T23:43:13Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java", "diffHunk": "@@ -72,7 +72,7 @@ void setup() {\n         when(asyncClient.getReceiverOptions()).thenReturn(new ReceiverOptions(ReceiveMode.PEEK_LOCK, 1,\n             maxAutoLockRenewalDuration));\n \n-        when(messageLockToken.getLockToken()).thenReturn(LOCK_TOKEN);\n+        when(messageLockToken).thenReturn(LOCK_TOKEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1baad98a9ac5e3858f271c19762b596e6c595c14"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI4NDk1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxMzowMVrOGrGe2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxMzowMVrOGrGe2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODE1Mg==", "bodyText": "The check doesn't match the documentation. This throws a NPE rather than IllegalArgumentExceptionwhen lockToken is null.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447848152", "createdAt": "2020-06-30T17:13:01Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1014,34 +1010,26 @@ public String getEntityPath() {\n      * @throws UnsupportedOperationException if the receiver was opened in {@link ReceiveMode#RECEIVE_AND_DELETE}\n      *     mode.\n      * @throws IllegalStateException if the receiver is a session receiver.\n-     * @throws IllegalArgumentException if {@link MessageLockToken#getLockToken()} returns an empty value.\n+     * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n      */\n-    public Mono<Instant> renewMessageLock(MessageLockToken lockToken) {\n+    public Mono<Instant> renewMessageLock(String lockToken) {\n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, \"renewMessageLock\")));\n         } else if (Objects.isNull(lockToken)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b"}, "originalPosition": 308}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI4NjU2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxMzozMFrOGrGf6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyODo1N1rOGrHH1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODQyNg==", "bodyText": "The check doesn't match the documentation. This throws a NPE rather than IllegalArgumentExceptionwhen lockToken is null.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447848426", "createdAt": "2020-06-30T17:13:30Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1206,40 +1194,26 @@ private boolean isManagementToken(String lockToken) {\n         return managementNodeLocks.contains(lockToken);\n     }\n \n-    private Mono<Void> updateDisposition(MessageLockToken message, DispositionStatus dispositionStatus,\n+    private Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus,\n         String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify,\n         String sessionId, ServiceBusTransactionContext transactionContext) {\n \n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, dispositionStatus.getValue())));\n-        } else if (Objects.isNull(message)) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage' cannot be null.\"));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n+        } else if (Objects.isNull(lockToken)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b"}, "originalPosition": 357}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1ODY0NA==", "bodyText": "Yes , I realize that. Thanks. I will change documentation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447858644", "createdAt": "2020-06-30T17:28:57Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1206,40 +1194,26 @@ private boolean isManagementToken(String lockToken) {\n         return managementNodeLocks.contains(lockToken);\n     }\n \n-    private Mono<Void> updateDisposition(MessageLockToken message, DispositionStatus dispositionStatus,\n+    private Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus,\n         String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify,\n         String sessionId, ServiceBusTransactionContext transactionContext) {\n \n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, dispositionStatus.getValue())));\n-        } else if (Objects.isNull(message)) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage' cannot be null.\"));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n+        } else if (Objects.isNull(lockToken)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODQyNg=="}, "originalCommit": {"oid": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b"}, "originalPosition": 357}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI5OTM4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxNjo1N1rOGrGn9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoxNjo1N1rOGrGn9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MDQ4Ng==", "bodyText": "This isn't correct? It should be one or the other.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447850486", "createdAt": "2020-06-30T17:16:57Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java", "diffHunk": "@@ -56,9 +56,10 @@ public static void main(String[] args) {\n                 boolean isSuccessfullyProcessed = processMessage(message);\n \n                 if (isSuccessfullyProcessed) {\n-                    receiver.complete(message);\n+                    receiver.complete(message.getLockToken());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3697, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}