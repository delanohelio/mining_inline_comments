{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyODI0NDM2", "number": 17633, "title": "[service bus] Update ServiceBusProcessor sample to demo how to write a long-running processor.", "bodyText": "As part of the work to add in a ServiceBusErrorContext we also want to showcase how users can tease out the various errors that are reported.\nThis PR updates the current processor sample to angle more towards how to keep a ServiceBusProcessor running long-term, including handling certain errors that might be fatal (it's always up to the user to choose to terminate the processor).\nFix for #17490", "createdAt": "2020-11-18T01:36:52Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633", "merged": true, "mergeCommit": {"oid": "3be698ad9f0eaf22222a89ddaa68ed1965d1382f"}, "closed": true, "closedAt": "2020-11-18T22:21:35Z", "author": {"login": "richardpark-msft"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddj6vygH2gAyNTIyODI0NDM2OjA4Y2YyMThkZGY0NTU0ZDcwODc0ODMwY2E1NDUwNzkxOWJhYTRiNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd1i49gH2gAyNTIyODI0NDM2OjRiMWE3YTJhOTYzMmZhZDM2ZWNjMzM4NGQ4NGI2M2FmODA2OGJhNzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48", "author": {"user": {"login": "richardpark-msft", "name": "Richard Park"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/08cf218ddf4554d70874830ca54507919baa4b48", "committedDate": "2020-11-18T01:31:53Z", "message": "Updating the sample to show a bit more about how to write a long-running processor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTcwMTY1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#pullrequestreview-532970165", "createdAt": "2020-11-18T01:55:50Z", "commit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1MVrOH1SxsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1OVrOH1Sx2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NDIwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reason, errorContext.getException().toString());\n          \n          \n            \n                                    reason, errorContext.getException().getMessage());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#discussion_r525644209", "createdAt": "2020-11-18T01:55:51Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "diffHunk": "@@ -24,18 +25,40 @@ public static void main(String[] args) throws InterruptedException {\n             System.out.println(\"Received message \" + message.getBody().toString());\n         };\n \n+        final CountDownLatch countdownLatch = new CountDownLatch(1);\n+\n         // Consumer that handles any errors that occur when receiving messages\n         Consumer<ServiceBusErrorContext> errorHandler = errorContext -> {\n-            System.out.println(\"Error when receiving messages \" + errorContext.getException().getMessage());\n             if (errorContext.getException() instanceof ServiceBusException) {\n-                ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n-                System.out.printf(\"Error source %s, reason %s\\n\", serviceBusException.getErrorSource(),\n-                    serviceBusException.getReason());\n+                final ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n+                final ServiceBusFailureReason reason = serviceBusException.getReason();\n+\n+                if (reason == ServiceBusFailureReason.MESSAGING_ENTITY_DISABLED\n+                    || reason == ServiceBusFailureReason.MESSAGING_ENTITY_NOT_FOUND\n+                    || reason == ServiceBusFailureReason.UNAUTHORIZED) {\n+                    System.out.printf(\"An unrecoverable error occurred. Stopping processing with reason %s: %s\\n\",\n+                        reason, serviceBusException.toString());\n+                    countdownLatch.countDown();\n+                } else if (reason == ServiceBusFailureReason.MESSAGE_LOCK_LOST) {\n+                    System.out.printf(\"Message lock lost for message: %s\", errorContext.getException().toString());\n+                } else if (reason == ServiceBusFailureReason.SERVICE_BUSY) {\n+                    try {\n+                        // choosing an arbitrary amount of time to wait.\n+                        Thread.sleep(1000);\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                } else {\n+                    System.out.printf(\"Error source %s, reason %s, message: %s\\n\", serviceBusException.getErrorSource(),\n+                        reason, errorContext.getException().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NDI0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reason, serviceBusException.toString());\n          \n          \n            \n                                    reason, serviceBusException.getMessage());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#discussion_r525644249", "createdAt": "2020-11-18T01:55:59Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "diffHunk": "@@ -24,18 +25,40 @@ public static void main(String[] args) throws InterruptedException {\n             System.out.println(\"Received message \" + message.getBody().toString());\n         };\n \n+        final CountDownLatch countdownLatch = new CountDownLatch(1);\n+\n         // Consumer that handles any errors that occur when receiving messages\n         Consumer<ServiceBusErrorContext> errorHandler = errorContext -> {\n-            System.out.println(\"Error when receiving messages \" + errorContext.getException().getMessage());\n             if (errorContext.getException() instanceof ServiceBusException) {\n-                ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n-                System.out.printf(\"Error source %s, reason %s\\n\", serviceBusException.getErrorSource(),\n-                    serviceBusException.getReason());\n+                final ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n+                final ServiceBusFailureReason reason = serviceBusException.getReason();\n+\n+                if (reason == ServiceBusFailureReason.MESSAGING_ENTITY_DISABLED\n+                    || reason == ServiceBusFailureReason.MESSAGING_ENTITY_NOT_FOUND\n+                    || reason == ServiceBusFailureReason.UNAUTHORIZED) {\n+                    System.out.printf(\"An unrecoverable error occurred. Stopping processing with reason %s: %s\\n\",\n+                        reason, serviceBusException.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDg1NDMx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#pullrequestreview-533485431", "createdAt": "2020-11-18T14:13:58Z", "commit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477e88c27dc4b98467f55d3477fbf21f3b31ad21", "author": {"user": {"login": "richardpark-msft", "name": "Richard Park"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/477e88c27dc4b98467f55d3477fbf21f3b31ad21", "committedDate": "2020-11-18T17:43:53Z", "message": "Update sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366faa180947a854dbb3e7bbd14a5d8004e3521d", "author": {"user": {"login": "richardpark-msft", "name": "Richard Park"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/366faa180947a854dbb3e7bbd14a5d8004e3521d", "committedDate": "2020-11-18T17:44:02Z", "message": "Update sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzM3OTY2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#pullrequestreview-533737966", "createdAt": "2020-11-18T18:06:11Z", "commit": {"oid": "366faa180947a854dbb3e7bbd14a5d8004e3521d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b1a7a2a9632fad36ecc3384d84b63af8068ba78", "author": {"user": {"login": "richardpark-msft", "name": "Richard Park"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b1a7a2a9632fad36ecc3384d84b63af8068ba78", "committedDate": "2020-11-18T22:04:07Z", "message": "kick CI"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 45, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}