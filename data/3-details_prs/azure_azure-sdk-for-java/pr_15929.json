{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTc2NTc1", "number": 15929, "title": "Update ContinuablePagedFluxCore Page Retrieving Logic", "bodyText": "This PR updates the page retrieving logic of ContinuablePagedFluxCore.\nPreviously, it used Reactor's concatWith recursively, this functioned correctly but had the unforeseen side affect of which each page retrieval Reactor would instantiate an internal buffer with length + 1. When dealing with restrictive memory scenarios and a large page count this could result in an OutOfMemoryError.\nNow, it uses Reactor's expand functionality, which is loosely akin to a do/while loop that doesn't terminate until the do function returns a completion signal (either an empty Mono/Flux or an exception). This doesn't have the same side affects as the recursive concatWith where it needs to continually increment an internal buffer for each page retrieval, leading to more consistent memory usage with less overall spike and smaller GCs.", "createdAt": "2020-10-05T16:33:10Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15929", "merged": true, "mergeCommit": {"oid": "1e9c9a92b48c891224f03631cb317cd66ddac9c7"}, "closed": true, "closedAt": "2020-10-05T18:53:08Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOuHZKgH2gAyNDk3OTc2NTc1OmUwZDE4ZDM4MzU1YzQ5YmMwNWIzZmRlNzQyNzIxMzM1NzQ3MDE5Y2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPm-bmgFqTUwMjI1NzM2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0d18d38355c49bc05b3fde742721335747019cc", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0d18d38355c49bc05b3fde742721335747019cc", "committedDate": "2020-10-02T22:55:53Z", "message": "Use expand instead of concatWith for PagedFlux page iteration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf00520047d2cace11f93d30267b17e02d25823", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/acf00520047d2cace11f93d30267b17e02d25823", "committedDate": "2020-10-02T23:09:57Z", "message": "Changed to expand deep and added an initial capacity hint of 4 to reduce the size of internal buffers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b1124a95662a561fc65b82ecc38411f98998aa8", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b1124a95662a561fc65b82ecc38411f98998aa8", "committedDate": "2020-10-03T00:19:39Z", "message": "Merge branch 'master' into AzCore_InvestigateMemoryLeaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a", "committedDate": "2020-10-03T00:32:09Z", "message": "Change back to expand"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjM2OTU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15929#pullrequestreview-502236955", "createdAt": "2020-10-05T16:43:21Z", "commit": {"oid": "26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0MzoyMVrOHclTng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0MzoyMVrOHclTng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMzQwNg==", "bodyText": "Any reason for setting this to 4 instead of 1? Probably adding a comment to explain why 4 was chosen would help.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15929#discussion_r499733406", "createdAt": "2020-10-05T16:43:21Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/paging/ContinuablePagedFluxCore.java", "diffHunk": "@@ -156,23 +152,25 @@ public void subscribe(CoreSubscriber<? super T> coreSubscriber) {\n      * @param state the state to be used across multiple Page Retriever Function calls\n      * @param pageRetriever the Page Retriever Function\n      * @param pageSize the preferred page size\n-     * @param <C> the type of Continuation token\n-     * @param <T> The type of items in a {@link ContinuablePage}\n-     * @param <P> The {@link ContinuablePage} holding items of type {@code T}\n      * @return a Flux of {@link ContinuablePage}\n      */\n-    private static <C, T, P extends ContinuablePage<C, T>> Flux<P> concatFluxOfPage(ContinuationState<C> state,\n-        PageRetriever<C, P> pageRetriever, Integer pageSize) {\n+    private Flux<P> retrievePages(ContinuationState<C> state, PageRetriever<C, P> pageRetriever, Integer pageSize) {\n+        return retrievePage(state, pageRetriever, pageSize)\n+            .expand(page -> {\n+                state.setLastContinuationToken(page.getContinuationToken());\n+                return Flux.defer(() -> retrievePage(state, pageRetriever, pageSize));\n+            }, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d05ab4cdbc492698a4a8ac04cbbc0bbea23a2044", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d05ab4cdbc492698a4a8ac04cbbc0bbea23a2044", "committedDate": "2020-10-05T16:59:22Z", "message": "Added documentation explaining why 4 was chosen as expand's second parameter value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjU3MzYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15929#pullrequestreview-502257361", "createdAt": "2020-10-05T17:10:20Z", "commit": {"oid": "26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMDoyMFrOHcmPHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMDoyMFrOHcmPHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0ODYzOA==", "bodyText": "I think it makes no difference in our case; i.e. storing the continuation-token before we gave the page to the user (i.e. in doOnNext immediately after call to \"retrievePage\") vs storing it after user consumes the page (inside expand).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15929#discussion_r499748638", "createdAt": "2020-10-05T17:10:20Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/paging/ContinuablePagedFluxCore.java", "diffHunk": "@@ -156,23 +152,25 @@ public void subscribe(CoreSubscriber<? super T> coreSubscriber) {\n      * @param state the state to be used across multiple Page Retriever Function calls\n      * @param pageRetriever the Page Retriever Function\n      * @param pageSize the preferred page size\n-     * @param <C> the type of Continuation token\n-     * @param <T> The type of items in a {@link ContinuablePage}\n-     * @param <P> The {@link ContinuablePage} holding items of type {@code T}\n      * @return a Flux of {@link ContinuablePage}\n      */\n-    private static <C, T, P extends ContinuablePage<C, T>> Flux<P> concatFluxOfPage(ContinuationState<C> state,\n-        PageRetriever<C, P> pageRetriever, Integer pageSize) {\n+    private Flux<P> retrievePages(ContinuationState<C> state, PageRetriever<C, P> pageRetriever, Integer pageSize) {\n+        return retrievePage(state, pageRetriever, pageSize)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26543a6f7ea580b6325e23ccbf422eb9ce8d1b7a"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2237, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}