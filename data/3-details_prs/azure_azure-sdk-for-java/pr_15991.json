{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NjgyMjU2", "number": 15991, "title": "ConnectionStateListener change", "bodyText": "This PR is mostly a duplicate of ConnectionStateListener change incuded in PR #14697 with few differences.\nImplementation:\nEach RntbdServiceEndpoint has a RntbdConnectionStateListener to keep tracking the partitionKeyRangeIdentity sets. New partitionKeyRangeIdentity will be added when RntbdServiceEndpoint.request() called.\nWhen detecting a server is going down, we will remove all the effected PartitionKeyRangeIdentity from gateway address cache. Currently, only ClosedChannelException will trigger onConnectionEvent since this is more sure as a signal the server is going down.\nWorkflow:\nThree major workflows could be triggered.\n\n\nServer starts a graceful connection closure. (FIN)\nNormal netty close channle flow will be triggered. (closeFuture, inactive, unregister). RntbdRequestManager will complete all pending requests for the channel with ClosedChannelException.\n\n\nServer ungracefully close a connection (RST).\nThis will trigger netty exceptionCaught() flow. 'RntbdRequestManager.exceptionCaught()` will be called, and complete all pending requests for the channel with IOException. Channel will be closed.\n\n\nWhen the server down, client trying to start a new connection:\nEventually get ConnectTimeOutException\n\n\nTest:\nTest33:\nDid TCP packets capture for package upgrade and manually retart VM. Based on the tcp traces, the first and third workflow will be triggered.\nTest Results from benchmark run:\nPending\nTest Results from CTL run:\nPending", "createdAt": "2020-10-06T16:29:47Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991", "merged": true, "mergeCommit": {"oid": "f0445e4ada1629e52037420e6dc52c109581397b"}, "closed": true, "closedAt": "2020-10-21T22:51:36Z", "author": {"login": "xinlian12"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP6JRLgH2gAyNDk4NjgyMjU2Ojg1MGU3MThhMDk5NjdhMDJlNzM5MDY4OGJjY2EwODg4NWM3YTk2YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTyKCmgH2gAyNDk4NjgyMjU2OjE2Njk0N2E5ZTdjYzk5ZGM5YTQwODExYTNmNzA2OTc0MmZhZWEwNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "850e718a09967a02e7390688bcca08885c7a96c3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/850e718a09967a02e7390688bcca08885c7a96c3", "committedDate": "2020-10-06T15:30:43Z", "message": "ConnectionStateListener change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49b62d6ef3d36ed3b3e0a56d5366ef3ac7fe0a4a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/49b62d6ef3d36ed3b3e0a56d5366ef3ac7fe0a4a", "committedDate": "2020-10-06T17:31:45Z", "message": "clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c38d31c4ec7c5251cfabb9fb5f281c58b99baad8", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c38d31c4ec7c5251cfabb9fb5f281c58b99baad8", "committedDate": "2020-10-06T18:27:18Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjIxMTU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#pullrequestreview-503221159", "createdAt": "2020-10-06T17:56:36Z", "commit": {"oid": "49b62d6ef3d36ed3b3e0a56d5366ef3ac7fe0a4a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo1NjozNlrOHdTe1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0NDo0NlrOHdVT7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4OTk0Mg==", "bodyText": "We should mention this default value in the getter and setter", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r500489942", "createdAt": "2020-10-06T17:56:36Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -32,6 +33,7 @@\n      * Constructor\n      */\n     public DirectConnectionConfig() {\n+        this.connectionEndpointRediscoveryEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49b62d6ef3d36ed3b3e0a56d5366ef3ac7fe0a4a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNzEyMQ==", "bodyText": "Why are we removing this ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r500517121", "createdAt": "2020-10-06T18:39:57Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RequestTimeline.java", "diffHunk": "@@ -157,13 +157,11 @@ public String toString() {\n         @JsonIgnore\n         private final Duration duration;\n \n-        @JsonSerialize(using = ToStringSerializer.class)\n-        private final long durationInMicroSec;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38d31c4ec7c5251cfabb9fb5f281c58b99baad8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxOTkxOQ==", "bodyText": "This header looks different from our other headers.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r500519919", "createdAt": "2020-10-06T18:44:46Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdConnectionEvent.java", "diffHunk": "@@ -0,0 +1,10 @@\n+//------------------------------------------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38d31c4ec7c5251cfabb9fb5f281c58b99baad8"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a", "committedDate": "2020-10-06T19:02:13Z", "message": "resolve comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTc5MjY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#pullrequestreview-505179264", "createdAt": "2020-10-08T21:28:40Z", "commit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyODo0MFrOHexDig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzo0MDoyMFrOHe0kdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMzA1MA==", "bodyText": "rolling upgrade, replica, etc, are internal implementation details of the service.\nI wouldn't include the details in the public javadoc.\nhow about this:\nThe connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that may occur during maintenance operations.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502023050", "createdAt": "2020-10-08T21:28:40Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -40,6 +43,47 @@ public DirectConnectionConfig() {\n         this.requestTimeout = DEFAULT_REQUEST_TIMEOUT;\n     }\n \n+    /**\n+     * Gets a value indicating whether Direct TCP connection endpoint rediscovery is enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that are likely\n+     * to occur:\n+     * <ul>\n+     * <li>During rolling upgrades of a Cosmos instance or\n+     * <li>When a backend node is being decommissioned or restarted (e.g., to restart or remove an unhealthy replica.)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyMzE2Nw==", "bodyText": "ditto as above on the javadoc.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502023167", "createdAt": "2020-10-08T21:28:55Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -40,6 +43,47 @@ public DirectConnectionConfig() {\n         this.requestTimeout = DEFAULT_REQUEST_TIMEOUT;\n     }\n \n+    /**\n+     * Gets a value indicating whether Direct TCP connection endpoint rediscovery is enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that are likely\n+     * to occur:\n+     * <ul>\n+     * <li>During rolling upgrades of a Cosmos instance or\n+     * <li>When a backend node is being decommissioned or restarted (e.g., to restart or remove an unhealthy replica.)\n+     * </ul>\n+     *\n+     * By default, connection endpoint rediscovery is enabled.\n+     *\n+     * @return {@code true} if Direct TCP connection endpoint rediscovery is enabled; {@code false} otherwise.\n+     */\n+    public boolean isConnectionEndpointRediscoveryEnabled() {\n+        return this.connectionEndpointRediscoveryEnabled;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether Direct TCP connection endpoint rediscovery should be enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that are likely\n+     * to occur:\n+     * <ul>\n+     * <li>During rolling upgrades of a Cosmos instance or\n+     * <li>When a backend node is being decommissioned or restarted (e.g., to restart or remove an unhealthy replica.)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAyOTYwMQ==", "bodyText": "can we ever hit this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502029601", "createdAt": "2020-10-08T21:43:26Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/AddressResolver.java", "diffHunk": "@@ -62,6 +64,11 @@ public void initializeCaches(\n         this.collectionRoutingMapCache = collectionRoutingMapCache;\n     }\n \n+    @Override\n+    public void remove(RxDocumentServiceRequest request, Set<PartitionKeyRangeIdentity> partitionKeyRangeIdentitySet) {\n+        throw new NotImplementedException(\"remove() is not supported in AddressResolver\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTU4OA==", "bodyText": "please add this to diagnostics similar to this PR:\n#15738", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502031588", "createdAt": "2020-10-08T21:47:54Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -300,6 +369,9 @@ private void throwIfClosed() {\n         @JsonProperty()\n         private final Duration connectionAcquisitionTimeout;\n \n+        @JsonProperty()\n+        private final boolean connectionEndpointRediscoveryEnabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzMTkyMQ==", "bodyText": "why is this removed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502031921", "createdAt": "2020-10-08T21:48:48Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -525,7 +599,6 @@ public String toString() {\n          *   \"maxRequestsPerChannel\": 30,\n          *   \"maxConcurrentRequestsPerEndpointOverride\": 500,\n          *   \"receiveHangDetectionTime\": \"PT1M5S\",\n-         *   \"requestExpiryInterval\": \"PT5S\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 235}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA2NzYxNA==", "bodyText": "do we translate ChannelAcquisitionException to GoneException?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502067614", "createdAt": "2020-10-08T23:12:52Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelPool.java", "diffHunk": "@@ -123,18 +121,18 @@\n         new ClosedChannelException(), RntbdClientChannelPool.class, \"acquire\");\n \n     private static final IllegalStateException POOL_CLOSED_ON_ACQUIRE = ThrowableUtil.unknownStackTrace(\n-        new StacklessIllegalStateException(\"service endpoint was closed while acquiring a channel\"),\n+        new ChannelAcquisitionException(\"service endpoint was closed while acquiring a channel\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA2ODkxMQ==", "bodyText": "any reason this is preferred over cause instance of ClosedChannelException ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502068911", "createdAt": "2020-10-08T23:14:56Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdConnectionStateListener.java", "diffHunk": "@@ -0,0 +1,166 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.implementation.GoneException;\n+import com.azure.cosmos.implementation.RxDocumentServiceRequest;\n+import com.azure.cosmos.implementation.directconnectivity.IAddressResolver;\n+import com.azure.cosmos.implementation.routing.PartitionKeyRangeIdentity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.nio.channels.ClosedChannelException;\n+import java.time.Instant;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static com.azure.cosmos.implementation.guava25.base.Preconditions.checkNotNull;\n+\n+public class RntbdConnectionStateListener {\n+    // region Fields\n+\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdConnectionStateListener.class);\n+\n+    private final IAddressResolver addressResolver;\n+    private final RntbdEndpoint endpoint;\n+    private final Set<PartitionKeyRangeIdentity> partitionAddressCache;\n+    private final AtomicBoolean updatingAddressCache = new AtomicBoolean(false);\n+\n+    // endregion\n+\n+    // region Constructors\n+\n+    public RntbdConnectionStateListener(final IAddressResolver addressResolver, final RntbdEndpoint endpoint) {\n+        this.addressResolver = checkNotNull(addressResolver, \"expected non-null addressResolver\");\n+        this.endpoint = checkNotNull(endpoint, \"expected non-null endpoint\");\n+        this.partitionAddressCache = ConcurrentHashMap.newKeySet();\n+    }\n+\n+    // endregion\n+\n+    // region Methods\n+\n+    public void onException(final RxDocumentServiceRequest request, Throwable exception) {\n+        checkNotNull(request, \"expect non-null request\");\n+        checkNotNull(exception, \"expect non-null exception\");\n+\n+        if (exception instanceof GoneException) {\n+            final Throwable cause = exception.getCause();\n+\n+            if (cause != null) {\n+\n+                // GoneException was produced by the client, not the server\n+                //\n+                // This could occur for example:\n+                //\n+                // * an operation fails due to an IOException which indicates a connection reset by the server,\n+                // * a channel closes unexpectedly because the server stopped taking requests, or\n+                // * an error was detected by the transport client (e.g., IllegalStateException)\n+                // * a request timed out in pending acquisition queue\n+                // * a request failed fast in admission control layer due to high load\n+                // * channel connect timed out\n+                //\n+                // Currently, only ClosedChannelException will raise onConnectionEvent since it is more sure of a signal the server is going down.\n+\n+                if (cause instanceof IOException) {\n+                    final Class<?> type = cause.getClass();\n+\n+                    if (type == ClosedChannelException.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA2OTU2Mg==", "bodyText": "why? is this related to this PR? or an unrelated bug?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502069562", "createdAt": "2020-10-08T23:16:00Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequest.java", "diffHunk": "@@ -54,7 +55,7 @@ public static RntbdRequest decode(final ByteBuf in) {\n             throw new IllegalStateException(reason);\n         }\n \n-        final int start = in.readerIndex();\n+        final int start = in.writerIndex();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA3MDI3Mg==", "bodyText": "why flush is required here? I don't think this is in the scope of the connection listener. am I right?\nplease undo this if unrelated to this PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502070272", "createdAt": "2020-10-08T23:17:11Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -506,7 +506,7 @@ public void write(final ChannelHandlerContext context, final Object message, fin\n \n         if (message == RntbdHealthCheckRequest.MESSAGE) {\n \n-            context.write(RntbdHealthCheckRequest.MESSAGE, promise).addListener(completed -> {\n+            context.writeAndFlush(RntbdHealthCheckRequest.MESSAGE, promise).addListener(completed -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDYzMQ==", "bodyText": "RntbdConnectionStateListener::partitionAddressCache  is a local cache and can be stale. as a result of that RntbdConnectionStateListener may remove addresses of unrelated pkranges causing unnecessary address refresh.\nConsider this scenario:\n\nPKR1, PKR2, PKR3 are hosted on the same physical node.\nrequest1 with PKR1, request2 with PKR2, and request3 with PKR3 are sent and as a result RntbdConnectionStateListener:partitionAddressCache is populated with PKR1, PKR2, and PKR3.\ndue to  partition movement PKR1 moves out of the physical node, but PKR2 and PKR3 stay on the node.\nnow the node hosting PKR2 and PKR3 shuts down.\nRntbdConnectionStateListener thinks PKR1 is still on this physical node, and hence will remove addresses of PKR1, PKR2, and PKR3. But PKR1 addresses shouldn't have been removed!!.\nthis will result in unnecessary address refresh for PKR1.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r502080631", "createdAt": "2020-10-08T23:40:20Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdConnectionStateListener.java", "diffHunk": "@@ -0,0 +1,166 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.implementation.GoneException;\n+import com.azure.cosmos.implementation.RxDocumentServiceRequest;\n+import com.azure.cosmos.implementation.directconnectivity.IAddressResolver;\n+import com.azure.cosmos.implementation.routing.PartitionKeyRangeIdentity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.nio.channels.ClosedChannelException;\n+import java.time.Instant;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static com.azure.cosmos.implementation.guava25.base.Preconditions.checkNotNull;\n+\n+public class RntbdConnectionStateListener {\n+    // region Fields\n+\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdConnectionStateListener.class);\n+\n+    private final IAddressResolver addressResolver;\n+    private final RntbdEndpoint endpoint;\n+    private final Set<PartitionKeyRangeIdentity> partitionAddressCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a8bcccacfb0528d426ae1adc3c2557ee622c78b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a8bcccacfb0528d426ae1adc3c2557ee622c78b", "committedDate": "2020-10-09T19:46:59Z", "message": "Merge branch 'master' into ConnectionStateListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc29d6d0d74e9c8ce4dcb974b4f83d5d26f6a62", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fcc29d6d0d74e9c8ce4dcb974b4f83d5d26f6a62", "committedDate": "2020-10-12T16:47:50Z", "message": "revert back change not related to ConnectionStateListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "718c7546afea371b44028b242af8e9906d4a76f8", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/718c7546afea371b44028b242af8e9906d4a76f8", "committedDate": "2020-10-12T16:48:38Z", "message": "Merge branch 'master' into ConnectionStateListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9af7f18e93688c3f8263a5838fe183c0381b93", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/df9af7f18e93688c3f8263a5838fe183c0381b93", "committedDate": "2020-10-12T18:17:50Z", "message": "resolve comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d964363e5d221330f8c5d9fc1466739a8d9a0705", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d964363e5d221330f8c5d9fc1466739a8d9a0705", "committedDate": "2020-10-12T18:34:51Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb34f16b0ca1829caacb8dbef9c87d1bda9f76bf", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bb34f16b0ca1829caacb8dbef9c87d1bda9f76bf", "committedDate": "2020-10-12T19:46:09Z", "message": "changeConnectionStateListener default to false and resolve comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2148f92be5ab600cf8769602495e0440cba72e9a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2148f92be5ab600cf8769602495e0440cba72e9a", "committedDate": "2020-10-12T19:59:10Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjI1NTQ4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#pullrequestreview-507625548", "createdAt": "2020-10-13T16:31:42Z", "commit": {"oid": "2148f92be5ab600cf8769602495e0440cba72e9a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMTo0MlrOHgvhnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjozMTo0MlrOHgvhnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTEzNQ==", "bodyText": "let's track this as an optimization for later. (out of the scope of this PR)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r504095135", "createdAt": "2020-10-13T16:31:42Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdConnectionStateListener.java", "diffHunk": "@@ -0,0 +1,166 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.directconnectivity.rntbd;\n+\n+import com.azure.cosmos.implementation.GoneException;\n+import com.azure.cosmos.implementation.RxDocumentServiceRequest;\n+import com.azure.cosmos.implementation.directconnectivity.IAddressResolver;\n+import com.azure.cosmos.implementation.routing.PartitionKeyRangeIdentity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.IOException;\n+import java.nio.channels.ClosedChannelException;\n+import java.time.Instant;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import static com.azure.cosmos.implementation.guava25.base.Preconditions.checkNotNull;\n+\n+public class RntbdConnectionStateListener {\n+    // region Fields\n+\n+    private static final Logger logger = LoggerFactory.getLogger(RntbdConnectionStateListener.class);\n+\n+    private final IAddressResolver addressResolver;\n+    private final RntbdEndpoint endpoint;\n+    private final Set<PartitionKeyRangeIdentity> partitionAddressCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDYzMQ=="}, "originalCommit": {"oid": "116d4c238dff9cdd6fb0456a4ad82fab5e5aa82a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd12a8bc987de2ecbdfef20ff62c2327eb65844d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bd12a8bc987de2ecbdfef20ff62c2327eb65844d", "committedDate": "2020-10-13T19:20:21Z", "message": "Merge branch 'master' into ConnectionStateListener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODM0MDg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#pullrequestreview-509834084", "createdAt": "2020-10-15T21:50:17Z", "commit": {"oid": "2148f92be5ab600cf8769602495e0440cba72e9a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MDoxOFrOHicvSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1MDoyNVrOHicvtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NDQ5MA==", "bodyText": "please add Beta annotation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r505884490", "createdAt": "2020-10-15T21:50:18Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -40,6 +43,37 @@ public DirectConnectionConfig() {\n         this.requestTimeout = DEFAULT_REQUEST_TIMEOUT;\n     }\n \n+    /**\n+     * Gets a value indicating whether Direct TCP connection endpoint rediscovery is enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that may occur during maintenance operations.\n+     *\n+     * By default, connection endpoint rediscovery is disabled.\n+     *\n+     * @return {@code true} if Direct TCP connection endpoint rediscovery is enabled; {@code false} otherwise.\n+     */\n+    public boolean isConnectionEndpointRediscoveryEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2148f92be5ab600cf8769602495e0440cba72e9a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NDU5Ng==", "bodyText": "please add Beta annotation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15991#discussion_r505884596", "createdAt": "2020-10-15T21:50:25Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/DirectConnectionConfig.java", "diffHunk": "@@ -40,6 +43,37 @@ public DirectConnectionConfig() {\n         this.requestTimeout = DEFAULT_REQUEST_TIMEOUT;\n     }\n \n+    /**\n+     * Gets a value indicating whether Direct TCP connection endpoint rediscovery is enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that may occur during maintenance operations.\n+     *\n+     * By default, connection endpoint rediscovery is disabled.\n+     *\n+     * @return {@code true} if Direct TCP connection endpoint rediscovery is enabled; {@code false} otherwise.\n+     */\n+    public boolean isConnectionEndpointRediscoveryEnabled() {\n+        return this.connectionEndpointRediscoveryEnabled;\n+    }\n+\n+    /**\n+     * Sets a value indicating whether Direct TCP connection endpoint rediscovery should be enabled.\n+     * <p>\n+     * The connection endpoint rediscovery feature is designed to reduce and spread-out latency spikes that may occur during maintenance operations.\n+     *\n+     * By default, connection endpoint rediscovery is disabled.\n+     *\n+     * @param connectionEndpointRediscoveryEnabled {@code true} if connection endpoint rediscovery is enabled; {@code\n+     *                                             false} otherwise.\n+     *\n+     * @return the {@linkplain DirectConnectionConfig}.\n+     */\n+    public DirectConnectionConfig setConnectionEndpointRediscoveryEnabled(boolean connectionEndpointRediscoveryEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2148f92be5ab600cf8769602495e0440cba72e9a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7ea5806ce2af2f2ba41da6b4f0698bdc1c522b9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b7ea5806ce2af2f2ba41da6b4f0698bdc1c522b9", "committedDate": "2020-10-18T16:18:00Z", "message": "Merge branch 'master' into ConnectionStateListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "166947a9e7cc99dc9a40811a3f7069742faea066", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/166947a9e7cc99dc9a40811a3f7069742faea066", "committedDate": "2020-10-18T16:28:01Z", "message": "add beta annotation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2252, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}