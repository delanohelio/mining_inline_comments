{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDY0NDk1", "number": 17096, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowMTozOFrOE0sUBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTowNjo0MFrOE0-xpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjg3NDI4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowMTozOFrOHsjZcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowMTozOFrOHsjZcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3OTM0Nw==", "bodyText": "This can be simplified\nif (throwable instanceof AmqpException) { \n   return new ServiceBusReceiverException((AmqpException) throwable, errorSource);\n}\nreturn throwable;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516479347", "createdAt": "2020-11-03T08:01:38Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1163,13 +1163,13 @@ private String getLinkName(String sessionId) {\n     }\n \n     /**\n-     * Map the error to {@link ServiceBusAmqpException}\n+     * Map the error to {@link ServiceBusReceiverException}\n      */\n     private Throwable mapError(Throwable throwable, ServiceBusErrorSource errorSource) {\n-        if ((throwable instanceof ServiceBusAmqpException) || !(throwable instanceof AmqpException)) {\n+        if ((throwable instanceof ServiceBusReceiverException) || !(throwable instanceof AmqpException)) {\n             return throwable;\n         } else {\n-            return new ServiceBusAmqpException((AmqpException) throwable, errorSource);\n+            return new ServiceBusReceiverException((AmqpException) throwable, errorSource);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864a0c6d32f2fa6f307c224bded5a525dc1f47c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjg5MzU3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowODoxM1rOHsjlCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowODoxM1rOHsjlCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4MjMxMw==", "bodyText": "This should extend from AzureException in azure-core.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516482313", "createdAt": "2020-11-03T08:08:13Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -0,0 +1,71 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus;\n+\n+import com.azure.core.amqp.exception.AmqpErrorCondition;\n+import com.azure.core.amqp.exception.AmqpErrorContext;\n+import com.azure.core.amqp.exception.AmqpException;\n+\n+/**\n+ * Defines {@link ServiceBusReceiverException} which has additional information about the operation that caused the\n+ * error.\n+ *\n+ * @see ServiceBusErrorSource\n+ */\n+public final class ServiceBusReceiverException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864a0c6d32f2fa6f307c224bded5a525dc1f47c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjg5NDAxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowODoyM1rOHsjlSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowODoyM1rOHsjlSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4MjM3OQ==", "bodyText": "These 3 methods are specific to AmqpException. We should instead override the getCause() method and return the underlying exception.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516482379", "createdAt": "2020-11-03T08:08:23Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -0,0 +1,71 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus;\n+\n+import com.azure.core.amqp.exception.AmqpErrorCondition;\n+import com.azure.core.amqp.exception.AmqpErrorContext;\n+import com.azure.core.amqp.exception.AmqpException;\n+\n+/**\n+ * Defines {@link ServiceBusReceiverException} which has additional information about the operation that caused the\n+ * error.\n+ *\n+ * @see ServiceBusErrorSource\n+ */\n+public final class ServiceBusReceiverException extends Exception {\n+    private final transient ServiceBusErrorSource errorSource;\n+    private final AmqpException amqpException;\n+\n+    /**\n+     * @param amqpException for the error happened.\n+     * @param errorSource indicating which api caused the error.\n+     */\n+    ServiceBusReceiverException(AmqpException amqpException, ServiceBusErrorSource errorSource) {\n+        super(amqpException.getMessage(), amqpException.getCause());\n+        this.errorSource = errorSource;\n+        this.amqpException = amqpException;\n+    }\n+\n+    /**\n+     *  Gets the {@link ServiceBusErrorSource} in case of any errors.\n+     *\n+     * @return the {@link ServiceBusErrorSource}\n+     */\n+    public ServiceBusErrorSource getErrorSource() {\n+        return errorSource;\n+    }\n+\n+    @Override\n+    public String getMessage() {\n+        return amqpException.getMessage();\n+    }\n+\n+    /**\n+     * A boolean indicating if the exception is a transient error or not.\n+     *\n+     * @return returns true when user can retry the operation that generated the exception without additional\n+     * intervention.\n+     */\n+    public boolean isTransient() {\n+        return amqpException.isTransient();\n+    }\n+\n+    /**\n+     * Gets the {@link AmqpErrorCondition} for this exception.\n+     *\n+     * @return The {@link AmqpErrorCondition} for this exception, or {@code null} if nothing was set.\n+     */\n+    public AmqpErrorCondition getErrorCondition() {\n+        return amqpException.getErrorCondition();\n+    }\n+\n+    /**\n+     * Gets the context for this exception.\n+     *\n+     * @return The context for this exception.\n+     */\n+    public AmqpErrorContext getContext() {\n+        return amqpException.getContext();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0864a0c6d32f2fa6f307c224bded5a525dc1f47c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTA4NTQ4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxMzo0M1rOHs4sDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo0NTowNVrOHs54ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODE3Mw==", "bodyText": "From our discussion yesterday, I thought we decided to keep this as extending from Exception in the case that there are exceptions other than AmqpException.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516828173", "createdAt": "2020-11-03T17:13:43Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -13,59 +11,33 @@\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusReceiverException extends Exception {\n+public final class ServiceBusReceiverException extends AmqpException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84d6f03a3bbf5951e93907f3c4e161ef4af8e61a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0NzcyMg==", "bodyText": "extending it from AzureException as suggested by Srikanta", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516847722", "createdAt": "2020-11-03T17:45:05Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -13,59 +11,33 @@\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusReceiverException extends Exception {\n+public final class ServiceBusReceiverException extends AmqpException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODE3Mw=="}, "originalCommit": {"oid": "84d6f03a3bbf5951e93907f3c4e161ef4af8e61a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTE0ODE5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoyOToxMVrOHs5S5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoyOToxMVrOHs5S5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzODExOQ==", "bodyText": "Should we have a constructor that just takes Exception? Then in the map all the receive errors that aren't AMQP exceptions to that.\nServiceBusReceiverAsyncClient. L1198", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516838119", "createdAt": "2020-11-03T17:29:11Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -13,59 +11,33 @@\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusReceiverException extends Exception {\n+public final class ServiceBusReceiverException extends AmqpException {\n     private final transient ServiceBusErrorSource errorSource;\n-    private final AmqpException amqpException;\n \n     /**\n      * @param amqpException for the error happened.\n      * @param errorSource indicating which api caused the error.\n      */\n     ServiceBusReceiverException(AmqpException amqpException, ServiceBusErrorSource errorSource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84d6f03a3bbf5951e93907f3c4e161ef4af8e61a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTM5Mjg1OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozNjo1NVrOHs7rwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDoyMzozOVrOHs_LPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NzI0OA==", "bodyText": "Why are we not wrapping AmqpException?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516877248", "createdAt": "2020-11-03T18:36:55Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1188,14 +1188,14 @@ private String getLinkName(String sessionId) {\n     }\n \n     /**\n-     * Map the error to {@link ServiceBusAmqpException}\n+     * Map the error to {@link ServiceBusReceiverException}\n      */\n     private Throwable mapError(Throwable throwable, ServiceBusErrorSource errorSource) {\n-        if ((throwable instanceof ServiceBusAmqpException) || !(throwable instanceof AmqpException)) {\n-            return throwable;\n-        } else {\n-            return new ServiceBusAmqpException((AmqpException) throwable, errorSource);\n+        // If it is already `ServiceBusReceiverException`, we can just throw it.\n+        if (!(throwable instanceof AmqpException) && !(throwable instanceof ServiceBusReceiverException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNDQ2MA==", "bodyText": "based on our discussion converting all the exception to SBRE .", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516934460", "createdAt": "2020-11-03T20:23:39Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1188,14 +1188,14 @@ private String getLinkName(String sessionId) {\n     }\n \n     /**\n-     * Map the error to {@link ServiceBusAmqpException}\n+     * Map the error to {@link ServiceBusReceiverException}\n      */\n     private Throwable mapError(Throwable throwable, ServiceBusErrorSource errorSource) {\n-        if ((throwable instanceof ServiceBusAmqpException) || !(throwable instanceof AmqpException)) {\n-            return throwable;\n-        } else {\n-            return new ServiceBusAmqpException((AmqpException) throwable, errorSource);\n+        // If it is already `ServiceBusReceiverException`, we can just throw it.\n+        if (!(throwable instanceof AmqpException) && !(throwable instanceof ServiceBusReceiverException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NzI0OA=="}, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTM5NjMxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozNzo1OFrOHs7t6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozNzo1OFrOHs7t6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NzgwMg==", "bodyText": "Since we are wrapping the exception, throwable itself will be the cause.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516877802", "createdAt": "2020-11-03T18:37:58Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -3,26 +3,34 @@\n \n package com.azure.messaging.servicebus;\n \n-import com.azure.core.amqp.exception.AmqpException;\n+import com.azure.core.exception.AzureException;\n \n /**\n- * Defines {@link ServiceBusAmqpException} which has additional information about the operation that caused the error.\n+ * Defines {@link ServiceBusReceiverException} which has additional information about the operation that caused the\n+ * error.\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusAmqpException extends AmqpException {\n+public final class ServiceBusReceiverException extends AzureException {\n     private final transient ServiceBusErrorSource errorSource;\n \n     /**\n-     * @param amqpException for the error hapened.\n+     * @param throwable for the error happened.\n      * @param errorSource indicating which api caused the error.\n      */\n-    ServiceBusAmqpException(AmqpException amqpException, ServiceBusErrorSource errorSource) {\n-        super(amqpException.isTransient(), amqpException.getErrorCondition(), amqpException.getMessage(),\n-            amqpException.getCause(), amqpException.getContext());\n+    ServiceBusReceiverException(Throwable throwable, ServiceBusErrorSource errorSource) {\n+        super(throwable.getMessage(), throwable.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTM5ODA4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozODoyOVrOHs7vCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozODoyOVrOHs7vCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3ODA4OQ==", "bodyText": "This is not required since the inherited method already does the same thing. It's required only if you have to customize this method.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516878089", "createdAt": "2020-11-03T18:38:29Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -3,26 +3,34 @@\n \n package com.azure.messaging.servicebus;\n \n-import com.azure.core.amqp.exception.AmqpException;\n+import com.azure.core.exception.AzureException;\n \n /**\n- * Defines {@link ServiceBusAmqpException} which has additional information about the operation that caused the error.\n+ * Defines {@link ServiceBusReceiverException} which has additional information about the operation that caused the\n+ * error.\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusAmqpException extends AmqpException {\n+public final class ServiceBusReceiverException extends AzureException {\n     private final transient ServiceBusErrorSource errorSource;\n \n     /**\n-     * @param amqpException for the error hapened.\n+     * @param throwable for the error happened.\n      * @param errorSource indicating which api caused the error.\n      */\n-    ServiceBusAmqpException(AmqpException amqpException, ServiceBusErrorSource errorSource) {\n-        super(amqpException.isTransient(), amqpException.getErrorCondition(), amqpException.getMessage(),\n-            amqpException.getCause(), amqpException.getContext());\n+    ServiceBusReceiverException(Throwable throwable, ServiceBusErrorSource errorSource) {\n+        super(throwable.getMessage(), throwable.getCause());\n         this.errorSource = errorSource;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Throwable getCause() {\n+        return super.getCause();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTM5OTE0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozODo1MFrOHs7vyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozODo1MFrOHs7vyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3ODI4MA==", "bodyText": "Do you need to override this? It just calls the base class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516878280", "createdAt": "2020-11-03T18:38:50Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverException.java", "diffHunk": "@@ -3,26 +3,34 @@\n \n package com.azure.messaging.servicebus;\n \n-import com.azure.core.amqp.exception.AmqpException;\n+import com.azure.core.exception.AzureException;\n \n /**\n- * Defines {@link ServiceBusAmqpException} which has additional information about the operation that caused the error.\n+ * Defines {@link ServiceBusReceiverException} which has additional information about the operation that caused the\n+ * error.\n  *\n  * @see ServiceBusErrorSource\n  */\n-public final class ServiceBusAmqpException extends AmqpException {\n+public final class ServiceBusReceiverException extends AzureException {\n     private final transient ServiceBusErrorSource errorSource;\n \n     /**\n-     * @param amqpException for the error hapened.\n+     * @param throwable for the error happened.\n      * @param errorSource indicating which api caused the error.\n      */\n-    ServiceBusAmqpException(AmqpException amqpException, ServiceBusErrorSource errorSource) {\n-        super(amqpException.isTransient(), amqpException.getErrorCondition(), amqpException.getMessage(),\n-            amqpException.getCause(), amqpException.getContext());\n+    ServiceBusReceiverException(Throwable throwable, ServiceBusErrorSource errorSource) {\n+        super(throwable.getMessage(), throwable.getCause());\n         this.errorSource = errorSource;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Throwable getCause() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTQwNjQwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0MTowNFrOHs70JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0MTowNFrOHs70JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3OTM5Ng==", "bodyText": "If the exception type is AmqpException then we should wrap it even in default case with UNKNOWN source.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516879396", "createdAt": "2020-11-03T18:41:04Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1038,10 +1038,10 @@ private boolean isManagementToken(String lockToken) {\n                 if (receiverOptions.isEnableAutoComplete() && throwable instanceof AmqpException) {\n                     switch (dispositionStatus) {\n                         case COMPLETED:\n-                            return new ServiceBusAmqpException((AmqpException) throwable,\n+                            return new ServiceBusReceiverException((AmqpException) throwable,\n                                 ServiceBusErrorSource.COMPLETE);\n                         case ABANDONED:\n-                            return new ServiceBusAmqpException((AmqpException) throwable,\n+                            return new ServiceBusReceiverException((AmqpException) throwable,\n                                 ServiceBusErrorSource.ABANDONED);\n                         default:\n                             // Do nothing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b302b45677f3cb3474a98cc9b414c6580f4d41e8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTg5OTI3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTowNjo0MFrOHtAdZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTowNjo0MFrOHtAdZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTQ5NA==", "bodyText": "I don't think this comment applies anymore.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17096#discussion_r516955494", "createdAt": "2020-11-03T21:06:40Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1034,20 +1034,15 @@ private boolean isManagementToken(String lockToken) {\n         }\n         return updateDispositionOperation\n             .onErrorMap(throwable -> {\n-                // We only populate ErrorSource only when AutoComplete is enabled.\n-                if (receiverOptions.isEnableAutoComplete() && throwable instanceof AmqpException) {\n-                    switch (dispositionStatus) {\n-                        case COMPLETED:\n-                            return new ServiceBusAmqpException((AmqpException) throwable,\n-                                ServiceBusErrorSource.COMPLETE);\n-                        case ABANDONED:\n-                            return new ServiceBusAmqpException((AmqpException) throwable,\n-                                ServiceBusErrorSource.ABANDONED);\n-                        default:\n-                            // Do nothing\n-                    }\n+                // We only populate ErrorSource for scenario covered by ServiceBusErrorSource enum.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c0affac1e28a6a712a29ceec3c0630c1157d521"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3073, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}