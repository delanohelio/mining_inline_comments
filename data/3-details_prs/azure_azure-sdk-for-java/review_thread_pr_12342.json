{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2ODIzNjE3", "number": 12342, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowNjoxNVrOEHoz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowNjoxNVrOEHoz4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDQ0MTI4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/ReliableDownload.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowNjoxNVrOGnHayw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowNjoxNVrOGnHayw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2OTE5NQ==", "bodyText": "incomplete", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12342#discussion_r443669195", "createdAt": "2020-06-22T16:06:15Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/ReliableDownload.java", "diffHunk": "@@ -108,16 +116,25 @@ possible the method call that returns a Single is what throws (like how our apis\n         return data\n             .timeout(TIMEOUT_VALUE)\n             .doOnNext(buffer -> {\n-            /*\n-            Update how much data we have received in case we need to retry and propagate to the user the data we\n-            have received.\n-             */\n+                /*\n+                Update how much data we have received in case we need to retry and propagate to the user the data we\n+                have received.\n+                 */\n                 this.info.setOffset(this.info.getOffset() + buffer.remaining());\n                 if (this.info.getCount() != null) {\n                     this.info.setCount(this.info.getCount() - buffer.remaining());\n                 }\n             }).onErrorResume(t2 -> {\n-            // Increment the retry count and try again with the new exception.\n+                /*\n+                 It is possible that the network stream will throw an error after emitting all data but before\n+                 completing. Issuing a retry at this stage would leave the download in a bad state with incorrect count\n+                 and offset values. Because we have read the intended amount of data, we can ignore the error at the end\n+                 of the stream. If count is null and we", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad0cbecd20c62b41260c74ddc9a31ae41ef1c231"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3796, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}