{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTAwMTE3", "number": 18073, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDowODoxNlrOFEKgJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDoxMjozMFrOFEKqUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTEwNjkzOnYy", "diffSide": "RIGHT", "path": "eng/scripts/Language-Settings.ps1", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDowODoxNlrOIEKQug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDozMTo0OFrOIELwhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIzMzMzOA==", "bodyText": "It is generally bad form to force exit from a helper function. Instead you should return $null and handle at the calling site and exit if that is the entry point script.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18073#discussion_r541233338", "createdAt": "2020-12-11T20:08:16Z", "author": {"login": "weshaggard"}, "path": "eng/scripts/Language-Settings.ps1", "diffHunk": "@@ -216,3 +216,29 @@ function Update-java-CIConfig($pkgs, $ciRepo, $locationInDocRepo, $monikerId=$nu\n \n   Set-Content -Path $pkgJsonLoc -Value $jsonContent\n }\n+\n+\n+# function is used to filter packages to submit to API view tool\n+function Find-java-Artifacts-For-Apireview($artifactDir, $pkgName = \"\")\n+{\n+  Write-Host \"Checking for source jar in artifact path $($artifactDir)\"\n+  # Find all source jar files in given artifact directory\n+  $files = Get-ChildItem \"${artifactDir}\" | Where-Object -FilterScript {$_.Name.EndsWith(\"sources.jar\")}\n+  if (!$files)\n+  {\n+    Write-Host \"$($artifactDir) does not have any package\"\n+    exit(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6821888e617b7f432d0b8be9ae6b9356a539c11b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI1Nzg2Mg==", "bodyText": "Fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18073#discussion_r541257862", "createdAt": "2020-12-11T20:31:48Z", "author": {"login": "praveenkuttappan"}, "path": "eng/scripts/Language-Settings.ps1", "diffHunk": "@@ -216,3 +216,29 @@ function Update-java-CIConfig($pkgs, $ciRepo, $locationInDocRepo, $monikerId=$nu\n \n   Set-Content -Path $pkgJsonLoc -Value $jsonContent\n }\n+\n+\n+# function is used to filter packages to submit to API view tool\n+function Find-java-Artifacts-For-Apireview($artifactDir, $pkgName = \"\")\n+{\n+  Write-Host \"Checking for source jar in artifact path $($artifactDir)\"\n+  # Find all source jar files in given artifact directory\n+  $files = Get-ChildItem \"${artifactDir}\" | Where-Object -FilterScript {$_.Name.EndsWith(\"sources.jar\")}\n+  if (!$files)\n+  {\n+    Write-Host \"$($artifactDir) does not have any package\"\n+    exit(1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIzMzMzOA=="}, "originalCommit": {"oid": "6821888e617b7f432d0b8be9ae6b9356a539c11b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTEyNzkxOnYy", "diffSide": "RIGHT", "path": "eng/scripts/Create-APIReview.ps1", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDoxMTo0NlrOIEKd0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDoxMTo0NlrOIEKd0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIzNjY4OA==", "bodyText": "When you move this to common you should also move the name of this function to common.ps1, see https://github.com/Azure/azure-sdk-tools/blob/master/eng/common/scripts/common.ps1#L33.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18073#discussion_r541236688", "createdAt": "2020-12-11T20:11:46Z", "author": {"login": "weshaggard"}, "path": "eng/scripts/Create-APIReview.ps1", "diffHunk": "@@ -0,0 +1,103 @@\n+[CmdletBinding()]\n+Param (\n+  [Parameter(Mandatory=$True)]\n+  [string] $ArtifactPath,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APIViewUri,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APIKey,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APILabel,\n+  [string] $PackageName = \"\"\n+)\n+\n+\n+# Submit API review request and return status whether current revision is approved or pending or failed to create review\n+function Submit-APIReview($packagename, $filePath, $uri, $apiKey, $apiLabel)\n+{\n+    $multipartContent = [System.Net.Http.MultipartFormDataContent]::new()\n+    $FileStream = [System.IO.FileStream]::new($filePath, [System.IO.FileMode]::Open)\n+    $fileHeader = [System.Net.Http.Headers.ContentDispositionHeaderValue]::new(\"form-data\")\n+    $fileHeader.Name = \"file\"\n+    $fileHeader.FileName = $packagename\n+    $fileContent = [System.Net.Http.StreamContent]::new($FileStream)\n+    $fileContent.Headers.ContentDisposition = $fileHeader\n+    $fileContent.Headers.ContentType = [System.Net.Http.Headers.MediaTypeHeaderValue]::Parse(\"application/octet-stream\")\n+    $multipartContent.Add($fileContent)\n+\n+\n+    $stringHeader = [System.Net.Http.Headers.ContentDispositionHeaderValue]::new(\"form-data\")\n+    $stringHeader.Name = \"label\"\n+    $StringContent = [System.Net.Http.StringContent]::new($apiLabel)\n+    $StringContent.Headers.ContentDisposition = $stringHeader\n+    $multipartContent.Add($stringContent)\n+\n+    $headers = @{\n+        \"ApiKey\" = $apiKey;\n+        \"content-type\" = \"multipart/form-data\"\n+    }\n+\n+    try\n+    {\n+        $Response = Invoke-WebRequest -Method 'POST' -Uri $uri -Body $multipartContent -Headers $headers\n+        $StatusCode = $Response.StatusCode\n+    }\n+    catch\n+    {\n+        $StatusCode = $_.Exception.Response.StatusCode\n+    }\n+\n+    return $StatusCode\n+}\n+\n+\n+. (Join-Path $PSScriptRoot Language-Settings.ps1)\n+$packages = @{}\n+if (Test-Path \"Function:Find-java-Artifacts-For-Apireview\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6821888e617b7f432d0b8be9ae6b9356a539c11b"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTEzMjk4OnYy", "diffSide": "RIGHT", "path": "eng/scripts/Create-APIReview.ps1", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDoxMjozMFrOIEKgwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDoxMjozMFrOIEKgwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIzNzQ0MQ==", "bodyText": "This will want to include common.ps1 once you move to eng/common.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18073#discussion_r541237441", "createdAt": "2020-12-11T20:12:30Z", "author": {"login": "weshaggard"}, "path": "eng/scripts/Create-APIReview.ps1", "diffHunk": "@@ -0,0 +1,103 @@\n+[CmdletBinding()]\n+Param (\n+  [Parameter(Mandatory=$True)]\n+  [string] $ArtifactPath,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APIViewUri,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APIKey,\n+  [Parameter(Mandatory=$True)]\n+  [string] $APILabel,\n+  [string] $PackageName = \"\"\n+)\n+\n+\n+# Submit API review request and return status whether current revision is approved or pending or failed to create review\n+function Submit-APIReview($packagename, $filePath, $uri, $apiKey, $apiLabel)\n+{\n+    $multipartContent = [System.Net.Http.MultipartFormDataContent]::new()\n+    $FileStream = [System.IO.FileStream]::new($filePath, [System.IO.FileMode]::Open)\n+    $fileHeader = [System.Net.Http.Headers.ContentDispositionHeaderValue]::new(\"form-data\")\n+    $fileHeader.Name = \"file\"\n+    $fileHeader.FileName = $packagename\n+    $fileContent = [System.Net.Http.StreamContent]::new($FileStream)\n+    $fileContent.Headers.ContentDisposition = $fileHeader\n+    $fileContent.Headers.ContentType = [System.Net.Http.Headers.MediaTypeHeaderValue]::Parse(\"application/octet-stream\")\n+    $multipartContent.Add($fileContent)\n+\n+\n+    $stringHeader = [System.Net.Http.Headers.ContentDispositionHeaderValue]::new(\"form-data\")\n+    $stringHeader.Name = \"label\"\n+    $StringContent = [System.Net.Http.StringContent]::new($apiLabel)\n+    $StringContent.Headers.ContentDisposition = $stringHeader\n+    $multipartContent.Add($stringContent)\n+\n+    $headers = @{\n+        \"ApiKey\" = $apiKey;\n+        \"content-type\" = \"multipart/form-data\"\n+    }\n+\n+    try\n+    {\n+        $Response = Invoke-WebRequest -Method 'POST' -Uri $uri -Body $multipartContent -Headers $headers\n+        $StatusCode = $Response.StatusCode\n+    }\n+    catch\n+    {\n+        $StatusCode = $_.Exception.Response.StatusCode\n+    }\n+\n+    return $StatusCode\n+}\n+\n+\n+. (Join-Path $PSScriptRoot Language-Settings.ps1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6821888e617b7f432d0b8be9ae6b9356a539c11b"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2536, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}