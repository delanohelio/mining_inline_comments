{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjUyODA1", "number": 15625, "title": "Added support to set BlobParallelUploadOptions.computeMd5 so the service can perform an md5 verification.", "bodyText": "Resolves #12291\nAdded support to set BlobParallelUploadOptions.computeMd5 so the service can perform an md5 verification.", "createdAt": "2020-09-24T19:24:16Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625", "merged": true, "mergeCommit": {"oid": "f11ce687a506a6a1f621e6bef44bc6ff6a7ded71"}, "closed": true, "closedAt": "2020-09-28T17:59:14Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdME7THgH2gAyNDkyNjUyODA1OjkxYzlkZWFlMDM2NjgyMmE5YWFmNDExZWZjNDExYzMyZDUwNTY1MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNWx6mgH2gAyNDkyNjUyODA1OmQ3NmNkNjU2Y2MwMzIyYjI2ODNhNmUyMGExMDU5NzIzOGNjNTY5YWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91c9deae0366822a9aaf411efc411c32d5056517", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/91c9deae0366822a9aaf411efc411c32d5056517", "committedDate": "2020-09-24T17:48:43Z", "message": "Added tests for buffered upload compute md5. Need to add tests for encrypted client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44e82bdd5e37a6bfe154ad2100e28b25bf37ffaa", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/44e82bdd5e37a6bfe154ad2100e28b25bf37ffaa", "committedDate": "2020-09-24T19:20:19Z", "message": "Added tests to cryptography"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ddb6d4ddeb931582dbc636273dd3282413b9584", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2ddb6d4ddeb931582dbc636273dd3282413b9584", "committedDate": "2020-09-24T19:22:14Z", "message": "Merge branch 'master' into storage/calculatemd5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dcaa857a37c18bd30d2bf0609e2e87a6d8910fa", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5dcaa857a37c18bd30d2bf0609e2e87a6d8910fa", "committedDate": "2020-09-24T19:26:15Z", "message": "Added common changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73c8a6c48530eca0336fd32a55471f200c41dc07", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/73c8a6c48530eca0336fd32a55471f200c41dc07", "committedDate": "2020-09-24T19:59:27Z", "message": "indents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTY5MDc4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-495969078", "createdAt": "2020-09-24T21:37:26Z", "commit": {"oid": "73c8a6c48530eca0336fd32a55471f200c41dc07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMTozNzoyNlrOHXtiDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMTozNzoyNlrOHXtiDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYyNTI5NQ==", "bodyText": "This is the only part of the code that I'm iffy about. Like wrapping the ProgressReporter and stuff looks a little unclean. I could just make a method maybe and make it look a little better.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#discussion_r494625295", "createdAt": "2020-09-24T21:37:26Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobAsyncClient.java", "diffHunk": "@@ -429,14 +429,16 @@ private SpecializedBlobClientBuilder prepareBuilder() {\n             Function<Flux<ByteBuffer>, Mono<Response<BlockBlobItem>>> uploadInChunksFunction = (stream) ->\n                 uploadInChunks(blockBlobAsyncClient, stream, validatedParallelTransferOptions,\n                     options.getHeaders(), options.getMetadata(), options.getTags(),\n-                    options.getTier(), validatedRequestConditions);\n+                    options.getTier(), validatedRequestConditions, options.isComputeMd5());\n \n             BiFunction<Flux<ByteBuffer>, Long, Mono<Response<BlockBlobItem>>> uploadFullBlobMethod =\n-                (stream, length) -> blockBlobAsyncClient.uploadWithResponse(new BlockBlobSimpleUploadOptions(\n-                    ProgressReporter.addProgressReporting(stream,\n-                        validatedParallelTransferOptions.getProgressReceiver()), length)\n+                (stream, length) -> UploadUtils.computeMd5(ProgressReporter.addProgressReporting(stream,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8a6c48530eca0336fd32a55471f200c41dc07"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d900dec3e1756e0e34865ff1705db20da22699b", "committedDate": "2020-09-24T22:59:52Z", "message": "Added method for uploadFullBlob"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDA3NjA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-496007607", "createdAt": "2020-09-24T23:06:00Z", "commit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMzowNjowMFrOHXvgrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMzowNjowMFrOHXvgrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY1NzcwOA==", "bodyText": "Rename to computeMd5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#discussion_r494657708", "createdAt": "2020-09-24T23:06:00Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobParallelUploadOptions.java", "diffHunk": "@@ -214,6 +215,25 @@ public BlobParallelUploadOptions setRequestConditions(BlobRequestConditions requ\n         return this;\n     }\n \n+    /**\n+     * @return Whether or not the library should calculate the md5 and send it for the service to verify.\n+     */\n+    public boolean isComputeMd5() {\n+        return computeMd5;\n+    }\n+\n+    /**\n+     * Sets the calculateAndVerifyMd5 property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NjY3NDk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-496667496", "createdAt": "2020-09-25T18:31:24Z", "commit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODozMToyNFrOHYOWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODozMToyNFrOHYOWiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE2MzAxOQ==", "bodyText": "Add comment that this test is for data integrity", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#discussion_r495163019", "createdAt": "2020-09-25T18:31:24Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/test/java/com/azure/storage/common/implementation/UploadUtilsTest.groovy", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.common.implementation\n+\n+import com.azure.core.util.FluxUtil\n+import com.azure.core.util.logging.ClientLogger\n+import reactor.core.publisher.Flux\n+import reactor.test.StepVerifier\n+import spock.lang.Specification\n+import spock.lang.Unroll\n+\n+import java.nio.ByteBuffer\n+import java.security.MessageDigest\n+\n+class UploadUtilsTest extends Specification {\n+\n+    @Unroll\n+    def \"computeMd5 md5\"() {\n+        setup:\n+        def md5 = MessageDigest.getInstance(\"MD5\").digest(\"Hello World!\".getBytes())\n+        def flux = Flux.fromIterable(data.stream().map({ str -> ByteBuffer.wrap(str.getBytes())}) as Iterable<ByteBuffer>)\n+\n+        when: \"computeMd5 = true\"\n+        def sv = StepVerifier.create(UploadUtils.computeMd5(flux, true, new ClientLogger(UploadUtilsTest.class)))\n+\n+        then:\n+        sv.expectNextMatches({ w -> w.getMd5() == md5 })\n+            .expectComplete()\n+\n+        when: \"computeMd5 = false\"\n+        sv = StepVerifier.create(UploadUtils.computeMd5(flux, false, new ClientLogger(UploadUtilsTest.class)))\n+\n+        then:\n+        sv.expectNextMatches({ w -> w.getMd5() == null })\n+            .expectComplete()\n+\n+        where:\n+        data             || _\n+        [\"Hello World!\"] || _\n+        [\"Hello \", \"World!\"] || _\n+        [\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"W\", \"o\", \"r\", \"l\", \"d\", \"!\"] || _\n+        [\"Hel\", \"lo World!\"] || _\n+    }\n+\n+    @Unroll\n+    def \"computeMd5 data\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NjY3ODg5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-496667889", "createdAt": "2020-09-25T18:31:44Z", "commit": {"oid": "8d900dec3e1756e0e34865ff1705db20da22699b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a549baa45dc9acaec88bc548bf464d8387beddf", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2a549baa45dc9acaec88bc548bf464d8387beddf", "committedDate": "2020-09-25T18:39:18Z", "message": "Added comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzE2Mjgz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-497716283", "createdAt": "2020-09-28T16:48:39Z", "commit": {"oid": "2a549baa45dc9acaec88bc548bf464d8387beddf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0ODozOVrOHZHHcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0ODozOVrOHZHHcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5MzA0Mg==", "bodyText": "CoreUtils.clone should handle this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#discussion_r496093042", "createdAt": "2020-09-28T16:48:39Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/implementation/UploadUtils.java", "diffHunk": "@@ -142,4 +147,48 @@ public static void uploadFileCleanup(AsynchronousFileChannel channel, ClientLogg\n             throw logger.logExceptionAsError(new UncheckedIOException(e));\n         }\n     }\n+\n+    /**\n+     * Computes the md5 of the data and wraps it with the data.\n+     *\n+     * @param data The data.\n+     * @param computeMd5 Whether or not to compute the md5.\n+     * @param logger Logger to log errors.\n+     * @return The data wrapped with its md5.\n+     */\n+    public static Mono<FluxMd5Wrapper> computeMd5(Flux<ByteBuffer> data, boolean computeMd5, ClientLogger logger) {\n+        if (computeMd5) {\n+            try {\n+                return data.reduce(MessageDigest.getInstance(\"MD5\"), (digest, buffer) -> {\n+                    int position = buffer.position();\n+                    byte[] bytes = FluxUtil.byteBufferToArray(buffer);\n+                    digest.update(bytes, 0, bytes.length);\n+                    buffer.position(position);\n+                    return digest;\n+                }).map(messageDigest -> new FluxMd5Wrapper(data, messageDigest.digest()));\n+            } catch (NoSuchAlgorithmException e) {\n+                return monoError(logger, new RuntimeException(e));\n+            }\n+        } else {\n+            return Mono.just(new FluxMd5Wrapper(data, null));\n+        }\n+    }\n+\n+    public static class FluxMd5Wrapper {\n+        private final Flux<ByteBuffer> data;\n+        private final byte[] md5;\n+\n+        FluxMd5Wrapper(Flux<ByteBuffer> data, byte[] md5) {\n+            this.data = data;\n+            this.md5 = md5 == null ? null : md5.clone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a549baa45dc9acaec88bc548bf464d8387beddf"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzE2OTA0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15625#pullrequestreview-497716904", "createdAt": "2020-09-28T16:49:27Z", "commit": {"oid": "2a549baa45dc9acaec88bc548bf464d8387beddf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9adf3122074e80de6fd59eefe41342c96dac6cc4", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9adf3122074e80de6fd59eefe41342c96dac6cc4", "committedDate": "2020-09-28T16:55:10Z", "message": "Fixed minor comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76cd656cc0322b2683a6e20a10597238cc569ab", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d76cd656cc0322b2683a6e20a10597238cc569ab", "committedDate": "2020-09-28T17:10:41Z", "message": "Merge branch 'master' into storage/calculatemd5"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3295, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}