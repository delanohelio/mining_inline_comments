{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjY1MTQx", "number": 7356, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzo1OToyNVrODXTGfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDoxMzowNlrODXTMhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzU2Nzk4OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMzo1OToyNVrOFci3NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMTozMjowN1rOFcjn5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg==", "bodyText": "Can we use Locale.ROOT instead or does it have to be in US locale?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365475636", "createdAt": "2020-01-10T23:59:25Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NzIxOQ==", "bodyText": "I was thinking the service would always send US formatted datetimes, but i'm not sure", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365477219", "createdAt": "2020-01-11T00:08:12Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg=="}, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4ODEwMA==", "bodyText": "changed back to default which was working before", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365488100", "createdAt": "2020-01-11T01:32:07Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg=="}, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzU2ODk4OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDowMDoyNVrOFci32Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDowMDoyNVrOFci32Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTgwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DateTimeFormatter dtf_windows = DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);\n          \n          \n            \n                    DateTimeFormatter dtfWindows= DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365475801", "createdAt": "2020-01-11T00:00:25Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);\n+        // This is the format for app service on Windows as of API version 2017-09-01.\n+        // The format is changed to Unix timestamp in 2019-08-01 but this API version\n+        // has not been deployed to Linux app services.\n+        DateTimeFormatter dtf_windows = DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzU4MzQwOnYy", "diffSide": "LEFT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDoxMzowNlrOFcjAWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwMDoxNDoyMlrOFcjBAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3Nzk3Ng==", "bodyText": "Is this a Breaking change ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365477976", "createdAt": "2020-01-11T00:13:06Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -35,15 +36,11 @@\n      * @param token the token string.\n      * @param expiresOn the expiration time.\n      */\n-    public MSIToken(String token, OffsetDateTime expiresOn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3ODE0Nw==", "bodyText": "This is in the implmentation package so we should be fine", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365478147", "createdAt": "2020-01-11T00:14:22Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -35,15 +36,11 @@\n      * @param token the token string.\n      * @param expiresOn the expiration time.\n      */\n-    public MSIToken(String token, OffsetDateTime expiresOn) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3Nzk3Ng=="}, "originalCommit": {"oid": "694695ea2f514e494a495917bf80a58eaa9362b6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 573, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}