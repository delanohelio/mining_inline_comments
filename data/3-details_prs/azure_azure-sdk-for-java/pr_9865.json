{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NjUzNDgy", "number": 9865, "title": "SB Track2 SyncReceiverClient: add maxWaitTime in receive()", "bodyText": "Use Duration maximumWaitTime in receive() functionality", "createdAt": "2020-04-04T17:42:23Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865", "merged": true, "mergeCommit": {"oid": "1d8b86d759d7e62b361b27e31f7e8e96eb1a2edc"}, "closed": true, "closedAt": "2020-04-06T16:38:48Z", "author": {"login": "hemanttanwar"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUZIRpAH2gAyMzk4NjUzNDgyOjBmZWM4NTVlNDJhYzRjMTgzY2M4OGY4ZDNjOWEzN2IzYmY3YWFlNzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVBI6gAFqTM4ODQwOTc3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78", "committedDate": "2020-04-04T17:41:14Z", "message": "SyncClient: add maxWaitTime in receive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE5NTY3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#pullrequestreview-387719567", "createdAt": "2020-04-04T17:43:33Z", "commit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzo0MzozM1rOGAzdMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzo0MzozM1rOGAzdMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NjI0Mw==", "bodyText": "This was discussed during review that instead of using tryTimeout, we should be using some default value 1 minute or less.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#discussion_r403496243", "createdAt": "2020-04-04T17:43:33Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverClient.java", "diffHunk": "@@ -28,6 +28,8 @@\n  */\n @ServiceClient(builder = ServiceBusClientBuilder.class)\n public class ServiceBusReceiverClient implements AutoCloseable {\n+    private static final Duration DEFAULT_RECEIVE_WAIT_TIME = Duration.ofMinutes(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE5OTI2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#pullrequestreview-387719926", "createdAt": "2020-04-04T17:48:17Z", "commit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzo0ODoxN1rOGAzfFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzo0OTo0MFrOGAzfyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NjcyNA==", "bodyText": "The default AmqpRetryOptions has the timeout already set. This isn't necessary. Or if they pass their own default tryTimeout.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#discussion_r403496724", "createdAt": "2020-04-04T17:48:17Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverClient.java", "diffHunk": "@@ -28,6 +28,8 @@\n  */\n @ServiceClient(builder = ServiceBusClientBuilder.class)\n public class ServiceBusReceiverClient implements AutoCloseable {\n+    private static final Duration DEFAULT_RECEIVE_WAIT_TIME = Duration.ofMinutes(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NjI0Mw=="}, "originalCommit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Njg3NQ==", "bodyText": "To save duplicated logic, this method should call the maximal overload.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#discussion_r403496875", "createdAt": "2020-04-04T17:49:16Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverClient.java", "diffHunk": "@@ -250,18 +252,47 @@ public ServiceBusReceivedMessage peekAt(long sequenceNumber) {\n     }\n \n     /**\n-     * Receives an iterable stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity. The\n+     * Receives an iterable stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     * The receive operation will wait for a default 1 minute for receiving a message before it times out. You can it\n+     * override by using {@link #receive(int, Duration)}.\n      *\n      * @param maxMessages The maximum number of messages to receive.\n      * @return An {@link IterableStream} of at most {@code maxMessages} messages from the Service Bus entity.\n+     *\n+     * @throws IllegalArgumentException if {@code maxMessages} is zero or a negative value.\n      */\n     public IterableStream<ServiceBusReceivedMessage> receive(int maxMessages) {\n         if (maxMessages <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NjkwNg==", "bodyText": "Possible NullPointerException if maxWaitTime is null", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#discussion_r403496906", "createdAt": "2020-04-04T17:49:40Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverClient.java", "diffHunk": "@@ -250,18 +252,47 @@ public ServiceBusReceivedMessage peekAt(long sequenceNumber) {\n     }\n \n     /**\n-     * Receives an iterable stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity. The\n+     * Receives an iterable stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     * The receive operation will wait for a default 1 minute for receiving a message before it times out. You can it\n+     * override by using {@link #receive(int, Duration)}.\n      *\n      * @param maxMessages The maximum number of messages to receive.\n      * @return An {@link IterableStream} of at most {@code maxMessages} messages from the Service Bus entity.\n+     *\n+     * @throws IllegalArgumentException if {@code maxMessages} is zero or a negative value.\n      */\n     public IterableStream<ServiceBusReceivedMessage> receive(int maxMessages) {\n         if (maxMessages <= 0) {\n             throw logger.logExceptionAsError(new IllegalArgumentException(\n                 \"'maxMessages' cannot be less than or equal to 0. maxMessages: \" + maxMessages));\n         }\n \n-        final Flux<ServiceBusReceivedMessage> messages = Flux.create(emitter -> queueWork(maxMessages, emitter));\n+        final Flux<ServiceBusReceivedMessage> messages = Flux.create(emitter -> queueWork(maxMessages,\n+            DEFAULT_RECEIVE_WAIT_TIME, emitter));\n+\n+        return new IterableStream<>(messages);\n+    }\n+\n+    /**\n+     * Receives an iterable stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     *\n+     * @param maxMessages The maximum number of messages to receive.\n+     * @param maxWaitTime The time the client waits for receiving a message before it times out.\n+     * @return An {@link IterableStream} of at most {@code maxMessages} messages from the Service Bus entity.\n+     *\n+     * @throws IllegalArgumentException if {@code maxMessages} or {@code maxWaitTime} is zero or a negative value.\n+     */\n+    public IterableStream<ServiceBusReceivedMessage> receive(int maxMessages, Duration maxWaitTime) {\n+        if (maxMessages <= 0) {\n+            throw logger.logExceptionAsError(new IllegalArgumentException(\n+                \"'maxMessages' cannot be less than or equal to 0. maxMessages: \" + maxMessages));\n+        } else if (maxWaitTime.isNegative() || maxWaitTime.isZero()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fec855e42ac4c183cc88f8d3c9a37b3bf7aae78"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc42fa58b6c225a8c4587ac055f11eee4e797c59", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc42fa58b6c225a8c4587ac055f11eee4e797c59", "committedDate": "2020-04-04T22:07:38Z", "message": "added test and review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6191d40293dce550f5b754dbb5aef6935f2c5e22", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6191d40293dce550f5b754dbb5aef6935f2c5e22", "committedDate": "2020-04-04T22:24:11Z", "message": "remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDA5Nzc2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9865#pullrequestreview-388409776", "createdAt": "2020-04-06T16:18:08Z", "commit": {"oid": "6191d40293dce550f5b754dbb5aef6935f2c5e22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1202, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}