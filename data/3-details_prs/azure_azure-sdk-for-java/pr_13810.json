{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMjY2NDgy", "number": 13810, "title": "Update Spring readme with guideline", "bodyText": "", "createdAt": "2020-08-05T09:35:09Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810", "merged": true, "mergeCommit": {"oid": "7f7cf333e0acdf6fa32b5f8a0cf17b43e6b5de20"}, "closed": true, "closedAt": "2020-08-06T07:18:36Z", "author": {"login": "yiliuTo"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7gRLEAH2gAyNDYzMjY2NDgyOjQzZGYyMWI0ZTE2OTc4ZmFlOTc5NzYwYWJjNDJhMjRmZjkzZjA4N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8KimhgFqTQ2MjI0NjgxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "43df21b4e16978fae979760abc42a24ff93f087a", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/43df21b4e16978fae979760abc42a24ff93f087a", "committedDate": "2020-08-04T06:03:20Z", "message": "update README.md for release 2.3.3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b50ec3f34cb6a8c9e96e861af5a7ba1d38a44861", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b50ec3f34cb6a8c9e96e861af5a7ba1d38a44861", "committedDate": "2020-08-04T08:25:31Z", "message": "modify README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95b558bd7e08a91fd9f44e04e92a1c72100ab50", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f95b558bd7e08a91fd9f44e04e92a1c72100ab50", "committedDate": "2020-08-05T09:07:50Z", "message": "update README with guideline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eaf950bde07ed4030b72e9dd48c1592a4f43c13c", "committedDate": "2020-08-05T09:34:02Z", "message": "merge with master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjQzOTc4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#pullrequestreview-461643978", "createdAt": "2020-08-05T13:06:24Z", "commit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzowNjoyNVrOG8Iz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzozNzoyMFrOG8KBpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxMjExMA==", "bodyText": "The artifact id doesn't match here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465712110", "createdAt": "2020-08-05T13:06:25Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/README.md", "diffHunk": "@@ -13,8 +17,20 @@ The following prerequisites are required in order to complete the steps in this\n * Azure subscription.\n \n If you don't have an Azure subscription, create a [free account](https://azure.microsoft.com/free/?WT.mc_id=A261C142F) before you begin.\n-\n-## Getting started\n+### Include the package\n+\n+`azure-active-directory-spring-boot-starter` is published on Maven Central Repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxNDM4Ng==", "bodyText": "Since we barely use the Java SDk in this starter, maybe we should add a section talking about how to change the Spring logging level?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465714386", "createdAt": "2020-08-05T13:10:08Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/README.md", "diffHunk": "@@ -198,28 +214,23 @@ configured a new Azure AD B2C tenant and registered a new application in it, and\n application to use the Spring annotations and classes to protect the web app.\n \n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n-\n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n-\n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+### Enable client logging", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxNjIzNg==", "bodyText": "This header is not showing correctly here, insert a space after the #", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465716236", "createdAt": "2020-08-05T13:13:05Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -2,18 +2,24 @@\n \n With Spring Starter for Azure Active Directory, now you can get started quickly to build the authentication workflow for a web application that uses Azure AD and OAuth 2.0 to secure its back end. It also enables developers to create a role based authorization workflow for a Web API secured by Azure AD, with the power of the Spring Security Filter Chain. \n \n+[Package (Maven)][package] | [API reference documentation][refdocs] | [Product documentation][docs] | [Samples][sample]\n+\n ## Getting started\n-#### Register the Application in Azure AD\n+###Prerequisites", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxOTU0Nw==", "bodyText": "Same here, adding something about Spring logging.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465719547", "createdAt": "2020-08-05T13:18:23Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/README.md", "diffHunk": "@@ -222,26 +227,26 @@ public class AADOAuth2LoginConditionalPolicyConfigSample extends WebSecurityConf\n     }\n }\n ```\n+\n ## Next steps\n-### Allow telemetry\n-Microsoft would like to collect data about how users use this Spring boot starter.\n-Microsoft uses this information to improve our tooling experience. Participation is voluntary.\n-If you don't want to participate, just simply disable it by setting below configuration in `application.properties`.\n-```properties\n-azure.activedirectory.allow-telemetry=false\n-```\n-When telemetry is enabled, an HTTP request will be sent to URL `https://dc.services.visualstudio.com/v2/track`. So please make sure it's not blocked by your firewall.  \n-Find more information about Azure Service Privacy Statement, please check [Microsoft Online Services Privacy Statement](https://www.microsoft.com/privacystatement/OnlineServices/Default.aspx). \n+The following section provides sample projects illustrating how to use the starter in different cases.\n+### More sample code\n+- [Azure Active Directory for Frontend](../azure-spring-boot-samples/azure-spring-boot-sample-active-directory)\n+- [Azure Active Directory for Backend](../azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend)\n+- [Azure Active Directory for Backend with Microsoft Graph API](../azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend-v2)\n \n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n-\n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n-\n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMDM0NQ==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465720345", "createdAt": "2020-08-05T13:19:42Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-cosmosdb/README.md", "diffHunk": "@@ -174,49 +194,26 @@ public class CosmosSampleApplication implements CommandLineRunner {\n ```\n Autowired UserRepository interface, then can do save, delete and find operations.\n \n-### Allow telemetry\n-Microsoft would like to collect data about how users use this Spring boot starter. Microsoft uses this information to improve our tooling experience. Participation is voluntary. If you don't want to participate, just simply disable it by setting below configuration in `application.properties`.\n-```properties\n-azure.cosmosdb.allow-telemetry=false\n-```\n-When telemetry is enabled, an HTTP request will be sent to URL `https://dc.services.visualstudio.com/v2/track`. So please make sure it's not blocked by your firewall.  \n-Find more information about Azure Service Privacy Statement, please check [Microsoft Online Services Privacy Statement](https://www.microsoft.com/privacystatement/OnlineServices/Default.aspx). \n-\n-## Key concepts\n-- Spring Data ReactiveCrudRepository basic CRUD functionality\n-    - save\n-    - findAll\n-    - findOne by Id\n-    - deleteAll\n-    - delete by Id\n-    - delete entity\n-- Spring Data [@Id](https://github.com/spring-projects/spring-data-commons/blob/db62390de90c93a78743c97cc2cc9ccd964994a5/src/main/java/org/springframework/data/annotation/Id.java) annotation.\n-  There're 2 ways to map a field in domain class to `id` of Azure Cosmos DB document.\n-  - annotate a field in domain class with @Id, this field will be mapped to document `id` in Cosmos DB. \n-  - set name of this field to `id`, this field will be mapped to document `id` in Cosmos DB.\n-    [Note] if both way applied,    \n-- Custom collection Name.\n-   By default, collection name will be class name of user domain class. To customize it, add annotation `@Document(collection=\"myCustomCollectionName\")` to your domain class, that's all.\n-- Supports [Azure Cosmos DB partition](https://docs.microsoft.com/azure/cosmos-db/partition-data). To specify a field of your domain class to be partition key field, just annotate it with `@PartitionKey`. When you do CRUD operation, please specify your partition value. For more sample on partition CRUD, please refer to [test here](./test/java/com/microsoft/azure/spring/data/cosmosdb/repository/AddressRepositoryIT.java)   \n-- Supports [Spring Data custom query](https://docs.spring.io/spring-data/commons/docs/current/reference/html/#repositories.query-methods.details) find operation.\n-- Supports [spring-boot-starter-data-rest](https://projects.spring.io/spring-data-rest/).\n-- Supports List and nested type in domain class.\n-\n-## Examples\n-Please refer to [sample project here](../azure-spring-boot-samples/azure-spring-boot-sample-cosmosdb).\n-\n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n-\n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n-\n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMzMyNQ==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465723325", "createdAt": "2020-08-05T13:24:17Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-keyvault-secrets/README.md", "diffHunk": "@@ -155,22 +168,22 @@ The application will take care of getting the value that is backed by the\n `my.not.compliant.property`.\n \n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n-\n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n-\n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNDczNA==", "bodyText": "Some of the below sections don't quite fit into the Examples, we should file an issue to refine this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465724734", "createdAt": "2020-08-05T13:26:20Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-keyvault-secrets/README.md", "diffHunk": "@@ -1,22 +1,38 @@\n # Azure Key Vault Secrets Spring Boot starter client library for Java\n Azure Key Vault Secrets Spring boot starter is Spring starter for [Azure Key Vault Secrets](https://docs.microsoft.com/rest/api/keyvault/about-keys--secrets-and-certificates#BKMK_WorkingWithSecrets). With this starter, Azure Key Vault is added as one of Spring PropertySource, so secrets stored in Azure Key Vault could be easily used and conveniently accessed like other externalized configuration property, e.g. properties in files.\n \n+[Package (Maven)][package] | [API reference documentation][refdocs] | [Product documentation][docs] | [Samples][sample]\n+\n ## Getting started\n-### Add the dependency\n+### Prerequisites\n+- JDK 1.8 and above\n+- [Maven](http://maven.apache.org/) 3.0 and above\n+\n+### Include the package\n \n `azure-keyvault-secrets-spring-boot-starter` is published on Maven Central Repository.  \n If you are using Maven, add the following dependency.  \n \n-[//]: # ({x-version-update-start;com.azure:azure-keyvault-secrets-spring-boot-starter;current})\n+[//]: # ({x-version-update-start;com.microsoft.azure:azure-keyvault-secrets-spring-boot-starter;current})\n ```xml\n <dependency>\n-    <groupId>com.azure</groupId>\n+    <groupId>com.microsoft.azure</groupId>\n     <artifactId>azure-keyvault-secrets-spring-boot-starter</artifactId>\n     <version>2.3.3-beta.1</version>\n </dependency>\n ```\n [//]: # ({x-version-update-end})\n \n+## Key concepts\n+Key Vault provides secure storage of secrets, such as passwords and database connection strings.\n+\n+From a developer's perspective, Key Vault APIs accept and return secret values as strings. Internally, Key Vault stores and manages secrets as sequences of octets (8-bit bytes), with a maximum size of 25k bytes each. The Key Vault service doesn't provide semantics for secrets. It merely accepts the data, encrypts it, stores it, and returns a secret identifier (\"id\"). The identifier can be used to retrieve the secret at a later time.\n+\n+For highly sensitive data, clients should consider additional layers of protection for data. Encrypting data using a separate protection key prior to storage in Key Vault is one example.\n+\n+Key Vault also supports a contentType field for secrets. Clients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data. For instance, an implementation may store both passwords and certificates as secrets, then use this field to differentiate. There are no predefined values.\n+\n+## Examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNTc1OQ==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465725759", "createdAt": "2020-08-05T13:27:48Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-metrics/README.md", "diffHunk": "@@ -49,17 +54,24 @@ To solve this issue, you need to add the dependency below into your classpath:\n    <version>2.3.0</version>\n </dependency>\n ```\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNzQxOA==", "bodyText": "Is this the wrong key? Why do we keep the telemetry section here while removing it from others?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465727418", "createdAt": "2020-08-05T13:30:19Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-metrics/README.md", "diffHunk": "@@ -49,17 +54,24 @@ To solve this issue, you need to add the dependency below into your classpath:\n    <version>2.3.0</version>\n </dependency>\n ```\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n ## Next steps\n ### Allow telemetry\n Microsoft would like to collect data about how users use this Spring boot starter. Microsoft uses this information to improve our tooling experience. Participation is voluntary. If you don't want to participate, just simply disable it by setting below configuration in `application.properties`.\n ```\n-azure.keyvault.allow.telemetry=false\n+azure.servicebus.allow-telemetry=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczMDg2Nw==", "bodyText": "Should we mark the 2.3.x version for storage, servicebus, and mediaservices as deprecated? Which makes it more straightforward for the users.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465730867", "createdAt": "2020-08-05T13:35:35Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter/README.md", "diffHunk": "@@ -9,6 +11,23 @@ This repository supports Spring Boot 2.1.x, 2.2.x and 2.3.x. Please read [Spring\n - JDK 1.8 and above\n - [Maven](http://maven.apache.org/) 3.0 and above\n \n+### Include the Package\n+\n+`azure-spring-boot-starter` is published on Maven Central Repository.  \n+If you are using Maven, add the following dependency.  \n+\n+[//]: # ({x-version-update-start;com.microsoft.azure:azure-spring-boot-starter;current})\n+```xml\n+<dependency>\n+    <groupId>com.microsoft.azure</groupId>\n+    <artifactId>azure-spring-boot-starter</artifactId>\n+    <version>2.3.3-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+## Examples\n+\n ## Key concepts\n ### Usage\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczMjAwNw==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r465732007", "createdAt": "2020-08-05T13:37:20Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/README.md", "diffHunk": "@@ -47,24 +55,23 @@ variable and setting the appropriate properties used by auto-configuration code.\n For details, please see sample code in the [azure-spring-boot-sample-cloud-foundry](../azure-spring-boot-samples/azure-spring-boot-sample-cloud-foundry) \n \n ## Examples\n-Please refer to the [samples](../azure-spring-boot-samples) for more getting started instructions.\n \n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n-\n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n-\n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaf950bde07ed4030b72e9dd48c1592a4f43c13c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8d7f4776a5df693898e241567adeb30c0817b36", "committedDate": "2020-08-06T05:22:45Z", "message": "add spring logging in readme"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2223a26deea90820b16f80b70018e36baac82ff9", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2223a26deea90820b16f80b70018e36baac82ff9", "committedDate": "2020-08-06T05:20:15Z", "message": "add spring logging in readme"}, "afterCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8d7f4776a5df693898e241567adeb30c0817b36", "committedDate": "2020-08-06T05:22:45Z", "message": "add spring logging in readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjA1ODc3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#pullrequestreview-462205877", "createdAt": "2020-08-06T05:53:37Z", "commit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTo1MzozN1rOG8kR9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTo1NjoyOVrOG8kVjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MjE2NQ==", "bodyText": "Let's use current instead of a specific version in the link.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466162165", "createdAt": "2020-08-06T05:53:37Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/README.md", "diffHunk": "@@ -198,28 +214,35 @@ configured a new Azure AD B2C tenant and registered a new application in it, and\n application to use the Spring annotations and classes to protect the web app.\n \n ## Troubleshooting\n-If you encounter any bug, please file an issue [here](https://github.com/Azure/azure-sdk-for-java/issues).\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n-To suggest a new feature or changes that could be made, file an issue the same way you would for a bug.\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n \n-You can participate community driven [![Gitter](https://badges.gitter.im/Microsoft/spring-on-azure.svg)](https://gitter.im/Microsoft/spring-on-azure)\n+The following example shows potential logging settings in `application.properties`:\n \n-## Next steps\n-#### Allow telemetry\n-\n-Microsoft would like to collect data about how users use this Spring boot starter. Microsoft uses this information to improve our tooling experience. Participation is voluntary. If you don't want to participate, just simply disable it by setting below configuration in `application.properties`.\n-\n-```\n-azure.activedirectory.b2c.allow-telemetry=false\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n ```\n \n-When telemetry is enabled, an HTTP request will be sent to URL `https://dc.services.visualstudio.com/v2/track`. So please make sure it's not blocked by your firewall.\n-\n-Find more information about Azure Service Privacy Statement, please check [Microsoft Online Services Privacy Statement](https://www.microsoft.com/privacystatement/OnlineServices/Default.aspx).\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MjQ1OA==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466162458", "createdAt": "2020-08-06T05:54:24Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-cosmosdb/README.md", "diffHunk": "@@ -198,6 +198,20 @@ Autowired UserRepository interface, then can do save, delete and find operations\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MjUxMw==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466162513", "createdAt": "2020-08-06T05:54:36Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-data-gremlin/README.md", "diffHunk": "@@ -201,6 +201,20 @@ Autowired UserRepository interface, then can do save, delete and find operations\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MjYzNg==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466162636", "createdAt": "2020-08-06T05:54:58Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-keyvault-secrets/README.md", "diffHunk": "@@ -111,65 +111,23 @@ public class KeyVaultSample implements CommandLineRunner {\n }\n ```\n \n-### Multiple Key Vault support\n-\n-If you want to use multiple key vaults you need to define names for each of the\n-key vaults you want to use and in which order the key vaults should be consulted.\n-If a property exists in multiple key vaults the order determine which value you\n-will get back.\n-\n-The example below shows a setup for 2 key vaults, named `keyvault1` and\n-`keyvault2`. The order specifies that `keyvault1` will be consulted first.\n-\n-```\n-azure.keyvault.order=keyvault1,keyvault2\n-azure.keyvault.keyvault1.uri=put-a-azure-keyvault-uri-here\n-azure.keyvault.keyvault1.client-id=put-a-azure-client-id-here\n-azure.keyvault.keyvault1.client-key=put-a-azure-client-key-here\n-azure.keyvault.keyvault1.tenant-id=put-a-azure-tenant-id-here\n-azure.keyvault.keyvault2.uri=put-a-azure-keyvault-uri-here\n-azure.keyvault.keyvault2.client-id=put-a-azure-client-id-here\n-azure.keyvault.keyvault2.client-key=put-a-azure-client-key-here\n-azure.keyvault.keyvault2.tenant-id=put-a-azure-tenant-id-here\n-```\n-\n-Note if you decide to use multiple key vault support and you already have an\n-existing configuration, please make sure you migrate that configuration to the\n-multiple key vault variant. Mixing multiple key vaults with an existing single\n-key vault configuration is a non supported scenario.\n-\n-### Case sensitive key mode\n-\n-The new case sensitive mode allows you to use case sensitive key vault names. Note\n-that the key vault secret key still needs to honor the naming limitation as \n-described in [About keys, secrets, and certificates](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates).\n-\n-To enable case sensitive mode use:\n-\n-```\n-azure.keyvault.case-sensitive-keys=true\n-```\n-\n-### Placeholders in properties\n+## Troubleshooting\n+### Enable client logging\n+Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n-If your Spring property is using a name that does not honor the key vault secret\n-key limitation use the following technique as described by \n-[Externalized Configuration](https://docs.spring.io/autorepo/docs/spring-boot/2.2.7.RELEASE/reference/html/spring-boot-features.html#boot-features-external-config-placeholders-in-properties) \n-in the Spring Boot documentation.\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n \n-An example of using a placeholder:\n+The following example shows potential logging settings in `application.properties`:\n \n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n ```\n-my.not.compliant.property=${myCompliantKeyVaultSecret}\n-```\n-\n-The application will take care of getting the value that is backed by the \n-`myCompliantKeyVaultSecret` key name and assign its value to the non compliant\n-`my.not.compliant.property`.\n \n-## Troubleshooting\n-### Enable client logging\n-Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2Mjg3Ng==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466162876", "createdAt": "2020-08-06T05:55:45Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-metrics/README.md", "diffHunk": "@@ -57,14 +57,21 @@ To solve this issue, you need to add the dependency below into your classpath:\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n-## Next steps\n-### Allow telemetry\n-Microsoft would like to collect data about how users use this Spring boot starter. Microsoft uses this information to improve our tooling experience. Participation is voluntary. If you don't want to participate, just simply disable it by setting below configuration in `application.properties`.\n-```\n-azure.servicebus.allow-telemetry=false\n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n ```\n-When telemetry is enabled, an HTTP request will be sent to URL `https://dc.services.visualstudio.com/v2/track`. So please make sure it's not blocked by your firewall.  \n-Find more information about Azure Service Privacy Statement, please check [Microsoft Online Services Privacy Statement](https://www.microsoft.com/privacystatement/OnlineServices/Default.aspx). \n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MzAwMQ==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466163001", "createdAt": "2020-08-06T05:56:11Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-servicebus-jms/README.md", "diffHunk": "@@ -199,6 +199,20 @@ To solve this issue, you need to add the dependency below into your classpath:\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MzAzNA==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466163034", "createdAt": "2020-08-06T05:56:20Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter/README.md", "diffHunk": "@@ -52,6 +52,20 @@ Starter Name | Version for Spring Boot 2.3.x | Version for Spring Boot 2.2.x | V\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE2MzA4NQ==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#discussion_r466163085", "createdAt": "2020-08-06T05:56:29Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/README.md", "diffHunk": "@@ -60,6 +60,20 @@ For details, please see sample code in the [azure-spring-boot-sample-cloud-found\n ### Enable client logging\n Azure SDKs for Java offer a consistent logging story to help aid in troubleshooting application errors and expedite their resolution. The logs produced will capture the flow of an application before reaching the terminal state to help locate the root issue. View the [logging][logging] wiki for guidance about enabling logging.\n \n+### Enable Spring logging\n+Spring allow all the supported logging systems to set logger levels set in the Spring Environment (for example, in application.properties) by using `logging.level.<logger-name>=<level>` where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF. The root logger can be configured by using logging.level.root.\n+\n+The following example shows potential logging settings in `application.properties`:\n+\n+```properties\n+logging.level.root=WARN\n+logging.level.org.springframework.web=DEBUG\n+logging.level.org.hibernate=ERROR\n+```\n+\n+For more information about setting loging in pring, please refer to the [official doc](https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d7f4776a5df693898e241567adeb30c0817b36"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f59ec38d443f14fc527dec11ddf77ba69270d69a", "author": {"user": {"login": "yiliuTo", "name": "Yi Liu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f59ec38d443f14fc527dec11ddf77ba69270d69a", "committedDate": "2020-08-06T06:32:06Z", "message": "modify spring log url"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjQ2ODEz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13810#pullrequestreview-462246813", "createdAt": "2020-08-06T07:18:23Z", "commit": {"oid": "f59ec38d443f14fc527dec11ddf77ba69270d69a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 815, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}