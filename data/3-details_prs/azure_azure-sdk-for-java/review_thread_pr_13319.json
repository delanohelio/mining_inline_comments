{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTQ2NjA5", "number": 13319, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyMzoxNVrOES_4Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyNDo0M1rOES_5tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzU2MzU1OnYy", "diffSide": "LEFT", "path": "sdk/keyvault/azure-security-keyvault-certificates/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyMzoxNVrOG4fZjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyMzoxNVrOG4fZjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4Nzg4NA==", "bodyText": "Instead of \\n, it is preferred to use %n because it will give a platform-dependent new line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13319#discussion_r461887884", "createdAt": "2020-07-28T21:23:15Z", "author": {"login": "samvaity"}, "path": "sdk/keyvault/azure-security-keyvault-certificates/README.md", "diffHunk": "@@ -138,7 +138,7 @@ SyncPoller<CertificateOperation, KeyVaultCertificateWithPolicy> certificatePolle\n     certificateClient.beginCreateCertificate(\"certificateName\", CertificatePolicy.getDefault());\n certificatePoller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n KeyVaultCertificate certificate = certificatePoller.getFinalResult();\n-System.out.printf(\"Certificate created with name \\\"%s\\\"\\n\", certificate.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aae75debe64853f487677c5d06490ca8a933b3b6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzU2NTMxOnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-certificates/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyMzo1MFrOG4fapw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDowNToxMlrOG5IKvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4ODE2Nw==", "bodyText": "Also, a nit I guess but we do follow printf() pattern for samples in other libraries.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13319#discussion_r461888167", "createdAt": "2020-07-28T21:23:50Z", "author": {"login": "samvaity"}, "path": "sdk/keyvault/azure-security-keyvault-certificates/README.md", "diffHunk": "@@ -138,7 +138,7 @@ SyncPoller<CertificateOperation, KeyVaultCertificateWithPolicy> certificatePolle\n     certificateClient.beginCreateCertificate(\"certificateName\", CertificatePolicy.getDefault());\n certificatePoller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n KeyVaultCertificate certificate = certificatePoller.getFinalResult();\n-System.out.printf(\"Certificate created with name \\\"%s\\\"\\n\", certificate.getName());\n+System.out.println(\"Certificate created with name: \" + certificate.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aae75debe64853f487677c5d06490ca8a933b3b6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1NTgzNw==", "bodyText": "I see, then we should be changing all our READMES and samples to follow this pattern at some point.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13319#discussion_r462555837", "createdAt": "2020-07-29T20:05:12Z", "author": {"login": "vcolin7"}, "path": "sdk/keyvault/azure-security-keyvault-certificates/README.md", "diffHunk": "@@ -138,7 +138,7 @@ SyncPoller<CertificateOperation, KeyVaultCertificateWithPolicy> certificatePolle\n     certificateClient.beginCreateCertificate(\"certificateName\", CertificatePolicy.getDefault());\n certificatePoller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n KeyVaultCertificate certificate = certificatePoller.getFinalResult();\n-System.out.printf(\"Certificate created with name \\\"%s\\\"\\n\", certificate.getName());\n+System.out.println(\"Certificate created with name: \" + certificate.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4ODE2Nw=="}, "originalCommit": {"oid": "aae75debe64853f487677c5d06490ca8a933b3b6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzU2Nzg4OnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-keys/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyNDo0M1rOG4fcQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDowNDoxOVrOG5IHvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4ODU3Nw==", "bodyText": "do we need the explicit toString()?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13319#discussion_r461888577", "createdAt": "2020-07-28T21:24:43Z", "author": {"login": "samvaity"}, "path": "sdk/keyvault/azure-security-keyvault-keys/README.md", "diffHunk": "@@ -184,7 +184,7 @@ KeyVaultKey key = keyClient.getKey(\"<key-name>\");\n // Update the expiry time of the key.\n key.getProperties().setExpiresOn(OffsetDateTime.now().plusDays(30));\n KeyVaultKey updatedKey = keyClient.updateKeyProperties(key.getProperties());\n-System.out.printf(\"Key's updated expiry time: %s\\n\", updatedKey.getProperties().getExpiresOn().toString());\n+System.out.println(\"Key's updated expiry time: \" + updatedKey.getProperties().getExpiresOn().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aae75debe64853f487677c5d06490ca8a933b3b6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU1NTA2OQ==", "bodyText": "Good catch, we shouldn't need it as far as I know.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13319#discussion_r462555069", "createdAt": "2020-07-29T20:04:19Z", "author": {"login": "vcolin7"}, "path": "sdk/keyvault/azure-security-keyvault-keys/README.md", "diffHunk": "@@ -184,7 +184,7 @@ KeyVaultKey key = keyClient.getKey(\"<key-name>\");\n // Update the expiry time of the key.\n key.getProperties().setExpiresOn(OffsetDateTime.now().plusDays(30));\n KeyVaultKey updatedKey = keyClient.updateKeyProperties(key.getProperties());\n-System.out.printf(\"Key's updated expiry time: %s\\n\", updatedKey.getProperties().getExpiresOn().toString());\n+System.out.println(\"Key's updated expiry time: \" + updatedKey.getProperties().getExpiresOn().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4ODU3Nw=="}, "originalCommit": {"oid": "aae75debe64853f487677c5d06490ca8a933b3b6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4877, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}