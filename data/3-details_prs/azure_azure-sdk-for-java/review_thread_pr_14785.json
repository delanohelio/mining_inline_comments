{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODAzMzg1", "number": 14785, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1MDozNFrOEgHZmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTozNzo1M1rOEgKifQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTExMTI5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1MDozNFrOHMzaIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1MDozNFrOHMzaIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4NzIzMg==", "bodyText": "nit: we could get the log level from command line as well", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483187232", "createdAt": "2020-09-03T18:50:34Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/DigitalTwinsLifecycleAsyncSample.java", "diffHunk": "@@ -68,23 +64,26 @@\n         TwinsPath = Paths.get(DtDlDirectoryPath.toString(), \"DigitalTwins\");\n         ModelsPath = Paths.get(DtDlDirectoryPath.toString(), \"Models\");\n         RelationshipsPath = Paths.get(DtDlDirectoryPath.toString(), \"Relationships\");\n+    }\n+\n+    public static void main(String[] args) throws IOException, InterruptedException {\n+\n+        SamplesArguments parsedArguments = new SamplesArguments(args);\n \n         client = new DigitalTwinsClientBuilder()\n             .tokenCredential(\n                 new ClientSecretCredentialBuilder()\n-                    .tenantId(tenantId)\n-                    .clientId(clientId)\n-                    .clientSecret(clientSecret)\n+                    .tenantId(parsedArguments.getTenantId())\n+                    .clientId(parsedArguments.getClientId())\n+                    .clientSecret(parsedArguments.getClientSecret())\n                     .build()\n             )\n-            .endpoint(endpoint)\n+            .endpoint(parsedArguments.getDigitalTwinUrl())\n             .httpLogOptions(\n                 new HttpLogOptions()\n                     .setLogLevel(HttpLogDetailLevel.NONE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTEyMTI3OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1MzoyM1rOHMzgRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1NjowMlrOHMzlyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4ODgwNQ==", "bodyText": "Ah, is there no way to set it inline during initialization? Or some annotation perhaps?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483188805", "createdAt": "2020-09-03T18:53:23Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MDIxOQ==", "bodyText": "unfortunately not :(", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483190219", "createdAt": "2020-09-03T18:56:02Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE4ODgwNQ=="}, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTEzMTA2OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODo1NjoyMVrOHMzmXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToxNDowMVrOHM0JyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MDM2Ng==", "bodyText": "nit: Can we do an inline addition to options? Just trying to reduce the lines of code here!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483190366", "createdAt": "2020-09-03T18:56:21Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);\n+        tenantId.setRequired(true);\n+        clientId.setRequired(true);\n+        clientSecret.setRequired(true);\n+\n+        options.addOption(input);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MTA3Nw==", "bodyText": "sure, but won't save that much space :))", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483191077", "createdAt": "2020-09-03T18:57:43Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);\n+        tenantId.setRequired(true);\n+        clientId.setRequired(true);\n+        clientSecret.setRequired(true);\n+\n+        options.addOption(input);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MDM2Ng=="}, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MTE0Ng==", "bodyText": "Options options = new Options()\n            .addOption(input)\n            .addOption(tenantId)\n            .addOption(clientId)\n            .addOption(clientSecret);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483191146", "createdAt": "2020-09-03T18:57:53Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);\n+        tenantId.setRequired(true);\n+        clientId.setRequired(true);\n+        clientSecret.setRequired(true);\n+\n+        options.addOption(input);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MDM2Ng=="}, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5OTQzMg==", "bodyText": "How about:\nOptions options = new Options()\n    .addOption(new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\"))\n    .addOption(new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\"))\n    .addOption(new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\"))\n    .addOption(new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\"));\nThere also seems to be a builder options:\nnew Options()\n\t.addOption(Option.builder(\"d\")\n\t\t\t.required()\n\t\t\t.hasArg(true)\n\t\t\t.argName(DIGITALTWINS_URL)\n\t\t\t.desc(\"DigitalTwins endpoint URL\")\n\t\t\t.build())\n\t(...)\n\t.addOption(Option.builder(\"t\")\n\t\t\t.required()\n\t\t\t.hasArg(true)\n\t\t\t.argName(TENANT_ID)\n\t\t\t.desc(\"AAD Tenant Id\")\n\t\t\t.build());\nHowever, I am not too particular about it, just giving you options :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483199432", "createdAt": "2020-09-03T19:14:01Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/samples/java/com/azure/digitaltwins/core/SamplesArguments.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.azure.digitaltwins.core;\n+\n+import org.apache.commons.cli.*;\n+\n+public class SamplesArguments {\n+\n+    private final String DIGITALTWINS_URL = \"DigitalTwinsEndpoint\";\n+    private final String TENANT_ID = \"tenantId\";\n+    private final String CLIENT_ID = \"clientId\";\n+    private final String CLIENT_SECRET = \"clientSecret\";\n+\n+    private String digitalTwinUrl;\n+    private String tenantId;\n+    private String clientId;\n+    private String clientSecret;\n+\n+    public SamplesArguments(String[] args) {\n+        Options options = new Options();\n+        Option input = new Option(\"d\", DIGITALTWINS_URL, false, \"DigitalTwins endpoint URL\");\n+        Option tenantId = new Option(\"t\", TENANT_ID, false, \"AAD Tenant Id\");\n+        Option clientId = new Option(\"c\", CLIENT_ID, false, \"AAD Client Id\");\n+        Option clientSecret = new Option(\"s\", CLIENT_SECRET, false, \"AAD Client Secret\");\n+\n+        input.setRequired(true);\n+        tenantId.setRequired(true);\n+        clientId.setRequired(true);\n+        clientSecret.setRequired(true);\n+\n+        options.addOption(input);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE5MDM2Ng=="}, "originalCommit": {"oid": "8ae96716f59b121801a4693fb510fc239ec9a947"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTYyNTU3OnYy", "diffSide": "RIGHT", "path": "eng/versioning/external_dependencies.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTozNzo1M1rOHM4U9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMTozNzo1M1rOHM4U9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI2NzgzMA==", "bodyText": "Given that this is being used as a test dependency this is fine to add.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14785#discussion_r483267830", "createdAt": "2020-09-03T21:37:53Z", "author": {"login": "alzimmermsft"}, "path": "eng/versioning/external_dependencies.txt", "diffHunk": "@@ -161,6 +161,7 @@ io.opentelemetry:opentelemetry-sdk;0.6.0\n io.grpc:grpc-context;1.30.2\n io.projectreactor:reactor-test;3.3.9.RELEASE\n junit:junit;4.13\n+commons-cli:commons-cli;1.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e576f05f60a685036622fff89454e23332c54e3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1264, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}