{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzQzNTY1", "number": 8847, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0MTozNVrODmWdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0NToyNlrODmWkDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTQwNTUwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0MTozNVrOFzuCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjowNjo0MVrOFzvEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3NTkxOA==", "bodyText": "Duration is not used as a suffix in ConnectionPolicy#setRequestTimeout() and getter.\nany reason we are using it here?\nwhat are your thought on the method naming?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389775918", "createdAt": "2020-03-09T15:41:35Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "diffHunk": "@@ -193,13 +194,13 @@ void setError(CosmosError cosmosError) {\n     }\n \n     /**\n-     * Gets the recommended time interval after which the client can retry failed\n+     * Gets the recommended time duration after which the client can retry failed\n      * requests\n      *\n-     * @return the recommended time interval after which the client can retry failed\n+     * @return the recommended time duration after which the client can retry failed\n      * requests.\n      */\n-    public long getRetryAfterInMilliseconds() {\n+    public Duration getRetryAfterDuration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc4Njk0Mg==", "bodyText": "The reason I added Duration here is because getRetryAfter seems very general. It was not clear to me that it returns duration to retry after. So I added that. I can change it to getRetryAfter if you think that is much better.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389786942", "createdAt": "2020-03-09T15:57:53Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "diffHunk": "@@ -193,13 +194,13 @@ void setError(CosmosError cosmosError) {\n     }\n \n     /**\n-     * Gets the recommended time interval after which the client can retry failed\n+     * Gets the recommended time duration after which the client can retry failed\n      * requests\n      *\n-     * @return the recommended time interval after which the client can retry failed\n+     * @return the recommended time duration after which the client can retry failed\n      * requests.\n      */\n-    public long getRetryAfterInMilliseconds() {\n+    public Duration getRetryAfterDuration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3NTkxOA=="}, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc5Mjg5NQ==", "bodyText": "ok makes sense, getRetryAfterDuration() looks good", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389792895", "createdAt": "2020-03-09T16:06:41Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientException.java", "diffHunk": "@@ -193,13 +194,13 @@ void setError(CosmosError cosmosError) {\n     }\n \n     /**\n-     * Gets the recommended time interval after which the client can retry failed\n+     * Gets the recommended time duration after which the client can retry failed\n      * requests\n      *\n-     * @return the recommended time interval after which the client can retry failed\n+     * @return the recommended time duration after which the client can retry failed\n      * requests.\n      */\n-    public long getRetryAfterInMilliseconds() {\n+    public Duration getRetryAfterDuration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3NTkxOA=="}, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTQyMDQzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0NToxNVrOFzuLyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo1ODoxNFrOFzuuFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODM3Nw==", "bodyText": "hmm, do we want \"InSeconds()\" as suffix in the method name?\nthe time resolution for this method is seconds. If we are using Duration here we should update the documentation mentioning that the resolution is in seconds.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389778377", "createdAt": "2020-03-09T15:45:15Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "diffHunk": "@@ -105,21 +107,21 @@ public ConsistencyPolicy setMaxStalenessPrefix(int maxStalenessPrefix) {\n      *\n      * @return the max staleness prefix.\n      */\n-    public int getMaxStalenessIntervalInSeconds() {\n+    public Duration getMaxStalenessIntervalInSeconds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc4NzE1OQ==", "bodyText": "We don't want inSeconds() as the suffix in the method name. I will remove it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389787159", "createdAt": "2020-03-09T15:58:14Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "diffHunk": "@@ -105,21 +107,21 @@ public ConsistencyPolicy setMaxStalenessPrefix(int maxStalenessPrefix) {\n      *\n      * @return the max staleness prefix.\n      */\n-    public int getMaxStalenessIntervalInSeconds() {\n+    public Duration getMaxStalenessIntervalInSeconds() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODM3Nw=="}, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTQyMTU5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo0NToyNlrOFzuMfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTo1ODoyNVrOFzuumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODU1OQ==", "bodyText": "the same.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389778559", "createdAt": "2020-03-09T15:45:26Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "diffHunk": "@@ -105,21 +107,21 @@ public ConsistencyPolicy setMaxStalenessPrefix(int maxStalenessPrefix) {\n      *\n      * @return the max staleness prefix.\n      */\n-    public int getMaxStalenessIntervalInSeconds() {\n+    public Duration getMaxStalenessIntervalInSeconds() {\n         Integer value = super.getInt(Constants.Properties.MAX_STALENESS_INTERVAL_IN_SECONDS);\n         if (value == null) {\n-            return ConsistencyPolicy.DEFAULT_MAX_STALENESS_INTERVAL;\n+            return Duration.ofSeconds(ConsistencyPolicy.DEFAULT_MAX_STALENESS_INTERVAL);\n         }\n-        return value;\n+        return Duration.ofSeconds(value);\n     }\n \n     /**\n      * Sets the in bounded staleness consistency, the maximum allowed staleness in terms time interval.\n      *\n-     * @param maxStalenessIntervalInSeconds the max staleness interval in seconds.\n+     * @param maxStalenessIntervalInSeconds the max staleness duration.\n      * @return the ConsistenctPolicy.\n      */\n-    public ConsistencyPolicy setMaxStalenessIntervalInSeconds(int maxStalenessIntervalInSeconds) {\n+    public ConsistencyPolicy setMaxStalenessIntervalInSeconds(Duration maxStalenessIntervalInSeconds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc4NzI4OA==", "bodyText": "agreed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8847#discussion_r389787288", "createdAt": "2020-03-09T15:58:25Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/model/ConsistencyPolicy.java", "diffHunk": "@@ -105,21 +107,21 @@ public ConsistencyPolicy setMaxStalenessPrefix(int maxStalenessPrefix) {\n      *\n      * @return the max staleness prefix.\n      */\n-    public int getMaxStalenessIntervalInSeconds() {\n+    public Duration getMaxStalenessIntervalInSeconds() {\n         Integer value = super.getInt(Constants.Properties.MAX_STALENESS_INTERVAL_IN_SECONDS);\n         if (value == null) {\n-            return ConsistencyPolicy.DEFAULT_MAX_STALENESS_INTERVAL;\n+            return Duration.ofSeconds(ConsistencyPolicy.DEFAULT_MAX_STALENESS_INTERVAL);\n         }\n-        return value;\n+        return Duration.ofSeconds(value);\n     }\n \n     /**\n      * Sets the in bounded staleness consistency, the maximum allowed staleness in terms time interval.\n      *\n-     * @param maxStalenessIntervalInSeconds the max staleness interval in seconds.\n+     * @param maxStalenessIntervalInSeconds the max staleness duration.\n      * @return the ConsistenctPolicy.\n      */\n-    public ConsistencyPolicy setMaxStalenessIntervalInSeconds(int maxStalenessIntervalInSeconds) {\n+    public ConsistencyPolicy setMaxStalenessIntervalInSeconds(Duration maxStalenessIntervalInSeconds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc3ODU1OQ=="}, "originalCommit": {"oid": "a35ac2de8e38aff37b1ede994016476b7fa3bb08"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 219, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}