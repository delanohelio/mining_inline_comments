{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Nzk3NTM0", "number": 18395, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNToyNjo0NlrOFJ7qzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNzozMlrOFJ-ghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTU5MTE2OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNToyNjo0NlrOIMdqPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNToyODoxMlrOIMdq_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTc3Mg==", "bodyText": "We'd better add a unit test for this case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549939772", "createdAt": "2020-12-30T05:26:46Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -43,6 +44,7 @@\n @Configuration\n @ConditionalOnMissingClass({ \"org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken\" })\n @ConditionalOnClass(ClientRegistrationRepository.class)\n+@ConditionalOnProperty(\"azure.activedirectory.client-id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf1195195e2ef4a0dd1b8b2bb6270ea254ee4d27"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTk2Nw==", "bodyText": "I also find the same problem in obo auto-configuration, please hold the release for my PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549939967", "createdAt": "2020-12-30T05:28:12Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -43,6 +44,7 @@\n @Configuration\n @ConditionalOnMissingClass({ \"org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken\" })\n @ConditionalOnClass(ClientRegistrationRepository.class)\n+@ConditionalOnProperty(\"azure.activedirectory.client-id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTc3Mg=="}, "originalCommit": {"oid": "cf1195195e2ef4a0dd1b8b2bb6270ea254ee4d27"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTY1MDU2OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoxODo0M1rOIMeInQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoxODo0M1rOIMeInQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NzU0OQ==", "bodyText": "Change method name. like doesNotHaveBeanIfRequiredPropertiesNotConfigured.\nAdd another test: hasBeanIfRequiredPropertiesConfigured", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549947549", "createdAt": "2020-12-30T06:18:43Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -5,22 +5,34 @@\n \n import com.azure.spring.aad.AADAuthorizationServerEndpoints;\n import org.junit.Test;\n+import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class AADWebAppConfigurationTest {\n+    private final WebApplicationContextRunner contextRunner = PropertiesUtils.getContextRunner();\n+\n+    @Test\n+    public void configurationInitialization() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dd26bf443a18465d5711980e1c61f784df596"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTY1MjEyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoxOTo0N1rOIMeJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoxOTo0N1rOIMeJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0Nzc1MA==", "bodyText": "Can we change the class name to WebApplicationContextRunnerUtils", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549947750", "createdAt": "2020-12-30T06:19:47Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java", "diffHunk": "@@ -17,20 +17,22 @@\n     public static WebApplicationContextRunner getContextRunner() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .withUserConfiguration(AADWebAppConfiguration.class)\n-            .withPropertyValues(\n-                \"azure.activedirectory.client-id = fake-client-id\",\n-                \"azure.activedirectory.client-secret = fake-client-secret\",\n-                \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-                \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+            .withUserConfiguration(AADWebAppConfiguration.class);\n     }\n \n+    public static WebApplicationContextRunner addBasicPropertyValues(WebApplicationContextRunner contextRunner) {\n+        return contextRunner.withPropertyValues(\n+            \"azure.activedirectory.client-id = fake-client-id\",\n+            \"azure.activedirectory.client-secret = fake-client-secret\",\n+            \"azure.activedirectory.tenant-id = fake-tenant-id\",\n+            \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dd26bf443a18465d5711980e1c61f784df596"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTc5NjU4OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzowODo1NFrOIMfj2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzowODo1NFrOIMfj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MDkwNg==", "bodyText": "We can use assertThat(context).hasSingleBean(AADAuthenticationProperties.class); instead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549970906", "createdAt": "2020-12-30T07:08:54Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -7,20 +7,49 @@\n import org.junit.Test;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class AADWebAppConfigurationTest {\n \n+    @Test\n+    public void noConfigurationOnMissingRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithoutRequiredProperties()\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(\"AADWebAppClientRegistrationRepository\");\n+                assertThat(context).doesNotHaveBean(\"OAuth2AuthorizedClientRepository\");\n+                assertThat(context).doesNotHaveBean(\"OAuth2UserService\");\n+        });\n+    }\n+\n+    @Test\n+    public void configurationOnRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .run(context -> {\n+                ClientRegistrationRepository clientRegistrationRepository = context.getBean(AADWebAppClientRegistrationRepository.class);\n+                OAuth2AuthorizedClientRepository authorizedClientRepository = context.getBean(OAuth2AuthorizedClientRepository.class);\n+                OAuth2UserService userService = context.getBean(OAuth2UserService.class);\n+                assertNotNull(clientRegistrationRepository);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01316d748b809c8ea301fb54ff5c42103b3acec9"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTgwNDA3OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxMDozOFrOIMfo3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxMDozOFrOIMfo3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MjE4OQ==", "bodyText": "Suggestion:\n\nRename getContextRunnerWithoutRequiredProperties to getContextRunner\nCall getContextRunner in getContextRunnerWithRequiredProperties", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549972189", "createdAt": "2020-12-30T07:10:38Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "diffHunk": "@@ -12,25 +12,29 @@\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01316d748b809c8ea301fb54ff5c42103b3acec9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTgxMDM3OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxMjoyMFrOIMftOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoyMzozMFrOIMgMbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MzMwNQ==", "bodyText": "Why delete allowed-groups?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549973305", "createdAt": "2020-12-30T07:12:20Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "diffHunk": "@@ -12,25 +12,29 @@\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n             .withUserConfiguration(AADWebAppConfiguration.class)\n             .withPropertyValues(\n                 \"azure.activedirectory.client-id = fake-client-id\",\n                 \"azure.activedirectory.client-secret = fake-client-secret\",\n-                \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-                \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+                \"azure.activedirectory.tenant-id = fake-tenant-id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01316d748b809c8ea301fb54ff5c42103b3acec9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4MTI5NA==", "bodyText": "Because allowed-group is not necessary.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549981294", "createdAt": "2020-12-30T07:23:30Z", "author": {"login": "yiliuTo"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "diffHunk": "@@ -12,25 +12,29 @@\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n             .withUserConfiguration(AADWebAppConfiguration.class)\n             .withPropertyValues(\n                 \"azure.activedirectory.client-id = fake-client-id\",\n                 \"azure.activedirectory.client-secret = fake-client-secret\",\n-                \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-                \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+                \"azure.activedirectory.tenant-id = fake-tenant-id\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MzMwNQ=="}, "originalCommit": {"oid": "01316d748b809c8ea301fb54ff5c42103b3acec9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDA0NzI5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNTozOVrOIMiHCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNTozOVrOIMiHCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMjY4Mg==", "bodyText": "allowed-groups is not necessary here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550012682", "createdAt": "2020-12-30T08:05:39Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java", "diffHunk": "@@ -43,7 +43,8 @@ private void getBeans(AssertableWebApplicationContext context) {\n \n     @Test\n     public void addScopeForDefaultClient() {\n-        contextRunner.run(context -> {\n+        contextRunner.withPropertyValues(\"azure.activedirectory.user-group.allowed-groups = group1, group2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11c02377bb426c6a70cd162dff67092fc6814f5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDA0OTMyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNjowM1rOIMiIbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNjowM1rOIMiIbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMzAzNg==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550013036", "createdAt": "2020-12-30T08:06:03Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -7,20 +7,47 @@\n import org.junit.Test;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.springframework.boot.test.context.assertj.ApplicationContextAssert.Scope.INCLUDE_ANCESTORS;\n \n public class AADWebAppConfigurationTest {\n \n+    @Test\n+    public void noConfigurationOnMissingRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunner()\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADWebAppClientRegistrationRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2UserService.class, INCLUDE_ANCESTORS);\n+        });\n+    }\n+\n+    @Test\n+    public void configurationOnRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADWebAppClientRegistrationRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).hasSingleBean(OAuth2UserService.class, INCLUDE_ANCESTORS);\n+            });\n+    }\n+\n     @Test\n     public void clientRegistered() {\n-        PropertiesUtils.getContextRunner()\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .withPropertyValues(\n+                \"azure.activedirectory.user-group.allowed-groups = group1, group2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11c02377bb426c6a70cd162dff67092fc6814f5"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDA1NjM5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNzozMlrOIMiM_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowNzozMlrOIMiM_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxNDIwNQ==", "bodyText": "Seems we can delete all allowed-groups.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550014205", "createdAt": "2020-12-30T08:07:32Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -60,10 +88,11 @@ public void clientRequiresPermissionRegistered() {\n \n     @Test\n     public void clientRequiresMultiPermissions() {\n-        PropertiesUtils.getContextRunner()\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n             .withPropertyValues(\n                 \"azure.activedirectory.authorization-clients.graph.scopes = Calendars.Read\",\n-                \"azure.activedirectory.authorization-clients.arm.scopes = https://management.core.windows.net/user_impersonation\"\n+                \"azure.activedirectory.authorization-clients.arm.scopes = https://management.core.windows.net/user_impersonation\",\n+                \"azure.activedirectory.user-group.allowed-groups = group1, group2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e11c02377bb426c6a70cd162dff67092fc6814f5"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1766, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}