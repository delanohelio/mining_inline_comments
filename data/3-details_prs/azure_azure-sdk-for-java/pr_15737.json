{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDI0NDI2", "number": 15737, "title": "[Tables] Add select parameter to getEntity methods", "bodyText": "Fixes: #15289\nAlso fixes a few small bugs I discovered while implementing this. Fixes are documented in the CHANGELOG.", "createdAt": "2020-09-25T23:23:58Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737", "merged": true, "mergeCommit": {"oid": "80a0e6e1463c2ae15cfc4095a3458bac35c97b45"}, "closed": true, "closedAt": "2020-09-30T01:06:18Z", "author": {"login": "bsiegel"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNYSSkgFqTQ5NzgwODc1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNfGJGgFqTQ5ODAyODE5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODA4NzUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#pullrequestreview-497808752", "createdAt": "2020-09-28T18:54:24Z", "commit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1NDoyNFrOHZLfpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1NTo1MlrOHZLi8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NDc3Mg==", "bodyText": "I'd add a link to the issue rather than the number.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496164772", "createdAt": "2020-09-28T18:54:24Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/CHANGELOG.md", "diffHunk": "@@ -2,9 +2,16 @@\n \n ## 12.0.0-beta.2 (Unreleased)\n \n-### Fixes\n+### Changed\n+\n+- The `getEntity` methods have gained the `select` query option to allow for more efficient existence checks for a table entity #15289", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTYxOA==", "bodyText": "@alzimmermsft iirc, we use the timeout on reactor rather than the timeout to the generated rest client. (ie. .block(timeout)).... is this correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496165618", "createdAt": "2020-09-28T18:55:52Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableClient.java", "diffHunk": "@@ -348,40 +347,61 @@ public void deleteEntity(String partitionKey, String rowKey, String eTag, Durati\n     }\n \n     /**\n-     * Queries and returns entities in the given table using the odata QueryOptions\n+     * gets the entity which fits the given criteria\n      *\n-     * @param options the odata query object\n-     * @param timeout max time for query to execute before erroring out\n-     * @return a list of the tables that fit the query\n+     * @param partitionKey the partition key of the entity\n+     * @param rowKey the row key of the entity\n+     * @return the table entity\n      */\n-    @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedIterable<TableEntity> listEntities(ListEntitiesOptions options, Duration timeout) {\n-        return null;\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public TableEntity getEntity(String partitionKey, String rowKey) {\n+        return client.getEntity(partitionKey, rowKey).block();\n     }\n \n     /**\n      * gets the entity which fits the given criteria\n      *\n      * @param partitionKey the partition key of the entity\n      * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n      * @return the table entity\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public TableEntity getEntity(String partitionKey, String rowKey) {\n-        return client.getEntity(partitionKey, rowKey).block();\n+    public TableEntity getEntity(String partitionKey, String rowKey, String select) {\n+        return client.getEntity(partitionKey, rowKey, select).block();\n     }\n \n     /**\n      * gets the entity which fits the given criteria\n      *\n      * @param partitionKey the partition key of the entity\n      * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n+     * @param timeout max time for query to execute before erroring out\n+     * @return the table entity\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public TableEntity getEntity(String partitionKey, String rowKey, String select, Duration timeout) {\n+        return getEntityWithResponse(partitionKey, rowKey, select, timeout, null).getValue();\n+    }\n+\n+    /**\n+     * gets the entity which fits the given criteria\n+     *\n+     * @param partitionKey the partition key of the entity\n+     * @param rowKey the row key of the entity\n+     * @param select a select expression using OData notation. Limits the columns on each record to just those\n+     *               requested, e.g. \"$select=PolicyAssignmentId, ResourceId\".\n+     * @param timeout max time for query to execute before erroring out\n      * @param context the context of the query\n      * @return a mono of the response with the table entity\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Response<TableEntity> getEntityWithResponse(String partitionKey, String rowKey, Context context) {\n-        return client.getEntityWithResponse(partitionKey, rowKey, new QueryOptions(), context).block();\n+    public Response<TableEntity> getEntityWithResponse(String partitionKey, String rowKey, String select,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODExOTMy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#pullrequestreview-497811932", "createdAt": "2020-09-28T18:58:47Z", "commit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1ODo0N1rOHZLo3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1ODo0N1rOHZLo3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NzEzNA==", "bodyText": "Can use flatMap(FluxUtil::toMono).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#discussion_r496167134", "createdAt": "2020-09-28T18:58:47Z", "author": {"login": "alzimmermsft"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableAsyncClient.java", "diffHunk": "@@ -582,7 +587,23 @@ public void close() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<TableEntity> getEntity(String partitionKey, String rowKey) {\n-        return getEntityWithResponse(partitionKey, rowKey).flatMap(response ->\n+        return getEntityWithResponse(partitionKey, rowKey, null).flatMap(response ->\n+            Mono.justOrEmpty(response.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bd774d362a6519d9fde79beb2081377f5e7b85f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8bd774d362a6519d9fde79beb2081377f5e7b85f", "committedDate": "2020-09-28T19:11:58Z", "message": "Expose select parameter to getEntity method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f012bc27e38b08f02018fd9709ee149e97bbde6b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f012bc27e38b08f02018fd9709ee149e97bbde6b", "committedDate": "2020-09-28T19:11:58Z", "message": "Fix copy/paste error in updateEntity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "146d198d8cac764aca17d8f27e9ac3bbdef649c8", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/146d198d8cac764aca17d8f27e9ac3bbdef649c8", "committedDate": "2020-09-28T19:11:58Z", "message": "Remove unimplemented listEntities(timeout)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29d23fa345827861a95f6f990776a76b9a447c3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c29d23fa345827861a95f6f990776a76b9a447c3", "committedDate": "2020-09-28T19:11:59Z", "message": "Fix updateEntity missing implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d1a91469c702b0e270af05bcadcaf7ce9cc045", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59d1a91469c702b0e270af05bcadcaf7ce9cc045", "committedDate": "2020-09-28T19:11:59Z", "message": "Update changelog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af3237f30929ec9bc00acc82e108af675e6d2ef5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/af3237f30929ec9bc00acc82e108af675e6d2ef5", "committedDate": "2020-09-25T23:52:10Z", "message": "fixup! Expose select parameter to getEntity method"}, "afterCommit": {"oid": "59d1a91469c702b0e270af05bcadcaf7ce9cc045", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59d1a91469c702b0e270af05bcadcaf7ce9cc045", "committedDate": "2020-09-28T19:11:59Z", "message": "Update changelog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDI4MTkz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15737#pullrequestreview-498028193", "createdAt": "2020-09-29T02:52:01Z", "commit": {"oid": "59d1a91469c702b0e270af05bcadcaf7ce9cc045"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3213, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}