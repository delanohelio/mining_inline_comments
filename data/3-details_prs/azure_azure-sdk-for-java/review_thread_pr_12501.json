{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTY1NDk2", "number": 12501, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoxNDoxM1rOEIjyDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoxNzo1OFrOEIj1Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDEwMzE5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoxNDoxM1rOGomKgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoyMDoxOVrOGomR_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMTUwNQ==", "bodyText": "Why is this logger.warn() and not logger.info(), is this intentional?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445221505", "createdAt": "2020-06-24T23:14:13Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -83,11 +84,10 @@ public GoneAndRetryWithRetryPolicy(RxDocumentServiceRequest request, Integer wai\n                                 exception, this.lastRetryWithException);\n                         exceptionToThrow = this.lastRetryWithException;\n                     } else {\n-                        logger.warn(\"Received gone exception after backoff/retry. Will fail the request. {}\",\n-                                exception.toString());\n+                        logger.warn(\"Received gone exception after backoff/retry. Will fail the request. {}, short stackTrace = [{}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMzQyMg==", "bodyText": "after all the retries are exhausted we want to print a warn message indicating failure. however when there are more retry attempt are left we want to print a info message.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445223422", "createdAt": "2020-06-24T23:20:19Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -83,11 +84,10 @@ public GoneAndRetryWithRetryPolicy(RxDocumentServiceRequest request, Integer wai\n                                 exception, this.lastRetryWithException);\n                         exceptionToThrow = this.lastRetryWithException;\n                     } else {\n-                        logger.warn(\"Received gone exception after backoff/retry. Will fail the request. {}\",\n-                                exception.toString());\n+                        logger.warn(\"Received gone exception after backoff/retry. Will fail the request. {}, short stackTrace = [{}]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMTUwNQ=="}, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDEwNTMzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoxNToyMVrOGomL2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozMzowOVrOGomhmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMTg1MA==", "bodyText": "It would be better if we can have this as a JVM parameter as well defined in Configs.java\nSo that if we want the customer to increase the depth size, we don't have to change the code, release and ask them to upgrade.\nWith JVM params, they can just update the param value and they can re-start their application.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445221850", "createdAt": "2020-06-24T23:15:21Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -23,8 +24,8 @@\n import java.time.Duration;\n \n public class GoneAndRetryWithRetryPolicy extends RetryPolicyWithDiagnostics {\n-\n     private final static Logger logger = LoggerFactory.getLogger(GoneAndRetryWithRetryPolicy.class);\n+    private final static int LIMITED_STACK_TRACE_FAILURE_DEPTH = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyNzQxNg==", "bodyText": "moved to Configs.java", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445227416", "createdAt": "2020-06-24T23:33:09Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -23,8 +24,8 @@\n import java.time.Duration;\n \n public class GoneAndRetryWithRetryPolicy extends RetryPolicyWithDiagnostics {\n-\n     private final static Logger logger = LoggerFactory.getLogger(GoneAndRetryWithRetryPolicy.class);\n+    private final static int LIMITED_STACK_TRACE_FAILURE_DEPTH = 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMTg1MA=="}, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDExMDc5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzoxNzo1OFrOGomPKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNjoxNVrOGomlOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMjY5Nw==", "bodyText": "We should put these in a try with finally block to close both StringWriter and PrintWriter in case there is any issue serializing the exception.\nJust as a safety check so that we don't have memory leaks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445222697", "createdAt": "2020-06-24T23:17:58Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "diffHunk": "@@ -646,4 +648,23 @@ public static String toJson(ObjectMapper mapper, ObjectNode object) {\n             throw new IllegalStateException(\"Unable to convert JSON to STRING\", e);\n         }\n     }\n+\n+    public static String limitedStackTrace(Exception e, int depth) {\n+        StackTraceElement[] stacktrace = e.getStackTrace();\n+        if (stacktrace == null) {\n+            return \"null\";\n+        } else {\n+            StringWriter strWriter = new StringWriter();\n+            PrintWriter writer = new PrintWriter(strWriter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyODM0Ng==", "bodyText": "This is not a resource. Using of StringBuilder is the same of using byte[] or StringBuilder. same as byte[] instantiation that is not needed to be explicilty closed, doesn't cause memory leak.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12501#discussion_r445228346", "createdAt": "2020-06-24T23:36:15Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "diffHunk": "@@ -646,4 +648,23 @@ public static String toJson(ObjectMapper mapper, ObjectNode object) {\n             throw new IllegalStateException(\"Unable to convert JSON to STRING\", e);\n         }\n     }\n+\n+    public static String limitedStackTrace(Exception e, int depth) {\n+        StackTraceElement[] stacktrace = e.getStackTrace();\n+        if (stacktrace == null) {\n+            return \"null\";\n+        } else {\n+            StringWriter strWriter = new StringWriter();\n+            PrintWriter writer = new PrintWriter(strWriter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMjY5Nw=="}, "originalCommit": {"oid": "21dfcc44213bd06d47eddf4e0041ba4f54d38b64"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3738, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}