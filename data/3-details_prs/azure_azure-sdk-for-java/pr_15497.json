{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMjQ4MDIy", "number": 15497, "title": "Azure Communication Service - Phone Number Administration SDK", "bodyText": "This PR adds the initial Phone Number Administration SDK. It includes the following:\n\nAutoRest Generated Client Code\nConvenience Layer Sync + Async Clients and Builder\nUnit Tests for Convenience Layer Builder\nPlayback Tests for Convenience Layer Sync + Async Clients\n\nTo be completed in separate PRs:\n\nException handling / Null Checks\nJava Doc Code Snippets\nLong Running Operations\nREADME updates", "createdAt": "2020-09-22T23:39:07Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497", "merged": true, "mergeCommit": {"oid": "7a5fa956b8218f8c5b237fd120eb20085894f4bf"}, "closed": true, "closedAt": "2020-09-25T20:35:52Z", "author": {"login": "waynemo"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLgq8MAH2gAyNDkxMjQ4MDIyOjRiNWVlNjE5OGI5MjJkOTFhOGE0YTZhYjhlMzhlNDJkM2JiZGRlYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMJXS5gH2gAyNDkxMjQ4MDIyOjQ3NzAwMDZkMDUyNDM0ZWIxNzFiOWNjZDc1MjljY2MxZGYwY2RiNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4b5ee6198b922d91a8a4a6ab8e38e42d3bbddebb", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b5ee6198b922d91a8a4a6ab8e38e42d3bbddebb", "committedDate": "2020-09-22T23:34:16Z", "message": "Add Phone Number functionality to azure-communication-administration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b0eea40b121f99ba0ac2aecee91672732069bec", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b0eea40b121f99ba0ac2aecee91672732069bec", "committedDate": "2020-09-22T23:34:36Z", "message": "Update checkstyle suppressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5a92026f81757117b93a9f162e4bd3cda171cc5c", "committedDate": "2020-09-23T02:23:56Z", "message": "Add missing copyright header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTM1NjM4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#pullrequestreview-494935638", "createdAt": "2020-09-23T18:31:20Z", "commit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODozMToyMFrOHW7W3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODozMToyMFrOHW7W3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgwMzIyOA==", "bodyText": "nit: suffix them with \"_PROPERTYNAME\"? It doesn't read well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r493803228", "createdAt": "2020-09-23T18:31:20Z", "author": {"login": "JianpingChen"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberClientBuilder.java", "diffHunk": "@@ -0,0 +1,264 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImplBuilder;\n+import com.azure.communication.common.CommunicationClientCredential;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Builder for creating clients of Communication Service phone number configuration\n+ */\n+@ServiceClientBuilder(serviceClients = {PhoneNumberClient.class, PhoneNumberAsyncClient.class})\n+public final class PhoneNumberClientBuilder {\n+    private static final Map<String, String> PROPERTIES =\n+        CoreUtils.getProperties(\"azure-communication-administration.properties\");\n+    private static final String SDK_NAME = \"name\";\n+    private static final String SDK_VERSION = \"version\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDg0Njg5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#pullrequestreview-495084689", "createdAt": "2020-09-23T22:11:50Z", "commit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjoxMTo1MVrOHXCwlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjoxMTo1MVrOHXCwlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyNDUwMw==", "bodyText": "Shouldn't these get picked from some configuration rather than being hardcoded?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r493924503", "createdAt": "2020-09-23T22:11:51Z", "author": {"login": "ankitarorabit"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/implementation/PhoneNumberAdminClientImpl.java", "diffHunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.communication.administration.implementation;\n+\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+\n+/** Initializes a new instance of the PhoneNumberAdminClient type. */\n+public final class PhoneNumberAdminClientImpl {\n+    /** The endpoint of the Azure Communication resource. */\n+    private final String endpoint;\n+\n+    /**\n+     * Gets The endpoint of the Azure Communication resource.\n+     *\n+     * @return the endpoint value.\n+     */\n+    public String getEndpoint() {\n+        return this.endpoint;\n+    }\n+\n+    /** Api Version. */\n+    private final String apiVersion;\n+\n+    /**\n+     * Gets Api Version.\n+     *\n+     * @return the apiVersion value.\n+     */\n+    public String getApiVersion() {\n+        return this.apiVersion;\n+    }\n+\n+    /** The HTTP pipeline to send requests through. */\n+    private final HttpPipeline httpPipeline;\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    public HttpPipeline getHttpPipeline() {\n+        return this.httpPipeline;\n+    }\n+\n+    /** The PhoneNumberAdministrationsImpl object to access its operations. */\n+    private final PhoneNumberAdministrationsImpl phoneNumberAdministrations;\n+\n+    /**\n+     * Gets the PhoneNumberAdministrationsImpl object to access its operations.\n+     *\n+     * @return the PhoneNumberAdministrationsImpl object.\n+     */\n+    public PhoneNumberAdministrationsImpl getPhoneNumberAdministrations() {\n+        return this.phoneNumberAdministrations;\n+    }\n+\n+    /** Initializes an instance of PhoneNumberAdminClient client. */\n+    PhoneNumberAdminClientImpl(String endpoint) {\n+        this(\n+                new HttpPipelineBuilder()\n+                        .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())\n+                        .build(),\n+                endpoint);\n+    }\n+\n+    /**\n+     * Initializes an instance of PhoneNumberAdminClient client.\n+     *\n+     * @param httpPipeline The HTTP pipeline to send requests through.\n+     */\n+    PhoneNumberAdminClientImpl(HttpPipeline httpPipeline, String endpoint) {\n+        this.httpPipeline = httpPipeline;\n+        this.endpoint = endpoint;\n+        this.apiVersion = \"2020-07-20-preview1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDk1NTg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#pullrequestreview-495095587", "createdAt": "2020-09-23T22:36:59Z", "commit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Nzk3ODM2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#pullrequestreview-495797836", "createdAt": "2020-09-24T17:31:17Z", "commit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzozMToxOFrOHXlXUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNzo1MToxNVrOHXmFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MTQ3Mg==", "bodyText": "Please ensure that none of these methods throw exception. Exception should be returned through Mono.error or Flux.error.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494491472", "createdAt": "2020-09-24T17:31:18Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,620 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations\n+ */\n+@ServiceClient(builder = PhoneNumberClientBuilder.class, isAsync = true)\n+public final class PhoneNumberAsyncClient {\n+\n+    private final PhoneNumberAdminClientImpl phoneNumberAdminClient;\n+\n+    PhoneNumberAsyncClient(PhoneNumberAdminClientImpl phoneNumberAdminClient) {\n+        this.phoneNumberAdminClient = phoneNumberAdminClient;\n+    }\n+\n+    /**\n+     * Gets the list of the acquired phone numbers.\n+     *\n+     * @param locale A language-locale pairing which will be used to localise the names of countries.\n+     * @return A {@link PagedFlux} of {@link AcquiredPhoneNumber} instances representing acquired telephone numbers.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllPhoneNumbersAsync(\n+            locale, null, null);\n+    }\n+\n+    PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale, Context context) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllPhoneNumbersAsync(\n+            locale, null, null, context);\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<AreaCodes> getAllAreaCodes(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5MjM2Mw==", "bodyText": "In general, our javadocs should also include codesnippets on how to instantiate the client at the class level and how to use the APIs for each of the public methods.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494492363", "createdAt": "2020-09-24T17:32:48Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,620 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NTU5Ng==", "bodyText": "Add null checks before using user-input (phoneNumberCapabilitiesUpdate) and provide helpful error message. Do the same for other methods too.\nObjects.requireNonNull(phoneNumberCapabilitiesUpdate, \"'phoneNumberCapabilitiesUpdate' cannot be null\");", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494495596", "createdAt": "2020-09-24T17:38:17Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,620 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations\n+ */\n+@ServiceClient(builder = PhoneNumberClientBuilder.class, isAsync = true)\n+public final class PhoneNumberAsyncClient {\n+\n+    private final PhoneNumberAdminClientImpl phoneNumberAdminClient;\n+\n+    PhoneNumberAsyncClient(PhoneNumberAdminClientImpl phoneNumberAdminClient) {\n+        this.phoneNumberAdminClient = phoneNumberAdminClient;\n+    }\n+\n+    /**\n+     * Gets the list of the acquired phone numbers.\n+     *\n+     * @param locale A language-locale pairing which will be used to localise the names of countries.\n+     * @return A {@link PagedFlux} of {@link AcquiredPhoneNumber} instances representing acquired telephone numbers.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllPhoneNumbersAsync(\n+            locale, null, null);\n+    }\n+\n+    PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale, Context context) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllPhoneNumbersAsync(\n+            locale, null, null, context);\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<AreaCodes> getAllAreaCodes(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        LocationOptionsQueries locationOptionsQueries = new LocationOptionsQueries();\n+        locationOptionsQueries.setLocationOptions(locationOptions);\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllAreaCodesAsync(\n+            locationType, countryCode, phonePlanId, locationOptionsQueries);\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue()} value returns\n+     * a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        LocationOptionsQueries locationOptionsQueries = new LocationOptionsQueries();\n+        locationOptionsQueries.setLocationOptions(locationOptions);\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllAreaCodesWithResponseAsync(\n+            locationType, countryCode, phonePlanId, locationOptionsQueries);\n+    }\n+\n+    Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions,\n+        Context context) {\n+        LocationOptionsQueries locationOptionsQueries = new LocationOptionsQueries();\n+        locationOptionsQueries.setLocationOptions(locationOptions);\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getAllAreaCodesWithResponseAsync(\n+            locationType, countryCode, phonePlanId, locationOptionsQueries, context);\n+    }\n+\n+    /**\n+     * Gets the information for a phone number capabilities update\n+     *\n+     * @param capabilitiesId ID of the capabilities update.\n+     * @return A {@link Mono} containing\n+     * a {@link UpdatePhoneNumberCapabilitiesResponse} representing the capabilities update.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<UpdatePhoneNumberCapabilitiesResponse> getCapabilitiesUpdate(String capabilitiesId) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations().getCapabilitiesUpdateAsync(capabilitiesId);\n+    }\n+\n+    /**\n+     * Gets the information for a phone number capabilities update\n+     *\n+     * @param capabilitiesId ID of the capabilities update.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue()} value returns\n+     * a {@link UpdatePhoneNumberCapabilitiesResponse} representing the capabilities update.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<UpdatePhoneNumberCapabilitiesResponse>> getCapabilitiesUpdateWithResponse(\n+        String capabilitiesId) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations()\n+            .getCapabilitiesUpdateWithResponseAsync(capabilitiesId);\n+    }\n+\n+    Mono<Response<UpdatePhoneNumberCapabilitiesResponse>> getCapabilitiesUpdateWithResponse(\n+        String capabilitiesId, Context context) {\n+        return phoneNumberAdminClient.getPhoneNumberAdministrations()\n+            .getCapabilitiesUpdateWithResponseAsync(capabilitiesId, context);\n+    }\n+\n+    /**\n+     * Adds or removes phone number capabilities.\n+     *\n+     * @param phoneNumberCapabilitiesUpdate {@link Map} with the updates to perform\n+     * @return A {@link Mono} containing\n+     * a {@link UpdatePhoneNumberCapabilitiesResponse} representing the capabilities update.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<UpdateNumberCapabilitiesResponse> updateCapabilities(\n+        Map<PhoneNumber, NumberUpdateCapabilities> phoneNumberCapabilitiesUpdate) {\n+        Map<String, NumberUpdateCapabilities> capabilitiesMap = new HashMap<>();\n+        for (Map.Entry<PhoneNumber, NumberUpdateCapabilities> entry : phoneNumberCapabilitiesUpdate.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5NzY1Ng==", "bodyText": "Looks like all APIs in this class only uses phoneNumberAdminClient.getAdministrations(). So, it might be simpler to have the Administrations type as instance variable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494497656", "createdAt": "2020-09-24T17:41:45Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,620 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations\n+ */\n+@ServiceClient(builder = PhoneNumberClientBuilder.class, isAsync = true)\n+public final class PhoneNumberAsyncClient {\n+\n+    private final PhoneNumberAdminClientImpl phoneNumberAdminClient;\n+\n+    PhoneNumberAsyncClient(PhoneNumberAdminClientImpl phoneNumberAdminClient) {\n+        this.phoneNumberAdminClient = phoneNumberAdminClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ5OTY4Mg==", "bodyText": "This can be null in scenarios where the user initially set the pipeline but then decided to clear it out. These validations can be postponed until the build method is called.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494499682", "createdAt": "2020-09-24T17:45:15Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberClientBuilder.java", "diffHunk": "@@ -0,0 +1,264 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImplBuilder;\n+import com.azure.communication.common.CommunicationClientCredential;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Builder for creating clients of Communication Service phone number configuration\n+ */\n+@ServiceClientBuilder(serviceClients = {PhoneNumberClient.class, PhoneNumberAsyncClient.class})\n+public final class PhoneNumberClientBuilder {\n+    private static final Map<String, String> PROPERTIES =\n+        CoreUtils.getProperties(\"azure-communication-administration.properties\");\n+    private static final String SDK_NAME = \"name\";\n+    private static final String SDK_VERSION = \"version\";\n+\n+    private final ClientLogger logger = new ClientLogger(PhoneNumberClientBuilder.class);\n+\n+    private PhoneNumberServiceVersion version;\n+    private String endpoint;\n+    private HttpPipeline pipeline;\n+    private HttpClient httpClient;\n+    private HttpLogOptions httpLogOptions;\n+    private CommunicationClientCredential credential;\n+    private Configuration configuration;\n+    private final List<HttpPipelinePolicy> additionalPolicies = new ArrayList<>();\n+\n+    /**\n+     * Set endpoint of the service\n+     *\n+     * @param endpoint url of the service\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code endpoint} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder endpoint(String endpoint) {\n+        this.endpoint = Objects.requireNonNull(endpoint, \"'endpoint' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the HTTP pipeline to use for the service client\n+     * <p>\n+     * If {@code pipeline} is set, all other settings aside from\n+     * {@link PhoneNumberClientBuilder#endpoint(String) endpoint} are ignored.\n+     *\n+     * @param pipeline HttpPipeline to use\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     */\n+    public PhoneNumberClientBuilder pipeline(HttpPipeline pipeline) {\n+        this.pipeline = Objects.requireNonNull(pipeline, \"'pipeline' cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUwMDIyNA==", "bodyText": "Null check here is valid since we don't support adding null policies.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494500224", "createdAt": "2020-09-24T17:46:11Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberClientBuilder.java", "diffHunk": "@@ -0,0 +1,264 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImplBuilder;\n+import com.azure.communication.common.CommunicationClientCredential;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Builder for creating clients of Communication Service phone number configuration\n+ */\n+@ServiceClientBuilder(serviceClients = {PhoneNumberClient.class, PhoneNumberAsyncClient.class})\n+public final class PhoneNumberClientBuilder {\n+    private static final Map<String, String> PROPERTIES =\n+        CoreUtils.getProperties(\"azure-communication-administration.properties\");\n+    private static final String SDK_NAME = \"name\";\n+    private static final String SDK_VERSION = \"version\";\n+\n+    private final ClientLogger logger = new ClientLogger(PhoneNumberClientBuilder.class);\n+\n+    private PhoneNumberServiceVersion version;\n+    private String endpoint;\n+    private HttpPipeline pipeline;\n+    private HttpClient httpClient;\n+    private HttpLogOptions httpLogOptions;\n+    private CommunicationClientCredential credential;\n+    private Configuration configuration;\n+    private final List<HttpPipelinePolicy> additionalPolicies = new ArrayList<>();\n+\n+    /**\n+     * Set endpoint of the service\n+     *\n+     * @param endpoint url of the service\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code endpoint} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder endpoint(String endpoint) {\n+        this.endpoint = Objects.requireNonNull(endpoint, \"'endpoint' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the HTTP pipeline to use for the service client\n+     * <p>\n+     * If {@code pipeline} is set, all other settings aside from\n+     * {@link PhoneNumberClientBuilder#endpoint(String) endpoint} are ignored.\n+     *\n+     * @param pipeline HttpPipeline to use\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     */\n+    public PhoneNumberClientBuilder pipeline(HttpPipeline pipeline) {\n+        this.pipeline = Objects.requireNonNull(pipeline, \"'pipeline' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Set HttpClient to use\n+     *\n+     * @param httpClient HttpClient to use\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code httpClient} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder httpClient(HttpClient httpClient) {\n+        this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the logging configuration for HTTP requests and responses.\n+     *\n+     * <p> If logLevel is not provided, default value of {@link HttpLogDetailLevel#NONE} is set.</p>\n+     *\n+     * @param httpLogOptions The logging configuration to use when sending and receiving HTTP requests/responses.\n+     * @return the updated {@link PhoneNumberClientBuilder} object.\n+     */\n+    public PhoneNumberClientBuilder httpLogOptions(HttpLogOptions httpLogOptions) {\n+        this.httpLogOptions = httpLogOptions;\n+        return this;\n+    }\n+\n+    /**\n+     * Set CommunicationClientCredential for authorization\n+     *\n+     * @param credential valid CommunicationClientCredential object\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code credential} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder credential(CommunicationClientCredential credential) {\n+        this.credential = Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the configuration object used to retrieve environment configuration values during building of the client.\n+     *\n+     * @param configuration Configuration store used to retrieve environment configurations.\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     */\n+    public PhoneNumberClientBuilder configuration(Configuration configuration) {\n+        this.configuration = configuration;\n+        return this;\n+    }\n+\n+    /**\n+     * Adds a policy to the set of existing policies that are executed after required policies.\n+     *\n+     * @param policy The retry policy for service requests.\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code policy} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder addPolicy(HttpPipelinePolicy policy) {\n+        this.additionalPolicies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUwMjE4NA==", "bodyText": "Remove Playback from classname as it can be run in playback, record and live modes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494502184", "createdAt": "2020-09-24T17:49:40Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/PhoneNumberAsyncClientPlaybackTest.java", "diffHunk": "@@ -0,0 +1,361 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.Capability;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import org.junit.jupiter.api.Test;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class PhoneNumberAsyncClientPlaybackTest extends PhoneNumberPlaybackTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUwMjQ1NQ==", "bodyText": "Do not block when testing async clients. Use StepVerifier instead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494502455", "createdAt": "2020-09-24T17:50:06Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/PhoneNumberAsyncClientPlaybackTest.java", "diffHunk": "@@ -0,0 +1,361 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.Capability;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import org.junit.jupiter.api.Test;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+public class PhoneNumberAsyncClientPlaybackTest extends PhoneNumberPlaybackTestBase {\n+    @Test()\n+    public void listAllPhoneNumbers() {\n+        PagedFlux<AcquiredPhoneNumber> pagedFlux = this.getClient().listAllPhoneNumbers(LOCALE);\n+\n+        assertNotNull(pagedFlux.blockFirst().getPhoneNumber());\n+    }\n+\n+    @Test()\n+    public void listPhonePlanGroups() {\n+        PagedFlux<PhonePlanGroup> pagedFlux =\n+            this.getClient().listPhonePlanGroups(COUNTRY_CODE, LOCALE, true);\n+\n+        assertNotNull(pagedFlux.blockFirst().getPhonePlanGroupId());\n+    }\n+\n+    @Test()\n+    public void listPhonePlans() {\n+        PagedFlux<PhonePlan> pagedFlux =\n+            this.getClient().listPhonePlans(COUNTRY_CODE, PHONE_PLAN_GROUP_ID, LOCALE);\n+\n+        assertNotNull(pagedFlux.blockFirst().getPhonePlanId());\n+    }\n+\n+    @Test()\n+    public void listAllReleases() {\n+        PagedFlux<PhoneNumberEntity> pagedFlux = this.getClient().listAllReleases();\n+\n+        assertNotNull(pagedFlux.blockFirst().getId());\n+    }\n+\n+    @Test()\n+    public void listAllSearches() {\n+        PagedFlux<PhoneNumberEntity> pagedFlux = this.getClient().listAllSearches();\n+\n+        assertNotNull(pagedFlux.blockFirst().getId());\n+    }\n+\n+    @Test()\n+    public void listAllSupportedCountries() {\n+        PagedFlux<PhoneNumberCountry> pagedFlux = this.getClient().listAllSupportedCountries(LOCALE);\n+\n+        assertNotNull(pagedFlux.blockFirst().getCountryCode());\n+    }\n+\n+    @Test()\n+    public void getPhonePlanLocationOptions() {\n+        Mono<LocationOptionsResponse> mono =\n+            this.getClient().getPhonePlanLocationOptions(COUNTRY_CODE, PHONE_PLAN_GROUP_ID, PHONE_PLAN_ID, LOCALE);\n+\n+        assertNotNull(mono.block().getLocationOptions().getLabelId());\n+    }\n+\n+    @Test()\n+    public void getAllAreaCodes() {\n+        List<LocationOptionsQuery> locationOptions = new ArrayList<>();\n+        LocationOptionsQuery query = new LocationOptionsQuery();\n+        query.setLabelId(\"state\");\n+        query.setOptionsValue(LOCATION_OPTION_STATE);\n+        locationOptions.add(query);\n+\n+        query = new LocationOptionsQuery();\n+        query.setLabelId(\"city\");\n+        query.setOptionsValue(LOCATION_OPTION_CITY);\n+        locationOptions.add(query);\n+\n+        Mono<AreaCodes> mono =\n+            this.getClient().getAllAreaCodes(\"selection\", COUNTRY_CODE, PHONE_PLAN_ID, locationOptions);\n+\n+        assertTrue(mono.block().getPrimaryAreaCodes().size() > 0);\n+    }\n+\n+    @Test()\n+    public void getAllAreaCodesWithResponse() {\n+        List<LocationOptionsQuery> locationOptions = new ArrayList<>();\n+        LocationOptionsQuery query = new LocationOptionsQuery();\n+        query.setLabelId(\"state\");\n+        query.setOptionsValue(LOCATION_OPTION_STATE);\n+        locationOptions.add(query);\n+\n+        query = new LocationOptionsQuery();\n+        query.setLabelId(\"city\");\n+        query.setOptionsValue(LOCATION_OPTION_CITY);\n+        locationOptions.add(query);\n+\n+        Mono<Response<AreaCodes>> mono = this.getClient().getAllAreaCodesWithResponse(\n+            \"selection\", COUNTRY_CODE, PHONE_PLAN_ID, locationOptions, Context.NONE);\n+\n+        Response<AreaCodes> response = mono.block();\n+        assertEquals(200, response.getStatusCode());\n+        assertTrue(response.getValue().getPrimaryAreaCodes().size() > 0);\n+    }\n+\n+    @Test()\n+    public void updateCapabilities() {\n+        List<Capability> capabilitiesToAdd = new ArrayList<>();\n+        capabilitiesToAdd.add(Capability.INBOUND_CALLING);\n+\n+        NumberUpdateCapabilities update = new NumberUpdateCapabilities();\n+        update.setAdd(capabilitiesToAdd);\n+\n+        Map<PhoneNumber, NumberUpdateCapabilities> updateMap = new HashMap<>();\n+        updateMap.put(new PhoneNumber(PHONENUMBER_FOR_CAPABILITIES), update);\n+\n+        Mono<UpdateNumberCapabilitiesResponse> mono = this.getClient().updateCapabilities(updateMap);\n+\n+        assertNotNull(mono.block().getCapabilitiesUpdateId());\n+    }\n+\n+    @Test()\n+    public void updateCapabilitiesWithResponse() {\n+        List<Capability> capabilitiesToAdd = new ArrayList<>();\n+        capabilitiesToAdd.add(Capability.INBOUND_CALLING);\n+\n+        NumberUpdateCapabilities update = new NumberUpdateCapabilities();\n+        update.setAdd(capabilitiesToAdd);\n+\n+        Map<PhoneNumber, NumberUpdateCapabilities> updateMap = new HashMap<>();\n+        updateMap.put(new PhoneNumber(PHONENUMBER_FOR_CAPABILITIES), update);\n+\n+        Mono<Response<UpdateNumberCapabilitiesResponse>> mono =\n+            this.getClient().updateCapabilitiesWithResponse(updateMap, Context.NONE);\n+\n+        Response<UpdateNumberCapabilitiesResponse> response = mono.block();\n+        assertEquals(200, response.getStatusCode());\n+        assertNotNull(response.getValue().getCapabilitiesUpdateId());\n+    }\n+\n+    @Test()\n+    public void getCapabilitiesUpdate() {\n+        Mono<UpdatePhoneNumberCapabilitiesResponse> mono =\n+            this.getClient().getCapabilitiesUpdate(CAPABILITIES_ID);\n+        assertNotNull(mono.block().getCapabilitiesUpdateId());\n+    }\n+\n+    @Test()\n+    public void getCapabilitiesUpdateWithResponse() {\n+        Mono<Response<UpdatePhoneNumberCapabilitiesResponse>> mono =\n+            this.getClient().getCapabilitiesUpdateWithResponse(CAPABILITIES_ID, Context.NONE);\n+\n+        Response<UpdatePhoneNumberCapabilitiesResponse> response = mono.block();\n+        assertEquals(200, response.getStatusCode());\n+        assertNotNull(response.getValue().getCapabilitiesUpdateId());\n+    }\n+\n+    @Test()\n+    public void createSearch() {\n+        List<String> phonePlanIds = new ArrayList<>();\n+        phonePlanIds.add(PHONE_PLAN_ID);\n+\n+        CreateSearchOptions createSearchOptions = new CreateSearchOptions();\n+        createSearchOptions\n+            .setAreaCode(AREA_CODE_FOR_SEARCH)\n+            .setDescription(\"testsearch20200014\")\n+            .setDisplayName(\"testsearch20200014\")\n+            .setPhonePlanIds(phonePlanIds)\n+            .setQuantity(1);\n+\n+        Mono<CreateSearchResponse> mono = this.getClient().createSearch(createSearchOptions);\n+\n+        assertNotNull(mono.block().getSearchId());\n+    }\n+\n+    @Test()\n+    public void createSearchWithResponse() {\n+        List<String> phonePlanIds = new ArrayList<>();\n+        phonePlanIds.add(PHONE_PLAN_ID);\n+\n+        CreateSearchOptions createSearchOptions = new CreateSearchOptions();\n+        createSearchOptions\n+            .setAreaCode(AREA_CODE_FOR_SEARCH)\n+            .setDescription(\"testsearch20200014\")\n+            .setDisplayName(\"testsearch20200014\")\n+            .setPhonePlanIds(phonePlanIds)\n+            .setQuantity(1);\n+\n+        Mono<Response<CreateSearchResponse>> mono =\n+            this.getClient().createSearchWithResponse(createSearchOptions, Context.NONE);\n+\n+        Response<CreateSearchResponse> response = mono.block();\n+\n+        assertEquals(201, response.getStatusCode());\n+        assertNotNull(response.getValue().getSearchId());\n+    }\n+\n+    @Test()\n+    public void getSearchById() {\n+        Mono<PhoneNumberSearch> mono = this.getClient().getSearchById(SEARCH_ID);\n+\n+        assertEquals(SEARCH_ID, mono.block().getSearchId());\n+    }\n+\n+    @Test()\n+    public void getSearchByIdWithResponse() {\n+        Mono<Response<PhoneNumberSearch>> mono = this.getClient().getSearchByIdWithResponse(SEARCH_ID, Context.NONE);\n+\n+        Response<PhoneNumberSearch> response = mono.block();\n+        assertEquals(200, response.getStatusCode());\n+        assertEquals(SEARCH_ID, response.getValue().getSearchId());\n+    }\n+\n+    @Test()\n+    public void purchaseSearch() {\n+        Mono<Void> mono = this.getClient().purchaseSearch(SEARCH_ID_TO_PURCHASE);\n+        mono.block();\n+    }\n+\n+    @Test()\n+    public void purchaseSearchWithResponse() {\n+        Mono<Response<Void>> mono = this.getClient().purchaseSearchWithResponse(SEARCH_ID_TO_PURCHASE, Context.NONE);\n+\n+        Response<Void> response = mono.block();\n+        assertEquals(202, response.getStatusCode());\n+    }\n+\n+    @Test()\n+    public void cancelSearch() {\n+        Mono<Void> mono = this.getClient().cancelSearch(SEARCH_ID_TO_CANCEL);\n+        mono.block();\n+    }\n+\n+    @Test()\n+    public void cancelSearchWithResponse() {\n+        Mono<Response<Void>> mono = this.getClient().cancelSearchWithResponse(SEARCH_ID_TO_CANCEL, Context.NONE);\n+\n+        Response<Void> response = mono.block();\n+        assertEquals(202, response.getStatusCode());\n+    }\n+\n+    @Test()\n+    public void configureNumber() {\n+        PhoneNumber number = new PhoneNumber(PHONENUMBER_TO_CONFIGURE);\n+        PstnConfiguration pstnConfiguration = new PstnConfiguration();\n+        pstnConfiguration.setApplicationId(\"ApplicationId\");\n+        pstnConfiguration.setAzurePstnTargetId(\"AzurePstnTargetId\");\n+        pstnConfiguration.setCallbackUrl(\"https://callbackurl\");\n+\n+        Mono<Void> mono = this.getClient().configureNumber(number, pstnConfiguration);\n+\n+        mono.block();\n+    }\n+\n+    @Test()\n+    public void configureNumberWithResponse() {\n+        PhoneNumber number = new PhoneNumber(PHONENUMBER_TO_CONFIGURE);\n+        PstnConfiguration pstnConfiguration = new PstnConfiguration();\n+        pstnConfiguration.setApplicationId(\"ApplicationId\");\n+        pstnConfiguration.setAzurePstnTargetId(\"AzurePstnTargetId\");\n+        pstnConfiguration.setCallbackUrl(\"https://callbackurl\");\n+\n+        Mono<Response<Void>> mono = this.getClient().configureNumberWithResponse(number, pstnConfiguration, Context.NONE);\n+\n+        Response<Void> response = mono.block();\n+        assertEquals(202, response.getStatusCode());\n+    }\n+\n+    @Test()\n+    public void getNumberConfiguration() {\n+        PhoneNumber number = new PhoneNumber(PHONENUMBER_TO_GET_CONFIG);\n+\n+        Mono<NumberConfigurationResponse> mono = this.getClient().getNumberConfiguration(number);\n+\n+        assertEquals(\"ApplicationId\", mono.block().getPstnConfiguration().getApplicationId());\n+    }\n+\n+    @Test()\n+    public void getNumberConfigurationWithResponse() {\n+        PhoneNumber number = new PhoneNumber(PHONENUMBER_TO_GET_CONFIG);\n+\n+        Mono<Response<NumberConfigurationResponse>> mono =\n+            this.getClient().getNumberConfigurationWithResponse(number, Context.NONE);\n+\n+        Response<NumberConfigurationResponse> response = mono.block();\n+        assertEquals(200, response.getStatusCode());\n+        assertEquals(\"ApplicationId\", response.getValue().getPstnConfiguration().getApplicationId());\n+    }\n+\n+    @Test()\n+    public void unconfigureNumber() {\n+        PhoneNumber number = new PhoneNumber(PHONENUMBER_TO_UNCONFIGURE);\n+\n+        Mono<Void> mono = this.getClient().unconfigureNumber(number);\n+\n+        mono.block();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 322}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUwMzE5NA==", "bodyText": "Why is this required?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15497#discussion_r494503194", "createdAt": "2020-09-24T17:51:15Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/PhoneNumberClientBuilderTest.java", "diffHunk": "@@ -0,0 +1,499 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.common.CommunicationClientCredential;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.policy.*;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.parallel.Execution;\n+import org.junit.jupiter.api.parallel.ExecutionMode;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.mockito.stubbing.Answer;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.*;\n+\n+@Execution(value = ExecutionMode.SAME_THREAD)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92026f81757117b93a9f162e4bd3cda171cc5c"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a97ccae37eadf6a30e0e5a5c1edaca218406e995", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a97ccae37eadf6a30e0e5a5c1edaca218406e995", "committedDate": "2020-09-24T21:48:36Z", "message": "Updated class naming for integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749ae4b354cd75e74c793360dbd4e135cb977be3", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/749ae4b354cd75e74c793360dbd4e135cb977be3", "committedDate": "2020-09-24T22:01:39Z", "message": "Simplify calls to autorest generated client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4770006d052434eb171b9ccd7529ccc1df0cdb46", "author": {"user": {"login": "waynemo", "name": null}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4770006d052434eb171b9ccd7529ccc1df0cdb46", "committedDate": "2020-09-24T22:58:55Z", "message": "Update async client tests to use StepVerifier"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3362, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}