{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMzk1Mjgy", "number": 13247, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1MTo1NFrOERLRQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1MTo1NFrOERLRQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDQ1ODg4OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/polling/PollerTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo1MTo1NFrOG1v0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTowMjoyMlrOG1wMww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMTI2Mw==", "bodyText": "Why AtomicReference over AtomicInteger?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13247#discussion_r459011263", "createdAt": "2020-07-22T18:51:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/polling/PollerTests.java", "diffHunk": "@@ -423,6 +429,75 @@ public void getResultCanBeCalledFromOperatorChainTest() {\n         pollingContext.getLatestResponse().equals(response2);\n     }\n \n+    @Test\n+    public void verifyExceptionPropagationFromPollingOperation() {\n+        final Response activationResponse = new Response(\"Foo\");\n+        when(activationOperation.apply(any()))\n+            .thenReturn(Mono.defer(() -> Mono.just(activationResponse)));\n+\n+        final AtomicReference<Integer> cnt = new AtomicReference<>(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cff7fcc9b2ff860f866c57e2c6b7e195a612e32"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNzQxMQ==", "bodyText": "We could use either..", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13247#discussion_r459017411", "createdAt": "2020-07-22T19:02:22Z", "author": {"login": "samvaity"}, "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/polling/PollerTests.java", "diffHunk": "@@ -423,6 +429,75 @@ public void getResultCanBeCalledFromOperatorChainTest() {\n         pollingContext.getLatestResponse().equals(response2);\n     }\n \n+    @Test\n+    public void verifyExceptionPropagationFromPollingOperation() {\n+        final Response activationResponse = new Response(\"Foo\");\n+        when(activationOperation.apply(any()))\n+            .thenReturn(Mono.defer(() -> Mono.just(activationResponse)));\n+\n+        final AtomicReference<Integer> cnt = new AtomicReference<>(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMTI2Mw=="}, "originalCommit": {"oid": "1cff7fcc9b2ff860f866c57e2c6b7e195a612e32"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4986, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}