{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2Njg0NDk0", "number": 14670, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1Njo1OFrOEehn2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowODo0MVrOEehxsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQzNjA4OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1Njo1OFrOHKOLDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1NzoyNFrOHKOLeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDAxMg==", "bodyText": "can be replaced with method reference:\n.map(Response::getValue);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480480012", "createdAt": "2020-08-31T23:56:58Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -593,8 +594,8 @@ public HttpPipeline getHttpPipeline() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<ModelData> getModel(String modelId) {\n-        return withContext(context -> getModelWithResponse(modelId, context))\n-            .flatMap(response -> Mono.just(response.getValue()));\n+        return getModelWithResponse(modelId)\n+            .map(response -> response.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d4727ae6eed39278561d8c538ac4fba9dc13d9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDEyMA==", "bodyText": "you fancy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480480120", "createdAt": "2020-08-31T23:57:24Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -593,8 +594,8 @@ public HttpPipeline getHttpPipeline() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<ModelData> getModel(String modelId) {\n-        return withContext(context -> getModelWithResponse(modelId, context))\n-            .flatMap(response -> Mono.just(response.getValue()));\n+        return getModelWithResponse(modelId)\n+            .map(response -> response.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDAxMg=="}, "originalCommit": {"oid": "b4d4727ae6eed39278561d8c538ac4fba9dc13d9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQzNjc2OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1NzoyNFrOHKOLdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1NzoyNFrOHKOLdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDExNw==", "bodyText": "same here as well :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480480117", "createdAt": "2020-08-31T23:57:24Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -665,8 +666,8 @@ public HttpPipeline getHttpPipeline() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<Void> deleteModel(String modelId) {\n-        return withContext(context -> deleteModelWithResponse(modelId, context))\n-            .flatMap(response -> Mono.just(response.getValue()));\n+        return deleteModelWithResponse(modelId)\n+            .map(response -> response.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d4727ae6eed39278561d8c538ac4fba9dc13d9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQ0NDU5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowMTowOVrOHKOP-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowNDozOVrOHKOT0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MTI3NQ==", "bodyText": "Return type here should be the keyword void, not the Void class type.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480481275", "createdAt": "2020-09-01T00:01:09Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -365,6 +366,21 @@ public Void deleteModel(String modelId) {\n         return digitalTwinsAsyncClient.deleteModelWithResponse(modelId, context).block();\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return Void\n+     */\n+    public Void decommissionModel(String modelId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d4727ae6eed39278561d8c538ac4fba9dc13d9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MjI1Nw==", "bodyText": "The more you know.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480482257", "createdAt": "2020-09-01T00:04:39Z", "author": {"login": "drwill-ms"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -365,6 +366,21 @@ public Void deleteModel(String modelId) {\n         return digitalTwinsAsyncClient.deleteModelWithResponse(modelId, context).block();\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return Void\n+     */\n+    public Void decommissionModel(String modelId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MTI3NQ=="}, "originalCommit": {"oid": "b4d4727ae6eed39278561d8c538ac4fba9dc13d9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQ1NTA3OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowNjozOVrOHKOWCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDoxMjoyOFrOHKOjPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MjgyNg==", "bodyText": "No need of this", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480482826", "createdAt": "2020-09-01T00:06:39Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -365,6 +365,21 @@ public Void deleteModel(String modelId) {\n         return digitalTwinsAsyncClient.deleteModelWithResponse(modelId, context).block();\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return Void", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4ae9710fabb56b0b9fb0183b98df8e26557815"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4NjIwNA==", "bodyText": "Yeah, javadocs only have the @ return if it returns something other than void. We'll still need them for cases like Mono, but here you can remove it", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480486204", "createdAt": "2020-09-01T00:12:28Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsClient.java", "diffHunk": "@@ -365,6 +365,21 @@ public Void deleteModel(String modelId) {\n         return digitalTwinsAsyncClient.deleteModelWithResponse(modelId, context).block();\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return Void", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MjgyNg=="}, "originalCommit": {"oid": "7f4ae9710fabb56b0b9fb0183b98df8e26557815"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQ2MTMxOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDowODo0MVrOHKOZ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDoxMTo1NFrOHKOh3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4Mzc5OQ==", "bodyText": "why we need to write this return?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480483799", "createdAt": "2020-09-01T00:08:41Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -683,11 +684,36 @@ public HttpPipeline getHttpPipeline() {\n         return protocolLayer.getDigitalTwinModels().deleteWithResponseAsync(modelId, context);\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n     PagedFlux<String> listRelationships(String digitalTwinId, String relationshipName, Context context) {\n         return new PagedFlux<>(\n             () -> listRelationshipsFirstPage(digitalTwinId, relationshipName, context),\n             nextLink -> listRelationshipsNextPage(nextLink, context));\n     }\n \n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return an empty Mono", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4ae9710fabb56b0b9fb0183b98df8e26557815"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4NTg1NQ==", "bodyText": "java doc analyzer will complain if there is no return section in the comments for publicly facing APIs", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14670#discussion_r480485855", "createdAt": "2020-09-01T00:11:54Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -683,11 +684,36 @@ public HttpPipeline getHttpPipeline() {\n         return protocolLayer.getDigitalTwinModels().deleteWithResponseAsync(modelId, context);\n     }\n \n-    //TODO: Decommission Model APIs (waiting for Abhipsa's change to come in)\n     PagedFlux<String> listRelationships(String digitalTwinId, String relationshipName, Context context) {\n         return new PagedFlux<>(\n             () -> listRelationshipsFirstPage(digitalTwinId, relationshipName, context),\n             nextLink -> listRelationshipsNextPage(nextLink, context));\n     }\n \n+    /**\n+     * Decommissions a model.\n+     * @param modelId The Id of the model to decommission.\n+     * @return an empty Mono", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4Mzc5OQ=="}, "originalCommit": {"oid": "7f4ae9710fabb56b0b9fb0183b98df8e26557815"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1361, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}