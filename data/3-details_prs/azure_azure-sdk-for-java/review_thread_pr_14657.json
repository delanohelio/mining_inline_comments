{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDA0NTA1", "number": 14657, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1NjoxNVrOEeghBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0Njo0MVrOEfq12g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDI1NDc4OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1NjoxNVrOHKMjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjo1MzozNVrOHMN1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzM5OQ==", "bodyText": "Should this error also apply to service principal authentication as well? I'm not familiar enough with the IntelliJ plug-in, but can you authenticate a service principal in an ADFS instance? Does it not try to actually authenticate the SP, but rather just store the credentials?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r480453399", "createdAt": "2020-08-31T22:56:15Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -337,6 +338,10 @@ private PublicClientApplication getPublicClientApplication(boolean sharedTokenCa\n                 }\n             } else if (authType.equalsIgnoreCase(\"DC\")) {\n \n+                if (isADFSTenant()) {\n+                    return Mono.error(new CredentialUnavailableException(\"IntelliJCredential  \"\n+                                         + \"authentication unavailable. ADFS tenant/authorities are not supported.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwMjAxMA==", "bodyText": "So, the IDE Azure Plugin auth with SP won't succeed as the IDE Plugin passes in invalid resources in the request for the Az Stack.  But, the service principal details will get stored in the filesystem and if used via the IntelliJCredential with correct scopes specified, it works fine against Az Stack.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482202010", "createdAt": "2020-09-02T16:26:03Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -337,6 +338,10 @@ private PublicClientApplication getPublicClientApplication(boolean sharedTokenCa\n                 }\n             } else if (authType.equalsIgnoreCase(\"DC\")) {\n \n+                if (isADFSTenant()) {\n+                    return Mono.error(new CredentialUnavailableException(\"IntelliJCredential  \"\n+                                         + \"authentication unavailable. ADFS tenant/authorities are not supported.\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzM5OQ=="}, "originalCommit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0MDA5NA==", "bodyText": "It's an interesting definition of \"Works Fine\", but I suppose we don't need to artificially guard against it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482440094", "createdAt": "2020-09-02T20:44:20Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -337,6 +338,10 @@ private PublicClientApplication getPublicClientApplication(boolean sharedTokenCa\n                 }\n             } else if (authType.equalsIgnoreCase(\"DC\")) {\n \n+                if (isADFSTenant()) {\n+                    return Mono.error(new CredentialUnavailableException(\"IntelliJCredential  \"\n+                                         + \"authentication unavailable. ADFS tenant/authorities are not supported.\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzM5OQ=="}, "originalCommit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU3MTU2MQ==", "bodyText": "Yeah, since Service Principal auth is supported against Az Stack from the credential, we don't need to guard against it.\nIt'll be a rare scenario for the user to take this route.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482571561", "createdAt": "2020-09-02T22:53:35Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -337,6 +338,10 @@ private PublicClientApplication getPublicClientApplication(boolean sharedTokenCa\n                 }\n             } else if (authType.equalsIgnoreCase(\"DC\")) {\n \n+                if (isADFSTenant()) {\n+                    return Mono.error(new CredentialUnavailableException(\"IntelliJCredential  \"\n+                                         + \"authentication unavailable. ADFS tenant/authorities are not supported.\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MzM5OQ=="}, "originalCommit": {"oid": "51e3f8dcdcefe54585c2b5164e14a7d155666288"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTc1NzE0OnYy", "diffSide": "LEFT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxMzoyNFrOHL-stQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTozMToxNFrOHL_12w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMzYzNw==", "bodyText": "Should either port or redirectUrl be required?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482323637", "createdAt": "2020-09-02T19:13:24Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNTQ3NQ==", "bodyText": "nope,\nif both are not specified, then we default to localhost and MSAL will find an open port to connect to.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482325475", "createdAt": "2020-09-02T19:15:28Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMzYzNw=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyOTc5Ng==", "bodyText": "MSAL will find an open port to connect to\n\nMSAL doesn't connect to this redirectUrl. AAD will verify it matches the one in the app registration and only if it completely matches, will then login.microsoftonline.com send the user to this URL, in the browser.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482329796", "createdAt": "2020-09-02T19:20:14Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMzYzNw=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0MjM2Mw==", "bodyText": "So, the redirect URL is only required, if user is trying to authenticate with their custom registered application.\nIf they are using a first party client id, then the redirectURL can be arbitrary in the sense that Localhost can be used with any port and user doesn't need to supply it.\nJavadocs provides this guidance too, only for custom client ids, redirect URL is required to be supplied.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482342363", "createdAt": "2020-09-02T19:31:14Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMzYzNw=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTc3NjY2OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToxNzowMlrOHL-5iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTozMjozN1rOHL_9Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNjkyMA==", "bodyText": "I wouldn't default to localhost here. We are secretly setting a default here and it will throw an error from AAD saying the redirect URL is not valid. The user will probably scratch the head wondering where he has set the redirect URL. A better error message would be \"Either a port or a redirect URl must be provided on InteractiveBrowserCredentialBuilder, which leads them to read the javadocs there and understand what they need to do.\nYou could also do this validation in the build() method on InteractiveBrowserCredential.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482326920", "createdAt": "2020-09-02T19:17:02Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -639,10 +648,21 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @param port the port on which the HTTP server is listening\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n+    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, Integer port,\n+                                                              String redirectURL) {\n         URI redirectUri;\n+        String redirect;\n+\n+        if (port != null) {\n+            redirect = HTTP_LOCALHOST + \":\" + port;\n+        } else if (redirectURL != null) {\n+            redirect = redirectURL;\n+        } else {\n+            redirect = HTTP_LOCALHOST;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyODI4Mg==", "bodyText": "See https://github.com/Azure/azure-sdk-for-java/pull/14657/files#r482323637.\nThe bottom line is - there is no default value for redirectUrl or port - because it can be any arbitrary value the user specifies on the app registration.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482328282", "createdAt": "2020-09-02T19:18:34Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -639,10 +648,21 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @param port the port on which the HTTP server is listening\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n+    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, Integer port,\n+                                                              String redirectURL) {\n         URI redirectUri;\n+        String redirect;\n+\n+        if (port != null) {\n+            redirect = HTTP_LOCALHOST + \":\" + port;\n+        } else if (redirectURL != null) {\n+            redirect = redirectURL;\n+        } else {\n+            redirect = HTTP_LOCALHOST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNjkyMA=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0NDI3NQ==", "bodyText": "So, the redirect URL is only required, if user is trying to authenticate with their custom registered application.\nIf they are using a first party client id, then the redirectURL can be arbitrary in the sense that Localhost can be used with any port and user doesn't need to supply it.\nJavadocs provides this guidance too, only for custom client ids, redirect URL is required to be supplied.\nThis is also consistent in Python and .NET.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482344275", "createdAt": "2020-09-02T19:32:37Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -639,10 +648,21 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @param port the port on which the HTTP server is listening\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n+    public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, Integer port,\n+                                                              String redirectURL) {\n         URI redirectUri;\n+        String redirect;\n+\n+        if (port != null) {\n+            redirect = HTTP_LOCALHOST + \":\" + port;\n+        } else if (redirectURL != null) {\n+            redirect = redirectURL;\n+        } else {\n+            redirect = HTTP_LOCALHOST;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNjkyMA=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTk3ODI4OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0NjowNFrOHMBEFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDowMDoyOFrOHMCQKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2MjM4OQ==", "bodyText": "Why do we want to deprecate this? Redirect URL will force the user to include the host and the port when they just want to change the port.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482362389", "createdAt": "2020-09-02T19:46:04Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -17,14 +17,19 @@\n public class InteractiveBrowserCredentialBuilder extends AadCredentialBuilderBase<InteractiveBrowserCredentialBuilder> {\n     private Integer port;\n     private boolean automaticAuthentication = true;\n+    private String redirectURL;\n \n     /**\n      * Sets the port for the local HTTP server, for which {@code http://localhost:{port}} must be\n      * registered as a valid reply URL on the application.\n      *\n+     * @deprecated Configure the redirectURL as {@code http://localhost:{port}} via\n+     * {@link InteractiveBrowserCredentialBuilder#redirectUrl(String)} instead.\n+     *\n      * @param port the port on which the credential will listen for the browser authentication result\n      * @return the InteractiveBrowserCredentialBuilder itself\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM4MTg2NQ==", "bodyText": "because, port limits the scope for redirectURL to be only localhost:{port}.\nThe redirectURL needs to exactly match the URL user specified when registering their custom public client applications.\nSo, currently it doesn't work for scenarios where registered redirect URL is not localhost.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482381865", "createdAt": "2020-09-02T20:00:28Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -17,14 +17,19 @@\n public class InteractiveBrowserCredentialBuilder extends AadCredentialBuilderBase<InteractiveBrowserCredentialBuilder> {\n     private Integer port;\n     private boolean automaticAuthentication = true;\n+    private String redirectURL;\n \n     /**\n      * Sets the port for the local HTTP server, for which {@code http://localhost:{port}} must be\n      * registered as a valid reply URL on the application.\n      *\n+     * @deprecated Configure the redirectURL as {@code http://localhost:{port}} via\n+     * {@link InteractiveBrowserCredentialBuilder#redirectUrl(String)} instead.\n+     *\n      * @param port the port on which the credential will listen for the browser authentication result\n      * @return the InteractiveBrowserCredentialBuilder itself\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2MjM4OQ=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTk4Nzk1OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo0NzoyMlrOHMBLHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjozNTo1MlrOHMMh5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NDE5MQ==", "bodyText": "nit: use camelcase redirectUrl", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482364191", "createdAt": "2020-09-02T19:47:22Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU1MDI0NQ==", "bodyText": "updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482550245", "createdAt": "2020-09-02T22:35:52Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NDE5MQ=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjAwNzEzOnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1MDowMVrOHMBY1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDowMDo1OVrOHMCSyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NzcwMQ==", "bodyText": "Can redirectUrl be null? Should we have a null check here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482367701", "createdAt": "2020-09-02T19:50:01Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {\n+        this.redirectURL = redirectURL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM4MjUzNw==", "bodyText": "if its null, we use localhost with an arbitrary valid port as default.\nIt is not required for first party client ids, so can be null.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482382537", "createdAt": "2020-09-02T20:00:59Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -66,6 +71,21 @@ InteractiveBrowserCredentialBuilder authenticationRecord(AuthenticationRecord au\n         return this;\n     }\n \n+\n+    /**\n+     * Sets the Redirect URL where STS will callback the application with the security code. It is required if a custom\n+     * client id is specified via {@link InteractiveBrowserCredentialBuilder#clientId(String)} and must match the\n+     * redirect URL specified during the application registration.\n+     *\n+     * @param redirectURL the redirect URL to listen on and receive security code.\n+     *\n+     * @return An updated instance of this builder with the configured redirect URL.\n+     */\n+    public InteractiveBrowserCredentialBuilder redirectUrl(String redirectURL) {\n+        this.redirectURL = redirectURL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2NzcwMQ=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjQzMjI2OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDo0Njo0MVrOHMGAdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjozNzo0MFrOHMMqFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0MzM4MQ==", "bodyText": "What if the redirectUrl contains a port already? Should we throw here is both port and redirectUrl are specified?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482443381", "createdAt": "2020-09-02T20:46:41Z", "author": {"login": "schaabs"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);\n             }});\n-        return new InteractiveBrowserCredential(clientId, tenantId, port, automaticAuthentication,\n+        return new InteractiveBrowserCredential(clientId, tenantId, port, redirectURL, automaticAuthentication,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjU1MjM0Mw==", "bodyText": "As discussed, to fail early with a better error message, added the check here to throw if both port and redirectUrl are specified.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14657#discussion_r482552343", "createdAt": "2020-09-02T22:37:40Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/InteractiveBrowserCredentialBuilder.java", "diffHunk": "@@ -89,9 +109,8 @@ InteractiveBrowserCredentialBuilder disableAutomaticAuthentication() {\n     public InteractiveBrowserCredential build() {\n         ValidationUtil.validate(getClass().getSimpleName(), new HashMap<String, Object>() {{\n                 put(\"clientId\", clientId);\n-                put(\"port\", port);\n             }});\n-        return new InteractiveBrowserCredential(clientId, tenantId, port, automaticAuthentication,\n+        return new InteractiveBrowserCredential(clientId, tenantId, port, redirectURL, automaticAuthentication,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0MzM4MQ=="}, "originalCommit": {"oid": "5d7f79c1663b55c351f013b808e72b04873aed39"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1331, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}