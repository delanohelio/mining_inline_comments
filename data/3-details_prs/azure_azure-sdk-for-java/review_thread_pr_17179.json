{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjcwMDAw", "number": 17179, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMzozOFrOE12g5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzozNDoxMlrOE3Czpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTAzMTQzOnYy", "diffSide": "RIGHT", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMzozOFrOHuXNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMzozOFrOHuXNaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3NjgwOA==", "bodyText": "I think ideally we would also extract IngestionEndpoint from the connection string and not expose endpoint() directly", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r518376808", "createdAt": "2020-11-05T21:23:38Z", "author": {"login": "trask"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,31 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractInstrumentationKey(connectionString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4495d71df2c0b6b263c26d8ce31c7626c03fa5ea"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTUwNjIzOnYy", "diffSide": "RIGHT", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzoxOTo0N1rOHwKNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozMDozOFrOHwLVhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MDk2OA==", "bodyText": "maybe extract once into Map<String, String> once and pull values from there? not a big deal tho", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520260968", "createdAt": "2020-11-10T03:19:47Z", "author": {"login": "trask"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -143,22 +143,23 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n      * @throws IllegalArgumentException If the connection string is invalid.\n      */\n     public AzureMonitorExporterBuilder connectionString(String connectionString) {\n-        this.instrumentationKey = extractInstrumentationKey(connectionString);\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTQyOQ==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520279429", "createdAt": "2020-11-10T04:30:38Z", "author": {"login": "srnagar"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -143,22 +143,23 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n      * @throws IllegalArgumentException If the connection string is invalid.\n      */\n     public AzureMonitorExporterBuilder connectionString(String connectionString) {\n-        this.instrumentationKey = extractInstrumentationKey(connectionString);\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2MDk2OA=="}, "originalCommit": {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTUzMTI3OnYy", "diffSide": "RIGHT", "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzozNDoxMlrOHwKcTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0Mzo0M1rOHwLiYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw==", "bodyText": "if the IngestionEndpoint key is absent, ideally should default to https://dc.services.visualstudio.com", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520264783", "createdAt": "2020-11-10T03:34:12Z", "author": {"login": "trask"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,32 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");\n+        this.endpoint(extractValueFromConnectionString(connectionString, \"IngestionEndpoint\"));\n         return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3OTgzOA==", "bodyText": "Updated to use the default endpoint if connection string doesn't have one. Although, I am curious when would a connectionString not have the IngestionEndpoint. If it doesn't have one, will that qualify as a valid connectionString?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520279838", "createdAt": "2020-11-10T04:32:11Z", "author": {"login": "srnagar"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,32 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");\n+        this.endpoint(extractValueFromConnectionString(connectionString, \"IngestionEndpoint\"));\n         return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw=="}, "originalCommit": {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MjcyMw==", "bodyText": "that's a good question, when we originally implemented connection strings, the Portal U/X only included IngestionEndpoint for gov clouds, so the default was important, but now the Portal U/X always includes IngestionEndpoint, so the default is likely not needed anymore. I'll start an internal thread and add you to see if we can find out.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17179#discussion_r520282723", "createdAt": "2020-11-10T04:43:43Z", "author": {"login": "trask"}, "path": "sdk/monitor/microsoft-opentelemetry-exporter-azuremonitor/src/main/java/com/microsoft/opentelemetry/exporter/azuremonitor/AzureMonitorExporterBuilder.java", "diffHunk": "@@ -134,15 +136,32 @@ public AzureMonitorExporterBuilder configuration(Configuration configuration) {\n     }\n \n     /**\n-     * Sets the instrumentation key to use for exporting telemetry events to Azure Monitor.\n-     * @param instrumentationKey The instrumentation key of the Azure Monitor resource.\n+     * The connection string to use for exporting telemetry events to Azure Monitor.\n+     * @param connectionString The connection string for the Azure Monitor resource.\n      * @return The updated {@link AzureMonitorExporterBuilder} object.\n+     * @throws NullPointerException If the connection string is {@code null}.\n+     * @throws IllegalArgumentException If the connection string is invalid.\n      */\n-    public AzureMonitorExporterBuilder instrumentationKey(String instrumentationKey) {\n-        this.instrumentationKey = instrumentationKey;\n+    public AzureMonitorExporterBuilder connectionString(String connectionString) {\n+        this.instrumentationKey = extractValueFromConnectionString(connectionString, \"InstrumentationKey\");\n+        this.endpoint(extractValueFromConnectionString(connectionString, \"IngestionEndpoint\"));\n         return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NDc4Mw=="}, "originalCommit": {"oid": "f502d2e2c5ae5e8569b8939ce9603ef74d737eb4"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3002, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}