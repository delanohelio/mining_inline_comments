{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDE2NTcx", "number": 13579, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNDoyMlrOETDG0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNDoyMlrOETDG0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDA5Mjk5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMDoyNDoyMlrOG4kSFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzoxMjoyNlrOG5CGuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2Nzg5Mw==", "bodyText": "Probably should inverse the naming for sync and async the way we do for clients. deserialize and deserializerAsync.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13579#discussion_r461967893", "createdAt": "2020-07-29T00:24:22Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "diffHunk": "@@ -12,6 +12,17 @@\n  * Generic interface covering basic JSON serialization and deserialization methods.\n  */\n public interface JsonSerializer extends ObjectSerializer {\n+    /**\n+     * Reads a JSON stream into its object representation.\n+     *\n+     * @param stream JSON stream.\n+     * @param typeReference {@link TypeReference} representing the object.\n+     * @param <T> Type of the object.\n+     * @return The object represented by the deserialized JSON stream.\n+     */\n+    @Override\n+    <T> T deserializeSync(InputStream stream, TypeReference<T> typeReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d2efb395a9f40af029cab6cb7842fd623cb0049"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk3MDU0OQ==", "bodyText": "My thought process here was we want the asynchronous APIs to be the main scenario, so I decided to give the synchronous APIs the worse name.\n@JonathanGiles, thoughts as well?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13579#discussion_r461970549", "createdAt": "2020-07-29T00:34:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "diffHunk": "@@ -12,6 +12,17 @@\n  * Generic interface covering basic JSON serialization and deserialization methods.\n  */\n public interface JsonSerializer extends ObjectSerializer {\n+    /**\n+     * Reads a JSON stream into its object representation.\n+     *\n+     * @param stream JSON stream.\n+     * @param typeReference {@link TypeReference} representing the object.\n+     * @param <T> Type of the object.\n+     * @return The object represented by the deserialized JSON stream.\n+     */\n+    @Override\n+    <T> T deserializeSync(InputStream stream, TypeReference<T> typeReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2Nzg5Mw=="}, "originalCommit": {"oid": "0d2efb395a9f40af029cab6cb7842fd623cb0049"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5ODQ3NQ==", "bodyText": "Yeah, I would make it Async - it looks a little odd with the Sync suffix.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13579#discussion_r461998475", "createdAt": "2020-07-29T02:19:24Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "diffHunk": "@@ -12,6 +12,17 @@\n  * Generic interface covering basic JSON serialization and deserialization methods.\n  */\n public interface JsonSerializer extends ObjectSerializer {\n+    /**\n+     * Reads a JSON stream into its object representation.\n+     *\n+     * @param stream JSON stream.\n+     * @param typeReference {@link TypeReference} representing the object.\n+     * @param <T> Type of the object.\n+     * @return The object represented by the deserialized JSON stream.\n+     */\n+    @Override\n+    <T> T deserializeSync(InputStream stream, TypeReference<T> typeReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2Nzg5Mw=="}, "originalCommit": {"oid": "0d2efb395a9f40af029cab6cb7842fd623cb0049"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1NjUwNA==", "bodyText": "Updated naming to use Async suffix for asynchronous methods, synchronous methods have no suffix.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13579#discussion_r462456504", "createdAt": "2020-07-29T17:12:26Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "diffHunk": "@@ -12,6 +12,17 @@\n  * Generic interface covering basic JSON serialization and deserialization methods.\n  */\n public interface JsonSerializer extends ObjectSerializer {\n+    /**\n+     * Reads a JSON stream into its object representation.\n+     *\n+     * @param stream JSON stream.\n+     * @param typeReference {@link TypeReference} representing the object.\n+     * @param <T> Type of the object.\n+     * @return The object represented by the deserialized JSON stream.\n+     */\n+    @Override\n+    <T> T deserializeSync(InputStream stream, TypeReference<T> typeReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk2Nzg5Mw=="}, "originalCommit": {"oid": "0d2efb395a9f40af029cab6cb7842fd623cb0049"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4748, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}