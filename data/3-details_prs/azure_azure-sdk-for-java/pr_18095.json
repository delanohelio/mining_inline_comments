{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NDM5OTAy", "number": 18095, "title": "Nio check access", "bodyText": "Resolves #17999 and #18018", "createdAt": "2020-12-11T21:40:27Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095", "merged": true, "mergeCommit": {"oid": "1c1f3b018cd420fefc867493506d4b832683eb3b"}, "closed": true, "closedAt": "2020-12-16T00:16:49Z", "author": {"login": "rickle-msft"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkOL-0AH2gAyNTM3NDM5OTAyOjhkMDZmMjUxYWZiMDE1NmVmOWQ0ZTNjYTBlYTcwOWJhNTJiMjFmZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmjckDAFqTU1MzEzOTA2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d06f251afb0156ef9d4e3ca0ea709ba52b21fe2", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d06f251afb0156ef9d4e3ca0ea709ba52b21fe2", "committedDate": "2020-12-08T18:10:16Z", "message": "Small readme fix on creating a filestore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0dc3dc1003f649b64bb92bada48b0ff6fb8c4d7", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0dc3dc1003f649b64bb92bada48b0ff6fb8c4d7", "committedDate": "2020-12-10T18:57:48Z", "message": "Started adding support for check access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd7465ec4a3849e44a57e4c6d1969d25073262a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ffd7465ec4a3849e44a57e4c6d1969d25073262a", "committedDate": "2020-12-11T21:37:05Z", "message": "Support for check access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ba912986e3855522176be248e4e83eb64c41149a", "committedDate": "2020-12-11T21:39:18Z", "message": "Merge remote-tracking branch 'upstream/master' into nioCheckAccess"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTk2ODYz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-550596863", "createdAt": "2020-12-11T21:42:22Z", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0MjoyMlrOIEPx-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0MjoyMlrOIEPx-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyMzc2OQ==", "bodyText": "Could this also be ContainerNotFound?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r541323769", "createdAt": "2020-12-11T21:42:22Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -798,7 +804,23 @@ public FileStore getFileStore(Path path) throws IOException {\n      */\n     @Override\n     public void checkAccess(Path path, AccessMode... accessModes) throws IOException {\n-        throw new UnsupportedOperationException();\n+        if (accessModes != null && accessModes.length != 0) {\n+            throw logger.logThrowableAsError(\n+                new AccessDeniedException(\"The access cannot be determined.\"));\n+        }\n+        AzurePath.ensureFileSystemOpen(path);\n+\n+        // Read attributes already wraps BlobStorageException in an IOException.\n+        try {\n+            readAttributes(path, BasicFileAttributes.class);\n+        } catch(IOException e) {\n+            if (e.getCause() != null && e.getCause() instanceof BlobStorageException\n+                && BlobErrorCode.BLOB_NOT_FOUND.equals(((BlobStorageException) e.getCause()).getErrorCode())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTk4MTUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-550598151", "createdAt": "2020-12-11T21:44:57Z", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0NDo1N1rOIEP6JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0NDo1N1rOIEP6JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyNTg2MA==", "bodyText": "nit: capitalize the C", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r541325860", "createdAt": "2020-12-11T21:44:57Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-nio/src/test/java/com/azure/storage/blob/nio/AzureFileSystemProviderTest.groovy", "diffHunk": "@@ -1058,6 +1072,142 @@ class AzureFileSystemProviderTest extends APISpec {\n         thrown(IOException)\n     }\n \n+    def \"CheckAccess\"() {\n+        setup:\n+        def fs = createFS(config)\n+        def path = fs.getPath(generateBlobName())\n+        def os = fs.provider().newOutputStream(path)\n+        os.close()\n+\n+        when:\n+        fs.provider().checkAccess(path)\n+\n+        then:\n+        notThrown(Exception)\n+    }\n+\n+    @Unroll\n+    def \"CheckAccess AccessDenied\"() {\n+        setup:\n+        def fs = createFS(config)\n+        def path = fs.getPath(generateBlobName())\n+        def os = fs.provider().newOutputStream(path)\n+        os.close()\n+\n+        when:\n+        fs.provider().checkAccess(path, mode)\n+\n+        then:\n+        thrown(AccessDeniedException)\n+\n+        where:\n+        mode               | _\n+        AccessMode.READ    | _\n+        AccessMode.WRITE   | _\n+        AccessMode.EXECUTE | _\n+    }\n+\n+    def \"CheckAccess IOException\"() {\n+        setup:\n+        HttpPipelinePolicy[] policies = new HttpPipelinePolicy[1]\n+        policies[0] = new checkAccessIoExceptionPolicy()\n+        config.put(AzureFileSystem.AZURE_STORAGE_HTTP_POLICIES, policies)\n+        def fs = createFS(config)\n+        def path = fs.getPath(generateBlobName())\n+        def os = fs.provider().newOutputStream(path)\n+        os.close()\n+\n+        when:\n+        fs.provider().checkAccess(path)\n+\n+        then:\n+        def e = thrown(IOException)\n+        !(e instanceof NoSuchFileException)\n+    }\n+\n+    class checkAccessIoExceptionPolicy implements HttpPipelinePolicy {\n+        @Override\n+        Mono<HttpResponse> process(HttpPipelineCallContext httpPipelineCallContext, HttpPipelineNextPolicy httpPipelineNextPolicy) {\n+            HttpRequest request = httpPipelineCallContext.getHttpRequest()\n+            // GetProperties call to blob\n+            if (request.getUrl().getPath().split(\"/\").size() == 3 && request.getHttpMethod() == (HttpMethod.HEAD)) {\n+                return Mono.just(new checkAccessIoExceptionResponse(request))\n+            } else {\n+                return httpPipelineNextPolicy.process()\n+            }\n+        }\n+    }\n+\n+    class checkAccessIoExceptionResponse extends HttpResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "originalPosition": 102}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTk5NTg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-550599588", "createdAt": "2020-12-11T21:47:43Z", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0Nzo0NFrOIEQEGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0Nzo0NFrOIEQEGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyODQxMQ==", "bodyText": "you could probably just do\nexpect:\nfs.provider().checkAccess(path)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r541328411", "createdAt": "2020-12-11T21:47:44Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-nio/src/test/java/com/azure/storage/blob/nio/AzureFileSystemProviderTest.groovy", "diffHunk": "@@ -1058,6 +1072,142 @@ class AzureFileSystemProviderTest extends APISpec {\n         thrown(IOException)\n     }\n \n+    def \"CheckAccess\"() {\n+        setup:\n+        def fs = createFS(config)\n+        def path = fs.getPath(generateBlobName())\n+        def os = fs.provider().newOutputStream(path)\n+        os.close()\n+\n+        when:\n+        fs.provider().checkAccess(path)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjAwMjc3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-550600277", "createdAt": "2020-12-11T21:49:08Z", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0OTowOFrOIEQI3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0OTowOFrOIEQI3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyOTYzMQ==", "bodyText": "Should this be UnsupportedOperationException or AccessDeniedException?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r541329631", "createdAt": "2020-12-11T21:49:08Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -785,11 +788,14 @@ public FileStore getFileStore(Path path) throws IOException {\n     }\n \n     /**\n-     * Unsupported.\n+     * Checks the existence, and optionally the accessibility, of a file.\n+     * <p>\n+     * This method may only be used to check the existence of a file. It is not possible to determine the permissions\n+     * granted to a given client, so if any mode argument is specified, an {@link UnsupportedOperationException} will be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjAxOTgy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-550601982", "createdAt": "2020-12-11T21:52:24Z", "commit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo1MjoyNFrOIEQUnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo1MjoyNFrOIEQUnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMjYzNw==", "bodyText": "Just a thought - should auth errors be wrapped into AccessDeniedExceptions?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r541332637", "createdAt": "2020-12-11T21:52:24Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -798,7 +804,23 @@ public FileStore getFileStore(Path path) throws IOException {\n      */\n     @Override\n     public void checkAccess(Path path, AccessMode... accessModes) throws IOException {\n-        throw new UnsupportedOperationException();\n+        if (accessModes != null && accessModes.length != 0) {\n+            throw logger.logThrowableAsError(\n+                new AccessDeniedException(\"The access cannot be determined.\"));\n+        }\n+        AzurePath.ensureFileSystemOpen(path);\n+\n+        // Read attributes already wraps BlobStorageException in an IOException.\n+        try {\n+            readAttributes(path, BasicFileAttributes.class);\n+        } catch(IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba912986e3855522176be248e4e83eb64c41149a"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bab6e0ce19f24d7efa768489885b4cc368c87ee", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1bab6e0ce19f24d7efa768489885b4cc368c87ee", "committedDate": "2020-12-14T20:46:58Z", "message": "Fixed a test recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e1a7b4496e32117cee53e854d2d3c1412d379a", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/64e1a7b4496e32117cee53e854d2d3c1412d379a", "committedDate": "2020-12-14T21:42:44Z", "message": "Merge branch 'master' into nioCheckAccess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4d719842607eadba3fed5dd7b732a1938dc9125", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e4d719842607eadba3fed5dd7b732a1938dc9125", "committedDate": "2020-12-14T22:52:06Z", "message": "Ci fixes and feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22ecb7f9f9a98a9542998aa1b74c3523189efaa3", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/22ecb7f9f9a98a9542998aa1b74c3523189efaa3", "committedDate": "2020-12-14T22:52:17Z", "message": "Merge branch 'nioCheckAccess' of github.com:rickle-msft/azure-sdk-for-java into nioCheckAccess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45c20a9732ba89e89597120312fcb2d40ded559e", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/45c20a9732ba89e89597120312fcb2d40ded559e", "committedDate": "2020-12-15T18:00:52Z", "message": "Spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b5ad28120b7408786acb7ed89a07bb28a02bbf", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/81b5ad28120b7408786acb7ed89a07bb28a02bbf", "committedDate": "2020-12-15T19:23:05Z", "message": "spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd31b45b9f48f878f2c2fced71ce55265016c133", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bd31b45b9f48f878f2c2fced71ce55265016c133", "committedDate": "2020-12-15T19:25:07Z", "message": "spotbugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyODc0NDgx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-552874481", "createdAt": "2020-12-15T21:06:53Z", "commit": {"oid": "bd31b45b9f48f878f2c2fced71ce55265016c133"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTowNjo1M1rOIGf_GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTowOTo0MFrOIGgFIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NjQyNQ==", "bodyText": "We should update other locations to using LoggingUtility when throwing exceptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r543686425", "createdAt": "2020-12-15T21:06:53Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -373,7 +374,8 @@ public OutputStream newOutputStream(Path path, OpenOption... options) throws IOE\n         // Write and truncate must be specified\n         if (!optionsList.contains(StandardOpenOption.WRITE)\n             || !optionsList.contains(StandardOpenOption.TRUNCATE_EXISTING)) {\n-            throw new IllegalArgumentException(\"Write and TruncateExisting must be specified to open an OutputStream\");\n+            throw LoggingUtility.logError(logger,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd31b45b9f48f878f2c2fced71ce55265016c133"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4Njc1Nw==", "bodyText": "We should log this throw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r543686757", "createdAt": "2020-12-15T21:07:28Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -798,7 +803,23 @@ public FileStore getFileStore(Path path) throws IOException {\n      */\n     @Override\n     public void checkAccess(Path path, AccessMode... accessModes) throws IOException {\n-        throw new UnsupportedOperationException();\n+        if (accessModes != null && accessModes.length != 0) {\n+            throw LoggingUtility.logError(logger, new AccessDeniedException(\"The access cannot be determined.\"));\n+        }\n+        AzurePath.ensureFileSystemOpen(path);\n+\n+        // Read attributes already wraps BlobStorageException in an IOException.\n+        try {\n+            readAttributes(path, BasicFileAttributes.class);\n+        } catch (IOException e) {\n+            Throwable cause = e.getCause();\n+            if (cause instanceof BlobStorageException\n+                && BlobErrorCode.BLOB_NOT_FOUND.equals(((BlobStorageException) cause).getErrorCode())) {\n+                throw LoggingUtility.logError(logger, new NoSuchFileException(path.toString()));\n+            } else {\n+                throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd31b45b9f48f878f2c2fced71ce55265016c133"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4Nzk2OA==", "bodyText": "Should we initialize policyList using def policyList = [] as HttpPipelinePolicy[] instead of casting it later?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#discussion_r543687968", "createdAt": "2020-12-15T21:09:40Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob-nio/src/test/java/com/azure/storage/blob/nio/APISpec.groovy", "diffHunk": "@@ -372,13 +372,17 @@ class APISpec extends Specification {\n         }\n     }\n \n-    Map<String, Object> initializeConfigMap() {\n+    Map<String, Object> initializeConfigMap(HttpPipelinePolicy... policies) {\n         def config = [:]\n         config[AzureFileSystem.AZURE_STORAGE_HTTP_CLIENT] = getHttpClient()\n+        def policyList = []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd31b45b9f48f878f2c2fced71ce55265016c133"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82ddd75ccc9e7bc6cbb093637b90f7683c0064cd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/82ddd75ccc9e7bc6cbb093637b90f7683c0064cd", "committedDate": "2020-12-15T23:09:38Z", "message": "Added support for containers which adds support for Files.createDirs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db80495f322f3b01c2062dfbaf11267ce75ca4bf", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/db80495f322f3b01c2062dfbaf11267ce75ca4bf", "committedDate": "2020-12-15T23:09:13Z", "message": "Added support for containers which adds support for Files.createDirs"}, "afterCommit": {"oid": "82ddd75ccc9e7bc6cbb093637b90f7683c0064cd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/82ddd75ccc9e7bc6cbb093637b90f7683c0064cd", "committedDate": "2020-12-15T23:09:38Z", "message": "Added support for containers which adds support for Files.createDirs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f168487ac3d180c9715db86cbabfa4f5f8b967e", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f168487ac3d180c9715db86cbabfa4f5f8b967e", "committedDate": "2020-12-15T23:46:22Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTIxMDgw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-553121080", "createdAt": "2020-12-15T23:51:57Z", "commit": {"oid": "5f168487ac3d180c9715db86cbabfa4f5f8b967e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTM5MDY5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18095#pullrequestreview-553139069", "createdAt": "2020-12-16T00:04:14Z", "commit": {"oid": "5f168487ac3d180c9715db86cbabfa4f5f8b967e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1206, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}