{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1Mzg0NTM0", "number": 13427, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMDoxMjoyMVrOERQw0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDoyMDowMlrOER12Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTM1ODg5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/BlobBatch.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMDoxMjoyMVrOG14bmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNzo0NFrOG2Sp9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MjI4Mw==", "bodyText": "Given this is internal would it be better to splay out the BlobBatchSetBlobAccessTierOptions parameters so we don't need to instantiate short lived objects in the other overloads.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459152283", "createdAt": "2020-07-23T00:12:21Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/BlobBatch.java", "diffHunk": "@@ -250,13 +254,33 @@\n      * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n      */\n     public Response<Void> setBlobAccessTier(String blobUrl, AccessTier accessTier, String leaseId) {\n-        return setBlobAccessTierHelper(getUrlPath(blobUrl), accessTier, leaseId);\n+        return setBlobAccessTier(new BlobBatchSetBlobAccessTierOptions(blobUrl, accessTier).setLeaseId(leaseId));\n     }\n \n-    private Response<Void> setBlobAccessTierHelper(String urlPath, AccessTier accessTier, String leaseId) {\n+    /**\n+     * Adds a set tier operation to the batch.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.batch.BlobBatch.setBlobAccessTier#BlobBatchSetBlobAccessTierOptions}\n+     *\n+     * @param options {@link BlobBatchSetBlobAccessTierOptions}\n+     * @return a {@link Response} that will be used to associate this operation to the response when the batch is\n+     * submitted.\n+     * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n+     */\n+    public Response<Void> setBlobAccessTier(BlobBatchSetBlobAccessTierOptions options) {\n+        return setBlobAccessTierHelper(options);\n+    }\n+\n+    private Response<Void> setBlobAccessTierHelper(BlobBatchSetBlobAccessTierOptions options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1ODU3OQ==", "bodyText": "I'm not too attached to either format but this just keeps things consistent with how we deal with overloads in other places. But splaying out the parameters seems fine due to the small number of params.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459558579", "createdAt": "2020-07-23T16:00:10Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/BlobBatch.java", "diffHunk": "@@ -250,13 +254,33 @@\n      * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n      */\n     public Response<Void> setBlobAccessTier(String blobUrl, AccessTier accessTier, String leaseId) {\n-        return setBlobAccessTierHelper(getUrlPath(blobUrl), accessTier, leaseId);\n+        return setBlobAccessTier(new BlobBatchSetBlobAccessTierOptions(blobUrl, accessTier).setLeaseId(leaseId));\n     }\n \n-    private Response<Void> setBlobAccessTierHelper(String urlPath, AccessTier accessTier, String leaseId) {\n+    /**\n+     * Adds a set tier operation to the batch.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.batch.BlobBatch.setBlobAccessTier#BlobBatchSetBlobAccessTierOptions}\n+     *\n+     * @param options {@link BlobBatchSetBlobAccessTierOptions}\n+     * @return a {@link Response} that will be used to associate this operation to the response when the batch is\n+     * submitted.\n+     * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n+     */\n+    public Response<Void> setBlobAccessTier(BlobBatchSetBlobAccessTierOptions options) {\n+        return setBlobAccessTierHelper(options);\n+    }\n+\n+    private Response<Void> setBlobAccessTierHelper(BlobBatchSetBlobAccessTierOptions options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MjI4Mw=="}, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTk0MA==", "bodyText": "updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459581940", "createdAt": "2020-07-23T16:37:44Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/BlobBatch.java", "diffHunk": "@@ -250,13 +254,33 @@\n      * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n      */\n     public Response<Void> setBlobAccessTier(String blobUrl, AccessTier accessTier, String leaseId) {\n-        return setBlobAccessTierHelper(getUrlPath(blobUrl), accessTier, leaseId);\n+        return setBlobAccessTier(new BlobBatchSetBlobAccessTierOptions(blobUrl, accessTier).setLeaseId(leaseId));\n     }\n \n-    private Response<Void> setBlobAccessTierHelper(String urlPath, AccessTier accessTier, String leaseId) {\n+    /**\n+     * Adds a set tier operation to the batch.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.batch.BlobBatch.setBlobAccessTier#BlobBatchSetBlobAccessTierOptions}\n+     *\n+     * @param options {@link BlobBatchSetBlobAccessTierOptions}\n+     * @return a {@link Response} that will be used to associate this operation to the response when the batch is\n+     * submitted.\n+     * @throws UnsupportedOperationException If this batch has already added an operation of another type.\n+     */\n+    public Response<Void> setBlobAccessTier(BlobBatchSetBlobAccessTierOptions options) {\n+        return setBlobAccessTierHelper(options);\n+    }\n+\n+    private Response<Void> setBlobAccessTierHelper(BlobBatchSetBlobAccessTierOptions options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MjI4Mw=="}, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTM2MzI3OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMDoxNDo0OVrOG14eNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNToxNlrOG2SkTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1Mjk1MA==", "bodyText": "Do we want to eagerly promote this in public API given it's only use is in Blob Batch?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459152950", "createdAt": "2020-07-23T00:14:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -280,4 +280,21 @@ public static OffsetDateTime parseDate(String dateString) {\n                 });\n         });\n     }\n+\n+    /**\n+     * Appends a query parameter to a url.\n+     *\n+     * @param url The url.\n+     * @param key The query key.\n+     * @param value The query value.\n+     * @return The updated url.\n+     */\n+    public static String appendQueryParameter(String url, String key, String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MzQyMw==", "bodyText": "It's also used in Blob's getBlobUrl. That was actually where the method originally existed and I wanted to pull it out to prevent duplication", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459153423", "createdAt": "2020-07-23T00:16:34Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -280,4 +280,21 @@ public static OffsetDateTime parseDate(String dateString) {\n                 });\n         });\n     }\n+\n+    /**\n+     * Appends a query parameter to a url.\n+     *\n+     * @param url The url.\n+     * @param key The query key.\n+     * @param value The query value.\n+     * @return The updated url.\n+     */\n+    public static String appendQueryParameter(String url, String key, String value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1Mjk1MA=="}, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MDQ5Mw==", "bodyText": "Given there are more use cases for this sounds good to add.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459580493", "createdAt": "2020-07-23T16:35:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -280,4 +280,21 @@ public static OffsetDateTime parseDate(String dateString) {\n                 });\n         });\n     }\n+\n+    /**\n+     * Appends a query parameter to a url.\n+     *\n+     * @param url The url.\n+     * @param key The query key.\n+     * @param value The query value.\n+     * @return The updated url.\n+     */\n+    public static String appendQueryParameter(String url, String key, String value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1Mjk1MA=="}, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTM2Mzg1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-common/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMDoxNTowMlrOG14eiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNzo0OVrOG2SqMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MzAzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Added appendQueryParam method to support adding version and snapshot support to BlobBatch setTier.\n          \n          \n            \n            - Added appendQueryParameter method to support adding version and snapshot support to BlobBatch setTier.\n          \n      \n    \n    \n  \n\nIf we retain the new helper function.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459153035", "createdAt": "2020-07-23T00:15:02Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/CHANGELOG.md", "diffHunk": "@@ -3,6 +3,7 @@\n ## 12.8.0-beta.2 (Unreleased)\n - Added support for setting tags and filterTags operations on SAS by adding to AccountSASPermissions.\n - Fixed bug where FluxInputStream would throw when a ByteBuffer of length 0 was encountered.\n+- Added appendQueryParam method to support adding version and snapshot support to BlobBatch setTier.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MjAwMg==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r459582002", "createdAt": "2020-07-23T16:37:49Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/CHANGELOG.md", "diffHunk": "@@ -3,6 +3,7 @@\n ## 12.8.0-beta.2 (Unreleased)\n - Added support for setting tags and filterTags operations on SAS by adding to AccountSASPermissions.\n - Fixed bug where FluxInputStream would throw when a ByteBuffer of length 0 was encountered.\n+- Added appendQueryParam method to support adding version and snapshot support to BlobBatch setTier.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1MzAzNQ=="}, "originalCommit": {"oid": "b63adc17d47aef4402d4fb014880a8e41ad5827b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTQzNTA2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/options/BlobBatchSetBlobAccessTierOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDoyMDowMlrOG2xOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTo1Mjo1NVrOG3ovfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA4MjcxMg==", "bodyText": "I think maybe like getBlobIdentifier might be more appropriate since it's not just the path?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r460082712", "createdAt": "2020-07-24T14:20:02Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/options/BlobBatchSetBlobAccessTierOptions.java", "diffHunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.batch.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.blob.BlobUrlParts;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.RehydratePriority;\n+import com.azure.storage.common.Utility;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+/**\n+ * Extended options that may be passed when batch setting tier for blobs.\n+ */\n+@Fluent\n+public class BlobBatchSetBlobAccessTierOptions {\n+\n+    private final ClientLogger logger = new ClientLogger(BlobBatchSetBlobAccessTierOptions.class);\n+\n+    private final BlobUrlParts blobUrlParts;\n+    private final AccessTier tier;\n+    private RehydratePriority priority;\n+    private String leaseId;\n+    private String tagsConditions;\n+\n+    /**\n+     * @param blobUrl Url of the blob to set access tier. Blob names must be encoded to UTF-8.\n+     * @param tier {@link AccessTier} to set on each blob.\n+     */\n+    public BlobBatchSetBlobAccessTierOptions(String blobUrl, AccessTier tier) {\n+        StorageImplUtils.assertNotNull(\"blobUrl\", blobUrl);\n+        StorageImplUtils.assertNotNull(\"tier\", tier);\n+        this.blobUrlParts = BlobUrlParts.parse(blobUrl);\n+        this.tier = tier;\n+    }\n+\n+    /**\n+     * @param containerName Name of the container to set access tier.\n+     * @param blobName Name of the blob to set access tier. Blob names must be encoded to UTF-8.\n+     * @param tier {@link AccessTier} to set on each blob.\n+     */\n+    public BlobBatchSetBlobAccessTierOptions(String containerName, String blobName, AccessTier tier) {\n+        StorageImplUtils.assertNotNull(\"containerName\", containerName);\n+        StorageImplUtils.assertNotNull(\"blobName\", blobName);\n+        StorageImplUtils.assertNotNull(\"tier\", tier);\n+        this.blobUrlParts = BlobUrlParts.parse(\"https://account.blob.core.windows.net\")\n+            .setContainerName(containerName)\n+            .setBlobName(blobName);\n+        this.tier = tier;\n+    }\n+\n+    /**\n+     * @return Url of the blob to set its access tier.\n+     */\n+    public String getBlobUrl() {\n+        return blobUrlParts.toUrl().toString();\n+    }\n+\n+    /**\n+     * @return Container of the blob to set its access tier.\n+     */\n+    public String getBlobContainerName() {\n+        return blobUrlParts.getBlobContainerName();\n+    }\n+\n+    /**\n+     * @return Name of the blob to set its access tier.\n+     */\n+    public String getBlobName() {\n+        return blobUrlParts.getBlobName();\n+    }\n+\n+    /**\n+     * @return Path of the blob to set its access tier.\n+     */\n+    public String getBlobPath() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8199cb36d2a16419ca8255cc1abfd5afc0a4f08a"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk5MjM4Mw==", "bodyText": "Yeah I like that", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13427#discussion_r460992383", "createdAt": "2020-07-27T15:52:55Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-batch/src/main/java/com/azure/storage/blob/batch/options/BlobBatchSetBlobAccessTierOptions.java", "diffHunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.batch.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.blob.BlobUrlParts;\n+import com.azure.storage.blob.models.AccessTier;\n+import com.azure.storage.blob.models.RehydratePriority;\n+import com.azure.storage.common.Utility;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+/**\n+ * Extended options that may be passed when batch setting tier for blobs.\n+ */\n+@Fluent\n+public class BlobBatchSetBlobAccessTierOptions {\n+\n+    private final ClientLogger logger = new ClientLogger(BlobBatchSetBlobAccessTierOptions.class);\n+\n+    private final BlobUrlParts blobUrlParts;\n+    private final AccessTier tier;\n+    private RehydratePriority priority;\n+    private String leaseId;\n+    private String tagsConditions;\n+\n+    /**\n+     * @param blobUrl Url of the blob to set access tier. Blob names must be encoded to UTF-8.\n+     * @param tier {@link AccessTier} to set on each blob.\n+     */\n+    public BlobBatchSetBlobAccessTierOptions(String blobUrl, AccessTier tier) {\n+        StorageImplUtils.assertNotNull(\"blobUrl\", blobUrl);\n+        StorageImplUtils.assertNotNull(\"tier\", tier);\n+        this.blobUrlParts = BlobUrlParts.parse(blobUrl);\n+        this.tier = tier;\n+    }\n+\n+    /**\n+     * @param containerName Name of the container to set access tier.\n+     * @param blobName Name of the blob to set access tier. Blob names must be encoded to UTF-8.\n+     * @param tier {@link AccessTier} to set on each blob.\n+     */\n+    public BlobBatchSetBlobAccessTierOptions(String containerName, String blobName, AccessTier tier) {\n+        StorageImplUtils.assertNotNull(\"containerName\", containerName);\n+        StorageImplUtils.assertNotNull(\"blobName\", blobName);\n+        StorageImplUtils.assertNotNull(\"tier\", tier);\n+        this.blobUrlParts = BlobUrlParts.parse(\"https://account.blob.core.windows.net\")\n+            .setContainerName(containerName)\n+            .setBlobName(blobName);\n+        this.tier = tier;\n+    }\n+\n+    /**\n+     * @return Url of the blob to set its access tier.\n+     */\n+    public String getBlobUrl() {\n+        return blobUrlParts.toUrl().toString();\n+    }\n+\n+    /**\n+     * @return Container of the blob to set its access tier.\n+     */\n+    public String getBlobContainerName() {\n+        return blobUrlParts.getBlobContainerName();\n+    }\n+\n+    /**\n+     * @return Name of the blob to set its access tier.\n+     */\n+    public String getBlobName() {\n+        return blobUrlParts.getBlobName();\n+    }\n+\n+    /**\n+     * @return Path of the blob to set its access tier.\n+     */\n+    public String getBlobPath() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA4MjcxMg=="}, "originalCommit": {"oid": "8199cb36d2a16419ca8255cc1abfd5afc0a4f08a"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4807, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}