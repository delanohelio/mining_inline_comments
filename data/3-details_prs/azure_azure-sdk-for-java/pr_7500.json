{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNzU3MDI5", "number": 7500, "title": "Adding Transport client request life cycle timeline on diagnostics", "bodyText": "This will add timeline for various stage of transport client request on diagnostics, both on Direct mode(Rntbd) or in Gateway (ReactorNettyHttp).\nBelow how it looks on diagnostics string\nRntbd protocol -\n\"transportRequestTimeline\": [\n{\n\"eventName\": \"created\",\n\"startTime\": \"2020-02-04T14:54:59.488-05:00\",\n\"durationInMicroSec\": \"51000\"\n},\n{\n\"eventName\": \"queued\",\n\"startTime\": \"2020-02-04T14:54:59.539-05:00\",\n\"durationInMicroSec\": \"266000\"\n},\n{\n\"eventName\": \"pipelined\",\n\"startTime\": \"2020-02-04T14:54:59.805-05:00\",\n\"durationInMicroSec\": \"9990000\"\n},\n{\n\"eventName\": \"transitTime\",\n\"startTime\": \"2020-02-04T14:55:09.795-05:00\",\n\"durationInMicroSec\": \"50000\"\n},\n{\n\"eventName\": \"received\",\n\"startTime\": \"2020-02-04T14:55:09.845-05:00\",\n\"durationInMicroSec\": \"20000\"\n},\n{\n\"eventName\": \"completed\",\n\"startTime\": \"2020-02-04T14:55:09.865-05:00\",\n\"durationInMicroSec\": \"0\"\n}\n]\nHttp protocol -\n\"transportRequestTimeline\": [\n{\n\"eventName\": \"connectionCreated\",\n\"startTime\": \"2020-02-04T14:53:47.932-05:00\",\n\"durationInMicroSec\": \"78000\"\n},\n{\n\"eventName\": \"connectionConfigured\",\n\"startTime\": \"2020-02-04T14:53:48.010-05:00\",\n\"durationInMicroSec\": \"1000\"\n},\n{\n\"eventName\": \"requestSent\",\n\"startTime\": \"2020-02-04T14:53:48.011-05:00\",\n\"durationInMicroSec\": \"2000\"\n},\n{\n\"eventName\": \"transitTime\",\n\"startTime\": \"2020-02-04T14:53:48.013-05:00\",\n\"durationInMicroSec\": \"51000\"\n},\n{\n\"eventName\": \"received\",\n\"startTime\": \"2020-02-04T14:53:48.064-05:00\",\n\"durationInMicroSec\": \"1000\"\n}\n]", "createdAt": "2020-01-16T17:16:24Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500", "merged": true, "mergeCommit": {"oid": "44ba79d0d7587c8e5b05d260990fd5fe925fa284"}, "closed": true, "closedAt": "2020-02-10T14:45:14Z", "author": {"login": "simplynaveen20"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb69RQwAH2gAyMzYzNzU3MDI5OjhmY2ExZGY2ZDdiNjE2ZjE5ZjFmMjg3NzczMDUwY2UzYjg0YzE0NGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCFWtwAH2gAyMzYzNzU3MDI5OjUwYTg4NTlhOTkzNTRlZDk4MzdlYTM0ZmJmZjcwYjJlN2MzYTVlMWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fca1df6d7b616f19f1f287773050ce3b84c144d", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fca1df6d7b616f19f1f287773050ce3b84c144d", "committedDate": "2020-01-16T17:05:36Z", "message": "adding transport client granular info to diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "368756cb2ffdebfeb2ae5986fd6802b269fb94cf", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/368756cb2ffdebfeb2ae5986fd6802b269fb94cf", "committedDate": "2020-01-16T17:26:30Z", "message": "removing redundant api from RequestTimeline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwOTc1Mjg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-350975288", "createdAt": "2020-01-30T16:44:56Z", "commit": {"oid": "368756cb2ffdebfeb2ae5986fd6802b269fb94cf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0NDo1N1rOFjyCpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0ODo1NVrOFjyL1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2NDM1Nw==", "bodyText": "do we have a specific format for request timeline? is it going to be json?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r373064357", "createdAt": "2020-01-30T16:44:57Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ClientSideRequestStatistics.java", "diffHunk": "@@ -274,6 +280,17 @@ private void printSystemInformation(StringBuilder stringBuilder) {\n         }\n     }\n \n+    private void printTransportRequestTimeline(StringBuilder stringBuilder) {\n+        if (transportRequestTimeline != null) {\n+            stringBuilder.append(\"Transport request timeline -------\").append(System.lineSeparator());\n+            Iterator<RequestTimeline.Event> iterator = transportRequestTimeline.iterator();\n+            while (iterator.hasNext()) {\n+                RequestTimeline.Event event = iterator.next();\n+                stringBuilder.append(\"  eventName = \" + event.getName() + \",  startTime = \" + event.getStartTime() + \",  durationInMicrosec = \" + event.getDuration().toNanos()/1000L).append(System.lineSeparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368756cb2ffdebfeb2ae5986fd6802b269fb94cf"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2NTA2OA==", "bodyText": "I wonder why we have mixture of Duration and Long for representing time.\nIs there a specific reason we are not using the same type?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r373065068", "createdAt": "2020-01-30T16:46:05Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RequestTimeline.java", "diffHunk": "@@ -148,25 +149,33 @@ public String toString() {\n         return RntbdObjectMapper.toString(this);\n     }\n \n-    @JsonPropertyOrder({ \"name\", \"time\", \"duration\" })\n+    @JsonPropertyOrder({ \"name\", \"startTime\", \"durationInMicroSec\" })\n     public static final class Event {\n \n-        @JsonSerialize(using = ToStringSerializer.class)\n+        @JsonIgnore\n         private final Duration duration;\n \n+        @JsonSerialize(using = ToStringSerializer.class)\n+        private final long durationInMicroSec;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368756cb2ffdebfeb2ae5986fd6802b269fb94cf"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2NjcxMQ==", "bodyText": "shouldn't we capture the timeline inside the response instead of the request?\nWhy are capturing the timeline in the request not the response?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r373066711", "createdAt": "2020-01-30T16:48:55Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxGatewayStoreModel.java", "diffHunk": "@@ -271,6 +276,14 @@ private String ensureSlashPrefixed(String path) {\n             return contentObservable\n                        .flatMap(content -> {\n                            try {\n+                               //Adding transport client request timeline to diagnostics\n+                               ReactorNettyRequestRecord reactorNettyRequestRecord = httpResponseTuple.getRight();\n+                               if (reactorNettyRequestRecord != null) {\n+                                   reactorNettyRequestRecord.setTimeCompleted(OffsetDateTime.now());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368756cb2ffdebfeb2ae5986fd6802b269fb94cf"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e33efb174588942202422423c5d92ec6484cd6bc", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e33efb174588942202422423c5d92ec6484cd6bc", "committedDate": "2020-02-04T20:03:02Z", "message": "merge with feature v4"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTIyOTU3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-353922957", "createdAt": "2020-02-05T17:58:34Z", "commit": {"oid": "e33efb174588942202422423c5d92ec6484cd6bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzo1ODozNVrOFmBgzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzo1ODozNVrOFmBgzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxNDk5MA==", "bodyText": "this will be somewhat a cascading change.\ndue to changing Mono< HttpResponse> to Mono< ReactorNettyRequestRecord>\nHow about making ReactorNettyRequestRecord an entry of HttpResponse? Thought?\nso the method return signature will still be Mono but this HttpResponse will be subclass of HttpResponse which will have ReactorNettyRequestRecord\nthoughts?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r375414990", "createdAt": "2020-02-05T17:58:35Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -106,6 +109,34 @@ private void configureChannelPipelineHandlers() {\n                 .single();\n     }\n \n+    @Override\n+    public Mono<Pair<HttpResponse, ReactorNettyRequestRecord>> send(HttpRequest request, ReactorNettyRequestRecord reactorNettyRequestRecord) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33efb174588942202422423c5d92ec6484cd6bc"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee44a27504a3fa57c61bc67e80dd1048f018ddd5", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ee44a27504a3fa57c61bc67e80dd1048f018ddd5", "committedDate": "2020-02-05T22:39:27Z", "message": "moving ReactorNettyRequestRecord inside HttpRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a09e096a084b6eac07d4441083446a40c0c51d1b", "committedDate": "2020-02-05T22:45:31Z", "message": "clearing unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODI4NTkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-354828591", "createdAt": "2020-02-06T22:51:21Z", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODYwMDAz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-354860003", "createdAt": "2020-02-07T00:11:48Z", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTI2MDE2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-354926016", "createdAt": "2020-02-07T04:32:09Z", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDozMjowOVrOFmyDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDozMjowOVrOFmyDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxMDM2Mw==", "bodyText": "One argument per line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r376210363", "createdAt": "2020-02-07T04:32:09Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java", "diffHunk": "@@ -418,6 +413,10 @@ public static CosmosResponseDiagnostics createCosmosResponseDiagnostics() {\n         return new CosmosResponseDiagnostics();\n     }\n \n+    public static void setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTI2MjU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-354926259", "createdAt": "2020-02-07T04:33:28Z", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDozMzoyOFrOFmyEmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDozMzoyOFrOFmyEmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxMDU4Nw==", "bodyText": "What's the client stats context/scope?\nIn-case the request is retried will it override existing timeline?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r376210587", "createdAt": "2020-02-07T04:33:28Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java", "diffHunk": "@@ -418,6 +413,10 @@ public static CosmosResponseDiagnostics createCosmosResponseDiagnostics() {\n         return new CosmosResponseDiagnostics();\n     }\n \n+    public static void setTransportClientRequestTimelineOnDiagnostics(CosmosResponseDiagnostics cosmosResponseDiagnostics, RequestTimeline requestTimeline) {\n+        cosmosResponseDiagnostics.clientSideRequestStatistics().setTransportClientRequestTimeline(requestTimeline);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODkyMTY4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#pullrequestreview-354892168", "createdAt": "2020-02-07T02:01:18Z", "commit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMjowMToxOVrOFmwPCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMjowMToxOVrOFmwPCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE4MDQ5MQ==", "bodyText": "It is the duration of the sent event that represents the transit time.\nThis has me thinking that giving meaningful names to duration fields would be useful to us and end users in two ways:\n\nCommunicating the meaning of duration\nLabeling charts and graphs with event time on the x axis and duration on the y axis.\n\nExample:\nThe sent event follows message encoding and occurs once it is confirmed that the message is on the wire. The duration of the sent event is the time that it takes for a round-trip to the server to complete and the next event occurs: received. The time between these two events--sent and received-- is the transitTime.\nSomething like this JSON is what we should produce--perhaps word-smithed and simplified for brevity:\n{\n  \"event\": {\n    \"name\": \"sent\", \n    \"time\": \"<time-stamp>\"\n  }, \n  \"duration\": { \n    \"name\": \"transitTime\", \n    \"microseconds\": <microseconds> \n  }\n}\n\nI've discussed this with Naveen and Mo. We agreed that this work should be done on another PR. I've logged this issue to track the work which I will assign to myself for now: #8034", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7500#discussion_r376180491", "createdAt": "2020-02-07T02:01:19Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -217,7 +217,7 @@ public RequestTimeline takeTimelineSnapshot() {\n                 timeQueued, timePipelined == null ? timeCompletedOrNow : timePipelined),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09e096a084b6eac07d4441083446a40c0c51d1b"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b33027b423ec0f64f1ce662c0696c5e44d694d", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c2b33027b423ec0f64f1ce662c0696c5e44d694d", "committedDate": "2020-02-07T20:13:56Z", "message": "adding rntbd request response on each store response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a8859a99354ed9837ea34fbff70b2e7c3a5e1a", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/50a8859a99354ed9837ea34fbff70b2e7c3a5e1a", "committedDate": "2020-02-07T20:28:16Z", "message": "removing extra import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 430, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}