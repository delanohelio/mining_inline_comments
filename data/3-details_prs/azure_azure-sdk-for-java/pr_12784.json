{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzA4OTIw", "number": 12784, "title": "Update to deal with use of Spring BOM in samples", "bodyText": "Note: Before this gets checked in #12966 needs to be checked merged into master.\nSpring samples require the use of the spring bom and the problem with this is, it's a BOM file and the spring dependencies are pulled in through that which means any dependencies may or may not have versions. Unfortunately, there are still version tags azure sdk client libraries which means these files have to be \"sort of\" scanned.\nBasically I'm doing this\n\nLook for pom files with a specific parent, all of these parent from azure-spring-boot-sample.\nInspect all of the dependencies\n\nif any dependency is an azure sdk library then it must have a version\nIf the dependency has a version element then it must have a version tag\nIf the dependency doesn't have a version element then ignore it", "createdAt": "2020-07-02T19:41:37Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12784", "merged": true, "mergeCommit": {"oid": "9bc23c330bab952a0b439e10421f3dc57a25b71a"}, "closed": true, "closedAt": "2020-07-10T16:08:34Z", "author": {"login": "JimSuplizio"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxD0WaAH2gAyNDQzNzA4OTIwOjg5ZmIyNmY1ODk2ZGZlMTc3ZjBiMjJjYzM2YTQ1NTMwMjk0YWZkMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczkpp5AH2gAyNDQzNzA4OTIwOmU5ZDFjZDM4ZjQ1ZGNmYWI3MTcyNzQ5ZGE1MTI5NDI3YTMzMDAxYmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89fb26f5896dfe177f0b22cc36a45530294afd2a", "author": {"user": {"login": "JimSuplizio", "name": "James Suplizio"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/89fb26f5896dfe177f0b22cc36a45530294afd2a", "committedDate": "2020-07-02T19:15:16Z", "message": "Update to deal with use of Spring BOM in samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bc8a95d8cacd280ea6078a33140ed1a9a5cd161", "author": {"user": {"login": "JimSuplizio", "name": "James Suplizio"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5bc8a95d8cacd280ea6078a33140ed1a9a5cd161", "committedDate": "2020-07-09T14:59:44Z", "message": "Remove defunct superfluous parent entry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODIwNjgz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12784#pullrequestreview-445820683", "createdAt": "2020-07-09T17:22:35Z", "commit": {"oid": "5bc8a95d8cacd280ea6078a33140ed1a9a5cd161"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoyMjozNVrOGvavaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoyMjozNVrOGvavaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3NDM3Nw==", "bodyText": "What is the conditions about the NextSibling? I'd assume if there is a version tag there must also be a comment tag.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12784#discussion_r452374377", "createdAt": "2020-07-09T17:22:35Z", "author": {"login": "weshaggard"}, "path": "eng/versioning/pom_file_version_scanner.ps1", "diffHunk": "@@ -248,6 +255,100 @@ function Confirm-Node-Is-Part-Of-Configuration {\n     return $false\n }\n \n+# Spring samples will pull in most dependencies through use of the spring bom. Any dependency that is an\n+# an azure sdk client dependency needs to be verified and must have a groupId, artifactId, version and version tag.\n+# Similarly, any dependency with a version needs to have a version tag. Dependencies without a version tag are\n+# ignored as those are assumed to be coming from the BOM.\n+function Assert-Spring-Sample-Version-Tags {\n+    param(\n+        [hashtable]$libHash,\n+        [hashtable]$extDepHash,\n+        [xml]$xmlPomFile\n+    )\n+    Write-Host \"processing Spring Sample pomFile=$($pomFile)\"\n+    $xmlNsManagerSpring = New-Object -TypeName \"Xml.XmlNamespaceManager\" -ArgumentList $xmlPomFile.NameTable\n+    $xmlNsManagerSpring.AddNamespace(\"ns\", $xmlPomFile.DocumentElement.NamespaceURI)\n+\n+    if (-not $xmlPomFile.project.parent.groupId)\n+    {\n+        $script:FoundError = $true\n+        Write-Error-With-Color \"Error: parent/groupId is missing.\"\n+    }\n+\n+    $versionNode = $xmlPomFile.SelectSingleNode(\"/ns:project/ns:parent/ns:version\", $xmlNsManagerSpring)\n+    if (-not $versionNode)\n+    {\n+        $script:FoundError = $true\n+        Write-Error-With-Color \"Error: parent/version is missing.\"\n+        Write-Error-With-ColorWrite-Error-With-Color \"Error: Missing project/version update tag. The tag should be <!-- {x-version-update;$($groupId):$($artifactId);current} -->\"\n+    } else {\n+        $retVal = Test-Dependency-Tag-And-Version $libHash $extDepHash $versionNode.InnerText.Trim() $versionNode.NextSibling.Value\n+        if ($retVal)\n+        {\n+            $script:FoundError = $true\n+            Write-Error-With-Color \"$($retVal)\"\n+        }\n+    }\n+\n+    # Loop through the dependencies. If any dependency is in the libHash (aka, the libraries we build)\n+    # then it needs to have a version element and update tag.\n+    foreach($dependencyNode in $xmlPomFile.GetElementsByTagName(\"dependency\"))\n+    {\n+        $artifactId = $dependencyNode.artifactId\n+        $groupId = $dependencyNode.groupId\n+        # If the artifactId and groupId are both empty then check to see if this\n+        # is part of a configuration entry. If so then just continue.\n+        if (!$artifactId -and !$groupId)\n+        {\n+            $isPartOfConfig = Confirm-Node-Is-Part-Of-Configuration $dependencyNode\n+            if (!$isPartOfConfig)\n+            {\n+                $script:FoundError = $true\n+                # Because this particular case is harder to track down, print the OuterXML which is effectively the entire tag\n+                Write-Error-With-Color \"Error: dependency is missing version element and/or artifactId and groupId elements dependencyNode=$($dependencyNode.OuterXml)\"\n+            }\n+            continue\n+        }\n+        $hashKey = \"$($groupId):$($artifactId)\"\n+        $versionNode = $dependencyNode.GetElementsByTagName(\"version\")[0]\n+        # If this is something we build and release, it better have a version and a version tag\n+        if ($libHash.ContainsKey($hashKey))\n+        {\n+            if (-not $versionNode)\n+            {\n+                $script:FoundError = $true\n+                Write-Error-With-Color \"Error: dependency is missing version element and tag groupId=$($groupId), artifactId=$($artifactId) should be <version></version> <!-- {x-version-update;$($groupId):$($artifactId);current|dependency|external_dependency<select one>} -->\"\n+            } else {\n+                # verify the version tag and version are correct\n+                if ($versionNode.NextSibling -and $versionNode.NextSibling.NodeType -eq \"Comment\")\n+                {\n+                    $retVal = Test-Dependency-Tag-And-Version $libHash $extDepHash $versionNode.InnerText.Trim() $versionNode.NextSibling.Value\n+                    if ($retVal)\n+                    {\n+                        $script:FoundError = $true\n+                        Write-Error-With-Color \"$($retVal)\"\n+                    }\n+                } else {\n+                    $script:FoundError = $true\n+                    Write-Error-With-Color \"Error: dependency is missing version tag groupId=$($groupId), artifactId=$($artifactId) tag should be <!-- {x-version-update;$($groupId):$($artifactId);current|dependency|external_dependency<select one>} -->\"\n+                }\n+            }\n+        } else {\n+            # else, if there's a version tag verify it, otherwise just skip it since the version should be coming\n+            # from the bom\n+            if ($versionNode -and $versionNode.NextSibling -and $versionNode.NextSibling.NodeType -eq \"Comment\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bc8a95d8cacd280ea6078a33140ed1a9a5cd161"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDI0MDkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12784#pullrequestreview-446024090", "createdAt": "2020-07-09T23:03:13Z", "commit": {"oid": "5bc8a95d8cacd280ea6078a33140ed1a9a5cd161"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d1cd38f45dcfab7172749da5129427a33001bd", "author": {"user": {"login": "JimSuplizio", "name": "James Suplizio"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e9d1cd38f45dcfab7172749da5129427a33001bd", "committedDate": "2020-07-10T14:38:18Z", "message": "Update for missing tag on non-sdk dependencies"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2813, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}