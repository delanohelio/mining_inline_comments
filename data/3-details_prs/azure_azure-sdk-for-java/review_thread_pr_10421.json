{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDQyNDQ1", "number": 10421, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0NTowOFrOD0jnvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNTo1NTozOFrOD0ksng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDM2MTU2OnYy", "diffSide": "RIGHT", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0NTowOFrOGJjIQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowNzowMFrOGJmvwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw==", "bodyText": "Could be reviewed carefully.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412665923", "createdAt": "2020-04-22T04:45:08Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4ODczNw==", "bodyText": "Em, what does spotbugs say on Boolean?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412688737", "createdAt": "2020-04-22T05:51:20Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MzE0NQ==", "bodyText": "If return null for Boolean, it will cause NPE for boolean as return type.\nA method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. This method can be invoked as though it returned a value of type boolean, and the compiler will insert automatic unboxing of the Boolean value. If a null value is returned, this will result in a NullPointerException.\nhttps://github.com/codacy/codacy-findbugs/blob/master/src/main/resources/docs/description/NP_BOOLEAN_RETURN_NULL.md", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412693145", "createdAt": "2020-04-22T06:02:11Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NDMyMw==", "bodyText": "Agree. But int does not make it clearer as well (at least for human). Who would know a integer only can take 3 values? If you do like clarity, do enum.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412694323", "createdAt": "2020-04-22T06:05:07Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyNTE4NA==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412725184", "createdAt": "2020-04-22T07:07:00Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDM2MjY1OnYy", "diffSide": "RIGHT", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0NTozOFrOGJjI3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTo0N1rOGJmkTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ==", "bodyText": "Could be reviewed carefully.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412666079", "createdAt": "2020-04-22T04:45:38Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "diffHunk": "@@ -10,21 +10,28 @@\n import com.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringInner;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringsInner;\n+import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n+import com.azure.management.resources.fluentcore.model.Refreshable;\n import com.azure.management.resources.fluentcore.model.implementation.CreatableUpdatableImpl;\n import com.azure.management.resources.fluentcore.utils.Utils;\n import java.util.Arrays;\n import reactor.core.publisher.Mono;\n \n-class ExpressRouteCircuitPeeringImpl\n+interface ExpressRouteCircuitPeeringParent<ModelT, InnerT>\n+    extends GroupableResource<NetworkManager, InnerT>,\n+    Refreshable<ModelT> {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNTA3Mw==", "bodyText": "Any detail about this new interface?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412715073", "createdAt": "2020-04-22T06:49:12Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "diffHunk": "@@ -10,21 +10,28 @@\n import com.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringInner;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringsInner;\n+import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n+import com.azure.management.resources.fluentcore.model.Refreshable;\n import com.azure.management.resources.fluentcore.model.implementation.CreatableUpdatableImpl;\n import com.azure.management.resources.fluentcore.utils.Utils;\n import java.util.Arrays;\n import reactor.core.publisher.Mono;\n \n-class ExpressRouteCircuitPeeringImpl\n+interface ExpressRouteCircuitPeeringParent<ModelT, InnerT>\n+    extends GroupableResource<NetworkManager, InnerT>,\n+    Refreshable<ModelT> {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNzU1OQ==", "bodyText": "In order to deal with the peering inner in route filter. https://github.com/Azure/azure-sdk-for-java/pull/10421/files#diff-54b158e5bec26f0a0848f449f42c704cR55\nMaybe I think I could remove the interface and use in ExpressRouteCircuitPeering template.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412717559", "createdAt": "2020-04-22T06:53:45Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "diffHunk": "@@ -10,21 +10,28 @@\n import com.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringInner;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringsInner;\n+import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n+import com.azure.management.resources.fluentcore.model.Refreshable;\n import com.azure.management.resources.fluentcore.model.implementation.CreatableUpdatableImpl;\n import com.azure.management.resources.fluentcore.utils.Utils;\n import java.util.Arrays;\n import reactor.core.publisher.Mono;\n \n-class ExpressRouteCircuitPeeringImpl\n+interface ExpressRouteCircuitPeeringParent<ModelT, InnerT>\n+    extends GroupableResource<NetworkManager, InnerT>,\n+    Refreshable<ModelT> {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMjI1Mw==", "bodyText": "I have removed it and add template in ExpressRouteCircuitPeeringImpl", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412722253", "createdAt": "2020-04-22T07:01:47Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "diffHunk": "@@ -10,21 +10,28 @@\n import com.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringInner;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringsInner;\n+import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n+import com.azure.management.resources.fluentcore.model.Refreshable;\n import com.azure.management.resources.fluentcore.model.implementation.CreatableUpdatableImpl;\n import com.azure.management.resources.fluentcore.utils.Utils;\n import java.util.Arrays;\n import reactor.core.publisher.Mono;\n \n-class ExpressRouteCircuitPeeringImpl\n+interface ExpressRouteCircuitPeeringParent<ModelT, InnerT>\n+    extends GroupableResource<NetworkManager, InnerT>,\n+    Refreshable<ModelT> {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDM2NDMwOnYy", "diffSide": "RIGHT", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0NjoxOFrOGJjJwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjowOToyMVrOGJk-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA==", "bodyText": "Not sure if it better use if instead of assert", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412666304", "createdAt": "2020-04-22T04:46:18Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -414,6 +414,7 @@ VirtualNetworkGatewayIPConfiguration defaultIPConfiguration() {\n             // ...and no need to create VNet\n             networkObservable = Mono.empty(); // ...and don't create another VNet\n         } else {\n+            assert creatableNetwork != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MTA3MA==", "bodyText": "Maybe just check not null, throw IllegalState if null?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412691070", "createdAt": "2020-04-22T05:57:04Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -414,6 +414,7 @@ VirtualNetworkGatewayIPConfiguration defaultIPConfiguration() {\n             // ...and no need to create VNet\n             networkObservable = Mono.empty(); // ...and don't create another VNet\n         } else {\n+            assert creatableNetwork != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NjA4MA==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412696080", "createdAt": "2020-04-22T06:09:21Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -414,6 +414,7 @@ VirtualNetworkGatewayIPConfiguration defaultIPConfiguration() {\n             // ...and no need to create VNet\n             networkObservable = Mono.empty(); // ...and don't create another VNet\n         } else {\n+            assert creatableNetwork != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDQzNjc3OnYy", "diffSide": "RIGHT", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/ExpressRouteCircuitPeering.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNToxNjo1NFrOGJjwrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNTo0Mjo0MVrOGJkUsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NjI2OA==", "bodyText": "Does this get passed by checkstyle?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412676268", "createdAt": "2020-04-22T05:16:54Z", "author": {"login": "xseeseesee"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/ExpressRouteCircuitPeering.java", "diffHunk": "@@ -121,16 +121,16 @@\n              *     same VLAN ID\n              * @return next stage of definition\n              */\n-            WithPeerAsn withVlanId(int vlanId);\n+            WithPeerASN withVlanId(int vlanId);\n         }\n \n         /** The stage of Express Route Circuit Peering definition allowing to specify AS number for peering. */\n-        interface WithPeerAsn {\n+        interface WithPeerASN {\n             /**\n-             * @param peerAsn AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n+             * @param peerASN AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n              * @return next stage of definition\n              */\n-            WithCreate withPeerAsn(long peerAsn);\n+            WithCreate withPeerASN(long peerASN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4NTQ5MA==", "bodyText": "Yes, the checkstyle doesn't add ASN in blacklist.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412685490", "createdAt": "2020-04-22T05:42:41Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/ExpressRouteCircuitPeering.java", "diffHunk": "@@ -121,16 +121,16 @@\n              *     same VLAN ID\n              * @return next stage of definition\n              */\n-            WithPeerAsn withVlanId(int vlanId);\n+            WithPeerASN withVlanId(int vlanId);\n         }\n \n         /** The stage of Express Route Circuit Peering definition allowing to specify AS number for peering. */\n-        interface WithPeerAsn {\n+        interface WithPeerASN {\n             /**\n-             * @param peerAsn AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n+             * @param peerASN AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n              * @return next stage of definition\n              */\n-            WithCreate withPeerAsn(long peerAsn);\n+            WithCreate withPeerASN(long peerASN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NjI2OA=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDUzNzkwOnYy", "diffSide": "LEFT", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/NetworkPeeringImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNTo1NTozOFrOGJkn_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjowMjo1OFrOGJkzwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MDQyOA==", "bodyText": "Any effect on this deleted interface?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412690428", "createdAt": "2020-04-22T05:55:38Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/NetworkPeeringImpl.java", "diffHunk": "@@ -24,8 +24,7 @@\n         NetworkPeering, Network, VirtualNetworkPeeringInner, NetworkPeeringImpl, NetworkManager>\n     implements NetworkPeering,\n         NetworkPeering.Definition,\n-        NetworkPeering.Update,\n-        IndependentChild.DefinitionStages.WithParentResource<NetworkPeering, Network> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MzQ0Mg==", "bodyText": "No, the deletion is just because the super class has such implements", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412693442", "createdAt": "2020-04-22T06:02:58Z", "author": {"login": "ChenTanyi"}, "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/NetworkPeeringImpl.java", "diffHunk": "@@ -24,8 +24,7 @@\n         NetworkPeering, Network, VirtualNetworkPeeringInner, NetworkPeeringImpl, NetworkManager>\n     implements NetworkPeering,\n         NetworkPeering.Definition,\n-        NetworkPeering.Update,\n-        IndependentChild.DefinitionStages.WithParentResource<NetworkPeering, Network> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MDQyOA=="}, "originalCommit": {"oid": "63eda5f904c329a80fe25023cebf236d83fd0723"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4584, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}