{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjQ0NzQz", "number": 9329, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTo1MzoyM1rODp_y4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowODo0NVrODrENNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzYzNDI2OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTo1MzoyM1rOF5hWgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTo1MzoyM1rOF5hWgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1OTU4NA==", "bodyText": "It might be interesting to add a test where there is a default country hint. Then the user sets a different value for country hint in the request.\nThe later should take precedent.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9329#discussion_r395859584", "createdAt": "2020-03-20T19:53:23Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -410,6 +448,86 @@ void analyseBatchSentimentShowStatsRunner(\n         testRunner.accept(textDocumentInputs, options);\n     }\n \n+    // Client builder runner\n+    void clientBuilderWithValidApiKeyCredentialRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, DetectedLanguage>> testRunner) {\n+        final TextAnalyticsClientBuilder clientBuilder = createClientBuilder(getEndpoint(),\n+            new TextAnalyticsApiKeyCredential(getApiKey()));\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), DETECTED_LANGUAGE_ENGLISH);\n+    }\n+\n+    void clientBuilderWithInvalidApiKeyCredentialRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, HttpResponseException>> testRunner) {\n+        final TextAnalyticsClientBuilder clientBuilder = createClientBuilder(getEndpoint(),\n+            new TextAnalyticsApiKeyCredential(INVALID_KEY));\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), HTTP_RESPONSE_EXCEPTION_CLASS);\n+    }\n+\n+    void clientBuilderWithRotateToInvalidKeyRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, HttpResponseException>> testRunner) {\n+        final TextAnalyticsApiKeyCredential credential = new TextAnalyticsApiKeyCredential(getApiKey());\n+        final TextAnalyticsClientBuilder clientBuilder = createClientBuilder(getEndpoint(), credential);\n+        // Update to invalid key\n+        credential.updateCredential(INVALID_KEY);\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), HTTP_RESPONSE_EXCEPTION_CLASS);\n+    }\n+\n+    void clientBuilderWithRotateToValidKeyRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, DetectedLanguage>> testRunner) {\n+        final TextAnalyticsApiKeyCredential credential = new TextAnalyticsApiKeyCredential(INVALID_KEY);\n+        final TextAnalyticsClientBuilder clientBuilder = createClientBuilder(getEndpoint(), credential);\n+        // Update to valid key\n+        credential.updateCredential(getApiKey());\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), DETECTED_LANGUAGE_ENGLISH);\n+    }\n+\n+    void clientBuilderWithNullServiceVersionRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, DetectedLanguage>> testRunner) {\n+        final TextAnalyticsClientBuilder clientBuilder =\n+            createClientBuilder(getEndpoint(), new TextAnalyticsApiKeyCredential(getApiKey()))\n+            .retryPolicy(new RetryPolicy())\n+            .serviceVersion(null);\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), DETECTED_LANGUAGE_ENGLISH);\n+    }\n+\n+    void clientBuilderWithDefaultPipelineRunner(\n+        Function<TextAnalyticsClientBuilder, BiConsumer<String, DetectedLanguage>> testRunner) {\n+        final TextAnalyticsClientBuilder clientBuilder =\n+            createClientBuilder(getEndpoint(), new TextAnalyticsApiKeyCredential(getApiKey()))\n+            .configuration(Configuration.getGlobalConfiguration())\n+            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS));\n+        testRunner.apply(clientBuilder).accept(DETECT_LANGUAGE_INPUTS.get(0), DETECTED_LANGUAGE_ENGLISH);\n+    }\n+\n+    void clientBuilderWithDefaultCountryHintRunner(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deddcc73dfd6a34db6bd5064949f9d6efa9657bb"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjQ1MTY4OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1NDozOVrOF559Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzo1NDozOVrOF559Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MjcyMg==", "bodyText": "This will require client builder tests to be implemented in both sync and async clients. Instead, can all these tests be done in TextAnalyticsClientBuilderTest?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9329#discussion_r396262722", "createdAt": "2020-03-23T07:54:39Z", "author": {"login": "srnagar"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -247,6 +254,37 @@\n     @Test\n     abstract void analyseSentimentForListLanguageHint();\n \n+    // Client builder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deddcc73dfd6a34db6bd5064949f9d6efa9657bb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDg0Mjc4OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowODo0NVrOF7MUpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTowODo0NVrOF7MUpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMjE5OQ==", "bodyText": "Since there is just one builder, you can do all the testing in this class itself. Don't need a base class and then extend it to run the tests.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9329#discussion_r397612199", "createdAt": "2020-03-25T05:08:45Z", "author": {"login": "srnagar"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderTestBase.java", "diffHunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics;\n+\n+import com.azure.ai.textanalytics.models.DetectedLanguage;\n+import com.azure.ai.textanalytics.models.TextAnalyticsApiKeyCredential;\n+import com.azure.core.exception.HttpResponseException;\n+import com.azure.core.http.netty.NettyAsyncHttpClientBuilder;\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.test.TestBase;\n+import com.azure.core.util.Configuration;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+\n+import static com.azure.ai.textanalytics.TestUtils.DETECTED_LANGUAGE_ENGLISH;\n+import static com.azure.ai.textanalytics.TestUtils.DETECT_ENGLISH_LANGUAGE_RESULTS;\n+import static com.azure.ai.textanalytics.TestUtils.DETECT_SPANISH_LANGUAGE_RESULTS;\n+import static com.azure.ai.textanalytics.TestUtils.DETECT_LANGUAGE_INPUTS;\n+import static com.azure.ai.textanalytics.TestUtils.SPANISH_SAME_AS_ENGLISH_INPUTS;\n+import static com.azure.ai.textanalytics.TestUtils.HTTP_RESPONSE_EXCEPTION_CLASS;\n+import static com.azure.ai.textanalytics.TestUtils.KEY_PHRASE_FRENCH_INPUTS;\n+\n+public abstract class TextAnalyticsClientBuilderTestBase  extends TestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfad62edd08286be627860678e9d1a829a30651b"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 71, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}