{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTgzMDQy", "number": 15818, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzoyMzowNVrOEpePUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzoyMzowNVrOEpePUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTIyNTE1OnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-administration/src/test/java/com/azure/security/keyvault/administration/KeyVaultBackupClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzoyMzowNVrOHbKKAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMzoxMzozNlrOHbdbKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI0MDAwMw==", "bodyText": "assuming this is blocking, should we let the backupStatusPoller do the initial polling?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15818#discussion_r498240003", "createdAt": "2020-10-01T13:23:05Z", "author": {"login": "christothes"}, "path": "sdk/keyvault/azure-security-keyvault-administration/src/test/java/com/azure/security/keyvault/administration/KeyVaultBackupClientTest.java", "diffHunk": "@@ -42,14 +42,44 @@ public void beginBackup(HttpClient httpClient) {\n \n         SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n \n-        PollResponse<KeyVaultBackupOperation> backupResponse = backupPoller.waitForCompletion();\n+        backupPoller.waitForCompletion();\n \n         String backupBlobUri = backupPoller.getFinalResult();\n \n         assertNotNull(backupBlobUri);\n         assertTrue(backupBlobUri.startsWith(blobStorageUrl));\n     }\n \n+    /**\n+     * Tests that a backup operation can be obtained by using its {@code jobId}.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME)\n+    @MethodSource(\"com.azure.security.keyvault.administration.KeyVaultAdministrationClientTestBase#createHttpClients\")\n+    public void getBackupStatus(HttpClient httpClient) {\n+        if (getTestMode() != TestMode.PLAYBACK) {\n+            // Currently there is no Managed HSM environment for pipeline testing.\n+            // TODO: Remove once there is a proper cloud environment available.\n+            return;\n+        }\n+\n+        client = getClientBuilder(httpClient, false).buildClient();\n+\n+        SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n+        String jobId = backupPoller.poll().getValue().getJobId();\n+\n+        SyncPoller<KeyVaultBackupOperation, String> backupStatusPoller = client.getBackupOperation(jobId);\n+\n+        KeyVaultBackupOperation backupOperation = backupPoller.waitForCompletion().getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5168bcc68a1cb038cfa87a6b1d39f8f7d3c22edd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1NTY5MA==", "bodyText": "I don't think it would change much since we need to get the final result from both pollers. Maybe I don't understand all the implications when it comes to the async aspect of things.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15818#discussion_r498555690", "createdAt": "2020-10-01T23:13:36Z", "author": {"login": "vcolin7"}, "path": "sdk/keyvault/azure-security-keyvault-administration/src/test/java/com/azure/security/keyvault/administration/KeyVaultBackupClientTest.java", "diffHunk": "@@ -42,14 +42,44 @@ public void beginBackup(HttpClient httpClient) {\n \n         SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n \n-        PollResponse<KeyVaultBackupOperation> backupResponse = backupPoller.waitForCompletion();\n+        backupPoller.waitForCompletion();\n \n         String backupBlobUri = backupPoller.getFinalResult();\n \n         assertNotNull(backupBlobUri);\n         assertTrue(backupBlobUri.startsWith(blobStorageUrl));\n     }\n \n+    /**\n+     * Tests that a backup operation can be obtained by using its {@code jobId}.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME)\n+    @MethodSource(\"com.azure.security.keyvault.administration.KeyVaultAdministrationClientTestBase#createHttpClients\")\n+    public void getBackupStatus(HttpClient httpClient) {\n+        if (getTestMode() != TestMode.PLAYBACK) {\n+            // Currently there is no Managed HSM environment for pipeline testing.\n+            // TODO: Remove once there is a proper cloud environment available.\n+            return;\n+        }\n+\n+        client = getClientBuilder(httpClient, false).buildClient();\n+\n+        SyncPoller<KeyVaultBackupOperation, String> backupPoller = client.beginBackup(blobStorageUrl, sasToken);\n+        String jobId = backupPoller.poll().getValue().getJobId();\n+\n+        SyncPoller<KeyVaultBackupOperation, String> backupStatusPoller = client.getBackupOperation(jobId);\n+\n+        KeyVaultBackupOperation backupOperation = backupPoller.waitForCompletion().getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI0MDAwMw=="}, "originalCommit": {"oid": "5168bcc68a1cb038cfa87a6b1d39f8f7d3c22edd"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 695, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}