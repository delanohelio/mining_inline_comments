{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MzYwOTI5", "number": 11040, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxODoyNlrOD7z4DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1NzozMVrOD71vqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQyNTA4OnYy", "diffSide": "RIGHT", "path": "sdk/search/test-resources.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxODoyNlrOGUXZnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNzo0NVrOGUZmCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwODA5Mg==", "bodyText": "There is an ongoing effort to change these to NOT preface with \"AZURE_\", and just \"SEARCH_...\". If that is too big a change, though, probably don't worry about it here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424008092", "createdAt": "2020-05-12T20:18:26Z", "author": {"login": "heaths"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,111 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+      \"baseName\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().name]\",\n+          \"metadata\": {\n+              \"description\": \"The base resource name.\"\n+          }\n+      },\n+      \"location\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().location]\",\n+          \"metadata\": {\n+              \"description\": \"The location of the resource. By default, this is the same as the resource group.\"\n+          }\n+      },\n+      \"searchSku\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"basic\",\n+          \"allowedValues\": [\n+              \"free\",\n+              \"basic\",\n+              \"standard\"\n+          ],\n+          \"metadata\": {\n+              \"description\": \"The Search service SKU to create.\"\n+          }\n+      }\n+  },\n+  \"variables\": {\n+      \"searchServiceName\": \"[concat('azs-java-', parameters('baseName'))]\",\n+      \"searchApiVersion\": \"2020-03-13\",\n+      \"storageAccountName\": \"[concat('azsstg', parameters('baseName'))]\",\n+      \"storageContainerName\": \"[concat('azscontainer', parameters('baseName'))]\",\n+      \"storageApiVersion\": \"2019-06-01\"\n+  },\n+  \"resources\": [\n+      {\n+          \"name\": \"[variables('searchServiceName')]\",\n+          \"type\": \"Microsoft.Search/searchServices\",\n+          \"apiVersion\": \"[variables('searchApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"sku\": {\n+              \"name\": \"[parameters('searchSku')]\"\n+          },\n+          \"properties\": {\n+              \"replicaCount\": 1,\n+              \"partitionCount\": 1,\n+              \"hostingMode\": \"default\",\n+              \"publicNetworkAccess\": \"Enabled\",\n+              \"networkRuleSet\": {\n+                  \"ipRules\": []\n+              }\n+          }\n+      },\n+      {\n+          \"name\": \"[variables('storageAccountName')]\",\n+          \"type\": \"Microsoft.Storage/storageAccounts\",\n+          \"apiVersion\": \"[variables('storageApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"properties\": {\n+              \"accessTier\": \"Hot\",\n+              \"supportsHttpsTrafficOnly\": true\n+          },\n+          \"sku\": {\n+              \"name\": \"Standard_LRS\",\n+              \"tier\": \"Standard\"\n+          },\n+          \"kind\": \"StorageV2\",\n+          \"resources\": [\n+            {\n+              \"type\": \"blobServices/containers\",\n+              \"name\": \"[concat('default/', variables('storageContainerName'))]\",\n+              \"apiVersion\": \"[variables('storageApiVersion')]\",\n+              \"properties\": {},\n+              \"dependsOn\": [\n+                \"[variables('storageAccountName')]\"\n+              ]\n+            }\n+          ]\n+      }\n+  ],\n+  \"outputs\": {\n+      \"AZURE_SEARCH_SERVICE_ENDPOINT\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDA0MQ==", "bodyText": "Easy change, will make it in the next commit.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424044041", "createdAt": "2020-05-12T21:27:45Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,111 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+      \"baseName\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().name]\",\n+          \"metadata\": {\n+              \"description\": \"The base resource name.\"\n+          }\n+      },\n+      \"location\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().location]\",\n+          \"metadata\": {\n+              \"description\": \"The location of the resource. By default, this is the same as the resource group.\"\n+          }\n+      },\n+      \"searchSku\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"basic\",\n+          \"allowedValues\": [\n+              \"free\",\n+              \"basic\",\n+              \"standard\"\n+          ],\n+          \"metadata\": {\n+              \"description\": \"The Search service SKU to create.\"\n+          }\n+      }\n+  },\n+  \"variables\": {\n+      \"searchServiceName\": \"[concat('azs-java-', parameters('baseName'))]\",\n+      \"searchApiVersion\": \"2020-03-13\",\n+      \"storageAccountName\": \"[concat('azsstg', parameters('baseName'))]\",\n+      \"storageContainerName\": \"[concat('azscontainer', parameters('baseName'))]\",\n+      \"storageApiVersion\": \"2019-06-01\"\n+  },\n+  \"resources\": [\n+      {\n+          \"name\": \"[variables('searchServiceName')]\",\n+          \"type\": \"Microsoft.Search/searchServices\",\n+          \"apiVersion\": \"[variables('searchApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"sku\": {\n+              \"name\": \"[parameters('searchSku')]\"\n+          },\n+          \"properties\": {\n+              \"replicaCount\": 1,\n+              \"partitionCount\": 1,\n+              \"hostingMode\": \"default\",\n+              \"publicNetworkAccess\": \"Enabled\",\n+              \"networkRuleSet\": {\n+                  \"ipRules\": []\n+              }\n+          }\n+      },\n+      {\n+          \"name\": \"[variables('storageAccountName')]\",\n+          \"type\": \"Microsoft.Storage/storageAccounts\",\n+          \"apiVersion\": \"[variables('storageApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"properties\": {\n+              \"accessTier\": \"Hot\",\n+              \"supportsHttpsTrafficOnly\": true\n+          },\n+          \"sku\": {\n+              \"name\": \"Standard_LRS\",\n+              \"tier\": \"Standard\"\n+          },\n+          \"kind\": \"StorageV2\",\n+          \"resources\": [\n+            {\n+              \"type\": \"blobServices/containers\",\n+              \"name\": \"[concat('default/', variables('storageContainerName'))]\",\n+              \"apiVersion\": \"[variables('storageApiVersion')]\",\n+              \"properties\": {},\n+              \"dependsOn\": [\n+                \"[variables('storageAccountName')]\"\n+              ]\n+            }\n+          ]\n+      }\n+  ],\n+  \"outputs\": {\n+      \"AZURE_SEARCH_SERVICE_ENDPOINT\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwODA5Mg=="}, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQ1NDA4OnYy", "diffSide": "RIGHT", "path": "sdk/search/test-resources.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoyNzowMFrOGUXrTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyODowMVrOGUZmiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMjYyMA==", "bodyText": "Guidance from the Engineering team is not include hardcoded endpoint suffixes but keep them configurable esp for storage since they do not resolve correctly in Azure public clouds.\nMore info - #10380 (comment)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424012620", "createdAt": "2020-05-12T20:27:00Z", "author": {"login": "samvaity"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,111 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+      \"baseName\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().name]\",\n+          \"metadata\": {\n+              \"description\": \"The base resource name.\"\n+          }\n+      },\n+      \"location\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().location]\",\n+          \"metadata\": {\n+              \"description\": \"The location of the resource. By default, this is the same as the resource group.\"\n+          }\n+      },\n+      \"searchSku\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"basic\",\n+          \"allowedValues\": [\n+              \"free\",\n+              \"basic\",\n+              \"standard\"\n+          ],\n+          \"metadata\": {\n+              \"description\": \"The Search service SKU to create.\"\n+          }\n+      }\n+  },\n+  \"variables\": {\n+      \"searchServiceName\": \"[concat('azs-java-', parameters('baseName'))]\",\n+      \"searchApiVersion\": \"2020-03-13\",\n+      \"storageAccountName\": \"[concat('azsstg', parameters('baseName'))]\",\n+      \"storageContainerName\": \"[concat('azscontainer', parameters('baseName'))]\",\n+      \"storageApiVersion\": \"2019-06-01\"\n+  },\n+  \"resources\": [\n+      {\n+          \"name\": \"[variables('searchServiceName')]\",\n+          \"type\": \"Microsoft.Search/searchServices\",\n+          \"apiVersion\": \"[variables('searchApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"sku\": {\n+              \"name\": \"[parameters('searchSku')]\"\n+          },\n+          \"properties\": {\n+              \"replicaCount\": 1,\n+              \"partitionCount\": 1,\n+              \"hostingMode\": \"default\",\n+              \"publicNetworkAccess\": \"Enabled\",\n+              \"networkRuleSet\": {\n+                  \"ipRules\": []\n+              }\n+          }\n+      },\n+      {\n+          \"name\": \"[variables('storageAccountName')]\",\n+          \"type\": \"Microsoft.Storage/storageAccounts\",\n+          \"apiVersion\": \"[variables('storageApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"properties\": {\n+              \"accessTier\": \"Hot\",\n+              \"supportsHttpsTrafficOnly\": true\n+          },\n+          \"sku\": {\n+              \"name\": \"Standard_LRS\",\n+              \"tier\": \"Standard\"\n+          },\n+          \"kind\": \"StorageV2\",\n+          \"resources\": [\n+            {\n+              \"type\": \"blobServices/containers\",\n+              \"name\": \"[concat('default/', variables('storageContainerName'))]\",\n+              \"apiVersion\": \"[variables('storageApiVersion')]\",\n+              \"properties\": {},\n+              \"dependsOn\": [\n+                \"[variables('storageAccountName')]\"\n+              ]\n+            }\n+          ]\n+      }\n+  ],\n+  \"outputs\": {\n+      \"AZURE_SEARCH_SERVICE_ENDPOINT\": {\n+          \"type\": \"string\",\n+          \"value\": \"[concat('https://', variables('searchServiceName'), '.search.windows.net')]\"\n+      },\n+      \"AZURE_SEARCH_SERVICE_API_KEY\": {\n+          \"type\": \"string\",\n+          \"value\": \"[listAdminKeys(variables('searchServiceName'), variables('searchApiVersion')).primaryKey]\"\n+      },\n+      \"AZURE_SEARCH_QUERY_API_KEY\": {\n+          \"type\": \"string\",\n+          \"value\": \"[listQueryKeys(variables('searchServiceName'), variables('searchApiVersion')).value[0].key]\"\n+      },\n+      \"AZURE_SEARCH_STORAGE_NAME\": {\n+          \"type\": \"string\",\n+          \"value\": \"[variables('storageAccountName')]\"\n+      },\n+      \"AZURE_SEARCH_STORAGE_CONNECTION_STRING\": {\n+        \"type\": \"string\",\n+        \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'), variables('storageApiVersion')).keys[0].value, ';EndpointSuffix=core.windows.net')]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDE3MQ==", "bodyText": "Will be added in the next commit.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424044171", "createdAt": "2020-05-12T21:28:01Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,111 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+      \"baseName\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().name]\",\n+          \"metadata\": {\n+              \"description\": \"The base resource name.\"\n+          }\n+      },\n+      \"location\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"[resourceGroup().location]\",\n+          \"metadata\": {\n+              \"description\": \"The location of the resource. By default, this is the same as the resource group.\"\n+          }\n+      },\n+      \"searchSku\": {\n+          \"type\": \"string\",\n+          \"defaultValue\": \"basic\",\n+          \"allowedValues\": [\n+              \"free\",\n+              \"basic\",\n+              \"standard\"\n+          ],\n+          \"metadata\": {\n+              \"description\": \"The Search service SKU to create.\"\n+          }\n+      }\n+  },\n+  \"variables\": {\n+      \"searchServiceName\": \"[concat('azs-java-', parameters('baseName'))]\",\n+      \"searchApiVersion\": \"2020-03-13\",\n+      \"storageAccountName\": \"[concat('azsstg', parameters('baseName'))]\",\n+      \"storageContainerName\": \"[concat('azscontainer', parameters('baseName'))]\",\n+      \"storageApiVersion\": \"2019-06-01\"\n+  },\n+  \"resources\": [\n+      {\n+          \"name\": \"[variables('searchServiceName')]\",\n+          \"type\": \"Microsoft.Search/searchServices\",\n+          \"apiVersion\": \"[variables('searchApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"sku\": {\n+              \"name\": \"[parameters('searchSku')]\"\n+          },\n+          \"properties\": {\n+              \"replicaCount\": 1,\n+              \"partitionCount\": 1,\n+              \"hostingMode\": \"default\",\n+              \"publicNetworkAccess\": \"Enabled\",\n+              \"networkRuleSet\": {\n+                  \"ipRules\": []\n+              }\n+          }\n+      },\n+      {\n+          \"name\": \"[variables('storageAccountName')]\",\n+          \"type\": \"Microsoft.Storage/storageAccounts\",\n+          \"apiVersion\": \"[variables('storageApiVersion')]\",\n+          \"location\": \"[parameters('location')]\",\n+          \"properties\": {\n+              \"accessTier\": \"Hot\",\n+              \"supportsHttpsTrafficOnly\": true\n+          },\n+          \"sku\": {\n+              \"name\": \"Standard_LRS\",\n+              \"tier\": \"Standard\"\n+          },\n+          \"kind\": \"StorageV2\",\n+          \"resources\": [\n+            {\n+              \"type\": \"blobServices/containers\",\n+              \"name\": \"[concat('default/', variables('storageContainerName'))]\",\n+              \"apiVersion\": \"[variables('storageApiVersion')]\",\n+              \"properties\": {},\n+              \"dependsOn\": [\n+                \"[variables('storageAccountName')]\"\n+              ]\n+            }\n+          ]\n+      }\n+  ],\n+  \"outputs\": {\n+      \"AZURE_SEARCH_SERVICE_ENDPOINT\": {\n+          \"type\": \"string\",\n+          \"value\": \"[concat('https://', variables('searchServiceName'), '.search.windows.net')]\"\n+      },\n+      \"AZURE_SEARCH_SERVICE_API_KEY\": {\n+          \"type\": \"string\",\n+          \"value\": \"[listAdminKeys(variables('searchServiceName'), variables('searchApiVersion')).primaryKey]\"\n+      },\n+      \"AZURE_SEARCH_QUERY_API_KEY\": {\n+          \"type\": \"string\",\n+          \"value\": \"[listQueryKeys(variables('searchServiceName'), variables('searchApiVersion')).value[0].key]\"\n+      },\n+      \"AZURE_SEARCH_STORAGE_NAME\": {\n+          \"type\": \"string\",\n+          \"value\": \"[variables('storageAccountName')]\"\n+      },\n+      \"AZURE_SEARCH_STORAGE_CONNECTION_STRING\": {\n+        \"type\": \"string\",\n+        \"value\": \"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'), variables('storageApiVersion')).keys[0].value, ';EndpointSuffix=core.windows.net')]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMjYyMA=="}, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQ1NjU0OnYy", "diffSide": "RIGHT", "path": "sdk/search/tests.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoyNzo0M1rOGUXs1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozMDo0MVrOGUZrLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMzAxMw==", "bodyText": "Can these variables be deleted now that we have the test-resources.json file?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424013013", "createdAt": "2020-05-12T20:27:43Z", "author": {"login": "samvaity"}, "path": "sdk/search/tests.yml", "diffHunk": "@@ -5,6 +5,7 @@ jobs:\n     parameters:\n       ServiceDirectory: search\n       Timeout: 120\n+      MaxParallel: 2\n       EnvVars:\n         AZURE_TEST_MODE: LIVE\n         AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NTM1OA==", "bodyText": "Deleted, Search doesn't use them in testing anyways.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424045358", "createdAt": "2020-05-12T21:30:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/tests.yml", "diffHunk": "@@ -5,6 +5,7 @@ jobs:\n     parameters:\n       ServiceDirectory: search\n       Timeout: 120\n+      MaxParallel: 2\n       EnvVars:\n         AZURE_TEST_MODE: LIVE\n         AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMzAxMw=="}, "originalCommit": {"oid": "21c892dac221dfbcec97c170c11bca344f516e65"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY3NDg0OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/CustomAnalyzerSyncTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozODoxNlrOGUZ4Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1Nzo0MVrOGUabpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODY3OA==", "bodyText": "Is it better to clean up the indexesToCleanup after test or re-initiate before run?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424048678", "createdAt": "2020-05-12T21:38:16Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/CustomAnalyzerSyncTests.java", "diffHunk": "@@ -79,33 +82,32 @@\n import java.util.List;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.stream.Collectors;\n-import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.Test;\n \n+import static com.azure.search.documents.TestHelpers.assertHttpResponseException;\n import static com.azure.search.documents.TestHelpers.assertObjectEquals;\n+import static com.azure.search.documents.TestHelpers.generateRequestOptions;\n+import static com.azure.search.documents.TestHelpers.waitForIndexing;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n-public class CustomAnalyzerSyncTests extends SearchServiceTestBase {\n+public class CustomAnalyzerSyncTests extends SearchTestBase {\n     private static final String NAME_PREFIX = \"azsmnet\";\n+    private static final Collection<CharFilterName> CHAR_FILTER_NAMES = new ArrayList<>(CharFilterName.values());\n \n     private SearchServiceClient searchServiceClient;\n-    private static Collection<CharFilterName> charFilterNames;\n-\n-    static {\n-        getAllCharFilterName();\n-    }\n+    private final List<String> indexesToCleanup = new ArrayList<>();\n \n     @Override\n     protected void beforeTest() {\n         super.beforeTest();\n         searchServiceClient = getSearchServiceClientBuilder().buildClient();\n     }\n \n-    private static void getAllCharFilterName() {\n-        charFilterNames = new ArrayList<>();\n-        for (CharFilterName name : CharFilterName.values()) {\n-            charFilterNames.add(name);\n+    @Override\n+    protected void afterTest() {\n+        super.afterTest();\n+        for (String index : indexesToCleanup) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1Nzc2NA==", "bodyText": "I think it would be better to cleanup after the test, this makes it so the test itself maintains all the logic it uses.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424057764", "createdAt": "2020-05-12T21:57:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/CustomAnalyzerSyncTests.java", "diffHunk": "@@ -79,33 +82,32 @@\n import java.util.List;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.stream.Collectors;\n-import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.Test;\n \n+import static com.azure.search.documents.TestHelpers.assertHttpResponseException;\n import static com.azure.search.documents.TestHelpers.assertObjectEquals;\n+import static com.azure.search.documents.TestHelpers.generateRequestOptions;\n+import static com.azure.search.documents.TestHelpers.waitForIndexing;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n-public class CustomAnalyzerSyncTests extends SearchServiceTestBase {\n+public class CustomAnalyzerSyncTests extends SearchTestBase {\n     private static final String NAME_PREFIX = \"azsmnet\";\n+    private static final Collection<CharFilterName> CHAR_FILTER_NAMES = new ArrayList<>(CharFilterName.values());\n \n     private SearchServiceClient searchServiceClient;\n-    private static Collection<CharFilterName> charFilterNames;\n-\n-    static {\n-        getAllCharFilterName();\n-    }\n+    private final List<String> indexesToCleanup = new ArrayList<>();\n \n     @Override\n     protected void beforeTest() {\n         super.beforeTest();\n         searchServiceClient = getSearchServiceClientBuilder().buildClient();\n     }\n \n-    private static void getAllCharFilterName() {\n-        charFilterNames = new ArrayList<>();\n-        for (CharFilterName name : CharFilterName.values()) {\n-            charFilterNames.add(name);\n+    @Override\n+    protected void afterTest() {\n+        super.afterTest();\n+        for (String index : indexesToCleanup) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0ODY3OA=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY3NjkyOnYy", "diffSide": "RIGHT", "path": "sdk/search/test-resources.json", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTozOTowMVrOGUZ5hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTowNjo0M1rOGUhkoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTAyOA==", "bodyText": "storage end point \ud83e\udd14", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424049028", "createdAt": "2020-05-12T21:39:01Z", "author": {"login": "samvaity"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,121 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+    \"baseName\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"[resourceGroup().name]\",\n+      \"metadata\": {\n+        \"description\": \"The base resource name.\"\n+      }\n+    },\n+    \"searchEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",\n+      \"metadata\": {\n+        \"description\": \"The Search service endpoint suffix.\"\n+      }\n+    },\n+    \"storageEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1Mzg1OA==", "bodyText": "This still doesn't resolve the issue of making the storage endpoint value itself to changed/configurable when the tests are running in any other Azure cloud. But for now, we can add a separate issue to track this.\ncc: @danieljurek", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424053858", "createdAt": "2020-05-12T21:49:07Z", "author": {"login": "samvaity"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,121 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+    \"baseName\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"[resourceGroup().name]\",\n+      \"metadata\": {\n+        \"description\": \"The base resource name.\"\n+      }\n+    },\n+    \"searchEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",\n+      \"metadata\": {\n+        \"description\": \"The Search service endpoint suffix.\"\n+      }\n+    },\n+    \"storageEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTAyOA=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NTIyNg==", "bodyText": "This is what I get for copy and pasting.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424055226", "createdAt": "2020-05-12T21:52:09Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,121 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+    \"baseName\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"[resourceGroup().name]\",\n+      \"metadata\": {\n+        \"description\": \"The base resource name.\"\n+      }\n+    },\n+    \"searchEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",\n+      \"metadata\": {\n+        \"description\": \"The Search service endpoint suffix.\"\n+      }\n+    },\n+    \"storageEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTAyOA=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2NzcxMQ==", "bodyText": "Let's file an issue for this as this affects more than just Search.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424067711", "createdAt": "2020-05-12T22:22:14Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,121 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+    \"baseName\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"[resourceGroup().name]\",\n+      \"metadata\": {\n+        \"description\": \"The base resource name.\"\n+      }\n+    },\n+    \"searchEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",\n+      \"metadata\": {\n+        \"description\": \"The Search service endpoint suffix.\"\n+      }\n+    },\n+    \"storageEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTAyOA=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NDc1Mw==", "bodyText": "This looks OK to me. A default value here is fine and I can pass overrides in at the matrix-level when we're testing against other clouds.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424174753", "createdAt": "2020-05-13T05:06:43Z", "author": {"login": "danieljurek"}, "path": "sdk/search/test-resources.json", "diffHunk": "@@ -1,8 +1,121 @@\n {\n-    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n-    \"contentVersion\": \"1.0.0.0\",\n-    \"parameters\": {},\n-    \"variables\": {},\n-    \"resources\": [],\n-    \"outputs\": {}\n+  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n+  \"contentVersion\": \"1.0.0.0\",\n+  \"parameters\": {\n+    \"baseName\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"[resourceGroup().name]\",\n+      \"metadata\": {\n+        \"description\": \"The base resource name.\"\n+      }\n+    },\n+    \"searchEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",\n+      \"metadata\": {\n+        \"description\": \"The Search service endpoint suffix.\"\n+      }\n+    },\n+    \"storageEndpointSuffix\": {\n+      \"type\": \"string\",\n+      \"defaultValue\": \"search.windows.net\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTAyOA=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY4MDM1OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/DataSourceSyncTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0MDowNVrOGUZ7kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1OTozNlrOGUae8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTU1Mg==", "bodyText": "Same here.\nI have concern which the list has more sources than expected and throw no resource error.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424049552", "createdAt": "2020-05-12T21:40:05Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/DataSourceSyncTests.java", "diffHunk": "@@ -6,65 +6,57 @@\n import com.azure.core.exception.HttpResponseException;\n import com.azure.core.http.rest.Response;\n import com.azure.core.util.Context;\n+import com.azure.core.util.CoreUtils;\n import com.azure.search.documents.models.DataContainer;\n import com.azure.search.documents.models.DataDeletionDetectionPolicy;\n import com.azure.search.documents.models.DataSource;\n import com.azure.search.documents.models.DataSourceCredentials;\n import com.azure.search.documents.models.DataSourceType;\n import com.azure.search.documents.models.HighWaterMarkChangeDetectionPolicy;\n import com.azure.search.documents.models.RequestOptions;\n+import com.azure.search.documents.models.SearchErrorException;\n import com.azure.search.documents.models.SoftDeleteColumnDeletionDetectionPolicy;\n import com.azure.search.documents.models.SqlIntegratedChangeTrackingPolicy;\n-import com.azure.search.documents.test.AccessConditionTests;\n-import com.azure.search.documents.test.AccessOptions;\n-import io.netty.handler.codec.http.HttpResponseStatus;\n import org.junit.jupiter.api.Test;\n \n import java.net.HttpURLConnection;\n+import java.util.ArrayList;\n import java.util.Iterator;\n-import java.util.function.BiConsumer;\n-import java.util.function.BiFunction;\n-import java.util.function.Function;\n-import java.util.function.Supplier;\n+import java.util.List;\n \n+import static com.azure.search.documents.TestHelpers.BLOB_DATASOURCE_TEST_NAME;\n+import static com.azure.search.documents.TestHelpers.assertHttpResponseException;\n+import static com.azure.search.documents.TestHelpers.generateRequestOptions;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.fail;\n \n-public class DataSourceSyncTests extends SearchServiceTestBase {\n+public class DataSourceSyncTests extends SearchTestBase {\n     private static final String FAKE_DESCRIPTION = \"Some data source\";\n     private static final String FAKE_STORAGE_CONNECTION_STRING =\n         \"DefaultEndpointsProtocol=https;AccountName=NotaRealAccount;AccountKey=fake;\";\n     private static final String FAKE_COSMOS_CONNECTION_STRING =\n         \"AccountEndpoint=https://NotaRealAccount.documents.azure.com;AccountKey=fake;Database=someFakeDatabase\";\n \n+    private final List<String> dataSourcesToDelete = new ArrayList<>();\n     private SearchServiceClient client;\n \n-    // commonly used lambda definitions\n-    private BiFunction<DataSource, AccessOptions, DataSource> createOrUpdateDataSourceFunc =\n-        (DataSource ds, AccessOptions ac) ->\n-            createOrUpdateDataSource(ds, ac.getOnlyIfUnchanged(), ac.getRequestOptions());\n-\n-    private Supplier<DataSource> newDataSourceFunc = () -> createTestBlobDataSource(null);\n-\n-    private Function<DataSource, DataSource> mutateDataSourceFunc = (DataSource ds) -> \n-        ds.setDescription(\"somethingnew\");\n-\n-    private BiConsumer<DataSource, AccessOptions> deleteDataSourceFunc = (DataSource dataSource, AccessOptions ac) ->\n-        client.deleteDataSourceWithResponse(dataSource,\n-            ac.getOnlyIfUnchanged(), ac.getRequestOptions(), Context.NONE);\n-\n     @Override\n     protected void beforeTest() {\n         super.beforeTest();\n         client = getSearchServiceClientBuilder().buildClient();\n     }\n \n-    private DataSource createOrUpdateDataSource(DataSource datasource, Boolean onlyIfUnchanged,\n-        RequestOptions requestOptions) {\n-        return client.createOrUpdateDataSourceWithResponse(datasource, onlyIfUnchanged, requestOptions, Context.NONE)\n-            .getValue();\n+    @Override\n+    protected void afterTest() {\n+        super.afterTest();\n+        for (String dataSource : dataSourcesToDelete) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODYwOQ==", "bodyText": "The concern is that this list would contain more data sources than still existing after the test? Luckily it appears 404 is a valid response type, so it won't throw an exception.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424058609", "createdAt": "2020-05-12T21:59:36Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/DataSourceSyncTests.java", "diffHunk": "@@ -6,65 +6,57 @@\n import com.azure.core.exception.HttpResponseException;\n import com.azure.core.http.rest.Response;\n import com.azure.core.util.Context;\n+import com.azure.core.util.CoreUtils;\n import com.azure.search.documents.models.DataContainer;\n import com.azure.search.documents.models.DataDeletionDetectionPolicy;\n import com.azure.search.documents.models.DataSource;\n import com.azure.search.documents.models.DataSourceCredentials;\n import com.azure.search.documents.models.DataSourceType;\n import com.azure.search.documents.models.HighWaterMarkChangeDetectionPolicy;\n import com.azure.search.documents.models.RequestOptions;\n+import com.azure.search.documents.models.SearchErrorException;\n import com.azure.search.documents.models.SoftDeleteColumnDeletionDetectionPolicy;\n import com.azure.search.documents.models.SqlIntegratedChangeTrackingPolicy;\n-import com.azure.search.documents.test.AccessConditionTests;\n-import com.azure.search.documents.test.AccessOptions;\n-import io.netty.handler.codec.http.HttpResponseStatus;\n import org.junit.jupiter.api.Test;\n \n import java.net.HttpURLConnection;\n+import java.util.ArrayList;\n import java.util.Iterator;\n-import java.util.function.BiConsumer;\n-import java.util.function.BiFunction;\n-import java.util.function.Function;\n-import java.util.function.Supplier;\n+import java.util.List;\n \n+import static com.azure.search.documents.TestHelpers.BLOB_DATASOURCE_TEST_NAME;\n+import static com.azure.search.documents.TestHelpers.assertHttpResponseException;\n+import static com.azure.search.documents.TestHelpers.generateRequestOptions;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.fail;\n \n-public class DataSourceSyncTests extends SearchServiceTestBase {\n+public class DataSourceSyncTests extends SearchTestBase {\n     private static final String FAKE_DESCRIPTION = \"Some data source\";\n     private static final String FAKE_STORAGE_CONNECTION_STRING =\n         \"DefaultEndpointsProtocol=https;AccountName=NotaRealAccount;AccountKey=fake;\";\n     private static final String FAKE_COSMOS_CONNECTION_STRING =\n         \"AccountEndpoint=https://NotaRealAccount.documents.azure.com;AccountKey=fake;Database=someFakeDatabase\";\n \n+    private final List<String> dataSourcesToDelete = new ArrayList<>();\n     private SearchServiceClient client;\n \n-    // commonly used lambda definitions\n-    private BiFunction<DataSource, AccessOptions, DataSource> createOrUpdateDataSourceFunc =\n-        (DataSource ds, AccessOptions ac) ->\n-            createOrUpdateDataSource(ds, ac.getOnlyIfUnchanged(), ac.getRequestOptions());\n-\n-    private Supplier<DataSource> newDataSourceFunc = () -> createTestBlobDataSource(null);\n-\n-    private Function<DataSource, DataSource> mutateDataSourceFunc = (DataSource ds) -> \n-        ds.setDescription(\"somethingnew\");\n-\n-    private BiConsumer<DataSource, AccessOptions> deleteDataSourceFunc = (DataSource dataSource, AccessOptions ac) ->\n-        client.deleteDataSourceWithResponse(dataSource,\n-            ac.getOnlyIfUnchanged(), ac.getRequestOptions(), Context.NONE);\n-\n     @Override\n     protected void beforeTest() {\n         super.beforeTest();\n         client = getSearchServiceClientBuilder().buildClient();\n     }\n \n-    private DataSource createOrUpdateDataSource(DataSource datasource, Boolean onlyIfUnchanged,\n-        RequestOptions requestOptions) {\n-        return client.createOrUpdateDataSourceWithResponse(datasource, onlyIfUnchanged, requestOptions, Context.NONE)\n-            .getValue();\n+    @Override\n+    protected void afterTest() {\n+        super.afterTest();\n+        for (String dataSource : dataSourcesToDelete) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTU1Mg=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDY4MTk5OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/DataSourceSyncTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0MDozOFrOGUZ8lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0MDozOFrOGUZ8lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0OTgxMw==", "bodyText": "Indentation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424049813", "createdAt": "2020-05-12T21:40:38Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/azure-search-documents/src/test/java/com/azure/search/documents/DataSourceSyncTests.java", "diffHunk": "@@ -112,7 +106,8 @@ public void deleteDataSourceIsIdempotent() {\n         DataSource dataSource = createTestBlobDataSource(null);\n \n         // Try to delete before the data source exists, expect a NOT FOUND return status code\n-        Response<Void> result = client.deleteDataSourceWithResponse(dataSource, false, generateRequestOptions(), Context.NONE);\n+        Response<Void> result = client.deleteDataSourceWithResponse(dataSource, false, generateRequestOptions(),\n+            Context.NONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDczMTI5OnYy", "diffSide": "RIGHT", "path": "sdk/search/tests.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1NzozMVrOGUabUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo1ODoyM1rOGUac-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NzY4MQ==", "bodyText": "What's the reason of having maximum of 2?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424057681", "createdAt": "2020-05-12T21:57:31Z", "author": {"login": "sima-zhu"}, "path": "sdk/search/tests.yml", "diffHunk": "@@ -5,12 +5,9 @@ jobs:\n     parameters:\n       ServiceDirectory: search\n       Timeout: 120\n+      MaxParallel: 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODEwNQ==", "bodyText": "Still have limitations on the total number of service we can be using concurrently.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11040#discussion_r424058105", "createdAt": "2020-05-12T21:58:23Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/tests.yml", "diffHunk": "@@ -5,12 +5,9 @@ jobs:\n     parameters:\n       ServiceDirectory: search\n       Timeout: 120\n+      MaxParallel: 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NzY4MQ=="}, "originalCommit": {"oid": "db1b82af137cf126c17bb5f3c767c544cceb112e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4309, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}