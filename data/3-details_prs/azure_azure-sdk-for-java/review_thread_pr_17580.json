{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODYzMjMz", "number": 17580, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTozODo1N1rOE42CKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo0MDoyMVrOE42D2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDQxMDAyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/implementation/util/ModelHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTozODo1N1rOHzAZuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo0MDo0MVrOHzAcvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NjAwOA==", "bodyText": "Is ignoring safe? Or is this just so that we don't break people in the future?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17580#discussion_r523246008", "createdAt": "2020-11-13T21:38:57Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/implementation/util/ModelHelper.java", "diffHunk": "@@ -73,10 +74,35 @@ public static ShareProperties populateShareProperties(SharePropertiesInternal sh\n         properties.setLeaseStatus(sharePropertiesInternal.getLeaseStatus());\n         properties.setLeaseState(sharePropertiesInternal.getLeaseState());\n         properties.setLeaseDuration(sharePropertiesInternal.getLeaseDuration());\n-        properties.setEnabledProtocols(ShareEnabledProtocols.parse(sharePropertiesInternal.getEnabledProtocols()));\n+        properties.setProtocols(parseShareProtocols(sharePropertiesInternal.getEnabledProtocols()));\n         properties.setRootSquash(sharePropertiesInternal.getRootSquash());\n         properties.setMetadata(sharePropertiesInternal.getMetadata());\n \n         return properties;\n     }\n+\n+    /**\n+     * Parses a {@code String} into a {@code ShareProtocols}. Unrecognized protocols will be ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0d42d0efac97213ecab3e3c0db3601e2e51096"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0Njc4MQ==", "bodyText": "This is following .NET's implementation. I believe it is future proofing for when the service starts sending other things, and this is only meant to be used internally, so I think it's ok.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17580#discussion_r523246781", "createdAt": "2020-11-13T21:40:41Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/implementation/util/ModelHelper.java", "diffHunk": "@@ -73,10 +74,35 @@ public static ShareProperties populateShareProperties(SharePropertiesInternal sh\n         properties.setLeaseStatus(sharePropertiesInternal.getLeaseStatus());\n         properties.setLeaseState(sharePropertiesInternal.getLeaseState());\n         properties.setLeaseDuration(sharePropertiesInternal.getLeaseDuration());\n-        properties.setEnabledProtocols(ShareEnabledProtocols.parse(sharePropertiesInternal.getEnabledProtocols()));\n+        properties.setProtocols(parseShareProtocols(sharePropertiesInternal.getEnabledProtocols()));\n         properties.setRootSquash(sharePropertiesInternal.getRootSquash());\n         properties.setMetadata(sharePropertiesInternal.getMetadata());\n \n         return properties;\n     }\n+\n+    /**\n+     * Parses a {@code String} into a {@code ShareProtocols}. Unrecognized protocols will be ignored.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NjAwOA=="}, "originalCommit": {"oid": "5d0d42d0efac97213ecab3e3c0db3601e2e51096"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDQxNDM0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/models/ShareProtocols.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo0MDoyMVrOHzAcPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo0MTo1NlrOHzAeog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NjY1NA==", "bodyText": "Should this be smbEnabled? Just to follow true Fluent?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17580#discussion_r523246654", "createdAt": "2020-11-13T21:40:21Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/models/ShareProtocols.java", "diffHunk": "@@ -9,8 +9,8 @@\n /**\n  * Represents protocols that can be set on a share.\n  */\n-public class ShareEnabledProtocols {\n-    private final ClientLogger logger = new ClientLogger(ShareEnabledProtocols.class);\n+public class ShareProtocols {\n+    private final ClientLogger logger = new ClientLogger(ShareProtocols.class);\n \n     private boolean smb;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d0d42d0efac97213ecab3e3c0db3601e2e51096"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NzI2Ng==", "bodyText": "Fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17580#discussion_r523247266", "createdAt": "2020-11-13T21:41:56Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/models/ShareProtocols.java", "diffHunk": "@@ -9,8 +9,8 @@\n /**\n  * Represents protocols that can be set on a share.\n  */\n-public class ShareEnabledProtocols {\n-    private final ClientLogger logger = new ClientLogger(ShareEnabledProtocols.class);\n+public class ShareProtocols {\n+    private final ClientLogger logger = new ClientLogger(ShareProtocols.class);\n \n     private boolean smb;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0NjY1NA=="}, "originalCommit": {"oid": "5d0d42d0efac97213ecab3e3c0db3601e2e51096"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2849, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}