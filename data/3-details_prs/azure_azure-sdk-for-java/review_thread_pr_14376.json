{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTQ5MTI5", "number": 14376, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo0NzowMFrOEbmuMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzowMDo0N1rOEbqVnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MzgxNDI2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo0NzowMFrOHFoYRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1ODo0NFrOHFpC-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2NjUwMg==", "bodyText": "how about setting on variable declaration itself", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475666502", "createdAt": "2020-08-24T14:47:00Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "diffHunk": "@@ -28,6 +28,7 @@\n      * Instantiates a new query request options.\n      */\n     public CosmosQueryRequestOptions() {\n+        this.queryMetricsEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NzQzMw==", "bodyText": "Looks like the most common pattern has been to initialize in the ctor if a ctor is present - CosmosDatabaseProperties, CosmosTriggerProperties etc. - so followed that approach for consistency.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475677433", "createdAt": "2020-08-24T14:58:44Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "diffHunk": "@@ -28,6 +28,7 @@\n      * Instantiates a new query request options.\n      */\n     public CosmosQueryRequestOptions() {\n+        this.queryMetricsEnabled = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2NjUwMg=="}, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MzgzMDA5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1MDozOVrOHFoiKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDo1NjoyMFrOHFo4Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2OTAzMw==", "bodyText": "why Boolean vs boolean, here and other place ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475669033", "createdAt": "2020-08-24T14:50:39Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -245,9 +255,11 @@ public void queryPlanDiagnostics() {\n     }\n \n     @Test(groups = {\"simple\"}, dataProvider = \"query\", timeOut = TIMEOUT)\n-    public void queryMetrics(String query) {\n+    public void queryMetrics(String query, Boolean qmEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY3NDY2Mg==", "bodyText": "To be able to test default (not explicity set)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475674662", "createdAt": "2020-08-24T14:56:20Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -245,9 +255,11 @@ public void queryPlanDiagnostics() {\n     }\n \n     @Test(groups = {\"simple\"}, dataProvider = \"query\", timeOut = TIMEOUT)\n-    public void queryMetrics(String query) {\n+    public void queryMetrics(String query, Boolean qmEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2OTAzMw=="}, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDQwNjcxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzowMDo0N1rOHFuK2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODoyNTo0MlrOHFxN8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2MTM3MA==", "bodyText": "Looks like we didn't update the java doc at first place that the default value is false.\n@FabianMeiswinkel  - now would be a good time to update the java docs to mention that default value is true", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475761370", "createdAt": "2020-08-24T17:00:47Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "diffHunk": "@@ -28,6 +28,7 @@\n      * Instantiates a new query request options.\n      */\n     public CosmosQueryRequestOptions() {\n+        this.queryMetricsEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxMTMxNA==", "bodyText": "Fixed in next iteration.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14376#discussion_r475811314", "createdAt": "2020-08-24T18:25:42Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosQueryRequestOptions.java", "diffHunk": "@@ -28,6 +28,7 @@\n      * Instantiates a new query request options.\n      */\n     public CosmosQueryRequestOptions() {\n+        this.queryMetricsEnabled = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2MTM3MA=="}, "originalCommit": {"oid": "d63712bcf919554bea9134e91c837a20bd338470"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1492, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}