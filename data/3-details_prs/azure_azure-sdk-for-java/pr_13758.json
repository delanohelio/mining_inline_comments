{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDI4MDA5", "number": 13758, "title": "Change ObjectSerializer.serialize to Void", "bodyText": "This PR changes the ObjectSerializer.serialize method to be void instead of returning the OutputStream parameter that was passed to be written into.", "createdAt": "2020-08-03T22:29:36Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13758", "merged": true, "mergeCommit": {"oid": "1a61d52dc44b6b83cb4b071b1049d05a7af939ca"}, "closed": true, "closedAt": "2020-08-04T18:21:52Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7ZwDwAH2gAyNDYyNDI4MDA5Ojg0NTRhZDU1NjcxZTk2NTcxYjJkOGJlYWU3ZWE4ZGM1M2YxYjg1ZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7p5YkAFqTQ2MTAxMzUzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8454ad55671e96571b2d8beae7ea8dc53f1b85d9", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8454ad55671e96571b2d8beae7ea8dc53f1b85d9", "committedDate": "2020-08-03T22:27:44Z", "message": "ObjectSerializer serialize is now void instead of returning the passed OutputStream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzkxODM5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13758#pullrequestreview-460391839", "createdAt": "2020-08-03T22:59:56Z", "commit": {"oid": "8454ad55671e96571b2d8beae7ea8dc53f1b85d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo1OTo1NlrOG7LWdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo1OTo1NlrOG7LWdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNTE0MA==", "bodyText": "I was wondering if the comment in arch board was applicable for async and sync or just sync? Since the point you make about async is still valid when chaining async operators to have the reference to OutputStream.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13758#discussion_r464705140", "createdAt": "2020-08-03T22:59:56Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-experimental/src/main/java/com/azure/core/experimental/serializer/JsonSerializer.java", "diffHunk": "@@ -38,20 +38,17 @@\n      *\n      * @param stream {@link OutputStream} where the JSON tree will be written.\n      * @param jsonNode The JSON tree.\n-     * @param <S> Type of the output stream.\n-     * @return The stream where the JSON tree was written.\n      */\n-    <S extends OutputStream> S serializeTree(S stream, JsonNode jsonNode);\n+    void serializeTree(OutputStream stream, JsonNode jsonNode);\n \n     /**\n      * Writes a JSON tree into a stream.\n      *\n      * @param stream {@link OutputStream} where the JSON tree will be written.\n      * @param jsonNode The JSON tree.\n-     * @param <S> Type of the output stream.\n-     * @return The stream where the JSON tree was written.\n+     * @return Reactive stream that will indicate operation completion.\n      */\n-    <S extends OutputStream> Mono<S> serializeTreeAsync(S stream, JsonNode jsonNode);\n+    Mono<Void> serializeTreeAsync(OutputStream stream, JsonNode jsonNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8454ad55671e96571b2d8beae7ea8dc53f1b85d9"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDEzNTM5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13758#pullrequestreview-461013539", "createdAt": "2020-08-04T17:16:24Z", "commit": {"oid": "8454ad55671e96571b2d8beae7ea8dc53f1b85d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 958, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}