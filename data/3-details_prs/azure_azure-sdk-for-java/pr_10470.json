{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjI4NzAx", "number": 10470, "title": "Add InputStream to Flux<ByteBuffer> Utility Method", "bodyText": "Fixes #9716\nThis PR adds an InputStream to Flux<ByteBuffer> utility method into FluxUtil. There are two overloads where one defaults a chunk size and the other takes it as a parameter. The chunkSize will be used to fill the ByteBuffers with a certain number of bytes, this is useful in scenarios such as Storage where such a function may be used to parallelize block uploads of a certain size. This utility function DOES NOT guarantee replayability of the stream given that InputStreams aren't guaranteed to be replayable either. This could be changed by caching the buffer stream but this runs the risk of exhausting memory if a large file is being converted.", "createdAt": "2020-04-23T22:17:44Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470", "merged": true, "mergeCommit": {"oid": "e5dba410ff339623f31307168913a110299bbb50"}, "closed": true, "closedAt": "2020-04-24T21:20:10Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcakVfRAH2gAyNDA4MjI4NzAxOjMyZWQ0OTU5YTJiODM5ZTlmNWQ5NGU0OWQ0ZTcwNDVmYjAwMjFiOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABca1zEqAH2gAyNDA4MjI4NzAxOmQ2MTM5ZTk2YWQxYTJiMTc1ODhkNGUyMzQ1NzBlZGRmNjQwMjFlM2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/32ed4959a2b839e9f5d94e49d4e7045fb0021b93", "committedDate": "2020-04-23T22:08:10Z", "message": "Add toFluxByteBuffer to FluxUtil that converts an InputStream to a Flux<ByteBuffer>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTUyMTY1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470#pullrequestreview-399552165", "createdAt": "2020-04-23T23:47:41Z", "commit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0Nzo0MlrOGLAnmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo0Nzo0MlrOGLAnmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5NzY1OA==", "bodyText": "Should we document that the caller is responsible for closing the provided stream? (if the user provides the produced Flux to our async API then they should dispose it once async API completes)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470#discussion_r414197658", "createdAt": "2020-04-23T23:47:42Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/FluxUtil.java", "diffHunk": "@@ -83,6 +84,74 @@ private static void accept(ByteArrayOutputStream byteOutputStream, ByteBuffer by\n         return byteArray;\n     }\n \n+    /**\n+     * Converts an {@link InputStream} into a {@link Flux} of {@link ByteBuffer} using a chunk size of 4096.\n+     * <p>\n+     * Given that {@link InputStream} is not guaranteed to be replayable the returned {@link Flux} should be considered\n+     * non-replayable as well.\n+     * <p>\n+     * If the passed {@link InputStream} is {@code null} {@link Flux#empty()} will be returned.\n+     *\n+     * @param inputStream The {@link InputStream} to convert into a {@link Flux}.\n+     * @return A {@link Flux} of {@link ByteBuffer ByteBuffers} that contains the contents of the stream.\n+     */\n+    public static Flux<ByteBuffer> toFluxByteBuffer(InputStream inputStream) {\n+        return toFluxByteBuffer(inputStream, 4096);\n+    }\n+\n+    /**\n+     * Converts an {@link InputStream} into a {@link Flux} of {@link ByteBuffer}.\n+     * <p>\n+     * Given that {@link InputStream} is not guaranteed to be replayable the returned {@link Flux} should be considered\n+     * non-replayable as well.\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTYyMjI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470#pullrequestreview-399562229", "createdAt": "2020-04-24T00:18:36Z", "commit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDoxODozNlrOGLBSfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDoxODozNlrOGLBSfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwODYzOA==", "bodyText": "A method returning a reactive publisher shouldn't throw exceptions. It makes chaining of reactive operators difficult as the caller will have to handle errors in 2 ways. Return Flux.error() instead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470#discussion_r414208638", "createdAt": "2020-04-24T00:18:36Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/FluxUtil.java", "diffHunk": "@@ -83,6 +84,74 @@ private static void accept(ByteArrayOutputStream byteOutputStream, ByteBuffer by\n         return byteArray;\n     }\n \n+    /**\n+     * Converts an {@link InputStream} into a {@link Flux} of {@link ByteBuffer} using a chunk size of 4096.\n+     * <p>\n+     * Given that {@link InputStream} is not guaranteed to be replayable the returned {@link Flux} should be considered\n+     * non-replayable as well.\n+     * <p>\n+     * If the passed {@link InputStream} is {@code null} {@link Flux#empty()} will be returned.\n+     *\n+     * @param inputStream The {@link InputStream} to convert into a {@link Flux}.\n+     * @return A {@link Flux} of {@link ByteBuffer ByteBuffers} that contains the contents of the stream.\n+     */\n+    public static Flux<ByteBuffer> toFluxByteBuffer(InputStream inputStream) {\n+        return toFluxByteBuffer(inputStream, 4096);\n+    }\n+\n+    /**\n+     * Converts an {@link InputStream} into a {@link Flux} of {@link ByteBuffer}.\n+     * <p>\n+     * Given that {@link InputStream} is not guaranteed to be replayable the returned {@link Flux} should be considered\n+     * non-replayable as well.\n+     * <p>\n+     * If the passed {@link InputStream} is {@code null} {@link Flux#empty()} will be returned.\n+     *\n+     * @param inputStream The {@link InputStream} to convert into a {@link Flux}.\n+     * @param chunkSize The requested size for each {@link ByteBuffer}.\n+     * @return A {@link Flux} of {@link ByteBuffer ByteBuffers} that contains the contents of the stream.\n+     * @throws IllegalArgumentException If {@code chunkSize} is less than or equal to {@code 0}.\n+     */\n+    public static Flux<ByteBuffer> toFluxByteBuffer(InputStream inputStream, int chunkSize) {\n+        if (chunkSize <= 0) {\n+            throw new IllegalArgumentException(\"'chunkSize' must be greater than 0.\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTY5NDU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10470#pullrequestreview-399569455", "createdAt": "2020-04-24T00:42:42Z", "commit": {"oid": "32ed4959a2b839e9f5d94e49d4e7045fb0021b93"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90436f4ea141af32d4785bc91c33c12df021fbe9", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/90436f4ea141af32d4785bc91c33c12df021fbe9", "committedDate": "2020-04-24T18:03:26Z", "message": "Merge branch 'master' into AzCore_AddInputStreamToFluxUtilityMethod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6fb2ebbf8bb15e8f829d2df82fc33cc60589567", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6fb2ebbf8bb15e8f829d2df82fc33cc60589567", "committedDate": "2020-04-24T18:08:45Z", "message": "Fix linting issue and changed exception throw to return Flux.error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6139e96ad1a2b17588d4e234570eddf64021e3b", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6139e96ad1a2b17588d4e234570eddf64021e3b", "committedDate": "2020-04-24T18:28:52Z", "message": "Infinite for loop -> infite while loop"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4821, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}