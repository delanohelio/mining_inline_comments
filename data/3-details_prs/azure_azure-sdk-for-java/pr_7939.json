{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTYxOTcw", "number": 7939, "title": "Return Atomic Type for simple APIs", "bodyText": "Return atomic type for all simple APIs\n Rename SentimentClass to SentimentLabel.\n Add a new model for scores called SentimentScorePerLabel\n Update TextSentiment to SentenceSentiment and  DocumentSentiment models to use SentimentScorePerLabel for scores.\n Update Readme and samples.", "createdAt": "2020-02-04T17:30:09Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939", "merged": true, "mergeCommit": {"oid": "fa8596645e1bdf4d5a798bd62b5e456a538706ce"}, "closed": true, "closedAt": "2020-02-07T20:54:52Z", "author": {"login": "mssfang"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBDFVggH2gAyMzcwOTYxOTcwOjZiOTY4NjRkNTQ1Njg5MmY4N2Y1OTgxZmY4MzliNjIzYzBjNjJkMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCFUmAgH2gAyMzcwOTYxOTcwOmFhZTVlYzUwZWQ5MTkzZmEwOTVlOWUxNjdhNGRhYjk3MGFhOTk0ZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b96864d5456892f87f5981ff839b623c0c62d22", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6b96864d5456892f87f5981ff839b623c0c62d22", "committedDate": "2020-02-04T15:15:33Z", "message": "transfer to office workstation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad2d04c3bc33227ae80502399a7634b8b52dfa1", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ad2d04c3bc33227ae80502399a7634b8b52dfa1", "committedDate": "2020-02-04T23:41:21Z", "message": "before modify sentiment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af681a1976c590e20cf800b46d5a340ee5f210bc", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/af681a1976c590e20cf800b46d5a340ee5f210bc", "committedDate": "2020-02-05T01:21:04Z", "message": "resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6059a9e2276f5dbb4a7708443e4a17bbae90c41", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c6059a9e2276f5dbb4a7708443e4a17bbae90c41", "committedDate": "2020-02-05T01:48:17Z", "message": "still have a few tests failed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79ee408f7a89f8c2c45b6004b948dfa0e26573b7", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/79ee408f7a89f8c2c45b6004b948dfa0e26573b7", "committedDate": "2020-02-05T06:31:17Z", "message": "sentiment remodel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0a5531df9b1ad193a0497b72b2ad94c244722ce", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0a5531df9b1ad193a0497b72b2ad94c244722ce", "committedDate": "2020-02-05T22:15:06Z", "message": "test data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c50277884093a9dd00fea8dcba41726e773ef4a", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c50277884093a9dd00fea8dcba41726e773ef4a", "committedDate": "2020-02-06T01:28:10Z", "message": "java doc strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62a195307b7340c3a8fd0aa369976676fa237c0e", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/62a195307b7340c3a8fd0aa369976676fa237c0e", "committedDate": "2020-02-06T13:17:27Z", "message": "doc strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "committedDate": "2020-02-06T13:42:33Z", "message": "nit fix and checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjU3MjA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354657207", "createdAt": "2020-02-06T18:00:45Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowMDo0NlrOFmkzcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowMDo0NlrOFmkzcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MzIwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n          \n          \n            \n            System.out.printf(\"Detected language name: %s, ISO 6391 Name: %s, Score: %s.%n\",", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r375993203", "createdAt": "2020-02-06T18:00:46Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/README.md", "diffHunk": "@@ -215,80 +215,59 @@ TextAnalyticsAsyncClient textAnalyticsClient = new TextAnalyticsClientBuilder()\n ```\n \n ### Detect language\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L82 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L78 -->\n ```java\n String inputText = \"Bonjour tout le monde\";\n-\n-for (DetectedLanguage detectedLanguage : textAnalyticsClient.detectLanguage(inputText).getDetectedLanguages()) {\n-    System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n-        detectedLanguage.getName(),\n-        detectedLanguage.getIso6391Name(),\n-        detectedLanguage.getScore());\n-}\n+DetectedLanguage detectedLanguage = textAnalyticsClient.detectLanguage(inputText);\n+System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njc3NDQ0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354677444", "createdAt": "2020-02-06T18:33:32Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozMzozMlrOFmlxBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozMzozMlrOFmlxBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwODk2NQ==", "bodyText": "this is interesting, because the example only has one sentence so the document and the sentence have the same results.\nwhat do you think about printing the DocumentSentiment.Sentiment instead?\nor add another sentence to the document and then print both the document sentiment and the sentences sentiments to users can see the differente", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376008965", "createdAt": "2020-02-06T18:33:32Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/README.md", "diffHunk": "@@ -215,80 +215,59 @@ TextAnalyticsAsyncClient textAnalyticsClient = new TextAnalyticsClientBuilder()\n ```\n \n ### Detect language\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L82 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L78 -->\n ```java\n String inputText = \"Bonjour tout le monde\";\n-\n-for (DetectedLanguage detectedLanguage : textAnalyticsClient.detectLanguage(inputText).getDetectedLanguages()) {\n-    System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n-        detectedLanguage.getName(),\n-        detectedLanguage.getIso6391Name(),\n-        detectedLanguage.getScore());\n-}\n+DetectedLanguage detectedLanguage = textAnalyticsClient.detectLanguage(inputText);\n+System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n+    detectedLanguage.getName(), detectedLanguage.getIso6391Name(), detectedLanguage.getScore());\n ```\n \n ### Recognize entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L89-L98 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L85-L89 -->\n ```java\n String text = \"Satya Nadella is the CEO of Microsoft\";\n-\n-for (CategorizedEntity entity : textAnalyticsClient.recognizeEntities(text).getEntities()) {\n-    System.out.printf(\n-        \"Recognized Categorized Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n-        entity.getText(),\n-        entity.getCategory(),\n-        entity.getSubCategory(),\n-        entity.getScore());\n+for (CategorizedEntity entity : textAnalyticsClient.recognizeEntities(text)) {\n+    System.out.printf(\"Recognized Categorized Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n+        entity.getText(), entity.getCategory(), entity.getSubCategory(), entity.getScore());\n }\n ```\n \n ### Recognize PII (Personally Identifiable Information) entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L105-L114 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L96-L100 -->\n ```java\n String text = \"My SSN is 555-55-5555\";\n-\n-for (PiiEntity entity : textAnalyticsClient.recognizePiiEntities(text).getEntities()) {\n-    System.out.printf(\n-        \"Recognized PII Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n-        entity.getText(),\n-        entity.getCategory(),\n-        entity.getSubCategory(),\n-        entity.getScore());\n+for (PiiEntity entity : textAnalyticsClient.recognizePiiEntities(text)) {\n+    System.out.printf(\"Recognized PII Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n+        entity.getText(), entity.getCategory(), entity.getSubCategory(), entity.getScore());\n }\n ```\n \n ### Recognize linked entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L121-L128 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L107-L111 -->\n \n ```java\n String text = \"Old Faithful is a geyser at Yellowstone Park.\";\n-\n-for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text).getLinkedEntities()) {\n+for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text)) {\n     System.out.printf(\"Recognized Linked Entity: %s, Url: %s, Data Source: %s.%n\",\n-        linkedEntity.getName(),\n-        linkedEntity.getUrl(),\n-        linkedEntity.getDataSource());\n+        linkedEntity.getName(), linkedEntity.getUrl(), linkedEntity.getDataSource());\n }\n ```\n ### Extract key phrases\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L135-L139 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L118-L121 -->\n ```java\n String text = \"My cat might need to see a veterinarian.\";\n-\n-for (String keyPhrase : textAnalyticsClient.extractKeyPhrases(text).getKeyPhrases()) {\n+for (String keyPhrase : textAnalyticsClient.extractKeyPhrases(text)) {\n     System.out.printf(\"Recognized phrases: %s.%n\", keyPhrase);\n }\n ```\n \n ### Analyze sentiment\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L146-L152 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L128-L131 -->\n ```java\n String text = \"The hotel was dark and unclean.\";\n-\n-for (TextSentiment textSentiment : textAnalyticsClient.analyzeSentiment(text).getSentenceSentiments()) {\n-    System.out.printf(\n-        \"Analyzed Sentence Sentiment class: %s.%n\",\n-        textSentiment.getTextSentimentClass());\n+for (SentenceSentiment textSentiment : textAnalyticsClient.analyzeSentiment(text).getSentenceSentiments()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njc3ODcz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354677873", "createdAt": "2020-02-06T18:34:13Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozNDoxM1rOFmlyXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozNDoxM1rOFmlyXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwOTMwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                System.out.printf(\"Analyzed Sentence Sentiment class: %s.%n\", textSentiment.getSentimentLabel());\n          \n          \n            \n                System.out.printf(\"Analyzed Sentence Sentiment: %s.%n\", textSentiment.getSentimentLabel());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376009308", "createdAt": "2020-02-06T18:34:13Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/README.md", "diffHunk": "@@ -215,80 +215,59 @@ TextAnalyticsAsyncClient textAnalyticsClient = new TextAnalyticsClientBuilder()\n ```\n \n ### Detect language\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L82 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L75-L78 -->\n ```java\n String inputText = \"Bonjour tout le monde\";\n-\n-for (DetectedLanguage detectedLanguage : textAnalyticsClient.detectLanguage(inputText).getDetectedLanguages()) {\n-    System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n-        detectedLanguage.getName(),\n-        detectedLanguage.getIso6391Name(),\n-        detectedLanguage.getScore());\n-}\n+DetectedLanguage detectedLanguage = textAnalyticsClient.detectLanguage(inputText);\n+System.out.printf(\"Detected languages name: %s, ISO 6391 Name: %s, Score: %s.%n\",\n+    detectedLanguage.getName(), detectedLanguage.getIso6391Name(), detectedLanguage.getScore());\n ```\n \n ### Recognize entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L89-L98 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L85-L89 -->\n ```java\n String text = \"Satya Nadella is the CEO of Microsoft\";\n-\n-for (CategorizedEntity entity : textAnalyticsClient.recognizeEntities(text).getEntities()) {\n-    System.out.printf(\n-        \"Recognized Categorized Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n-        entity.getText(),\n-        entity.getCategory(),\n-        entity.getSubCategory(),\n-        entity.getScore());\n+for (CategorizedEntity entity : textAnalyticsClient.recognizeEntities(text)) {\n+    System.out.printf(\"Recognized Categorized Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n+        entity.getText(), entity.getCategory(), entity.getSubCategory(), entity.getScore());\n }\n ```\n \n ### Recognize PII (Personally Identifiable Information) entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L105-L114 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L96-L100 -->\n ```java\n String text = \"My SSN is 555-55-5555\";\n-\n-for (PiiEntity entity : textAnalyticsClient.recognizePiiEntities(text).getEntities()) {\n-    System.out.printf(\n-        \"Recognized PII Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n-        entity.getText(),\n-        entity.getCategory(),\n-        entity.getSubCategory(),\n-        entity.getScore());\n+for (PiiEntity entity : textAnalyticsClient.recognizePiiEntities(text)) {\n+    System.out.printf(\"Recognized PII Entity: %s, Category: %s, SubCategory: %s, Score: %s.%n\",\n+        entity.getText(), entity.getCategory(), entity.getSubCategory(), entity.getScore());\n }\n ```\n \n ### Recognize linked entity\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L121-L128 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L107-L111 -->\n \n ```java\n String text = \"Old Faithful is a geyser at Yellowstone Park.\";\n-\n-for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text).getLinkedEntities()) {\n+for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text)) {\n     System.out.printf(\"Recognized Linked Entity: %s, Url: %s, Data Source: %s.%n\",\n-        linkedEntity.getName(),\n-        linkedEntity.getUrl(),\n-        linkedEntity.getDataSource());\n+        linkedEntity.getName(), linkedEntity.getUrl(), linkedEntity.getDataSource());\n }\n ```\n ### Extract key phrases\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L135-L139 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L118-L121 -->\n ```java\n String text = \"My cat might need to see a veterinarian.\";\n-\n-for (String keyPhrase : textAnalyticsClient.extractKeyPhrases(text).getKeyPhrases()) {\n+for (String keyPhrase : textAnalyticsClient.extractKeyPhrases(text)) {\n     System.out.printf(\"Recognized phrases: %s.%n\", keyPhrase);\n }\n ```\n \n ### Analyze sentiment\n-<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L146-L152 -->\n+<!-- embedme ./src/samples/java/com/azure/ai/textanalytics/ReadmeSamples.java#L128-L131 -->\n ```java\n String text = \"The hotel was dark and unclean.\";\n-\n-for (TextSentiment textSentiment : textAnalyticsClient.analyzeSentiment(text).getSentenceSentiments()) {\n-    System.out.printf(\n-        \"Analyzed Sentence Sentiment class: %s.%n\",\n-        textSentiment.getTextSentimentClass());\n+for (SentenceSentiment textSentiment : textAnalyticsClient.analyzeSentiment(text).getSentenceSentiments()) {\n+    System.out.printf(\"Analyzed Sentence Sentiment class: %s.%n\", textSentiment.getSentimentLabel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njc5MjEy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354679212", "createdAt": "2020-02-06T18:36:24Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozNjoyNFrOFml2fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozNjoyNFrOFml2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMDM2Nw==", "bodyText": "can we import it?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376010367", "createdAt": "2020-02-06T18:36:24Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -51,12 +52,16 @@\n         this.service = service;\n     }\n \n-    Mono<Response<AnalyzeSentimentResult>> analyzeSentimentWithResponse(String text, String language, Context context) {\n+    Mono<Response<com.azure.ai.textanalytics.models.DocumentSentiment>> analyzeSentimentWithResponse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjgxMjYw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354681260", "createdAt": "2020-02-06T18:39:33Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozOTozM1rOFml84A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODozOTozM1rOFml84A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMjAwMA==", "bodyText": "NIT: consider changing variable name too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376012000", "createdAt": "2020-02-06T18:39:33Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -129,9 +134,9 @@ private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentim\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n \n         // Sentence text sentiment\n-        final List<TextSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n+        final List<SentenceSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n             .map(sentenceSentiment -> {\n-                TextSentimentClass sentimentClass = TextSentimentClass.fromString(sentenceSentiment\n+                SentimentLabel sentimentClass = SentimentLabel.fromString(sentenceSentiment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjgzNzE0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354683714", "createdAt": "2020-02-06T18:43:19Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo0MzoxOVrOFmmELw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo0MzoxOVrOFmmELw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMzg3MQ==", "bodyText": "NIT: the Texts part might be misleading as it actually doesn't contain the text per se, just sentiment and scores", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376013871", "createdAt": "2020-02-06T18:43:19Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -129,9 +134,9 @@ private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentim\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n \n         // Sentence text sentiment\n-        final List<TextSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n+        final List<SentenceSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njg1NzYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354685761", "createdAt": "2020-02-06T18:46:28Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo0NjoyOFrOFmmKSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo0NjoyOFrOFmmKSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNTQzMg==", "bodyText": "just curious, is there a reason why it is not using the import?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376015432", "createdAt": "2020-02-06T18:46:28Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/RecognizeLinkedEntityAsyncClient.java", "diffHunk": "@@ -49,13 +52,25 @@\n         this.service = service;\n     }\n \n-    Mono<Response<RecognizeLinkedEntitiesResult>> recognizeLinkedEntitiesWithResponse(String text, String language,\n-        Context context) {\n+    Mono<PagedResponse<com.azure.ai.textanalytics.models.LinkedEntity>> recognizeLinkedEntitiesWithResponse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njg4MjA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354688207", "createdAt": "2020-02-06T18:50:20Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1MDoyMVrOFmmR7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1MDoyMVrOFmmR7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNzM4OQ==", "bodyText": "One of the discussions with the adding batch to the methods was to add it at the end. so i.e. detectLanguageBatch\nthis is true for the other methods", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376017389", "createdAt": "2020-02-06T18:50:21Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -237,11 +236,7 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<DocumentResultCollection<DetectLanguageResult>> detectBatchLanguage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjkyMjA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354692209", "createdAt": "2020-02-06T18:56:39Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1NjozOVrOFmmeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1NjozOVrOFmmeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDQ5Mg==", "bodyText": "Why do we need to update these to PagedResponses?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376020492", "createdAt": "2020-02-06T18:56:39Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -819,26 +761,24 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * <p>Extract key phrases in a text with a provided language. Subscribes to the call asynchronously and prints\n      * out the key phrases when a response is received.</p>\n      *\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse#string-string}\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases#string-string}\n      *\n      * @param text the text to be analyzed.\n      * @param language The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n      * English as default.\n      *\n-     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} has the\n-     * {@link ExtractKeyPhraseResult key phrases} of the text.\n+     * @return A {@link PagedFlux} containing the key phrases of the text.\n      *\n      * @throws NullPointerException if {@code text} is {@code null}.\n-     * @throws com.azure.ai.textanalytics.models.TextAnalyticsException if the response returned with\n-     * an {@link com.azure.ai.textanalytics.models.TextAnalyticsError error}.\n+     * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n-    @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<ExtractKeyPhraseResult>> extractKeyPhrasesWithResponse(String text, String language) {\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<String> extractKeyPhrases(String text, String language) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 458}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzE0OTY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354714964", "createdAt": "2020-02-06T19:32:04Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozMjowNFrOFmnihQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozNDowOVrOFmnmcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzODAyMQ==", "bodyText": "nit: Preferably remove all \"**Class\" with label or just call them \"*Sentiment\".", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376038021", "createdAt": "2020-02-06T19:32:04Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -117,7 +122,7 @@\n      */\n     private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {\n         // Document text sentiment\n-        final TextSentimentClass documentSentimentClass = TextSentimentClass.fromString(documentSentiment.\n+        final SentimentLabel documentSentimentClass = SentimentLabel.fromString(documentSentiment.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzOTAyNg==", "bodyText": "ReturnType.COLLECTION", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376039026", "createdAt": "2020-02-06T19:34:09Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -148,14 +152,13 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * specified.\n      *\n      * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} has the\n-     * {@link DetectLanguageResult detected language} of the text.\n+     * {@link DetectedLanguage detected language} of the text.\n      *\n      * @throws NullPointerException if {@code text} is {@code null}.\n-     * @throws com.azure.ai.textanalytics.models.TextAnalyticsException if the response returned with\n-     * an {@link com.azure.ai.textanalytics.models.TextAnalyticsError error}.\n+     * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzIwODI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354720825", "createdAt": "2020-02-06T19:41:30Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo0MTozMFrOFmn0OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo0MTozMFrOFmn0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0MjU1Mw==", "bodyText": "Consider using the validatePrimaryLanguage for testing the results, rather than converting them to lists and then doing the comparison.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376042553", "createdAt": "2020-02-06T19:41:30Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -113,7 +111,8 @@ public void detectLanguagesBatchStringInput() {\n     public void detectSingleTextLanguage() {\n         DetectedLanguage primaryLanguage = new DetectedLanguage(\"English\", \"en\", 1.0);\n         StepVerifier.create(client.detectLanguage(\"This is a test English Text\"))\n-            .assertNext(response -> validateDetectedLanguages(Collections.singletonList(primaryLanguage), response.getDetectedLanguages()))\n+            .assertNext(response -> validateDetectedLanguages(Collections.singletonList(primaryLanguage),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzIyNDU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354722459", "createdAt": "2020-02-06T19:44:07Z", "commit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo0NDowN1rOFmn5Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo0NDowN1rOFmn5Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Mzc4Ng==", "bodyText": "no assert ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376043786", "createdAt": "2020-02-06T19:44:07Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -179,7 +179,6 @@ public void recognizeEntitiesForEmptyText() {\n     @Test\n     public void recognizeEntitiesForFaultyText() {\n         StepVerifier.create(client.recognizeEntities(\"!@#%%\"))\n-            .assertNext(response -> assertEquals(response.getEntities().size(), 0))\n             .verifyComplete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0827ffd50b6d73c12fdd9561484f9c71f3fbe23c", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0827ffd50b6d73c12fdd9561484f9c71f3fbe23c", "committedDate": "2020-02-06T23:14:53Z", "message": "address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60beb3ebcb866af65ed5798d0aaae096304fbe7c", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/60beb3ebcb866af65ed5798d0aaae096304fbe7c", "committedDate": "2020-02-06T23:29:08Z", "message": "resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "committedDate": "2020-02-07T00:06:26Z", "message": "rerun npm embeded me"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODYyMDU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354862055", "createdAt": "2020-02-07T00:17:37Z", "commit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDoxNzozOFrOFmuo7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDoyMDowN1rOFmuroQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDM0OQ==", "bodyText": "Test to detect languages for a list of string input with provided country hint.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154349", "createdAt": "2020-02-07T00:17:38Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -73,7 +75,7 @@ public void detectLanguagesBatchInput() {\n     }\n \n     /**\n-     * Test Detect batch languages for List of String input with country Hint.\n+     * Test detect batch languages for a list of string input with country hint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDUwMw==", "bodyText": "Test to detect languages for a list of string input.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154503", "createdAt": "2020-02-07T00:18:14Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -83,7 +85,7 @@ public void detectLanguagesBatchListCountryHint() {\n     }\n \n     /**\n-     * Test Detect batch languages for List of String input.\n+     * Test detect batch languages for a list of string input.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDYxMg==", "bodyText": "Can use validatePrimaryLanguage here and below.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154612", "createdAt": "2020-02-07T00:18:38Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -99,7 +101,8 @@ public void detectSingleTextLanguage() {\n         DetectedLanguage primaryLanguage = new DetectedLanguage(\"English\", \"en\", 0.0);\n         List<DetectedLanguage> expectedLanguageList = Collections.singletonList(primaryLanguage);\n         validateDetectedLanguages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NTA0MQ==", "bodyText": "use validatePrimaryLanguage instead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376155041", "createdAt": "2020-02-07T00:20:07Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -484,8 +489,9 @@ public void updateToValidKey() {\n         credential.updateCredential(getApiKey());\n \n         // Action and Assert\n-        validateDetectedLanguages(Arrays.asList(new DetectedLanguage(\"English\", \"en\", 1.0)),\n-            client.detectLanguage(\"This is a test English Text\").getDetectedLanguages());\n+        validateDetectedLanguages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 271}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTMxMTQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354931145", "createdAt": "2020-02-07T04:58:01Z", "commit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDo1ODowMVrOFmyVDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNDo1ODowMVrOFmyVDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNDc5OQ==", "bodyText": "Although the type is SentimentLabel, the other languages are using Sentiment as the name of the property.\nThis is true for SentenceSentiment too.\nnaming i.e\nDocumentSentiment\nSentiment\nSentimentScores\nSentences\nSentenceSentiment\nSentiment\nSentimentScores\nOffset\nLength", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376214799", "createdAt": "2020-02-07T04:58:01Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/DocumentSentiment.java", "diffHunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+import java.util.List;\n+\n+/**\n+ * The DocumentSentiment model\n+ */\n+@Immutable\n+public final class DocumentSentiment {\n+    private final SentimentLabel sentimentLabel;\n+    private final SentimentScorePerLabel sentimentScorePerLabel;\n+    private final List<SentenceSentiment> sentenceSentiments;\n+\n+    /**\n+     * Creates a {@code DocumentSentiment} model that describes the sentiment of the document.\n+     *\n+     * @param sentimentLabel the sentiment label of the document\n+     * @param sentimentScorePerLabel the score of sentiment label of the document\n+     * @param sentenceSentiments a list of sentence sentiments\n+     */\n+    public DocumentSentiment(SentimentLabel sentimentLabel, SentimentScorePerLabel sentimentScorePerLabel,\n+        List<SentenceSentiment> sentenceSentiments) {\n+        this.sentimentLabel = sentimentLabel;\n+        this.sentimentScorePerLabel = sentimentScorePerLabel;\n+        this.sentenceSentiments = sentenceSentiments;\n+    }\n+\n+    /**\n+     * Get the sentiment label.\n+     *\n+     * @return the SentimentLabel\n+     */\n+    public SentimentLabel getSentimentLabel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTMyNzQy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354932742", "createdAt": "2020-02-07T05:05:27Z", "commit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNTowNToyN1rOFmyaYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNTowNToyN1rOFmyaYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNjE2Mw==", "bodyText": "Consider eliminating Score from the names. Our users will do i.e.\nxx.getSentimentScore().getPositive() so it already implies positive is a score.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376216163", "createdAt": "2020-02-07T05:05:27Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/SentimentScorePerLabel.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The SentimentScorePerLabel model\n+ */\n+@Immutable\n+public final class SentimentScorePerLabel {\n+    private final double negativeScore;\n+    private final double neutralScore;\n+    private final double positiveScore;\n+\n+    /**\n+     * Creates a {@code SentimentScorePerLabel} model that describes the sentiment score of the sentiment label.\n+     *\n+     * @param negativeScore negative score value, range in between 0 and 1.0\n+     * @param neutralScore neutral score value, range in between 0 and 1.0\n+     * @param positiveScore positive score value, range in between 0 and 1.0\n+     */\n+    public SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore) {\n+        this.negativeScore = negativeScore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTM0MTIz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-354934123", "createdAt": "2020-02-07T05:11:55Z", "commit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNToxMTo1NVrOFmyenQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNToxMTo1NVrOFmyenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNzI0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {\n          \n          \n            \n                private AnalyzeSentimentResult convertToSentenceSentimentResult(final DocumentSentiment documentSentiment) {", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376217245", "createdAt": "2020-02-07T05:11:55Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -117,9 +122,9 @@\n      */\n     private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f42be95eb5f878155ed1fb63e9eb79393a356c0", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4f42be95eb5f878155ed1fb63e9eb79393a356c0", "committedDate": "2020-02-07T05:50:17Z", "message": "address naming for document, sentence and sentimentScore classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjkyNzQx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#pullrequestreview-355292741", "createdAt": "2020-02-07T16:49:22Z", "commit": {"oid": "4f42be95eb5f878155ed1fb63e9eb79393a356c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda9760d711853b46a4ceed5236ad77b87aa4cd2", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bda9760d711853b46a4ceed5236ad77b87aa4cd2", "committedDate": "2020-02-07T17:07:48Z", "message": "fix feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5065dbfc2f82cbf79c0c4e397aa589d8477141f7", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5065dbfc2f82cbf79c0c4e397aa589d8477141f7", "committedDate": "2020-02-07T18:32:18Z", "message": "sample updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbfd5eeabf361403d0aba534f3c561d0d5a901bc", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbfd5eeabf361403d0aba534f3c561d0d5a901bc", "committedDate": "2020-02-07T18:44:53Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "543226614713f56d5800b0f8c932dc9cd2a3e1d3", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/543226614713f56d5800b0f8c932dc9cd2a3e1d3", "committedDate": "2020-02-07T19:07:50Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae5ec50ed9193fa095e9e167a4dab970aa994d5", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/aae5ec50ed9193fa095e9e167a4dab970aa994d5", "committedDate": "2020-02-07T20:25:57Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2489, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}