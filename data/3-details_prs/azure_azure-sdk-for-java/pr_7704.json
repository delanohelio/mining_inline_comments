{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDMyMjQw", "number": 7704, "title": "Fix send span to encapsulate multiple send attempts (retries)", "bodyText": "Update in eventhubs to start a send span only once per user send and not for every retry.\nCloses: #7597", "createdAt": "2020-01-24T21:58:13Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704", "merged": true, "mergeCommit": {"oid": "af06413cdd3ff612c0d7aff3175af6f8971712be"}, "closed": true, "closedAt": "2020-02-07T23:01:55Z", "author": {"login": "samvaity"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9maD3ABqjI5Nzg3NDU4MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCGV7pgFqTM1NTQ1MTk1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a231358ff2914af66bbcb7dae0ac60a7df46fe3", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8a231358ff2914af66bbcb7dae0ac60a7df46fe3", "committedDate": "2020-01-24T21:56:17Z", "message": "fix retry send span"}, "afterCommit": {"oid": "01ee876f7c815b9a39ab2dbef337d416a2d0b5a6", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/01ee876f7c815b9a39ab2dbef337d416a2d0b5a6", "committedDate": "2020-01-24T22:08:58Z", "message": "fix retry send span"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Mjg3NDg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#pullrequestreview-348287487", "createdAt": "2020-01-25T00:06:47Z", "commit": {"oid": "01ee876f7c815b9a39ab2dbef337d416a2d0b5a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDowNjo0OFrOFhtfCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDowNjo0OFrOFhtfCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5MjU1Mw==", "bodyText": "does it mean we'll send one span for the first try only?\nIt should be one span per Send call. If there is more than one try - it should wrap all of them:\n\nduration should be duration of send() call\nresult is the result of all tries (i.e. eventually sent or failed)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#discussion_r370892553", "createdAt": "2020-01-25T00:06:48Z", "author": {"login": "lmolkova"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -416,10 +416,11 @@ public String getEventHubName() {\n         }\n \n         final Context finalSharedContext = sharedContext != null ? sharedContext : Context.NONE;\n-\n         return withRetry(\n             getSendLink(batch.getPartitionId()).flatMap(link -> {\n-                if (isTracingEnabled) {\n+                // if parent context already has send span context data (in case of retries),\n+                // don't start a new send span\n+                if (isTracingEnabled && !parentContext.get().getData(HOST_NAME_KEY).isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ee876f7c815b9a39ab2dbef337d416a2d0b5a6"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecbab089ee9897d15373919230819d413e4d847e", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ecbab089ee9897d15373919230819d413e4d847e", "committedDate": "2020-02-05T23:19:48Z", "message": "update send retry span"}, "afterCommit": {"oid": "131f0baeb5f708d85213c6d3fe8f1b00f8cce519", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/131f0baeb5f708d85213c6d3fe8f1b00f8cce519", "committedDate": "2020-02-05T23:21:47Z", "message": "update send retry span"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcdcbbc9aedb011d53bead85057feb9f452c2d58", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fcdcbbc9aedb011d53bead85057feb9f452c2d58", "committedDate": "2020-02-05T23:24:26Z", "message": "fix retry send span"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac", "committedDate": "2020-02-05T23:24:26Z", "message": "update send retry span"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "131f0baeb5f708d85213c6d3fe8f1b00f8cce519", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/131f0baeb5f708d85213c6d3fe8f1b00f8cce519", "committedDate": "2020-02-05T23:21:47Z", "message": "update send retry span"}, "afterCommit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac", "committedDate": "2020-02-05T23:24:26Z", "message": "update send retry span"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTI2NjMw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#pullrequestreview-354126630", "createdAt": "2020-02-06T00:06:00Z", "commit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDowNjowMFrOFmLbIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDowNjowMFrOFmLbIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3NzM3Ng==", "bodyText": "is it called on each try? will it end the span after first retry?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#discussion_r375577376", "createdAt": "2020-02-06T00:06:00Z", "author": {"login": "lmolkova"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -415,31 +414,24 @@ public String getEventHubName() {\n             messages.add(message);\n         }\n \n-        final Context finalSharedContext = sharedContext != null ? sharedContext : Context.NONE;\n+        if (isTracingEnabled) {\n+            final Context finalSharedContext = sharedContext == null\n+                ? Context.NONE\n+                : sharedContext.addData(ENTITY_PATH_KEY, eventHubName).addData(HOST_NAME_KEY, fullyQualifiedNamespace);\n+            // Start send span and store updated context\n+            parentContext.set(tracerProvider.startSpan(finalSharedContext, ProcessKind.SEND));\n+        }\n \n-        return withRetry(\n-            getSendLink(batch.getPartitionId()).flatMap(link -> {\n-                if (isTracingEnabled) {\n-                    Context entityContext = finalSharedContext.addData(ENTITY_PATH_KEY, link.getEntityPath());\n-                    // Start send span and store updated context\n-                    parentContext.set(tracerProvider.startSpan(\n-                        entityContext.addData(HOST_NAME_KEY, link.getHostname()), ProcessKind.SEND));\n-                }\n-                return messages.size() == 1\n+        return withRetry(getSendLink(batch.getPartitionId())\n+            .flatMap(link ->\n+                messages.size() == 1\n                     ? link.send(messages.get(0))\n-                    : link.send(messages);\n-\n-            })\n+                    : link.send(messages)), retryOptions.getTryTimeout(), retryPolicy)\n             .doOnEach(signal -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTI2NzU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#pullrequestreview-354126759", "createdAt": "2020-02-06T00:06:23Z", "commit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDowNjoyM1rOFmLbiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMDowNjoyM1rOFmLbiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU3NzQ4MA==", "bodyText": "does it mean we no longer set error if all retries has failed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#discussion_r375577480", "createdAt": "2020-02-06T00:06:23Z", "author": {"login": "lmolkova"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -415,31 +414,24 @@ public String getEventHubName() {\n             messages.add(message);\n         }\n \n-        final Context finalSharedContext = sharedContext != null ? sharedContext : Context.NONE;\n+        if (isTracingEnabled) {\n+            final Context finalSharedContext = sharedContext == null\n+                ? Context.NONE\n+                : sharedContext.addData(ENTITY_PATH_KEY, eventHubName).addData(HOST_NAME_KEY, fullyQualifiedNamespace);\n+            // Start send span and store updated context\n+            parentContext.set(tracerProvider.startSpan(finalSharedContext, ProcessKind.SEND));\n+        }\n \n-        return withRetry(\n-            getSendLink(batch.getPartitionId()).flatMap(link -> {\n-                if (isTracingEnabled) {\n-                    Context entityContext = finalSharedContext.addData(ENTITY_PATH_KEY, link.getEntityPath());\n-                    // Start send span and store updated context\n-                    parentContext.set(tracerProvider.startSpan(\n-                        entityContext.addData(HOST_NAME_KEY, link.getHostname()), ProcessKind.SEND));\n-                }\n-                return messages.size() == 1\n+        return withRetry(getSendLink(batch.getPartitionId())\n+            .flatMap(link ->\n+                messages.size() == 1\n                     ? link.send(messages.get(0))\n-                    : link.send(messages);\n-\n-            })\n+                    : link.send(messages)), retryOptions.getTryTimeout(), retryPolicy)\n             .doOnEach(signal -> {\n                 if (isTracingEnabled) {\n                     tracerProvider.endSpan(parentContext.get(), signal);\n                 }\n-            })\n-            .doOnError(error -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTAxMzUz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#pullrequestreview-354901353", "createdAt": "2020-02-07T02:37:38Z", "commit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDUxOTU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7704#pullrequestreview-355451958", "createdAt": "2020-02-07T21:37:19Z", "commit": {"oid": "8561642eb3c0caaf8cfc78ba6b8620d1b0ef2dac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 384, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}