{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NjgxMTkz", "number": 16500, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0MDoxOVrOExTKxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODoyNVrOExT-lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTI5NzMyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0MDoxOVrOHnXVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzowOTo0OVrOHngsGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzODg2OA==", "bodyText": "So, effectively we aren't allowing Windows style newlines in logging?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511038868", "createdAt": "2020-10-23T17:40:19Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "diffHunk": "@@ -401,4 +404,14 @@ private boolean doesArgsHaveThrowable(Object... args) {\n     private Object[] removeThrowable(Object... args) {\n         return Arrays.copyOf(args, args.length - 1);\n     }\n+\n+    /**\n+     * Removes CRLF pattern in the {@code logMessage}.\n+     *\n+     * @param logMessage The log message to sanitize.\n+     * @return The updated logMessage.\n+     */\n+    private static String sanitizeLogMessageInput(String logMessage) {\n+        return CRLF_PATTERN.matcher(logMessage).replaceAll(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5MjA5MQ==", "bodyText": "it can be \\r,  \\n or \\r\\n.  The regex will cover all scenarios.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511192091", "createdAt": "2020-10-23T23:09:49Z", "author": {"login": "g2vinay"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "diffHunk": "@@ -401,4 +404,14 @@ private boolean doesArgsHaveThrowable(Object... args) {\n     private Object[] removeThrowable(Object... args) {\n         return Arrays.copyOf(args, args.length - 1);\n     }\n+\n+    /**\n+     * Removes CRLF pattern in the {@code logMessage}.\n+     *\n+     * @param logMessage The log message to sanitize.\n+     * @return The updated logMessage.\n+     */\n+    private static String sanitizeLogMessageInput(String logMessage) {\n+        return CRLF_PATTERN.matcher(logMessage).replaceAll(\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzODg2OA=="}, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTMwMzU3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0MjowOFrOHnXZUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo0MjowOFrOHnXZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzOTgyNQ==", "bodyText": "Are we looking to match \\r or \\n or \\r\\n? The regex is currently matching the former.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511039825", "createdAt": "2020-10-23T17:42:08Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "diffHunk": "@@ -35,6 +36,7 @@\n  * @see Configuration\n  */\n public class ClientLogger {\n+    private static final Pattern CRLF_PATTERN = Pattern.compile(\"[\\r\\n]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTM2NTQzOnYy", "diffSide": "RIGHT", "path": "eng/code-quality-reports/src/main/resources/spotbugs/spotbugs-exclude.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1Nzo1MFrOHnX-Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1Nzo1MFrOHnX-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0OTIzMQ==", "bodyText": "Should we leave a comment that in the default log level we will not print the stack trace, but when the user opt-in for the lowest level log (DEBUG) we'll print it, which is expected.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511049231", "createdAt": "2020-10-23T17:57:50Z", "author": {"login": "anuchandy"}, "path": "eng/code-quality-reports/src/main/resources/spotbugs/spotbugs-exclude.xml", "diffHunk": "@@ -2433,4 +2433,18 @@\n     <Field name=\"detectionConfiguration\" />\n     <Bug pattern=\"UWF_UNWRITTEN_FIELD\" />\n   </Match>\n+  \n+  <!-- Disabling false positives in azure-core -->\n+  <Match>\n+      <Class name=\"com.azure.core.util.logging.ClientLogger\" />\n+      <Bug pattern=\"CRLF_INJECTION_LOGS\" />\n+  </Match>\n+  <Match>\n+      <Class name=\"com.azure.core.http.policy.ExponentialBackoff\" />\n+      <Bug pattern=\"PREDICTABLE_RANDOM\" />\n+  </Match>\n+  <Match>\n+      <Class name=\"com.azure.core.implementation.logging.DefaultLogger\" />\n+      <Bug pattern=\"INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTQwNTQzOnYy", "diffSide": "RIGHT", "path": "eng/code-quality-reports/src/main/resources/spotbugs/spotbugs-exclude.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxMDoyMlrOHnYW3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxMDoyMlrOHnYW3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1NTU4Mw==", "bodyText": "Can we add a reason why these are false positives? A few months from now, if we decide to create another baseline for spotbugs, we won't remember why.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511055583", "createdAt": "2020-10-23T18:10:22Z", "author": {"login": "conniey"}, "path": "eng/code-quality-reports/src/main/resources/spotbugs/spotbugs-exclude.xml", "diffHunk": "@@ -2433,4 +2433,18 @@\n     <Field name=\"detectionConfiguration\" />\n     <Bug pattern=\"UWF_UNWRITTEN_FIELD\" />\n   </Match>\n+  \n+  <!-- Disabling false positives in azure-core -->\n+  <Match>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTQyOTk5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODoyNVrOHnYmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODoyNVrOHnYmPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1OTUxOQ==", "bodyText": "Add unit tests to validate this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16500#discussion_r511059519", "createdAt": "2020-10-23T18:18:25Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/logging/ClientLogger.java", "diffHunk": "@@ -401,4 +404,14 @@ private boolean doesArgsHaveThrowable(Object... args) {\n     private Object[] removeThrowable(Object... args) {\n         return Arrays.copyOf(args, args.length - 1);\n     }\n+\n+    /**\n+     * Removes CRLF pattern in the {@code logMessage}.\n+     *\n+     * @param logMessage The log message to sanitize.\n+     * @return The updated logMessage.\n+     */\n+    private static String sanitizeLogMessageInput(String logMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f350619ca40d271ad3581f500d991d752c959e3b"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4012, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}