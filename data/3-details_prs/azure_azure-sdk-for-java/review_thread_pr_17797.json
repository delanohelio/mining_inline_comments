{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2ODEwMzQ1", "number": 17797, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODo1ODozNlrOFA71TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozOToxOFrOFCiI2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTI0NjIxOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODo1ODozNlrOH_d4sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzo1NDoxM1rOIAzGGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMTk4NQ==", "bodyText": "Client libraries should not have a dependency on the azure-identity library. Is this needed by the library or should it be a test dependency?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r536311985", "createdAt": "2020-12-04T18:58:36Z", "author": {"login": "schaabs"}, "path": "sdk/communication/azure-communication-administration/pom.xml", "diffHunk": "@@ -59,6 +59,11 @@\n       <artifactId>azure-core</artifactId>\n       <version>1.11.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-identity</artifactId>\n+      <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->    \n+    </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f88d1dc2c5fe8e9fc0a9ac509ff84c765dc5c24"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMjY2Ng==", "bodyText": "It should be a test dependency, you're right", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r536312666", "createdAt": "2020-12-04T18:59:44Z", "author": {"login": "jbeauregardb"}, "path": "sdk/communication/azure-communication-administration/pom.xml", "diffHunk": "@@ -59,6 +59,11 @@\n       <artifactId>azure-core</artifactId>\n       <version>1.11.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-identity</artifactId>\n+      <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->    \n+    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMTk4NQ=="}, "originalCommit": {"oid": "7f88d1dc2c5fe8e9fc0a9ac509ff84c765dc5c24"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwODA1Nw==", "bodyText": "@schaabs Done!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537708057", "createdAt": "2020-12-07T17:54:13Z", "author": {"login": "jbeauregardb"}, "path": "sdk/communication/azure-communication-administration/pom.xml", "diffHunk": "@@ -59,6 +59,11 @@\n       <artifactId>azure-core</artifactId>\n       <version>1.11.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n     </dependency>\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-identity</artifactId>\n+      <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-identity;dependency} -->    \n+    </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMxMTk4NQ=="}, "originalCommit": {"oid": "7f88d1dc2c5fe8e9fc0a9ac509ff84c765dc5c24"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjA3NTQ4OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjo1Njo0N1rOH_lP5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjo1Njo0N1rOH_lP5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzMjYxMw==", "bodyText": "Do you need the create the authPolicy variable? Can we just return directly?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r536432613", "createdAt": "2020-12-04T22:56:47Z", "author": {"login": "minnieliu"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,20 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        HttpPipelinePolicy authPolicy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8cf286f867858a62c23876f527e407492e7475"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjA5MTkyOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/test/resources/session-records/createAsyncIdentityClientUsingManagedIdentity.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMzowMjozM1rOH_lYZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMzowMjozM1rOH_lYZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzNDc5MA==", "bodyText": "Can we make sure that the Id is redacted?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r536434790", "createdAt": "2020-12-04T23:02:33Z", "author": {"login": "minnieliu"}, "path": "sdk/communication/azure-communication-administration/src/test/resources/session-records/createAsyncIdentityClientUsingManagedIdentity.json", "diffHunk": "@@ -0,0 +1,25 @@\n+{\n+    \"networkCallRecords\" : [ {\n+      \"Method\" : \"POST\",\n+      \"Uri\" : \"https://REDACTED.communication.azure.com/identities?api-version=2020-07-20-preview2\",\n+      \"Headers\" : {\n+        \"User-Agent\" : \"azsdk-java-azure-communication-administration/1.0.0-beta.4 (11.0.8; Windows 10; 10.0)\"\n+      },\n+      \"Response\" : {\n+        \"Transfer-Encoding\" : \"chunked\",\n+        \"Strict-Transport-Security\" : \"max-age=2592000\",\n+        \"api-supported-versions\" : \"2020-01-15-preview3, 2020-07-20-preview1, 2020-07-20-preview2\",\n+        \"X-Processing-Time\" : \"894ms\",\n+        \"MS-CV\" : \"ibeQW1NtqEWkUrrghlaQHg.0\",\n+        \"retry-after\" : \"0\",\n+        \"X-Azure-Ref\" : \"0KmzJXwAAAADyBVf0Du24TofZ8x38MV62TEFYRURHRTEyMjEAOWZjN2I1MTktYThjYy00Zjg5LTkzNWUtYzkxNDhhZTA5ZTgx\",\n+        \"StatusCode\" : \"200\",\n+        \"Body\" : \"{\\\"id\\\":\\\"8:acs:bff431b2-eb28-43ab-b2fc-546ea8974212_00000006-cab0-2e34-8337-3b3a0d0000b7\\\"}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8cf286f867858a62c23876f527e407492e7475"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTcyODk3OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo1ODowN1rOIA1t1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo1ODowN1rOIA1t1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MDk5Nw==", "bodyText": "nit: remove extra blank line.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537750997", "createdAt": "2020-12-07T18:58:07Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -68,6 +73,19 @@ public CommunicationIdentityClientBuilder pipeline(HttpPipeline pipeline) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@link TokenCredential} used to authenticate HTTP requests.\n+     *\n+     * @param tokenCredential {@link TokenCredential} used to authenticate HTTP requests.\n+     * @return The updated {@link CommunicationIdentityClientBuilder} object.\n+     * @throws NullPointerException If {@code tokenCredential} is null.\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTc1NTU3OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowNDozMVrOIA19uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNjo0MTozMFrOIBob3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA==", "bodyText": "If both are set, do we want to throw or prioritize tokenCredential?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537755064", "createdAt": "2020-12-07T19:04:31Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,18 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null) { \n+            return new BearerTokenAuthenticationPolicy(\n+                this.tokenCredential, \"https://communication.azure.com//.default\");          \n+        } else if (this.credential != null) {\n+            return new HmacAuthenticationPolicy(this.credential);            \n+        } else {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Missing credential information while building a client.\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDE5NA==", "bodyText": "If both are set, I think we should prioritize tokenCredential as it is now, right? It makes sense to use that one as our default.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537860194", "createdAt": "2020-12-07T21:52:53Z", "author": {"login": "jbeauregardb"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,18 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null) { \n+            return new BearerTokenAuthenticationPolicy(\n+                this.tokenCredential, \"https://communication.azure.com//.default\");          \n+        } else if (this.credential != null) {\n+            return new HmacAuthenticationPolicy(this.credential);            \n+        } else {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Missing credential information while building a client.\"));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA=="}, "originalCommit": {"oid": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4MTk4Mg==", "bodyText": "Talked offline, we're following BlobClientBuilder's example now with a last one wins logic, and additionally info log that the previous credential got overridden.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538581982", "createdAt": "2020-12-08T16:41:30Z", "author": {"login": "DominikMe"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +216,18 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null) { \n+            return new BearerTokenAuthenticationPolicy(\n+                this.tokenCredential, \"https://communication.azure.com//.default\");          \n+        } else if (this.credential != null) {\n+            return new HmacAuthenticationPolicy(this.credential);            \n+        } else {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Missing credential information while building a client.\"));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NTA2NA=="}, "originalCommit": {"oid": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTc2MjI4OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowNjowM1rOIA2BjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowNjowM1rOIA2BjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NjA0NQ==", "bodyText": "nit: else should be in the previous line along with }", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r537756045", "createdAt": "2020-12-07T19:06:03Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -30,6 +36,26 @@ protected CommunicationIdentityClientBuilder getCommunicationIdentityClient(Http\n         builder.endpoint(ENDPOINT)\n             .accessKey(ACCESSKEY)\n             .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+       \n+        if (getTestMode() == TestMode.RECORD) {\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected CommunicationIdentityClientBuilder getCommunicationIdentityClientBuilderUsingManagedIdentity(HttpClient httpClient) {\n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder\n+            .endpoint(ENDPOINT)\n+            .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+        \n+        if (getTestMode() == TestMode.PLAYBACK) {\n+            builder.credential(new FakeCredentials());\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22130b4e3b71ac5d1ac44677f8d42ef775e4823f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTIxMDQzOnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNjozNjoyOFrOIBoGJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzoxMjoyNlrOIBql6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU3NjQyMw==", "bodyText": "Instead of implementing a FakeCredential you can just use the AzureKeyCredential and delete your class.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        builder.credential(new FakeCredentials());\n          \n          \n            \n                        builder.credential(new AzureKeyCredential(\"invalid key\"));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538576423", "createdAt": "2020-12-08T16:36:28Z", "author": {"login": "DominikMe"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -30,6 +36,25 @@ protected CommunicationIdentityClientBuilder getCommunicationIdentityClient(Http\n         builder.endpoint(ENDPOINT)\n             .accessKey(ACCESSKEY)\n             .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+       \n+        if (getTestMode() == TestMode.RECORD) {\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected CommunicationIdentityClientBuilder getCommunicationIdentityClientBuilderUsingManagedIdentity(HttpClient httpClient) {\n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder\n+            .endpoint(ENDPOINT)\n+            .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+        \n+        if (getTestMode() == TestMode.PLAYBACK) {\n+            builder.credential(new FakeCredentials());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b123c31a487c1cc6b40f07ed827a458856162bf6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNzMyMg==", "bodyText": "But AzureKeyCredential doesn't implement TokenCredential interface", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538617322", "createdAt": "2020-12-08T17:12:26Z", "author": {"login": "jbeauregardb"}, "path": "sdk/communication/azure-communication-administration/src/test/java/com/azure/communication/administration/CommunicationIdentityClientTestBase.java", "diffHunk": "@@ -30,6 +36,25 @@ protected CommunicationIdentityClientBuilder getCommunicationIdentityClient(Http\n         builder.endpoint(ENDPOINT)\n             .accessKey(ACCESSKEY)\n             .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+       \n+        if (getTestMode() == TestMode.RECORD) {\n+            builder.addPolicy(interceptorManager.getRecordPolicy());\n+        }\n+\n+        return builder;\n+    }\n+\n+    protected CommunicationIdentityClientBuilder getCommunicationIdentityClientBuilderUsingManagedIdentity(HttpClient httpClient) {\n+        CommunicationIdentityClientBuilder builder = new CommunicationIdentityClientBuilder();\n+        builder\n+            .endpoint(ENDPOINT)\n+            .httpClient(httpClient == null ? interceptorManager.getPlaybackClient() : httpClient);\n+        \n+        if (getTestMode() == TestMode.PLAYBACK) {\n+            builder.credential(new FakeCredentials());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU3NjQyMw=="}, "originalCommit": {"oid": "b123c31a487c1cc6b40f07ed827a458856162bf6"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjAwMjg1OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozODoyNlrOIBwHsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozODoyNlrOIBwHsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNzg4OA==", "bodyText": "We should not change the value of accessKeyCredential the user has already set. This will silently set the value to null and the user will not know about it - logs are not always noticed. I would rather do the validation at the very end when build*Client is called. Check if both are set and then throw an exception.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538707888", "createdAt": "2020-12-08T18:38:26Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -68,6 +73,22 @@ public CommunicationIdentityClientBuilder pipeline(HttpPipeline pipeline) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@link TokenCredential} used to authenticate HTTP requests.\n+     *\n+     * @param tokenCredential {@link TokenCredential} used to authenticate HTTP requests.\n+     * @return The updated {@link CommunicationIdentityClientBuilder} object.\n+     * @throws NullPointerException If {@code tokenCredential} is null.\n+     */\n+    public CommunicationIdentityClientBuilder credential(TokenCredential tokenCredential) {\n+        this.tokenCredential = Objects.requireNonNull(tokenCredential, \"'tokenCredential' cannot be null.\");\n+        if (accessKeyCredential != null) {\n+            logger.info(\"'accessKey' is being replaced with 'credential', only one authorization method can be used.\");\n+            this.accessKeyCredential = null;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "371d485dc984a7f51783babc64e6c2b8cbe37e4e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjAwNzk1OnYy", "diffSide": "RIGHT", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozOToxOFrOIBwLGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozOToxOFrOIBwLGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwODc2Mw==", "bodyText": "This is good! Since we have this check here, we don't need to do any validation in the setter methods above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17797#discussion_r538708763", "createdAt": "2020-12-08T18:39:18Z", "author": {"login": "srnagar"}, "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/CommunicationIdentityClientBuilder.java", "diffHunk": "@@ -203,6 +223,22 @@ private CommunicationIdentityClientImpl createServiceImpl() {\n         return clientBuilder.buildClient();\n     }\n \n+    private HttpPipelinePolicy createHttpPipelineAuthPolicy() {\n+        if (this.tokenCredential != null && this.accessKeyCredential != null) {\n+            throw logger.logExceptionAsError(\n+                new IllegalArgumentException(\"Both 'credential' and 'accessKey' are set. Just one may be used.\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "371d485dc984a7f51783babc64e6c2b8cbe37e4e"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2702, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}