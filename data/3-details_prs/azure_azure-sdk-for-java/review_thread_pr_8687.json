{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjUzMTAy", "number": 8687, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMDowMjozMVrODk3E7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMDowMjozMVrODk3E7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTc3NzA5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/serializer/JacksonAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMDowMjozMlrOFxbC3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzo0MToyM1rOFyBpYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NzY0NA==", "bodyText": "As discussed, please file an issue for further investigation on this. This is good for now to release this as this issue was already noticed in smoke tests and would be better to get this fix out before customers are impacted.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8687#discussion_r387367644", "createdAt": "2020-03-04T00:02:32Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/serializer/JacksonAdapter.java", "diffHunk": "@@ -158,12 +161,17 @@ public String serializeList(List<?> list, CollectionFormat format) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <T> T deserialize(String value, final Type type, SerializerEncoding encoding) throws IOException {\n-        if (value == null || value.isEmpty() || value.equals(BOM)) {\n+        if (CoreUtils.isNullOrEmpty(value) || value.equals(BOM) || value.equals(BOM_STRING)) {\n             return null;\n         }\n-        // Remove BOM\n-        if (value.startsWith(BOM)) {\n-            value = value.replaceFirst(BOM, \"\");\n+\n+        // Remove any leading BOM from the XML.\n+        if (encoding == SerializerEncoding.XML) {\n+            if (value.startsWith(BOM)) {\n+                value = value.replaceFirst(BOM, \"\");\n+            } else if (value.startsWith(BOM_STRING)) {\n+                value = value.replaceFirst(BOM_STRING, \"\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2167018a593fdbaf9696ebb004e5edb189974285"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAwMDA5OA==", "bodyText": "#8710", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8687#discussion_r388000098", "createdAt": "2020-03-04T23:41:23Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/serializer/JacksonAdapter.java", "diffHunk": "@@ -158,12 +161,17 @@ public String serializeList(List<?> list, CollectionFormat format) {\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <T> T deserialize(String value, final Type type, SerializerEncoding encoding) throws IOException {\n-        if (value == null || value.isEmpty() || value.equals(BOM)) {\n+        if (CoreUtils.isNullOrEmpty(value) || value.equals(BOM) || value.equals(BOM_STRING)) {\n             return null;\n         }\n-        // Remove BOM\n-        if (value.startsWith(BOM)) {\n-            value = value.replaceFirst(BOM, \"\");\n+\n+        // Remove any leading BOM from the XML.\n+        if (encoding == SerializerEncoding.XML) {\n+            if (value.startsWith(BOM)) {\n+                value = value.replaceFirst(BOM, \"\");\n+            } else if (value.startsWith(BOM_STRING)) {\n+                value = value.replaceFirst(BOM_STRING, \"\");\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM2NzY0NA=="}, "originalCommit": {"oid": "2167018a593fdbaf9696ebb004e5edb189974285"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 317, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}