{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDY0NDky", "number": 10614, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo0OToxOFrOD4LvCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDozOTozN1rOD6qgOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjM5MTEzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-bom/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo0OToxOFrOGO38qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjo0NDoyOFrOGRF4eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0OTg5Nw==", "bodyText": "Why this is commented out, if this is not needed, should we remove it ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r418249897", "createdAt": "2020-04-30T19:49:18Z", "author": {"login": "hemanttanwar"}, "path": "sdk/spring/azure-spring-boot-bom/pom.xml", "diffHunk": "@@ -0,0 +1,118 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.microsoft.azure</groupId>\n+  <artifactId>azure-spring-boot-bom</artifactId>\n+  <version>2.2.5-beta.1</version>\n+  <packaging>pom</packaging>\n+\n+  <name>Azure Spring Boot BOM</name>\n+  <description>BOM for Microsoft Azure Spring Boot Support</description>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <licenses>\n+    <license>\n+      <name>The MIT License (MIT)</name>\n+      <url>http://opensource.org/licenses/MIT</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+  <developers>\n+    <developer>\n+      <id>microsoft</id>\n+      <name>Microsoft Corporation</name>\n+    </developer>\n+  </developers>\n+\n+  <scm>\n+    <connection>scm:git:git://github.com/azure/azure-sdk-for-java</connection>\n+    <developerConnection>scm:git:git://github.com/azure/azure-sdk-for-java</developerConnection>\n+    <url>https://github.com/azure/azure-sdk-for-java</url>\n+  </scm>\n+\n+  <issueManagement>\n+    <system>GitHub</system>\n+    <url>https://github.com/azure/azure-sdk-for-java/issues</url>\n+  </issueManagement>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>spring-data-cosmosdb</artifactId>\n+        <version>2.2.3.FIX1</version> <!-- {x-version-update;com.microsoft.azure:spring-data-cosmosdb;external_dependency} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.spring.data.gremlin</groupId>\n+        <artifactId>spring-data-gremlin</artifactId>\n+        <version>2.2.3</version> <!-- {x-version-update;com.microsoft.spring.data.gremlin:spring-data-gremlin;external_dependency} -->\n+      </dependency>\n+\n+      <!-- Azure Dependencies Bom -->\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-spring-boot</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-spring-boot;current} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-spring-boot-starter</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-spring-boot-starter;current} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-active-directory-spring-boot-starter</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-active-directory-spring-boot-starter;current} -->\n+      </dependency>\n+      <!--\n+      <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6907c50c8a12598fe36b5b732b427a86a2faec6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3NTM1NA==", "bodyText": "The commented out parts are in following PRs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r420575354", "createdAt": "2020-05-06T06:44:28Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-bom/pom.xml", "diffHunk": "@@ -0,0 +1,118 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.microsoft.azure</groupId>\n+  <artifactId>azure-spring-boot-bom</artifactId>\n+  <version>2.2.5-beta.1</version>\n+  <packaging>pom</packaging>\n+\n+  <name>Azure Spring Boot BOM</name>\n+  <description>BOM for Microsoft Azure Spring Boot Support</description>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <licenses>\n+    <license>\n+      <name>The MIT License (MIT)</name>\n+      <url>http://opensource.org/licenses/MIT</url>\n+      <distribution>repo</distribution>\n+    </license>\n+  </licenses>\n+\n+  <developers>\n+    <developer>\n+      <id>microsoft</id>\n+      <name>Microsoft Corporation</name>\n+    </developer>\n+  </developers>\n+\n+  <scm>\n+    <connection>scm:git:git://github.com/azure/azure-sdk-for-java</connection>\n+    <developerConnection>scm:git:git://github.com/azure/azure-sdk-for-java</developerConnection>\n+    <url>https://github.com/azure/azure-sdk-for-java</url>\n+  </scm>\n+\n+  <issueManagement>\n+    <system>GitHub</system>\n+    <url>https://github.com/azure/azure-sdk-for-java/issues</url>\n+  </issueManagement>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>spring-data-cosmosdb</artifactId>\n+        <version>2.2.3.FIX1</version> <!-- {x-version-update;com.microsoft.azure:spring-data-cosmosdb;external_dependency} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.spring.data.gremlin</groupId>\n+        <artifactId>spring-data-gremlin</artifactId>\n+        <version>2.2.3</version> <!-- {x-version-update;com.microsoft.spring.data.gremlin:spring-data-gremlin;external_dependency} -->\n+      </dependency>\n+\n+      <!-- Azure Dependencies Bom -->\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-spring-boot</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-spring-boot;current} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-spring-boot-starter</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-spring-boot-starter;current} -->\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.azure</groupId>\n+        <artifactId>azure-active-directory-spring-boot-starter</artifactId>\n+        <version>2.2.5-beta.1</version> <!-- {x-version-update;com.microsoft.azure:azure-active-directory-spring-boot-starter;current} -->\n+      </dependency>\n+      <!--\n+      <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0OTg5Nw=="}, "originalCommit": {"oid": "f6907c50c8a12598fe36b5b732b427a86a2faec6"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMjM5MzMyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend-v2/README.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOTo0OTo1OFrOGO3-FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1NDozMlrOGSCkZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MDI2MQ==", "bodyText": "We should put standard text for contributing.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r418250261", "createdAt": "2020-04-30T19:49:58Z", "author": {"login": "hemanttanwar"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend-v2/README.md", "diffHunk": "@@ -0,0 +1,96 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter client library for Java\n+\n+## Key concepts\n+This sample illustrates how to use `azure-active-directory-spring-boot-starter` package to work with OAuth 2.0 and OpenID Connect protocols on Auzre. This sample will use Microsoft Graph API to retrieve user info. This is the key difference from [azure-spring-boot-sample-active-directory-backend](../azure-spring-boot-sample-active-directory-backend/README.md). It's reflected by these configurations in `appication.properties`:\n+```properties\n+azure.activedirectory.environment=global-v2-graph\n+azure.activedirectory.user-group.key=@odata.type\n+azure.activedirectory.user-group.value=#microsoft.graph.group\n+azure.activedirectory.user-group.object-id-key=id\n+```\n+\n+## Getting started\n+\n+### Register your application with your Azure Active Directory Tenant\n+\n+Follow the guide [here](https://docs.microsoft.com/azure/active-directory/develop/quickstart-register-app).\n+\n+### Configure groups for sign in user\n+\n+In order to try the authorization action with this sample with minimum effort, [configure the user and groups in Azure Active Directory](https://docs.microsoft.com/azure/active-directory/active-directory-groups-create-azure-portal), configure the user with `group1`. \n+\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+# It's suggested the logged in user should at least belong to one of the below groups\n+# If not, the logged in user will not be able to access any authorization controller rest APIs\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+### Run with Maven\n+\n+```shell\n+# Under azure-spring-boot project root directory\n+mvn clean install -DskipTests\n+cd azure-spring-boot-samples\n+cd azure-spring-boot-sample-active-directory-backend-v2\n+mvn spring-boot:run\n+```\n+\n+### Check the authentication and authorization\n+\t\n+1. Access http://localhost:8080\n+2. Login\n+3. Access `group1 Message` link, should success\n+4. Access `group2 Message` link, should fail with forbidden error message\n+\n+\n+### <strong>*</strong> Take full control over every configuration property\n+\n+If you want to adjust the configuration properties according to certain requirements, try below application.properties and change accordingly.\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-name=Azure\n+spring.security.oauth2.client.registration.azure.provider=azure-oauth-provider\n+spring.security.oauth2.client.registration.azure.scope=openid, https://graph.microsoft.com/user.read\n+spring.security.oauth2.client.registration.azure.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}\n+spring.security.oauth2.client.registration.azure.client-authentication-method=basic\n+spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code\n+\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/common/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/common/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/common/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/common/discovery/keys\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-name-attribute=name\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+## Troubleshooting\n+\n+### If registered application is not multi-tenanted, how to run this sample?\n+In this auto-configuration, by [default](https://github.com/Microsoft/azure-spring-boot/blob/master/azure-spring-boot/src/main/resources/aad-oauth2-common.properties#L1-L4) `/common` is used for the tenant value. According to [Active Directory Sign In Request format](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-the-sign-in-request), if your application is not multi-tenanted, you have to configure a tenant specific authorization endpoints.\n+\n+Configure endpoints with specific tenant-id by replacing `common` in your application.properties file:\n+```properties\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/{your-tenant-id}/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/{your-tenant-id}/discovery/keys\n+```\n+---\n+### Meet with `AADSTS240002: Input id_token cannot be used as 'urn:ietf:params:oauth:grant-type:jwt-bearer' grant` error.\n+In Azure portal, app registration manifest page, configure `oauth2AllowImplicitFlow` in your application manifest to `true`. See [this issue](https://github.com/MicrosoftDocs/azure-docs/issues/8121#issuecomment-387090099) for details on this workaround.\n+\n+## Next steps\n+## Contributing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6907c50c8a12598fe36b5b732b427a86a2faec6"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3NTgyNQ==", "bodyText": "Should we link to this CONTRIBUTING.md?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r420575825", "createdAt": "2020-05-06T06:45:44Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend-v2/README.md", "diffHunk": "@@ -0,0 +1,96 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter client library for Java\n+\n+## Key concepts\n+This sample illustrates how to use `azure-active-directory-spring-boot-starter` package to work with OAuth 2.0 and OpenID Connect protocols on Auzre. This sample will use Microsoft Graph API to retrieve user info. This is the key difference from [azure-spring-boot-sample-active-directory-backend](../azure-spring-boot-sample-active-directory-backend/README.md). It's reflected by these configurations in `appication.properties`:\n+```properties\n+azure.activedirectory.environment=global-v2-graph\n+azure.activedirectory.user-group.key=@odata.type\n+azure.activedirectory.user-group.value=#microsoft.graph.group\n+azure.activedirectory.user-group.object-id-key=id\n+```\n+\n+## Getting started\n+\n+### Register your application with your Azure Active Directory Tenant\n+\n+Follow the guide [here](https://docs.microsoft.com/azure/active-directory/develop/quickstart-register-app).\n+\n+### Configure groups for sign in user\n+\n+In order to try the authorization action with this sample with minimum effort, [configure the user and groups in Azure Active Directory](https://docs.microsoft.com/azure/active-directory/active-directory-groups-create-azure-portal), configure the user with `group1`. \n+\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+# It's suggested the logged in user should at least belong to one of the below groups\n+# If not, the logged in user will not be able to access any authorization controller rest APIs\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+### Run with Maven\n+\n+```shell\n+# Under azure-spring-boot project root directory\n+mvn clean install -DskipTests\n+cd azure-spring-boot-samples\n+cd azure-spring-boot-sample-active-directory-backend-v2\n+mvn spring-boot:run\n+```\n+\n+### Check the authentication and authorization\n+\t\n+1. Access http://localhost:8080\n+2. Login\n+3. Access `group1 Message` link, should success\n+4. Access `group2 Message` link, should fail with forbidden error message\n+\n+\n+### <strong>*</strong> Take full control over every configuration property\n+\n+If you want to adjust the configuration properties according to certain requirements, try below application.properties and change accordingly.\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-name=Azure\n+spring.security.oauth2.client.registration.azure.provider=azure-oauth-provider\n+spring.security.oauth2.client.registration.azure.scope=openid, https://graph.microsoft.com/user.read\n+spring.security.oauth2.client.registration.azure.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}\n+spring.security.oauth2.client.registration.azure.client-authentication-method=basic\n+spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code\n+\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/common/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/common/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/common/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/common/discovery/keys\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-name-attribute=name\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+## Troubleshooting\n+\n+### If registered application is not multi-tenanted, how to run this sample?\n+In this auto-configuration, by [default](https://github.com/Microsoft/azure-spring-boot/blob/master/azure-spring-boot/src/main/resources/aad-oauth2-common.properties#L1-L4) `/common` is used for the tenant value. According to [Active Directory Sign In Request format](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-the-sign-in-request), if your application is not multi-tenanted, you have to configure a tenant specific authorization endpoints.\n+\n+Configure endpoints with specific tenant-id by replacing `common` in your application.properties file:\n+```properties\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/{your-tenant-id}/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/{your-tenant-id}/discovery/keys\n+```\n+---\n+### Meet with `AADSTS240002: Input id_token cannot be used as 'urn:ietf:params:oauth:grant-type:jwt-bearer' grant` error.\n+In Azure portal, app registration manifest page, configure `oauth2AllowImplicitFlow` in your application manifest to `true`. See [this issue](https://github.com/MicrosoftDocs/azure-docs/issues/8121#issuecomment-387090099) for details on this workaround.\n+\n+## Next steps\n+## Contributing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MDI2MQ=="}, "originalCommit": {"oid": "f6907c50c8a12598fe36b5b732b427a86a2faec6"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2OTYzNg==", "bodyText": "This contributing guide is very specific to azure-sdk-for-java and its related tools. You probably want a guide which talks about how user can contribute to something which is specific to azure-spring-*", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r421569636", "createdAt": "2020-05-07T14:54:32Z", "author": {"login": "hemanttanwar"}, "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-active-directory-backend-v2/README.md", "diffHunk": "@@ -0,0 +1,96 @@\n+# OAuth 2.0 Sample for Azure AD Spring Boot Starter client library for Java\n+\n+## Key concepts\n+This sample illustrates how to use `azure-active-directory-spring-boot-starter` package to work with OAuth 2.0 and OpenID Connect protocols on Auzre. This sample will use Microsoft Graph API to retrieve user info. This is the key difference from [azure-spring-boot-sample-active-directory-backend](../azure-spring-boot-sample-active-directory-backend/README.md). It's reflected by these configurations in `appication.properties`:\n+```properties\n+azure.activedirectory.environment=global-v2-graph\n+azure.activedirectory.user-group.key=@odata.type\n+azure.activedirectory.user-group.value=#microsoft.graph.group\n+azure.activedirectory.user-group.object-id-key=id\n+```\n+\n+## Getting started\n+\n+### Register your application with your Azure Active Directory Tenant\n+\n+Follow the guide [here](https://docs.microsoft.com/azure/active-directory/develop/quickstart-register-app).\n+\n+### Configure groups for sign in user\n+\n+In order to try the authorization action with this sample with minimum effort, [configure the user and groups in Azure Active Directory](https://docs.microsoft.com/azure/active-directory/active-directory-groups-create-azure-portal), configure the user with `group1`. \n+\n+\n+## Examples\n+\n+### Configure application.properties\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+# It's suggested the logged in user should at least belong to one of the below groups\n+# If not, the logged in user will not be able to access any authorization controller rest APIs\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+### Run with Maven\n+\n+```shell\n+# Under azure-spring-boot project root directory\n+mvn clean install -DskipTests\n+cd azure-spring-boot-samples\n+cd azure-spring-boot-sample-active-directory-backend-v2\n+mvn spring-boot:run\n+```\n+\n+### Check the authentication and authorization\n+\t\n+1. Access http://localhost:8080\n+2. Login\n+3. Access `group1 Message` link, should success\n+4. Access `group2 Message` link, should fail with forbidden error message\n+\n+\n+### <strong>*</strong> Take full control over every configuration property\n+\n+If you want to adjust the configuration properties according to certain requirements, try below application.properties and change accordingly.\n+\n+```properties\n+spring.security.oauth2.client.registration.azure.client-id=xxxxxx-your-client-id-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-secret=xxxxxx-your-client-secret-xxxxxx\n+spring.security.oauth2.client.registration.azure.client-name=Azure\n+spring.security.oauth2.client.registration.azure.provider=azure-oauth-provider\n+spring.security.oauth2.client.registration.azure.scope=openid, https://graph.microsoft.com/user.read\n+spring.security.oauth2.client.registration.azure.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}\n+spring.security.oauth2.client.registration.azure.client-authentication-method=basic\n+spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code\n+\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/common/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/common/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/common/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/common/discovery/keys\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-name-attribute=name\n+\n+azure.activedirectory.tenant-id=xxxxxx-your-tenant-id-xxxxxx\n+azure.activedirectory.active-directory-groups=group1, group2\n+```\n+\n+## Troubleshooting\n+\n+### If registered application is not multi-tenanted, how to run this sample?\n+In this auto-configuration, by [default](https://github.com/Microsoft/azure-spring-boot/blob/master/azure-spring-boot/src/main/resources/aad-oauth2-common.properties#L1-L4) `/common` is used for the tenant value. According to [Active Directory Sign In Request format](https://docs.microsoft.com/azure/active-directory/develop/v2-protocols-oidc#send-the-sign-in-request), if your application is not multi-tenanted, you have to configure a tenant specific authorization endpoints.\n+\n+Configure endpoints with specific tenant-id by replacing `common` in your application.properties file:\n+```properties\n+spring.security.oauth2.client.provider.azure-oauth-provider.authorization-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/authorize\n+spring.security.oauth2.client.provider.azure-oauth-provider.token-uri=https://login.microsoftonline.com/{your-tenant-id}/oauth2/token\n+spring.security.oauth2.client.provider.azure-oauth-provider.user-info-uri=https://login.microsoftonline.com/{your-tenant-id}/openid/userinfo\n+spring.security.oauth2.client.provider.azure-oauth-provider.jwk-set-uri=https://login.microsoftonline.com/{your-tenant-id}/discovery/keys\n+```\n+---\n+### Meet with `AADSTS240002: Input id_token cannot be used as 'urn:ietf:params:oauth:grant-type:jwt-bearer' grant` error.\n+In Azure portal, app registration manifest page, configure `oauth2AllowImplicitFlow` in your application manifest to `true`. See [this issue](https://github.com/MicrosoftDocs/azure-docs/issues/8121#issuecomment-387090099) for details on this workaround.\n+\n+## Next steps\n+## Contributing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI1MDI2MQ=="}, "originalCommit": {"oid": "f6907c50c8a12598fe36b5b732b427a86a2faec6"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODQwMzc3OnYy", "diffSide": "RIGHT", "path": "eng/jacoco-test-coverage/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDozOTozN1rOGSn7IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMTozMjowM1rOGS3j9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4MTY2NA==", "bodyText": "If this is a track 1, or data, library it does not belong in here. Jacoco is for track 2, or client libraries only.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r422181664", "createdAt": "2020-05-08T14:39:37Z", "author": {"login": "JimSuplizio"}, "path": "eng/jacoco-test-coverage/pom.xml", "diffHunk": "@@ -187,6 +187,11 @@\n       <artifactId>azure-sdk-template</artifactId>\n       <version>1.0.4-beta.13</version> <!-- {x-version-update;com.azure:azure-sdk-template;current} -->\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c4f279088d322aa2a3ebe4600ffacd07f7daf5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzNzg3OA==", "bodyText": "@JimSuplizio Thanks for the clarification. I'll define the versions of Spring modules in version_client.txt then. We'd like to use track 2 pipelines for Spring modules, but only with the group id azure.microsoft.com for as long as one more release for them.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10614#discussion_r422437878", "createdAt": "2020-05-09T01:32:03Z", "author": {"login": "saragluna"}, "path": "eng/jacoco-test-coverage/pom.xml", "diffHunk": "@@ -187,6 +187,11 @@\n       <artifactId>azure-sdk-template</artifactId>\n       <version>1.0.4-beta.13</version> <!-- {x-version-update;com.azure:azure-sdk-template;current} -->\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4MTY2NA=="}, "originalCommit": {"oid": "8c4f279088d322aa2a3ebe4600ffacd07f7daf5d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4523, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}