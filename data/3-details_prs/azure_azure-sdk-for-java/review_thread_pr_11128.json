{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MTM0NTQ5", "number": 11128, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNzowMFrOD78E6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNzowMFrOD78E6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTc2ODc0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/implementation/BlobContainersImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNzowMFrOGUkbCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoxNzowMFrOGUkbCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyMTQ0OQ==", "bodyText": "Is it deadlock in this recursive function?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11128#discussion_r424221449", "createdAt": "2020-05-13T07:17:00Z", "author": {"login": "ChenTanyi"}, "path": "sdk/storage/mgmt/src/main/java/com/azure/management/storage/implementation/BlobContainersImpl.java", "diffHunk": "@@ -109,10 +101,19 @@ private ImmutabilityPolicyImpl wrapImmutabilityPolicyModel(ImmutabilityPolicyInn\n             .map(this::wrapImmutabilityPolicyModel);\n     }\n \n+    @Override\n+    public Mono<ImmutabilityPolicy> getImmutabilityPolicyAsync(\n+        String resourceGroupName, String accountName, String containerName, String eTagValue) {\n+        BlobContainersInner client = this.inner();\n+        return client\n+            .getImmutabilityPolicyAsync(resourceGroupName, accountName, containerName, eTagValue)\n+            .map(this::wrapImmutabilityPolicyModel);\n+    }\n+\n     @Override\n     public Mono<ImmutabilityPolicyInner> deleteImmutabilityPolicyAsync(\n         String resourceGroupName, String accountName, String containerName) {\n-        return deleteImmutabilityPolicyAsync(resourceGroupName, accountName, containerName, null);\n+        return deleteImmutabilityPolicyAsync(resourceGroupName, accountName, containerName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca43622a15ea2b9494064c0c701d47bd4f96ccfb"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4264, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}