{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzE4Mjc3", "number": 7156, "title": "Adding retry context to diagnostics and moving to JSON format", "bodyText": "Adding retry context to diagnostics which will add information -  retry count , time spent in retry and types of error encountered.\nAlso moving diagnostic format from string builder to json.", "createdAt": "2020-01-06T21:19:26Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156", "merged": true, "mergeCommit": {"oid": "38b5b8f98f357a3f2d07ee7462383f8eadf0ab09"}, "closed": true, "closedAt": "2020-01-29T22:28:45Z", "author": {"login": "simplynaveen20"}, "timelineItems": {"totalCount": 51, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABboCZJxgH2gAyMzU5NzE4Mjc3OjdlNjc2ZGRkZjEzNGZjYjQ1YjczOTg4YmZhZTUyYjFmNGY3MmM1MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-fdfRAH2gAyMzU5NzE4Mjc3OjE0NDJjNThiZjI0MzMyMDlhNDAxN2E0NmU0MmMyZDk3NGYxMmEwOGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e676dddf134fcb45b73988bfae52b1f4f72c52e", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e676dddf134fcb45b73988bfae52b1f4f72c52e", "committedDate": "2019-11-18T22:19:11Z", "message": "Adding system information and gateway diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51052e6b629b2b1e4b527b21070092a1650e850b", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/51052e6b629b2b1e4b527b21070092a1650e850b", "committedDate": "2019-11-18T23:19:10Z", "message": "Adding more data for gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "188b588aa7cc7db9a145fa81f4c8efea72d0338f", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/188b588aa7cc7db9a145fa81f4c8efea72d0338f", "committedDate": "2019-11-19T15:12:04Z", "message": "reverting redundant change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eff99aa2e28e2c51f2269fd166cbd0661e91ebd3", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eff99aa2e28e2c51f2269fd166cbd0661e91ebd3", "committedDate": "2019-11-19T15:34:51Z", "message": "renaming variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "583c65244ede23f9c2355e5cbd497a8536587fb3", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/583c65244ede23f9c2355e5cbd497a8536587fb3", "committedDate": "2019-11-19T19:27:55Z", "message": "resolving comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b2c53da7f82fd428c831779049ddc678d26ee81", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b2c53da7f82fd428c831779049ddc678d26ee81", "committedDate": "2019-11-22T19:56:29Z", "message": "Merge branch 'feature/cosmos/v4' into users/nakumar/systemInformationInDiagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9949edd4eaaa734bb9ae7d620d22a157346542", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/df9949edd4eaaa734bb9ae7d620d22a157346542", "committedDate": "2019-11-25T22:41:27Z", "message": "converting diagnostics to json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de0d0f25314db2339c7af87923e9e792c661c5dc", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/de0d0f25314db2339c7af87923e9e792c661c5dc", "committedDate": "2019-11-25T23:36:37Z", "message": "creating OperatingSystemMXBean during class initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfbc18503ea0db0228f4d92ce84a9e88186c7286", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bfbc18503ea0db0228f4d92ce84a9e88186c7286", "committedDate": "2019-11-26T20:23:40Z", "message": "build fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6434d54740b190d069f2e64f0d06624575b8a03", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a6434d54740b190d069f2e64f0d06624575b8a03", "committedDate": "2019-12-03T00:26:05Z", "message": "Merge branch 'feature/cosmos/v4' into users/nakumar/systemInformationInDiagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1a5b4e70965e9c8725b8409a0d4e345e75a680", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c1a5b4e70965e9c8725b8409a0d4e345e75a680", "committedDate": "2019-12-03T00:37:51Z", "message": "merging and resolving comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d297b789af54766960ce413945270ede6f6fbd02", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d297b789af54766960ce413945270ede6f6fbd02", "committedDate": "2019-12-07T00:42:38Z", "message": "Adding system information and gateway diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18bf691cffd4d08b30dae88a2a5991dcbb221370", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/18bf691cffd4d08b30dae88a2a5991dcbb221370", "committedDate": "2019-12-07T00:42:38Z", "message": "Adding more data for gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6ae4bfdc147cb199d44c94cf1d75236617de70b", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a6ae4bfdc147cb199d44c94cf1d75236617de70b", "committedDate": "2019-12-07T00:42:39Z", "message": "reverting redundant change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269c55ac25f21b05c95f136a0825abd18c63741b", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/269c55ac25f21b05c95f136a0825abd18c63741b", "committedDate": "2019-12-07T00:42:39Z", "message": "renaming variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7931167b9eaf8340254b362d789bf211e8146b9d", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7931167b9eaf8340254b362d789bf211e8146b9d", "committedDate": "2019-12-07T00:42:39Z", "message": "resolving comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e10545c260bdf6dcf700e5d9d28ab0608cd40ce", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e10545c260bdf6dcf700e5d9d28ab0608cd40ce", "committedDate": "2019-12-07T00:42:39Z", "message": "creating OperatingSystemMXBean during class initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbc6aabfff25658f2d2e5e097a929c23b2bf49cf", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbc6aabfff25658f2d2e5e097a929c23b2bf49cf", "committedDate": "2019-12-07T00:42:39Z", "message": "merging and resolving comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28d91257c5cf1cb008e9792ae8321ad716904108", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/28d91257c5cf1cb008e9792ae8321ad716904108", "committedDate": "2019-12-07T00:56:57Z", "message": "resolving comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9422be01337429f2e32aa32926f37528cf83c8d", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9422be01337429f2e32aa32926f37528cf83c8d", "committedDate": "2019-12-07T01:00:57Z", "message": "merge and resolving comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e00c9fb86109468f4e03de9b4890240a8f6055a8", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e00c9fb86109468f4e03de9b4890240a8f6055a8", "committedDate": "2019-12-07T01:35:42Z", "message": "Merge branch 'feature/cosmos/v4' into users/nakumar/systemInformationInDiagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2e612fe474de3ac05e2b05162e634b612691bb4", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e2e612fe474de3ac05e2b05162e634b612691bb4", "committedDate": "2019-12-11T17:52:24Z", "message": "mearging with latest feature branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36236a08a38655d91f1529b584da1e959b4ab787", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/36236a08a38655d91f1529b584da1e959b4ab787", "committedDate": "2019-12-11T17:57:23Z", "message": "merging with parent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf919574a6215cea06a7dac6d86d81843d14dab", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ddf919574a6215cea06a7dac6d86d81843d14dab", "committedDate": "2019-12-13T22:14:40Z", "message": "adding retry context to diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c722c84e21aa4f20f9fecf4bad08d55cc47e9301", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c722c84e21aa4f20f9fecf4bad08d55cc47e9301", "committedDate": "2020-01-06T18:45:24Z", "message": "merging with feature v4 branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c7c070f746e6303b9ac2784020d24e827d6407", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/21c7c070f746e6303b9ac2784020d24e827d6407", "committedDate": "2020-01-06T19:31:09Z", "message": "fixing test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eec380fea9d1d43ef481d5de5b69ce0118be47cf", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eec380fea9d1d43ef481d5de5b69ce0118be47cf", "committedDate": "2020-01-06T21:03:53Z", "message": "adding status and substatus code in retry context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49f9a9b24d178e03a695f5984411af18c689874f", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/49f9a9b24d178e03a695f5984411af18c689874f", "committedDate": "2020-01-06T21:14:58Z", "message": "reverting unintentional change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd2432ab1b80c1d11cd217f3d0a475ce81b3f989", "committedDate": "2020-01-06T21:17:12Z", "message": "removing space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTAzNDkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-338903490", "createdAt": "2020-01-06T21:23:15Z", "commit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToyMzoxNVrOFapoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToyMzoxNVrOFapoog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4OTQ0Mg==", "bodyText": "We could remove IRetryPolicy interface altogether and just use this abstract class as RetryPolicy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r363489442", "createdAt": "2020-01-06T21:23:15Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryPolicyWithDiagnostics.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import java.time.Duration;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public abstract class RetryPolicyWithDiagnostics implements IRetryPolicy{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTA0OTU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-338904959", "createdAt": "2020-01-06T21:26:07Z", "commit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToyNjowN1rOFaps5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToyNjowN1rOFaps5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ5MDUzMg==", "bodyText": "Did manual testing , also planning to add mock tests to verify all the property of RetryContext in both connection mode and on various operations.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r363490532", "createdAt": "2020-01-06T21:26:07Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryContext.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import java.util.List;\n+\n+public class RetryContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c63b91d51baad0d503c9d46f5f4975c2b6599136", "committedDate": "2020-01-13T19:46:48Z", "message": "adding mock tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTA5NzUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-342109752", "createdAt": "2020-01-13T20:13:26Z", "commit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDoxMzoyNlrOFdDNoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDoyNzowNVrOFdDi_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwNTY2NQ==", "bodyText": "ObjectMapper instantiation is very expensive, and this is instantiated per request.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366005665", "createdAt": "2020-01-13T20:13:26Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ClientSideRequestStatistics.java", "diffHunk": "@@ -39,20 +44,25 @@\n         DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\" + \".SSS\").withLocale(Locale.US);\n     private final static OperatingSystemMXBean mbean = (com.sun.management.OperatingSystemMXBean)ManagementFactory.getOperatingSystemMXBean();\n \n-    private final ZonedDateTime requestStartTime;\n-    private ZonedDateTime requestEndTime;\n+    private final ObjectMapper objectMapper = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwNjYzMA==", "bodyText": "toString() should not change the state of the object. This is somewhat an anti-pattern", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366006630", "createdAt": "2020-01-13T20:15:57Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ClientSideRequestStatistics.java", "diffHunk": "@@ -168,63 +183,25 @@ void recordAddressResolutionEnd(String identifier) {\n \n     @Override\n     public String toString() {\n-        StringBuilder stringBuilder = new StringBuilder();\n-\n         //  need to lock in case of concurrent operations. this should be extremely rare since toString()\n         //  should only be called at the end of request.\n         synchronized (this) {\n-\n-            //  first trace request start time, as well as total non-head/headfeed requests made.\n-            stringBuilder.append(\"RequestStartTime: \")\n-                .append(\"\\\"\").append(this.requestStartTime.format(RESPONSE_TIME_FORMATTER)).append(\"\\\"\")\n-                .append(\", \")\n-                .append(\"RequestEndTime: \")\n-                .append(\"\\\"\").append(this.requestEndTime.format(RESPONSE_TIME_FORMATTER)).append(\"\\\"\")\n-                .append(\", \")\n-                .append(\"Duration: \")\n-                .append(Duration.between(requestStartTime, requestEndTime).toMillis())\n-                .append(\" ms, \")\n-                .append(\"Connection Mode : \" + this.connectionMode.toString() + \", \")\n-                .append(\"NUMBER of regions attempted: \")\n-                .append(this.regionsContacted.isEmpty() ? 1 : this.regionsContacted.size())\n-                .append(System.lineSeparator());\n-\n-            //  take all responses here - this should be limited in number and each one contains relevant information.\n-            for (StoreResponseStatistics storeResponseStatistics : this.responseStatisticsList) {\n-                stringBuilder.append(storeResponseStatistics.toString()).append(System.lineSeparator());\n-            }\n-\n-            //  take all responses here - this should be limited in number and each one is important.\n-            for (AddressResolutionStatistics value : this.addressResolutionStatistics.values()) {\n-                stringBuilder.append(value.toString()).append(System.lineSeparator());\n-            }\n-\n+            requestLatency= getRequestLatency().toMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwNjkzOQ==", "bodyText": "failure should be logged using logger", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366006939", "createdAt": "2020-01-13T20:16:42Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/ClientSideRequestStatistics.java", "diffHunk": "@@ -168,63 +183,25 @@ void recordAddressResolutionEnd(String identifier) {\n \n     @Override\n     public String toString() {\n-        StringBuilder stringBuilder = new StringBuilder();\n-\n         //  need to lock in case of concurrent operations. this should be extremely rare since toString()\n         //  should only be called at the end of request.\n         synchronized (this) {\n-\n-            //  first trace request start time, as well as total non-head/headfeed requests made.\n-            stringBuilder.append(\"RequestStartTime: \")\n-                .append(\"\\\"\").append(this.requestStartTime.format(RESPONSE_TIME_FORMATTER)).append(\"\\\"\")\n-                .append(\", \")\n-                .append(\"RequestEndTime: \")\n-                .append(\"\\\"\").append(this.requestEndTime.format(RESPONSE_TIME_FORMATTER)).append(\"\\\"\")\n-                .append(\", \")\n-                .append(\"Duration: \")\n-                .append(Duration.between(requestStartTime, requestEndTime).toMillis())\n-                .append(\" ms, \")\n-                .append(\"Connection Mode : \" + this.connectionMode.toString() + \", \")\n-                .append(\"NUMBER of regions attempted: \")\n-                .append(this.regionsContacted.isEmpty() ? 1 : this.regionsContacted.size())\n-                .append(System.lineSeparator());\n-\n-            //  take all responses here - this should be limited in number and each one contains relevant information.\n-            for (StoreResponseStatistics storeResponseStatistics : this.responseStatisticsList) {\n-                stringBuilder.append(storeResponseStatistics.toString()).append(System.lineSeparator());\n-            }\n-\n-            //  take all responses here - this should be limited in number and each one is important.\n-            for (AddressResolutionStatistics value : this.addressResolutionStatistics.values()) {\n-                stringBuilder.append(value.toString()).append(System.lineSeparator());\n-            }\n-\n+            requestLatency= getRequestLatency().toMillis();\n             //  only take last 10 responses from this list - this has potential of having large number of entries.\n             //  since this is for establishing consistency, we can make do with the last responses to paint a\n             //  meaningful picture.\n             int supplementalResponseStatisticsListCount = this.supplementalResponseStatisticsList.size();\n             int initialIndex =\n                 Math.max(supplementalResponseStatisticsListCount - MAX_SUPPLEMENTAL_REQUESTS_FOR_TO_STRING, 0);\n             if (initialIndex != 0) {\n-                stringBuilder.append(\"  -- Displaying only the last \")\n-                    .append(MAX_SUPPLEMENTAL_REQUESTS_FOR_TO_STRING)\n-                    .append(\" head/headfeed requests. Total head/headfeed requests: \")\n-                    .append(supplementalResponseStatisticsListCount);\n+                this.supplementalResponseStatisticsList.removeAll(this.supplementalResponseStatisticsList.subList(0, initialIndex));\n             }\n-            for (int i = initialIndex; i < supplementalResponseStatisticsListCount; i++) {\n-                stringBuilder.append(this.supplementalResponseStatisticsList.get(i).toString())\n-                    .append(System.lineSeparator());\n+            try {\n+                printSystemInformation();\n+                return objectMapper.writeValueAsString(this);\n+            } catch (JsonProcessingException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwODYwNw==", "bodyText": "please note that shouldRetry() is async and some other methods you added are not async. I don't see a specific issue here, but just please be cautious when mixing these sync vs async methods.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366008607", "createdAt": "2020-01-13T20:20:46Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/IRetryPolicy.java", "diffHunk": "@@ -25,6 +26,20 @@\n     Mono<ShouldRetryResult> shouldRetry(Exception e);\n \n \n+    int getRetryCount();\n+\n+    void incrementRetry();\n+\n+    void captureStartTimeIfNotSet();\n+\n+    void updateEndTime();\n+\n+    Duration getRetryLatency();\n+\n+    void addStatusAndSubStatusCode(int statusCode, int subStatusCode);\n+\n+    List<int[]> getStatusAndSubStatusCodes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMTEzMg==", "bodyText": "please use static import for assertThat so that similar to other tests instead of Assertions.assertThat you do assertThat here and in other tests.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366011132", "createdAt": "2020-01-13T20:27:05Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/RetryContextOnDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,239 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import com.azure.cosmos.ConnectionPolicy;\n+import com.azure.cosmos.ConsistencyLevel;\n+import com.azure.cosmos.CosmosClientException;\n+import com.azure.cosmos.PartitionKey;\n+import com.azure.cosmos.implementation.directconnectivity.StoreResponse;\n+import com.azure.cosmos.rx.TestSuiteBase;\n+import io.reactivex.subscribers.TestSubscriber;\n+import org.assertj.core.api.Assertions;\n+import org.mockito.Matchers;\n+import org.mockito.Mockito;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+import java.lang.reflect.Field;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Function;\n+\n+public class RetryContextOnDiagnosticTest extends TestSuiteBase {\n+    private final static String exceptionText = \"TestException\";\n+    private final static String responseText = \"TestResponse\";\n+    private final static String itemSelfLink = \"dbs/TestDB/colls/TestColl/docs/TestDoc\";\n+    private final static String containerSelfLink = \"dbs/TestDB/colls/TestColl\";\n+\n+    private IRetryPolicy retryPolicy;\n+    private Callable<Mono<StoreResponse>> callbackMethod;\n+    private Function<Quadruple<Boolean, Boolean, Duration, Integer>, Mono<StoreResponse>> parameterizedCallbackMethod;\n+    private Function<Quadruple<Boolean, Boolean, Duration, Integer>, Mono<StoreResponse>> inBackoffAlternateCallbackMethod;\n+    private RxDocumentServiceRequest serviceRequest;\n+\n+    @BeforeClass(groups = \"unit\")\n+    public void RetryContextTest() {\n+        callbackMethod = Mockito.mock(Callable.class);\n+        parameterizedCallbackMethod = Mockito.mock(Function.class);\n+        inBackoffAlternateCallbackMethod = Mockito.mock(Function.class);\n+    }\n+\n+    @Test(groups = {\"simple\"})\n+    public void backoffRetryUtilityExecuteRetryTest() throws Exception {\n+        serviceRequest = RxDocumentServiceRequest.create(OperationType.Read, ResourceType.Document);\n+        retryPolicy = new TestRetryPolicy();\n+        CosmosClientException exception = new CosmosClientException(410, exceptionText);\n+        Mockito.when(callbackMethod.call()).thenThrow(exception, exception, exception, exception, exception)\n+            .thenReturn(Mono.just(new StoreResponse(200, new ArrayList<>(), responseText)));\n+        Mono<StoreResponse> monoResponse = BackoffRetryUtility.executeRetry(callbackMethod, retryPolicy);\n+        StoreResponse response = validateSuccess(monoResponse);\n+\n+        Assertions.assertThat(response.getResponseBody()).isEqualTo(responseText);\n+        Assertions.assertThat(retryPolicy.getRetryCount()).isEqualTo(5);\n+        Assertions.assertThat(retryPolicy.getStatusAndSubStatusCodes().size()).isEqualTo(retryPolicy.getRetryCount());\n+    }\n+\n+    @Test(groups = {\"simple\"})\n+    public void backoffRetryUtilityExecuteRetryWithFailureTest() throws Exception {\n+        serviceRequest = RxDocumentServiceRequest.create(OperationType.Read, ResourceType.Document);\n+        retryPolicy = new TestRetryPolicy();\n+        CosmosClientException exception = new CosmosClientException(410, exceptionText);\n+        Mockito.when(callbackMethod.call()).thenThrow(exception);\n+        ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n+        executor.schedule(() -> {\n+            ((TestRetryPolicy) retryPolicy).noRetry = true;\n+        }, 10, TimeUnit.SECONDS);\n+        Mono<StoreResponse> monoResponse = BackoffRetryUtility.executeRetry(callbackMethod, retryPolicy);\n+        validateFailure(monoResponse);\n+\n+        Assertions.assertThat(retryPolicy.getRetryCount()).isGreaterThanOrEqualTo(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63b91d51baad0d503c9d46f5f4975c2b6599136"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56802f665e6b76f7bdce3a8781e2d51377b6e95d", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/56802f665e6b76f7bdce3a8781e2d51377b6e95d", "committedDate": "2020-01-14T14:39:47Z", "message": "resolving comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e42cbe287709ae5155308b19c52df6351bf2b5", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/50e42cbe287709ae5155308b19c52df6351bf2b5", "committedDate": "2020-01-14T14:54:46Z", "message": "resolving merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e453cbfae6809972d36d2d0cc6f8b0c8f4f0df", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/90e453cbfae6809972d36d2d0cc6f8b0c8f4f0df", "committedDate": "2020-01-14T15:37:05Z", "message": "moving test file to other package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "070ab49dcdcf41d9b786c02bfea31ed275d0e50a", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/070ab49dcdcf41d9b786c02bfea31ed275d0e50a", "committedDate": "2020-01-14T16:05:09Z", "message": "moving test class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODA1ODI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-342805829", "createdAt": "2020-01-14T20:06:55Z", "commit": {"oid": "070ab49dcdcf41d9b786c02bfea31ed275d0e50a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDowNjo1NVrOFdkRNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMDowNjo1NVrOFdkRNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU0NzI1Mw==", "bodyText": "This provides default implementations for all APIs of IRetryPolicy.\nIf we don't plan to use IRetryPolicy altogether, then its fine, but I would suggest keeping it in the code, as it doesn't do any harm, and opens possibilities in future for more development on this if needed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r366547253", "createdAt": "2020-01-14T20:06:55Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryPolicyWithDiagnostics.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import java.time.Duration;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public abstract class RetryPolicyWithDiagnostics implements IRetryPolicy{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4OTQ0Mg=="}, "originalCommit": {"oid": "fd2432ab1b80c1d11cd217f3d0a475ce81b3f989"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0303f21158c61f2d5a41e92f5890e10f803113", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8c0303f21158c61f2d5a41e92f5890e10f803113", "committedDate": "2020-01-22T14:24:43Z", "message": "moving json writer logic out of toString of lientsiderequest diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "123a907d14c5ec40e1a078e57bf7b95132873532", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/123a907d14c5ec40e1a078e57bf7b95132873532", "committedDate": "2020-01-22T15:05:16Z", "message": "resolving merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODA0NzQ0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-346804744", "createdAt": "2020-01-22T18:25:38Z", "commit": {"oid": "123a907d14c5ec40e1a078e57bf7b95132873532"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODoyNTozOVrOFgmVjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODoyOToyNVrOFgmdfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNjg2Mw==", "bodyText": "usually errors are logged with the following pattern\nlogger.error(\"Error while parsing diagnostics\", e)\n\nany reason we are doing something else?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r369726863", "createdAt": "2020-01-22T18:25:39Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosResponseDiagnostics.java", "diffHunk": "@@ -31,7 +38,12 @@ CosmosResponseDiagnostics clientSideRequestStatistics(ClientSideRequestStatistic\n      */\n     @Override\n     public String toString() {\n-        return this.clientSideRequestStatistics.toString();\n+        try {\n+            return objectMapper.writeValueAsString(this.clientSideRequestStatistics);\n+        }catch (JsonProcessingException e) {\n+            logger.error(\"Error while parsing diagnostics \" + e.getOriginalMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123a907d14c5ec40e1a078e57bf7b95132873532"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyODg5NA==", "bodyText": "same question which I had raised offline.\nI see that you have different way of capturing retry info in the direct mode, however here on the outer surface of the SDK we are again capturing the retry info, why do we need to capture the retry info in two different places?\nis this only applicable to GW mode if so it should be in GatewayStoreModel. no?\nsame for all other HttpMethods", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#discussion_r369728894", "createdAt": "2020-01-22T18:29:25Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -658,21 +657,31 @@ private String parentResourceLinkToQueryLink(String parentResouceLink, ResourceT\n                 retryPolicyInstance.onBeforeSendRequest(request);\n             }\n \n-            return this.delete(request).map(response -> toResourceResponse(response, DocumentCollection.class));\n+            return this.delete(request, retryPolicyInstance).map(response -> toResourceResponse(response, DocumentCollection.class));\n \n         } catch (Exception e) {\n             logger.debug(\"Failure in deleting a collection, due to [{}]\", e.getMessage(), e);\n             return Flux.error(e);\n         }\n     }\n \n-    private Flux<RxDocumentServiceResponse> delete(RxDocumentServiceRequest request) {\n+    private Flux<RxDocumentServiceResponse> delete(RxDocumentServiceRequest request, DocumentClientRetryPolicy documentClientRetryPolicy) {\n         populateHeaders(request, HttpConstants.HttpMethods.DELETE);\n+        if(request.requestContext != null && documentClientRetryPolicy.getRetryCount() > 0) {\n+            documentClientRetryPolicy.updateEndTime();\n+            request.requestContext.updateRetryContext(documentClientRetryPolicy);\n+        }\n+\n         return getStoreProxy(request).processMessage(request);\n     }\n \n-    private Flux<RxDocumentServiceResponse> read(RxDocumentServiceRequest request) {\n+    private Flux<RxDocumentServiceResponse> read(RxDocumentServiceRequest request, DocumentClientRetryPolicy documentClientRetryPolicy) {\n         populateHeaders(request, HttpConstants.HttpMethods.GET);\n+        if(request.requestContext != null && documentClientRetryPolicy.getRetryCount() > 0) {\n+            documentClientRetryPolicy.updateEndTime();\n+            request.requestContext.updateRetryContext(documentClientRetryPolicy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123a907d14c5ec40e1a078e57bf7b95132873532"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTM1NzA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7156#pullrequestreview-346935709", "createdAt": "2020-01-22T22:03:59Z", "commit": {"oid": "123a907d14c5ec40e1a078e57bf7b95132873532"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc859aa53d3b3f253481fd63bbac671cce09eedc", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bc859aa53d3b3f253481fd63bbac671cce09eedc", "committedDate": "2020-01-23T23:28:13Z", "message": "inculding last success call time in retry duration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b84054b4501bc2015946dd4a09fbeeeac20617a", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3b84054b4501bc2015946dd4a09fbeeeac20617a", "committedDate": "2020-01-23T23:30:20Z", "message": "logging whole exception instead of message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3dd762f73a21f15d1005771852b0b54091457fa", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a3dd762f73a21f15d1005771852b0b54091457fa", "committedDate": "2020-01-24T16:16:29Z", "message": "fixing test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "914a64481d4e11cc79c0927e484f5633b7ae4fca", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/914a64481d4e11cc79c0927e484f5633b7ae4fca", "committedDate": "2020-01-24T23:17:37Z", "message": "covering mix case of 410s and 429s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43aa48572ce224a0ccca908867a2125ebd812ad7", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/43aa48572ce224a0ccca908867a2125ebd812ad7", "committedDate": "2020-01-25T00:26:03Z", "message": "fixing test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a9ed312b815844558034cf66b8e2da5444fdd6", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/72a9ed312b815844558034cf66b8e2da5444fdd6", "committedDate": "2020-01-25T00:36:09Z", "message": "fixing test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efd75445db99c4ea60ac13b7f6d614cb3fe8e00c", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/efd75445db99c4ea60ac13b7f6d614cb3fe8e00c", "committedDate": "2020-01-27T14:26:44Z", "message": "optimizing number of interface methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c382cbb4492313c3e6e113f2d1f115d3e8d07383", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c382cbb4492313c3e6e113f2d1f115d3e8d07383", "committedDate": "2020-01-27T15:31:46Z", "message": "fixing test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1442c58bf2433209a4017a46e42c2d974f12a08f", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1442c58bf2433209a4017a46e42c2d974f12a08f", "committedDate": "2020-01-27T16:37:30Z", "message": "fixing test case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 675, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}