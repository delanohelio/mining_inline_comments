{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NjU4MDQx", "number": 14669, "title": "Recursive acl", "bodyText": "", "createdAt": "2020-08-31T23:36:13Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669", "merged": true, "mergeCommit": {"oid": "988e69b5a811272c9aea141bb0c80b2eb5a1d5aa"}, "closed": true, "closedAt": "2020-09-09T19:59:28Z", "author": {"login": "rickle-msft"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAQOQIgH2gAyNDc2NjU4MDQxOjU1MGY1NGM1Y2MzNTJkOTljNDYyMzQyODBmOTQxMjU5Y2IzYTZmOTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHQoqYAH2gAyNDc2NjU4MDQxOmZjOGNhMDA3YTVlNzFiZDRkNTY4N2Q5NDBlZTgzN2Y2YjNiODE5Mjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "550f54c5cc352d99c46234280f941259cb3a6f90", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/550f54c5cc352d99c46234280f941259cb3a6f90", "committedDate": "2020-08-19T00:11:17Z", "message": "Implemented setRecursiveAcl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51dd2805102ed120dd66fc5d01d6eb0dea4e2989", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/51dd2805102ed120dd66fc5d01d6eb0dea4e2989", "committedDate": "2020-08-21T22:00:14Z", "message": "Added remove/updateAcl and sync methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2b8e9cebe3a6beea68960f2b685b96fded0015", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bb2b8e9cebe3a6beea68960f2b685b96fded0015", "committedDate": "2020-08-21T23:40:31Z", "message": "Finished implementation. Need to start tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7893381e89660a468b9430809b2a7be125f17b37", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7893381e89660a468b9430809b2a7be125f17b37", "committedDate": "2020-08-31T23:27:46Z", "message": "Finished writing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3016175a893894bd9c0a6bc5bc460a5716df8135", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3016175a893894bd9c0a6bc5bc460a5716df8135", "committedDate": "2020-08-31T23:30:38Z", "message": "Added recordings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDY2MjQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-479066245", "createdAt": "2020-08-31T23:42:33Z", "commit": {"oid": "3016175a893894bd9c0a6bc5bc460a5716df8135"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo0MjozM1rOHKN5-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo0MjozM1rOHKN5-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3NTY0MQ==", "bodyText": "I think our pattern for these are to add what resource it applies to at the beginning. So I think the options for this PR should be prefixed with Path", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r480475641", "createdAt": "2020-08-31T23:42:33Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/RemoveAccessControlRecursiveOptions.java", "diffHunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.file.datalake.models.AccessControlChanges;\n+import com.azure.storage.file.datalake.models.RemovePathAccessControlEntry;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Optional parameters for Remove Access Control Recursive.\n+ */\n+public class RemoveAccessControlRecursiveOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3016175a893894bd9c0a6bc5bc460a5716df8135"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3c8def3516486b447540b244e352db8c8177fcb", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a3c8def3516486b447540b244e352db8c8177fcb", "committedDate": "2020-09-01T14:56:49Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg74' into recursiveAcl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d", "committedDate": "2020-09-01T15:02:10Z", "message": "Renamed options types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODgyMDg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-479882088", "createdAt": "2020-09-01T15:49:46Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0OTo0NlrOHK86HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0OTo0NlrOHK86HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NTcyNA==", "bodyText": "merge remnant", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481245724", "createdAt": "2020-09-01T15:49:46Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/CHANGELOG.md", "diffHunk": "@@ -2,8 +2,10 @@\n \n ## 12.3.0-beta.1 (Unreleased)\n - Added support for the 2019-02-10 service version.\n+- Added support for setting, modifying, and removing ACLs recursively.\n - Added support to schedule file expiration. \n - Added support to specify Arrow Output Serialization when querying a file. \n+>>>>>>> upstream/feature/storage/stg74", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODgyMzk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-479882396", "createdAt": "2020-09-01T15:50:05Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDowNVrOHK87FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MDowNVrOHK87FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NTk3Mw==", "bodyText": "I know this is probably my bad but can you change that to 2020?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481245973", "createdAt": "2020-09-01T15:50:05Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/CHANGELOG.md", "diffHunk": "@@ -2,8 +2,10 @@\n \n ## 12.3.0-beta.1 (Unreleased)\n - Added support for the 2019-02-10 service version.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODg1NjI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-479885629", "createdAt": "2020-09-01T15:52:33Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MjozM1rOHK9BmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo1MjozM1rOHK9BmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0NzY0MA==", "bodyText": "Can we make this something like Recursively sets access control on a path and its subpaths, and so on? Right now it could read as just 2 levels", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481247640", "createdAt": "2020-09-01T15:52:33Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/DataLakePathAsyncClient.java", "diffHunk": "@@ -635,6 +649,260 @@ public DataLakeServiceVersion getServiceVersion() {\n                 response.getDeserializedHeaders().getLastModified())));\n     }\n \n+    /**\n+     * Sets the access control on a path and subpaths.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDEyMzYz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480012363", "createdAt": "2020-09-01T18:32:59Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozMzowMFrOHLDNcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozMzowMFrOHLDNcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0ODk3OQ==", "bodyText": "Should we do the try catch error thing here so we can log it?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481348979", "createdAt": "2020-09-01T18:33:00Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/DataLakePathClient.java", "diffHunk": "@@ -354,6 +362,140 @@ public PathInfo setPermissions(PathPermissions permissions, String group, String\n         return StorageImplUtils.blockWithOptionalTimeout(response, timeout);\n     }\n \n+    /**\n+     * Sets the access control on a path and subpaths.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.datalake.DataLakePathClient.setAccessControlRecursive#List}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\">Azure Docs</a></p>\n+     *\n+     * @param accessControlList The POSIX access control list for the file or directory.\n+     * @return The result of the operation.\n+     */\n+    public AccessControlChangeResult setAccessControlRecursive(List<PathAccessControlEntry> accessControlList) {\n+        return setAccessControlRecursiveWithResponse(new DirectorySetAccessControlRecursiveOptions(accessControlList), null,\n+            Context.NONE).getValue();\n+    }\n+\n+    /**\n+     * Sets the access control on a path and subpaths.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.datalake.DataLakePathClient.setAccessControlRecursive#SetAccessControlRecursiveOptions-Duration-Context}\n+     *\n+     * <p>For more information, see the\n+     * <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\">Azure Docs</a></p>\n+     *\n+     * @param options {@link DirectorySetAccessControlRecursiveOptions}\n+     * @param timeout An optional timeout value beyond which a {@link RuntimeException} will be raised.\n+     * @param context Additional context that is passed through the Http pipeline during the service call.\n+     * @return A response containing the result of the operation.\n+     */\n+    public Response<AccessControlChangeResult> setAccessControlRecursiveWithResponse(\n+        DirectorySetAccessControlRecursiveOptions options, Duration timeout, Context context) {\n+        Mono<Response<AccessControlChangeResult>> response =\n+            dataLakePathAsyncClient.setAccessControlRecursiveWithResponse(\n+                PathAccessControlEntry.serializeList(options.getAccessControlList()), options.getProgressHandler(),\n+                PathSetAccessControlRecursiveMode.SET, options.getBatchSize(), options.getMaxBatches(),\n+                options.isContinuingOnFailure(), options.getContinuationToken(), context);\n+\n+        return StorageImplUtils.blockWithOptionalTimeout(response, timeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDE4NjI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480018629", "createdAt": "2020-09-01T18:42:20Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MjoyMVrOHLDgbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MjoyMVrOHLDgbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MzgzNg==", "bodyText": "operation continues till end or error", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481353836", "createdAt": "2020-09-01T18:42:21Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/DirectoryUpdateAccessControlRecursiveOptions.java", "diffHunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.file.datalake.models.AccessControlChanges;\n+import com.azure.storage.file.datalake.models.PathAccessControlEntry;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Optional parameters for Update Access Control Recursive.\n+ */\n+public class DirectoryUpdateAccessControlRecursiveOptions {\n+    private final List<PathAccessControlEntry> accessControlList;\n+    private Integer batchSize;\n+    private Integer maxBatches;\n+    private Consumer<Response<AccessControlChanges>> progressHandler;\n+    private String continuationToken;\n+    private boolean continueOnFailure;\n+\n+    /**\n+     * Constructs a new options object.\n+     * @param accessControlList The POSIX access control list for the file or directory.\n+     */\n+    public DirectoryUpdateAccessControlRecursiveOptions(List<PathAccessControlEntry> accessControlList) {\n+        this.accessControlList = Collections.unmodifiableList(accessControlList);\n+    }\n+\n+    /**\n+     * Returns the POSIX access control list for the file or directory.\n+     *\n+     * @return The POSIX access control list for the file or directory.\n+     */\n+    public List<PathAccessControlEntry> getAccessControlList() {\n+        return accessControlList;\n+    }\n+\n+    /**\n+     * Gets the batch size.\n+     * <p>\n+     * If data set size exceeds batch size then operation will be split into multiple requests so that progress can be\n+     * tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000.\n+     *\n+     * @return The size of the batch.\n+     */\n+    public Integer getBatchSize() {\n+        return batchSize;\n+    }\n+\n+    /**\n+     * Sets the batch size.\n+     * <p>\n+     * If data set size exceeds batch size then operation will be split into multiple requests so that progress can be\n+     * tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000.\n+     *\n+     * @param batchSize The size of the batch.\n+     * @return The updated object.\n+     */\n+    public DirectoryUpdateAccessControlRecursiveOptions setBatchSize(Integer batchSize) {\n+        this.batchSize = batchSize;\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the maximum number of batches that single change Access Control operation can execute.\n+     * <p>\n+     * If maximum is reached before all subpaths are processed then continuation token can be used to resume operation.\n+     * Empty value indicates that maximum number of batches in unbound and operation continues till end.\n+     *\n+     * @return The maximum number of batches.\n+     */\n+    public Integer getMaxBatches() {\n+        return maxBatches;\n+    }\n+\n+    /**\n+     * Sets the maximum number of batches that single change Access Control operation can execute.\n+     * <p>\n+     * If maximum is reached before all subpaths are processed then continuation token can be used to resume operation.\n+     * Empty value indicates that maximum number of batches in unbound and operation continues till end.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDE5MDg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480019087", "createdAt": "2020-09-01T18:43:04Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MzowNFrOHLDhug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MzowNFrOHLDhug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1NDE3MA==", "bodyText": "return Collections.unmodifiable list here as well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481354170", "createdAt": "2020-09-01T18:43:04Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/DirectoryUpdateAccessControlRecursiveOptions.java", "diffHunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.file.datalake.models.AccessControlChanges;\n+import com.azure.storage.file.datalake.models.PathAccessControlEntry;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Optional parameters for Update Access Control Recursive.\n+ */\n+public class DirectoryUpdateAccessControlRecursiveOptions {\n+    private final List<PathAccessControlEntry> accessControlList;\n+    private Integer batchSize;\n+    private Integer maxBatches;\n+    private Consumer<Response<AccessControlChanges>> progressHandler;\n+    private String continuationToken;\n+    private boolean continueOnFailure;\n+\n+    /**\n+     * Constructs a new options object.\n+     * @param accessControlList The POSIX access control list for the file or directory.\n+     */\n+    public DirectoryUpdateAccessControlRecursiveOptions(List<PathAccessControlEntry> accessControlList) {\n+        this.accessControlList = Collections.unmodifiableList(accessControlList);\n+    }\n+\n+    /**\n+     * Returns the POSIX access control list for the file or directory.\n+     *\n+     * @return The POSIX access control list for the file or directory.\n+     */\n+    public List<PathAccessControlEntry> getAccessControlList() {\n+        return accessControlList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDE5Mzkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480019390", "createdAt": "2020-09-01T18:43:30Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MzozMFrOHLDimQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0MzozMFrOHLDimQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1NDM5Mw==", "bodyText": "Should we add a null check here? or protect the call to Collections.unmodifiable list", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481354393", "createdAt": "2020-09-01T18:43:30Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/DirectoryUpdateAccessControlRecursiveOptions.java", "diffHunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.file.datalake.models.AccessControlChanges;\n+import com.azure.storage.file.datalake.models.PathAccessControlEntry;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Optional parameters for Update Access Control Recursive.\n+ */\n+public class DirectoryUpdateAccessControlRecursiveOptions {\n+    private final List<PathAccessControlEntry> accessControlList;\n+    private Integer batchSize;\n+    private Integer maxBatches;\n+    private Consumer<Response<AccessControlChanges>> progressHandler;\n+    private String continuationToken;\n+    private boolean continueOnFailure;\n+\n+    /**\n+     * Constructs a new options object.\n+     * @param accessControlList The POSIX access control list for the file or directory.\n+     */\n+    public DirectoryUpdateAccessControlRecursiveOptions(List<PathAccessControlEntry> accessControlList) {\n+        this.accessControlList = Collections.unmodifiableList(accessControlList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDE5NjY5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480019669", "createdAt": "2020-09-01T18:43:56Z", "commit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0Mzo1NlrOHLDjgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODo0Mzo1NlrOHLDjgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1NDYyNA==", "bodyText": "nit new line", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481354624", "createdAt": "2020-09-01T18:43:56Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/swagger/README.md", "diffHunk": "@@ -87,6 +87,22 @@ directive:\n     }\n ```\n \n+### Adds FileSystem and Path parameter to /{filesystem}/{path}?action=setAccessControlRecursive\n+``` yaml\n+directive:\n+- from: swagger-document\n+  where: $[\"x-ms-paths\"][\"/{filesystem}/{path}?action=setAccessControlRecursive\"].patch\n+  transform: >\n+    let param = $.parameters[0];\n+    if (!param[\"$ref\"].endsWith(\"FileSystem\")) {\n+        const fileSystemPath = param[\"$ref\"].replace(/[#].*$/, \"#/parameters/FileSystem\");\n+        const pathPath = param[\"$ref\"].replace(/[#].*$/, \"#/parameters/Path\");\n+        $.parameters.splice(0, 0, { \"$ref\": fileSystemPath });\n+        $.parameters.splice(1, 0, { \"$ref\": pathPath });\n+    }\n+```\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "024623bdcab7e8fbd4b22c1eac3d2cf4f529f45d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ead15e99b75de67ab372ca420e5165a2afa184f", "committedDate": "2020-09-01T18:58:18Z", "message": "Added javadoc codesnippets. Added file tests and recordings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDM2MzQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480036345", "createdAt": "2020-09-01T19:04:19Z", "commit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTowNDoxOVrOHLEZRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTowNDoxOVrOHLEZRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM2ODM4OA==", "bodyText": "This sounds kinda weird. Do we have other examples of this? It feels more normal to call this setIsDirectory", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481368388", "createdAt": "2020-09-01T19:04:19Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/models/AccessControlChangeFailure.java", "diffHunk": "@@ -0,0 +1,73 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.models;\n+\n+/**\n+ * Represents an entry that failed to update Access Control List.\n+ */\n+public class AccessControlChangeFailure {\n+    private String name;\n+    private boolean isDirectory;\n+    public String errorMessage;\n+\n+    /**\n+     * Returns the name of an entry.\n+     *\n+     * @return The name of an entry.\n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Sets the name of an entry.\n+     *\n+     * @param name The name of an entry.\n+     * @return The updated object.\n+     */\n+    public AccessControlChangeFailure setName(String name) {\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns whether entry is a directory.\n+     *\n+     * @return Whether the entry is a directory.\n+     */\n+    public boolean isDirectory() {\n+        return isDirectory;\n+    }\n+\n+    /**\n+     * Sets whether entry is a directory.\n+     *\n+     * @param directory Whether entry is a directory.\n+     * @return The updated object.\n+     */\n+    public AccessControlChangeFailure setDirectory(boolean directory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDUwMTg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480050188", "createdAt": "2020-09-01T19:25:28Z", "commit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyNToyOFrOHLFEFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyNToyOFrOHLFEFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3OTM1MQ==", "bodyText": "Same as with the isDirectory, this probably sounds better as setIsDefaultScope?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481379351", "createdAt": "2020-09-01T19:25:28Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/models/PathRemoveAccessControlEntry.java", "diffHunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.storage.file.datalake.models;\n+\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import static com.azure.storage.file.datalake.models.PathAccessControlEntry.ACCESS_CONTROL_ENTRY_INVALID_SCOPE;\n+import static com.azure.storage.file.datalake.models.PathAccessControlEntry.DEFAULT_SCOPE;\n+\n+public class PathRemoveAccessControlEntry {\n+    private boolean defaultScope;\n+    private AccessControlType accessControlType;\n+    private String entityId;\n+\n+    /**\n+     * Indicates whether this is the default entry for the ACL.\n+     *\n+     * @return Whether this is the default entry for the ACL.\n+     */\n+    public boolean isDefaultScope() {\n+        return defaultScope;\n+    }\n+\n+    /**\n+     * Sets whether this is the default entry for the ACL.\n+     *\n+     * @param defaultScope Whether this is the default entry for the ACL.\n+     * @return The updated object.\n+     */\n+    public PathRemoveAccessControlEntry setDefaultScope(boolean defaultScope) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDUxODY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480051864", "createdAt": "2020-09-01T19:27:56Z", "commit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyNzo1NlrOHLFIvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyNzo1NlrOHLFIvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MDU0Mg==", "bodyText": "typo - remove", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481380542", "createdAt": "2020-09-01T19:27:56Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/samples/java/com/azure/storage/file/datalake/PathAsyncClientJavaDocCodeSamples.java", "diffHunk": "@@ -185,6 +192,151 @@ public void setAccessControlWithResponseCodeSnippets() {\n         // END: com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlListWithResponse#List-String-String-DataLakeRequestConditions\n     }\n \n+    /**\n+     * Code snippets for {@link DataLakePathAsyncClient#setAccessControlRecursive(List)}\n+     */\n+    public void setAccessControlRecursiveCodeSnippets() {\n+        // BEGIN: com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursive#List\n+        PathAccessControlEntry pathAccessControlEntry = new PathAccessControlEntry()\n+            .setEntityId(\"entityId\")\n+            .setPermissions(new RolePermissions().setReadPermission(true));\n+        List<PathAccessControlEntry> pathAccessControlEntries = new ArrayList<>();\n+        pathAccessControlEntries.add(pathAccessControlEntry);\n+\n+        client.setAccessControlRecursive(pathAccessControlEntries).subscribe(\n+            response -> System.out.printf(\"Successful changed file operations: %d\",\n+                response.getCounters().getChangedFilesCount()));\n+        // END: com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursive#List\n+    }\n+\n+    /**\n+     * Code snippets for {@link DataLakePathAsyncClient#setAccessControlRecursiveWithResponse(PathSetAccessControlRecursiveOptions)}\n+     */\n+    public void setAccessControlRecursiveWithResponseCodeSnippets() {\n+        // BEGIN: com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse#PathSetAccessControlRecursiveOptions\n+        PathAccessControlEntry pathAccessControlEntry = new PathAccessControlEntry()\n+            .setEntityId(\"entityId\")\n+            .setPermissions(new RolePermissions().setReadPermission(true));\n+        List<PathAccessControlEntry> pathAccessControlEntries = new ArrayList<>();\n+        pathAccessControlEntries.add(pathAccessControlEntry);\n+\n+        Integer batchSize = 2;\n+        Integer maxBatches = 10;\n+        boolean continueOnFailure = false;\n+        String continuationToken = null;\n+        Consumer<Response<AccessControlChanges>> progressHandler =\n+            response -> System.out.println(\"Received response\");\n+\n+        PathSetAccessControlRecursiveOptions options =\n+            new PathSetAccessControlRecursiveOptions(pathAccessControlEntries)\n+                .setBatchSize(batchSize)\n+                .setMaxBatches(maxBatches)\n+                .setContinueOnFailure(continueOnFailure)\n+                .setContinuationToken(continuationToken)\n+                .setProgressHandler(progressHandler);\n+\n+        client.setAccessControlRecursive(pathAccessControlEntries).subscribe(\n+            response -> System.out.printf(\"Successful changed file operations: %d\",\n+                response.getCounters().getChangedFilesCount()));\n+        // END: com.azure.storage.file.datalake.DataLakePathAsyncClient.setAccessControlRecursiveWithResponse#PathSetAccessControlRecursiveOptions\n+    }\n+\n+    /**\n+     * Code snippets for {@link DataLakePathAsyncClient#updateAccessControlRecursive(List)}\n+     */\n+    public void updateAccessControlRecursiveCodeSnippets() {\n+        // BEGIN: com.azure.storage.file.datalake.DataLakePathAsyncClient.updateAccessControlRecursive#List\n+        PathAccessControlEntry pathAccessControlEntry = new PathAccessControlEntry()\n+            .setEntityId(\"entityId\")\n+            .setPermissions(new RolePermissions().setReadPermission(true));\n+        List<PathAccessControlEntry> pathAccessControlEntries = new ArrayList<>();\n+        pathAccessControlEntries.add(pathAccessControlEntry);\n+\n+        client.updateAccessControlRecursive(pathAccessControlEntries).subscribe(\n+            response -> System.out.printf(\"Successful changed file operations: %d\",\n+                response.getCounters().getChangedFilesCount()));\n+        // END: com.azure.storage.file.datalake.DataLakePathAsyncClient.updateAccessControlRecursive#List\n+    }\n+\n+    /**\n+     * Code snippets for {@link DataLakePathAsyncClient#updateAccessControlRecursiveWithResponse(PathUpdateAccessControlRecursiveOptions)}\n+     */\n+    public void updateAccessControlRecursiveWithResponseCodeSnippets() {\n+        // BEGIN: com.azure.storage.file.datalake.DataLakePathAsyncClient.updateAccessControlRecursiveWithResponse#PathUpdateAccessControlRecursiveOptions\n+        PathAccessControlEntry pathAccessControlEntry = new PathAccessControlEntry()\n+            .setEntityId(\"entityId\")\n+            .setPermissions(new RolePermissions().setReadPermission(true));\n+        List<PathAccessControlEntry> pathAccessControlEntries = new ArrayList<>();\n+        pathAccessControlEntries.add(pathAccessControlEntry);\n+\n+        Integer batchSize = 2;\n+        Integer maxBatches = 10;\n+        boolean continueOnFailure = false;\n+        String continuationToken = null;\n+        Consumer<Response<AccessControlChanges>> progressHandler =\n+            response -> System.out.println(\"Received response\");\n+\n+        PathUpdateAccessControlRecursiveOptions options =\n+            new PathUpdateAccessControlRecursiveOptions(pathAccessControlEntries)\n+                .setBatchSize(batchSize)\n+                .setMaxBatches(maxBatches)\n+                .setContinueOnFailure(continueOnFailure)\n+                .setContinuationToken(continuationToken)\n+                .setProgressHandler(progressHandler);\n+\n+        client.updateAccessControlRecursive(pathAccessControlEntries).subscribe(\n+            response -> System.out.printf(\"Successful changed file operations: %d\",\n+                response.getCounters().getChangedFilesCount()));\n+        // END: com.azure.storage.file.datalake.DataLakePathAsyncClientWithResponse.updateAccessControlRecursive#PathUpdateAccessControlRecursiveOptions\n+    }\n+\n+    /**\n+     * Code snippets for {@link DataLakePathAsyncClient#removeAccessControlRecursive(List)}\n+     */\n+    public void removetAccessControlRecursiveCodeSnippets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDUzNjQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-480053646", "createdAt": "2020-09-01T19:30:32Z", "commit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTozMDozMlrOHLFOMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTozMDozMlrOHLFOMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MTkzNg==", "bodyText": "Can we have some tests on File? Maybe just a min test?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r481381936", "createdAt": "2020-09-01T19:30:32Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/DirectoryAPITest.groovy", "diffHunk": "@@ -434,6 +444,786 @@ class DirectoryAPITest extends APISpec {\n         thrown(DataLakeStorageException)\n     }\n \n+    def \"Set ACL recursive min\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ead15e99b75de67ab372ca420e5165a2afa184f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb447047eef98d5ba4272d01deeefaeb854f7200", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eb447047eef98d5ba4272d01deeefaeb854f7200", "committedDate": "2020-09-01T20:49:38Z", "message": "Added file missing from git"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a904a506368b27efe34c391f419a00289b797c4", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6a904a506368b27efe34c391f419a00289b797c4", "committedDate": "2020-09-01T21:35:07Z", "message": "ci analyze fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d023060e264081f30bf229daa1a1917af3588bbc", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d023060e264081f30bf229daa1a1917af3588bbc", "committedDate": "2020-09-01T22:39:43Z", "message": "Updated tags for snippets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10837f8114f6cf9025aed47cc3972374d35810fd", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/10837f8114f6cf9025aed47cc3972374d35810fd", "committedDate": "2020-09-01T23:13:23Z", "message": "ditto"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13fbf34d7294d7dafd033cdecd34dd35ec66f96e", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/13fbf34d7294d7dafd033cdecd34dd35ec66f96e", "committedDate": "2020-09-02T00:15:18Z", "message": "Spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9cf7cd2c1d27c018e0e81d01c7565f95c54b767", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b9cf7cd2c1d27c018e0e81d01c7565f95c54b767", "committedDate": "2020-09-02T14:52:02Z", "message": "Spotbugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjUwNjc1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-481250675", "createdAt": "2020-09-02T19:52:46Z", "commit": {"oid": "b9cf7cd2c1d27c018e0e81d01c7565f95c54b767"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1Mjo0NlrOHMBnGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1Mjo0NlrOHMBnGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MTM1NQ==", "bodyText": "This needs a </p> to end the paragraph somewhere. Same for the rest of the PR where there's lonely <p>'s", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#discussion_r482371355", "createdAt": "2020-09-02T19:52:46Z", "author": {"login": "amnguye"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/models/AccessControlChanges.java", "diffHunk": "@@ -0,0 +1,97 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.models;\n+\n+/**\n+ * AccessControlChanges contains batch and cumulative counts of operations that change Access Control Lists recursively.\n+ * Additionally it exposes path entries that failed to update while these operations progress.\n+ */\n+public class AccessControlChanges {\n+    private Iterable<AccessControlChangeFailure> batchFailures;\n+    private AccessControlChangeCounters batchCounters;\n+    private AccessControlChangeCounters aggregateCounters;\n+    private String continuationToken;\n+\n+    /**\n+     * Returns an iterable of path entries that failed to update Access Control List within a single batch.\n+     *\n+     * @return An iterable of path entries that failed to update Access Control List within a single batch.\n+     */\n+    public Iterable<AccessControlChangeFailure> getBatchFailures() {\n+        return batchFailures;\n+    }\n+\n+    /**\n+     * Sets an iterable of path entries that failed to update Access Control List within a single batch.\n+     *\n+     * @param batchFailures An iterable of path entries that failed to update Access Control List within a single batch.\n+     * @return The updated object\n+     */\n+    public AccessControlChanges setBatchFailures(Iterable<AccessControlChangeFailure> batchFailures) {\n+        this.batchFailures = batchFailures;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns an {@link AccessControlChangeCounters} that contains counts of paths changed within a single batch.\n+     *\n+     * @return {@link AccessControlChangeCounters}\n+     */\n+    public AccessControlChangeCounters getBatchCounters() {\n+        return batchCounters;\n+    }\n+\n+    /**\n+     * Sets an {@link AccessControlChangeCounters} that contains counts of paths changed within a single batch.\n+     *\n+     * @param batchCounters {@link AccessControlChangeCounters}\n+     * @return The updated object.\n+     */\n+    public AccessControlChanges setBatchCounters(AccessControlChangeCounters batchCounters) {\n+        this.batchCounters = batchCounters;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns an {@link AccessControlChangeCounters} that contains counts of paths changed from start of the operation.\n+     *\n+     * @return {@link AccessControlChangeCounters}\n+     */\n+    public AccessControlChangeCounters getAggregateCounters() {\n+        return aggregateCounters;\n+    }\n+\n+    /**\n+     * Sets an {@link AccessControlChangeCounters} that contains counts of paths changed from start of the operation.\n+     *\n+     * @param aggregateCounters {@link AccessControlChangeCounters}\n+     * @return The updated object.\n+     */\n+    public AccessControlChanges setAggregateCounters(AccessControlChangeCounters aggregateCounters) {\n+        this.aggregateCounters = aggregateCounters;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns the continuation token.\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9cf7cd2c1d27c018e0e81d01c7565f95c54b767"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd5704aaa7271038beecb66f1f27416ba8566203", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dd5704aaa7271038beecb66f1f27416ba8566203", "committedDate": "2020-09-02T23:53:45Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a3dbd64f979d9bcde55aa5ce844fc193e863d8", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/12a3dbd64f979d9bcde55aa5ce844fc193e863d8", "committedDate": "2020-09-02T23:54:02Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg74' into recursiveAcl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed4fdb21c8df2c58abe0e8f8f8942cf6e0727305", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed4fdb21c8df2c58abe0e8f8f8942cf6e0727305", "committedDate": "2020-09-03T16:18:22Z", "message": "Fixed broken copy method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMDc1Njg3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-482075687", "createdAt": "2020-09-03T17:57:20Z", "commit": {"oid": "ed4fdb21c8df2c58abe0e8f8f8942cf6e0727305"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyODgyMTgw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14669#pullrequestreview-482882180", "createdAt": "2020-09-04T18:58:47Z", "commit": {"oid": "ed4fdb21c8df2c58abe0e8f8f8942cf6e0727305"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdb1a85b5d0e9c94122206bde244507d146b88a0", "author": {"user": {"login": "rickle-msft", "name": "Rick Ley"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fdb1a85b5d0e9c94122206bde244507d146b88a0", "committedDate": "2020-09-08T17:40:05Z", "message": "Updated options to be strictly fluent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc8ca007a5e71bd4d5687d940ee837f6b3b81927", "author": {"user": {"login": "gapra-msft", "name": "Gauri Prasad"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fc8ca007a5e71bd4d5687d940ee837f6b3b81927", "committedDate": "2020-09-09T18:37:36Z", "message": "Merge branch 'feature/storage/stg74' into recursiveAcl"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}