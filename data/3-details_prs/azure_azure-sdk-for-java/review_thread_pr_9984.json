{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTEwMDI5", "number": 9984, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTo1NTo0N1rODwp8kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjozMTowNFrOEPVAqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzQ1NDkxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTo1NTo0N1rOGDxxzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMTowMFrOGIeelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNDQ3OA==", "bodyText": "I see most of the classes here public - does this mean they are visible in the package or outside as well? We should try to restrict classes not needed in the public contract.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406614478", "createdAt": "2020-04-10T05:55:47Z", "author": {"login": "abhijitpai"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java", "diffHunk": "@@ -0,0 +1,112 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.ShortBufferException;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.Closeable;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class AesCryptoServiceProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTE0Mg==", "bodyText": "addressed. I made most of the classes to be package private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541142", "createdAt": "2020-04-20T17:01:00Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java", "diffHunk": "@@ -0,0 +1,112 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.ShortBufferException;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.Closeable;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class AesCryptoServiceProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNDQ3OA=="}, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzQ1OTc2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTo1ODo1NFrOGDx0nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMToyMlrOGIefmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTE5Ng==", "bodyText": "sensitive2?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615196", "createdAt": "2020-04-10T05:58:54Z", "author": {"login": "abhijitpai"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java", "diffHunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos;\n+\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256Algorithm;\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256EncryptionKey;\n+import com.azure.cosmos.implementation.encryption.EncryptionType;\n+import com.azure.cosmos.implementation.encryption.TestUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava25.collect.ImmutableList;\n+import com.azure.cosmos.models.CosmosItemRequestOptions;\n+import com.azure.cosmos.models.CosmosItemResponse;\n+import com.azure.cosmos.models.ModelBridgeInternal;\n+import com.azure.cosmos.models.PartitionKey;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.UUID;\n+\n+/**\n+ * Code snippets for {@link ChangeFeedProcessor}\n+ */\n+public class EncryptionCodeSnippet {\n+\n+    public void encryptionSample() {\n+        CosmosClientBuilder builder = new CosmosClientBuilder();\n+\n+        CosmosClient client = builder.key(\"key\")\n+            .endpoint(\"endpoint\")\n+            .dataEncryptionKeyProvider(naiveDataEncryptionKeyProvider())\n+            .buildClient();\n+\n+\n+        CosmosContainer container = client.getDatabase(\"myDb\").getContainer(\"myCol\");\n+\n+        Pojo pojo = new Pojo();\n+        pojo.id = UUID.randomUUID().toString();\n+        pojo.mypk = UUID.randomUUID().toString();\n+        pojo.nonSensitive = UUID.randomUUID().toString();\n+        pojo.sensitive1 = \"this is a secret to be encrypted\";\n+        pojo.sensitive1 = \"this is a another secret to be encrypted\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTQwMg==", "bodyText": "thanks addressed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541402", "createdAt": "2020-04-20T17:01:22Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java", "diffHunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos;\n+\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256Algorithm;\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256EncryptionKey;\n+import com.azure.cosmos.implementation.encryption.EncryptionType;\n+import com.azure.cosmos.implementation.encryption.TestUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava25.collect.ImmutableList;\n+import com.azure.cosmos.models.CosmosItemRequestOptions;\n+import com.azure.cosmos.models.CosmosItemResponse;\n+import com.azure.cosmos.models.ModelBridgeInternal;\n+import com.azure.cosmos.models.PartitionKey;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.UUID;\n+\n+/**\n+ * Code snippets for {@link ChangeFeedProcessor}\n+ */\n+public class EncryptionCodeSnippet {\n+\n+    public void encryptionSample() {\n+        CosmosClientBuilder builder = new CosmosClientBuilder();\n+\n+        CosmosClient client = builder.key(\"key\")\n+            .endpoint(\"endpoint\")\n+            .dataEncryptionKeyProvider(naiveDataEncryptionKeyProvider())\n+            .buildClient();\n+\n+\n+        CosmosContainer container = client.getDatabase(\"myDb\").getContainer(\"myCol\");\n+\n+        Pojo pojo = new Pojo();\n+        pojo.id = UUID.randomUUID().toString();\n+        pojo.mypk = UUID.randomUUID().toString();\n+        pojo.nonSensitive = UUID.randomUUID().toString();\n+        pojo.sensitive1 = \"this is a secret to be encrypted\";\n+        pojo.sensitive1 = \"this is a another secret to be encrypted\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTE5Ng=="}, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzQ2MTkzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjowMDoxNFrOGDx11A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMToxM1rOGIefNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTUwOA==", "bodyText": "Maybe InMemoryKeyProvider instead of Java", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615508", "createdAt": "2020-04-10T06:00:14Z", "author": {"login": "abhijitpai"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.PBEKeySpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.Security;\n+import java.security.spec.InvalidKeySpecException;\n+import java.security.spec.KeySpec;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+\n+public class JavaKeyProvider implements DataEncryptionKeyProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTMwMw==", "bodyText": "thanks. renamed this in the test.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541303", "createdAt": "2020-04-20T17:01:13Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.PBEKeySpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.Security;\n+import java.security.spec.InvalidKeySpecException;\n+import java.security.spec.KeySpec;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+\n+public class JavaKeyProvider implements DataEncryptionKeyProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTUwOA=="}, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzQ2NDgwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjowMjoxNVrOGDx3gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMjowMFrOGIehNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTkzNg==", "bodyText": "encryptionAlgorithm - now we save the string", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615936", "createdAt": "2020-04-10T06:02:15Z", "author": {"login": "abhijitpai"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTgxMg==", "bodyText": "thanks It is in par with .net now. we can decrypt what dotnet can encrypt", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541812", "createdAt": "2020-04-20T17:02:00Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTkzNg=="}, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzQ2NjI2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjowMzowMVrOGDx4Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzowMjoxNlrOGIeh4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjEzNA==", "bodyText": "We use _en now for the name of the DEK instead of RID. There is also _ea to save the algo name.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406616134", "createdAt": "2020-04-10T06:03:01Z", "author": {"login": "abhijitpai"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";\n+        public static final String  KeyWrapMetadata = \"keyWrapMetadata\";\n+        public static final String  KeyWrapMetadataType = \"type\";\n+        public static final String  KeyWrapMetadataValue = \"value\";\n+        public static final String  EncryptedInfo = \"_ei\";\n+        public static final String  DataEncryptionKeyRid = \"_ek\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTk4NA==", "bodyText": "thanks addressed. It is in par with .net now. we can decrypt what dotnet can encrypt", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541984", "createdAt": "2020-04-20T17:02:16Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";\n+        public static final String  KeyWrapMetadata = \"keyWrapMetadata\";\n+        public static final String  KeyWrapMetadataType = \"type\";\n+        public static final String  KeyWrapMetadataValue = \"value\";\n+        public static final String  EncryptedInfo = \"_ei\";\n+        public static final String  DataEncryptionKeyRid = \"_ek\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjEzNA=="}, "originalCommit": {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIxMDcwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozMjoxOFrOGJZZSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODozOToxMlrOGpHEgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjQ0MQ==", "bodyText": "Why are these modeled as Illegalstate?\nNot fully related to this PR and can be addressed through separate PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412506441", "createdAt": "2020-04-21T21:32:18Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "diffHunk": "@@ -560,6 +565,15 @@ public ValueHolder(V v) {\n         }\n     }\n \n+    public static <T> T parse(byte[] item, Class<T> itemClassType, EncryptionOptions encryptionOptions) {\n+\n+        try {\n+            return getSimpleObjectMapper().readValue(item, itemClassType);\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Failed to get POJO.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDY0MA==", "bodyText": "We are currently (even prior to this PR) were throwing IllegalStateException on json parsing failure.\nI agree we need to change this everywhere. Will track this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445760640", "createdAt": "2020-06-25T18:39:12Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "diffHunk": "@@ -560,6 +565,15 @@ public ValueHolder(V v) {\n         }\n     }\n \n+    public static <T> T parse(byte[] item, Class<T> itemClassType, EncryptionOptions encryptionOptions) {\n+\n+        try {\n+            return getSimpleObjectMapper().readValue(item, itemClassType);\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Failed to get POJO.\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjQ0MQ=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIxNTA0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozMzozMVrOGJZbqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODozOTo0NVrOGpHFog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNzA1MQ==", "bodyText": "Is it expected?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412507051", "createdAt": "2020-04-21T21:33:31Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java", "diffHunk": "@@ -0,0 +1,13 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+\n+/**\n+ * Encryption types that may be supported.\n+ */\n+public enum EncryptionType {\n+    PLAIN_TEXT,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDkzMA==", "bodyText": "thanks for pointing out. removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445760930", "createdAt": "2020-06-25T18:39:45Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java", "diffHunk": "@@ -0,0 +1,13 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+\n+/**\n+ * Encryption types that may be supported.\n+ */\n+public enum EncryptionType {\n+    PLAIN_TEXT,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNzA1MQ=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIyMjY1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozNTozMlrOGJZf_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODo0MTowNlrOGpHKNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODE1OA==", "bodyText": "loadDataEncryptionKey [](start = 22, length = 21)\n\nloadDataEncryptionKey -> fetchDataEncryptionKey or getDataEncryptionKey\nload kind of hinting at expected statefulness/mutability of the object", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412508158", "createdAt": "2020-04-21T21:35:32Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+/**\n+ * Abstraction for a provider to get data encryption keys for use in client-side encryption.\n+ * See https://aka.ms/CosmosClientEncryption for more information on client-side encryption support in Azure Cosmos DB.\n+ */\n+public interface DataEncryptionKeyProvider {\n+\n+    /**\n+     * Retrieves the data encryption key for the given id.\n+     * @param id Identifier of the data encryption key.\n+     * @param encryptionAlgorithm Encryption algorithm that the retrieved key will be used with.\n+     * @return Data encryption key bytes.\n+     * TODO: @moderakh look into if this method needs to be async.\n+     */\n+    DataEncryptionKey loadDataEncryptionKey(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MjEwMQ==", "bodyText": "sure, changed to get.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445762101", "createdAt": "2020-06-25T18:41:06Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+/**\n+ * Abstraction for a provider to get data encryption keys for use in client-side encryption.\n+ * See https://aka.ms/CosmosClientEncryption for more information on client-side encryption support in Azure Cosmos DB.\n+ */\n+public interface DataEncryptionKeyProvider {\n+\n+    /**\n+     * Retrieves the data encryption key for the given id.\n+     * @param id Identifier of the data encryption key.\n+     * @param encryptionAlgorithm Encryption algorithm that the retrieved key will be used with.\n+     * @return Data encryption key bytes.\n+     * TODO: @moderakh look into if this method needs to be async.\n+     */\n+    DataEncryptionKey loadDataEncryptionKey(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODE1OA=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIyNzE4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/CosmosEncryptionAlgorithm.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozNjozN1rOGJZibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODo0ODo0OVrOGpHkjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODc4MA==", "bodyText": "Does the string match with .NET version?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412508780", "createdAt": "2020-04-21T21:36:37Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/CosmosEncryptionAlgorithm.java", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+// TODO: enum string type?\n+\n+/**\n+ * Algorithms for use with client-side encryption support in Azure Cosmos DB.\n+ */\n+public class CosmosEncryptionAlgorithm {\n+\n+    /**\n+     * Authenticated Encryption algorithm based on https://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05\n+     */\n+    public static final String AEAes256CbcHmacSha256Randomized = \"AEAes256CbcHmacSha256Randomized\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2ODg0NA==", "bodyText": "yes it does, we can do full e2e encryption by dot net decryption by java", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445768844", "createdAt": "2020-06-25T18:48:49Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/CosmosEncryptionAlgorithm.java", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+// TODO: enum string type?\n+\n+/**\n+ * Algorithms for use with client-side encryption support in Azure Cosmos DB.\n+ */\n+public class CosmosEncryptionAlgorithm {\n+\n+    /**\n+     * Authenticated Encryption algorithm based on https://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05\n+     */\n+    public static final String AEAes256CbcHmacSha256Randomized = \"AEAes256CbcHmacSha256Randomized\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODc4MA=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIzMzQyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozODozMlrOGJZmHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDowMjo1NVrOGpJ3kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwOTcyNg==", "bodyText": "Why decryption is excluded?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412509726", "createdAt": "2020-04-21T21:38:32Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -224,7 +225,7 @@ public String getId() {\n                                    item,\n                                    requestOptions,\n                                    true)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, getItemDeserializerWithoutDecryption()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwNjQ4MQ==", "bodyText": "initially I didn't want to decrypt the encrypted fields on write. so for that reason decryption was excluded for write operation.\nHowever this is changed now to be in par with .Net. addressed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445806481", "createdAt": "2020-06-25T20:02:55Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -224,7 +225,7 @@ public String getId() {\n                                    item,\n                                    requestOptions,\n                                    true)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, getItemDeserializerWithoutDecryption()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwOTcyNg=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI0NzM4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo0MjoxMlrOGJZtxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxOTo0OTozM1rOGpJdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxMTY4Nw==", "bodyText": "Is the implementation leveraged from other libraries?\nIf those implementations are in same shared repo, any possibility of avoiding the code copy?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412511687", "createdAt": "2020-04-21T21:42:12Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java", "diffHunk": "@@ -0,0 +1,382 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionType;\n+\n+\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+/**\n+ * This class implements authenticated encryption algorithm with associated data as described in\n+ * http://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05 - specifically this implements\n+ * AEAD_AES_256_CBC_HMAC_SHA256 algorithm.\n+ * This (and AeadAes256CbcHmac256EncryptionKey) implementation for Cosmos DB is same as the existing\n+ * SQL client implementation with StyleCop related changes - also, we restrict to randomized encryption to start with.\n+ */\n+class AeadAes256CbcHmac256Algorithm implements DataEncryptionKey {\n+\n+    public final static String ALGORITHM_NAME = \"AEAD_AES_256_CBC_HMAC_SHA256\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTcwMw==", "bodyText": "I didn't find any lib providing this out of the box to be used as a lib. I will look again after the PR merges if we can re-use any other lib.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445799703", "createdAt": "2020-06-25T19:49:33Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java", "diffHunk": "@@ -0,0 +1,382 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionType;\n+\n+\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+/**\n+ * This class implements authenticated encryption algorithm with associated data as described in\n+ * http://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05 - specifically this implements\n+ * AEAD_AES_256_CBC_HMAC_SHA256 algorithm.\n+ * This (and AeadAes256CbcHmac256EncryptionKey) implementation for Cosmos DB is same as the existing\n+ * SQL client implementation with StyleCop related changes - also, we restrict to randomized encryption to start with.\n+ */\n+class AeadAes256CbcHmac256Algorithm implements DataEncryptionKey {\n+\n+    public final static String ALGORITHM_NAME = \"AEAD_AES_256_CBC_HMAC_SHA256\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxMTY4Nw=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI2NjYwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo0NzoyMVrOGJZ4og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODo0OTozNlrOGpHmJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDQ2Ng==", "bodyText": "Does it work for nested JPath?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412514466", "createdAt": "2020-04-21T21:47:21Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {\n+\n+    public ObjectNode encryptAsync(\n+        ObjectNode itemJObj,\n+        EncryptionOptions encryptionOptions,\n+        DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        assert (itemJObj != null);\n+        assert (encryptionOptions != null);\n+        assert (encryptionOptions.getPathsToEncrypt() != null);\n+        assert (!encryptionOptions.getPathsToEncrypt().isEmpty());\n+\n+        for (String path : encryptionOptions.getPathsToEncrypt()) {\n+            if (StringUtils.isEmpty(path) || path.charAt(0) != '/' || path.lastIndexOf('/') != 0) {\n+                throw new IllegalArgumentException(\"Invalid encryption path: \" + path);\n+            }\n+        }\n+\n+        if (encryptionOptions.getDataEncryptionKeyId() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getDataEncryptionKeyId.\" + encryptionOptions.getDataEncryptionKeyId());\n+        }\n+\n+        if (encryptionOptions.getEncryptionAlgorithm() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getEncryptionAlgorithm.\" + encryptionOptions.getEncryptionAlgorithm());\n+        }\n+\n+        if (dataEncryptionKeyProvider == null) {\n+            throw new IllegalArgumentException(RMResources.EncryptionKeyProviderNotConfigured);\n+        }\n+\n+        ObjectNode toEncryptJObj = Utils.getSimpleObjectMapper().createObjectNode();\n+\n+        for (String pathToEncrypt : encryptionOptions.getPathsToEncrypt()) {\n+            String propertyName = pathToEncrypt.substring(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2OTI1NA==", "bodyText": "for now it doesn't I am tracking this after this PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445769254", "createdAt": "2020-06-25T18:49:36Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {\n+\n+    public ObjectNode encryptAsync(\n+        ObjectNode itemJObj,\n+        EncryptionOptions encryptionOptions,\n+        DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        assert (itemJObj != null);\n+        assert (encryptionOptions != null);\n+        assert (encryptionOptions.getPathsToEncrypt() != null);\n+        assert (!encryptionOptions.getPathsToEncrypt().isEmpty());\n+\n+        for (String path : encryptionOptions.getPathsToEncrypt()) {\n+            if (StringUtils.isEmpty(path) || path.charAt(0) != '/' || path.lastIndexOf('/') != 0) {\n+                throw new IllegalArgumentException(\"Invalid encryption path: \" + path);\n+            }\n+        }\n+\n+        if (encryptionOptions.getDataEncryptionKeyId() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getDataEncryptionKeyId.\" + encryptionOptions.getDataEncryptionKeyId());\n+        }\n+\n+        if (encryptionOptions.getEncryptionAlgorithm() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getEncryptionAlgorithm.\" + encryptionOptions.getEncryptionAlgorithm());\n+        }\n+\n+        if (dataEncryptionKeyProvider == null) {\n+            throw new IllegalArgumentException(RMResources.EncryptionKeyProviderNotConfigured);\n+        }\n+\n+        ObjectNode toEncryptJObj = Utils.getSimpleObjectMapper().createObjectNode();\n+\n+        for (String pathToEncrypt : encryptionOptions.getPathsToEncrypt()) {\n+            String propertyName = pathToEncrypt.substring(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDQ2Ng=="}, "originalCommit": {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc3NDUwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyMjoxOVrOGrLJ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTo0OFrOGtjZUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNDY4OQ==", "bodyText": "Indent", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447924689", "createdAt": "2020-06-30T19:22:19Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -453,11 +454,14 @@ public String getId() {\n         if (options == null) {\n             options = new CosmosItemRequestOptions();\n         }\n+\n         ModelBridgeInternal.setPartitionKey(options, partitionKey);\n         RequestOptions requestOptions = ModelBridgeInternal.toRequestOptions(options);\n+\n         return this.getDatabase().getDocClientWrapper()\n                    .readDocument(getItemLink(itemId), requestOptions)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+            // TODO: add a deserializer and pass down?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTAyNA==", "bodyText": "thanks fixed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450419024", "createdAt": "2020-07-06T18:55:48Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -453,11 +454,14 @@ public String getId() {\n         if (options == null) {\n             options = new CosmosItemRequestOptions();\n         }\n+\n         ModelBridgeInternal.setPartitionKey(options, partitionKey);\n         RequestOptions requestOptions = ModelBridgeInternal.toRequestOptions(options);\n+\n         return this.getDatabase().getDocClientWrapper()\n                    .readDocument(getItemLink(itemId), requestOptions)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+            // TODO: add a deserializer and pass down?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNDY4OQ=="}, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc3Nzk2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyMzoxMFrOGrLLzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTo0MlrOGtjZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTE5Nw==", "bodyText": "missing warning", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447925197", "createdAt": "2020-06-30T19:23:10Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODk4MQ==", "bodyText": "thanks. fixed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418981", "createdAt": "2020-07-06T18:55:42Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTE5Nw=="}, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc3OTg2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyMzo0NVrOGrLM9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTowM1rOGtjX0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTQ5Mw==", "bodyText": "Will it be revisited once the stream contracts are available?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447925493", "createdAt": "2020-06-30T19:23:45Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,\n+                                                         DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        cosmosClientBuilder.dataEncryptionKeyProvider(dataEncryptionKeyProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODY0Mg==", "bodyText": "yes. I am committed to that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418642", "createdAt": "2020-07-06T18:55:03Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,\n+                                                         DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        cosmosClientBuilder.dataEncryptionKeyProvider(dataEncryptionKeyProvider);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTQ5Mw=="}, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc4Njc0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ItemDeserializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNTo0M1rOGrLRLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTozNVrOGtjY4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjU3NA==", "bodyText": "ItemDeserializer [](start = 17, length = 16)\n\nItemDeserializer vs core serialzer contracts", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447926574", "createdAt": "2020-06-30T19:25:43Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ItemDeserializer.java", "diffHunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import com.azure.cosmos.implementation.encryption.EncryptionProcessor;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+\n+public interface ItemDeserializer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODkxMg==", "bodyText": "this is internal class, not public contract. For now keeping it as is.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418912", "createdAt": "2020-07-06T18:55:35Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ItemDeserializer.java", "diffHunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import com.azure.cosmos.implementation.encryption.EncryptionProcessor;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+\n+public interface ItemDeserializer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjU3NA=="}, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzg5ODEwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDowMjoyMlrOGrfZdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDowMjoyMlrOGrfZdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NjM3NA==", "bodyText": "How are the soft contracts managed?\nAre there gates to treat them as contract and don't regress?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r448256374", "createdAt": "2020-07-01T10:02:22Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -490,6 +492,15 @@ public CosmosClientBuilder preferredRegions(List<String> preferredRegions) {\n         return this;\n     }\n \n+    CosmosClientBuilder dataEncryptionKeyProvider(DataEncryptionKeyProvider dataEncryptionKeyProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzkwMjMwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDowMzo0OVrOGrfcRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NjoyNFrOGtjaXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NzA5Mw==", "bodyText": "Will it be pushed the encryption package?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r448257093", "createdAt": "2020-07-01T10:03:49Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTI5Mw==", "bodyText": "in upcoming PRs once I bring in new changes form .Net we will get parity and this will move.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450419293", "createdAt": "2020-07-06T18:56:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NzA5Mw=="}, "originalCommit": {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTQxODc4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToxMDoyOVrOGtvTcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToyNzoyMVrOGu51Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDEyOQ==", "bodyText": "Is it a requirement on container definition?\nThen the code-docs and samples needs to explicit cover it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450614129", "createdAt": "2020-07-07T05:10:29Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.CosmosAsyncContainer;\n+import com.azure.cosmos.CosmosAsyncDatabase;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.models.CosmosContainerResponse;\n+import reactor.core.publisher.Mono;\n+import reactor.util.function.Tuple2;\n+\n+import java.time.Duration;\n+import java.util.List;\n+\n+public class CosmosDataEncryptionKeyProvider implements DataEncryptionKeyProvider {\n+    private static final String ContainerPartitionKeyPath = \"/id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNTE1NQ==", "bodyText": "sure added a TODO for tracking that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r451835155", "createdAt": "2020-07-08T21:27:21Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.CosmosAsyncContainer;\n+import com.azure.cosmos.CosmosAsyncDatabase;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.models.CosmosContainerResponse;\n+import reactor.core.publisher.Mono;\n+import reactor.util.function.Tuple2;\n+\n+import java.time.Duration;\n+import java.util.List;\n+\n+public class CosmosDataEncryptionKeyProvider implements DataEncryptionKeyProvider {\n+    private static final String ContainerPartitionKeyPath = \"/id\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDEyOQ=="}, "originalCommit": {"oid": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTc0OTI4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/resources/log4j2.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNzozNDo1MVrOGtygVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToyNzo1N1rOGu52JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NjU4Mw==", "bodyText": "Is it meant for shipping?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450666583", "createdAt": "2020-07-07T07:34:51Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/resources/log4j2.properties", "diffHunk": "@@ -0,0 +1,25 @@\n+# This is the log4j configuration for benchmarks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNTQyOQ==", "bodyText": "thanks for catching that. not meant to be there. fixed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r451835429", "createdAt": "2020-07-08T21:27:57Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/src/main/resources/log4j2.properties", "diffHunk": "@@ -0,0 +1,25 @@\n+# This is the log4j configuration for benchmarks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY2NjU4Mw=="}, "originalCommit": {"oid": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDcxNDI1OnYy", "diffSide": "RIGHT", "path": "eng/versioning/version_client.txt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowNDo0M1rOGwCppQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDowNzo0M1rOGwERKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODI2MQ==", "bodyText": "nit: This is new library, let's set the version to 1.0.0-beta.1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453028261", "createdAt": "2020-07-10T19:04:43Z", "author": {"login": "JimSuplizio"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -21,6 +21,7 @@ com.azure:azure-core-test;1.3.1;1.4.0-beta.1\n com.azure:azure-core-tracing-opentelemetry;1.0.0-beta.5;1.0.0-beta.6\n com.azure:azure-cosmos;4.1.0;4.2.0-beta.1\n com.azure:azure-cosmos-benchmark;4.0.1-beta.1;4.0.1-beta.1\n+com.azure:azure-cosmos-encryption;0.9.0-beta.1;0.9.0-beta.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "903d43d274272b34873cc742f3ae506609b46049"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0ODQ4Mg==", "bodyText": "@JimSuplizio we are not indenting to ship this for the time being (as this is under development for now). long term once ready will be shipped.\nWhat's the good starting version for such scenario? 1.0.0-beta.1?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453048482", "createdAt": "2020-07-10T19:52:43Z", "author": {"login": "moderakh"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -21,6 +21,7 @@ com.azure:azure-core-test;1.3.1;1.4.0-beta.1\n com.azure:azure-core-tracing-opentelemetry;1.0.0-beta.5;1.0.0-beta.6\n com.azure:azure-cosmos;4.1.0;4.2.0-beta.1\n com.azure:azure-cosmos-benchmark;4.0.1-beta.1;4.0.1-beta.1\n+com.azure:azure-cosmos-encryption;0.9.0-beta.1;0.9.0-beta.1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODI2MQ=="}, "originalCommit": {"oid": "903d43d274272b34873cc742f3ae506609b46049"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1NDc2MA==", "bodyText": "moved to  1.0.0-beta.1 thanks @JimSuplizio", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453054760", "createdAt": "2020-07-10T20:07:43Z", "author": {"login": "moderakh"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -21,6 +21,7 @@ com.azure:azure-core-test;1.3.1;1.4.0-beta.1\n com.azure:azure-core-tracing-opentelemetry;1.0.0-beta.5;1.0.0-beta.6\n com.azure:azure-cosmos;4.1.0;4.2.0-beta.1\n com.azure:azure-cosmos-benchmark;4.0.1-beta.1;4.0.1-beta.1\n+com.azure:azure-cosmos-encryption;0.9.0-beta.1;0.9.0-beta.1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODI2MQ=="}, "originalCommit": {"oid": "903d43d274272b34873cc742f3ae506609b46049"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDc5MzQxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTozNDowN1rOGwDbAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDoxNTo1M1rOGwEdRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0MDg5Ng==", "bodyText": "You're missing the update tags which belong before the begin and after the end of the XML tag block. Which should be\n[//]: # ({x-version-update-start;com.azure:azure-cosmos-encryption;current})\n[//]: # ({x-version-update-end})", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453040896", "createdAt": "2020-07-10T19:34:07Z", "author": {"login": "JimSuplizio"}, "path": "sdk/cosmos/azure-cosmos-encryption/README.md", "diffHunk": "@@ -0,0 +1,10 @@\n+# Azure CosmosDB Client Library Encryption Extension\n+\n+To add client side encryption support you need to add\n+```xml\n+<dependency>\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>0.9.0-beta.1</version> \n+</dependency>\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "902acf848852d8cabaea3832de28eccdec98b8f8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1Nzg2MQ==", "bodyText": "thanks done.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453057861", "createdAt": "2020-07-10T20:15:53Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/README.md", "diffHunk": "@@ -0,0 +1,10 @@\n+# Azure CosmosDB Client Library Encryption Extension\n+\n+To add client side encryption support you need to add\n+```xml\n+<dependency>\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>0.9.0-beta.1</version> \n+</dependency>\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0MDg5Ng=="}, "originalCommit": {"oid": "902acf848852d8cabaea3832de28eccdec98b8f8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDgyMTkzOnYy", "diffSide": "RIGHT", "path": "eng/versioning/external_dependencies.txt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0NTozMlrOGwDs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDoxNjoyMFrOGwEeGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTQ4Ng==", "bodyText": "Please do not add this as a cosmos specific dependency. Those are only supposed to be used if there's a conflict with a common dependency which can't be clearly updated. In this particular case org.bouncycastle:bcprov-ext-jdk15on is brand new so it should be up with the others.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453045486", "createdAt": "2020-07-10T19:45:32Z", "author": {"login": "JimSuplizio"}, "path": "eng/versioning/external_dependencies.txt", "diffHunk": "@@ -234,6 +234,7 @@ cosmos_io.dropwizard.metrics:metrics-core;4.1.0\n cosmos_io.dropwizard.metrics:metrics-graphite;4.1.0\n cosmos_io.dropwizard.metrics:metrics-jvm;4.1.0\n cosmos_org.mockito:mockito-core;1.10.19\n+cosmos_org.bouncycastle:bcprov-ext-jdk15on;1.63", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0OTIyOA==", "bodyText": "understood, thanks @JimSuplizio will change.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453049228", "createdAt": "2020-07-10T19:54:33Z", "author": {"login": "moderakh"}, "path": "eng/versioning/external_dependencies.txt", "diffHunk": "@@ -234,6 +234,7 @@ cosmos_io.dropwizard.metrics:metrics-core;4.1.0\n cosmos_io.dropwizard.metrics:metrics-graphite;4.1.0\n cosmos_io.dropwizard.metrics:metrics-jvm;4.1.0\n cosmos_org.mockito:mockito-core;1.10.19\n+cosmos_org.bouncycastle:bcprov-ext-jdk15on;1.63", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTQ4Ng=="}, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1ODA3NQ==", "bodyText": "new dependency removed switched to the existing dependency which suffices for our case\nhttps://github.com/Azure/azure-sdk-for-java/blob/master/eng/versioning/external_dependencies.txt#L127", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453058075", "createdAt": "2020-07-10T20:16:20Z", "author": {"login": "moderakh"}, "path": "eng/versioning/external_dependencies.txt", "diffHunk": "@@ -234,6 +234,7 @@ cosmos_io.dropwizard.metrics:metrics-core;4.1.0\n cosmos_io.dropwizard.metrics:metrics-graphite;4.1.0\n cosmos_io.dropwizard.metrics:metrics-jvm;4.1.0\n cosmos_org.mockito:mockito-core;1.10.19\n+cosmos_org.bouncycastle:bcprov-ext-jdk15on;1.63", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTQ4Ng=="}, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDgyNDM5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0NjoyOFrOGwDukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDoxMjo0NVrOGwEYhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTkwNA==", "bodyText": "FYI @JonathanGiles this is a brand new dependency but it's test scoped.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453045904", "createdAt": "2020-07-10T19:46:28Z", "author": {"login": "JimSuplizio"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -0,0 +1,427 @@\n+<!--\n+Copyright (c) Microsoft Corporation. All rights reserved.\n+Licensed under the MIT License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-client-sdk-parent</artifactId>\n+    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+    <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+  </parent>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>0.9.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <name>Microsoft Azure SDK for SQL API of Azure Cosmos DB Service</name>\n+  <description>This Package contains Microsoft Azure Cosmos SDK (with Reactive Extension Reactor support) for Azure Cosmos DB SQL API</description>\n+  <packaging>jar</packaging>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>azure-java-build-docs</id>\n+      <url>${site.url}/site/${project.artifactId}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <scm>\n+    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>\n+    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->\n+  <properties>\n+    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>\n+    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-cosmos</artifactId>\n+      <version>4.2.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+    </dependency>\n+\n+    <!-- Added this provided dependency to include necessary annotations used by \"reactor-core\".\n+         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+         which is used in @Nullable annotation in reactor core classes.\n+\n+         Similar provided dependency exits for \"azure-core\" as well.\n+    -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-collections4</artifactId>\n+      <scope>test</scope>\n+      <version>4.2</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-text</artifactId>\n+      <scope>test</scope>\n+      <version>1.6</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testng</groupId>\n+      <artifactId>testng</artifactId>\n+      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>25.0-jre</version> <!-- {x-version-update;cosmos_com.google.guava:guava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.projectreactor</groupId>\n+      <artifactId>reactor-test</artifactId>\n+      <version>3.3.5.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.reactivex.rxjava2</groupId>\n+      <artifactId>rxjava</artifactId>\n+      <version>2.2.4</version> <!-- {x-version-update;io.reactivex.rxjava2:rxjava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.bouncycastle</groupId>\n+      <artifactId>bcprov-ext-jdk15on</artifactId>\n+      <version>1.63</version> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->\n+        <configuration>\n+          <source>1.8</source>\n+          <target>1.8</target>\n+          <failOnWarning>false</failOnWarning>\n+        </configuration>\n+      </plugin>\n+\n+\n+      <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->\n+      <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->\n+      <plugin>\n+        <groupId>org.revapi</groupId>\n+        <artifactId>revapi-maven-plugin</artifactId>\n+        <version>0.11.2</version> <!-- {x-version-update;org.revapi:revapi-maven-plugin;external_dependency} -->\n+        <configuration>\n+          <skip>true</skip>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n+        <configuration>\n+          <groups>unit</groups>\n+          <includes>\n+            <include>%regex[.*]</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>surefire.testng.verbose</name>\n+              <value>2</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->\n+        <configuration>\n+          <rules>\n+            <bannedDependencies>\n+              <includes>\n+                <include>com.azure:*</include>\n+                <include>com.fasterxml.jackson.core:jackson-core:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-core;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-annotations:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-annotations;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-databind:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->\n+                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.datatype:jackson-datatype-jsr310;external_dependency} -->\n+                <include>com.fasterxml.jackson.module:jackson-module-afterburner:[2.10.1]</include> <!-- {x-include-update;cosmos_com.fasterxml.jackson.module:jackson-module-afterburner;external_dependency} -->\n+                <include>com.google.code.findbugs:jsr305:[3.0.2]</include> <!-- {x-include-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+                <include>io.dropwizard.metrics:metrics-core:[4.1.0]</include> <!-- {x-include-update;cosmos_io.dropwizard.metrics:metrics-core;external_dependency} -->\n+                <include>io.micrometer:micrometer-core:[1.2.0]</include> <!-- {x-include-update;io.micrometer:micrometer-core;external_dependency} -->\n+                <include>io.netty:netty-codec-http:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http;external_dependency} -->\n+                <include>io.netty:netty-codec-http2:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http2;external_dependency} -->\n+                <include>io.netty:netty-handler:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler;external_dependency} -->\n+                <include>io.netty:netty-handler-proxy:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler-proxy;external_dependency} -->\n+                <include>io.netty:netty-transport-native-epoll:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-transport-native-epoll;external_dependency} -->\n+                <include>io.projectreactor:reactor-core:[3.3.5.RELEASE]</include> <!-- {x-include-update;io.projectreactor:reactor-core;external_dependency} -->\n+                <include>io.projectreactor.netty:reactor-netty:[0.9.7.RELEASE]</include> <!-- {x-include-update;io.projectreactor.netty:reactor-netty;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.bouncycastle:bcprov-ext-jdk15on:[1.63]</include> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1MTMwOQ==", "bodyText": "This tag the reason the analyze step is failing. Instead of x-version-update it should be x-include-update. The tags are different between the normal dependencies and these bannedDependency includes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453051309", "createdAt": "2020-07-10T19:59:29Z", "author": {"login": "JimSuplizio"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -0,0 +1,427 @@\n+<!--\n+Copyright (c) Microsoft Corporation. All rights reserved.\n+Licensed under the MIT License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-client-sdk-parent</artifactId>\n+    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+    <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+  </parent>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>0.9.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <name>Microsoft Azure SDK for SQL API of Azure Cosmos DB Service</name>\n+  <description>This Package contains Microsoft Azure Cosmos SDK (with Reactive Extension Reactor support) for Azure Cosmos DB SQL API</description>\n+  <packaging>jar</packaging>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>azure-java-build-docs</id>\n+      <url>${site.url}/site/${project.artifactId}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <scm>\n+    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>\n+    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->\n+  <properties>\n+    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>\n+    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-cosmos</artifactId>\n+      <version>4.2.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+    </dependency>\n+\n+    <!-- Added this provided dependency to include necessary annotations used by \"reactor-core\".\n+         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+         which is used in @Nullable annotation in reactor core classes.\n+\n+         Similar provided dependency exits for \"azure-core\" as well.\n+    -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-collections4</artifactId>\n+      <scope>test</scope>\n+      <version>4.2</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-text</artifactId>\n+      <scope>test</scope>\n+      <version>1.6</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testng</groupId>\n+      <artifactId>testng</artifactId>\n+      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>25.0-jre</version> <!-- {x-version-update;cosmos_com.google.guava:guava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.projectreactor</groupId>\n+      <artifactId>reactor-test</artifactId>\n+      <version>3.3.5.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.reactivex.rxjava2</groupId>\n+      <artifactId>rxjava</artifactId>\n+      <version>2.2.4</version> <!-- {x-version-update;io.reactivex.rxjava2:rxjava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.bouncycastle</groupId>\n+      <artifactId>bcprov-ext-jdk15on</artifactId>\n+      <version>1.63</version> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->\n+        <configuration>\n+          <source>1.8</source>\n+          <target>1.8</target>\n+          <failOnWarning>false</failOnWarning>\n+        </configuration>\n+      </plugin>\n+\n+\n+      <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->\n+      <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->\n+      <plugin>\n+        <groupId>org.revapi</groupId>\n+        <artifactId>revapi-maven-plugin</artifactId>\n+        <version>0.11.2</version> <!-- {x-version-update;org.revapi:revapi-maven-plugin;external_dependency} -->\n+        <configuration>\n+          <skip>true</skip>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n+        <configuration>\n+          <groups>unit</groups>\n+          <includes>\n+            <include>%regex[.*]</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>surefire.testng.verbose</name>\n+              <value>2</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->\n+        <configuration>\n+          <rules>\n+            <bannedDependencies>\n+              <includes>\n+                <include>com.azure:*</include>\n+                <include>com.fasterxml.jackson.core:jackson-core:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-core;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-annotations:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-annotations;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-databind:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->\n+                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.datatype:jackson-datatype-jsr310;external_dependency} -->\n+                <include>com.fasterxml.jackson.module:jackson-module-afterburner:[2.10.1]</include> <!-- {x-include-update;cosmos_com.fasterxml.jackson.module:jackson-module-afterburner;external_dependency} -->\n+                <include>com.google.code.findbugs:jsr305:[3.0.2]</include> <!-- {x-include-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+                <include>io.dropwizard.metrics:metrics-core:[4.1.0]</include> <!-- {x-include-update;cosmos_io.dropwizard.metrics:metrics-core;external_dependency} -->\n+                <include>io.micrometer:micrometer-core:[1.2.0]</include> <!-- {x-include-update;io.micrometer:micrometer-core;external_dependency} -->\n+                <include>io.netty:netty-codec-http:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http;external_dependency} -->\n+                <include>io.netty:netty-codec-http2:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http2;external_dependency} -->\n+                <include>io.netty:netty-handler:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler;external_dependency} -->\n+                <include>io.netty:netty-handler-proxy:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler-proxy;external_dependency} -->\n+                <include>io.netty:netty-transport-native-epoll:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-transport-native-epoll;external_dependency} -->\n+                <include>io.projectreactor:reactor-core:[3.3.5.RELEASE]</include> <!-- {x-include-update;io.projectreactor:reactor-core;external_dependency} -->\n+                <include>io.projectreactor.netty:reactor-netty:[0.9.7.RELEASE]</include> <!-- {x-include-update;io.projectreactor.netty:reactor-netty;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.bouncycastle:bcprov-ext-jdk15on:[1.63]</include> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTkwNA=="}, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA1NjY0Ng==", "bodyText": "thanks for the comment @JimSuplizio switched to an existing dependency\nhttps://github.com/Azure/azure-sdk-for-java/blob/master/eng/versioning/external_dependencies.txt#L127", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r453056646", "createdAt": "2020-07-10T20:12:45Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -0,0 +1,427 @@\n+<!--\n+Copyright (c) Microsoft Corporation. All rights reserved.\n+Licensed under the MIT License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-client-sdk-parent</artifactId>\n+    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+    <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+  </parent>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>0.9.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <name>Microsoft Azure SDK for SQL API of Azure Cosmos DB Service</name>\n+  <description>This Package contains Microsoft Azure Cosmos SDK (with Reactive Extension Reactor support) for Azure Cosmos DB SQL API</description>\n+  <packaging>jar</packaging>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>azure-java-build-docs</id>\n+      <url>${site.url}/site/${project.artifactId}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <scm>\n+    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>\n+    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->\n+  <properties>\n+    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>\n+    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-cosmos</artifactId>\n+      <version>4.2.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+    </dependency>\n+\n+    <!-- Added this provided dependency to include necessary annotations used by \"reactor-core\".\n+         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+         which is used in @Nullable annotation in reactor core classes.\n+\n+         Similar provided dependency exits for \"azure-core\" as well.\n+    -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-collections4</artifactId>\n+      <scope>test</scope>\n+      <version>4.2</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-text</artifactId>\n+      <scope>test</scope>\n+      <version>1.6</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testng</groupId>\n+      <artifactId>testng</artifactId>\n+      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>25.0-jre</version> <!-- {x-version-update;cosmos_com.google.guava:guava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.projectreactor</groupId>\n+      <artifactId>reactor-test</artifactId>\n+      <version>3.3.5.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.reactivex.rxjava2</groupId>\n+      <artifactId>rxjava</artifactId>\n+      <version>2.2.4</version> <!-- {x-version-update;io.reactivex.rxjava2:rxjava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.bouncycastle</groupId>\n+      <artifactId>bcprov-ext-jdk15on</artifactId>\n+      <version>1.63</version> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->\n+        <configuration>\n+          <source>1.8</source>\n+          <target>1.8</target>\n+          <failOnWarning>false</failOnWarning>\n+        </configuration>\n+      </plugin>\n+\n+\n+      <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->\n+      <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->\n+      <plugin>\n+        <groupId>org.revapi</groupId>\n+        <artifactId>revapi-maven-plugin</artifactId>\n+        <version>0.11.2</version> <!-- {x-version-update;org.revapi:revapi-maven-plugin;external_dependency} -->\n+        <configuration>\n+          <skip>true</skip>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n+        <configuration>\n+          <groups>unit</groups>\n+          <includes>\n+            <include>%regex[.*]</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>surefire.testng.verbose</name>\n+              <value>2</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->\n+        <configuration>\n+          <rules>\n+            <bannedDependencies>\n+              <includes>\n+                <include>com.azure:*</include>\n+                <include>com.fasterxml.jackson.core:jackson-core:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-core;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-annotations:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-annotations;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-databind:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->\n+                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.datatype:jackson-datatype-jsr310;external_dependency} -->\n+                <include>com.fasterxml.jackson.module:jackson-module-afterburner:[2.10.1]</include> <!-- {x-include-update;cosmos_com.fasterxml.jackson.module:jackson-module-afterburner;external_dependency} -->\n+                <include>com.google.code.findbugs:jsr305:[3.0.2]</include> <!-- {x-include-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+                <include>io.dropwizard.metrics:metrics-core:[4.1.0]</include> <!-- {x-include-update;cosmos_io.dropwizard.metrics:metrics-core;external_dependency} -->\n+                <include>io.micrometer:micrometer-core:[1.2.0]</include> <!-- {x-include-update;io.micrometer:micrometer-core;external_dependency} -->\n+                <include>io.netty:netty-codec-http:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http;external_dependency} -->\n+                <include>io.netty:netty-codec-http2:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-codec-http2;external_dependency} -->\n+                <include>io.netty:netty-handler:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler;external_dependency} -->\n+                <include>io.netty:netty-handler-proxy:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-handler-proxy;external_dependency} -->\n+                <include>io.netty:netty-transport-native-epoll:[4.1.49.Final]</include> <!-- {x-include-update;io.netty:netty-transport-native-epoll;external_dependency} -->\n+                <include>io.projectreactor:reactor-core:[3.3.5.RELEASE]</include> <!-- {x-include-update;io.projectreactor:reactor-core;external_dependency} -->\n+                <include>io.projectreactor.netty:reactor-netty:[0.9.7.RELEASE]</include> <!-- {x-include-update;io.projectreactor.netty:reactor-netty;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.slf4j:slf4j-api:[1.7.28]</include> <!-- {x-include-update;org.slf4j:slf4j-api;external_dependency} -->\n+                <include>org.bouncycastle:bcprov-ext-jdk15on:[1.63]</include> <!-- {x-version-update;cosmos_org.bouncycastle:bcprov-ext-jdk15on;external_dependency} -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NTkwNA=="}, "originalCommit": {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTA4MzMxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjozMTowNFrOGy_Bmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjozNjoxNVrOGy_JRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExNDU4Nw==", "bodyText": "The com.google.code.findbugs:jsr305 in the banned includes entry shouldn't be necessary, it should inherit this from azure-client-sdk-parent, that #13211 went in yesterday afternoon", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r456114587", "createdAt": "2020-07-16T22:31:04Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -0,0 +1,427 @@\n+<!--\n+Copyright (c) Microsoft Corporation. All rights reserved.\n+Licensed under the MIT License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-client-sdk-parent</artifactId>\n+    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+    <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+  </parent>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <name>Microsoft Azure SDK for SQL API of Azure Cosmos DB Service</name>\n+  <description>This Package contains Microsoft Azure Cosmos SDK (with Reactive Extension Reactor support) for Azure Cosmos DB SQL API</description>\n+  <packaging>jar</packaging>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>azure-java-build-docs</id>\n+      <url>${site.url}/site/${project.artifactId}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <scm>\n+    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>\n+    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->\n+  <properties>\n+    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>\n+    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-cosmos</artifactId>\n+      <version>4.3.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+    </dependency>\n+\n+    <!-- Added this provided dependency to include necessary annotations used by \"reactor-core\".\n+         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+         which is used in @Nullable annotation in reactor core classes.\n+\n+         Similar provided dependency exits for \"azure-core\" as well.\n+    -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-collections4</artifactId>\n+      <scope>test</scope>\n+      <version>4.2</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-text</artifactId>\n+      <scope>test</scope>\n+      <version>1.6</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testng</groupId>\n+      <artifactId>testng</artifactId>\n+      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>25.0-jre</version> <!-- {x-version-update;cosmos_com.google.guava:guava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.projectreactor</groupId>\n+      <artifactId>reactor-test</artifactId>\n+      <version>3.3.5.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.reactivex.rxjava2</groupId>\n+      <artifactId>rxjava</artifactId>\n+      <version>2.2.4</version> <!-- {x-version-update;io.reactivex.rxjava2:rxjava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.bouncycastle</groupId>\n+      <artifactId>bcprov-jdk15on</artifactId>\n+      <version>1.60</version>  <!-- {x-version-update;org.bouncycastle:bcprov-jdk15on;external_dependency} -->\n+    </dependency>\n+\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->\n+        <configuration>\n+          <source>1.8</source>\n+          <target>1.8</target>\n+          <failOnWarning>false</failOnWarning>\n+        </configuration>\n+      </plugin>\n+\n+\n+      <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->\n+      <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->\n+      <plugin>\n+        <groupId>org.revapi</groupId>\n+        <artifactId>revapi-maven-plugin</artifactId>\n+        <version>0.11.2</version> <!-- {x-version-update;org.revapi:revapi-maven-plugin;external_dependency} -->\n+        <configuration>\n+          <skip>true</skip>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n+        <configuration>\n+          <groups>unit</groups>\n+          <includes>\n+            <include>%regex[.*]</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>surefire.testng.verbose</name>\n+              <value>2</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->\n+        <configuration>\n+          <rules>\n+            <bannedDependencies>\n+              <includes>\n+                <include>com.azure:*</include>\n+                <include>com.fasterxml.jackson.core:jackson-core:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-core;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-annotations:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-annotations;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-databind:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->\n+                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.datatype:jackson-datatype-jsr310;external_dependency} -->\n+                <include>com.fasterxml.jackson.module:jackson-module-afterburner:[2.10.1]</include> <!-- {x-include-update;cosmos_com.fasterxml.jackson.module:jackson-module-afterburner;external_dependency} -->\n+                <include>com.google.code.findbugs:jsr305:[3.0.2]</include> <!-- {x-include-update;com.google.code.findbugs:jsr305;external_dependency} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d45fd99d5821cb6e9886fb7ef618792df0f3a479"}, "originalPosition": 205}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExNjU0OA==", "bodyText": "thank you Kushagra, will address both in upcoming PRs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r456116548", "createdAt": "2020-07-16T22:36:15Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos-encryption/pom.xml", "diffHunk": "@@ -0,0 +1,427 @@\n+<!--\n+Copyright (c) Microsoft Corporation. All rights reserved.\n+Licensed under the MIT License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>com.azure</groupId>\n+    <artifactId>azure-client-sdk-parent</artifactId>\n+    <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+    <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+  </parent>\n+\n+  <groupId>com.azure</groupId>\n+  <artifactId>azure-cosmos-encryption</artifactId>\n+  <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos-encryption;current} -->\n+  <name>Microsoft Azure SDK for SQL API of Azure Cosmos DB Service</name>\n+  <description>This Package contains Microsoft Azure Cosmos SDK (with Reactive Extension Reactor support) for Azure Cosmos DB SQL API</description>\n+  <packaging>jar</packaging>\n+  <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+  <distributionManagement>\n+    <site>\n+      <id>azure-java-build-docs</id>\n+      <url>${site.url}/site/${project.artifactId}</url>\n+    </site>\n+  </distributionManagement>\n+\n+  <scm>\n+    <url>scm:git:https://github.com/Azure/azure-sdk-for-java</url>\n+    <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+    <tag>HEAD</tag>\n+  </scm>\n+\n+  <!-- CosmosSkip - Needed temporary values to 10% not fail. -->\n+  <properties>\n+    <jacoco.min.linecoverage>0.10</jacoco.min.linecoverage>\n+    <jacoco.min.branchcoverage>0.10</jacoco.min.branchcoverage>\n+  </properties>\n+\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>com.azure</groupId>\n+      <artifactId>azure-cosmos</artifactId>\n+      <version>4.3.0-beta.1</version> <!-- {x-version-update;com.azure:azure-cosmos;current} -->\n+    </dependency>\n+\n+    <!-- Added this provided dependency to include necessary annotations used by \"reactor-core\".\n+         Without this dependency, javadoc throws a warning as it cannot find enum When.MAYBE\n+         which is used in @Nullable annotation in reactor core classes.\n+\n+         Similar provided dependency exits for \"azure-core\" as well.\n+    -->\n+    <dependency>\n+      <groupId>com.google.code.findbugs</groupId>\n+      <artifactId>jsr305</artifactId>\n+      <version>3.0.2</version> <!-- {x-version-update;com.google.code.findbugs:jsr305;external_dependency} -->\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-collections4</artifactId>\n+      <scope>test</scope>\n+      <version>4.2</version> <!-- {x-version-update;org.apache.commons:commons-collections4;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-text</artifactId>\n+      <scope>test</scope>\n+      <version>1.6</version> <!-- {x-version-update;org.apache.commons:commons-text;external_dependency} -->\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testng</groupId>\n+      <artifactId>testng</artifactId>\n+      <version>6.14.3</version> <!-- {x-version-update;org.testng:testng;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <version>3.11.1</version> <!-- {x-version-update;org.assertj:assertj-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+      <version>2.13.0</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-slf4j-impl;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-api;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+      <version>2.11.1</version> <!-- {x-version-update;org.apache.logging.log4j:log4j-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>25.0-jre</version> <!-- {x-version-update;cosmos_com.google.guava:guava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.projectreactor</groupId>\n+      <artifactId>reactor-test</artifactId>\n+      <version>3.3.5.RELEASE</version> <!-- {x-version-update;io.projectreactor:reactor-test;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.reactivex.rxjava2</groupId>\n+      <artifactId>rxjava</artifactId>\n+      <version>2.2.4</version> <!-- {x-version-update;io.reactivex.rxjava2:rxjava;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <version>1.10.19</version> <!-- {x-version-update;cosmos_org.mockito:mockito-core;external_dependency} -->\n+      <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.bouncycastle</groupId>\n+      <artifactId>bcprov-jdk15on</artifactId>\n+      <version>1.60</version>  <!-- {x-version-update;org.bouncycastle:bcprov-jdk15on;external_dependency} -->\n+    </dependency>\n+\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version> <!-- {x-version-update;org.apache.maven.plugins:maven-compiler-plugin;external_dependency} -->\n+        <configuration>\n+          <source>1.8</source>\n+          <target>1.8</target>\n+          <failOnWarning>false</failOnWarning>\n+        </configuration>\n+      </plugin>\n+\n+\n+      <!-- CosmosSkip - This is not a module we want/expect external customers to consume. Skip breaking API checks. -->\n+      <!-- This can only be enabled once we release GA, as it needs a stable version to check for breaking changes. -->\n+      <plugin>\n+        <groupId>org.revapi</groupId>\n+        <artifactId>revapi-maven-plugin</artifactId>\n+        <version>0.11.2</version> <!-- {x-version-update;org.revapi:revapi-maven-plugin;external_dependency} -->\n+        <configuration>\n+          <skip>true</skip>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-surefire-plugin;external_dependency} -->\n+        <configuration>\n+          <groups>unit</groups>\n+          <includes>\n+            <include>%regex[.*]</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>surefire.testng.verbose</name>\n+              <value>2</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-enforcer-plugin</artifactId>\n+        <version>3.0.0-M3</version> <!-- {x-version-update;org.apache.maven.plugins:maven-enforcer-plugin;external_dependency} -->\n+        <configuration>\n+          <rules>\n+            <bannedDependencies>\n+              <includes>\n+                <include>com.azure:*</include>\n+                <include>com.fasterxml.jackson.core:jackson-core:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-core;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-annotations:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-annotations;external_dependency} -->\n+                <include>com.fasterxml.jackson.core:jackson-databind:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.core:jackson-databind;external_dependency} -->\n+                <include>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:[2.10.1]</include> <!-- {x-include-update;com.fasterxml.jackson.datatype:jackson-datatype-jsr310;external_dependency} -->\n+                <include>com.fasterxml.jackson.module:jackson-module-afterburner:[2.10.1]</include> <!-- {x-include-update;cosmos_com.fasterxml.jackson.module:jackson-module-afterburner;external_dependency} -->\n+                <include>com.google.code.findbugs:jsr305:[3.0.2]</include> <!-- {x-include-update;com.google.code.findbugs:jsr305;external_dependency} -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExNDU4Nw=="}, "originalCommit": {"oid": "d45fd99d5821cb6e9886fb7ef618792df0f3a479"}, "originalPosition": 205}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1914, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}