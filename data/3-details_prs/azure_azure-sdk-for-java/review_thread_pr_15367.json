{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NDkwMjQ0", "number": 15367, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozNDoyNFrOElF7EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozOTozM1rOElGAhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI5ODA4OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozNDoyNFrOHUZi8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozNDoyNFrOHUZi8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MjExMg==", "bodyText": "nit: maybe say that the exception occurred while deserializing the response -> since technically the twin might have been created successfully, but the CL deserialization failed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491152112", "createdAt": "2020-09-18T19:34:24Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -157,10 +158,17 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n         return protocolLayer\n             .getDigitalTwins()\n             .addWithResponseAsync(digitalTwinId, digitalTwin, context)\n-            .map(response -> {\n-                T genericResponse = mapper.convertValue(response.getValue(), clazz);\n+            .flatMap(response -> {\n+                T genericResponse = null;\n+                try {\n+                    genericResponse = DeserializationHelpers.castObject(mapper, response.getValue(), clazz);\n+                } catch (JsonProcessingException e) {\n+                    logger.error(\"JsonProcessingException occurred while creating digital twin: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzMwMTczOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozNTo0NFrOHUZlJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozNTo0NFrOHUZlJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MjY3OQ==", "bodyText": "here as elsewhere as well - the exception is during the deserialization, so maybe we should highlight that (it didn't occur during the REST operation).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491152679", "createdAt": "2020-09-18T19:35:44Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -685,15 +711,22 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n             .map(\n                 objectPagedResponse -> {\n                     List<T> list = objectPagedResponse.getValue().stream()\n-                        .map(object -> mapper.convertValue(object, clazz))\n+                        .map(object -> {\n+                            try {\n+                                return DeserializationHelpers.castObject(mapper, object, clazz);\n+                            } catch (JsonProcessingException e) {\n+                                logger.error(\"JsonProcessingException occurred while retrieving relationships: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzMxMjA0OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serializer/DeserializationHelpers.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozOTozM1rOHUZrRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozOTozM1rOHUZrRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NDI0NQ==", "bodyText": "nit: maybe say \"...perform the conversion.\", or \"...perform the deserialization.\". The term \"casting\" here might be misleading.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15367#discussion_r491154245", "createdAt": "2020-09-18T19:39:33Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serializer/DeserializationHelpers.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.azure.digitaltwins.core.implementation.serializer;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+public class DeserializationHelpers {\n+\n+    /**\n+     * Converts the payload object into a generic type.\n+     * There are two different paths we will have to take based on the type T\n+     * In case of a String, we need to write the value of the payload as a String\n+     * In case of any other type that the user decides to deserialize the payload, we will use mapper.convertValue to perform the casting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d1efdcaeb1f926c43e0c3d3abe4d12c8cd4fdb"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 964, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}