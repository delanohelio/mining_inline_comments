{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyODI0NDM2", "number": 17633, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1MFrOE6T3qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1OVrOE6T3yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTc4NDExOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1MVrOH1SxsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1MVrOH1SxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NDIwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reason, errorContext.getException().toString());\n          \n          \n            \n                                    reason, errorContext.getException().getMessage());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#discussion_r525644209", "createdAt": "2020-11-18T01:55:51Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "diffHunk": "@@ -24,18 +25,40 @@ public static void main(String[] args) throws InterruptedException {\n             System.out.println(\"Received message \" + message.getBody().toString());\n         };\n \n+        final CountDownLatch countdownLatch = new CountDownLatch(1);\n+\n         // Consumer that handles any errors that occur when receiving messages\n         Consumer<ServiceBusErrorContext> errorHandler = errorContext -> {\n-            System.out.println(\"Error when receiving messages \" + errorContext.getException().getMessage());\n             if (errorContext.getException() instanceof ServiceBusException) {\n-                ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n-                System.out.printf(\"Error source %s, reason %s\\n\", serviceBusException.getErrorSource(),\n-                    serviceBusException.getReason());\n+                final ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n+                final ServiceBusFailureReason reason = serviceBusException.getReason();\n+\n+                if (reason == ServiceBusFailureReason.MESSAGING_ENTITY_DISABLED\n+                    || reason == ServiceBusFailureReason.MESSAGING_ENTITY_NOT_FOUND\n+                    || reason == ServiceBusFailureReason.UNAUTHORIZED) {\n+                    System.out.printf(\"An unrecoverable error occurred. Stopping processing with reason %s: %s\\n\",\n+                        reason, serviceBusException.toString());\n+                    countdownLatch.countDown();\n+                } else if (reason == ServiceBusFailureReason.MESSAGE_LOCK_LOST) {\n+                    System.out.printf(\"Message lock lost for message: %s\", errorContext.getException().toString());\n+                } else if (reason == ServiceBusFailureReason.SERVICE_BUSY) {\n+                    try {\n+                        // choosing an arbitrary amount of time to wait.\n+                        Thread.sleep(1000);\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n+                } else {\n+                    System.out.printf(\"Error source %s, reason %s, message: %s\\n\", serviceBusException.getErrorSource(),\n+                        reason, errorContext.getException().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTc4NDQxOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1OVrOH1Sx2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1NTo1OVrOH1Sx2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0NDI0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    reason, serviceBusException.toString());\n          \n          \n            \n                                    reason, serviceBusException.getMessage());", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17633#discussion_r525644249", "createdAt": "2020-11-18T01:55:59Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ServiceBusProcessorSample.java", "diffHunk": "@@ -24,18 +25,40 @@ public static void main(String[] args) throws InterruptedException {\n             System.out.println(\"Received message \" + message.getBody().toString());\n         };\n \n+        final CountDownLatch countdownLatch = new CountDownLatch(1);\n+\n         // Consumer that handles any errors that occur when receiving messages\n         Consumer<ServiceBusErrorContext> errorHandler = errorContext -> {\n-            System.out.println(\"Error when receiving messages \" + errorContext.getException().getMessage());\n             if (errorContext.getException() instanceof ServiceBusException) {\n-                ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n-                System.out.printf(\"Error source %s, reason %s\\n\", serviceBusException.getErrorSource(),\n-                    serviceBusException.getReason());\n+                final ServiceBusException serviceBusException = (ServiceBusException) errorContext.getException();\n+                final ServiceBusFailureReason reason = serviceBusException.getReason();\n+\n+                if (reason == ServiceBusFailureReason.MESSAGING_ENTITY_DISABLED\n+                    || reason == ServiceBusFailureReason.MESSAGING_ENTITY_NOT_FOUND\n+                    || reason == ServiceBusFailureReason.UNAUTHORIZED) {\n+                    System.out.printf(\"An unrecoverable error occurred. Stopping processing with reason %s: %s\\n\",\n+                        reason, serviceBusException.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08cf218ddf4554d70874830ca54507919baa4b48"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2888, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}