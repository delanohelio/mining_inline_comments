{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MTY3OTY0", "number": 11583, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTozNzo1M1rOEA8MqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjozNjo0MVrOEBbwxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDIxNzM2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTozNzo1M1rOGch7Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTozNzo1M1rOGch7Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2OTE3NA==", "bodyText": "Does anyone have a better idea on a name for this method?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432569174", "createdAt": "2020-05-29T15:37:53Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDc5MTA4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileAPITests.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoyOToyOVrOGcnsvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozMzo1M1rOGcpeRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Mzc0Mg==", "bodyText": "Let's not do * imports. https://intellij-support.jetbrains.com/hc/en-us/community/posts/206203659-Turn-off-Wildcard-imports-", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432663742", "createdAt": "2020-05-29T18:29:29Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileAPITests.groovy", "diffHunk": "@@ -9,14 +9,7 @@ import com.azure.core.util.Context\n import com.azure.core.util.polling.SyncPoller\n import com.azure.storage.common.StorageSharedKeyCredential\n import com.azure.storage.common.implementation.Constants\n-import com.azure.storage.file.share.models.NtfsFileAttributes\n-import com.azure.storage.file.share.models.PermissionCopyModeType\n-import com.azure.storage.file.share.models.ShareErrorCode\n-import com.azure.storage.file.share.models.ShareFileCopyInfo\n-import com.azure.storage.file.share.models.ShareFileHttpHeaders\n-import com.azure.storage.file.share.models.ShareFileRange\n-import com.azure.storage.file.share.models.ShareSnapshotInfo\n-import com.azure.storage.file.share.models.ShareStorageException\n+import com.azure.storage.file.share.models.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NTUxMw==", "bodyText": "Weird, idk why but my settings there are at 100 for both but it's still wildcarding them.\nI've reverted this change.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432685513", "createdAt": "2020-05-29T19:16:42Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileAPITests.groovy", "diffHunk": "@@ -9,14 +9,7 @@ import com.azure.core.util.Context\n import com.azure.core.util.polling.SyncPoller\n import com.azure.storage.common.StorageSharedKeyCredential\n import com.azure.storage.common.implementation.Constants\n-import com.azure.storage.file.share.models.NtfsFileAttributes\n-import com.azure.storage.file.share.models.PermissionCopyModeType\n-import com.azure.storage.file.share.models.ShareErrorCode\n-import com.azure.storage.file.share.models.ShareFileCopyInfo\n-import com.azure.storage.file.share.models.ShareFileHttpHeaders\n-import com.azure.storage.file.share.models.ShareFileRange\n-import com.azure.storage.file.share.models.ShareSnapshotInfo\n-import com.azure.storage.file.share.models.ShareStorageException\n+import com.azure.storage.file.share.models.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Mzc0Mg=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MjgwNw==", "bodyText": "I usually set that one to 999.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432692807", "createdAt": "2020-05-29T19:33:53Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-file-share/src/test/java/com/azure/storage/file/share/FileAPITests.groovy", "diffHunk": "@@ -9,14 +9,7 @@ import com.azure.core.util.Context\n import com.azure.core.util.polling.SyncPoller\n import com.azure.storage.common.StorageSharedKeyCredential\n import com.azure.storage.common.implementation.Constants\n-import com.azure.storage.file.share.models.NtfsFileAttributes\n-import com.azure.storage.file.share.models.PermissionCopyModeType\n-import com.azure.storage.file.share.models.ShareErrorCode\n-import com.azure.storage.file.share.models.ShareFileCopyInfo\n-import com.azure.storage.file.share.models.ShareFileHttpHeaders\n-import com.azure.storage.file.share.models.ShareFileRange\n-import com.azure.storage.file.share.models.ShareSnapshotInfo\n-import com.azure.storage.file.share.models.ShareStorageException\n+import com.azure.storage.file.share.models.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Mzc0Mg=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDgxMDQ4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODozNjowM1rOGcn5Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjoyODo0MlrOGdRd0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng==", "bodyText": "can we have more / in the path ? if yes then should we encode them?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432666886", "createdAt": "2020-05-29T18:36:03Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjM5Ng==", "bodyText": "This particular if case is because when you call getPath, it returns the path including the starting /. Then when you do setPath for some reason, it makes the URL have two slashes - so I'm just trying to prevent that error from happening. Does that make sense?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432686396", "createdAt": "2020-05-29T19:18:51Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MjY0NA==", "bodyText": "That's not what I meant. Please take a look on this sample url \n  \n    \n      azure-sdk-for-java/sdk/storage/azure-storage-blob/src/test/resources/session-records/BlobAPITestcopysourceac[4].json\n    \n    \n         Line 95\n      in\n      6e23e4a\n    \n    \n    \n    \n\n        \n          \n           \"x-ms-copy-source\" : \"https://azstoragesdkaccount.blob.core.windows.net/jtccopysourceac0blobapitestcopysourceac26775340db315343/javablobcopysourceac1blobapitestcopysourceac26713808da3bf\", \n        \n    \n  \n\n\nhttps://azstoragesdkaccount.blob.core.windows.net/jtccopysourceac0blobapitestcopysourceac26775340db315343/javablobcopysourceac1blobapitestcopysourceac26713808da3bf .\nthe last / in this url is going to be encoded into %2F I think. Shouldn't we split path by / before encoding and just transform segments ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432692644", "createdAt": "2020-05-29T19:33:26Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwOTA5MQ==", "bodyText": "Oh. Both are equivalent as per the service so it shouldnt matter", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432709091", "createdAt": "2020-05-29T20:03:40Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyODIxMA==", "bodyText": "Do we have a test covering that?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432728210", "createdAt": "2020-05-29T20:49:07Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM0ODA1MQ==", "bodyText": "The fact that the tests work is validation that they are the same since otherwise the service would come back with a 404 saying the source doesnt exist.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r433348051", "createdAt": "2020-06-01T16:28:42Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDgxODk5OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODozODo1N1rOGcn-bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozNDozOVrOGcpfcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ==", "bodyText": "do we have to decode it first ? Wouldn't already encoded chars be left alone during encoding?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432668271", "createdAt": "2020-05-29T18:38:57Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {\n+            path = path.substring(1);\n+        }\n+        path = Utility.urlEncode(Utility.urlDecode(path));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4MzEwMA==", "bodyText": "We need to do this to preserve the case where a user has a URL that looks encoded. - Like if they pass in a url with hello%20hello - if we encode that it'll become hello(whatever % encoding is)20hello, which we don't want to do", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432683100", "createdAt": "2020-05-29T19:11:01Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {\n+            path = path.substring(1);\n+        }\n+        path = Utility.urlEncode(Utility.urlDecode(path));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzEwNA==", "bodyText": "That makes sense.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432693104", "createdAt": "2020-05-29T19:34:39Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {\n+            path = path.substring(1);\n+        }\n+        path = Utility.urlEncode(Utility.urlDecode(path));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDgyNjMwOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODo0MTozOFrOGcoDNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTozNDo0OFrOGcpfrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA==", "bodyText": "if copy source is passed as a parameter then shouldn't we just encode the whole thing ? I'm wondering why just path.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432669494", "createdAt": "2020-05-29T18:41:38Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -427,11 +428,13 @@ private boolean checkDoesNotExistStatusCode(Throwable t) {\n             .setIgnoreReadOnly(ignoreReadOnly)\n             .setSetArchiveAttribute(setArchiveAttribute);\n \n+        final String copySource = Utility.encodeUrlPath(sourceUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4MTc3MQ==", "bodyText": "The problem with that is it will become an invalid URI since it will encode the :// in the protocol part and everything. :(", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432681771", "createdAt": "2020-05-29T19:07:54Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -427,11 +428,13 @@ private boolean checkDoesNotExistStatusCode(Throwable t) {\n             .setIgnoreReadOnly(ignoreReadOnly)\n             .setSetArchiveAttribute(setArchiveAttribute);\n \n+        final String copySource = Utility.encodeUrlPath(sourceUrl);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzE2NQ==", "bodyText": "Gotcha.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432693165", "createdAt": "2020-05-29T19:34:48Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -427,11 +428,13 @@ private boolean checkDoesNotExistStatusCode(Throwable t) {\n             .setIgnoreReadOnly(ignoreReadOnly)\n             .setSetArchiveAttribute(setArchiveAttribute);\n \n+        final String copySource = Utility.encodeUrlPath(sourceUrl);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA=="}, "originalCommit": {"oid": "8b109e5d617a2601f5892c097e8250011278858a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTM4ODg0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-file-share/CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjozNjo0MVrOGdRu8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjozNjo0MVrOGdRu8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1MjQzNQ==", "bodyText": "Can you specify the apis this affected", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r433352435", "createdAt": "2020-06-01T16:36:41Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/CHANGELOG.md", "diffHunk": "@@ -1,6 +1,7 @@\n # Release History\n \n ## 12.5.0-beta.1 (Unreleased)\n+- Fixed bug in ShareFileAsyncClient where sourceUrl was getting encoded. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "791401718e3d7dce0dae744f8b6effc2670d60da"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4014, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}