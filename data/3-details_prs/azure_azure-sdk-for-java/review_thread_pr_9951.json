{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjI2NTg0", "number": 9951, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNjowNDoxNlrODv2E7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMzo1NlrODw3F0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDk1NjYzOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNjowNDoxNlrOGCgMbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNjowNDoxNlrOGCgMbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3NzgwNg==", "bodyText": "These changes should not be merged until we release EH.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405277806", "createdAt": "2020-04-08T06:04:16Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/pom.xml", "diffHunk": "@@ -42,7 +42,7 @@\n     <dependency>\n       <groupId>com.azure</groupId>\n       <artifactId>azure-core-amqp</artifactId>\n-      <version>1.0.2</version> <!-- {x-version-update;com.azure:azure-core-amqp;dependency} -->\n+      <version>1.1.0-beta.1</version> <!-- {x-version-update;unreleased_com.azure:azure-core-amqp;dependency} -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzA0MjQ2OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSession.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNToxM1rOGC0epA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNTo0MFrOGC0gBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDE0OA==", "bodyText": "Why the change to object?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405610148", "createdAt": "2020-04-08T15:25:13Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSession.java", "diffHunk": "@@ -356,7 +355,7 @@ protected ReactorReceiver createConsumer(String entityPath, Receiver receiver,\n      * NOTE: Ensure this is invoked using the reactor dispatcher because proton-j is not thread-safe.\n      */\n     private LinkSubscription<AmqpReceiveLink> getSubscription(String linkName, String entityPath,\n-        Map<Symbol, UnknownDescribedType> sourceFilters, Map<Symbol, Object> receiverProperties,\n+        Map<Symbol, Object> sourceFilters, Map<Symbol, Object> receiverProperties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDUwMg==", "bodyText": "You can translate an object into that type.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405610502", "createdAt": "2020-04-08T15:25:40Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSession.java", "diffHunk": "@@ -356,7 +355,7 @@ protected ReactorReceiver createConsumer(String entityPath, Receiver receiver,\n      * NOTE: Ensure this is invoked using the reactor dispatcher because proton-j is not thread-safe.\n      */\n     private LinkSubscription<AmqpReceiveLink> getSubscription(String linkName, String entityPath,\n-        Map<Symbol, UnknownDescribedType> sourceFilters, Map<Symbol, Object> receiverProperties,\n+        Map<Symbol, Object> sourceFilters, Map<Symbol, Object> receiverProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDE0OA=="}, "originalCommit": {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzA0ODk2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNjo0MVrOGC0iuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNjo0MVrOGC0iuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMTE5NQ==", "bodyText": "I'd dump it into receiver options. And probably pull in is session enabled, too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405611195", "createdAt": "2020-04-08T15:26:41Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -105,7 +106,7 @@\n      * @param onClientClose Operation to run when the client completes.\n      */\n     ServiceBusReceiverAsyncClient(String fullyQualifiedNamespace, String entityPath, MessagingEntityType entityType,\n-        boolean isSessionEnabled, ReceiverOptions receiverOptions,\n+        boolean isSessionEnabled, String sessionId, ReceiverOptions receiverOptions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzA1NDEwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNzo0NVrOGC0l7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToyNzo0NVrOGC0l7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMjAxMg==", "bodyText": "I know we had unused sessionenabled. But add another method rather than everything in this method", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405612012", "createdAt": "2020-04-08T15:27:45Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -44,5 +44,5 @@\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        boolean isSession, String sessionId, String transferEntityPath, MessagingEntityType entityType);\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk2MzkwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMjowOVrOGC9iew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMjowOVrOGC9iew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1ODU4Nw==", "bodyText": "This doesn't need to be a mutable object. That's why the other fields are read-only.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405758587", "createdAt": "2020-04-08T19:22:09Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -27,10 +29,43 @@ ReceiveMode getReceiveMode() {\n     }\n \n     /**\n-     * Gets the prefetch count of the receiver.\n+     * Update enableSession flag.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk2NTU0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMjo0MFrOGC9jgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMjo0MFrOGC9jgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1ODg1MA==", "bodyText": "The options don't seem to be propagated here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405758850", "createdAt": "2020-04-08T19:22:40Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -593,8 +606,8 @@ public ServiceBusReceiverAsyncClient buildAsyncClient() {\n             final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk2NzkwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMzoyM1rOGC9k_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyMzoyM1rOGC9k_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTIzMQ==", "bodyText": "You don't need to create dedicated fields now. A reference to the receiverOptions is held by the class.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759231", "createdAt": "2020-04-08T19:23:23Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -121,7 +121,8 @@\n         this.receiveMode = receiverOptions.getReceiveMode();\n \n         this.entityType = entityType;\n-        this.isSessionEnabled = isSessionEnabled;\n+        this.isSessionEnabled = receiverOptions.isSessionEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk3MDQ2OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNDowNFrOGC9mbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNDowNFrOGC9mbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTU5OQ==", "bodyText": "Since this is a normal link creation, we don't need isSession.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759599", "createdAt": "2020-04-08T19:24:04Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -45,4 +45,23 @@\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk3MTk3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNDozMVrOGC9nZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNDozMVrOGC9nZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTg0NA==", "bodyText": "This would be an overload where you don't need \"isSession\" because we'd have a sessionId. And the parameter would be at the end.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759844", "createdAt": "2020-04-08T19:24:31Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -45,4 +45,23 @@\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n         boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+\n+    /**\n+     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n+     * same {@code linkName}. Otherwise, a new link is created and returned.\n+     *\n+     * @param linkName The name of the link.\n+     * @param entityPath The remote address to connect to for the message broker.\n+     * @param transferEntityPath Path if the events should be transferred to another link after being received from this\n+     *     link.\n+     * @param receiveMode {@link ReceiveMode} to use when creating the link.\n+     * @param isSession to use when creating the link.\n+     * @param sessionId to use when creating the link.\n+     * @param transferEntityPath to use when creating the link.\n+     * @param entityType {@link MessagingEntityType} to use when creating the link.\n+     *\n+     * @return A new or existing receive link that is connected to the given {@code entityPath}.\n+     */\n+    Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzk3OTUwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNjo1N1rOGC9sLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToyNjo1N1rOGC9sLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2MTA2OQ==", "bodyText": "I'd be inclined to create another method createConsumer and remove the isSession. One createconsumer for normal receives, one for sessions, and another one to support transactions in the future.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405761069", "createdAt": "2020-04-08T19:26:57Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java", "diffHunk": "@@ -66,14 +66,14 @@\n \n     @Override\n     public Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType,\n-        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, boolean isSession) {\n+        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, boolean isSession, String sessionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDYwNDc0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozODoyNFrOGD8S0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozODoyNFrOGD8S0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4Njc2OA==", "bodyText": "Why is it always false? If later on, you're inferring it from the presence of a sessionId, the \"enableSession\" isn't required.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406786768", "createdAt": "2020-04-10T14:38:24Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -590,11 +603,12 @@ public ServiceBusReceiverAsyncClient buildAsyncClient() {\n \n             final MessageLockContainer messageLockContainer = new MessageLockContainer();\n             final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n-            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount);\n+            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount,\n+                false, sessionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDYwOTY5OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MDoxNFrOGD8V7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MDoxNFrOGD8V7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4NzU2NA==", "bodyText": "Doc update: Creates a receive link for sessions.\nSince this is similar to the method above, I had mentioned to add the \"SessionId\" to the end of the parameter list as an overload. This would be easier to consume.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406787564", "createdAt": "2020-04-10T14:40:14Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -44,5 +44,23 @@\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        String transferEntityPath, MessagingEntityType entityType);\n+\n+    /**\n+     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDYxNDU4OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MjowMVrOGD8Y-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MjowMVrOGD8Y-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4ODM0Ng==", "bodyText": "Since these are performing two different operations, and you have created a separate method in ReactorSession for creating a consumer with a sessionId. This should call that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406788346", "createdAt": "2020-04-10T14:42:01Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java", "diffHunk": "@@ -159,14 +159,34 @@ public ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions co\n      */\n     @Override\n     public Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType) {\n+        String transferEntityPath, MessagingEntityType entityType) {\n+        return createReceiveLink(linkName, entityPath, receiveMode, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDYxNzc0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MzoxOFrOGD8bIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDo0MzoxOFrOGD8bIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4ODg5OA==", "bodyText": "This wouldn't work because we need a session enabled queue. You'd have to update the ARM template to create one.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406788898", "createdAt": "2020-04-10T14:43:18Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -24,11 +24,13 @@\n \n class ServiceBusReceiverAsyncClientIntegrationTest extends IntegrationTestBase {\n     private static final String CONTENTS = \"Test-contents\";\n+    private static final String SESSION_ID = \"seattle-id1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTYwNTk0OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMjo1MFrOGEF2jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMjo1MFrOGEF2jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzM3NA==", "bodyText": "Reformat the code. There are two spaces here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943374", "createdAt": "2020-04-10T21:02:50Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java", "diffHunk": "@@ -233,8 +232,8 @@ void receivesAndAutoCompletes() {\n         // Arrange\n         final ReceiverOptions options = new ReceiverOptions(ReceiveMode.PEEK_LOCK, PREFETCH);\n         final ServiceBusReceiverAsyncClient consumer2 = new ServiceBusReceiverAsyncClient(\n-            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, false, options, connectionProcessor,\n-            tracerProvider, messageSerializer, messageContainer, onClientClose);\n+            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, options, connectionProcessor,  tracerProvider,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTYwNzA3OnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMzoyM1rOGEF3PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMzoyM1rOGEF3PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzU0OA==", "bodyText": "Why do we need another constructor? This is only used in SBCB to pass to the receiver.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943548", "createdAt": "2020-04-10T21:03:23Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -11,10 +11,16 @@\n class ReceiverOptions {\n     private final ReceiveMode receiveMode;\n     private final int prefetchCount;\n+    private final String sessionId;\n \n     ReceiverOptions(ReceiveMode receiveMode, int prefetchCount) {\n+        this(receiveMode, prefetchCount, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTYwODUwOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMzo1NlrOGEF4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTowMzo1NlrOGEF4Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0Mzc1MQ==", "bodyText": "\"Id of the session to receive messages from.\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943751", "createdAt": "2020-04-10T21:03:56Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -27,10 +33,14 @@ ReceiveMode getReceiveMode() {\n     }\n \n     /**\n-     * Gets the prefetch count of the receiver.\n+     * Gets the sessionId for the message.\n      *\n-     * @return The prefetch count of the receiver.\n+     * @return the sessionId for the message.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2035, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}