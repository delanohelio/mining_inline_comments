{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzkxNTEy", "number": 14702, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozNzo0MlrOEfHeBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNzo0NFrOEfph5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDYzNjg2OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzozNzo0MlrOHLL0hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0Njo0N1rOHL9NVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA==", "bodyText": "This constructor is currently public because this class lives in a different package than the convenience layer.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481490054", "createdAt": "2020-09-01T23:37:42Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjYzMw==", "bodyText": "A user should never need to initialize this type, correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492633", "createdAt": "2020-09-01T23:46:06Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5ODM0OQ==", "bodyText": "correct, I am talking to Srikanta to see what we should do here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481498349", "createdAt": "2020-09-02T00:05:51Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUwMzI3MQ==", "bodyText": "@srnagar", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481503271", "createdAt": "2020-09-02T00:22:24Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTEyMw==", "bodyText": "Spoke to @azabbasi offline and discussed 3 options.\n\nLeave the public ctor as-is since this is output-only model and the user is not expected to create a new instance\nUse an interface for public model type and define a concrete type in implementation package\nUse a helper type to convert from internal type to public type and make the ctor package-private on the public type.\n\nFor options 1 and 3, flatten the internal ModelData type and pass the properties directly.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482271123", "createdAt": "2020-09-02T18:16:10Z", "author": {"login": "srnagar"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5OTIyMA==", "bodyText": "Thank you Srikanta. I went with the 3rd option as it seems to be the cleanest", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482299220", "createdAt": "2020-09-02T18:46:47Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDY1MDQwOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzo0NDoyMlrOHLL8Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMDowNToxN1rOHLMUXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjA1OA==", "bodyText": "this gives us correctly formatted json string, correct?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492058", "createdAt": "2020-09-01T23:44:22Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5ODIwNg==", "bodyText": "no, I had to use writeValueAsString to get that out of the object.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481498206", "createdAt": "2020-09-02T00:05:17Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjA1OA=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDY1MzEwOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzo0NTozMlrOHLL94w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMzo0NzoyM1rOHLMAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjQ1MQ==", "bodyText": "I don't think we need java doc comments on these private fields, the getters and setters have the comments already, so this feels repetitive. What do you think?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492451", "createdAt": "2020-09-01T23:45:32Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+    }\n+\n+    /*\n+     * A language map that contains the localized display names as specified in\n+     * the model definition.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5Mjk5Mw==", "bodyText": "This is a copy of the ModelData, I tried to keep changes as minimal as possible.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492993", "createdAt": "2020-09-01T23:47:23Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+    }\n+\n+    /*\n+     * A language map that contains the localized display names as specified in\n+     * the model definition.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjQ1MQ=="}, "originalCommit": {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTU0NDQ0OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODozNTo0N1rOHL8lyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1MjoyMVrOHMBk6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ==", "bodyText": "Will this be included retrieving multiple models also?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482289099", "createdAt": "2020-09-02T18:35:47Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5OTg5OQ==", "bodyText": "yes, it's only used for the list operation and it is turned on by default in .NET, so I turned it on by default in here too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482299899", "createdAt": "2020-09-02T18:47:33Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, "originalCommit": {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNTcxNQ==", "bodyText": "Isn't this false by default, on the .NET client?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482305715", "createdAt": "2020-09-02T18:53:41Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, "originalCommit": {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0OTY3NA==", "bodyText": "no, On by default.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482349674", "createdAt": "2020-09-02T19:36:34Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, "originalCommit": {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MDc5Mw==", "bodyText": "Correction:\nOn GetModel we use default value of true and do not have an overload to change it. So this constant will not change.\nOn ListModel, default value is false.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482370793", "createdAt": "2020-09-02T19:52:21Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, "originalCommit": {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTYxOTExOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0ODo1MlrOHL9U8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1NTowMlrOHL9rrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMTE2OA==", "bodyText": "We call this ModelData in the .NET client, maybe call it the same here as well?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482301168", "createdAt": "2020-09-02T18:48:52Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -750,19 +752,19 @@ public HttpPipeline getHttpPipeline() {\n      * @return A {@link PagedFlux} of created models and the http response.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<ModelData> createModels(List<String> models) {\n+    public PagedFlux<DigitalTwinModelData> createModels(List<String> models) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNjk5MQ==", "bodyText": "sure, we can reuse the same name now that they are in 2 different packages.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482306991", "createdAt": "2020-09-02T18:55:02Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -750,19 +752,19 @@ public HttpPipeline getHttpPipeline() {\n      * @return A {@link PagedFlux} of created models and the http response.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<ModelData> createModels(List<String> models) {\n+    public PagedFlux<DigitalTwinModelData> createModels(List<String> models) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMTE2OA=="}, "originalCommit": {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTY0MDIxOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1MjoyOVrOHL9iPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1MjoyOVrOHL9iPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDU3NQ==", "bodyText": "Should we thrown an exception here? An exception here indicates that service sent us incorrectly formatted data, we should surface this exception up.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482304575", "createdAt": "2020-09-02T18:52:29Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * Creates publicly facing object types\n+ */\n+public class ModelConverter {\n+    public static DigitalTwinModelData convertToDigitalTwinModelData(\n+        String id,\n+        Object model,\n+        OffsetDateTime uploadTime,\n+        Map<String, String> description,\n+        Map<String, String> displayName,\n+        Boolean isDecommissioned)\n+    {\n+        String modelStringValue = null;\n+\n+        if (model!= null){\n+            try {\n+                modelStringValue = new ObjectMapper().writeValueAsString(model);\n+            } catch (JsonProcessingException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTY1NTI0OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1NTowOFrOHL9sBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1NjoyOVrOHL9xEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNzA3Ng==", "bodyText": "Why not have the converter take in the PL ModelData directly?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482307076", "createdAt": "2020-09-02T18:55:08Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * Creates publicly facing object types\n+ */\n+public class ModelConverter {\n+    public static DigitalTwinModelData convertToDigitalTwinModelData(\n+        String id,\n+        Object model,\n+        OffsetDateTime uploadTime,\n+        Map<String, String> description,\n+        Map<String, String> displayName,\n+        Boolean isDecommissioned)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwODM3MQ==", "bodyText": "good question, we cannot expose any models from the implementation package to the user. and now that we are hiding the ModelData, we can't take it as a parameter here since this is in the core.model package", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482308371", "createdAt": "2020-09-02T18:56:29Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * Creates publicly facing object types\n+ */\n+public class ModelConverter {\n+    public static DigitalTwinModelData convertToDigitalTwinModelData(\n+        String id,\n+        Object model,\n+        OffsetDateTime uploadTime,\n+        Map<String, String> description,\n+        Map<String, String> displayName,\n+        Boolean isDecommissioned)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNzA3Ng=="}, "originalCommit": {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjE4MzI0OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxMzowNFrOHMDRtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxMzowNFrOHMDRtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM5ODY0NQ==", "bodyText": "can be method reference: .map(ModelDataConverter::map)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482398645", "createdAt": "2020-09-02T20:13:04Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -777,13 +777,20 @@ public HttpPipeline getHttpPipeline() {\n \n         return protocolLayer.getDigitalTwinModels().addWithResponseAsync(modelsPayload, context)\n             .map(\n-                listResponse -> new PagedResponseBase<>(\n-                    listResponse.getRequest(),\n-                    listResponse.getStatusCode(),\n-                    listResponse.getHeaders(),\n-                    listResponse.getValue(),\n-                    null,\n-                    ((ResponseBase)listResponse).getDeserializedHeaders()));\n+                objectPagedResponse -> {\n+                    List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n+                        .map(object -> ModelDataConverter.map(object))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjE5MTc5OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNDoxNVrOHMDXsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNDoxNVrOHMDXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMDE3Ng==", "bodyText": "nit: tabbing needs to be fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482400176", "createdAt": "2020-09-02T20:14:15Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -810,7 +817,15 @@ public HttpPipeline getHttpPipeline() {\n     Mono<Response<ModelData>> getModelWithResponse(String modelId, Context context){\n         return protocolLayer\n             .getDigitalTwinModels()\n-            .getByIdWithResponseAsync(modelId, includeModelDefinition, context);\n+            .getByIdWithResponseAsync(modelId, includeModelDefinitionOnGet, context)\n+            .map(response -> {\n+                com.azure.digitaltwins.core.implementation.models.ModelData modelData = response.getValue();\n+                return new SimpleResponse<>(\n+                response.getRequest(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjIwMzM0OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNTo0NlrOHMDflw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNjoxNFrOHMDh-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjE5OQ==", "bodyText": "method reference here as well -> anywhere we are calling a static method can be replaced by a method reference", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482402199", "createdAt": "2020-09-02T20:15:46Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -851,11 +866,39 @@ public HttpPipeline getHttpPipeline() {\n             listModelOptions.getDependenciesFor(),\n             listModelOptions.getIncludeModelDefinition(),\n             new DigitalTwinModelsListOptions().setMaxItemCount(listModelOptions.getMaxItemCount()),\n-            context);\n+            context)\n+            .map(\n+                objectPagedResponse -> {\n+                    List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n+                        .map(object -> ModelDataConverter.map(object))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjgwOQ==", "bodyText": "https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482402809", "createdAt": "2020-09-02T20:16:14Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -851,11 +866,39 @@ public HttpPipeline getHttpPipeline() {\n             listModelOptions.getDependenciesFor(),\n             listModelOptions.getIncludeModelDefinition(),\n             new DigitalTwinModelsListOptions().setMaxItemCount(listModelOptions.getMaxItemCount()),\n-            context);\n+            context)\n+            .map(\n+                objectPagedResponse -> {\n+                    List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n+                        .map(object -> ModelDataConverter.map(object))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjE5OQ=="}, "originalCommit": {"oid": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjIxNzM1OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNzo0NFrOHMDpYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMDoxNzo0NFrOHMDpYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwNDcwNg==", "bodyText": "these comments need to be updated -> DigitalTwinModelData", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482404706", "createdAt": "2020-09-02T20:17:44Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java", "diffHunk": "@@ -66,7 +66,7 @@\n      * definition.\n      *\n      * @param displayName the displayName value to set.\n-     * @return the ModelData object itself.\n+     * @return the DigitalTwinModelData object itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1bb57567353c2bcd9118e3154bf942750047fa"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1380, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}