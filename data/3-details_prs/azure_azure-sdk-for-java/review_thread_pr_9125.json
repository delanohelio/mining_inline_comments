{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5Mzg2MDEz", "number": 9125, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMTo1OTo0NVrODog9gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMzo1MlrODohKgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODA5NjY0OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/module-info.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMTo1OTo0NVrOF3HKlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjowMjo0OFrOF3HPJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzMzM5Nw==", "bodyText": "Maybe a newline here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393333397", "createdAt": "2020-03-16T21:59:45Z", "author": {"login": "seanmcc-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/module-info.java", "diffHunk": "@@ -15,7 +15,7 @@\n     exports com.azure.storage.blob.implementation to\n         com.azure.storage.blob.cryptography,\n         com.azure.storage.blob.batch,\n-        com.azure.storage.file.datalake;    // FIXME this should not be a long-term solution\n+        com.azure.storage.file.datalake, azure.storage.blob.changefeed;    // FIXME this should not be a long-term solution", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNDU2NA==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393334564", "createdAt": "2020-03-16T22:02:48Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/module-info.java", "diffHunk": "@@ -15,7 +15,7 @@\n     exports com.azure.storage.blob.implementation to\n         com.azure.storage.blob.cryptography,\n         com.azure.storage.blob.batch,\n-        com.azure.storage.file.datalake;    // FIXME this should not be a long-term solution\n+        com.azure.storage.file.datalake, azure.storage.blob.changefeed;    // FIXME this should not be a long-term solution", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzMzM5Nw=="}, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODEyNDQ3OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedAsyncClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMTo0MFrOF3Hb5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjozMTo0N1rOF3H9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNzgyOA==", "bodyText": "I'd like to have more informative docs. Not sure if you were planning on adding that later.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393337828", "createdAt": "2020-03-16T22:11:40Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedAsyncClient.java", "diffHunk": "@@ -4,10 +4,38 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.blob.BlobContainerAsyncClient;\n+import com.azure.storage.blob.BlobContainerClientBuilder;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a client that contains all operations that apply to Azure Storage Blob changefeed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM0NjQ2NQ==", "bodyText": "yep, I will add more information as I understand more about ChangeFeed and add more related classes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393346465", "createdAt": "2020-03-16T22:31:47Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedAsyncClient.java", "diffHunk": "@@ -4,10 +4,38 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.blob.BlobContainerAsyncClient;\n+import com.azure.storage.blob.BlobContainerClientBuilder;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a client that contains all operations that apply to Azure Storage Blob changefeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNzgyOA=="}, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODEyNTYxOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMjoxMlrOF3HcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMjoxMlrOF3HcpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODAyMQ==", "bodyText": "\"as called respectively\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393338021", "createdAt": "2020-03-16T22:12:12Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "diffHunk": "@@ -4,10 +4,72 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.storage.blob.BlobServiceAsyncClient;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a fluent builder API to help aid the configuration and instantiation of\n+ * {@link BlobChangefeedClient BlobChangefeedClients} and {@link BlobChangefeedAsyncClient BlobChangefeedAsyncClients}\n+ * when {@link #buildClient() buildClient} and {@link #buildAsyncClient() buildAsyncClient} as called respectively.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODEyODM4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMzoxN1rOF3HeTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMzoxN1rOF3HeTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODQ0Ng==", "bodyText": "I think we can just say using the URL (or endpoint) and pipeline of the passed client. I don't think we need to specify that we use the getters.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393338446", "createdAt": "2020-03-16T22:13:17Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "diffHunk": "@@ -4,10 +4,72 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.storage.blob.BlobServiceAsyncClient;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a fluent builder API to help aid the configuration and instantiation of\n+ * {@link BlobChangefeedClient BlobChangefeedClients} and {@link BlobChangefeedAsyncClient BlobChangefeedAsyncClients}\n+ * when {@link #buildClient() buildClient} and {@link #buildAsyncClient() buildAsyncClient} as called respectively.\n  */\n @ServiceClientBuilder(serviceClients = {BlobChangefeedClient.class, BlobChangefeedAsyncClient.class})\n-public class BlobChangefeedClientBuilder {\n+public final class BlobChangefeedClientBuilder {\n+    private final String accountUrl;\n+    private final HttpPipeline pipeline;\n+    private final BlobServiceVersion version;\n+\n+    /**\n+     * Constructs the {@link BlobChangefeedClientBuilder} using the {@link BlobServiceClient#getAccountUrl() account\n+     * URL} and {@link BlobServiceClient#getHttpPipeline() HttpPipeline} properties of the passed {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODEyOTk1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjoxMzo1MlrOF3HfNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMjozMjo1NFrOF3H_Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODY3OQ==", "bodyText": "Are we planning on adding options? Or should we change the doc?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393338679", "createdAt": "2020-03-16T22:13:52Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "diffHunk": "@@ -4,10 +4,72 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.storage.blob.BlobServiceAsyncClient;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a fluent builder API to help aid the configuration and instantiation of\n+ * {@link BlobChangefeedClient BlobChangefeedClients} and {@link BlobChangefeedAsyncClient BlobChangefeedAsyncClients}\n+ * when {@link #buildClient() buildClient} and {@link #buildAsyncClient() buildAsyncClient} as called respectively.\n  */\n @ServiceClientBuilder(serviceClients = {BlobChangefeedClient.class, BlobChangefeedAsyncClient.class})\n-public class BlobChangefeedClientBuilder {\n+public final class BlobChangefeedClientBuilder {\n+    private final String accountUrl;\n+    private final HttpPipeline pipeline;\n+    private final BlobServiceVersion version;\n+\n+    /**\n+     * Constructs the {@link BlobChangefeedClientBuilder} using the {@link BlobServiceClient#getAccountUrl() account\n+     * URL} and {@link BlobServiceClient#getHttpPipeline() HttpPipeline} properties of the passed {@link\n+     * BlobServiceClient}.\n+     *\n+     * @param client {@link BlobServiceClient} whose properties are used to configure the builder.\n+     */\n+    public BlobChangefeedClientBuilder(BlobServiceClient client) {\n+        this.accountUrl = client.getAccountUrl();\n+        this.pipeline = client.getHttpPipeline();\n+        this.version = client.getServiceVersion();\n+    }\n+\n+    /**\n+     * Constructs the {@link BlobChangefeedClientBuilder} using the {@link BlobServiceAsyncClient#getAccountUrl()\n+     * account URL} and {@link BlobServiceAsyncClient#getHttpPipeline() HttpPipeline} properties of the passed {@link\n+     * BlobServiceAsyncClient}.\n+     *\n+     * @param client {@link BlobServiceClient} whose properties are used to configure the builder.\n+     */\n+    public BlobChangefeedClientBuilder(BlobServiceAsyncClient client) {\n+        this.accountUrl = client.getAccountUrl();\n+        this.pipeline = client.getHttpPipeline();\n+        this.version = client.getServiceVersion();\n+    }\n+\n+    /**\n+     * Creates a {@link BlobChangefeedClient} based on options set in the builder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM0Njg3NA==", "bodyText": "Let me change the doc for now and add it if we do end up adding options", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9125#discussion_r393346874", "createdAt": "2020-03-16T22:32:54Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/BlobChangefeedClientBuilder.java", "diffHunk": "@@ -4,10 +4,72 @@\n package com.azure.storage.blob.changefeed;\n \n import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.storage.blob.BlobServiceAsyncClient;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.BlobServiceVersion;\n \n /**\n- * TEMP\n+ * This class provides a fluent builder API to help aid the configuration and instantiation of\n+ * {@link BlobChangefeedClient BlobChangefeedClients} and {@link BlobChangefeedAsyncClient BlobChangefeedAsyncClients}\n+ * when {@link #buildClient() buildClient} and {@link #buildAsyncClient() buildAsyncClient} as called respectively.\n  */\n @ServiceClientBuilder(serviceClients = {BlobChangefeedClient.class, BlobChangefeedAsyncClient.class})\n-public class BlobChangefeedClientBuilder {\n+public final class BlobChangefeedClientBuilder {\n+    private final String accountUrl;\n+    private final HttpPipeline pipeline;\n+    private final BlobServiceVersion version;\n+\n+    /**\n+     * Constructs the {@link BlobChangefeedClientBuilder} using the {@link BlobServiceClient#getAccountUrl() account\n+     * URL} and {@link BlobServiceClient#getHttpPipeline() HttpPipeline} properties of the passed {@link\n+     * BlobServiceClient}.\n+     *\n+     * @param client {@link BlobServiceClient} whose properties are used to configure the builder.\n+     */\n+    public BlobChangefeedClientBuilder(BlobServiceClient client) {\n+        this.accountUrl = client.getAccountUrl();\n+        this.pipeline = client.getHttpPipeline();\n+        this.version = client.getServiceVersion();\n+    }\n+\n+    /**\n+     * Constructs the {@link BlobChangefeedClientBuilder} using the {@link BlobServiceAsyncClient#getAccountUrl()\n+     * account URL} and {@link BlobServiceAsyncClient#getHttpPipeline() HttpPipeline} properties of the passed {@link\n+     * BlobServiceAsyncClient}.\n+     *\n+     * @param client {@link BlobServiceClient} whose properties are used to configure the builder.\n+     */\n+    public BlobChangefeedClientBuilder(BlobServiceAsyncClient client) {\n+        this.accountUrl = client.getAccountUrl();\n+        this.pipeline = client.getHttpPipeline();\n+        this.version = client.getServiceVersion();\n+    }\n+\n+    /**\n+     * Creates a {@link BlobChangefeedClient} based on options set in the builder.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODY3OQ=="}, "originalCommit": {"oid": "7b73949e72798c971ec13556ad7624aed4bfd55f"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 103, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}