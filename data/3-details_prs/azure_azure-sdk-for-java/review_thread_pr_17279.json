{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTkwNTY1", "number": 17279, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo1NTo0NFrOE2_IWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo1NTo0NFrOE2_IWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDkyODg4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjo1NTo0NFrOHwE5ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzoyODoyNFrOHwzoJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA==", "bodyText": "why we remove requestUri?\nAnd I think currently we are mixing using resourceAddress and requestUri:\nfor example in RxGatewayStoreModel, we are passing resourceId to resourceAddress of CosmosException\nBut in RntbdRequestManager, we are passing physical address to resourceAddress of CosmosException", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520173924", "createdAt": "2020-11-09T22:55:44Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI0MDE3NQ==", "bodyText": "Removed requestUri from CosmosException string representation, as it is never set.\nIn RxGatewayStoreModel, we are passing request.getResourceAddress()", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520240175", "createdAt": "2020-11-10T02:10:02Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI0NDg5OQ==", "bodyText": "This is how it looks for gateway -> resourceAddress='dbs/RxJava.SDKTest.SharedDatabase_20201109T182237_GSh/colls/3d2be199-e23b-4af2-a755-510d7068ff97/docs/18b9d280-e899-4300-ae0c-5fe56411aa18,\nAnd for direct -> resourceAddress='rntbd://cdb-ms-prod-westus2-fd26.documents.azure.com:14376/apps/db2a149b-bdb4-4755-b26e-56d1a86cdd4e/services/8ce44d24-fe68-49ae-9784-94b322fa46a3/partitions/003a20cb-a187-4b3a-9bc9-306be0217c36/replicas/132494067072942319s/,\nwhich both are resource addresses.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520244899", "createdAt": "2020-11-10T02:26:08Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NzE0Nw==", "bodyText": "Thanks Kushagra~\nI just wonder should we also capture the server info for gateway mode: (like following)\nhttps://127.0.0.1:8081/dbs/RxJava.SDKTest.SharedDatabase_20201109T193921_erZ/colls/7d5337a3-30f7-46bb-b318-104a5dcfb721\nCurrently, the resourceAddress for gateway mode only contains the resourceId or full name, but not a complete uri. I think that probably why there is requestResource and requestUri there previously? (not sure though)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520267147", "createdAt": "2020-11-10T03:43:23Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3NDg4Nw==", "bodyText": "Good point, not sure how we can capture that, any ideas ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520274887", "createdAt": "2020-11-10T04:12:45Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4NTk2NQ==", "bodyText": "Currently we calculate the uri at RxGatewayStoreModel.performRequest, maybe we can add it in the requestContext?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520685965", "createdAt": "2020-11-10T16:12:30Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyMDY2OQ==", "bodyText": "Yes, I will try to do that, so we can re-use it, will update this thread once I have reached a conclusion :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520920669", "createdAt": "2020-11-10T22:41:44Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyMTUyMg==", "bodyText": "what about the direct mode? isn't that set in the direct mode? @kushagraThapar  could you please check.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520921522", "createdAt": "2020-11-10T22:43:50Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMDkyNQ==", "bodyText": "@moderakh  - It is not used anywhere, other than at this code piece - https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java#L808\nWhich I am not even sure, if that is correct or not, but don't plan to touch it  :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520930925", "createdAt": "2020-11-10T23:05:52Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMTY4OQ==", "bodyText": "@xinlian12 @FabianMeiswinkel  - I have added the full resource address in gateway mode too, please check.\nAlso updated the PR with sample.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520931689", "createdAt": "2020-11-10T23:07:56Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzOTU1Ng==", "bodyText": "Thanks Kushagra, looks good to me~", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17279#discussion_r520939556", "createdAt": "2020-11-10T23:28:24Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosException.java", "diffHunk": "@@ -284,7 +284,7 @@ CosmosException setDiagnostics(CosmosDiagnostics cosmosDiagnostics) {\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \"{\" + \"userAgent=\" + USER_AGENT + \", error=\" + cosmosError + \", resourceAddress='\"\n-                   + resourceAddress  +  \"', requestUri='\" + (requestUri != null ? requestUri.getURIAsString() : null) +  \"', statusCode=\" + statusCode + \", message=\" + getMessage()\n+                   + resourceAddress  +  \", statusCode=\" + statusCode + \", message=\" + getMessage()\n                    + \", causeInfo=\" + causeInfo() + \", responseHeaders=\" + responseHeaders + \", requestHeaders=\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE3MzkyNA=="}, "originalCommit": {"oid": "0d224117a49a9ff2d60b052f083d5dc17fbb2d7f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2949, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}