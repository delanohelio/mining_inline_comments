{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODAzMDg0", "number": 10900, "title": "Container soft delete", "bodyText": "", "createdAt": "2020-05-07T16:48:08Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900", "merged": true, "mergeCommit": {"oid": "d914f42abb879af4e1fa750cb34d1ddcd25bc2d8"}, "closed": true, "closedAt": "2020-05-14T15:22:15Z", "author": {"login": "kasobol-msft"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXRm5qgH2gAyNDE0ODAzMDg0OjU5Yzc4YjIxN2E1ZjNiY2QxODhiMDUxZTBkOGEzYjU0ZjVlNmJhOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg_pBUgFqTQxMTMwODA4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "committedDate": "2020-04-13T16:37:13Z", "message": "change versioned account for tests variable names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbfa86af23cf366fc9904fa86040a473c042ef75", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cbfa86af23cf366fc9904fa86040a473c042ef75", "committedDate": "2020-04-20T15:00:42Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "committedDate": "2020-04-30T15:10:12Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "committedDate": "2020-05-05T16:55:08Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe71dfe62c843fbdc4a710115bb36d05e432db0", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbe71dfe62c843fbdc4a710115bb36d05e432db0", "committedDate": "2020-05-06T01:01:40Z", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe5dd2f0ac5121c1f0afe4441ca67494887f538d", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe5dd2f0ac5121c1f0afe4441ca67494887f538d", "committedDate": "2020-05-06T16:09:36Z", "message": "list deleted containers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a8c56eb7c137a2f73b42a8367673128eb4c1b8", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/72a8c56eb7c137a2f73b42a8367673128eb4c1b8", "committedDate": "2020-05-07T00:05:33Z", "message": "restore."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f74e6e6b34bbb170723ac48a495f7b7bf3d696b", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f74e6e6b34bbb170723ac48a495f7b7bf3d696b", "committedDate": "2020-05-07T16:46:58Z", "message": "more tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "committedDate": "2020-05-07T17:04:20Z", "message": "make ci happy again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjgzMDk1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-407683095", "createdAt": "2020-05-07T17:25:37Z", "commit": {"oid": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoyNTozN1rOGSItOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNzoyNjowNFrOGSIuVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDIwMg==", "bodyText": "We're restoring a deleted container right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Restores a previously created container.  The restored container\n          \n          \n            \n                 * Restores a previously delete container. The restored container", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421670202", "createdAt": "2020-05-07T17:25:37Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously created container.  The restored container", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDQ4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This API is only functional is Container Soft Delete is enabled\n          \n          \n            \n                 * This API is only functional if Container Soft Delete is enabled", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421670487", "createdAt": "2020-05-07T17:26:04Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously created container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional is Container Soft Delete is enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a51540490f05ddf05bd14723ff7d59475e0294d2", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a51540490f05ddf05bd14723ff7d59475e0294d2", "committedDate": "2020-05-07T17:41:34Z", "message": "fix comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d4b7bc950c694a19d37d069fe54c7f3975a704d", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4d4b7bc950c694a19d37d069fe54c7f3975a704d", "committedDate": "2020-05-07T18:56:47Z", "message": "decouple sas version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ff793c7e3c08c9405dc5964efadf539c33e84e", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/87ff793c7e3c08c9405dc5964efadf539c33e84e", "committedDate": "2020-05-07T19:15:07Z", "message": "aaaaaaaaaaaaaa"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d9e206b84db164a3c137cf4bf95b6883ebb829f", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2d9e206b84db164a3c137cf4bf95b6883ebb829f", "committedDate": "2020-05-07T19:29:19Z", "message": "checkstyle..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "committedDate": "2020-05-07T20:25:53Z", "message": "datalake sas tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODMzMDM4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-407833038", "createdAt": "2020-05-07T21:00:29Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODg0ODA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-407884808", "createdAt": "2020-05-07T22:38:35Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjozODozNVrOGSSuWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo1NjoxMlrOGSTGKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA==", "bodyText": "At a higher level, is this what the user would expect? My naive expectation would be that the container is restored into its previous container name?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421834330", "createdAt": "2020-05-07T22:38:35Z", "author": {"login": "JonathanGiles"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDA4OQ==", "bodyText": "FYI - Deprecation needs to be called out and discussed in more detail whenever it occurs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421840089", "createdAt": "2020-05-07T22:55:14Z", "author": {"login": "JonathanGiles"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java", "diffHunk": "@@ -42,13 +45,53 @@ public BlobContainerListDetails setRetrieveMetadata(boolean retrieveMetadata) {\n         return this;\n     }\n \n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @return a flag indicating whether deleted containers should be returned\n+     */\n+    public boolean getRetrieveDeleted() {\n+        return this.retrieveDeleted;\n+    }\n+\n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @param retrieveDeleted Flag indicating whether deleted containers should be returned.\n+     * @return the updated ContainerListDetails object\n+     */\n+    public BlobContainerListDetails setRetrieveDeleted(boolean retrieveDeleted) {\n+        this.retrieveDeleted = retrieveDeleted;\n+        return this;\n+    }\n+\n     /**\n      * @return the listing flags\n+     * @deprecated use {@link #toIncludeTypes()}\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDQyNA==", "bodyText": "There needs to be much more JavaDoc here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421840424", "createdAt": "2020-05-07T22:56:12Z", "author": {"login": "JonathanGiles"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java", "diffHunk": "@@ -42,13 +45,53 @@ public BlobContainerListDetails setRetrieveMetadata(boolean retrieveMetadata) {\n         return this;\n     }\n \n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @return a flag indicating whether deleted containers should be returned\n+     */\n+    public boolean getRetrieveDeleted() {\n+        return this.retrieveDeleted;\n+    }\n+\n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @param retrieveDeleted Flag indicating whether deleted containers should be returned.\n+     * @return the updated ContainerListDetails object\n+     */\n+    public BlobContainerListDetails setRetrieveDeleted(boolean retrieveDeleted) {\n+        this.retrieveDeleted = retrieveDeleted;\n+        return this;\n+    }\n+\n     /**\n      * @return the listing flags\n+     * @deprecated use {@link #toIncludeTypes()}\n      */\n+    @Deprecated\n     public ListBlobContainersIncludeType toIncludeType() {\n         if (this.retrieveMetadata) {\n             return ListBlobContainersIncludeType.METADATA;\n         }\n         return null;\n     }\n+\n+    /**\n+     * @return the listing flags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da057e7179d9d92060ae1179f4d781b95b6040ac", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/da057e7179d9d92060ae1179f4d781b95b6040ac", "committedDate": "2020-05-07T23:12:46Z", "message": "pr feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2aa643728110eb8628e7496274fea2e415d6d59", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e2aa643728110eb8628e7496274fea2e415d6d59", "committedDate": "2020-05-08T00:05:40Z", "message": "rename sas service version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDE3MjE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408417215", "createdAt": "2020-05-08T17:59:41Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo1OTo0MVrOGSuT_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzo1OTo0MVrOGSuT_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjMzMw==", "bodyText": "The docs should point to the REST docs and should have a code snippet.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422286333", "createdAt": "2020-05-08T17:59:41Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDIxMTI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408421125", "createdAt": "2020-05-08T18:05:49Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowNTo1MFrOGSufPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowNTo1MFrOGSufPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTIxNQ==", "bodyText": "Was there a discussion around restore vs undelete? Restore sounds cleaner, but we already have undelete blobs, so not sure if we want to be consistent.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422289215", "createdAt": "2020-05-08T18:05:50Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDIzMjQy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408423242", "createdAt": "2020-05-08T18:09:20Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowOToyMFrOGSulyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowOToyMFrOGSulyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MDg4OQ==", "bodyText": "I think we also want to be adding this tracing context", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422290889", "createdAt": "2020-05-08T18:09:20Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n+        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n+        try {\n+            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n+                                                    Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDMyMzk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408432397", "createdAt": "2020-05-08T18:23:57Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyMzo1N1rOGSvCjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyMzo1N1rOGSvCjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5ODI1Mw==", "bodyText": "Can you also add an entry in the changelog, please? Not sure about other platforms, but in Java we generally update the changelog with each PR", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422298253", "createdAt": "2020-05-08T18:23:57Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/specialized/HelperTest.groovy", "diffHunk": "@@ -243,9 +242,9 @@ class HelperTest extends APISpec {\n \n         where:\n         containerName | blobName | snapId | expiryTime           || expectedResource | expectedStringToSign\n-        \"c\"           | \"b\"      | \"id\"   | OffsetDateTime.now() || \"bs\"             | \"\\n\\n%s\\n\" + \"/blob/%s/c/b\\n\\n\\n\\n\" + BlobServiceVersion.getLatest().getVersion() + \"\\nbs\\nid\\n\\n\\n\\n\\n\"\n-        \"c\"           | \"b\"      | null   | OffsetDateTime.now() || \"b\"              | \"\\n\\n%s\\n\" + \"/blob/%s/c/b\\n\\n\\n\\n\" + BlobServiceVersion.getLatest().getVersion() + \"\\nb\\n\\n\\n\\n\\n\\n\"\n-        \"c\"           | null     | null   | OffsetDateTime.now() || \"c\"              | \"\\n\\n%s\\n\" + \"/blob/%s/c\\n\\n\\n\\n\" + BlobServiceVersion.getLatest().getVersion() + \"\\nc\\n\\n\\n\\n\\n\\n\"\n+        \"c\"           | \"b\"      | \"id\"   | OffsetDateTime.now() || \"bs\"             | \"\\n\\n%s\\n\" + \"/blob/%s/c/b\\n\\n\\n\\n\" + BlobServiceSasVersion.getLatest().getVersion() + \"\\nbs\\nid\\n\\n\\n\\n\\n\"\n+        \"c\"           | \"b\"      | null   | OffsetDateTime.now() || \"b\"              | \"\\n\\n%s\\n\" + \"/blob/%s/c/b\\n\\n\\n\\n\" + BlobServiceSasVersion.getLatest().getVersion() + \"\\nb\\n\\n\\n\\n\\n\\n\"\n+        \"c\"           | null     | null   | OffsetDateTime.now() || \"c\"              | \"\\n\\n%s\\n\" + \"/blob/%s/c\\n\\n\\n\\n\" + BlobServiceSasVersion.getLatest().getVersion() + \"\\nc\\n\\n\\n\\n\\n\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDM0ODk5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408434899", "createdAt": "2020-05-08T18:27:53Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyNzo1NFrOGSvKbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyNzo1NFrOGSvKbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwMDI3MA==", "bodyText": "Why do you need to do a listing here to get the name of the blobContainerItem? Seems like you could just access the container name from the client directly", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422300270", "createdAt": "2020-05-08T18:27:54Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ContainerAPITest.groovy", "diffHunk": "@@ -1423,4 +1427,170 @@ class ContainerAPITest extends APISpec {\n         then:\n         thrown(IllegalArgumentException)\n     }\n+\n+    def \"Restore Container\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDM1NTUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408435550", "createdAt": "2020-05-08T18:28:54Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyODo1NFrOGSvMcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODoyODo1NFrOGSvMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwMDc4Nw==", "bodyText": "It would be good to validate some of the values on the response if there are any to make sure they're being set correctly.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422300787", "createdAt": "2020-05-08T18:28:54Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ContainerAPITest.groovy", "diffHunk": "@@ -1423,4 +1427,170 @@ class ContainerAPITest extends APISpec {\n         then:\n         thrown(IllegalArgumentException)\n     }\n+\n+    def \"Restore Container\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        cc1.restore(blobContainerItem.getName(), blobContainerItem.getVersion())\n+\n+        then:\n+        cc1.listBlobs().size() == 1\n+        cc1.listBlobs().first().getName() == blobName\n+    }\n+\n+    def \"Restore Container into other container\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def cc2 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc2.restore(blobContainerItem.getName(), blobContainerItem.getVersion())\n+\n+        then:\n+        cc2.listBlobs().size() == 1\n+        cc2.listBlobs().first().getName() == blobName\n+    }\n+\n+    def \"Restore Container with response\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def response = cc1.restoreWithResponse(blobContainerItem.getName(), blobContainerItem.getVersion(),\n+            Duration.ofMinutes(1), Context.NONE)\n+\n+        then:\n+        response != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDM5OTMx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408439931", "createdAt": "2020-05-08T18:36:05Z", "commit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODozNjowNVrOGSva6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODozNjowNVrOGSva6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMwNDQ4OQ==", "bodyText": "I think we're trying to move towards using the StepVerifier for async tests instead of blocking. As much as possible for the whole test, but at least in the when blocks", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422304489", "createdAt": "2020-05-08T18:36:05Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ContainerAPITest.groovy", "diffHunk": "@@ -1423,4 +1427,170 @@ class ContainerAPITest extends APISpec {\n         then:\n         thrown(IllegalArgumentException)\n     }\n+\n+    def \"Restore Container\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        cc1.restore(blobContainerItem.getName(), blobContainerItem.getVersion())\n+\n+        then:\n+        cc1.listBlobs().size() == 1\n+        cc1.listBlobs().first().getName() == blobName\n+    }\n+\n+    def \"Restore Container into other container\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def cc2 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc2.restore(blobContainerItem.getName(), blobContainerItem.getVersion())\n+\n+        then:\n+        cc2.listBlobs().size() == 1\n+        cc2.listBlobs().first().getName() == blobName\n+    }\n+\n+    def \"Restore Container with response\"() {\n+        given:\n+        def cc1 = primaryBlobServiceClient.getBlobContainerClient(generateContainerName())\n+        cc1.create()\n+        def blobName = generateBlobName()\n+        cc1.getBlobClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def response = cc1.restoreWithResponse(blobContainerItem.getName(), blobContainerItem.getVersion(),\n+            Duration.ofMinutes(1), Context.NONE)\n+\n+        then:\n+        response != null\n+        cc1.listBlobs().size() == 1\n+        cc1.listBlobs().first().getName() == blobName\n+    }\n+\n+    def \"Restore Container async\"() {\n+        given:\n+        def cc1 = primaryBlobServiceAsyncClient.getBlobContainerAsyncClient(generateContainerName())\n+        cc1.create().block()\n+        def blobName = generateBlobName()\n+        cc1.getBlobAsyncClient(blobName).upload(defaultFlux, new ParallelTransferOptions()).block()\n+        cc1.delete().block()\n+        def blobContainerItem = primaryBlobServiceClient.listBlobContainers(\n+            new ListBlobContainersOptions()\n+                .setPrefix(cc1.getBlobContainerName())\n+                .setDetails(new BlobContainerListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        cc1.restore(blobContainerItem.getName(), blobContainerItem.getVersion()).block()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDUyMDE4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-408452018", "createdAt": "2020-05-08T18:55:49Z", "commit": {"oid": "e2aa643728110eb8628e7496274fea2e415d6d59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo1NTo1MFrOGSwA_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODo1NTo1MFrOGSwA_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMxNDIzOQ==", "bodyText": "Do we have these two test cases? I didn't find them.\n\nlist containers including deleted ones using sas token as credential\nundelete containers using sas token as credential\n\nThough it's likely that those two cases are not working, at least I haven't figured out why they are not working in Python \ud83d\ude00", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422314239", "createdAt": "2020-05-08T18:55:50Z", "author": {"login": "xiafu-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/ServiceAPITest.groovy", "diffHunk": "@@ -148,6 +149,32 @@ class ServiceAPITest extends APISpec {\n         containers.each { container -> container.delete() }\n     }\n \n+    def \"List deleted\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2aa643728110eb8628e7496274fea2e415d6d59"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e56dba1ec9d8488d435caf47637f09cd8da1547e", "committedDate": "2020-05-12T02:54:09Z", "message": "move to service client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25ba3b9433a5f712dc76ce9f3bca5970975eae72", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/25ba3b9433a5f712dc76ce9f3bca5970975eae72", "committedDate": "2020-05-12T15:12:20Z", "message": "Satisfy the checkstyle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95f39e81875eacbe148d62ec84c29559ce76c84", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c95f39e81875eacbe148d62ec84c29559ce76c84", "committedDate": "2020-05-12T16:31:39Z", "message": "Code snippets."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bfde58cde1c9a673fc1721a29e8a969f9080f00", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5bfde58cde1c9a673fc1721a29e8a969f9080f00", "committedDate": "2020-05-12T16:46:04Z", "message": "pr feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73b27e8f22e67a52c2a707883274e8c1e5f69059", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/73b27e8f22e67a52c2a707883274e8c1e5f69059", "committedDate": "2020-05-12T17:30:22Z", "message": "step verifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fb3d35075dd3829bfcc8a5420e7ace3ad2ca77c", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6fb3d35075dd3829bfcc8a5420e7ace3ad2ca77c", "committedDate": "2020-05-12T17:48:27Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d046ddacd3a57930742ab41c02064321830883f", "committedDate": "2020-05-12T18:11:04Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDg3NDQw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-410487440", "createdAt": "2020-05-12T23:17:09Z", "commit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNzowOVrOGUcNrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxNzowOVrOGUcNrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Njk1Ng==", "bodyText": "Why is this here now instead of on the Details type? Is it so we don't have to have a public method on Details to allow access across packages?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424086956", "createdAt": "2020-05-12T23:17:09Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -325,14 +325,37 @@ public String getAccountUrl() {\n         ListBlobContainersOptions options, Duration timeout) {\n         options = options == null ? new ListBlobContainersOptions() : options;\n \n-        ListBlobContainersIncludeType includeType = options.getDetails().toIncludeType();\n         return StorageImplUtils.applyOptionalTimeout(\n             this.azureBlobStorage.services().listBlobContainersSegmentWithRestResponseAsync(\n                 options.getPrefix(), marker, options.getMaxResultsPerPage(),\n-                includeType == null ? null : Collections.singletonList(includeType),\n+                toIncludeTypes(options.getDetails()),\n                 null, null, Context.NONE), timeout);\n     }\n \n+    /**\n+     * Converts {@link BlobContainerListDetails} into list of {@link ListBlobContainersIncludeType}\n+     * that contains only options selected. If no option is selected then null is returned.\n+     *\n+     * @return a list of selected options converted into {@link ListBlobContainersIncludeType}, null if none\n+     * of options has been selected.\n+     */\n+    private List<ListBlobContainersIncludeType> toIncludeTypes(BlobContainerListDetails blobContainerListDetails) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDg4MzU0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-410488354", "createdAt": "2020-05-12T23:19:34Z", "commit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxOTozNFrOGUcQdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoxOTozNFrOGUcQdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzY3MA==", "bodyText": "Unless the rest docs already say this, maybe we should add where this version can be retrieved from", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424087670", "createdAt": "2020-05-12T23:19:34Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -717,4 +740,123 @@ private void throwOnAnonymousAccess() {\n                 + \"credentials\"));\n         }\n     }\n+\n+    /**\n+     * Restores a previously deleted container.\n+     * If the container associated with provided <code>deletedContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDg5NDEx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-410489411", "createdAt": "2020-05-12T23:22:25Z", "commit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoyMjoyNlrOGUcUFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzoyMjoyNlrOGUcUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4ODU5OQ==", "bodyText": "I think we can get rid of this overload and the next one. We can have just the min and then the max is WithResponse.\nAlso, should we move the destinationContainerName into UndeleteContainerOptions so we don't have to add overloads later. Continuing the conversation we had around tags.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424088599", "createdAt": "2020-05-12T23:22:26Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -717,4 +740,123 @@ private void throwOnAnonymousAccess() {\n                 + \"credentials\"));\n         }\n     }\n+\n+    /**\n+     * Restores a previously deleted container.\n+     * If the container associated with provided <code>deletedContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n+     * to interact with the restored container.\n+     */\n+    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n+        String deletedContainerName, String deletedContainerVersion) {\n+        return this.undeleteBlobContainer(deletedContainerName,\n+            deletedContainerVersion, deletedContainerName);\n+    }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the <code>destinationContainerName</code>.\n+     * If the container associated with provided <code>destinationContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @param destinationContainerName The name of the destination container.\n+     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n+     * to interact with the restored container.\n+     */\n+    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d046ddacd3a57930742ab41c02064321830883f"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57e8f662c7bf46daaee0f419a7467c49586c205b", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/57e8f662c7bf46daaee0f419a7467c49586c205b", "committedDate": "2020-05-13T00:24:32Z", "message": "add test where all detail options are selected."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3843d028eb0c4e35cee147705c791d7d7d610d82", "author": {"user": {"login": "kasobol-msft", "name": "Kamil Sobol"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3843d028eb0c4e35cee147705c791d7d7d610d82", "committedDate": "2020-05-13T16:16:44Z", "message": "pr feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTIxMzMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-411121333", "createdAt": "2020-05-13T16:57:33Z", "commit": {"oid": "3843d028eb0c4e35cee147705c791d7d7d610d82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzA4MDgw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#pullrequestreview-411308080", "createdAt": "2020-05-13T21:20:29Z", "commit": {"oid": "3843d028eb0c4e35cee147705c791d7d7d610d82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4387, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}