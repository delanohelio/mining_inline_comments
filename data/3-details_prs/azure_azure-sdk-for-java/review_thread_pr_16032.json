{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTMxMTMy", "number": 16032, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyOTo0MlrOErPFxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzoyNFrOErQj-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzcxNDYzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyOTo0MlrOHd5I6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozNDowM1rOHd5VUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjkyMw==", "bodyText": "Do similar happen for reactor http code paths also?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501106923", "createdAt": "2020-10-07T15:29:42Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMDA5Nw==", "bodyText": "For ReactorNettyClient Kushagra had some discussions with the owner of ReatorNettyClient - reactor/reactor-netty#1165\nMy understanding reading through the work item is that this addressed the issues - but I will double-check with @kushagraThapar  when he is back next week", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501110097", "createdAt": "2020-10-07T15:34:03Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjkyMw=="}, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzk1NTUzOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzoyMFrOHd7flg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo0Mzo1NlrOHeE0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTQ5NA==", "bodyText": "you don't need \"{}\" for exception and also exception.toString not needed here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    exception.toString());\n          \n          \n            \n            logger.debug(\"SslException when attempting to close the outbound SSL connection\", exception);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501145494", "createdAt": "2020-10-07T16:23:20Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI5ODIyNw==", "bodyText": "Fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501298227", "createdAt": "2020-10-07T20:43:56Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTQ5NA=="}, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzk1NTc4OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzoyNFrOHd7fvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDo0NDoxM1rOHeE0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTUzMg==", "bodyText": "ditto.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501145532", "createdAt": "2020-10-07T16:23:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());\n+                } else {\n+                    logger.warn(\n+                        \"Exception when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI5ODM3Nw==", "bodyText": "Fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501298377", "createdAt": "2020-10-07T20:44:13Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());\n+                } else {\n+                    logger.warn(\n+                        \"Exception when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTUzMg=="}, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3547, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}