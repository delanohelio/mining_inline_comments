{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTQ2MzY1", "number": 10409, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo1MDo0NFrOD0eOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzowNzo0M1rOD0ei2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzQ3ODAyOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosContainerProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjo1MDo0NFrOGJbvFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzo1MjozOFrOGJdQ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDc4OA==", "bodyText": "Nice catch, are there any such left overs?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412544788", "createdAt": "2020-04-21T22:50:44Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosContainerProperties.java", "diffHunk": "@@ -211,33 +211,76 @@ public Integer getDefaultTimeToLiveInSeconds() {\n     /**\n      * Sets the collection's default time-to-live value.\n      * <p>\n-     * The default time-to-live value on a collection is an optional property. If set, the documents within the \n+     * The default time-to-live value on a collection is an optional property. If set, the documents within the\n      * collection\n-     * expires after the specified number of seconds since their last write time. The value of this property should \n+     * expires after the specified number of seconds since their last write time. The value of this property should\n      * be one of the following:\n      * <p>\n      * null - indicates evaluation of time-to-live is disabled and documents within the collection will never expire,\n      * regardless whether\n      * individual documents have their time-to-live set.\n      * <p>\n-     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection. \n+     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection.\n      * This value can be overridden\n      * by individual documents' time-to-live value.\n      * <p>\n-     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by \n+     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by\n      * individual documents'\n      * time-to-live value.\n      *\n      * @param timeToLive the default time-to-live value in seconds.\n      */\n-    public void setDefaultTimeToLiveInSeconds(Integer timeToLive) {\n+    public CosmosContainerProperties setDefaultTimeToLiveInSeconds(Integer timeToLive) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2Njg1MQ==", "bodyText": "seems there are a few other places as well.\n@kushagraThapar  FYI\nfind . | egrep \"Properties|Setting|Config|Option\" | grep -v implementation| xargs grep void\n./java/com/azure/cosmos/models/CosmosStoredProcedureProperties.java:    public void setBody(String body) {\n./java/com/azure/cosmos/models/FeedOptions.java:     * was done but not yet utilized. This avoids redoing the work again in\n./java/com/azure/cosmos/models/FeedOptions.java:    public void setEmptyPagesAllowed(boolean emptyPagesAllowed) {", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412566851", "createdAt": "2020-04-21T23:44:45Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosContainerProperties.java", "diffHunk": "@@ -211,33 +211,76 @@ public Integer getDefaultTimeToLiveInSeconds() {\n     /**\n      * Sets the collection's default time-to-live value.\n      * <p>\n-     * The default time-to-live value on a collection is an optional property. If set, the documents within the \n+     * The default time-to-live value on a collection is an optional property. If set, the documents within the\n      * collection\n-     * expires after the specified number of seconds since their last write time. The value of this property should \n+     * expires after the specified number of seconds since their last write time. The value of this property should\n      * be one of the following:\n      * <p>\n      * null - indicates evaluation of time-to-live is disabled and documents within the collection will never expire,\n      * regardless whether\n      * individual documents have their time-to-live set.\n      * <p>\n-     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection. \n+     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection.\n      * This value can be overridden\n      * by individual documents' time-to-live value.\n      * <p>\n-     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by \n+     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by\n      * individual documents'\n      * time-to-live value.\n      *\n      * @param timeToLive the default time-to-live value in seconds.\n      */\n-    public void setDefaultTimeToLiveInSeconds(Integer timeToLive) {\n+    public CosmosContainerProperties setDefaultTimeToLiveInSeconds(Integer timeToLive) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDc4OA=="}, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2OTgxNw==", "bodyText": "ok I fixed all of them in this PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412569817", "createdAt": "2020-04-21T23:52:38Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosContainerProperties.java", "diffHunk": "@@ -211,33 +211,76 @@ public Integer getDefaultTimeToLiveInSeconds() {\n     /**\n      * Sets the collection's default time-to-live value.\n      * <p>\n-     * The default time-to-live value on a collection is an optional property. If set, the documents within the \n+     * The default time-to-live value on a collection is an optional property. If set, the documents within the\n      * collection\n-     * expires after the specified number of seconds since their last write time. The value of this property should \n+     * expires after the specified number of seconds since their last write time. The value of this property should\n      * be one of the following:\n      * <p>\n      * null - indicates evaluation of time-to-live is disabled and documents within the collection will never expire,\n      * regardless whether\n      * individual documents have their time-to-live set.\n      * <p>\n-     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection. \n+     * nonzero positive integer - indicates the default time-to-live value for all documents within the collection.\n      * This value can be overridden\n      * by individual documents' time-to-live value.\n      * <p>\n-     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by \n+     * -1 - indicates by default all documents within the collection never expire. This value can be overridden by\n      * individual documents'\n      * time-to-live value.\n      *\n      * @param timeToLive the default time-to-live value in seconds.\n      */\n-    public void setDefaultTimeToLiveInSeconds(Integer timeToLive) {\n+    public CosmosContainerProperties setDefaultTimeToLiveInSeconds(Integer timeToLive) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDc4OA=="}, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzUyOTg0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/samples/java/com/azure/cosmos/AnalyticalStorageCodeSnippet.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzowNzo0M1rOGJcLJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzo1Mjo0NVrOGJdREw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1MTk3Mw==", "bodyText": "Missing license header.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412551973", "createdAt": "2020-04-21T23:07:43Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/samples/java/com/azure/cosmos/AnalyticalStorageCodeSnippet.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.azure.cosmos;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1Njc0OA==", "bodyText": "good catch, thanks will fix.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412556748", "createdAt": "2020-04-21T23:19:01Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/samples/java/com/azure/cosmos/AnalyticalStorageCodeSnippet.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.azure.cosmos;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1MTk3Mw=="}, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU2OTg3NQ==", "bodyText": "addressed. thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10409#discussion_r412569875", "createdAt": "2020-04-21T23:52:45Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/samples/java/com/azure/cosmos/AnalyticalStorageCodeSnippet.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.azure.cosmos;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1MTk3Mw=="}, "originalCommit": {"oid": "6eac5be4b71154c4d67f8ee7d2afe6902df77bb2"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4571, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}