{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTkzODEw", "number": 15820, "title": "[Tables] Allow subclassing TableEntity to map properties to fields", "bodyText": "This PR adds the ability to subclass TableEntity and add getters and setters. When serializing, getters will be located by reflection and their values will be added to the properties map. When deserializing, client methods now accept an additional parameter resultType which must be a subclass of TableEntity. When this parameter is provided, the method will create a new instance of the provided type, locate setters by reflection and those that match the name of a key in the property map will be called with the associated value.\nFixes: #13692\nTodo:\n\n Ensure that serializing and deserializing enum properties also works as expected.", "createdAt": "2020-09-30T01:04:51Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820", "merged": true, "mergeCommit": {"oid": "7d2a4736a4addb82f6f5305854cae52c36fec178"}, "closed": true, "closedAt": "2020-10-01T21:10:42Z", "author": {"login": "bsiegel"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNyMZtgH2gAyNDk1MTkzODEwOjg5OTE2MDJkYzdmNzgzOGE4OTU2MzY4YjQ3NjkwYTNhNGUxMzNiM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOXn9JAH2gAyNDk1MTkzODEwOjU0OTIwYzBlODNjZmI0ODBlYTRmODk0NWMzMDAzYjQ1ZGFlNDMyMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8991602dc7f7838a8956368b47690a3a4e133b3d", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8991602dc7f7838a8956368b47690a3a4e133b3d", "committedDate": "2020-09-30T01:07:03Z", "message": "TableEntity instances can be converted into subclasses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02b19a5f3e90ae32fc01d9324313698246d12161", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/02b19a5f3e90ae32fc01d9324313698246d12161", "committedDate": "2020-09-30T01:07:03Z", "message": "TableEntity subclasses can populate properties from getters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e53030a873a3d4ad88a0fa1dcccf500ad4ee721", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e53030a873a3d4ad88a0fa1dcccf500ad4ee721", "committedDate": "2020-09-30T01:07:04Z", "message": "Extract reflection code to EntityHelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0922b3f2f90272411186720b6d40ab8dbe22b4f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0922b3f2f90272411186720b6d40ab8dbe22b4f", "committedDate": "2020-09-30T01:07:04Z", "message": "Set properties from getters before PUT operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d752d160f9aefcc56cac23cf45fbd8b0ddf8e1af", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d752d160f9aefcc56cac23cf45fbd8b0ddf8e1af", "committedDate": "2020-09-30T01:07:04Z", "message": "Add resultType param to getEntity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c10e835416abd927a7b7f6c3cbb2d08faa575f32", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c10e835416abd927a7b7f6c3cbb2d08faa575f32", "committedDate": "2020-09-30T01:07:04Z", "message": "Add resultType param to listEntities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c57aa278566278ec36a9072e7557cbe9a8f9136c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c57aa278566278ec36a9072e7557cbe9a8f9136c", "committedDate": "2020-09-30T01:07:05Z", "message": "Remove fields from TableEntity\n\nInstead of trying to keep them in sync with the properties map, we just\nread their values from the map in the getters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b4daa94a7e0318325582a810698356e2c941eb5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b4daa94a7e0318325582a810698356e2c941eb5", "committedDate": "2020-09-30T01:07:05Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "committedDate": "2020-09-30T01:14:37Z", "message": "Update changelog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cea6e39015df222d96e8255953b555065e8859e3", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cea6e39015df222d96e8255953b555065e8859e3", "committedDate": "2020-09-30T00:59:39Z", "message": "Add tests"}, "afterCommit": {"oid": "7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c2277d58a1ab6e919bc6b99a6cefc51e1618f7b", "committedDate": "2020-09-30T01:14:37Z", "message": "Update changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf2bb0e78fb85375f32b2f27e7b491071278127", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/acf2bb0e78fb85375f32b2f27e7b491071278127", "committedDate": "2020-09-30T20:19:06Z", "message": "Fix Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02607a68940534a6e387b45382f9b0d77a495a8a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/02607a68940534a6e387b45382f9b0d77a495a8a", "committedDate": "2020-09-30T21:19:28Z", "message": "Correctly set TableEntity subclass enum properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/df1ac555ad85419a6a83cd882f2c2e7361abb7b5", "committedDate": "2020-09-30T22:00:34Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjQ2NzE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#pullrequestreview-500646715", "createdAt": "2020-10-01T19:17:57Z", "commit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOToxNzo1OFrOHbXxCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOToyNDoyMlrOHbX9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ==", "bodyText": "Can we could add some documentation around this method. I get 3 is because it's get, but 2 because is?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498462985", "createdAt": "2020-10-01T19:17:58Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/EntityHelper.java", "diffHunk": "@@ -0,0 +1,101 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.data.tables;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.data.tables.models.TableEntity;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.stream.Collectors;\n+\n+final class EntityHelper {\n+    private static final HashSet<String> TABLE_ENTITY_METHODS = Arrays.stream(TableEntity.class.getMethods())\n+        .map(Method::getName).collect(Collectors.toCollection(HashSet::new));\n+\n+    private EntityHelper() {\n+    }\n+\n+    static void setPropertiesFromGetters(TableEntity entity, ClientLogger logger) {\n+        Class<?> myClass = entity.getClass();\n+        if (myClass == TableEntity.class) {\n+            return;\n+        }\n+\n+        for (Method m : myClass.getMethods()) {\n+            // Skip any non-getter methods\n+            if (m.getName().length() < 3\n+                || TABLE_ENTITY_METHODS.contains(m.getName())\n+                || (!m.getName().startsWith(\"get\") && !m.getName().startsWith(\"is\"))\n+                || m.getParameterTypes().length != 0\n+                || void.class.equals(m.getReturnType())) {\n+                continue;\n+            }\n+\n+            int prefixLength = m.getName().startsWith(\"get\") ? 3 : 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2MzI1Ng==", "bodyText": "I think documentation in general would be nice (even though this is package-private) to facilitate understanding the code base for future devs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498463256", "createdAt": "2020-10-01T19:18:35Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/EntityHelper.java", "diffHunk": "@@ -0,0 +1,101 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.data.tables;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.data.tables.models.TableEntity;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.stream.Collectors;\n+\n+final class EntityHelper {\n+    private static final HashSet<String> TABLE_ENTITY_METHODS = Arrays.stream(TableEntity.class.getMethods())\n+        .map(Method::getName).collect(Collectors.toCollection(HashSet::new));\n+\n+    private EntityHelper() {\n+    }\n+\n+    static void setPropertiesFromGetters(TableEntity entity, ClientLogger logger) {\n+        Class<?> myClass = entity.getClass();\n+        if (myClass == TableEntity.class) {\n+            return;\n+        }\n+\n+        for (Method m : myClass.getMethods()) {\n+            // Skip any non-getter methods\n+            if (m.getName().length() < 3\n+                || TABLE_ENTITY_METHODS.contains(m.getName())\n+                || (!m.getName().startsWith(\"get\") && !m.getName().startsWith(\"is\"))\n+                || m.getParameterTypes().length != 0\n+                || void.class.equals(m.getReturnType())) {\n+                continue;\n+            }\n+\n+            int prefixLength = m.getName().startsWith(\"get\") ? 3 : 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2Mjk4NQ=="}, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDQyNw==", "bodyText": "nit: aggregating methods by visibility. I see an interspersing of public, package-private, and private methods. When I browse code, usually I hit up the public methods first (at the top) and then go down.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498464427", "createdAt": "2020-10-01T19:21:04Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/TableAsyncClient.java", "diffHunk": "@@ -606,6 +642,39 @@ public void close() {\n         return getEntityWithResponse(partitionKey, rowKey, select).flatMap(FluxUtil::toMono);\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NDY3NQ==", "bodyText": "Can this entityCreateor return a null item?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498464675", "createdAt": "2020-10-01T19:21:32Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/main/java/com/azure/data/tables/implementation/ModelHelper.java", "diffHunk": "@@ -74,7 +75,7 @@ public static TableEntity createEntity(Map<String, Object> properties) {\n                 new IllegalStateException(\"'entityCreator' should not be null.\"));\n         }\n \n-        return entityCreator.apply(properties);\n+        return entityCreator.get().addProperties(properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTUyMQ==", "bodyText": "Something new in JUnit 5 is that test methods no longer have to be public. So this class could be package-private and same with its methods.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465521", "createdAt": "2020-10-01T19:23:15Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/EntityHelperTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.data.tables;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.data.tables.models.TableEntity;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import java.time.OffsetDateTime;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+public class EntityHelperTest {\n+    private final ClientLogger logger = new ClientLogger(EntityHelperTest.class);\n+\n+    @Test\n+    public void testConvertToSubclass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTg5Nw==", "bodyText": "nit; consistent use of final.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465897", "createdAt": "2020-10-01T19:23:59Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -411,6 +521,33 @@ void updateEntityWithResponseAsync(UpdateMode mode) {\n         }\n     }\n \n+    @Test\n+    void updateEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"APartitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"ARowKey\", 20);\n+        final int expectedStatusCode = 204;\n+        SingleFieldEntity tableEntity = new SingleFieldEntity(partitionKeyValue, rowKeyValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NTk5NA==", "bodyText": "nit: consistent use of final.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498465994", "createdAt": "2020-10-01T19:24:10Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -355,6 +404,67 @@ void getEntityWithResponseWithSelectAsync() {\n             .verify();\n     }\n \n+    @Test\n+    void getEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"partitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"rowKey\", 20);\n+        final TableEntity tableEntity = new TableEntity(partitionKeyValue, rowKeyValue);\n+\n+        byte[] bytes = new byte[]{1, 2, 3};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NjA3NQ==", "bodyText": "ni: empty line", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15820#discussion_r498466075", "createdAt": "2020-10-01T19:24:22Z", "author": {"login": "conniey"}, "path": "sdk/tables/azure-data-tables/src/test/java/com/azure/data/tables/TablesAsyncClientTest.java", "diffHunk": "@@ -355,6 +404,67 @@ void getEntityWithResponseWithSelectAsync() {\n             .verify();\n     }\n \n+    @Test\n+    void getEntityWithResponseSubclassAsync() {\n+        // Arrange\n+        final String partitionKeyValue = testResourceNamer.randomName(\"partitionKey\", 20);\n+        final String rowKeyValue = testResourceNamer.randomName(\"rowKey\", 20);\n+        final TableEntity tableEntity = new TableEntity(partitionKeyValue, rowKeyValue);\n+\n+        byte[] bytes = new byte[]{1, 2, 3};\n+        boolean b = true;\n+        OffsetDateTime dateTime = OffsetDateTime.of(2020, 1, 1, 0, 0, 0, 0, ZoneOffset.UTC);\n+        double d = 1.23D;\n+        UUID uuid = UUID.fromString(\"11111111-2222-3333-4444-555555555555\");\n+        int i = 123;\n+        long l = 123L;\n+        String s = \"Test\";\n+        SampleEntity.Color color = SampleEntity.Color.GREEN;\n+\n+        Map<String, Object> props = new HashMap<>();\n+        props.put(\"ByteField\", bytes);\n+        props.put(\"BooleanField\", b);\n+        props.put(\"DateTimeField\", dateTime);\n+        props.put(\"DoubleField\", d);\n+        props.put(\"UuidField\", uuid);\n+        props.put(\"IntField\", i);\n+        props.put(\"LongField\", l);\n+        props.put(\"StringField\", s);\n+        props.put(\"EnumField\", color);\n+\n+        tableEntity.addProperties(props);\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1ac555ad85419a6a83cd882f2c2e7361abb7b5"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54920c0e83cfb480ea4f8945c3003b45dae43213", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/54920c0e83cfb480ea4f8945c3003b45dae43213", "committedDate": "2020-10-01T20:43:38Z", "message": "Address PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3113, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}