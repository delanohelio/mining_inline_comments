{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Nzg0MzYx", "number": 12203, "title": "Support GeoJSON", "bodyText": "This PR adds GeoJSON functionality into Azure Core.", "createdAt": "2020-06-15T20:53:38Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203", "merged": true, "mergeCommit": {"oid": "35fef7f3b212da33b453602e4b9089a9e949efaa"}, "closed": true, "closedAt": "2020-06-19T22:05:41Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrmwiXAH2gAyNDM0Nzg0MzYxOmI5MGI4MjZjNTc1YjM1ZjQ2YjExZmI3MDcwYzQ3NWE4NGQ5ZjBmOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs6T-sAFqTQzNDM1NTU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b90b826c575b35f46b11fb7070c475a84d9f0f8e", "committedDate": "2020-06-15T20:34:14Z", "message": "Model classes for GeoJSON"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDQwMTg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-431040184", "createdAt": "2020-06-15T22:37:55Z", "commit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjozNzo1NVrOGkFFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjo0OTowNVrOGkFTww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4NTEzNw==", "bodyText": "Does the spec call it CollectionGeometry, or is this just your choice? GeometryCollection would make more sense otherwise?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440485137", "createdAt": "2020-06-15T22:37:55Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4NTQ3OQ==", "bodyText": "Also, is it weird to anyone else that a CollectionGeometry is a Geometry?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440485479", "createdAt": "2020-06-15T22:38:56Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4NTEzNw=="}, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4NTY1NA==", "bodyText": "Collection isn't the most useful type in Java - should we do something more useful, such as List or Set?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440485654", "createdAt": "2020-06-15T22:39:27Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {\n+    private final Collection<Geometry> geometries;\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     */\n+    public CollectionGeometry(Collection<Geometry> geometries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4NjI4NA==", "bodyText": "Should there be validation on these values?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440486284", "createdAt": "2020-06-15T22:41:06Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryBoundingBox.java", "diffHunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * Represents a geometric bounding box.\n+ */\n+public final class GeometryBoundingBox {\n+    private final double west;\n+    private final double south;\n+    private final double east;\n+    private final double north;\n+\n+    private final Double minAltitude;\n+    private final Double maxAltitude;\n+\n+    /**\n+     * Constructs a bounding box.\n+     *\n+     * @param west West longitudinal boundary.\n+     * @param south South latitudinal boundary.\n+     * @param east East longitudinal boundary.\n+     * @param north North latitudinal boundary.\n+     */\n+    public GeometryBoundingBox(double west, double south, double east, double north) {\n+        this(west, south, east, north, null, null);\n+    }\n+\n+    /**\n+     * Constructs a bounding box.\n+     *\n+     * @param west West longitudinal boundary.\n+     * @param south South latitudinal boundary.\n+     * @param east East longitudinal boundary.\n+     * @param north North latitudinal boundary.\n+     * @param minAltitude Minimum altitude boundary.\n+     * @param maxAltitude Maximum altitude boundary.\n+     */\n+    public GeometryBoundingBox(double west, double south, double east, double north, Double minAltitude,\n+        Double maxAltitude) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4Njc0Ng==", "bodyText": "I understand why you have Double type in these places, but I'm not super fond of it. I would wonder if we should have a boolean check that clarifies if it has been set or not.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440486746", "createdAt": "2020-06-15T22:42:22Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryPosition.java", "diffHunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * Represents a geometric position.\n+ */\n+public final class GeometryPosition {\n+    private final double longitude;\n+    private final double latitude;\n+\n+    private final Double altitude;\n+\n+    /**\n+     * Constructs a geometric position.\n+     *\n+     * @param longitude Longitudinal position.\n+     * @param latitude Latitudinal position.\n+     */\n+    public GeometryPosition(double longitude, double latitude) {\n+        this(longitude, latitude, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric position.\n+     *\n+     * @param longitude Longitudinal position.\n+     * @param latitude Latitudinal position.\n+     * @param altitude Altitude position.\n+     */\n+    public GeometryPosition(double longitude, double latitude, Double altitude) {\n+        this.longitude = longitude;\n+        this.latitude = latitude;\n+        this.altitude = altitude;\n+    }\n+\n+    /**\n+     * The longitudinal position of the geometric position.\n+     *\n+     * @return The longitudinal position.\n+     */\n+    public double getLongitude() {\n+        return longitude;\n+    }\n+\n+    /**\n+     * The latitudinal position of the geometric position.\n+     *\n+     * @return The latitudinal position.\n+     */\n+    public double getLatitude() {\n+        return latitude;\n+    }\n+\n+    /**\n+     * The altitude of the geometric position.\n+     *\n+     * @return The altitude.\n+     */\n+    public Double getAltitude() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODA0Mg==", "bodyText": "Do you think, rather than have all Geometry subclasses having a getProperties() method, that Geometry itself should just contain the content of the GeometryProperties class? It seems quite long-winded to get a property at present, because you firstly need to getProperties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440488042", "createdAt": "2020-06-15T22:46:27Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/Geometry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * An abstract representation of a geometry.\n+ */\n+public abstract class Geometry {\n+    private final GeometryProperties properties;\n+\n+    Geometry(GeometryProperties properties) {\n+        this.properties = properties;\n+    }\n+\n+    /**\n+     * Additional properties about this geometry.\n+     *\n+     * @return The additional properties associated with this geometry.\n+     */\n+    public GeometryProperties getProperties() {\n+        return properties;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODMxNQ==", "bodyText": "Is there a need for this ctor to be public - it seems like no sane user would need to call this? Also, should there be a ctor that takes just the bounding box?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440488315", "createdAt": "2020-06-15T22:47:21Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryProperties.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents properties about a {@link Geometry}.\n+ */\n+public final class GeometryProperties {\n+    private final GeometryBoundingBox boundingBox;\n+    private final Map<String, Object> additionalProperties;\n+\n+    /**\n+     * Constructs an empty properties.\n+     */\n+    public GeometryProperties() {\n+        this(null, null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODQ1MQ==", "bodyText": "Should you make a copy of this map so that it can not be mutated after being set?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440488451", "createdAt": "2020-06-15T22:47:44Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryProperties.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents properties about a {@link Geometry}.\n+ */\n+public final class GeometryProperties {\n+    private final GeometryBoundingBox boundingBox;\n+    private final Map<String, Object> additionalProperties;\n+\n+    /**\n+     * Constructs an empty properties.\n+     */\n+    public GeometryProperties() {\n+        this(null, null);\n+    }\n+\n+    /**\n+     * Constructs properties about a {@link Geometry}.\n+     *\n+     * @param boundingBox The bounding box for a geometry.\n+     * @param additionalProperties Addtional properties about a geometry.\n+     */\n+    public GeometryProperties(GeometryBoundingBox boundingBox, Map<String, Object> additionalProperties) {\n+        this.boundingBox = boundingBox;\n+        this.additionalProperties = additionalProperties;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODcxMg==", "bodyText": "Make a defensive copy in the ctor rather than here, otherwise the positions can be changed by the user having a reference to the positions collection that they gave to you.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440488712", "createdAt": "2020-06-15T22:48:32Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/LineGeometry.java", "diffHunk": "@@ -0,0 +1,44 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Represents a geometric line.\n+ */\n+public final class LineGeometry extends Geometry {\n+    private final Collection<GeometryPosition> positions;\n+\n+    /**\n+     * Constructs a geometric line.\n+     *\n+     * @param positions Geometric positions that define the line.\n+     */\n+    public LineGeometry(Collection<GeometryPosition> positions) {\n+        this(positions, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric line.\n+     *\n+     * @param positions Geometric positions that define the line.\n+     * @param properties Additional properties of the geometric line.\n+     */\n+    public LineGeometry(Collection<GeometryPosition> positions, GeometryProperties properties) {\n+        super(properties);\n+        this.positions = positions;\n+    }\n+\n+    /**\n+     * Unmodifiable representation of the {@link GeometryPosition geometric positions} representing this line.\n+     *\n+     * @return An unmodifiable representation of the {@link GeometryPosition geometric positions} representing this\n+     * line.\n+     */\n+    public Collection<GeometryPosition> getPositions() {\n+        return Collections.unmodifiableCollection(positions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODg5OQ==", "bodyText": "Don't forget to export through modules-info too", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r440488899", "createdAt": "2020-06-15T22:49:05Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/package-info.java", "diffHunk": "@@ -0,0 +1,7 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+/**\n+ * Package containing GeoJSON classes.\n+ */\n+package com.azure.core.spatial;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzIxNzM0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-431721734", "createdAt": "2020-06-16T17:12:03Z", "commit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxMjowM1rOGklNxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxODo1OFrOGkldtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMTY1Mg==", "bodyText": "Search use-case does not use altitude. So for serialization, this field is not required. Make sure the serializer will remove the field once it is null. Or make it optional.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441011652", "createdAt": "2020-06-16T17:12:03Z", "author": {"login": "sima-zhu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryPosition.java", "diffHunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * Represents a geometric position.\n+ */\n+public final class GeometryPosition {\n+    private final double longitude;\n+    private final double latitude;\n+\n+    private final Double altitude;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxMzQyMg==", "bodyText": "It is better to use setter pattern in this class. Search is only asking additional properties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441013422", "createdAt": "2020-06-16T17:15:10Z", "author": {"login": "sima-zhu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryProperties.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents properties about a {@link Geometry}.\n+ */\n+public final class GeometryProperties {\n+    private final GeometryBoundingBox boundingBox;\n+    private final Map<String, Object> additionalProperties;\n+\n+    /**\n+     * Constructs an empty properties.\n+     */\n+    public GeometryProperties() {\n+        this(null, null);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4ODMxNQ=="}, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNTczNA==", "bodyText": "Does search need to provide specific serializer/deserializer for coordinate system?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441015734", "createdAt": "2020-06-16T17:18:58Z", "author": {"login": "sima-zhu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/PointGeometry.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * Represents a geometric point.\n+ */\n+public final class PointGeometry extends Geometry {\n+    private final GeometryPosition position;\n+\n+    /**\n+     * Constructs a geometric point.\n+     *\n+     * @param position The {@link GeometryPosition geometric position} of the point.\n+     */\n+    public PointGeometry(GeometryPosition position) {\n+        this(position, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric point.\n+     *\n+     * @param position The {@link GeometryPosition geometric position} of the point.\n+     * @param properties Additional properties of the geometric point.\n+     */\n+    public PointGeometry(GeometryPosition position, GeometryProperties properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzM3NzU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-431737758", "createdAt": "2020-06-16T17:32:57Z", "commit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzozMjo1N1rOGkl-Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozMTozMlrOGkoLSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAyNDEwMg==", "bodyText": "Should the package be com.azure.core.models.spatial?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441024102", "createdAt": "2020-06-16T17:32:57Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzOTY2Mw==", "bodyText": "Should this ctor be public to allow users/client libraries to extend from this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441039663", "createdAt": "2020-06-16T17:59:24Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/Geometry.java", "diffHunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * An abstract representation of a geometry.\n+ */\n+public abstract class Geometry {\n+    private final GeometryProperties properties;\n+\n+    Geometry(GeometryProperties properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzU4Mg==", "bodyText": "The unmodifiable collection should be created in the ctor itself.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441057582", "createdAt": "2020-06-16T18:26:53Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {\n+    private final Collection<Geometry> geometries;\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     */\n+    public CollectionGeometry(Collection<Geometry> geometries) {\n+        this(geometries, null);\n+    }\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     * @param properties Additional properties of the geometry collection.\n+     */\n+    public CollectionGeometry(Collection<Geometry> geometries, GeometryProperties properties) {\n+        super(properties);\n+        this.geometries = geometries;\n+    }\n+\n+    /**\n+     * Unmodifiable representation of the {@link Geometry geometries} contained in this collection.\n+     *\n+     * @return An unmodifiable representation of the {@link Geometry geometries} in this collection.\n+     */\n+    public Collection<Geometry> getGeometries() {\n+        return Collections.unmodifiableCollection(geometries);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MDE3MA==", "bodyText": "Do we want to make these model types final? Users or client libraries may want to extend these types.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441060170", "createdAt": "2020-06-16T18:31:32Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/spatial/GeometryPosition.java", "diffHunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.spatial;\n+\n+/**\n+ * Represents a geometric position.\n+ */\n+public final class GeometryPosition {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90b826c575b35f46b11fb7070c475a84d9f0f8e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "288bf72e1ce125d71caa6228aa48e4d0658b979b", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/288bf72e1ce125d71caa6228aa48e4d0658b979b", "committedDate": "2020-06-16T18:37:21Z", "message": "Added serializer and deserializer modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63aef4681e61b3556226985f4d404ccf8e1dbad7", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/63aef4681e61b3556226985f4d404ccf8e1dbad7", "committedDate": "2020-06-16T20:16:57Z", "message": "Removed GeometryProperties class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "574f745b85c3f5482f6292c96244f00d26f686e0", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/574f745b85c3f5482f6292c96244f00d26f686e0", "committedDate": "2020-06-16T21:09:59Z", "message": "Merge branch 'master' into AzCore_GeoJSON"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODk3Njg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-431897684", "createdAt": "2020-06-16T21:15:55Z", "commit": {"oid": "63aef4681e61b3556226985f4d404ccf8e1dbad7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae93115639b8b8660a56cafd729ce9e4b4b0ec0c", "committedDate": "2020-06-16T21:20:44Z", "message": "Defensively copy the geometries passed into constructors, storing geometries in unmodifiable data structures as well"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTkwMzEw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-431990310", "createdAt": "2020-06-17T01:04:26Z", "commit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "state": "DISMISSED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTowNDoyNlrOGkyIcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTowNzowMlrOGkyK3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzI4Mw==", "bodyText": "You shouldn't need the new ArrayList<>(..) here, geometries is already a List", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223283", "createdAt": "2020-06-17T01:04:26Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {\n+    private final List<Geometry> geometries;\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     * @throws NullPointerException If {@code geometries} is {@code null}.\n+     */\n+    public CollectionGeometry(List<Geometry> geometries) {\n+        this(geometries, null, null);\n+    }\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     * @param boundingBox Bounding box for the geometry collection.\n+     * @param properties Additional properties of the geometry collection.\n+     * @throws NullPointerException If {@code geometries} is {@code null}.\n+     */\n+    public CollectionGeometry(List<Geometry> geometries, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(geometries, \"'geometries' cannot be null.\");\n+        this.geometries = Collections.unmodifiableList(new ArrayList<>(geometries));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzUzOQ==", "bodyText": "Collections.unmodifiableMap?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223539", "createdAt": "2020-06-17T01:05:27Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/Geometry.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * An abstract representation of a geometry.\n+ */\n+public abstract class Geometry {\n+    private final GeometryBoundingBox boundingBox;\n+    private final Map<String, Object> properties;\n+\n+    Geometry(GeometryBoundingBox boundingBox, Map<String, Object> properties) {\n+        this.boundingBox = boundingBox;\n+\n+        if (properties == null) {\n+            this.properties = Collections.emptyMap();\n+        } else {\n+            this.properties = properties.entrySet().stream()\n+                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzY4NQ==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223685", "createdAt": "2020-06-17T01:06:01Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/LineGeometry.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a geometric line.\n+ */\n+public final class LineGeometry extends Geometry {\n+    private final List<GeometryPosition> positions;\n+\n+    /**\n+     * Constructs a geometric line.\n+     *\n+     * @param positions Geometric positions that define the line.\n+     * @throws NullPointerException If {@code positions} is {@code null}.\n+     */\n+    public LineGeometry(List<GeometryPosition> positions) {\n+        this(positions, null, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric line.\n+     *\n+     * @param positions Geometric positions that define the line.\n+     * @param boundingBox Bounding box for the line.\n+     * @param properties Additional properties of the geometric line.\n+     * @throws NullPointerException If {@code positions} is {@code null}.\n+     */\n+    public LineGeometry(List<GeometryPosition> positions, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(positions, \"'positions' cannot be null.\");\n+        this.positions = Collections.unmodifiableList(new ArrayList<>(positions));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzc3MQ==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223771", "createdAt": "2020-06-17T01:06:25Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/MultiLineGeometry.java", "diffHunk": "@@ -0,0 +1,52 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a multi-line geometry.\n+ */\n+public final class MultiLineGeometry extends Geometry {\n+    private final List<LineGeometry> lines;\n+\n+    /**\n+     * Constructs a multi-line geometry.\n+     *\n+     * @param lines The geometric lines that define the multi-line.\n+     * @throws NullPointerException If {@code lines} is {@code null}.\n+     */\n+    public MultiLineGeometry(List<LineGeometry> lines) {\n+        this(lines, null, null);\n+    }\n+\n+    /**\n+     * Constructs a multi-line geometry.\n+     *\n+     * @param lines The geometric lines that define the multi-line.\n+     * @param boundingBox Bounding box for the multi-line.\n+     * @param properties Additional properties of the multi-line.\n+     * @throws NullPointerException If {@code lines} is {@code null}.\n+     */\n+    public MultiLineGeometry(List<LineGeometry> lines, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(lines, \"'lines' cannot be null.\");\n+        this.lines = Collections.unmodifiableList(new ArrayList<>(lines));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzc5OA==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223798", "createdAt": "2020-06-17T01:06:33Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/MultiPointGeometry.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a multi-point geometry.\n+ */\n+public final class MultiPointGeometry extends Geometry {\n+    private final List<PointGeometry> points;\n+\n+    /**\n+     * Constructs a multi-point geometry.\n+     *\n+     * @param points The points that define the multi-point.\n+     * @throws NullPointerException If {@code points} is {@code null}.\n+     */\n+    public MultiPointGeometry(List<PointGeometry> points) {\n+        this(points, null, null);\n+    }\n+\n+    /**\n+     * Constructs a multi-point geometry.\n+     *\n+     * @param points The points that define the multi-point.\n+     * @param boundingBox Bounding box for the multi-point.\n+     * @param properties Additional properties of the multi-point.\n+     * @throws NullPointerException If {@code points} is {@code null}.\n+     */\n+    public MultiPointGeometry(List<PointGeometry> points, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(points, \"'points' cannot be null.\");\n+        this.points = Collections.unmodifiableList(new ArrayList<>(points));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzgyNg==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223826", "createdAt": "2020-06-17T01:06:39Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/MultiPolygonGeometry.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a multi-polygon geometry.\n+ */\n+public final class MultiPolygonGeometry extends Geometry {\n+    private final List<PolygonGeometry> polygons;\n+\n+    /**\n+     * Constructs a multi-polygon geometry.\n+     *\n+     * @param polygons The polygons that define the multi-polygon.\n+     * @throws NullPointerException If {@code polygons} is {@code null}.\n+     */\n+    public MultiPolygonGeometry(List<PolygonGeometry> polygons) {\n+        this(polygons, null, null);\n+    }\n+\n+    /**\n+     * Constructs a multi-polygon geometry.\n+     *\n+     * @param polygons The polygons that define the multi-polygon.\n+     * @param boundingBox Bounding box for the multi-polygon.\n+     * @param properties Additional properties of the multi-polygon.\n+     * @throws NullPointerException If {@code polygons} is {@code null}.\n+     */\n+    public MultiPolygonGeometry(List<PolygonGeometry> polygons, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(polygons, \"'polygons' cannot be null.\");\n+        this.polygons = Collections.unmodifiableList(new ArrayList<>(polygons));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzkwMg==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r441223902", "createdAt": "2020-06-17T01:07:02Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/PolygonGeometry.java", "diffHunk": "@@ -0,0 +1,51 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a geometric polygon.\n+ */\n+public final class PolygonGeometry extends Geometry {\n+    private final List<LineGeometry> rings;\n+\n+    /**\n+     * Constructs a geometric polygon.\n+     *\n+     * @param rings The lines that define the polygon.\n+     * @throws NullPointerException If {@code rings} is {@code null}.\n+     */\n+    public PolygonGeometry(List<LineGeometry> rings) {\n+        this(rings, null, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric polygon.\n+     *\n+     * @param rings The lines that define the polygon.\n+     * @param boundingBox Bounding box for the polygon.\n+     * @param properties Additional properties of the polygon.\n+     * @throws NullPointerException If {@code rings} is {@code null}.\n+     */\n+    public PolygonGeometry(List<LineGeometry> rings, GeometryBoundingBox boundingBox, Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(rings, \"'rings' cannot be null.\");\n+        this.rings = Collections.unmodifiableList(new ArrayList<>(rings));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae93115639b8b8660a56cafd729ce9e4b4b0ec0c"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "381eb64bca29f7399180d6b8a3542d25f397898d", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/381eb64bca29f7399180d6b8a3542d25f397898d", "committedDate": "2020-06-17T03:12:43Z", "message": "Merge branch 'master' into AzCore_GeoJSON"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/52b598c8c8ce33311c228826fc36d8856a5d317d", "committedDate": "2020-06-18T03:08:42Z", "message": "Unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTI3ODEz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-433527813", "createdAt": "2020-06-18T18:08:08Z", "commit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowODowOFrOGl6mNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowODowOFrOGl6mNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMDU0OQ==", "bodyText": "I was wondering if this could be named differently or to be more specific into the spatial concept that we would foresee it being used. Or do we want this same model to be more generic and allow including the concept of the BoundingBox we encountered in FormRecognizer here.\nWhere a BoundingBox could be a \"Quadrangle bounding box, with coordinates specified relative to the top-left of the original image. The eight numbers represent the four points, clockwise from the top-left corner relative to the text orientation. For image, the (x, y) coordinates are measured in pixels. For PDF, the (x, y) coordinates are measured in inches.\",", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r442410549", "createdAt": "2020-06-18T18:08:08Z", "author": {"login": "samvaity"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/GeometryBoundingBox.java", "diffHunk": "@@ -0,0 +1,129 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Represents a geometric bounding box.\n+ */\n+public final class GeometryBoundingBox {\n+    private final double west;\n+    private final double south;\n+    private final double east;\n+    private final double north;\n+\n+    private final Double minAltitude;\n+    private final Double maxAltitude;\n+\n+    /**\n+     * Constructs a bounding box.\n+     *\n+     * @param west West longitudinal boundary.\n+     * @param south South latitudinal boundary.\n+     * @param east East longitudinal boundary.\n+     * @param north North latitudinal boundary.\n+     */\n+    public GeometryBoundingBox(double west, double south, double east, double north) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTI5MzI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-433529329", "createdAt": "2020-06-18T18:10:14Z", "commit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxMDoxNVrOGl6qzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxMDoxNVrOGl6qzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMTcyNg==", "bodyText": "We encountered situations in user studies where users seem to be wanting a toString() method on the returned models. I am considering adding those in FormRecognizer, do we think we should consider that here too?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r442411726", "createdAt": "2020-06-18T18:10:15Z", "author": {"login": "samvaity"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/GeometryPosition.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Represents a geometric position.\n+ */\n+public final class GeometryPosition {\n+    private final double longitude;\n+    private final double latitude;\n+\n+    private final Double altitude;\n+\n+    /**\n+     * Constructs a geometric position.\n+     *\n+     * @param longitude Longitudinal position.\n+     * @param latitude Latitudinal position.\n+     */\n+    public GeometryPosition(double longitude, double latitude) {\n+        this(longitude, latitude, null);\n+    }\n+\n+    /**\n+     * Constructs a geometric position.\n+     *\n+     * @param longitude Longitudinal position.\n+     * @param latitude Latitudinal position.\n+     * @param altitude Altitude position.\n+     */\n+    public GeometryPosition(double longitude, double latitude, Double altitude) {\n+        this.longitude = longitude;\n+        this.latitude = latitude;\n+        this.altitude = altitude;\n+    }\n+\n+    /**\n+     * The longitudinal position of the geometric position.\n+     *\n+     * @return The longitudinal position.\n+     */\n+    public double getLongitude() {\n+        return longitude;\n+    }\n+\n+    /**\n+     * The latitudinal position of the geometric position.\n+     *\n+     * @return The latitudinal position.\n+     */\n+    public double getLatitude() {\n+        return latitude;\n+    }\n+\n+    /**\n+     * The altitude of the geometric position.\n+     *\n+     * @return The altitude.\n+     */\n+    public Double getAltitude() {\n+        return altitude;\n+    }\n+\n+    @Override\n+    public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzEwMzY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-433710364", "createdAt": "2020-06-18T23:27:13Z", "commit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzU1NTcx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#pullrequestreview-434355571", "createdAt": "2020-06-19T21:47:01Z", "commit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTo0NzowMlrOGmh-Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMTo0NzowMlrOGmh-Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA1NTcxOA==", "bodyText": "Is it worth the performance cost to copy the source list into a new array list?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12203#discussion_r443055718", "createdAt": "2020-06-19T21:47:02Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/models/spatial/CollectionGeometry.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.models.spatial;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a heterogeneous collection of {@link Geometry geometries}.\n+ */\n+public final class CollectionGeometry extends Geometry {\n+    private final List<Geometry> geometries;\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     * @throws NullPointerException If {@code geometries} is {@code null}.\n+     */\n+    public CollectionGeometry(List<Geometry> geometries) {\n+        this(geometries, null, null);\n+    }\n+\n+    /**\n+     * Constructs a geometry collection.\n+     *\n+     * @param geometries The geometries in the collection.\n+     * @param boundingBox Bounding box for the geometry collection.\n+     * @param properties Additional properties of the geometry collection.\n+     * @throws NullPointerException If {@code geometries} is {@code null}.\n+     */\n+    public CollectionGeometry(List<Geometry> geometries, GeometryBoundingBox boundingBox,\n+        Map<String, Object> properties) {\n+        super(boundingBox, properties);\n+\n+        Objects.requireNonNull(geometries, \"'geometries' cannot be null.\");\n+        this.geometries = Collections.unmodifiableList(new ArrayList<>(geometries));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b598c8c8ce33311c228826fc36d8856a5d317d"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3029, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}