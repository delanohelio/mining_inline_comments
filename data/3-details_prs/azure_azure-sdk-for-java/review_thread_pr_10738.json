{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzg4ODkx", "number": 10738, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToxOTozMVrOD5ow9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozNDo0MFrOD57APQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzYzMzE4OnYy", "diffSide": "LEFT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderUnitTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToxOTozMVrOGRBIbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjo0MDoxMFrOGRbxWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5NzUxOA==", "bodyText": "Why are the tests removed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420497518", "createdAt": "2020-05-06T01:19:31Z", "author": {"login": "sima-zhu"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderUnitTest.java", "diffHunk": "@@ -47,33 +47,11 @@ public void invalidProtocol() {\n         });\n     }\n \n-    /**\n-     * Test for null API key\n-     */\n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MDMxNQ==", "bodyText": "Now that we have two overloads for the credential in the builder, it cannot resolve at compile time to pass in null object.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420540315", "createdAt": "2020-05-06T04:35:39Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderUnitTest.java", "diffHunk": "@@ -47,33 +47,11 @@ public void invalidProtocol() {\n         });\n     }\n \n-    /**\n-     * Test for null API key\n-     */\n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5NzUxOA=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyOTUyMg==", "bodyText": "assigning the null value to a type value, such as AzureKeyCredential credential = null, and replace null value with credential will resolve it. `=", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420929522", "createdAt": "2020-05-06T16:33:30Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderUnitTest.java", "diffHunk": "@@ -47,33 +47,11 @@ public void invalidProtocol() {\n         });\n     }\n \n-    /**\n-     * Test for null API key\n-     */\n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5NzUxOA=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzMzk3OA==", "bodyText": "You can also do cast in API.\n.credential((AzureKeyCredential) null)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420933978", "createdAt": "2020-05-06T16:40:10Z", "author": {"login": "sima-zhu"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientBuilderUnitTest.java", "diffHunk": "@@ -47,33 +47,11 @@ public void invalidProtocol() {\n         });\n     }\n \n-    /**\n-     * Test for null API key\n-     */\n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5NzUxOA=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY0NzMzOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToyODowMVrOGRBQdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxMzo0MVrOGRdFvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5OTU3Mw==", "bodyText": "Search is validating apiKeyCredential.getKey empty or null case.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420499573", "createdAt": "2020-05-06T01:28:01Z", "author": {"login": "sima-zhu"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "diffHunk": "@@ -219,14 +219,14 @@ public FormRecognizerClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the credential to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n+     * Sets the {@link AzureKeyCredential} to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n      *\n-     * @param apiKeyCredential API key credential\n+     * @param apiKeyCredential {@link AzureKeyCredential} API key credential\n      *\n      * @return The updated FormRecognizerClientBuilder object.\n      * @throws NullPointerException If {@code apiKeyCredential} is {@code null}\n      */\n-    public FormRecognizerClientBuilder apiKey(AzureKeyCredential apiKeyCredential) {\n+    public FormRecognizerClientBuilder credential(AzureKeyCredential apiKeyCredential) {\n         this.credential = Objects.requireNonNull(apiKeyCredential, \"'apiKeyCredential' cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMDMzMQ==", "bodyText": "Moreover, if the credential is required, we can move the validation up to buildClient()", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420500331", "createdAt": "2020-05-06T01:30:52Z", "author": {"login": "sima-zhu"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "diffHunk": "@@ -219,14 +219,14 @@ public FormRecognizerClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the credential to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n+     * Sets the {@link AzureKeyCredential} to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n      *\n-     * @param apiKeyCredential API key credential\n+     * @param apiKeyCredential {@link AzureKeyCredential} API key credential\n      *\n      * @return The updated FormRecognizerClientBuilder object.\n      * @throws NullPointerException If {@code apiKeyCredential} is {@code null}\n      */\n-    public FormRecognizerClientBuilder apiKey(AzureKeyCredential apiKeyCredential) {\n+    public FormRecognizerClientBuilder credential(AzureKeyCredential apiKeyCredential) {\n         this.credential = Objects.requireNonNull(apiKeyCredential, \"'apiKeyCredential' cannot be null.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5OTU3Mw=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU0MTExNA==", "bodyText": "It does have that here - https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java#L181", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420541114", "createdAt": "2020-05-06T04:39:21Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "diffHunk": "@@ -219,14 +219,14 @@ public FormRecognizerClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the credential to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n+     * Sets the {@link AzureKeyCredential} to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n      *\n-     * @param apiKeyCredential API key credential\n+     * @param apiKeyCredential {@link AzureKeyCredential} API key credential\n      *\n      * @return The updated FormRecognizerClientBuilder object.\n      * @throws NullPointerException If {@code apiKeyCredential} is {@code null}\n      */\n-    public FormRecognizerClientBuilder apiKey(AzureKeyCredential apiKeyCredential) {\n+    public FormRecognizerClientBuilder credential(AzureKeyCredential apiKeyCredential) {\n         this.credential = Objects.requireNonNull(apiKeyCredential, \"'apiKeyCredential' cannot be null.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5OTU3Mw=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzMzM4MQ==", "bodyText": "public SearchServiceClientBuilder credential(AzureKeyCredential keyCredential) {\n        if (keyCredential == null) {\n            throw logger.logExceptionAsError(new NullPointerException(\"'keyCredential' cannot be null.\"));\n        }\n        if (CoreUtils.isNullOrEmpty(keyCredential.getKey())) {\n            throw logger.logExceptionAsError(\n                new IllegalArgumentException(\"'keyCredential' cannot have a null or empty API key.\"));\n        }\n        this.keyCredential = keyCredential;\n        return this;\n    }\n\nHere is how search do validation for your reference.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420933381", "createdAt": "2020-05-06T16:39:19Z", "author": {"login": "sima-zhu"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "diffHunk": "@@ -219,14 +219,14 @@ public FormRecognizerClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the credential to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n+     * Sets the {@link AzureKeyCredential} to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n      *\n-     * @param apiKeyCredential API key credential\n+     * @param apiKeyCredential {@link AzureKeyCredential} API key credential\n      *\n      * @return The updated FormRecognizerClientBuilder object.\n      * @throws NullPointerException If {@code apiKeyCredential} is {@code null}\n      */\n-    public FormRecognizerClientBuilder apiKey(AzureKeyCredential apiKeyCredential) {\n+    public FormRecognizerClientBuilder credential(AzureKeyCredential apiKeyCredential) {\n         this.credential = Objects.requireNonNull(apiKeyCredential, \"'apiKeyCredential' cannot be null.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5OTU3Mw=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NTU4MA==", "bodyText": "@sima-zhu Could this\n\nif (keyCredential == null) {\nthrow logger.logExceptionAsError(new NullPointerException(\"'keyCredential' cannot be null.\"));\n}\n\nbe replaced with\n\n   this.credential = Objects.requireNonNull(keyCredential, \"'keyCredential' cannot be null.\");\n\n\nAnd also for the rest of the code, I see that we are already doing the empty checks here and here. It would be redundant?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420955580", "createdAt": "2020-05-06T17:13:41Z", "author": {"login": "samvaity"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilder.java", "diffHunk": "@@ -219,14 +219,14 @@ public FormRecognizerClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the credential to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n+     * Sets the {@link AzureKeyCredential} to use when authenticating HTTP requests for this FormRecognizerClientBuilder.\n      *\n-     * @param apiKeyCredential API key credential\n+     * @param apiKeyCredential {@link AzureKeyCredential} API key credential\n      *\n      * @return The updated FormRecognizerClientBuilder object.\n      * @throws NullPointerException If {@code apiKeyCredential} is {@code null}\n      */\n-    public FormRecognizerClientBuilder apiKey(AzureKeyCredential apiKeyCredential) {\n+    public FormRecognizerClientBuilder credential(AzureKeyCredential apiKeyCredential) {\n         this.credential = Objects.requireNonNull(apiKeyCredential, \"'apiKeyCredential' cannot be null.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5OTU3Mw=="}, "originalCommit": {"oid": "032be60f9a0977810b7212085554e202d9dcc133"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDYwNzMwOnYy", "diffSide": "RIGHT", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilderUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozMTowMlrOGRdxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozMTowMlrOGRdxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2Njc3Nw==", "bodyText": "Method name should be renamed too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420966777", "createdAt": "2020-05-06T17:31:02Z", "author": {"login": "srnagar"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientBuilderUnitTest.java", "diffHunk": "@@ -54,7 +54,7 @@ public void invalidProtocol() {\n     public void nullApiKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060d8d7f2d978df2c099839918de5693a49189f5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDYxNDk5OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/RotateApiKey.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozMzoxNFrOGRd2kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozMzoxNFrOGRd2kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2ODA4MQ==", "bodyText": "Update the name of the class to RotateAzureKeyCredential", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420968081", "createdAt": "2020-05-06T17:33:14Z", "author": {"login": "srnagar"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/RotateApiKey.java", "diffHunk": "@@ -19,7 +19,7 @@\n     public static void main(String[] args) {\n         AzureKeyCredential credential = new AzureKeyCredential(\"{api_key}\");\n         TextAnalyticsClient client = new TextAnalyticsClientBuilder()\n-            .apiKey(credential)\n+            .credential(credential)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060d8d7f2d978df2c099839918de5693a49189f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDYyMTQxOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientJavaDocCodeSnippets.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzozNDo0MFrOGRd6gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODozNTo1M1rOGRgQSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2OTA4OQ==", "bodyText": "Use azure_key_credential instead of api_key everywhere to be consistent with terminology.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r420969089", "createdAt": "2020-05-06T17:34:40Z", "author": {"login": "srnagar"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -33,7 +33,7 @@\n     public TextAnalyticsAsyncClient createTextAnalyticsAsyncClient() {\n         // BEGIN: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.instantiation\n         TextAnalyticsAsyncClient textAnalyticsAsyncClient = new TextAnalyticsClientBuilder()\n-            .apiKey(new AzureKeyCredential(\"{api_key}\"))\n+            .credential(new AzureKeyCredential(\"{api_key}\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060d8d7f2d978df2c099839918de5693a49189f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwNzQzNA==", "bodyText": "updated to say key as that is what it is called in Portal.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10738#discussion_r421007434", "createdAt": "2020-05-06T18:35:53Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -33,7 +33,7 @@\n     public TextAnalyticsAsyncClient createTextAnalyticsAsyncClient() {\n         // BEGIN: com.azure.ai.textanalytics.TextAnalyticsAsyncClient.instantiation\n         TextAnalyticsAsyncClient textAnalyticsAsyncClient = new TextAnalyticsClientBuilder()\n-            .apiKey(new AzureKeyCredential(\"{api_key}\"))\n+            .credential(new AzureKeyCredential(\"{api_key}\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2OTA4OQ=="}, "originalCommit": {"oid": "060d8d7f2d978df2c099839918de5693a49189f5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4464, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}