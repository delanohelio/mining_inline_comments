{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDM4NzE0", "number": 18268, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo1OToxM1rOFHpfOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoxMDoyNlrOFHrOLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTY0MDg4OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/b2c/AADB2CConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo1OToxM1rOIJK22g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo1OToxM1rOIJK22g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ4NTk3OA==", "bodyText": "The following 2 style is better:\n\nAUTHENTICATE_ADDITIONAL_PARAMETERS_LOGIN_HINT = AUTHENTICATE_ADDITIONAL_PARAMETERS + \".\" + PROMPT\nAUTHENTICATE_ADDITIONAL_PARAMETERS_LOGIN_HINT = \".authenticate-additional-parameters.prompt\".\n\nI prefer 2.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18268#discussion_r546485978", "createdAt": "2020-12-21T02:59:13Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/b2c/AADB2CConstants.java", "diffHunk": "@@ -8,6 +8,20 @@\n \n public class AADB2CConstants {\n \n+    private static final String AUTHENTICATE_ADDITIONAL_PARAMETERS = \".authenticate-additional-parameters\";\n+\n+    private static final String AUTHENTICATE_ADDITIONAL_PARAMETERS_LOGIN_HINT = AUTHENTICATE_ADDITIONAL_PARAMETERS + \".login-hint\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e061d0b304476b17c4b21d8d50e4590a5df920b0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTkyNDkyOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/b2c/AADB2CAutoConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoxMDoyNlrOIJNSbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMzoxM1rOIJuxRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNTgwNA==", "bodyText": "Hi, @han-gao , we should test method AADB2CAuthorizationRequestResolver.resolve(...) instead of only test AADB2CProperties", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18268#discussion_r546525804", "createdAt": "2020-12-21T06:10:26Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/b2c/AADB2CAutoConfigurationTest.java", "diffHunk": "@@ -43,8 +45,12 @@ public void testPropertiesBean() {\n             assertThat(properties.getReplyUrl()).isEqualTo(AADB2CConstants.TEST_REPLY_URL);\n \n             final String signUpOrSignIn = properties.getUserFlows().getSignUpOrSignIn();\n+            final Object prompt = properties.getAuthenticateAdditionalParameters().get(AADB2CConstants.PROMPT);\n+            final String loginHint = String.valueOf(properties.getAuthenticateAdditionalParameters().get(AADB2CConstants.LOGIN_HINT));\n \n             assertThat(signUpOrSignIn).isEqualTo(AADB2CConstants.TEST_SIGN_UP_OR_IN_NAME);\n+            assertThat(prompt).isEqualTo(AADB2CConstants.TEST_PROMPT);\n+            assertThat(loginHint).isEqualTo(AADB2CConstants.TEST_LOGIN_HINT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d05154560a27dbfecc5eb8b11277632c75c1a9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NDM3NA==", "bodyText": "Seems it already exist in AADB2CAuthorizationRequestResolverTest.java.\nOK, I'll merge it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18268#discussion_r547074374", "createdAt": "2020-12-22T05:23:13Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/b2c/AADB2CAutoConfigurationTest.java", "diffHunk": "@@ -43,8 +45,12 @@ public void testPropertiesBean() {\n             assertThat(properties.getReplyUrl()).isEqualTo(AADB2CConstants.TEST_REPLY_URL);\n \n             final String signUpOrSignIn = properties.getUserFlows().getSignUpOrSignIn();\n+            final Object prompt = properties.getAuthenticateAdditionalParameters().get(AADB2CConstants.PROMPT);\n+            final String loginHint = String.valueOf(properties.getAuthenticateAdditionalParameters().get(AADB2CConstants.LOGIN_HINT));\n \n             assertThat(signUpOrSignIn).isEqualTo(AADB2CConstants.TEST_SIGN_UP_OR_IN_NAME);\n+            assertThat(prompt).isEqualTo(AADB2CConstants.TEST_PROMPT);\n+            assertThat(loginHint).isEqualTo(AADB2CConstants.TEST_LOGIN_HINT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNTgwNA=="}, "originalCommit": {"oid": "99d05154560a27dbfecc5eb8b11277632c75c1a9"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2475, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}