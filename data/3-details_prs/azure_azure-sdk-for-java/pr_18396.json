{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2ODEwMDU3", "number": 18396, "title": "make aad obo autoconfiguration depend on aad.client-id", "bodyText": "In the current implementation, when users add the aad starter as a dependency while not configuring any aad properties, the obo autoconfiguration will complain that aad-clientid must be set.\nThis PR is to fix this issue.", "createdAt": "2020-12-30T06:16:42Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396", "merged": true, "mergeCommit": {"oid": "89a0ab537d6a0f0014e7d7dc6aba6633863811e2"}, "closed": true, "closedAt": "2020-12-30T09:20:29Z", "author": {"login": "saragluna"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrJGR5gH2gAyNTQ2ODEwMDU3OjZhM2U5N2E3MzE3N2JmMGU2OTIzYzY1NDA3MmNiMTM1NzljN2E2YTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrLH23gFqTU1OTk1MzQ1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4", "author": {"user": {"login": "saragluna", "name": "Xiaolu Dai"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6a3e97a73177bf0e6923c654072cb13579c7a6a4", "committedDate": "2020-12-30T06:11:59Z", "message": "make aad obo autoconfiguration depend on aad.client-id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5ODk3MTM4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#pullrequestreview-559897138", "createdAt": "2020-12-30T06:23:52Z", "commit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyMzo1MlrOIMeLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyNDoxOFrOIMeL-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODM0OQ==", "bodyText": "Can we keep the same style? All use AAD_PREFIX, or not use it at all.\nOfcourse, we can do it after release.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948349", "createdAt": "2020-12-30T06:23:52Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "diffHunk": "@@ -20,14 +20,17 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n \n+import static com.azure.spring.autoconfigure.aad.AADAuthenticationProperties.AAD_PREFIX;\n+\n /**\n  * Configuration properties for Azure Active Directory Authentication.\n  */\n @Validated\n-@ConfigurationProperties(\"azure.activedirectory\")\n+@ConfigurationProperties(AAD_PREFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODQwOA==", "bodyText": "Do we need test like testWithRequiredPropertiesSet?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948408", "createdAt": "2020-12-30T06:24:18Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,17 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96b318e2d29232918214b23a3b5ef27098a5cf1c", "author": {"user": {"login": "saragluna", "name": "Xiaolu Dai"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/96b318e2d29232918214b23a3b5ef27098a5cf1c", "committedDate": "2020-12-30T06:57:38Z", "message": "add test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTMxMzMy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#pullrequestreview-559931332", "createdAt": "2020-12-30T07:07:10Z", "commit": {"oid": "96b318e2d29232918214b23a3b5ef27098a5cf1c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514", "author": {"user": {"login": "saragluna", "name": "Xiaolu Dai"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80ca6fcfbb51036c3b326efc17b4fe418b278514", "committedDate": "2020-12-30T07:12:06Z", "message": "use SPEL to make condition on authorization-clients"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTMzMjg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#pullrequestreview-559933288", "createdAt": "2020-12-30T07:16:12Z", "commit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxNjoxM1rOIMf4BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxODowMlrOIMf9VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NjA2OQ==", "bodyText": "Good point. \ud83d\udc4d", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549976069", "createdAt": "2020-12-30T07:16:13Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADResourceServerOboConfiguration.java", "diffHunk": "@@ -33,6 +35,8 @@\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class })\n @ConditionalOnClass({ BearerTokenAuthenticationToken.class, OAuth2LoginAuthenticationFilter.class })\n+@ConditionalOnProperty(prefix = \"azure.activedirectory\", value = \"client-id\")\n+@ConditionalOnExpression(\"!'${azure.activedirectory.authorization-clients}'.isEmpty()\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NzQyOQ==", "bodyText": "We'd better add more tests:\n\nclient-id configured, but no authorization-clients.\nclient-id not configured, but authorization-clients configured.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549977429", "createdAt": "2020-12-30T07:18:02Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,30 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545", "author": {"user": {"login": "saragluna", "name": "Xiaolu Dai"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/65a1550e08cc274d8efc04fccd440e2d853ec545", "committedDate": "2020-12-30T07:56:43Z", "message": "remove wrong SpEl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTQ0ODA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#pullrequestreview-559944809", "createdAt": "2020-12-30T08:02:54Z", "commit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMjo1NFrOIMh-xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMzowM1rOIMh_Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMDU2NQ==", "bodyText": "doesNotHaveBean should use bean name.  AADOAuth2OboAuthorizedClientRepository is not a bean name.\nMy suggestion is to use\ndoesNotHaveBean(Class<?> type) {\n\ninstead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r550010565", "createdAt": "2020-12-30T08:02:54Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,24 +26,43 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n+    @Test\n+    public void testWithRequiredPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .withPropertyValues(\"azure.activedirectory.client-id=fake-client-id\")\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADAuthenticationProperties.class);\n+                assertThat(context).hasSingleBean(ClientRegistrationRepository.class);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n     @Test\n     public void testNotExistBearerTokenAuthenticationToken() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMDY5OA==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r550010698", "createdAt": "2020-12-30T08:03:03Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,24 +26,43 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n+    @Test\n+    public void testWithRequiredPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .withPropertyValues(\"azure.activedirectory.client-id=fake-client-id\")\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADAuthenticationProperties.class);\n+                assertThat(context).hasSingleBean(ClientRegistrationRepository.class);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n     @Test\n     public void testNotExistBearerTokenAuthenticationToken() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));\n     }\n \n     @Test\n     public void testNotExistOAuth2LoginAuthenticationFilter() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(OAuth2LoginAuthenticationFilter.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da2b8f367821d8354d1a4f9ea8ca52a72c2767b2", "author": {"user": {"login": "saragluna", "name": "Xiaolu Dai"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/da2b8f367821d8354d1a4f9ea8ca52a72c2767b2", "committedDate": "2020-12-30T08:31:14Z", "message": "refactor doesNotHaveBean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTUzNDUy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#pullrequestreview-559953452", "createdAt": "2020-12-30T08:33:31Z", "commit": {"oid": "da2b8f367821d8354d1a4f9ea8ca52a72c2767b2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}