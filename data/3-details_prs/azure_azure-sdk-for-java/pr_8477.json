{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzcyNzk3", "number": 8477, "title": "Added ability to check if share, file or directory exists ", "bodyText": "Resolves #8381", "createdAt": "2020-02-25T20:00:05Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477", "merged": true, "mergeCommit": {"oid": "caec48ffdaed8b9ab3b8b709cf2384b522d144a1"}, "closed": true, "closedAt": "2020-03-02T20:30:46Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH1sI-AH2gAyMzc5NzcyNzk3OmJhZTMzNDBjYTYxZDk1YTBlODUzNzg3NjQyMmViYjNhNmEyN2ZjZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI1HnnAH2gAyMzc5NzcyNzk3OjdlZjdhOGE0YjM0MzMyMGNmZWZkNWFjMGNjNzk2OGJmOTJiMDAxNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bae3340ca61d95a0e8537876422ebb3a6a27fcde", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bae3340ca61d95a0e8537876422ebb3a6a27fcde", "committedDate": "2020-02-25T17:36:44Z", "message": "Added code for exists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "committedDate": "2020-02-25T19:58:45Z", "message": "Added tests for exists"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDk2NTcy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#pullrequestreview-364496572", "createdAt": "2020-02-25T22:28:07Z", "commit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjoyODowN1rOFuXk5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjozMjo0OVrOFuXtKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTA5Mg==", "bodyText": "Shouldn't need to try catch here given the overload being called already does this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165092", "createdAt": "2020-02-25T22:28:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTQ3NQ==", "bodyText": "For readability mind putting the entire second conditional on the next line?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165475", "createdAt": "2020-02-25T22:28:56Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t -> t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode()\n+                    == 404,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTgyNQ==", "bodyText": "Same comment about non-needed try/catch", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165825", "createdAt": "2020-02-25T22:29:44Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareDirectoryAsyncClient.java", "diffHunk": "@@ -158,6 +159,58 @@ public ShareDirectoryAsyncClient getSubdirectoryClient(String subdirectoryName)\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.exists}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjA2Nw==", "bodyText": "Same comment about second conditional readability.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166067", "createdAt": "2020-02-25T22:30:15Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareDirectoryAsyncClient.java", "diffHunk": "@@ -158,6 +159,58 @@ public ShareDirectoryAsyncClient getSubdirectoryClient(String subdirectoryName)\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.exists}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode()\n+                    == 404,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjQ2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return true if the share exists, false if it doesn't\n          \n          \n            \n                 * @return Flag indicating existence of the share.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166464", "createdAt": "2020-02-25T22:31:10Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjcwMg==", "bodyText": "This would differ from the other Javadocs but I feel it reads better.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets if the share this client represents exists in the cloud.\n          \n          \n            \n                 * Determines if the share this client represents exists in the cloud.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166702", "createdAt": "2020-02-25T22:31:43Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NzIwOQ==", "bodyText": "Does this method return HttpResponseException in some cases? Just noticed this check differs from the others.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384167209", "createdAt": "2020-02-25T22:32:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -159,6 +161,61 @@ public ShareServiceVersion getServiceVersion() {\n         return serviceVersion;\n     }\n \n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareFileAsyncClient.exists}\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareFileAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(null, context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    (t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode() == 404)\n+                || (t instanceof HttpResponseException && ((HttpResponseException) t).getResponse().getStatusCode()\n+                        == 404),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df7cde3be973489d1489d02170eeae25e1f278ab", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/df7cde3be973489d1489d02170eeae25e1f278ab", "committedDate": "2020-02-25T23:18:15Z", "message": "made changes based off review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/205af64f8ddfe0888f124dfb6e05d7070cf9c247", "committedDate": "2020-02-25T23:36:00Z", "message": "updated comments for sync files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTI4NjU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#pullrequestreview-364528659", "createdAt": "2020-02-25T23:36:44Z", "commit": {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjA5NTE5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#pullrequestreview-366609519", "createdAt": "2020-02-28T18:48:28Z", "commit": {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0ODoyOFrOFv_JqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0ODoyOFrOFv_JqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MjA1Ng==", "bodyText": "Should we check error code?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r385862056", "createdAt": "2020-02-28T18:48:28Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,48 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Determines if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return Flag indicating existence of the share.\n+     */\n+    public Mono<Boolean> exists() {\n+        return existsWithResponse().flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Determines if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.existsWithResponse}\n+     *\n+     * @return Flag indicating existence of the share.\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode() == 404,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjEzMDgy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#pullrequestreview-366613082", "createdAt": "2020-02-28T18:54:32Z", "commit": {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ef7a8a4b343320cfefd5ac0cc7968bf92b00172", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ef7a8a4b343320cfefd5ac0cc7968bf92b00172", "committedDate": "2020-02-28T19:30:46Z", "message": "Added more checks for error code"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1029, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}