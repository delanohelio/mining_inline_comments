{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MTM0OTM0", "number": 17389, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMTowMDo1NVrOE3A8Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMTowMDo1NVrOE3A8Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTIyNTAzOnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/ManagedIdentityCredentialTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMTowMDo1NVrOHwHnYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMTowNjoxOVrOHwHulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxODQ2NA==", "bodyText": "Shouldn't this be expecting ClientAuthenticationException exception?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17389#discussion_r520218464", "createdAt": "2020-11-10T01:00:55Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/ManagedIdentityCredentialTest.java", "diffHunk": "@@ -86,4 +86,24 @@ public void testIMDS() throws Exception {\n                         && expiresOn.getSecond() == token.getExpiresAt().getSecond())\n                 .verifyComplete();\n     }\n+\n+    @Test\n+    public void testArcUserAssigned() throws Exception {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+\n+        // setup\n+        String token1 = \"token1\";\n+        String endpoint = \"http://localhost\";\n+        TokenRequestContext request = new TokenRequestContext().addScopes(\"https://management.azure.com\");\n+        OffsetDateTime expiresOn = OffsetDateTime.now(ZoneOffset.UTC).plusHours(1);\n+        configuration.put(\"IDENTITY_ENDPOINT\", endpoint);\n+        configuration.put(\"IMDS_ENDPOINT\", endpoint);\n+\n+\n+        // test\n+        ManagedIdentityCredential credential = new ManagedIdentityCredentialBuilder().clientId(CLIENT_ID).build();\n+        StepVerifier.create(credential.getToken(request))\n+            .expectError(CredentialUnavailableException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "697bcad4b810bac86a3d83e3338178a0c503fde4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIyMDMwOQ==", "bodyText": "True, updated.\nSaved time before CI complained", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17389#discussion_r520220309", "createdAt": "2020-11-10T01:06:19Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/ManagedIdentityCredentialTest.java", "diffHunk": "@@ -86,4 +86,24 @@ public void testIMDS() throws Exception {\n                         && expiresOn.getSecond() == token.getExpiresAt().getSecond())\n                 .verifyComplete();\n     }\n+\n+    @Test\n+    public void testArcUserAssigned() throws Exception {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+\n+        // setup\n+        String token1 = \"token1\";\n+        String endpoint = \"http://localhost\";\n+        TokenRequestContext request = new TokenRequestContext().addScopes(\"https://management.azure.com\");\n+        OffsetDateTime expiresOn = OffsetDateTime.now(ZoneOffset.UTC).plusHours(1);\n+        configuration.put(\"IDENTITY_ENDPOINT\", endpoint);\n+        configuration.put(\"IMDS_ENDPOINT\", endpoint);\n+\n+\n+        // test\n+        ManagedIdentityCredential credential = new ManagedIdentityCredentialBuilder().clientId(CLIENT_ID).build();\n+        StepVerifier.create(credential.getToken(request))\n+            .expectError(CredentialUnavailableException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxODQ2NA=="}, "originalCommit": {"oid": "697bcad4b810bac86a3d83e3338178a0c503fde4"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2967, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}