{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTgyMjQy", "number": 13321, "title": "Allow Long as ID type in Entity for Cosmos DB", "bodyText": "", "createdAt": "2020-07-20T02:52:55Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321", "merged": true, "mergeCommit": {"oid": "9f6f69924f6c979ef57f4fe2dfa6defd4add0c58"}, "closed": true, "closedAt": "2020-07-20T18:58:11Z", "author": {"login": "moarychan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2oiAEAH2gAyNDUyOTgyMjQyOjE5NDlkNWIwZTIwNTI1MTYzNTNlOGJjODJlMTY5YWFmZGZjZTYyMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc20VtTAH2gAyNDUyOTgyMjQyOjJhYTViNjRjZGQwZjM0MGJkMDBjMjZmNmY3MjY4OTliZGMzYWM5OGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b", "author": {"user": {"login": "moarychan", "name": "Moary Chen"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1949d5b0e2052516353e8bc82e169aafdfce620b", "committedDate": "2020-07-20T02:51:20Z", "message": "Allow Long as ID type in Entity for Cosmos DB"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjc4NTYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#pullrequestreview-451278561", "createdAt": "2020-07-20T03:44:27Z", "commit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NDoyN1rOGz2Svw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NjowNlrOGz2VNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ==", "bodyText": "I think we need this change for ReactiveCosmosTemplate as well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020095", "createdAt": "2020-07-20T03:44:27Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ==", "bodyText": "Please make sure this also works for ReactiveCosmosRepository", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020565", "createdAt": "2020-07-20T03:45:41Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg==", "bodyText": "Can we add a unit test for this in CosmosEntityInformationUnitTest.java class ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020726", "createdAt": "2020-07-20T03:46:06Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70aa09c72c749642780fdb06690dd1219f0856ad", "author": {"user": {"login": "moarychan", "name": "Moary Chen"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/70aa09c72c749642780fdb06690dd1219f0856ad", "committedDate": "2020-07-20T07:50:53Z", "message": "Unified processing of ID type conversion and added test cases\nhttps://github.com/Azure/azure-sdk-for-java/issues/12712"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e42ed2c5b89685d1124bf941b31b3fb9c3e7f4c", "author": {"user": {"login": "moarychan", "name": "Moary Chen"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e42ed2c5b89685d1124bf941b31b3fb9c3e7f4c", "committedDate": "2020-07-20T09:45:22Z", "message": "Updated code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2", "author": {"user": {"login": "moarychan", "name": "Moary Chen"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2", "committedDate": "2020-07-20T09:46:32Z", "message": "Updated code smell"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzQ3Mzkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#pullrequestreview-451747391", "createdAt": "2020-07-20T16:01:56Z", "commit": {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowMTo1N1rOG0U9yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowNDoxOFrOG0VDjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjYzNA==", "bodyText": "This should return  type, why is it returning Object ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522634", "createdAt": "2020-07-20T16:01:57Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java", "diffHunk": "@@ -45,4 +47,26 @@\n         //  Process response diagnostics\n         responseDiagnosticsProcessor.processResponseDiagnostics(responseDiagnostics);\n     }\n+\n+    /**\n+     * ID value should be string value, real id type will be String, Integer, Long,\n+     * all of these must be converted to String type.\n+     * @param idValue id value to find\n+     * @throws IllegalArgumentException thrown if id value fail the validation.\n+     * @throws IllegalQueryException thrown if id value fail the validation.\n+     * @return String id value\n+     */\n+    public static Object getStringIDValue(Object idValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjgzNQ==", "bodyText": "Good, makes sense.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522835", "createdAt": "2020-07-20T16:02:15Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjk1OA==", "bodyText": "Thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522958", "createdAt": "2020-07-20T16:02:28Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyNDEwOA==", "bodyText": "Looks good, thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457524108", "createdAt": "2020-07-20T16:04:18Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa5b64cdd0f340bd00c26f6f726899bdc3ac98e", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2aa5b64cdd0f340bd00c26f6f726899bdc3ac98e", "committedDate": "2020-07-20T16:36:46Z", "message": "Updated getStringIDValue API to return String instead of Object"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1185, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}