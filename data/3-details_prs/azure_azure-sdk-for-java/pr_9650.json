{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0OTY1MjE5", "number": 9650, "title": "Add Tests to Azure Core HTTP Response Decoder Classes", "bodyText": "This PR adds tests to the HTTP response decoder classes in Azure Core. In addition to adding tests it also removes code paths that weren't reachable due to previous checks happening in either RestProxy or within HttpResponseBodyDecoder.\nAn issue with UnixTime serialization and deserialization was resolved by adding a UnixTimeSerializer which will convert the underlying OffsetDateTime into the appropriate epoch and a new constructor for UnixTime was added which accepts a String representation of the epoch and converts it into an OffsetDateTime.", "createdAt": "2020-03-27T20:53:46Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650", "merged": true, "mergeCommit": {"oid": "7b0fcde2440a10dd47447b92a3f800c23f6be6ea"}, "closed": true, "closedAt": "2020-04-04T03:34:00Z", "author": {"login": "alzimmermsft"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRgp-IAH2gAyMzk0OTY1MjE5OmJiZWEzZGE5N2ZlNjQ3OWY1YzY4ZDVkNzIzZTk3MWQ3ZDE4MmExM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcULbrGgH2gAyMzk0OTY1MjE5OmNmZDEzYWZmYTY0N2EzMDI3YjM4ZjQ1ZmNkYjNjOTA2OGIxZGY5NDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bbea3da97fe6479f5c68d5d723e971d7d182a13a", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbea3da97fe6479f5c68d5d723e971d7d182a13a", "committedDate": "2020-03-26T18:45:36Z", "message": "Initial tests for HttpResponseBodyDecoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33506f5780a10c83839b9480c30c9099095f5de2", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/33506f5780a10c83839b9480c30c9099095f5de2", "committedDate": "2020-03-26T22:02:43Z", "message": "Merge branch 'master' into AzCore_HttpResponseBodyDecoderTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cefd91c10ff3ec11c30825e94bebe67e2b596bc", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6cefd91c10ff3ec11c30825e94bebe67e2b596bc", "committedDate": "2020-03-27T20:11:05Z", "message": "Removed code paths that shouldn't be reached, fixed serialization for UnixTime, finished adding tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6ea793f19baf2449307ae6fae2d27f61a2555fa3", "committedDate": "2020-03-27T20:41:53Z", "message": "Added tests for HttpResponseHeaderDecoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTkzMzk5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383193399", "createdAt": "2020-03-27T20:54:39Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1NDo0MFrOF9BjQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1NDo0MFrOF9BjQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMjg2NQ==", "bodyText": "Not related to the PR but we have a lot of module openings within pom.client.xml for module specific tests, should these configurations be moved into their specific module?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399532865", "createdAt": "2020-03-27T20:54:40Z", "author": {"login": "alzimmermsft"}, "path": "pom.client.xml", "diffHunk": "@@ -960,8 +960,10 @@\n                 --add-opens com.azure.core/com.azure.core.util.serializer=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.http=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.http.policy=ALL-UNNAMED\n+                --add-opens com.azure.core/com.azure.core.http.rest=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.util=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.implementation.http=ALL-UNNAMED\n+                --add-opens com.azure.core/com.azure.core.implementation.serializer=ALL-UNNAMED\n                 --add-opens com.azure.ai.textanalytics/com.azure.ai.textanalytics=ALL-UNNAMED\n                 --add-opens com.azure.data.appconfiguration/com.azure.data.appconfiguration=ALL-UNNAMED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTkzNjA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383193609", "createdAt": "2020-03-27T20:55:03Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1NTowM1rOF9Bj2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1NTowM1rOF9Bj2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMzAxNw==", "bodyText": "Should this be replaced with a deserializer module for Jackson?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399533017", "createdAt": "2020-03-27T20:55:03Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/UnixTime.java", "diffHunk": "@@ -35,21 +35,27 @@ public UnixTime(long unixSeconds) {\n         this.dateTime = OffsetDateTime.ofInstant(Instant.ofEpochSecond(unixSeconds), ZoneOffset.UTC);\n     }\n \n+    /**\n+     * Creates a UnixTime object with the specified epoch.\n+     *\n+     * @param epoch The epoch value represented as a string.\n+     */\n+    public UnixTime(String epoch) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTk1MDI5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383195029", "createdAt": "2020-03-27T20:57:40Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1Nzo0MVrOF9BoKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1Nzo0MVrOF9BoKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDEyMA==", "bodyText": "Should never get a result type from here, byte[] is treated as a non-decodeable type in isReturnTypeDecodable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399534120", "createdAt": "2020-03-27T20:57:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/serializer/HttpResponseBodyDecoder.java", "diffHunk": "@@ -185,60 +162,48 @@ private static Object deserializeBody(String value, Type resultType, Type wireTy\n     }\n \n     /**\n-     * Given:\n-     * (1). the {@code java.lang.reflect.Type} (resultType) of java proxy method return value\n-     * (2). and {@link ReturnValueWireType} annotation value indicating 'entity type' (wireType)\n-     * of same REST API's wire response body\n+     * Given: (1). the {@code java.lang.reflect.Type} (resultType) of java proxy method return value (2). and {@link\n+     * ReturnValueWireType} annotation value indicating 'entity type' (wireType) of same REST API's wire response body\n      * this method construct 'response body Type'.\n      *\n-     * Note: When {@link ReturnValueWireType} annotation is applied to a proxy method, then the raw\n-     * HTTP response content will need to parsed using the derived 'response body Type' then converted\n-     * to actual {@code returnType}.\n+     * Note: When {@link ReturnValueWireType} annotation is applied to a proxy method, then the raw HTTP response\n+     * content will need to parsed using the derived 'response body Type' then converted to actual {@code returnType}.\n      *\n      * @param resultType the {@code java.lang.reflect.Type} of java proxy method return value\n      * @param wireType the {@code java.lang.reflect.Type} of entity in REST API response body\n      * @return the {@code java.lang.reflect.Type} of REST API response body\n      */\n     private static Type constructWireResponseType(Type resultType, Type wireType) {\n-        Objects.requireNonNull(resultType);\n         Objects.requireNonNull(wireType);\n-        //\n-        Type wireResponseType = resultType;\n \n-        if (resultType == byte[].class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 238}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTk2NDg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383196485", "createdAt": "2020-03-27T21:00:22Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMDoyMlrOF9Bs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMDoyMlrOF9Bs1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNTMxOA==", "bodyText": "Removed Response.class for a few reasons:\n\nI don't think Response would be a sensible resultType to get here since we unbox Response to its parameterized type in an earlier check, so this would need something like Response<Response<>>.\nThe typeArguments retrieval would fail most of the time here since Response<T> only has a single type argument in the interface class, only ResponseBase<H, T> or a custom type could have enough type arguments to work here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399535318", "createdAt": "2020-03-27T21:00:22Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/serializer/HttpResponseBodyDecoder.java", "diffHunk": "@@ -185,60 +162,48 @@ private static Object deserializeBody(String value, Type resultType, Type wireTy\n     }\n \n     /**\n-     * Given:\n-     * (1). the {@code java.lang.reflect.Type} (resultType) of java proxy method return value\n-     * (2). and {@link ReturnValueWireType} annotation value indicating 'entity type' (wireType)\n-     * of same REST API's wire response body\n+     * Given: (1). the {@code java.lang.reflect.Type} (resultType) of java proxy method return value (2). and {@link\n+     * ReturnValueWireType} annotation value indicating 'entity type' (wireType) of same REST API's wire response body\n      * this method construct 'response body Type'.\n      *\n-     * Note: When {@link ReturnValueWireType} annotation is applied to a proxy method, then the raw\n-     * HTTP response content will need to parsed using the derived 'response body Type' then converted\n-     * to actual {@code returnType}.\n+     * Note: When {@link ReturnValueWireType} annotation is applied to a proxy method, then the raw HTTP response\n+     * content will need to parsed using the derived 'response body Type' then converted to actual {@code returnType}.\n      *\n      * @param resultType the {@code java.lang.reflect.Type} of java proxy method return value\n      * @param wireType the {@code java.lang.reflect.Type} of entity in REST API response body\n      * @return the {@code java.lang.reflect.Type} of REST API response body\n      */\n     private static Type constructWireResponseType(Type resultType, Type wireType) {\n-        Objects.requireNonNull(resultType);\n         Objects.requireNonNull(wireType);\n-        //\n-        Type wireResponseType = resultType;\n \n-        if (resultType == byte[].class) {\n-            if (wireType == Base64Url.class) {\n-                wireResponseType = Base64Url.class;\n-            }\n-        } else if (resultType == OffsetDateTime.class) {\n+        Type wireResponseType = resultType;\n+        if (resultType == OffsetDateTime.class) {\n             if (wireType == DateTimeRfc1123.class) {\n                 wireResponseType = DateTimeRfc1123.class;\n             } else if (wireType == UnixTime.class) {\n                 wireResponseType = UnixTime.class;\n             }\n-        } else {\n-            if (TypeUtil.isTypeOrSubTypeOf(resultType, List.class)) {\n-                final Type resultElementType = TypeUtil.getTypeArgument(resultType);\n-                final Type wireResponseElementType = constructWireResponseType(resultElementType, wireType);\n-\n-                wireResponseType = TypeUtil.createParameterizedType(\n-                    (Class<?>) ((ParameterizedType) resultType).getRawType(), wireResponseElementType);\n-            } else if (TypeUtil.isTypeOrSubTypeOf(resultType, Map.class) || TypeUtil.isTypeOrSubTypeOf(resultType,\n-                Response.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 258}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTk2NzE3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383196717", "createdAt": "2020-03-27T21:00:49Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMDo0OVrOF9Btkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMDo0OVrOF9Btkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNTUwNw==", "bodyText": "Removed byte[] for the same reason mentioned above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399535507", "createdAt": "2020-03-27T21:00:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/serializer/HttpResponseBodyDecoder.java", "diffHunk": "@@ -274,90 +234,46 @@ private static Object deserializePage(String value, Type resultType, Type wireTy\n      */\n     private static Object convertToResultType(Object wireResponse, Type resultType, Type wireType) {\n         Object result = wireResponse;\n-\n-        if (wireResponse != null) {\n-            if (resultType == byte[].class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 330}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTk3MDkz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383197093", "createdAt": "2020-03-27T21:01:33Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMTozM1rOF9Buqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMTozM1rOF9Buqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNTc4Nw==", "bodyText": "Not sure why we get the and return the OffsetDateTime from DateTimeRfc1123 and UnixTime", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399535787", "createdAt": "2020-03-27T21:01:33Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/serializer/HttpResponseBodyDecoder.java", "diffHunk": "@@ -274,90 +234,46 @@ private static Object deserializePage(String value, Type resultType, Type wireTy\n      */\n     private static Object convertToResultType(Object wireResponse, Type resultType, Type wireType) {\n         Object result = wireResponse;\n-\n-        if (wireResponse != null) {\n-            if (resultType == byte[].class) {\n-                if (wireType == Base64Url.class) {\n-                    result = ((Base64Url) wireResponse).decodedBytes();\n-                }\n-            } else if (resultType == OffsetDateTime.class) {\n-                if (wireType == DateTimeRfc1123.class) {\n-                    result = ((DateTimeRfc1123) wireResponse).getDateTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 336}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTk3NTYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383197561", "createdAt": "2020-03-27T21:02:23Z", "commit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMjoyM1rOF9BwIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMjoyM1rOF9BwIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjE2MQ==", "bodyText": "Removed as this should be caught by the check for Page.class and should be deserialized through that code path.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r399536161", "createdAt": "2020-03-27T21:02:23Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/implementation/serializer/HttpResponseBodyDecoder.java", "diffHunk": "@@ -274,90 +234,46 @@ private static Object deserializePage(String value, Type resultType, Type wireTy\n      */\n     private static Object convertToResultType(Object wireResponse, Type resultType, Type wireType) {\n         Object result = wireResponse;\n-\n-        if (wireResponse != null) {\n-            if (resultType == byte[].class) {\n-                if (wireType == Base64Url.class) {\n-                    result = ((Base64Url) wireResponse).decodedBytes();\n-                }\n-            } else if (resultType == OffsetDateTime.class) {\n-                if (wireType == DateTimeRfc1123.class) {\n-                    result = ((DateTimeRfc1123) wireResponse).getDateTime();\n-                } else if (wireType == UnixTime.class) {\n-                    result = ((UnixTime) wireResponse).getDateTime();\n+        if (resultType == OffsetDateTime.class) {\n+            if (wireType == DateTimeRfc1123.class) {\n+                result = ((DateTimeRfc1123) wireResponse).getDateTime();\n+            } else if (wireType == UnixTime.class) {\n+                result = ((UnixTime) wireResponse).getDateTime();\n+            }\n+        } else if (TypeUtil.isTypeOrSubTypeOf(resultType, List.class)) {\n+            final Type resultElementType = TypeUtil.getTypeArgument(resultType);\n+\n+            @SuppressWarnings(\"unchecked\") final List<Object> wireResponseList = (List<Object>) wireResponse;\n+\n+            final int wireResponseListSize = wireResponseList.size();\n+            for (int i = 0; i < wireResponseListSize; ++i) {\n+                final Object wireResponseElement = wireResponseList.get(i);\n+                final Object resultElement =\n+                    convertToResultType(wireResponseElement, resultElementType, wireType);\n+                if (wireResponseElement != resultElement) {\n+                    wireResponseList.set(i, resultElement);\n                 }\n-            } else {\n-                if (TypeUtil.isTypeOrSubTypeOf(resultType, List.class)) {\n-                    final Type resultElementType = TypeUtil.getTypeArgument(resultType);\n-\n-                    @SuppressWarnings(\"unchecked\") final List<Object> wireResponseList = (List<Object>) wireResponse;\n-\n-                    final int wireResponseListSize = wireResponseList.size();\n-                    for (int i = 0; i < wireResponseListSize; ++i) {\n-                        final Object wireResponseElement = wireResponseList.get(i);\n-                        final Object resultElement =\n-                            convertToResultType(wireResponseElement, resultElementType, wireType);\n-                        if (wireResponseElement != resultElement) {\n-                            wireResponseList.set(i, resultElement);\n-                        }\n-                    }\n-                    //\n-                    result = wireResponseList;\n-                } else if (TypeUtil.isTypeOrSubTypeOf(resultType, Map.class)) {\n-                    final Type resultValueType = TypeUtil.getTypeArguments(resultType)[1];\n-\n-                    @SuppressWarnings(\"unchecked\") final Map<String, Object> wireResponseMap =\n-                        (Map<String, Object>) wireResponse;\n-\n-                    final Set<Map.Entry<String, Object>> wireResponseEntries = wireResponseMap.entrySet();\n-                    for (Map.Entry<String, Object> wireResponseEntry : wireResponseEntries) {\n-                        final Object wireResponseValue = wireResponseEntry.getValue();\n-                        final Object resultValue = convertToResultType(wireResponseValue, resultValueType, wireType);\n-                        if (wireResponseValue != resultValue) {\n-                            wireResponseMap.put(wireResponseEntry.getKey(), resultValue);\n-                        }\n-                    }\n-                    //\n-                    result = wireResponseMap;\n-                } else if (TypeUtil.isTypeOrSubTypeOf(resultType, PagedResponseBase.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 391}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3958aa7394f6f9b9d2081b303f3c679ff6d33892", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3958aa7394f6f9b9d2081b303f3c679ff6d33892", "committedDate": "2020-03-27T21:45:25Z", "message": "Added back support for byte[], added tests as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fce691db09553cff8dbdae168a64853b736cf411", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fce691db09553cff8dbdae168a64853b736cf411", "committedDate": "2020-03-27T22:22:49Z", "message": "Fix checkstyle issues and changed UnixTimeSerializer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjY1MjAy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-383265202", "createdAt": "2020-03-28T00:44:38Z", "commit": {"oid": "fce691db09553cff8dbdae168a64853b736cf411"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTU3ODUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#pullrequestreview-384957851", "createdAt": "2020-03-31T17:36:27Z", "commit": {"oid": "fce691db09553cff8dbdae168a64853b736cf411"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzozNjoyN1rOF-gy_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzozNjoyN1rOF-gy_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA5MzM3NA==", "bodyText": "Initially, I put this here because there were only a handful of them and it was better to just have all these in one place. Now, the list has grown quite big and we may want to consider moving it to its own pom file. That said, we have to configure maven surefire plugin in each of the modules and when we have to make a change, we have to do it in all poms instead of one place in pom.client.xml.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9650#discussion_r401093374", "createdAt": "2020-03-31T17:36:27Z", "author": {"login": "srnagar"}, "path": "pom.client.xml", "diffHunk": "@@ -960,8 +960,10 @@\n                 --add-opens com.azure.core/com.azure.core.util.serializer=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.http=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.http.policy=ALL-UNNAMED\n+                --add-opens com.azure.core/com.azure.core.http.rest=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.util=ALL-UNNAMED\n                 --add-opens com.azure.core/com.azure.core.implementation.http=ALL-UNNAMED\n+                --add-opens com.azure.core/com.azure.core.implementation.serializer=ALL-UNNAMED\n                 --add-opens com.azure.ai.textanalytics/com.azure.ai.textanalytics=ALL-UNNAMED\n                 --add-opens com.azure.data.appconfiguration/com.azure.data.appconfiguration=ALL-UNNAMED", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMjg2NQ=="}, "originalCommit": {"oid": "6ea793f19baf2449307ae6fae2d27f61a2555fa3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd13affa647a3027b38f45fcdb3c9068b1df948", "author": {"user": {"login": "alzimmermsft", "name": "Alan Zimmer"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/cfd13affa647a3027b38f45fcdb3c9068b1df948", "committedDate": "2020-04-04T01:43:45Z", "message": "Merged in master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1397, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}