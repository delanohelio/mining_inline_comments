{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDA1NDMw", "number": 14658, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0NTozMFrOEflwpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMDoxNjoxNVrOEgMk5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTU5OTc1OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo0NTozMFrOHL9Inw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzozNzo0MlrOHM6w_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ==", "bodyText": "This would be true in Cloud Shell, and AppServiceMsiCredential would fail there. Is Cloud Shell managed identity not supported? It will also be true for Azure Arc, if I remember that design correctly.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482298015", "createdAt": "2020-09-02T18:45:30Z", "author": {"login": "chlowell"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -35,7 +39,8 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)) {\n+        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzIzNw==", "bodyText": "AppServiceMsiCredential works on CloudShell (Azure/azure-sdk#795 (comment)) - @g2vinay have we tested Azure Arc?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482317237", "createdAt": "2020-09-02T19:06:11Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -35,7 +39,8 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)) {\n+        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyMTAyOQ==", "bodyText": "Azure Arc is for the next month release, will test this month.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482321029", "createdAt": "2020-09-02T19:10:30Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -35,7 +39,8 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)) {\n+        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNzc3Mg==", "bodyText": "it works in cloud shell, as @jianghaolu  mentioned above.\nI have updated the conditional here and it won't be true for Azure Arc anymore.\nAzure arc support is yet to be added in all languages.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483307772", "createdAt": "2020-09-03T23:37:42Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -35,7 +39,8 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)) {\n+        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5ODAxNQ=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTYzOTUwOnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODo1MjoyMlrOHL9hzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzozNDo1NVrOHM6tjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg==", "bodyText": "It's \"client_id\" in 2019-08-01.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482304462", "createdAt": "2020-09-02T18:52:22Z", "author": {"login": "chlowell"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -709,33 +711,54 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n     /**\n      * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n      *\n-     * @param msiEndpoint the endpoint to acquire token from\n-     * @param msiSecret the secret to acquire token with\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param identityHeader the identity header to acquire token with\n+     * @param msiEndpoint the MSI endpoint to acquire token from\n+     * @param msiSecret the msi secret to acquire token with\n      * @param request the details of the token request\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret,\n+    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String identityEndpoint, String identityHeader,\n+                                                                   String msiEndpoint, String msiSecret,\n                                                                    TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n+            String endpoint;\n+            String headerValue;\n+            String endpointVersion;\n+\n+            if (identityEndpoint != null) {\n+                endpoint = identityEndpoint;\n+                headerValue = identityHeader;\n+                endpointVersion = IDENTITY_ENDPOINT_VERSION;\n+            } else {\n+                endpoint = msiEndpoint;\n+                headerValue = msiSecret;\n+                endpointVersion = MSI_ENDPOINT_VERSION;\n+            }\n+\n             String resource = ScopeUtil.scopesToResource(request.getScopes());\n             HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n \n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(resource, \"UTF-8\"));\n             payload.append(\"&api-version=\");\n-            payload.append(URLEncoder.encode(\"2017-09-01\", \"UTF-8\"));\n+            payload.append(URLEncoder.encode(endpointVersion, \"UTF-8\"));\n             if (clientId != null) {\n                 payload.append(\"&clientid=\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxODE5MA==", "bodyText": "I tested in app service and the token returned fine for 2019-08-01.\nLikely both the formats are fine.\nBut, I can update the logic to follow their documentation here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482318190", "createdAt": "2020-09-02T19:07:14Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -709,33 +711,54 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n     /**\n      * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n      *\n-     * @param msiEndpoint the endpoint to acquire token from\n-     * @param msiSecret the secret to acquire token with\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param identityHeader the identity header to acquire token with\n+     * @param msiEndpoint the MSI endpoint to acquire token from\n+     * @param msiSecret the msi secret to acquire token with\n      * @param request the details of the token request\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret,\n+    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String identityEndpoint, String identityHeader,\n+                                                                   String msiEndpoint, String msiSecret,\n                                                                    TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n+            String endpoint;\n+            String headerValue;\n+            String endpointVersion;\n+\n+            if (identityEndpoint != null) {\n+                endpoint = identityEndpoint;\n+                headerValue = identityHeader;\n+                endpointVersion = IDENTITY_ENDPOINT_VERSION;\n+            } else {\n+                endpoint = msiEndpoint;\n+                headerValue = msiSecret;\n+                endpointVersion = MSI_ENDPOINT_VERSION;\n+            }\n+\n             String resource = ScopeUtil.scopesToResource(request.getScopes());\n             HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n \n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(resource, \"UTF-8\"));\n             payload.append(\"&api-version=\");\n-            payload.append(URLEncoder.encode(\"2017-09-01\", \"UTF-8\"));\n+            payload.append(URLEncoder.encode(endpointVersion, \"UTF-8\"));\n             if (clientId != null) {\n                 payload.append(\"&clientid=\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNjg5NA==", "bodyText": "updated", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483306894", "createdAt": "2020-09-03T23:34:55Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -709,33 +711,54 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n     /**\n      * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n      *\n-     * @param msiEndpoint the endpoint to acquire token from\n-     * @param msiSecret the secret to acquire token with\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param identityHeader the identity header to acquire token with\n+     * @param msiEndpoint the MSI endpoint to acquire token from\n+     * @param msiSecret the msi secret to acquire token with\n      * @param request the details of the token request\n      * @return a Publisher that emits an AccessToken\n      */\n-    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String msiEndpoint, String msiSecret,\n+    public Mono<AccessToken> authenticateToManagedIdentityEndpoint(String identityEndpoint, String identityHeader,\n+                                                                   String msiEndpoint, String msiSecret,\n                                                                    TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n+            String endpoint;\n+            String headerValue;\n+            String endpointVersion;\n+\n+            if (identityEndpoint != null) {\n+                endpoint = identityEndpoint;\n+                headerValue = identityHeader;\n+                endpointVersion = IDENTITY_ENDPOINT_VERSION;\n+            } else {\n+                endpoint = msiEndpoint;\n+                headerValue = msiSecret;\n+                endpointVersion = MSI_ENDPOINT_VERSION;\n+            }\n+\n             String resource = ScopeUtil.scopesToResource(request.getScopes());\n             HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n \n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(resource, \"UTF-8\"));\n             payload.append(\"&api-version=\");\n-            payload.append(URLEncoder.encode(\"2017-09-01\", \"UTF-8\"));\n+            payload.append(URLEncoder.encode(endpointVersion, \"UTF-8\"));\n             if (clientId != null) {\n                 payload.append(\"&clientid=\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDQ2Mg=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNjAzODc1OnYy", "diffSide": "RIGHT", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/AppServiceMsiCredential.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTo1NDoxN1rOHMBunA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzozNjozMlrOHM6vsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MzI3Ng==", "bodyText": "What happens when both identity and msi endpoints are set? Is there a priority order for which endpoint to use? Is it documented somewhere? Also, if both are set, we should validate them both.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r482373276", "createdAt": "2020-09-02T19:54:17Z", "author": {"login": "srnagar"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/AppServiceMsiCredential.java", "diffHunk": "@@ -30,13 +32,24 @@\n      */\n     AppServiceMsiCredential(String clientId, IdentityClient identityClient) {\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n+        this.identityEndpoint = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_ENDPOINT);\n+        this.identityHeader = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_HEADER);\n         this.msiEndpoint = configuration.get(Configuration.PROPERTY_MSI_ENDPOINT);\n         this.msiSecret = configuration.get(Configuration.PROPERTY_MSI_SECRET);\n         this.identityClient = identityClient;\n         this.clientId = clientId;\n-        if (!(msiEndpoint.startsWith(\"https\") || msiEndpoint.startsWith(\"http\"))) {\n+        if (identityEndpoint != null) {\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n+        } else {\n+            validateEndpointProtocol(this.msiEndpoint, \"MSI\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwNzQ0Mw==", "bodyText": "if identity endpoint is set, we just use that, else we use MSI endpoint if its set.\nAlthough we use only identity endpoint, if both are set, but for validation, I have enabled it for both if both are set.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483307443", "createdAt": "2020-09-03T23:36:32Z", "author": {"login": "g2vinay"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/AppServiceMsiCredential.java", "diffHunk": "@@ -30,13 +32,24 @@\n      */\n     AppServiceMsiCredential(String clientId, IdentityClient identityClient) {\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n+        this.identityEndpoint = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_ENDPOINT);\n+        this.identityHeader = configuration.get(ManagedIdentityCredential.PROPERTY_IDENTITY_HEADER);\n         this.msiEndpoint = configuration.get(Configuration.PROPERTY_MSI_ENDPOINT);\n         this.msiSecret = configuration.get(Configuration.PROPERTY_MSI_SECRET);\n         this.identityClient = identityClient;\n         this.clientId = clientId;\n-        if (!(msiEndpoint.startsWith(\"https\") || msiEndpoint.startsWith(\"http\"))) {\n+        if (identityEndpoint != null) {\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n+        } else {\n+            validateEndpointProtocol(this.msiEndpoint, \"MSI\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MzI3Ng=="}, "originalCommit": {"oid": "ad9bcdb4cfa6aaff4c1e61e4ac26dcd09ec33b1c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTk1OTQzOnYy", "diffSide": "RIGHT", "path": "sdk/e2e/src/main/java/com/azure/endtoend/identity/WebJobsIdentityTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMDoxNjoxNVrOHM7Z-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMDoxNjoxNVrOHM7Z-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxODI2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                          + \"configured in the environment. Atleast one should be configuured\"));\n          \n          \n            \n                                                          + \"configured in the environment. At least one should be configured\"));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14658#discussion_r483318264", "createdAt": "2020-09-04T00:16:15Z", "author": {"login": "chlowell"}, "path": "sdk/e2e/src/main/java/com/azure/endtoend/identity/WebJobsIdentityTest.java", "diffHunk": "@@ -60,12 +62,18 @@ void run() throws IllegalStateException {\n     }\n \n     private void testMSIEndpointWithSystemAssigned() {\n-        assertConfigPresence(Configuration.PROPERTY_MSI_ENDPOINT,\n-            \"testMSIEndpointWithSystemAssigned - MSIEndpoint not configured in the environment.\");\n+        if (CoreUtils.isNullOrEmpty(CONFIGURATION.get(Configuration.PROPERTY_MSI_ENDPOINT))\n+                && CoreUtils.isNullOrEmpty(CONFIGURATION.get(Configuration.PROPERTY_MSI_SECRET)))  {\n+            throw logger.logExceptionAsError(\n+                new IllegalStateException(\"testMSIEndpointWithUserAssigned - MSIEndpoint and Identity Point not\"\n+                                              + \"configured in the environment. Atleast one should be configuured\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7cb212c96ce4c1d202d8aca6af9210c2dc90e7e"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1336, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}