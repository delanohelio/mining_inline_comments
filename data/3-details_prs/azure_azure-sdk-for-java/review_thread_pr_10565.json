{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5OTIzMzg5", "number": 10565, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjo1NDoxNVrOD3dNWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjo1NDoxNVrOD3dNWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDc2ODI1OnYy", "diffSide": "RIGHT", "path": "sdk/management/samples/src/main/java/com/azure/management/cosmosdb/samples/CreateCosmosDBWithEventualConsistency.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjo1NDoxNVrOGNuE_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjoxODoxN1rOGNxE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzOTYxNA==", "bodyText": "It seems useless to add this parameter in sample.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10565#discussion_r417039614", "createdAt": "2020-04-29T02:54:15Z", "author": {"login": "ChenTanyi"}, "path": "sdk/management/samples/src/main/java/com/azure/management/cosmosdb/samples/CreateCosmosDBWithEventualConsistency.java", "diffHunk": "@@ -37,9 +37,10 @@\n     /**\n      * Main function which runs the actual sample.\n      * @param azure instance of the azure client\n+     * @param connectionPolicy connection policy used for cosmos client\n      * @return true if sample runs successfully\n      */\n-    public static boolean runSample(Azure azure) {\n+    public static boolean runSample(Azure azure, ConnectionPolicy connectionPolicy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e8f14913ad0f70dea675d220e111b48338c8cbf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MTc5Mg==", "bodyText": "As sample, we should provide this just in case the user requires to set proxy settings. At least, they will know CosmosClient need additional settings if they follow the sample and work with mgmt SDK & CosmosClient for their project.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10565#discussion_r417041792", "createdAt": "2020-04-29T03:03:59Z", "author": {"login": "xseeseesee"}, "path": "sdk/management/samples/src/main/java/com/azure/management/cosmosdb/samples/CreateCosmosDBWithEventualConsistency.java", "diffHunk": "@@ -37,9 +37,10 @@\n     /**\n      * Main function which runs the actual sample.\n      * @param azure instance of the azure client\n+     * @param connectionPolicy connection policy used for cosmos client\n      * @return true if sample runs successfully\n      */\n-    public static boolean runSample(Azure azure) {\n+    public static boolean runSample(Azure azure, ConnectionPolicy connectionPolicy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzOTYxNA=="}, "originalCommit": {"oid": "9e8f14913ad0f70dea675d220e111b48338c8cbf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0NjUxNA==", "bodyText": "But it is a sample, it is not the API. I think sample should not expose parameter if not necessary. Sample just provides minimal scripts to run, it is not to help user distinguish every parameter. Otherwise, I think lots of parameters should be exposed.\nLike, container registry will need to create docker client. if in such situation, we need to expose docker proxy settings, docker tls settings and so on to user.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10565#discussion_r417046514", "createdAt": "2020-04-29T03:24:15Z", "author": {"login": "ChenTanyi"}, "path": "sdk/management/samples/src/main/java/com/azure/management/cosmosdb/samples/CreateCosmosDBWithEventualConsistency.java", "diffHunk": "@@ -37,9 +37,10 @@\n     /**\n      * Main function which runs the actual sample.\n      * @param azure instance of the azure client\n+     * @param connectionPolicy connection policy used for cosmos client\n      * @return true if sample runs successfully\n      */\n-    public static boolean runSample(Azure azure) {\n+    public static boolean runSample(Azure azure, ConnectionPolicy connectionPolicy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzOTYxNA=="}, "originalCommit": {"oid": "9e8f14913ad0f70dea675d220e111b48338c8cbf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA4ODcyMw==", "bodyText": "What is in that connectionPolicy?\nAlternatively you can provide an overload runSample(Azure azure) with default connectionPolicy, if this one is not very important for user.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10565#discussion_r417088723", "createdAt": "2020-04-29T06:18:17Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/management/samples/src/main/java/com/azure/management/cosmosdb/samples/CreateCosmosDBWithEventualConsistency.java", "diffHunk": "@@ -37,9 +37,10 @@\n     /**\n      * Main function which runs the actual sample.\n      * @param azure instance of the azure client\n+     * @param connectionPolicy connection policy used for cosmos client\n      * @return true if sample runs successfully\n      */\n-    public static boolean runSample(Azure azure) {\n+    public static boolean runSample(Azure azure, ConnectionPolicy connectionPolicy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzOTYxNA=="}, "originalCommit": {"oid": "9e8f14913ad0f70dea675d220e111b48338c8cbf"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4508, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}