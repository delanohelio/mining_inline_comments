{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzk4MDMx", "number": 18157, "title": "Added support for container rename (datalake + blob) and container restore (datalake)", "bodyText": "", "createdAt": "2020-12-16T00:02:07Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157", "merged": true, "mergeCommit": {"oid": "85d487fbea98e9cf9ff7df32072c443084c7b3bf"}, "closed": true, "closedAt": "2021-01-05T20:52:08Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmjX2SgH2gAyNTQwNzk4MDMxOjdmYzdmMTFmYTJlNWVjYTVjMWJhMDQzOTFmYWI2YjFmNzllMThlMWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtQcdyAFqTU2MjA4NTk4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7fc7f11fa2e5eca5c1ba04391fab6b1f79e18e1b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7fc7f11fa2e5eca5c1ba04391fab6b1f79e18e1b", "committedDate": "2020-12-15T23:59:05Z", "message": "Added support for blob and datalake container rename and datalake container restore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f90b245cedfd2c99b2a46daa2253d2d43959c10f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f90b245cedfd2c99b2a46daa2253d2d43959c10f", "committedDate": "2020-12-16T00:00:42Z", "message": "revereted version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f844c006cf44ac327cba584c24e399b5bb55fd04", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f844c006cf44ac327cba584c24e399b5bb55fd04", "committedDate": "2020-12-16T00:16:41Z", "message": "Fixed sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "179250361fe43a2306a2d5a6b492000ecf1640fc", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/179250361fe43a2306a2d5a6b492000ecf1640fc", "committedDate": "2020-12-16T00:30:46Z", "message": "fixed snippet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6764aa8f8fc41c3b44699441f4f4aafdbb0ed20b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6764aa8f8fc41c3b44699441f4f4aafdbb0ed20b", "committedDate": "2020-12-17T18:00:02Z", "message": "Analyze step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a7ed43245fe8c30394f98baee29adf52bae6ae", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/01a7ed43245fe8c30394f98baee29adf52bae6ae", "committedDate": "2020-12-17T19:53:41Z", "message": "Analyze step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b91b50d7637126066e133959b246cd828e59eec", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b91b50d7637126066e133959b246cd828e59eec", "committedDate": "2020-12-17T20:26:32Z", "message": "Fixed blob tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c801d3bf7daa78e0e0773dd93d96670304aa8c61", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c801d3bf7daa78e0e0773dd93d96670304aa8c61", "committedDate": "2020-12-17T20:34:29Z", "message": "Fixed datalake test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/200dc1d078f5e74a95d5d58a52fa4221b97b124b", "committedDate": "2020-12-17T20:34:51Z", "message": "fixed preprod"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MDQ0NzI2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-555044726", "createdAt": "2020-12-17T22:41:13Z", "commit": {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjo0MToxNFrOIILq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjo0NzoyMFrOIIL2LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MDcyNA==", "bodyText": "If Lease-Id is the only valid conditional for this operation why do we accept the more complex match conditions object? Is this to allow for extensibility in the future?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545450724", "createdAt": "2020-12-17T22:41:14Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1085,4 +1086,30 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    private boolean validateNoTime(BlobRequestConditions modifiedRequestConditions) {\n+        if (modifiedRequestConditions == null) {\n+            return true;\n+        }\n+        return modifiedRequestConditions.getIfModifiedSince() == null\n+            && modifiedRequestConditions.getIfUnmodifiedSince() == null;\n+    }\n+\n+    Mono<Response<BlobContainerAsyncClient>> renameWithResponse(ContainerRenameOptions options, Context context) {\n+        StorageImplUtils.assertNotNull(\"options\", options);\n+        BlobRequestConditions requestConditions = options.getRequestConditions() == null ? new BlobRequestConditions()\n+            : options.getRequestConditions();\n+        context = context == null ? Context.NONE : context;\n+\n+        if (!validateNoETag(requestConditions) || !validateNoTime(requestConditions)\n+            || requestConditions.getTagsConditions() != null) {\n+            throw logger.logExceptionAsError(new UnsupportedOperationException(\n+                \"Lease-Id is the only HTTP access condition supported for this API\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MjU0MA==", "bodyText": "Given that using options other than Lease-Id will result in a runtime exception we should add that information as a Javadoc here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545452540", "createdAt": "2020-12-17T22:44:58Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/ContainerRenameOptions.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.models.BlobRequestConditions;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Extended options that may be passed when renaming a blob container.\n+ */\n+@Fluent\n+public class ContainerRenameOptions {\n+\n+    private final String destinationContainerName;\n+    private final String sourceContainerName;\n+    private BlobRequestConditions requestConditions;\n+\n+    /**\n+     * @param destinationContainerName The new name of the container.\n+     * @param sourceContainerName The current name of the container.\n+     */\n+    public ContainerRenameOptions(String destinationContainerName, String sourceContainerName) {\n+        Objects.requireNonNull(destinationContainerName);\n+        Objects.requireNonNull(sourceContainerName);\n+        this.destinationContainerName = destinationContainerName;\n+        this.sourceContainerName = sourceContainerName;\n+    }\n+\n+    /**\n+     * @return The new name of the container.\n+     */\n+    public String getDestinationContainerName() {\n+        return destinationContainerName;\n+    }\n+\n+    /**\n+     * @return The current name of the container.\n+     */\n+    public String getSourceContainerName() {\n+        return sourceContainerName;\n+    }\n+\n+    /**\n+     * @return {@link BlobRequestConditions}\n+     */\n+    public BlobRequestConditions getRequestConditions() {\n+        return requestConditions;\n+    }\n+\n+    /**\n+     * @param requestConditions {@link BlobRequestConditions}\n+     * @return The updated options.\n+     */\n+    public ContainerRenameOptions setRequestConditions(BlobRequestConditions requestConditions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ1MzYxMg==", "bodyText": "Will setting this with full options potentially lead to exceptions being thrown as well?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r545453612", "createdAt": "2020-12-17T22:47:20Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-datalake/src/main/java/com/azure/storage/file/datalake/options/FileSystemRenameOptions.java", "diffHunk": "@@ -0,0 +1,61 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.file.datalake.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.file.datalake.models.DataLakeRequestConditions;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Extended options that may be passed when renaming a file system.\n+ */\n+@Fluent\n+public class FileSystemRenameOptions {\n+\n+    private final String destinationFileSystemName;\n+    private final String sourceFileSystemName;\n+    private DataLakeRequestConditions requestConditions;\n+\n+    /**\n+     * @param destinationFileSystemName The new name of the file system.\n+     * @param sourceFileSystemName The current name of the file system.\n+     */\n+    public FileSystemRenameOptions(String destinationFileSystemName, String sourceFileSystemName) {\n+        Objects.requireNonNull(destinationFileSystemName);\n+        Objects.requireNonNull(sourceFileSystemName);\n+        this.destinationFileSystemName = destinationFileSystemName;\n+        this.sourceFileSystemName = sourceFileSystemName;\n+    }\n+\n+    /**\n+     * @return The new name of the file system.\n+     */\n+    public String getDestinationFileSystemName() {\n+        return destinationFileSystemName;\n+    }\n+\n+    /**\n+     * @return The current name of the file system.\n+     */\n+    public String getSourceFileSystemName() {\n+        return sourceFileSystemName;\n+    }\n+\n+    /**\n+     * @return {@link DataLakeRequestConditions}\n+     */\n+    public DataLakeRequestConditions getRequestConditions() {\n+        return requestConditions;\n+    }\n+\n+    /**\n+     * @param requestConditions {@link DataLakeRequestConditions}\n+     * @return The updated options.\n+     */\n+    public FileSystemRenameOptions setRequestConditions(DataLakeRequestConditions requestConditions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200dc1d078f5e74a95d5d58a52fa4221b97b124b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1ad0666a63187ec598a72cf9f3b4440b65e3589c", "committedDate": "2020-12-18T17:05:34Z", "message": "Merge branch 'feature/storage/stg76' into storage/containerRename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjIyNzc5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-558222779", "createdAt": "2020-12-23T20:50:01Z", "commit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MDowMlrOIK1EaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MDowMlrOIK1EaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyNjE1Mg==", "bodyText": "I think at least in blobs we have a method that handles this condition", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r548226152", "createdAt": "2020-12-23T20:50:02Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/ServiceAPITest.groovy", "diffHunk": "@@ -197,4 +209,290 @@ class ServiceAPITest extends APISpec {\n         response.getHeaders().getValue(\"x-ms-version\") == \"2019-02-02\"\n     }\n \n+    def \"Restore file system\"() {\n+        given:\n+        def cc1 = primaryDataLakeServiceClient.getFileSystemClient(generateFileSystemName())\n+        cc1.create()\n+        def blobName = generatePathName()\n+        cc1.getFileClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryDataLakeServiceClient.listFileSystems(\n+            new ListFileSystemsOptions()\n+                .setPrefix(cc1.getFileSystemName())\n+                .setDetails(new FileSystemListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjIzMDE4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-558223018", "createdAt": "2020-12-23T20:50:43Z", "commit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MDo0M1rOIK1Gmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MDo0M1rOIK1Gmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyNjcxNQ==", "bodyText": "maybe add an exists check to ensure it actually was deleted?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r548226715", "createdAt": "2020-12-23T20:50:43Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/ServiceAPITest.groovy", "diffHunk": "@@ -197,4 +209,290 @@ class ServiceAPITest extends APISpec {\n         response.getHeaders().getValue(\"x-ms-version\") == \"2019-02-02\"\n     }\n \n+    def \"Restore file system\"() {\n+        given:\n+        def cc1 = primaryDataLakeServiceClient.getFileSystemClient(generateFileSystemName())\n+        cc1.create()\n+        def blobName = generatePathName()\n+        cc1.getFileClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjI0MDc2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-558224076", "createdAt": "2020-12-23T20:53:34Z", "commit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MzozNFrOIK1NSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo1MzozNFrOIK1NSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyODQyNQ==", "bodyText": "Validate that the restored  container has the same name as the one passed in", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#discussion_r548228425", "createdAt": "2020-12-23T20:53:34Z", "author": {"login": "rickle-msft"}, "path": "sdk/storage/azure-storage-file-datalake/src/test/java/com/azure/storage/file/datalake/ServiceAPITest.groovy", "diffHunk": "@@ -197,4 +209,290 @@ class ServiceAPITest extends APISpec {\n         response.getHeaders().getValue(\"x-ms-version\") == \"2019-02-02\"\n     }\n \n+    def \"Restore file system\"() {\n+        given:\n+        def cc1 = primaryDataLakeServiceClient.getFileSystemClient(generateFileSystemName())\n+        cc1.create()\n+        def blobName = generatePathName()\n+        cc1.getFileClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryDataLakeServiceClient.listFileSystems(\n+            new ListFileSystemsOptions()\n+                .setPrefix(cc1.getFileSystemName())\n+                .setDetails(new FileSystemListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def restoredContainerClient = primaryDataLakeServiceClient\n+            .undeleteFileSystem(blobContainerItem.getName(), blobContainerItem.getVersion())\n+\n+        then:\n+        restoredContainerClient.listPaths().size() == 1\n+        restoredContainerClient.listPaths().first().getName() == blobName\n+    }\n+\n+    def \"Restore file system into other file system\"() {\n+        given:\n+        def cc1 = primaryDataLakeServiceClient.getFileSystemClient(generateFileSystemName())\n+        cc1.create()\n+        def blobName = generatePathName()\n+        cc1.getFileClient(blobName).upload(defaultInputStream.get(), 7)\n+        cc1.delete()\n+        def blobContainerItem = primaryDataLakeServiceClient.listFileSystems(\n+            new ListFileSystemsOptions()\n+                .setPrefix(cc1.getFileSystemName())\n+                .setDetails(new FileSystemListDetails().setRetrieveDeleted(true)),\n+            null).first()\n+\n+        if (!playbackMode()) {\n+            Thread.sleep(30000)\n+        }\n+\n+        when:\n+        def restoredContainerClient = primaryDataLakeServiceClient.undeleteFileSystemWithResponse(\n+            new FileSystemUndeleteOptions(blobContainerItem.getName(), blobContainerItem.getVersion())\n+                .setDestinationFileSystemName(generateFileSystemName()), null, Context.NONE)\n+            .getValue()\n+\n+        then:\n+        restoredContainerClient.listPaths().size() == 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MjI0NzU2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-558224756", "createdAt": "2020-12-23T20:55:22Z", "commit": {"oid": "1ad0666a63187ec598a72cf9f3b4440b65e3589c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffaddae7198cf4b450b7a06ea3d3674aa320be3a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ffaddae7198cf4b450b7a06ea3d3674aa320be3a", "committedDate": "2021-01-04T22:49:46Z", "message": "Merge branch 'feature/storage/stg76' into storage/containerRename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de6c2e6b851d71dcc6bb8949eb1b641e4ad16f9", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9de6c2e6b851d71dcc6bb8949eb1b641e4ad16f9", "committedDate": "2021-01-05T19:42:56Z", "message": "Added review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32c5f69fc4734c8f46cb0bce97f8b0eefb06c020", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/32c5f69fc4734c8f46cb0bce97f8b0eefb06c020", "committedDate": "2021-01-05T19:47:51Z", "message": "Added exception information"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDg1OTg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18157#pullrequestreview-562085985", "createdAt": "2021-01-05T19:53:24Z", "commit": {"oid": "32c5f69fc4734c8f46cb0bce97f8b0eefb06c020"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1262, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}