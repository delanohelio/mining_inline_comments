{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzQwMjk0", "number": 11310, "title": "Form recognizer API's to return List over IterableStream", "bodyText": "There are existing use cases where the user would want to use the index of the returned result to relate to the pages on the input document provided. So, update the FR API's to support List return types over IterableStream .", "createdAt": "2020-05-19T20:11:45Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310", "merged": true, "mergeCommit": {"oid": "2db931cab7cd4810584419aa3508caaea3498051"}, "closed": true, "closedAt": "2020-05-28T20:38:12Z", "author": {"login": "samvaity"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci7dG7ABqjMzNTM4MDc1NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcly9nXAH2gAyNDIwMzQwMjk0OmFkYzE2ODg2OTE4MDgyOTI0OTExNGMyZGJiZTAyZTQzYTc1YWI0OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16883dd4ccc96b0c527ced02d6d472a97eea936e", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/16883dd4ccc96b0c527ced02d6d472a97eea936e", "committedDate": "2020-05-19T20:06:19Z", "message": "update to list"}, "afterCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "committedDate": "2020-05-19T21:35:30Z", "message": "update to list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NTA0OTgz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-419504983", "createdAt": "2020-05-27T18:36:50Z", "commit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODozNjo1MVrOGbYI1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODo0NTozOVrOGbYbaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MDIxMw==", "bodyText": "Can you add this change in the changelog", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431360213", "createdAt": "2020-05-27T18:36:51Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/README.md", "diffHunk": "@@ -147,10 +147,10 @@ so they're tailored to your forms. You should only recognize forms of the same f\n ```java\n String analyzeFilePath = \"{file_source_url}\";\n String modelId = \"{custom_trained_model_id}\";\n-SyncPoller<OperationResult, IterableStream<RecognizedForm>> recognizeFormPoller =\n+SyncPoller<OperationResult, List<RecognizedForm>> recognizeFormPoller =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MDQ0MA==", "bodyText": "Why is service version getting removed in this PR", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431360440", "createdAt": "2020-05-27T18:37:17Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -85,15 +84,6 @@ public FormTrainingAsyncClient getFormTrainingAsyncClient() {\n         return new FormTrainingAsyncClient(this.service, this.serviceVersion);\n     }\n \n-    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MjE3NA==", "bodyText": "Unclear how Java usually does these docstrings, but I notice in the docstring for the SyncPoller / PollerFlux you don't mention what the poller returns. Python includes this information in the docstring (ex here).\nThis comment isn't super related to what this PR is trying to do, so feel free to open another PR when / if you want to make this change", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431362174", "createdAt": "2020-05-27T18:40:34Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -71,7 +71,7 @@ public FormTrainingClient getFormTrainingClient() {\n      * has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public SyncPoller<OperationResult, IterableStream<RecognizedForm>>\n+    public SyncPoller<OperationResult, List<RecognizedForm>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2NDI5MA==", "bodyText": "Would it also be best to change the forEach for formPage, formTable, formTableCell etc into a for loop as well?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431364290", "createdAt": "2020-05-27T18:44:23Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java", "diffHunk": "@@ -50,52 +50,55 @@ public static void main(String[] args) {\n             });\n \n         System.out.println(\"--------RECOGNIZING FORM --------\");\n-        recognizeFormResult.subscribe(recognizedForms -> recognizedForms.forEach(recognizedForm -> {\n-            System.out.printf(\"Form has type: %s%n\", recognizedForm.getFormType());\n-            // each field is of type FormField\n-            //     The value of the field can also be a FormField, or a list of FormFields\n-            //     In our sample, it is not.\n-            recognizedForm.getFields().forEach((fieldText, fieldValue) -> {\n-                System.out.printf(\"Field %s has value %s based on %s with a confidence score \"\n-                        + \"of %.2f.%n\",\n-                    fieldText, fieldValue.getFieldValue(), fieldValue.getValueText().getText(),\n-                    fieldValue.getConfidence());\n-            });\n+        recognizeFormResult.subscribe(recognizedForms -> {\n+            for (int i = 0; i < recognizedForms.size(); i++) {\n+                final RecognizedForm recognizedForm = recognizedForms.get(i);\n+                System.out.printf(\"Form %s has type: %s%n\", i, recognizedForm.getFormType());\n+                // each field is of type FormField\n+                //     The value of the field can also be a FormField, or a list of FormFields\n+                //     In our sample, it is not.\n+                recognizedForm.getFields().forEach((fieldText, fieldValue) -> {\n+                    System.out.printf(\"Field %s has value %s based on %s with a confidence score \"\n+                            + \"of %.2f.%n\",\n+                        fieldText, fieldValue.getFieldValue(), fieldValue.getValueText().getText(),\n+                        fieldValue.getConfidence());\n+                });\n \n-            // Page Information\n-            recognizedForm.getPages().forEach(formPage -> {\n-                System.out.printf(\"-------Recognizing Page %s of Form -------%n\", 1);\n-                System.out.printf(\"Has width %s , angle %s, height %s %n\", formPage.getWidth(),\n-                    formPage.getTextAngle(), formPage.getHeight());\n-                // Table information\n-                System.out.println(\"Recognized Tables: \");\n-                formPage.getTables().forEach(formTable -> {\n-                    formTable.getCells().forEach(formTableCell -> {\n-                        System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n-                        // text_content only exists if you set include_text_content to True in your\n-                        // function call to recognize_custom_forms\n-                        // It is also a list of FormWords and FormLines, but in this example, we only deal with\n-                        // FormWords\n-                        formTableCell.getElements().forEach(formContent -> {\n-                            if (formContent.getTextContentType().equals(TextContentType.WORD)) {\n-                                FormWord formWordElement = (FormWord) (formContent);\n-                                final StringBuilder boundingBoxStr = new StringBuilder();\n-                                if (formWordElement.getBoundingBox() != null) {\n-                                    formWordElement.getBoundingBox().getPoints().forEach(point -> {\n-                                        boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(),\n-                                            point.getY()));\n-                                    });\n+                // Page Information", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2NDk3MQ==", "bodyText": "since you're changing the name of layoutPageResults -> contentPageResults, I think it's a good idea to change recognizeLayoutPoller -> recognizeContentPoller", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431364971", "createdAt": "2020-05-27T18:45:39Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java", "diffHunk": "@@ -41,14 +41,15 @@ public static void main(final String[] args) throws IOException {\n         byte[] fileContent = Files.readAllBytes(sourceFile.toPath());\n         InputStream targetStream = new ByteArrayInputStream(fileContent);\n \n-        SyncPoller<OperationResult, IterableStream<FormPage>> recognizeLayoutPoller =\n+        SyncPoller<OperationResult, List<FormPage>> recognizeLayoutPoller =\n             client.beginRecognizeContent(targetStream, sourceFile.length(), FormContentType.IMAGE_JPEG);\n \n-        IterableStream<FormPage> layoutPageResults = recognizeLayoutPoller.getFinalResult();\n+        List<FormPage> contentPageResults = recognizeLayoutPoller.getFinalResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NTE4NTAw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-419518500", "createdAt": "2020-05-27T18:55:46Z", "commit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODo1NTo0NlrOGbYxcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODo1NTo0NlrOGbYxcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM3MDYwOA==", "bodyText": "{@link } could be a better option. Usually, use {@code } for the variable name.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431370608", "createdAt": "2020-05-27T18:55:46Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -115,14 +113,13 @@ private Transforms() {\n      * @param analyzeResult The service returned result for analyze receipts.\n      * @param includeTextDetails Boolean to indicate if to set reference elements data on fields.\n      *\n-     * @return The IterableStream of {@code RecognizedReceipt}.\n+     * @return The List of {@code RecognizedReceipt}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b146fccb7662e59336555e1dcb7a29c6539046", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/33b146fccb7662e59336555e1dcb7a29c6539046", "committedDate": "2020-05-28T08:23:08Z", "message": "update to list"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "committedDate": "2020-05-19T21:35:30Z", "message": "update to list"}, "afterCommit": {"oid": "33b146fccb7662e59336555e1dcb7a29c6539046", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/33b146fccb7662e59336555e1dcb7a29c6539046", "committedDate": "2020-05-28T08:23:08Z", "message": "update to list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "committedDate": "2020-05-28T09:09:36Z", "message": "update samples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "539a2f889facf737ab88fab3182028c981eccde5", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/539a2f889facf737ab88fab3182028c981eccde5", "committedDate": "2020-05-28T09:04:37Z", "message": "update samples"}, "afterCommit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "committedDate": "2020-05-28T09:09:36Z", "message": "update samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTc4MTYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-420178161", "createdAt": "2020-05-28T14:36:35Z", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNjozNVrOGb4QFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDozNjozNVrOGb4QFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NjM1OQ==", "bodyText": "Don't think you made this change in the sync sample", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431886359", "createdAt": "2020-05-28T14:36:35Z", "author": {"login": "iscai-msft"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java", "diffHunk": "@@ -65,17 +67,22 @@ public static void main(String[] args) {\n                 });\n \n                 // Page Information\n-                recognizedForm.getPages().forEach(formPage -> {\n-                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", 1);\n+                final List<FormPage> pages = recognizedForm.getPages();\n+                for (int i1 = 0; i1 < pages.size(); i1++) {\n+                    final FormPage formPage = pages.get(i1);\n+                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", i1);\n                     System.out.printf(\"Has width %s , angle %s, height %s %n\", formPage.getWidth(),\n                         formPage.getTextAngle(), formPage.getHeight());\n                     // Table information\n                     System.out.println(\"Recognized Tables: \");\n-                    formPage.getTables().forEach(formTable -> {\n+                    final List<FormTable> tables = formPage.getTables();\n+                    for (int i2 = 0; i2 < tables.size(); i2++) {\n+                        final FormTable formTable = tables.get(i2);\n+                        System.out.printf(\"Table %s%n\", i2);\n                         formTable.getCells().forEach(formTableCell -> {\n                             System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n-                            // text_content only exists if you set include_text_content to True in your\n-                            // function call to recognize_custom_forms\n+                            // textContent only exists if you set includeTextContent to True in your", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMjMwOTI4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-420230928", "createdAt": "2020-05-28T15:29:03Z", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMzMzNzA2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-420333706", "createdAt": "2020-05-28T17:24:35Z", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoyNDozNVrOGb_TQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoyNDozNVrOGb_TQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMTg1OQ==", "bodyText": "use @link since FormPage is the first occurance in this javadoc section", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432001859", "createdAt": "2020-05-28T17:24:35Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -230,13 +220,13 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled.\n+     * been cancelled. The completed operation returns a List of {@code FormPage}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMzM4MDUw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-420338050", "createdAt": "2020-05-28T17:30:21Z", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozMDoyMVrOGb_g9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozMDoyMVrOGb_g9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNTM2Nw==", "bodyText": "I think having @link for the first occurrence in method scope is better.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432005367", "createdAt": "2020-05-28T17:30:21Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -266,10 +265,10 @@\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} to poll the progress of the extract receipt operation until it has completed,\n-     * has failed, or has been cancelled.\n+     * has failed, or has been cancelled. The completed operation returns a List of {@code RecognizedReceipt}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMzM4OTIx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#pullrequestreview-420338921", "createdAt": "2020-05-28T17:31:27Z", "commit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozMToyOFrOGb_jgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzozMToyOFrOGb_jgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNjAxNg==", "bodyText": "nit: have {@code List}?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432006016", "createdAt": "2020-05-28T17:31:28Z", "author": {"login": "mssfang"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldText.java", "diffHunk": "@@ -15,7 +16,7 @@\n     /**\n      * The list of text element references for the field value.\n      */\n-    private final IterableStream<FormContent> textContent;\n+    private final List<FormContent> textContent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc168869180829249114c2dbbe02e43a75ab492", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/adc168869180829249114c2dbbe02e43a75ab492", "committedDate": "2020-05-28T19:23:50Z", "message": "update to @link"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4157, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}