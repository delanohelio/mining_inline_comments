{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTk5MDEx", "number": 12616, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOToxODo0N1rOEJy-Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTo0ODozOFrOEJ18_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzA3NzM1OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOToxODo0N1rOGqevfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTozMDo0MlrOGqi7_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE5NzA1NQ==", "bodyText": "Since this is on the TokenRefreshOptions should we remove the \"TokenRefresh\" from these property accessors? In this case getRetryTimeout", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447197055", "createdAt": "2020-06-29T19:18:47Z", "author": {"login": "schaabs"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2NTc5MQ==", "bodyText": "Simplified as suggested", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447265791", "createdAt": "2020-06-29T21:30:42Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE5NzA1NQ=="}, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzA4NDU3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOToyMDo1NFrOGqe0EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTozMDozOFrOGqi71g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE5ODIyNQ==", "bodyText": "same as above, could this be just setOffset?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447198225", "createdAt": "2020-06-29T19:20:54Z", "author": {"login": "schaabs"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {\n+        return tokenRefreshRetryTimeout;\n+    }\n+\n+    /**\n+     * Specifies a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @param tokenRefreshRetryTimeout the amount of time to wait before retrying a token refresh\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshRetryTimeout(Duration tokenRefreshRetryTimeout) {\n+        this.tokenRefreshRetryTimeout = tokenRefreshRetryTimeout;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to subtract from the token expiry time, whereupon\n+     * attempts will be made to refresh the token. By default this will occur two minutes prior to the expiry of the\n+     * token.\n+     *\n+     * @return the duration value representing the amount of time to subtract from the token expiry time\n+     */\n+    public Duration getTokenRefreshOffset() {\n+        return tokenRefreshOffset;\n+    }\n+\n+    /**\n+     * Specifies the Duration value representing the amount of time to subtract from the token expiry time, whereupon\n+     * attempts will be made to refresh the token. By default this will occur two minutes prior to the expiry of the\n+     * token.\n+     *\n+     * @param tokenRefreshOffset the duration representing the amount of time to subtract from the token expiry time\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshOffset(Duration tokenRefreshOffset) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI2NTc1MA==", "bodyText": "Simplified as suggested", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447265750", "createdAt": "2020-06-29T21:30:38Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {\n+        return tokenRefreshRetryTimeout;\n+    }\n+\n+    /**\n+     * Specifies a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @param tokenRefreshRetryTimeout the amount of time to wait before retrying a token refresh\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshRetryTimeout(Duration tokenRefreshRetryTimeout) {\n+        this.tokenRefreshRetryTimeout = tokenRefreshRetryTimeout;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to subtract from the token expiry time, whereupon\n+     * attempts will be made to refresh the token. By default this will occur two minutes prior to the expiry of the\n+     * token.\n+     *\n+     * @return the duration value representing the amount of time to subtract from the token expiry time\n+     */\n+    public Duration getTokenRefreshOffset() {\n+        return tokenRefreshOffset;\n+    }\n+\n+    /**\n+     * Specifies the Duration value representing the amount of time to subtract from the token expiry time, whereupon\n+     * attempts will be made to refresh the token. By default this will occur two minutes prior to the expiry of the\n+     * token.\n+     *\n+     * @param tokenRefreshOffset the duration representing the amount of time to subtract from the token expiry time\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshOffset(Duration tokenRefreshOffset) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE5ODIyNQ=="}, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzExMTgzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOToyODo1N1rOGqfE3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTo0NjoyOVrOGqjYDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwMjUyNg==", "bodyText": "I think it's could be problematic to have setters for these properties. If TokenRefreshOptions is mutable TokenCredential implementations will have to copy this object to avoid mutations in behavior.  Is it possible to only take these arguments on construction? or would we need to add a builder to make this class immutable?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447202526", "createdAt": "2020-06-29T19:28:57Z", "author": {"login": "schaabs"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {\n+        return tokenRefreshRetryTimeout;\n+    }\n+\n+    /**\n+     * Specifies a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @param tokenRefreshRetryTimeout the amount of time to wait before retrying a token refresh\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshRetryTimeout(Duration tokenRefreshRetryTimeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1MTkyNg==", "bodyText": "I can move them to a constructor but then it will be difficult to add more options in the future. Most of the \"XXXOptions\" in the Java SDK today are mutable like AmqpRetryOptions, HttpLogOptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447251926", "createdAt": "2020-06-29T21:02:12Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {\n+        return tokenRefreshRetryTimeout;\n+    }\n+\n+    /**\n+     * Specifies a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @param tokenRefreshRetryTimeout the amount of time to wait before retrying a token refresh\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshRetryTimeout(Duration tokenRefreshRetryTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwMjUyNg=="}, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3Mjk3NQ==", "bodyText": "From the Java SDK authoring guidelines (https://azure.github.io/azure-sdk/java_design.html#model-classes):\n\n\u2705 DO provide public constructors for all model classes that a user is allowed to instantiate. Model classes that are not instantiable by the user, for example if they are model types returned from the service, should not have any publicly visible constructors.\nUse a no-args constructor and a fluent setter API to configure the model class. However, other designs may be used for the constructor when appropriate.\n\n\n\u26d4\ufe0f DO NOT offer a builder class for model classes.\n\n\n\u2705 DO ensure that setter methods within a fluent type return the same instance of the type.\nFluent types must not be immutable. Don\u2019t return a new instance on each setter call.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447272975", "createdAt": "2020-06-29T21:46:29Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_REFRESH_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_REFRESH_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration tokenRefreshRetryTimeout = DEFAULT_REFRESH_RETRY_TIMEOUT;\n+    private Duration tokenRefreshOffset = DEFAULT_REFRESH_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getTokenRefreshRetryTimeout() {\n+        return tokenRefreshRetryTimeout;\n+    }\n+\n+    /**\n+     * Specifies a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @param tokenRefreshRetryTimeout the amount of time to wait before retrying a token refresh\n+     * @return the updated TokenRefreshOptions object\n+     */\n+    public TokenRefreshOptions setTokenRefreshRetryTimeout(Duration tokenRefreshRetryTimeout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwMjUyNg=="}, "originalCommit": {"oid": "4b6eec05de35a23e3ee91bfdecf569048045ea74"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzU2NjA0OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTo0ODozOFrOGqjbbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjowOTozM1rOGseVMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MzgzOQ==", "bodyText": "I worry that this property is very complex  to use. TokenCredentialOptions already have retry options, and this adds another level of complexity to that. If we make it configurable users might have to understand the interrelated nature of this and the retry options. Perhaps we could defer allowing this to be configurable? If not I don't think that RetryTimeout really describes what this property is used for.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r447273839", "createdAt": "2020-06-29T21:48:38Z", "author": {"login": "schaabs"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration retryTimeout = DEFAULT_RETRY_TIMEOUT;\n+    private Duration offset = DEFAULT_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getRetryTimeout() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb443845186be2d969ddb2a0592a909066f453b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NDY0Mw==", "bodyText": "On IdentityClientOptions this is called tokenRefreshRetryTimeout(). The name is only simplified as you suggested in TokenRefreshOptions. I agreed to make the change considering this is in the context of the TokenRefreshOptions class.\nFor .NET if you already have a TokenCredentialsOptions it could make more sense to move this inside TokenCredentialOptions. It could live there as a RefreshOptions property bag, or flattened as RefreshTimeout and RefreshOffset properties.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r448564643", "createdAt": "2020-07-01T19:12:18Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration retryTimeout = DEFAULT_RETRY_TIMEOUT;\n+    private Duration offset = DEFAULT_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getRetryTimeout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MzgzOQ=="}, "originalCommit": {"oid": "cbb443845186be2d969ddb2a0592a909066f453b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjA1OQ==", "bodyText": "On second thought, I'll make the case for this class to be immutable as an exception submitted to Java architects. That will make sure these are only modifiable from a subclass.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r448566059", "createdAt": "2020-07-01T19:15:22Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration retryTimeout = DEFAULT_RETRY_TIMEOUT;\n+    private Duration offset = DEFAULT_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getRetryTimeout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MzgzOQ=="}, "originalCommit": {"oid": "cbb443845186be2d969ddb2a0592a909066f453b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI4NzQ3Mg==", "bodyText": "@schaabs Considering that in the current Java implementation, the timeout only applies to error retries, but also refreshes after a previous successful refresh, this may be better called \"getTimeout()\" in TokenRefreshOptions.java, or TokenRefreshTimeout in other places like TokenCredentialOptions.cs. The scenario happens if a user specifies a \"tokenRefreshOffset\" that's equal to or longer than the token valid time, it prevents the cache from proactive refreshing on every single request.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12616#discussion_r449287472", "createdAt": "2020-07-02T22:09:33Z", "author": {"login": "jianghaolu"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/credential/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.credential;\n+\n+import java.time.Duration;\n+\n+/**\n+ * The options to configure the token refresh behavior.\n+ */\n+public class TokenRefreshOptions {\n+    private static final Duration DEFAULT_RETRY_TIMEOUT = Duration.ofSeconds(30);\n+    private static final Duration DEFAULT_OFFSET = Duration.ofMinutes(2);\n+\n+    private Duration retryTimeout = DEFAULT_RETRY_TIMEOUT;\n+    private Duration offset = DEFAULT_OFFSET;\n+\n+    /**\n+     * Returns a Duration value representing the amount of time to wait before retrying a token refresh. This is to\n+     * prevent sending too many requests to the authentication service.\n+     *\n+     * @return the duration value representing the amount of time to wait before retrying a token refresh\n+     */\n+    public Duration getRetryTimeout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI3MzgzOQ=="}, "originalCommit": {"oid": "cbb443845186be2d969ddb2a0592a909066f453b"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3699, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}