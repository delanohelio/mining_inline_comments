{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMzU4OTEw", "number": 12524, "title": "Update advanced samples for searching a specific field information", "bodyText": "", "createdAt": "2020-06-26T03:19:04Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524", "merged": true, "mergeCommit": {"oid": "fcd849535e63f9bc3788cd4b2a7c5c62598791d2"}, "closed": true, "closedAt": "2020-07-01T21:03:15Z", "author": {"login": "samvaity"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu6nQLAFqTQzNzk5MDI3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwwJdEgBqjM1MDQxMDQxNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTkwMjc4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-437990278", "createdAt": "2020-06-26T03:23:58Z", "commit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyMzo1OFrOGpSgMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyMzo1OFrOGpSgMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0Nzk1Mw==", "bodyText": "nit: weird formatting here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#discussion_r445947953", "createdAt": "2020-06-26T03:23:58Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java", "diffHunk": "@@ -79,21 +89,36 @@ public static void main(String[] args) throws IOException {\n                 }\n             });\n \n-        //  The main difference is found in the labels of its fields\n-        // The form recognized with a labeled model will have the labels it was trained with,\n-        // the unlabeled one will be denoted with indices\n         System.out.println(\"--------Recognizing forms with labeled custom model--------\");\n+        // With a form recognized by a model trained with labels, the `formField.getName()` key will be its label\n+        // given during\n+        // training\n+        // `value` will contain the typed field value and `valueText` will contain information about the field value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTkwMzU2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-437990356", "createdAt": "2020-06-26T03:24:21Z", "commit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyNDoyMlrOGpSgfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyNDoyMlrOGpSgfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0ODAzMQ==", "bodyText": "same here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#discussion_r445948031", "createdAt": "2020-06-26T03:24:22Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java", "diffHunk": "@@ -112,23 +137,36 @@ public static void main(String[] args) throws IOException {\n             unLabeledForm.getFields().forEach((label, formField) -> {\n                 final StringBuilder boundingBoxStr = new StringBuilder();\n                 if (formField.getValueText().getBoundingBox() != null) {\n-                    formField.getValueText().getBoundingBox().getPoints().forEach(point ->\n-                        boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n+                    formField.getValueText().getBoundingBox().getPoints().stream().map(point ->\n+                        String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())).forEach(boundingBoxStr::append);\n                 }\n \n                 final StringBuilder boundingBoxLabelStr = new StringBuilder();\n                 if (formField.getLabelText() != null && formField.getLabelText().getBoundingBox() != null) {\n-                    formField.getLabelText().getBoundingBox().getPoints().forEach(point ->\n-                        boundingBoxLabelStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n+                    formField.getLabelText().getBoundingBox().getPoints().stream().map(point ->\n+                        String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())).forEach(boundingBoxStr::append);\n                 }\n                 System.out.printf(\"Field %s has label %s  within bounding box %s with a confidence score \"\n                         + \"of %.2f.%n\",\n                     label, formField.getLabelText().getText(), boundingBoxLabelStr, formField.getConfidence());\n \n-                System.out.printf(\"Field %s has value %s based on %s within bounding box %s with a confidence score \"\n-                        + \"of %.2f.%n\",\n+                System.out.printf(\"Field %s has value %s based on %s within bounding box %s with a confidence \"\n+                        + \"score of %.2f.%n\",\n                     label, formField.getFieldValue(), formField.getValueText().getText(), boundingBoxStr,\n                     formField.getConfidence());\n+\n+                // Find the value of a specific unlabeled field. The specific key \"Vendor Name:\" provided in the\n+                // example\n+                // will only be found if sample training forms used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTkwODEz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-437990813", "createdAt": "2020-06-26T03:26:29Z", "commit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyNjoyOVrOGpSiDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzoyNjoyOVrOGpSiDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0ODQzMA==", "bodyText": "Just FYI in case you didn't see... Mariana is going to check with Ted to see if we can get the aka.ms link working - the redirection seems to be making the training fail.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#discussion_r445948430", "createdAt": "2020-06-26T03:26:29Z", "author": {"login": "kristapratico"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledData.java", "diffHunk": "@@ -17,6 +18,14 @@\n /**\n  * Sample to show the differences in output that arise when RecognizeCustomForms\n  * is called with custom models trained with labeled and unlabeled data.\n+ * For this sample, you can use the training forms found in https://aka.ms/azsdk/formrecognizer/docs/trainingdocs for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1870b7fa96975fa889a9719e7b0c652aeb8e2690"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4364c78509af8849ca38fed9c030d9608ad5e13b", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4364c78509af8849ca38fed9c030d9608ad5e13b", "committedDate": "2020-06-26T06:48:22Z", "message": "formatting update"}, "afterCommit": {"oid": "31406c1efe0bf2e3848802b6ac3c6c2bb1cb81b4", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/31406c1efe0bf2e3848802b6ac3c6c2bb1cb81b4", "committedDate": "2020-06-26T22:59:55Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzUxNjI3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-439351627", "createdAt": "2020-06-29T17:23:33Z", "commit": {"oid": "4217ac1cad071c81fcef897dc1484ed150a8022a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyMzozM1rOGqayFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyMzozM1rOGqayFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzMjE4Mw==", "bodyText": "remove?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#discussion_r447132183", "createdAt": "2020-06-29T17:23:33Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java", "diffHunk": "@@ -112,23 +137,37 @@ public static void main(String[] args) throws IOException {\n             unLabeledForm.getFields().forEach((label, formField) -> {\n                 final StringBuilder boundingBoxStr = new StringBuilder();\n                 if (formField.getValueText().getBoundingBox() != null) {\n-                    formField.getValueText().getBoundingBox().getPoints().forEach(point ->\n-                        boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n+                    formField.getValueText().getBoundingBox().getPoints().stream().map(point ->\n+                        String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())).forEach(boundingBoxStr::append);\n                 }\n \n                 final StringBuilder boundingBoxLabelStr = new StringBuilder();\n                 if (formField.getLabelText() != null && formField.getLabelText().getBoundingBox() != null) {\n-                    formField.getLabelText().getBoundingBox().getPoints().forEach(point ->\n-                        boundingBoxLabelStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n+                    formField.getLabelText().getBoundingBox().getPoints().stream().map(point ->\n+                        String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())).forEach(boundingBoxStr::append);\n                 }\n                 System.out.printf(\"Field %s has label %s  within bounding box %s with a confidence score \"\n                         + \"of %.2f.%n\",\n                     label, formField.getLabelText().getText(), boundingBoxLabelStr, formField.getConfidence());\n \n-                System.out.printf(\"Field %s has value %s based on %s within bounding box %s with a confidence score \"\n-                        + \"of %.2f.%n\",\n+                System.out.printf(\"Field %s has value %s based on %s within bounding box %s with a confidence \"\n+                        + \"score of %.2f.%n\",\n                     label, formField.getFieldValue(), formField.getValueText().getText(), boundingBoxStr,\n                     formField.getConfidence());\n+\n+                // Find the value of a specific unlabeled field. The specific key \"Vendor Name:\" provided in the\n+                // example will only be found if sample training forms used\n+                unLabeledForm.getFields().entrySet()\n+                    .stream()\n+                    //filter by label text\n+                    .filter(formFieldEntry -> \"Vendor Name:\".equals(formFieldEntry.getValue().getLabelText().getText()))\n+                    .findAny()\n+                    .ifPresent(formFieldEntry ->\n+                        System.out.printf(\"The Vendor name is: %s%n\", formFieldEntry.getValue()));\n+                    // @since 9\n+                    // .ifPresentOrElse(\n+                    //     formFieldEntry -> System.out.printf(\"The Vendor name is: %s%n\", formFieldEntry.getValue()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4217ac1cad071c81fcef897dc1484ed150a8022a"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzUyNjAx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-439352601", "createdAt": "2020-06-29T17:24:51Z", "commit": {"oid": "4217ac1cad071c81fcef897dc1484ed150a8022a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyNDo1MVrOGqa1IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyNDo1MVrOGqa1IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzMjk2MQ==", "bodyText": "same here ... not sure", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#discussion_r447132961", "createdAt": "2020-06-29T17:24:51Z", "author": {"login": "maririos"}, "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledData.java", "diffHunk": "@@ -36,51 +44,68 @@ public static void main(String[] args) throws IOException {\n             .buildClient();\n \n         File analyzeFile = new File(\"../formrecognizer/azure-ai-formrecognizer/src/samples/java/sample-forms/\"\n-            + \"forms/Invoice_6.pdf\");\n+            + \"forms/Form_1.jpg\");\n \n         List<RecognizedForm> formsWithLabeledModel =\n             client.beginRecognizeCustomForms(\n                 new RecognizeCustomFormsOptions(new FileInputStream(analyzeFile), analyzeFile.length(),\n-                \"{labeled_model_Id}\").setFormContentType(FormContentType.APPLICATION_PDF)\n+                    \"{labeled_model_Id}\").setFormContentType(FormContentType.APPLICATION_PDF)\n                     .setIncludeTextContent(true).setPollInterval(Duration.ofSeconds(5))).getFinalResult();\n         List<RecognizedForm> formsWithUnlabeledModel =\n-            client.beginRecognizeCustomForms(new FileInputStream(analyzeFile), analyzeFile.length(), \"{unlabeled_model_Id}\",\n-                    FormContentType.APPLICATION_PDF).getFinalResult();\n+            client.beginRecognizeCustomForms(new FileInputStream(analyzeFile), analyzeFile.length(),\n+                \"{unlabeled_model_Id}\",\n+                FormContentType.APPLICATION_PDF).getFinalResult();\n \n-        //  The main difference is found in the labels of its fields\n-        // The form recognized with a labeled model will have the labels it was trained with,\n-        // the unlabeled one will be denoted with indices\n         System.out.println(\"--------Recognizing forms with labeled custom model--------\");\n \n-        // With a form recognized by a model trained with labels, this 'name' key will be its\n-        // training-time label, otherwise it will be denoted by numeric indices.\n-        // Label data is not returned for model trained with labels.\n+        // With a form recognized by a model trained with labels, the `formField.getName()` key will be its label given\n+        // during training\n+        // `value` will contain the typed field value and `valueText` will contain information about the field value\n+        // `labelText` is not populated for a model trained with labels as this was the given label used to extract\n+        // the key\n         formsWithLabeledModel.forEach(labeledForm -> labeledForm.getFields().forEach((label, formField) -> {\n             final StringBuilder boundingBoxStr = new StringBuilder();\n             if (formField.getValueText().getBoundingBox() != null) {\n-                formField.getValueText().getBoundingBox().getPoints().forEach(point ->\n-                    boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n+                formField.getValueText().getBoundingBox().getPoints().stream().map(point ->\n+                    String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())).forEach(boundingBoxStr::append);\n             }\n             System.out.printf(\"Field %s has value %s based on %s within bounding box %s with a confidence score \"\n                     + \"of %.2f.%n\",\n                 label, formField.getFieldValue(), formField.getValueText().getText(), boundingBoxStr,\n                 formField.getConfidence());\n+\n+            // Find the value of a specific labeled field.\n+            System.out.println(\"Value for a specific labeled field using the training-time label:\");\n+            labeledForm.getFields().entrySet()\n+                .stream()\n+                .filter(formFieldEntry -> \"MerchantName\".equals(formFieldEntry.getKey())) // filter by form field key\n+                .findAny()\n+                .ifPresent(formFieldEntry ->\n+                    System.out.printf(\"The Merchant name is: %s%n\", formFieldEntry.getValue()));\n+                // @since 9\n+                // .ifPresentOrElse(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4217ac1cad071c81fcef897dc1484ed150a8022a"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzU0MDUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-439354051", "createdAt": "2020-06-29T17:26:48Z", "commit": {"oid": "4217ac1cad071c81fcef897dc1484ed150a8022a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTY5MDEw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12524#pullrequestreview-441169010", "createdAt": "2020-07-01T20:17:50Z", "commit": {"oid": "6c67952ff0471b68474a789204c20dfd80a63b25"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b3c8a8bdbc08d5b1b2d1bf3140df068c94c75cf", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b3c8a8bdbc08d5b1b2d1bf3140df068c94c75cf", "committedDate": "2020-07-01T20:18:19Z", "message": "update advanced samples for finding field information"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47b6f0a6ba99df9979ba806fd22376cc4e9e8ec2", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/47b6f0a6ba99df9979ba806fd22376cc4e9e8ec2", "committedDate": "2020-07-01T20:18:29Z", "message": "formatting update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e9b41b1a6660a5530fa986fbae25abfe700f8ea", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e9b41b1a6660a5530fa986fbae25abfe700f8ea", "committedDate": "2020-07-01T20:18:30Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aabbcb846aaa8b083a50c350162edf98dec749d2", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/aabbcb846aaa8b083a50c350162edf98dec749d2", "committedDate": "2020-07-01T20:18:31Z", "message": "comment java 9 statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b10e1df912c111e816b113d1a57f99f56cf31b4", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b10e1df912c111e816b113d1a57f99f56cf31b4", "committedDate": "2020-07-01T20:19:49Z", "message": "add tarining files to repo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c67952ff0471b68474a789204c20dfd80a63b25", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6c67952ff0471b68474a789204c20dfd80a63b25", "committedDate": "2020-07-01T20:15:11Z", "message": "add tarining files to repo"}, "afterCommit": {"oid": "5b10e1df912c111e816b113d1a57f99f56cf31b4", "author": {"user": {"login": "samvaity", "name": "Sameeksha Vaity"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b10e1df912c111e816b113d1a57f99f56cf31b4", "committedDate": "2020-07-01T20:19:49Z", "message": "add tarining files to repo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2946, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}