{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5OTI5NjEy", "number": 15390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNzozOVrOElyqPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNzozOVrOElyqPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDYyNzgzOnYy", "diffSide": "RIGHT", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODozNzozOVrOHVdp5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxOTowMToxN1rOHVecIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2ODAwNA==", "bodyText": "What is difference in this and test at line 382 above, it looks duplicate test or you wanted to test a different scenario ?\nline 382  StepVerifier.create(receiver.peekMessagesAt(maxMessages, fromSequenceNumber)) .verifyComplete();", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15390#discussion_r492268004", "createdAt": "2020-09-21T18:37:39Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -532,6 +549,23 @@ void peekBatchMessagesFromSequence(MessagingEntityType entityType) {\n             .verifyComplete();\n     }\n \n+    /**\n+     * Verifies that an empty entity does not error when peeking.\n+     */\n+    @MethodSource(\"com.azure.messaging.servicebus.IntegrationTestBase#messagingEntityWithSessions\")\n+    @ParameterizedTest\n+    void peekMessagesFromSequenceEmptyEntity(MessagingEntityType entityType, boolean isSessionEnabled) {\n+        // Arrange\n+        setSenderAndReceiver(entityType, TestUtils.USE_CASE_EMPTY_ENTITY, isSessionEnabled);\n+\n+        final int maxMessages = 10;\n+        final int fromSequenceNumber = 1;\n+\n+        // Assert & Act\n+        StepVerifier.create(receiver.peekMessagesAt(maxMessages, fromSequenceNumber))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09b69c8f2f321f08087ec324a1361089c251cab9"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI4MDg2NQ==", "bodyText": "The first one should be not plural (message). I'll fix it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15390#discussion_r492280865", "createdAt": "2020-09-21T19:01:17Z", "author": {"login": "conniey"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -532,6 +549,23 @@ void peekBatchMessagesFromSequence(MessagingEntityType entityType) {\n             .verifyComplete();\n     }\n \n+    /**\n+     * Verifies that an empty entity does not error when peeking.\n+     */\n+    @MethodSource(\"com.azure.messaging.servicebus.IntegrationTestBase#messagingEntityWithSessions\")\n+    @ParameterizedTest\n+    void peekMessagesFromSequenceEmptyEntity(MessagingEntityType entityType, boolean isSessionEnabled) {\n+        // Arrange\n+        setSenderAndReceiver(entityType, TestUtils.USE_CASE_EMPTY_ENTITY, isSessionEnabled);\n+\n+        final int maxMessages = 10;\n+        final int fromSequenceNumber = 1;\n+\n+        // Assert & Act\n+        StepVerifier.create(receiver.peekMessagesAt(maxMessages, fromSequenceNumber))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2ODAwNA=="}, "originalCommit": {"oid": "09b69c8f2f321f08087ec324a1361089c251cab9"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 972, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}