{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2ODEwMDU3", "number": 18396, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyMzo1MlrOFJ8ETg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMzowM1rOFJ-YUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTY1NjQ2OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyMzo1MlrOIMeLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxMjo1NlrOIMfudw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODM0OQ==", "bodyText": "Can we keep the same style? All use AAD_PREFIX, or not use it at all.\nOfcourse, we can do it after release.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948349", "createdAt": "2020-12-30T06:23:52Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "diffHunk": "@@ -20,14 +20,17 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n \n+import static com.azure.spring.autoconfigure.aad.AADAuthenticationProperties.AAD_PREFIX;\n+\n /**\n  * Configuration properties for Azure Active Directory Authentication.\n  */\n @Validated\n-@ConfigurationProperties(\"azure.activedirectory\")\n+@ConfigurationProperties(AAD_PREFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODYxOA==", "bodyText": "Which one do you prefer?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948618", "createdAt": "2020-12-30T06:25:29Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "diffHunk": "@@ -20,14 +20,17 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n \n+import static com.azure.spring.autoconfigure.aad.AADAuthenticationProperties.AAD_PREFIX;\n+\n /**\n  * Configuration properties for Azure Active Directory Authentication.\n  */\n @Validated\n-@ConfigurationProperties(\"azure.activedirectory\")\n+@ConfigurationProperties(AAD_PREFIX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODM0OQ=="}, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk2ODk3NA==", "bodyText": "I prefer not use it at all. If we want to get some property, we can search by CTRL + SHIFT + F to get them all.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549968974", "createdAt": "2020-12-30T07:06:11Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "diffHunk": "@@ -20,14 +20,17 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n \n+import static com.azure.spring.autoconfigure.aad.AADAuthenticationProperties.AAD_PREFIX;\n+\n /**\n  * Configuration properties for Azure Active Directory Authentication.\n  */\n @Validated\n-@ConfigurationProperties(\"azure.activedirectory\")\n+@ConfigurationProperties(AAD_PREFIX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODM0OQ=="}, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MzYyMw==", "bodyText": "okay", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549973623", "createdAt": "2020-12-30T07:12:56Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADAuthenticationProperties.java", "diffHunk": "@@ -20,14 +20,17 @@\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n \n+import static com.azure.spring.autoconfigure.aad.AADAuthenticationProperties.AAD_PREFIX;\n+\n /**\n  * Configuration properties for Azure Active Directory Authentication.\n  */\n @Validated\n-@ConfigurationProperties(\"azure.activedirectory\")\n+@ConfigurationProperties(AAD_PREFIX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODM0OQ=="}, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTY1Njg0OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyNDoxOFrOIMeL-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNjoyNjowNVrOIMeNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODQwOA==", "bodyText": "Do we need test like testWithRequiredPropertiesSet?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948408", "createdAt": "2020-12-30T06:24:18Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,17 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODcyMA==", "bodyText": "Good point. I will add that.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549948720", "createdAt": "2020-12-30T06:26:05Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,17 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0ODQwOA=="}, "originalCommit": {"oid": "6a3e97a73177bf0e6923c654072cb13579c7a6a4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTgyNjkxOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADResourceServerOboConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxNjoxM1rOIMf4BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxNjoxM1rOIMf4BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NjA2OQ==", "bodyText": "Good point. \ud83d\udc4d", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549976069", "createdAt": "2020-12-30T07:16:13Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADResourceServerOboConfiguration.java", "diffHunk": "@@ -33,6 +35,8 @@\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class })\n @ConditionalOnClass({ BearerTokenAuthenticationToken.class, OAuth2LoginAuthenticationFilter.class })\n+@ConditionalOnProperty(prefix = \"azure.activedirectory\", value = \"client-id\")\n+@ConditionalOnExpression(\"!'${azure.activedirectory.authorization-clients}'.isEmpty()\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1OTgzNTQxOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoxODowMlrOIMf9VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwNzoyMjozNVrOIMgJqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NzQyOQ==", "bodyText": "We'd better add more tests:\n\nclient-id configured, but no authorization-clients.\nclient-id not configured, but authorization-clients configured.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549977429", "createdAt": "2020-12-30T07:18:02Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,30 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3ODU5MQ==", "bodyText": "Yes, I'm just about to add them.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549978591", "createdAt": "2020-12-30T07:19:46Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,30 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NzQyOQ=="}, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4MDU4Nw==", "bodyText": "Current tests can not make sure @ConditionalOnExpression(\"!'${azure.activedirectory.authorization-clients}'.isEmpty()\") take effect.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r549980587", "createdAt": "2020-12-30T07:22:35Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,6 +26,30 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3NzQyOQ=="}, "originalCommit": {"oid": "80ca6fcfbb51036c3b326efc17b4fe418b278514"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDAzNDYzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMjo1NFrOIMh-xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMjo1NFrOIMh-xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMDU2NQ==", "bodyText": "doesNotHaveBean should use bean name.  AADOAuth2OboAuthorizedClientRepository is not a bean name.\nMy suggestion is to use\ndoesNotHaveBean(Class<?> type) {\n\ninstead.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r550010565", "createdAt": "2020-12-30T08:02:54Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,24 +26,43 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n+    @Test\n+    public void testWithRequiredPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .withPropertyValues(\"azure.activedirectory.client-id=fake-client-id\")\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADAuthenticationProperties.class);\n+                assertThat(context).hasSingleBean(ClientRegistrationRepository.class);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n     @Test\n     public void testNotExistBearerTokenAuthenticationToken() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MDAzNTM5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMzowM1rOIMh_Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODowMzowM1rOIMh_Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMDY5OA==", "bodyText": "Same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18396#discussion_r550010698", "createdAt": "2020-12-30T08:03:03Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapi/AADResourceServerOboConfigurationTest.java", "diffHunk": "@@ -24,24 +26,43 @@\n             \"azure.activedirectory.client-id=fake-client-id\",\n             \"azure.activedirectory.client-secret=fake-client-secret\");\n \n+    @Test\n+    public void testWithoutAnyPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADAuthenticationProperties.class);\n+                assertThat(context).doesNotHaveBean(ClientRegistrationRepository.class);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n+    @Test\n+    public void testWithRequiredPropertiesSet() {\n+        new WebApplicationContextRunner()\n+            .withUserConfiguration(AADResourceServerOboConfiguration.class)\n+            .withPropertyValues(\"azure.activedirectory.client-id=fake-client-id\")\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADAuthenticationProperties.class);\n+                assertThat(context).hasSingleBean(ClientRegistrationRepository.class);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class);\n+            });\n+    }\n+\n     @Test\n     public void testNotExistBearerTokenAuthenticationToken() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));\n     }\n \n     @Test\n     public void testNotExistOAuth2LoginAuthenticationFilter() {\n         this.contextRunner\n             .withUserConfiguration(AADResourceServerOboConfiguration.class)\n             .withClassLoader(new FilteredClassLoader(OAuth2LoginAuthenticationFilter.class))\n-            .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\");\n-            });\n+            .run(context -> assertThat(context).doesNotHaveBean(\"AADOAuth2OboAuthorizedClientRepository\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a1550e08cc274d8efc04fccd440e2d853ec545"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1768, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}