{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjE3NTg2", "number": 15548, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoxODo1MVrOEml-4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxMzoxOToyOVrOEn1oOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTAzNjUxOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoxODo1MVrOHWtmKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMTozMTo0MVrOHXGokg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3Nzc3MA==", "bodyText": "Is this the default value for authority host?\nnew IdentityClientOptions().getAuthorityHost()", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15548#discussion_r493577770", "createdAt": "2020-09-23T13:18:51Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "diffHunk": "@@ -133,6 +136,8 @@ public TokenCredential getCredentials(String normalizedName) {\n         final String tenantId = getPropertyValue(normalizedName, Property.TENANT_ID);\n         final String certificatePath = getPropertyValue(normalizedName, Property.CERTIFICATE_PATH);\n         final String certificatePassword = getPropertyValue(normalizedName, Property.CERTIFICATE_PASSWORD);\n+        final String authorityHost = getPropertyValue(normalizedName, Property.AUTHORITY_HOST) == null ?\n+            new IdentityClientOptions().getAuthorityHost() : getPropertyValue(normalizedName, Property.AUTHORITY_HOST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b938c77758cc8e3ff01debc1b2f6180ce08ce092"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4Nzk4Ng==", "bodyText": "yes,the constructor of IdentityClientOptions will initialize authorityHost  with default value", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15548#discussion_r493987986", "createdAt": "2020-09-24T01:31:41Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "diffHunk": "@@ -133,6 +136,8 @@ public TokenCredential getCredentials(String normalizedName) {\n         final String tenantId = getPropertyValue(normalizedName, Property.TENANT_ID);\n         final String certificatePath = getPropertyValue(normalizedName, Property.CERTIFICATE_PATH);\n         final String certificatePassword = getPropertyValue(normalizedName, Property.CERTIFICATE_PASSWORD);\n+        final String authorityHost = getPropertyValue(normalizedName, Property.AUTHORITY_HOST) == null ?\n+            new IdentityClientOptions().getAuthorityHost() : getPropertyValue(normalizedName, Property.AUTHORITY_HOST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3Nzc3MA=="}, "originalCommit": {"oid": "b938c77758cc8e3ff01debc1b2f6180ce08ce092"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTA0MDk0OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoxOTozM1rOHWtpIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMTozODozM1rOHXGvHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3ODUyOQ==", "bodyText": "Why do we need this value here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15548#discussion_r493578529", "createdAt": "2020-09-23T13:19:33Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "diffHunk": "@@ -79,6 +81,7 @@ public void addKeyVaultPropertySource(String normalizedName) {\n         final SecretClient secretClient = new SecretClientBuilder()\n                 .vaultUrl(vaultUri)\n                 .credential(tokenCredential)\n+                .serviceVersion(SecretServiceVersion.V7_0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b938c77758cc8e3ff01debc1b2f6180ce08ce092"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk4OTY2Mw==", "bodyText": "by default, serviceVersion value is V7_1, but the starter run failed with errors below\n{\"error\":{\"code\":\"BadParameter\",\"message\":\"The specified version (7.1) is not recognized. Consider using the latest supported version (2016-10-01).\"}}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15548#discussion_r493989663", "createdAt": "2020-09-24T01:38:33Z", "author": {"login": "backwind1233"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "diffHunk": "@@ -79,6 +81,7 @@ public void addKeyVaultPropertySource(String normalizedName) {\n         final SecretClient secretClient = new SecretClientBuilder()\n                 .vaultUrl(vaultUri)\n                 .credential(tokenCredential)\n+                .serviceVersion(SecretServiceVersion.V7_0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3ODUyOQ=="}, "originalCommit": {"oid": "b938c77758cc8e3ff01debc1b2f6180ce08ce092"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjA4NTY5OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxMzoxOToyOVrOHYnVFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxMzoxOToyOVrOHYnVFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3MjI0NA==", "bodyText": "we need to specify the package", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15548#discussion_r495572244", "createdAt": "2020-09-27T13:19:29Z", "author": {"login": "zhoufenqin"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/keyvault/spring/KeyVaultEnvironmentPostProcessorHelper.java", "diffHunk": "@@ -18,13 +18,12 @@\n import com.azure.identity.implementation.IdentityClientOptions;\n import com.azure.security.keyvault.secrets.SecretClient;\n import com.azure.security.keyvault.secrets.SecretClientBuilder;\n+import com.azure.security.keyvault.secrets.SecretServiceVersion;\n import com.microsoft.azure.keyvault.spring.KeyVaultProperties.Property;\n import com.microsoft.azure.telemetry.TelemetrySender;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n+\n+import java.util.*;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9331188a65726450f746d2e0879732fb24956085"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 927, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}