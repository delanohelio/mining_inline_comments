{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTg5NzA1", "number": 11486, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1MTozNlrOEBCKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1OTowMVrOECxnEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE5NTQxOnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/CryptographyAsyncClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1MTozNlrOGcrsTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1MTozNlrOGcrsTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyOTE2Ng==", "bodyText": "Adding the check here, means LocalCryptographyClient will be required to provide an id too.\nThis seems like a requirement only for LocalKeyEncryptionKeyClient / LocalKeyEncryptionKeyAsyncClient", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11486#discussion_r432729166", "createdAt": "2020-05-29T20:51:36Z", "author": {"login": "g2vinay"}, "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/CryptographyAsyncClient.java", "diffHunk": "@@ -79,6 +79,9 @@\n         if (!jsonWebKey.isValid()) {\n             throw new IllegalArgumentException(\"Json Web Key is not valid\");\n         }\n+        if (jsonWebKey.getId() == null) {\n+            throw new IllegalArgumentException(\"Json Web Key's id property is not configured\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df0207d8ce6b4876edce5b4bd9b230e21354d2db"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzQ1NDI0OnYy", "diffSide": "RIGHT", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/LocalKeyEncryptionKeyClientBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1OTowMVrOGfcLXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzo1OTowMVrOGfcLXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDcwMQ==", "bodyText": "Update the docs above to reflect the exception.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11486#discussion_r435620701", "createdAt": "2020-06-04T23:59:01Z", "author": {"login": "g2vinay"}, "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/LocalKeyEncryptionKeyClientBuilder.java", "diffHunk": "@@ -58,6 +58,9 @@ public KeyEncryptionKey buildKeyEncryptionKey(JsonWebKey key) {\n         if (key == null) {\n             throw logger.logExceptionAsError(new IllegalStateException(\n                 \"Json Web key value cannot be null and is required to create local key encryption key async client.\"));\n+        } else if (key.getId() == null) {\n+            throw logger.logExceptionAsError(new IllegalArgumentException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61c497246f58047d8ed0cc99a73846d1978ebe1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4085, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}