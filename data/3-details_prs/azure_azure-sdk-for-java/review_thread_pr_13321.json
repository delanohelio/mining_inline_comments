{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTgyMjQy", "number": 13321, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NDoyN1rOEP79Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowMTo1N1rOEQRN7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTQ2NDU1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NDoyN1rOGz2Svw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowMjoxNVrOG0U-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ==", "bodyText": "I think we need this change for ReactiveCosmosTemplate as well.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020095", "createdAt": "2020-07-20T03:44:27Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NjAyMw==", "bodyText": "Should be, but there's o similar method in ReactiveCosmosTemplate,  I unified the procesing of ID type conversion.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457146023", "createdAt": "2020-07-20T07:52:32Z", "author": {"login": "moarychan"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjgzNQ==", "bodyText": "Good, makes sense.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522835", "createdAt": "2020-07-20T16:02:15Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTQ2Nzg0OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NTo0MVrOGz2UlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowNDoxOFrOG0VDjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ==", "bodyText": "Please make sure this also works for ReactiveCosmosRepository", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020565", "createdAt": "2020-07-20T03:45:41Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NjU4Ng==", "bodyText": "added  ReactiveLongIdDomainPartitionPartitionRepositoryIT, please review", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457146586", "createdAt": "2020-07-20T07:53:24Z", "author": {"login": "moarychan"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyNDEwOA==", "bodyText": "Looks good, thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457524108", "createdAt": "2020-07-20T16:04:18Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTQ2ODkwOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0NjowNlrOGz2VNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowMjoyOFrOG0U_Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg==", "bodyText": "Can we add a unit test for this in CosmosEntityInformationUnitTest.java class ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020726", "createdAt": "2020-07-20T03:46:06Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NzAwOQ==", "bodyText": "Added in CosmosEntityInformationUnitTest, please check", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457147009", "createdAt": "2020-07-20T07:54:00Z", "author": {"login": "moarychan"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjk1OA==", "bodyText": "Thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522958", "createdAt": "2020-07-20T16:02:28Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg=="}, "originalCommit": {"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDk0NzY1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjowMTo1N1rOG0U9yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjo0MzozOFrOG0Wkhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjYzNA==", "bodyText": "This should return  type, why is it returning Object ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522634", "createdAt": "2020-07-20T16:01:57Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java", "diffHunk": "@@ -45,4 +47,26 @@\n         //  Process response diagnostics\n         responseDiagnosticsProcessor.processResponseDiagnostics(responseDiagnostics);\n     }\n+\n+    /**\n+     * ID value should be string value, real id type will be String, Integer, Long,\n+     * all of these must be converted to String type.\n+     * @param idValue id value to find\n+     * @throws IllegalArgumentException thrown if id value fail the validation.\n+     * @throws IllegalQueryException thrown if id value fail the validation.\n+     * @return String id value\n+     */\n+    public static Object getStringIDValue(Object idValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0ODkzNA==", "bodyText": "@moarychan - I have pushed a commit to fix this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457548934", "createdAt": "2020-07-20T16:43:38Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java", "diffHunk": "@@ -45,4 +47,26 @@\n         //  Process response diagnostics\n         responseDiagnosticsProcessor.processResponseDiagnostics(responseDiagnostics);\n     }\n+\n+    /**\n+     * ID value should be string value, real id type will be String, Integer, Long,\n+     * all of these must be converted to String type.\n+     * @param idValue id value to find\n+     * @throws IllegalArgumentException thrown if id value fail the validation.\n+     * @throws IllegalQueryException thrown if id value fail the validation.\n+     * @return String id value\n+     */\n+    public static Object getStringIDValue(Object idValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjYzNA=="}, "originalCommit": {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4883, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}