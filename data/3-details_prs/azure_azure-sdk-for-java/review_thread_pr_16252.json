{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODM4NzIw", "number": 16252, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjoyMToyN1rOEtkEAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjoyMToyN1rOEtkEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjEyMjI3OnYy", "diffSide": "LEFT", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjoyMToyN1rOHhbHcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjo0Njo1MFrOHhcGYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwOTMzMQ==", "bodyText": "This wasn't GA'd right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16252#discussion_r504809331", "createdAt": "2020-10-14T16:21:27Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -575,93 +575,67 @@ public ShareAsyncClient getSnapshotClient(String snapshot) {\n      * @return A response containing the {@link ShareInfo information about the share} with headers and response status\n      * code\n      * @throws ShareStorageException If the share doesn't exist or {@code quotaInGB} is outside the allowed bounds\n+     * @deprecated Use {@link ShareAsyncClient#setPropertiesWithResponse(ShareSetPropertiesOptions)}\n      */\n+    @Deprecated\n     public Mono<Response<ShareInfo>> setQuotaWithResponse(int quotaInGB) {\n         try {\n-            return setQuotaWithResponse(new ShareSetQuotaOptions(quotaInGB));\n+            return setPropertiesWithResponse(new ShareSetPropertiesOptions().setQuotaInGb(quotaInGB));\n         } catch (RuntimeException ex) {\n             return monoError(logger, ex);\n         }\n     }\n \n     /**\n-     * Sets the maximum size in GB that the share is allowed to grow.\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * <p>Set the quota to 1024 GB</p>\n-     *\n-     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.setQuotaWithResponse#ShareSetQuotaOptions}\n-     *\n-     * <p>For more information, see the\n-     * <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-properties\">Azure Docs</a>.</p>\n-     *\n-     * @param options {@link ShareSetQuotaOptions}\n-     * @return A response containing the {@link ShareInfo information about the share} with headers and response status\n-     * code\n-     */\n-    public Mono<Response<ShareInfo>> setQuotaWithResponse(ShareSetQuotaOptions options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542c1d2558bbfbf562636c9b2637e556db8bfac1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyNTQ0MQ==", "bodyText": "No, this was not GA'd", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16252#discussion_r504825441", "createdAt": "2020-10-14T16:46:50Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -575,93 +575,67 @@ public ShareAsyncClient getSnapshotClient(String snapshot) {\n      * @return A response containing the {@link ShareInfo information about the share} with headers and response status\n      * code\n      * @throws ShareStorageException If the share doesn't exist or {@code quotaInGB} is outside the allowed bounds\n+     * @deprecated Use {@link ShareAsyncClient#setPropertiesWithResponse(ShareSetPropertiesOptions)}\n      */\n+    @Deprecated\n     public Mono<Response<ShareInfo>> setQuotaWithResponse(int quotaInGB) {\n         try {\n-            return setQuotaWithResponse(new ShareSetQuotaOptions(quotaInGB));\n+            return setPropertiesWithResponse(new ShareSetPropertiesOptions().setQuotaInGb(quotaInGB));\n         } catch (RuntimeException ex) {\n             return monoError(logger, ex);\n         }\n     }\n \n     /**\n-     * Sets the maximum size in GB that the share is allowed to grow.\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * <p>Set the quota to 1024 GB</p>\n-     *\n-     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.setQuotaWithResponse#ShareSetQuotaOptions}\n-     *\n-     * <p>For more information, see the\n-     * <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-properties\">Azure Docs</a>.</p>\n-     *\n-     * @param options {@link ShareSetQuotaOptions}\n-     * @return A response containing the {@link ShareInfo information about the share} with headers and response status\n-     * code\n-     */\n-    public Mono<Response<ShareInfo>> setQuotaWithResponse(ShareSetQuotaOptions options) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwOTMzMQ=="}, "originalCommit": {"oid": "542c1d2558bbfbf562636c9b2637e556db8bfac1"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4104, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}