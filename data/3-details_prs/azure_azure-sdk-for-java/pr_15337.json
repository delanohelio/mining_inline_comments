{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4ODg5MzU1", "number": 15337, "title": "Stop onErrorDropped events from leaking into default Reactor Hook", "bodyText": "There is a race condition between cancellation (via Reactor timeout) and completing the request in the Rntbd stack (via error/request timeout or successfully) which right now results in onErrorDropped events being raised to the default Reactor Hook. This results in ERROR level logging - functionally it is harmless (we do proper clean-up and functionally it is expected that the cancellation takes precedence and we ignore any subsequent success/transport exception). To avoid confusing customers I have injected a local hook now that will just log these errors with a DEBUG level - hopefully that will reduce the noise level for customers and stop causing confusion.", "createdAt": "2020-09-17T19:39:25Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337", "merged": true, "mergeCommit": {"oid": "c95b752aaf72c27071e3299289e44a6a49d86569"}, "closed": true, "closedAt": "2020-09-18T16:55:04Z", "author": {"login": "FabianMeiswinkel"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ2TiXAH2gAyNDg4ODg5MzU1OjIzNjM5MjEwNzhmNmE1MGM0NjFjY2FjZDNhODEwYTk1ZTdjODg2Yzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKIXX_gFqTQ5MTYyMjgxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2363921078f6a50c461ccacd3a810a95e7c886c9", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2363921078f6a50c461ccacd3a810a95e7c886c9", "committedDate": "2020-09-17T19:38:46Z", "message": "Stop onErrorDropped events from leaking into default Reactor Hook\n\nThere is a race condition between cancellation (via Reactor timeout) and completing the request in the Rntbd stack (via error/request timeout or successfully) which right now results in onErrorDropped events being raised to the default Reactor Hook. This results in ERROR level logging - functionally it is harmless (we do proper clean-up and functionally it is expected that the cancellation takes precedence and we ignore any subsequent success/transport exception). To avoid confusing customers I have injected a local hook now that will just log these errors with a DEBUG level - hopefully that will reduce the noise level for customers and stop causing confusion."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwOTM1MDA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#pullrequestreview-490935007", "createdAt": "2020-09-17T19:48:25Z", "commit": {"oid": "2363921078f6a50c461ccacd3a810a95e7c886c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTo0ODoyNVrOHTzAeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTo0ODoyNVrOHTzAeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyMDY5OA==", "bodyText": "should this be <= ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#discussion_r490520698", "createdAt": "2020-09-17T19:48:25Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelPool.java", "diffHunk": "@@ -1470,33 +1470,27 @@ public final void run() {\n             long currentNanoTime = System.nanoTime();\n \n             while (true) {\n-                try {\n-                    AcquireListener removedTask = this.pool.pendingAcquisitions.poll();\n-                    if (removedTask == null) {\n-                        // queue is empty\n-                        break;\n-                    }\n+                AcquireListener removedTask = this.pool.pendingAcquisitions.poll();\n+                if (removedTask == null) {\n+                    // queue is empty\n+                    break;\n+                }\n \n-                    long expiryTime = removedTask.getAcquisitionTimeoutInNanos();\n+                long expiryTime = removedTask.getAcquisitionTimeoutInNanos();\n \n-                    // Compare nanoTime as described in the System.nanoTime documentation\n-                    // See:\n-                    // * https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime()\n-                    // * https://github.com/netty/netty/issues/3705\n-                    if (expiryTime - currentNanoTime < 0) {\n-                        this.onTimeout(removedTask);\n-                    } else {\n-                        if (!this.pool.pendingAcquisitions.offer(removedTask)) {\n-                            logger.error(\"Unexpected failure when returning the removed task\"\n-                                    + \" to pending acquisition queue. current size [{}]\",\n-                                this.pool.pendingAcquisitions.size());\n-                        }\n-                        break;\n+                // Compare nanoTime as described in the System.nanoTime documentation\n+                // See:\n+                // * https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime()\n+                // * https://github.com/netty/netty/issues/3705\n+                if (expiryTime - currentNanoTime < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2363921078f6a50c461ccacd3a810a95e7c886c9"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwOTM5MzI2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#pullrequestreview-490939326", "createdAt": "2020-09-17T19:52:16Z", "commit": {"oid": "2363921078f6a50c461ccacd3a810a95e7c886c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTo1MjoxN1rOHTzJzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTo1MjoxN1rOHTzJzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyMzA4Ng==", "bodyText": "I think my biggest question is: if we can not offer this task back, what would happen for this task? we did not fail it or retry, so any possibility it will stuck somewhere?\nPriorityBlockingQueue will never return false for the offer method, then I guess it should be fine here?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#discussion_r490523086", "createdAt": "2020-09-17T19:52:17Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdClientChannelPool.java", "diffHunk": "@@ -1470,33 +1470,27 @@ public final void run() {\n             long currentNanoTime = System.nanoTime();\n \n             while (true) {\n-                try {\n-                    AcquireListener removedTask = this.pool.pendingAcquisitions.poll();\n-                    if (removedTask == null) {\n-                        // queue is empty\n-                        break;\n-                    }\n+                AcquireListener removedTask = this.pool.pendingAcquisitions.poll();\n+                if (removedTask == null) {\n+                    // queue is empty\n+                    break;\n+                }\n \n-                    long expiryTime = removedTask.getAcquisitionTimeoutInNanos();\n+                long expiryTime = removedTask.getAcquisitionTimeoutInNanos();\n \n-                    // Compare nanoTime as described in the System.nanoTime documentation\n-                    // See:\n-                    // * https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime()\n-                    // * https://github.com/netty/netty/issues/3705\n-                    if (expiryTime - currentNanoTime < 0) {\n-                        this.onTimeout(removedTask);\n-                    } else {\n-                        if (!this.pool.pendingAcquisitions.offer(removedTask)) {\n-                            logger.error(\"Unexpected failure when returning the removed task\"\n-                                    + \" to pending acquisition queue. current size [{}]\",\n-                                this.pool.pendingAcquisitions.size());\n-                        }\n-                        break;\n+                // Compare nanoTime as described in the System.nanoTime documentation\n+                // See:\n+                // * https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime()\n+                // * https://github.com/netty/netty/issues/3705\n+                if (expiryTime - currentNanoTime < 0) {\n+                    this.onTimeout(removedTask);\n+                } else {\n+                    if (!this.pool.pendingAcquisitions.offer(removedTask)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2363921078f6a50c461ccacd3a810a95e7c886c9"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2fefb3828dc28c21f0a891006ded23aaf29bf32", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a2fefb3828dc28c21f0a891006ded23aaf29bf32", "committedDate": "2020-09-17T20:08:37Z", "message": "Reacting to code review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1bbe24701d5e39c744512fa735fce7f6f8f2653", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1bbe24701d5e39c744512fa735fce7f6f8f2653", "committedDate": "2020-09-17T20:24:52Z", "message": "Avoiding that we expire 1 ns too late :-)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDUwNDg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#pullrequestreview-491050484", "createdAt": "2020-09-17T23:17:01Z", "commit": {"oid": "b1bbe24701d5e39c744512fa735fce7f6f8f2653"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoxNzowMlrOHT4pEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoxNzowMlrOHT4pEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxMzAwOA==", "bodyText": "NIT : This should be final", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#discussion_r490613008", "createdAt": "2020-09-17T23:17:02Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -128,6 +151,8 @@ public long id() {\n         final RntbdEndpoint endpoint = this.endpointProvider.get(address);\n         final RntbdRequestRecord record = endpoint.request(requestArgs);\n \n+        Context reactorContext = Context.of(KEY_ON_ERROR_DROPPED, onErrorDropHookWithReduceLogLevel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1bbe24701d5e39c744512fa735fce7f6f8f2653"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10b686ac895ddd6e4e961048aa56a676e29e1642", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/10b686ac895ddd6e4e961048aa56a676e29e1642", "committedDate": "2020-09-18T12:29:09Z", "message": "Making reactorContext final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "013482b6e2a561f05e68d652778eb689031f52fd", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/013482b6e2a561f05e68d652778eb689031f52fd", "committedDate": "2020-09-18T13:05:58Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/onErrorDroppedFix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNjIyODE1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#pullrequestreview-491622815", "createdAt": "2020-09-18T16:41:14Z", "commit": {"oid": "013482b6e2a561f05e68d652778eb689031f52fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo0MToxNVrOHUUbTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo0MToxNVrOHUUbTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2ODIzNg==", "bodyText": "@FabianMeiswinkel Is this a feature of Reactor, if so is it documented somewhere? It's interesting.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15337#discussion_r491068236", "createdAt": "2020-09-18T16:41:15Z", "author": {"login": "allenhumphreys"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -58,6 +61,26 @@\n     private static final AtomicLong instanceCount = new AtomicLong();\n     private static final Logger logger = LoggerFactory.getLogger(RntbdTransportClient.class);\n \n+    /**\n+     * A key that can be used to store a sequence-specific {@link Hooks#onErrorDropped(Consumer)}\n+     * hook in a {@link Context}, as a {@link Consumer Consumer&lt;Throwable&gt;}.\n+     */\n+    private static final String KEY_ON_ERROR_DROPPED = \"reactor.onErrorDropped.local\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "013482b6e2a561f05e68d652778eb689031f52fd"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3380, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}