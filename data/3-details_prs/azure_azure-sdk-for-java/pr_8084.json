{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMzAyODYx", "number": 8084, "title": "Creating new request object on all retry", "bodyText": "This PR will revert changes regarding creation of request once for all retry to handle some border line scenarios of PR #7156.\nThose border line scenarios will be handle in separate PR of refactoring retry context.", "createdAt": "2020-02-10T19:10:25Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8084", "merged": true, "mergeCommit": {"oid": "33f4f7c450537171b9e18601df316f8b38dbe308"}, "closed": true, "closedAt": "2020-02-11T17:33:00Z", "author": {"login": "simplynaveen20"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDB657AH2gAyMzczMzAyODYxOmMyYjU2OTBlZGI4NWUxOGVmMzFkMmQxN2MyYjkwMDgwZDc5Yzc5NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDDsEHAFqTM1NjI0MDg0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c2b5690edb85e18ef31d2d17c2b90080d79c7944", "author": {"user": {"login": "simplynaveen20", "name": "Naveen Singh"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c2b5690edb85e18ef31d2d17c2b90080d79c7944", "committedDate": "2020-02-10T19:02:06Z", "message": "initial commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjQwODQ1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8084#pullrequestreview-356240845", "createdAt": "2020-02-10T20:30:47Z", "commit": {"oid": "c2b5690edb85e18ef31d2d17c2b90080d79c7944"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDozMDo0N1rOFn0h0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMTowMTo0N1rOFn1bSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTQxMQ==", "bodyText": "this will result in double serialization/deserialization. don't use Document here.\nplease use 'String content = toJsonString(typedDocument, mapper);' instead", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8084#discussion_r377299411", "createdAt": "2020-02-10T20:30:47Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1151,27 +1157,28 @@ void captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResp\n             requestRetryPolicy = new PartitionKeyMismatchRetryPolicy(collectionCache, requestRetryPolicy, collectionLink, options);\n         }\n         DocumentClientRetryPolicy finalRequestRetryPolicy = requestRetryPolicy;\n-        if (document == null) {\n-            throw new IllegalArgumentException(\"document\");\n-        }\n-        if (StringUtils.isEmpty(documentLink)) {\n-            throw new IllegalArgumentException(\"documentLink\");\n-        }\n+        return ObservableHelper.inlineIfPossibleAsObs(() -> replaceDocumentInternal(documentLink, document, options, finalRequestRetryPolicy), requestRetryPolicy);\n+    }\n \n-        if (document == null) {\n-            throw new IllegalArgumentException(\"document\");\n-        }\n+    private Mono<ResourceResponse<Document>> replaceDocumentInternal(String documentLink, Object document,\n+                                                                     RequestOptions options, DocumentClientRetryPolicy retryPolicyInstance) {\n+        try {\n+            if (StringUtils.isEmpty(documentLink)) {\n+                throw new IllegalArgumentException(\"documentLink\");\n+            }\n \n-        Document typedDocument = documentFromObject(document, mapper);\n-        logger.debug(\"Replacing a Document. documentLink: [{}]\", documentLink);\n-        final String path = Utils.joinPath(documentLink, null);\n-        final Map<String, String> requestHeaders = getRequestHeaders(options);\n+            if (document == null) {\n+                throw new IllegalArgumentException(\"document\");\n+            }\n \n-        String content = toJsonString(typedDocument, mapper);\n+            Document typedDocument = documentFromObject(document, mapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5690edb85e18ef31d2d17c2b90080d79c7944"}, "originalPosition": 446}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNDEyMQ==", "bodyText": "We are not using Document here anymore as this will result in double serialization/desrializaiton.\nreplace with\nString content = toJsonString(typedDocument, mapper);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8084#discussion_r377314121", "createdAt": "2020-02-10T21:01:47Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentClientImpl.java", "diffHunk": "@@ -1151,27 +1157,28 @@ void captureSessionToken(RxDocumentServiceRequest request, RxDocumentServiceResp\n             requestRetryPolicy = new PartitionKeyMismatchRetryPolicy(collectionCache, requestRetryPolicy, collectionLink, options);\n         }\n         DocumentClientRetryPolicy finalRequestRetryPolicy = requestRetryPolicy;\n-        if (document == null) {\n-            throw new IllegalArgumentException(\"document\");\n-        }\n-        if (StringUtils.isEmpty(documentLink)) {\n-            throw new IllegalArgumentException(\"documentLink\");\n-        }\n+        return ObservableHelper.inlineIfPossibleAsObs(() -> replaceDocumentInternal(documentLink, document, options, finalRequestRetryPolicy), requestRetryPolicy);\n+    }\n \n-        if (document == null) {\n-            throw new IllegalArgumentException(\"document\");\n-        }\n+    private Mono<ResourceResponse<Document>> replaceDocumentInternal(String documentLink, Object document,\n+                                                                     RequestOptions options, DocumentClientRetryPolicy retryPolicyInstance) {\n+        try {\n+            if (StringUtils.isEmpty(documentLink)) {\n+                throw new IllegalArgumentException(\"documentLink\");\n+            }\n \n-        Document typedDocument = documentFromObject(document, mapper);\n-        logger.debug(\"Replacing a Document. documentLink: [{}]\", documentLink);\n-        final String path = Utils.joinPath(documentLink, null);\n-        final Map<String, String> requestHeaders = getRequestHeaders(options);\n+            if (document == null) {\n+                throw new IllegalArgumentException(\"document\");\n+            }\n \n-        String content = toJsonString(typedDocument, mapper);\n+            Document typedDocument = documentFromObject(document, mapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b5690edb85e18ef31d2d17c2b90080d79c7944"}, "originalPosition": 446}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2404, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}