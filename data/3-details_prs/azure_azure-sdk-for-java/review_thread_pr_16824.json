{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzE0MDM2", "number": 16824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToyNTowMFrOEyF_Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToyNTowMFrOEyF_Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTYyMzExOnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToyNTowMFrOHoi91A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMToyNzo0MVrOHojDCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3Nzk3Mg==", "bodyText": "I don't think we need to rename any methods to be like \"createDigitalTwinsEventRoute\" or the relevant options objects. The only feedback we got on this was about the return type \"EventRoute\" being too generic. The issue was that it would collide with other libraries. We don't need to make our method names follow this pattern since they won't collide since they are attached to a client", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16824#discussion_r512277972", "createdAt": "2020-10-26T21:25:00Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -1377,42 +1377,42 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      *\n      * {@codesnippet com.azure.digitaltwins.core.asyncClient.listEventRoutes#Options}\n      *\n-     * @param options The optional parameters to use when listing event routes. See {@link ListEventRoutesOptions} for more details\n+     * @param options The optional parameters to use when listing event routes. See {@link ListDigitalTwinsEventRoutesOptions} for more details\n      * on what optional parameters can be set.\n      * @return A {@link PagedFlux} that contains all the event routes that exist in your digital twins instance.\n      * This PagedFlux may take multiple service requests to iterate over all event routes.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options)\n+    public PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options)\n     {\n         return new PagedFlux<>(\n             () -> withContext(context -> listEventRoutesFirstPage(options, context)),\n             nextLink -> withContext(context -> listEventRoutesNextPage(nextLink, options, context)));\n     }\n \n-    PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options, Context context)\n+    PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options, Context context)\n     {\n         return new PagedFlux<>(\n             () -> listEventRoutesFirstPage(options, context),\n             nextLink -> listEventRoutesNextPage(nextLink, options, context));\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesFirstPage(ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesFirstPage(ListDigitalTwinsEventRoutesOptions options, Context context) {\n         return protocolLayer\n             .getEventRoutes()\n             .listSinglePageAsync(OptionsConverter.toProtocolLayerOptions(options), context)\n             .map(pagedEventRouteMappingFunction);\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesNextPage(String nextLink, ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesNextPage(String nextLink, ListDigitalTwinsEventRoutesOptions options, Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc985aebd5bb4fd1433170b963dea10f8811c9ca"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3ODQ2Mw==", "bodyText": "Actually, if it is just the options objects that are getting renamed, then that is probably okay. I thought you renamed the client methods as well which would be unnecessary", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16824#discussion_r512278463", "createdAt": "2020-10-26T21:25:59Z", "author": {"login": "timtay-microsoft"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -1377,42 +1377,42 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      *\n      * {@codesnippet com.azure.digitaltwins.core.asyncClient.listEventRoutes#Options}\n      *\n-     * @param options The optional parameters to use when listing event routes. See {@link ListEventRoutesOptions} for more details\n+     * @param options The optional parameters to use when listing event routes. See {@link ListDigitalTwinsEventRoutesOptions} for more details\n      * on what optional parameters can be set.\n      * @return A {@link PagedFlux} that contains all the event routes that exist in your digital twins instance.\n      * This PagedFlux may take multiple service requests to iterate over all event routes.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options)\n+    public PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options)\n     {\n         return new PagedFlux<>(\n             () -> withContext(context -> listEventRoutesFirstPage(options, context)),\n             nextLink -> withContext(context -> listEventRoutesNextPage(nextLink, options, context)));\n     }\n \n-    PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options, Context context)\n+    PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options, Context context)\n     {\n         return new PagedFlux<>(\n             () -> listEventRoutesFirstPage(options, context),\n             nextLink -> listEventRoutesNextPage(nextLink, options, context));\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesFirstPage(ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesFirstPage(ListDigitalTwinsEventRoutesOptions options, Context context) {\n         return protocolLayer\n             .getEventRoutes()\n             .listSinglePageAsync(OptionsConverter.toProtocolLayerOptions(options), context)\n             .map(pagedEventRouteMappingFunction);\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesNextPage(String nextLink, ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesNextPage(String nextLink, ListDigitalTwinsEventRoutesOptions options, Context context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3Nzk3Mg=="}, "originalCommit": {"oid": "bc985aebd5bb4fd1433170b963dea10f8811c9ca"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3OTMwNw==", "bodyText": "I agree, I have only changed the types and not the method names.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16824#discussion_r512279307", "createdAt": "2020-10-26T21:27:41Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -1377,42 +1377,42 @@ public DigitalTwinsServiceVersion getServiceVersion() {\n      *\n      * {@codesnippet com.azure.digitaltwins.core.asyncClient.listEventRoutes#Options}\n      *\n-     * @param options The optional parameters to use when listing event routes. See {@link ListEventRoutesOptions} for more details\n+     * @param options The optional parameters to use when listing event routes. See {@link ListDigitalTwinsEventRoutesOptions} for more details\n      * on what optional parameters can be set.\n      * @return A {@link PagedFlux} that contains all the event routes that exist in your digital twins instance.\n      * This PagedFlux may take multiple service requests to iterate over all event routes.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options)\n+    public PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options)\n     {\n         return new PagedFlux<>(\n             () -> withContext(context -> listEventRoutesFirstPage(options, context)),\n             nextLink -> withContext(context -> listEventRoutesNextPage(nextLink, options, context)));\n     }\n \n-    PagedFlux<EventRoute> listEventRoutes(ListEventRoutesOptions options, Context context)\n+    PagedFlux<DigitalTwinsEventRoute> listEventRoutes(ListDigitalTwinsEventRoutesOptions options, Context context)\n     {\n         return new PagedFlux<>(\n             () -> listEventRoutesFirstPage(options, context),\n             nextLink -> listEventRoutesNextPage(nextLink, options, context));\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesFirstPage(ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesFirstPage(ListDigitalTwinsEventRoutesOptions options, Context context) {\n         return protocolLayer\n             .getEventRoutes()\n             .listSinglePageAsync(OptionsConverter.toProtocolLayerOptions(options), context)\n             .map(pagedEventRouteMappingFunction);\n     }\n \n-    Mono<PagedResponse<EventRoute>> listEventRoutesNextPage(String nextLink, ListEventRoutesOptions options, Context context) {\n+    Mono<PagedResponse<DigitalTwinsEventRoute>> listEventRoutesNextPage(String nextLink, ListDigitalTwinsEventRoutesOptions options, Context context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3Nzk3Mg=="}, "originalCommit": {"oid": "bc985aebd5bb4fd1433170b963dea10f8811c9ca"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3859, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}