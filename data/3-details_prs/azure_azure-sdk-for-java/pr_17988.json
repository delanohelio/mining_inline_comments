{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODYzNzY0", "number": 17988, "title": "Updated docs for metadata to indicate no trailing or leading whitespace is allowed", "bodyText": "Resolves #17939", "createdAt": "2020-12-05T00:52:11Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988", "merged": true, "mergeCommit": {"oid": "33e13119f34952e16fc6d227ff724dab20bf60cd"}, "closed": true, "closedAt": "2020-12-08T00:07:03Z", "author": {"login": "gapra-msft"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjAUN4AH2gAyNTMyODYzNzY0OmI3MjZmNmZmNGFmMWZhMjAwMzZlODc0ZGNlYjdlODZlZmZmYmQ4NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj-QY6AH2gAyNTMyODYzNzY0Ojk2YzIzOGY3MDMxZDBhMjZiYTZkYWJkYzg0MmRhMmE5YjUxMTM0OTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b726f6ff4af1fa20036e874dceb7e86efffbd857", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b726f6ff4af1fa20036e874dceb7e86efffbd857", "committedDate": "2020-12-04T23:26:40Z", "message": "Changed documentation around metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0893ddc3ca8f06193a43cd497be29291a751b47", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0893ddc3ca8f06193a43cd497be29291a751b47", "committedDate": "2020-12-05T00:50:27Z", "message": "Added doc change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MzUzMTYz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#pullrequestreview-546353163", "createdAt": "2020-12-07T17:06:18Z", "commit": {"oid": "c0893ddc3ca8f06193a43cd497be29291a751b47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24e12d01cc364436dcaae687d4f03747855f875c", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/24e12d01cc364436dcaae687d4f03747855f875c", "committedDate": "2020-12-07T20:37:10Z", "message": "Added policy to check metadata whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6d93ed9112262d797e628bbe2a338244146be86", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c6d93ed9112262d797e628bbe2a338244146be86", "committedDate": "2020-12-07T21:26:55Z", "message": "Updated the metadata whitespace policy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a3f6815db9f2cfff5531cfdd345712432750352", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5a3f6815db9f2cfff5531cfdd345712432750352", "committedDate": "2020-12-07T21:37:46Z", "message": "Removed print, addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTU4NDEy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#pullrequestreview-546558412", "createdAt": "2020-12-07T21:39:17Z", "commit": {"oid": "c6d93ed9112262d797e628bbe2a338244146be86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0db5b8e61e40922bf87b49af3d97d408d1388e34", "committedDate": "2020-12-07T21:39:20Z", "message": "Removed crypto metadata header const"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTY4MjU5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#pullrequestreview-546568259", "createdAt": "2020-12-07T21:53:51Z", "commit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMTo1Mzo1MVrOIA8ahg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjowMTozMlrOIA8trQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDc0Mg==", "bodyText": "Thoughts on MetadataValidationPolicy? A little more generic and if we need to add more logic in the future the name will still be representative of what it does.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#discussion_r537860742", "createdAt": "2020-12-07T21:53:51Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/policy/MetadataWhitespacePolicy.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.common.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.common.implementation.Constants;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.Locale;\n+\n+/**\n+ * This is a request policy in an {@link com.azure.core.http.HttpPipeline} to validate that metadata does not contain\n+ * leading or trailing whitespace characters.\n+ * We do this since the service trims whitespace for the string to sign, but the client does not, resulting in an auth\n+ * failure.\n+ */\n+public class MetadataWhitespacePolicy implements HttpPipelinePolicy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2Mzk5NQ==", "bodyText": "Do we need to substring here? We aren't using the metadata key in the error message and we could just check:\nboolean foundWhitespace = Character.isWhitespace(name.charAt(Constants.HeaderContants.X_MS_META.length())) || Character.isWhitespace(name.charAt(name.length() -1));", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#discussion_r537863995", "createdAt": "2020-12-07T21:58:44Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/policy/MetadataWhitespacePolicy.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.common.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.common.implementation.Constants;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.Locale;\n+\n+/**\n+ * This is a request policy in an {@link com.azure.core.http.HttpPipeline} to validate that metadata does not contain\n+ * leading or trailing whitespace characters.\n+ * We do this since the service trims whitespace for the string to sign, but the client does not, resulting in an auth\n+ * failure.\n+ */\n+public class MetadataWhitespacePolicy implements HttpPipelinePolicy {\n+\n+    private final ClientLogger logger = new ClientLogger(MetadataWhitespacePolicy.class);\n+\n+    @Override\n+    public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+        context.getHttpRequest().getHeaders().stream()\n+            .filter(header -> header.getName().toLowerCase(Locale.ROOT).startsWith(Constants.HeaderConstants.X_MS_META))\n+            .forEach(header -> {\n+                String name = header.getName().substring(Constants.HeaderConstants.X_MS_META.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTY0NQ==", "bodyText": "Do we want to use header.getValues() or header.getValue()? \n  \n    \n      azure-sdk-for-java/sdk/core/azure-core/src/main/java/com/azure/core/util/Header.java\n    \n    \n         Line 55\n      in\n      07c54ba\n    \n    \n    \n    \n\n        \n          \n           return value == null ? null : value.split(\",\"); \n        \n    \n  \n\n\nHow does the service handle coma separated header values?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#discussion_r537865645", "createdAt": "2020-12-07T22:01:32Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/policy/MetadataWhitespacePolicy.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.common.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.common.implementation.Constants;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.Locale;\n+\n+/**\n+ * This is a request policy in an {@link com.azure.core.http.HttpPipeline} to validate that metadata does not contain\n+ * leading or trailing whitespace characters.\n+ * We do this since the service trims whitespace for the string to sign, but the client does not, resulting in an auth\n+ * failure.\n+ */\n+public class MetadataWhitespacePolicy implements HttpPipelinePolicy {\n+\n+    private final ClientLogger logger = new ClientLogger(MetadataWhitespacePolicy.class);\n+\n+    @Override\n+    public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+        context.getHttpRequest().getHeaders().stream()\n+            .filter(header -> header.getName().toLowerCase(Locale.ROOT).startsWith(Constants.HeaderConstants.X_MS_META))\n+            .forEach(header -> {\n+                String name = header.getName().substring(Constants.HeaderConstants.X_MS_META.length());\n+                boolean foundWhitespace = Character.isWhitespace(name.charAt(0))\n+                    || Character.isWhitespace(name.charAt(name.length() - 1));\n+                for (String value: header.getValues()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTc2MjAz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#pullrequestreview-546576203", "createdAt": "2020-12-07T22:04:49Z", "commit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjowNDo0OVrOIA81Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjowNDo0OVrOIA81Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NzU5OA==", "bodyText": "We should return Mono.error here instead of throwing the error as it'll force asynchronous clients to have an additional location where it has to try/catch", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#discussion_r537867598", "createdAt": "2020-12-07T22:04:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/policy/MetadataWhitespacePolicy.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.common.policy;\n+\n+import com.azure.core.http.HttpPipelineCallContext;\n+import com.azure.core.http.HttpPipelineNextPolicy;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.storage.common.implementation.Constants;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.Locale;\n+\n+/**\n+ * This is a request policy in an {@link com.azure.core.http.HttpPipeline} to validate that metadata does not contain\n+ * leading or trailing whitespace characters.\n+ * We do this since the service trims whitespace for the string to sign, but the client does not, resulting in an auth\n+ * failure.\n+ */\n+public class MetadataWhitespacePolicy implements HttpPipelinePolicy {\n+\n+    private final ClientLogger logger = new ClientLogger(MetadataWhitespacePolicy.class);\n+\n+    @Override\n+    public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n+        context.getHttpRequest().getHeaders().stream()\n+            .filter(header -> header.getName().toLowerCase(Locale.ROOT).startsWith(Constants.HeaderConstants.X_MS_META))\n+            .forEach(header -> {\n+                String name = header.getName().substring(Constants.HeaderConstants.X_MS_META.length());\n+                boolean foundWhitespace = Character.isWhitespace(name.charAt(0))\n+                    || Character.isWhitespace(name.charAt(name.length() - 1));\n+                for (String value: header.getValues()) {\n+                    foundWhitespace |= Character.isWhitespace(value.charAt(0))\n+                        || Character.isWhitespace(value.charAt(value.length() - 1));\n+                }\n+                if (foundWhitespace) {\n+                    throw logger.logExceptionAsError(new IllegalArgumentException(\"Metadata keys and values can \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db5b8e61e40922bf87b49af3d97d408d1388e34"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09be7af50f76013a199b2ad6fc7436275fcae9a1", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/09be7af50f76013a199b2ad6fc7436275fcae9a1", "committedDate": "2020-12-07T22:25:39Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2261d75b91e2c88ac94ccd97d336f076d6b3d83a", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2261d75b91e2c88ac94ccd97d336f076d6b3d83a", "committedDate": "2020-12-07T22:33:50Z", "message": "User header.getValue instead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTk2MDEz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17988#pullrequestreview-546596013", "createdAt": "2020-12-07T22:35:29Z", "commit": {"oid": "2261d75b91e2c88ac94ccd97d336f076d6b3d83a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dd1d6457be9dec2a7d99f84fdac43a8e2e13afd", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0dd1d6457be9dec2a7d99f84fdac43a8e2e13afd", "committedDate": "2020-12-07T22:47:22Z", "message": "Added a test for comma separated metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8168a9be7147e86ef00c9780efb8847f9eff137", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a8168a9be7147e86ef00c9780efb8847f9eff137", "committedDate": "2020-12-07T23:14:23Z", "message": "Updated test so it works in playback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31d3505e2e8e76034983b047d2f4deb88d10e6f", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c31d3505e2e8e76034983b047d2f4deb88d10e6f", "committedDate": "2020-12-07T23:19:36Z", "message": "Added to Changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96c238f7031d0a26ba6dabdc842da2a9b5113493", "author": {"user": null}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/96c238f7031d0a26ba6dabdc842da2a9b5113493", "committedDate": "2020-12-07T23:36:36Z", "message": "Ci failures"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1370, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}