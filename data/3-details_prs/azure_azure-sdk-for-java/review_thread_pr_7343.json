{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTU5MjM0", "number": 7343, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyMjowM1rODXO8YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1MzowOFrODXPcaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njg4NjcyOnYy", "diffSide": "RIGHT", "path": "eng/New-TestResources.ps1", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyMjowM1rOFccOPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo0MTo0OFrOFcctjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2Njg0NQ==", "bodyText": "What is our longer term plan to keep these scripts updated across repos? Do we have an issue tracking that?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7343#discussion_r365366845", "createdAt": "2020-01-10T18:22:03Z", "author": {"login": "weshaggard"}, "path": "eng/New-TestResources.ps1", "diffHunk": "@@ -55,6 +55,9 @@ param (\n     [ValidateNotNullOrEmpty()]\n     [hashtable] $AdditionalParameters,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "827ed0064a0df21e7f79dcbb292b01d35f5bb3b4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3NDg2MA==", "bodyText": "This is something that @heaths brought up and we've talked about but haven't reached a conclusion. I've opened Azure/azure-sdk#934 to track this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7343#discussion_r365374860", "createdAt": "2020-01-10T18:41:48Z", "author": {"login": "danieljurek"}, "path": "eng/New-TestResources.ps1", "diffHunk": "@@ -55,6 +55,9 @@ param (\n     [ValidateNotNullOrEmpty()]\n     [hashtable] $AdditionalParameters,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2Njg0NQ=="}, "originalCommit": {"oid": "827ed0064a0df21e7f79dcbb292b01d35f5bb3b4"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njk2ODczOnYy", "diffSide": "RIGHT", "path": "eng/New-TestResources.ps1", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1MzowOFrOFcdBCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTo0ODozM1rOFceajw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3OTg0OQ==", "bodyText": "Are we using all the digits and alphabets to generate basename. This will be important to have larger key space so we have no conflict when we enable all the OS/languages/version  in pipeline.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7343#discussion_r365379849", "createdAt": "2020-01-10T18:53:08Z", "author": {"login": "hemanttanwar"}, "path": "eng/New-TestResources.ps1", "diffHunk": "@@ -122,7 +125,14 @@ if ($TestApplicationId -and !$TestApplicationOid) {\n }\n \n # Format the resource group name based on resource group naming recommendations and limitations.\n-$resourceGroupName = \"rg-{0}-$baseName\" -f ($ServiceDirectory -replace '[\\\\\\/]', '-').Substring(0, [Math]::Min($ServiceDirectory.Length, 90 - $BaseName.Length - 4)).Trim('-')\n+$resourceGroupName = if ($CI) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "827ed0064a0df21e7f79dcbb292b01d35f5bb3b4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NzI0Ng==", "bodyText": "This is a concern I brought up as well, but we are limited by many different resources (Key Vault being one of them) on the length. While reducing uniqueness of hte otherwise 128-bit integer could result in more collisions, in practice this is pretty rare. If an error occured, it would be obvious (something like \"resource group already exists\") so it'd be easy to diagnose and just restart a run.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7343#discussion_r365387246", "createdAt": "2020-01-10T19:10:22Z", "author": {"login": "heaths"}, "path": "eng/New-TestResources.ps1", "diffHunk": "@@ -122,7 +125,14 @@ if ($TestApplicationId -and !$TestApplicationOid) {\n }\n \n # Format the resource group name based on resource group naming recommendations and limitations.\n-$resourceGroupName = \"rg-{0}-$baseName\" -f ($ServiceDirectory -replace '[\\\\\\/]', '-').Substring(0, [Math]::Min($ServiceDirectory.Length, 90 - $BaseName.Length - 4)).Trim('-')\n+$resourceGroupName = if ($CI) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3OTg0OQ=="}, "originalCommit": {"oid": "827ed0064a0df21e7f79dcbb292b01d35f5bb3b4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQwMjc2Nw==", "bodyText": "Chatted about this with @mikeharder yesterday and we are ok today with the amount of randomness using 16 characters from a guid (formatted without the dashes). This gives us 16^16 names to work with. We could increase this considerably by expanding to the whole alphabet.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7343#discussion_r365402767", "createdAt": "2020-01-10T19:48:33Z", "author": {"login": "danieljurek"}, "path": "eng/New-TestResources.ps1", "diffHunk": "@@ -122,7 +125,14 @@ if ($TestApplicationId -and !$TestApplicationOid) {\n }\n \n # Format the resource group name based on resource group naming recommendations and limitations.\n-$resourceGroupName = \"rg-{0}-$baseName\" -f ($ServiceDirectory -replace '[\\\\\\/]', '-').Substring(0, [Math]::Min($ServiceDirectory.Length, 90 - $BaseName.Length - 4)).Trim('-')\n+$resourceGroupName = if ($CI) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3OTg0OQ=="}, "originalCommit": {"oid": "827ed0064a0df21e7f79dcbb292b01d35f5bb3b4"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 562, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}