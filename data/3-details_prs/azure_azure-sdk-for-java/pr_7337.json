{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzUyMjIy", "number": 7337, "title": "update EnvironmentCredential and azure.core.util.Configuration", "bodyText": "Updated EnvironmentCredential to support env vars for UsernamePasswordCredential and ClientCertificateCredential. Added PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH to azure.core.util.Configuration.\n#5967", "createdAt": "2020-01-10T09:24:44Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337", "merged": true, "mergeCommit": {"oid": "01b6580a315ce6739d5310261297ba9f652997ea"}, "closed": true, "closedAt": "2020-01-28T19:15:51Z", "author": {"login": "cxznmhdcxz"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb47EppAH2gAyMzYxMzUyMjIyOmM5MGUwY2FiNzYyMmNlYjc2ZTA0ZDkyZTY5NDJjMjRhNTJkMGZhMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9AVuFAH2gAyMzYxMzUyMjIyOmViMDMyYWZhYjYxYTcyMzI1MzM4NzZmMTBiN2E4NDRhZGIwOWFlMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c90e0cab7622ceb76e04d92e6942c24a52d0fa13", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c90e0cab7622ceb76e04d92e6942c24a52d0fa13", "committedDate": "2020-01-10T09:24:10Z", "message": "update EnvironmentCredentail, azure.core.utils.Configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3649a83f9b9b37aa539e8f77dabd9a87e53eb4ef", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3649a83f9b9b37aa539e8f77dabd9a87e53eb4ef", "committedDate": "2020-01-13T09:48:24Z", "message": "added tests to EnvironmentCredentialTests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MjAxNTAz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-344201503", "createdAt": "2020-01-16T20:41:13Z", "commit": {"oid": "3649a83f9b9b37aa539e8f77dabd9a87e53eb4ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDo0MToxM1rOFem6XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMDo0MToxM1rOFem6XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYzOTEzMg==", "bodyText": "Seems like we should introduce a method something like envContains(params string var) that returns true if the env contains all of the 'var's.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r367639132", "createdAt": "2020-01-16T20:41:13Z", "author": {"login": "jongio"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -50,6 +50,22 @@\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_SECRET),\n                     identityClientOptions);\n+            } else if (configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_ID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3649a83f9b9b37aa539e8f77dabd9a87e53eb4ef"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/404d0f745c1c31508c0b0e6f9f912f123bda2ee2", "committedDate": "2020-01-17T03:05:00Z", "message": "added a method to determine multiple configurations exist, updated EnvironmentCredential"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzgzMTEx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-344783111", "createdAt": "2020-01-17T19:08:46Z", "commit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU0NjY0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-344854664", "createdAt": "2020-01-17T21:36:41Z", "commit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTozNjo0MVrOFfF4FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTozNjo0MVrOFfF4FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NjQ1Mg==", "bodyText": "I'm not explicitly against this change but I do question how often it will be used outside of the context of EnvironmentCredential. Any chance this could be made into a local private method in the interim and if it is needed in additional locations in the future it gets added here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368146452", "createdAt": "2020-01-17T21:36:41Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/Configuration.java", "diffHunk": "@@ -275,6 +280,21 @@ public boolean contains(String name) {\n         return configurations.containsKey(name);\n     }\n \n+    /**\n+     * Determines if multiple configurations all exist.\n+     *\n+     * @param names Names of the configuration.\n+     * @return True if configurations all exist, otherwise false.\n+     */\n+    public boolean containsAll(String... names){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODU1Mzcx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-344855371", "createdAt": "2020-01-17T21:38:16Z", "commit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTozODoxNlrOFfF6Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTo0Mjo1OVrOFfGABQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0Njk3NA==", "bodyText": "Is this not explicitly needed by UsernamePasswordCredential? Otherwise the validation check is missing this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368146974", "createdAt": "2020-01-17T21:38:16Z", "author": {"login": "alzimmermsft"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -42,14 +42,30 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         return Mono.fromSupplier(() -> {\n-            if (configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_ID)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_SECRET)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_TENANT_ID)) {\n+            if (configuration.containsAll(Configuration.PROPERTY_AZURE_TENANT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_SECRET)) {\n                 // TODO: support other clouds\n                 return new ClientSecretCredential(configuration.get(Configuration.PROPERTY_AZURE_TENANT_ID),\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_SECRET),\n                     identityClientOptions);\n+            } else if (configuration.containsAll(Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_TENANT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH)) {\n+                return new ClientCertificateCredential(configuration.get(Configuration.PROPERTY_AZURE_TENANT_ID),\n+                    configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n+                    configuration.get(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH),\n+                    null,\n+                    identityClientOptions);\n+            } else if (configuration.containsAll(Configuration.PROPERTY_AZURE_USERNAME,\n+                    Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_PASSWORD)) {\n+                return new UsernamePasswordCredential(configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n+                    configuration.get(Configuration.PROPERTY_AZURE_TENANT_ID),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NzQ5NA==", "bodyText": "Thoughts on changing the containsAll method to getAll? There are already some race condition chances going on with validating existence then retrieval, if we retrieval all into local instances we could reduce the number of timing issues happening.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368147494", "createdAt": "2020-01-17T21:39:55Z", "author": {"login": "alzimmermsft"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -42,14 +42,30 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         return Mono.fromSupplier(() -> {\n-            if (configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_ID)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_SECRET)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_TENANT_ID)) {\n+            if (configuration.containsAll(Configuration.PROPERTY_AZURE_TENANT_ID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NzgxMg==", "bodyText": "Could we retrieve the commonly needed configuration and check those first? Seems like we could make an initial check that PROPERTY_AZURE_CLIENT_ID is set and if not just early out.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368147812", "createdAt": "2020-01-17T21:40:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/EnvironmentCredential.java", "diffHunk": "@@ -42,14 +42,30 @@\n     @Override\n     public Mono<AccessToken> getToken(TokenRequestContext request) {\n         return Mono.fromSupplier(() -> {\n-            if (configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_ID)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_CLIENT_SECRET)\n-                && configuration.contains(Configuration.PROPERTY_AZURE_TENANT_ID)) {\n+            if (configuration.containsAll(Configuration.PROPERTY_AZURE_TENANT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_SECRET)) {\n                 // TODO: support other clouds\n                 return new ClientSecretCredential(configuration.get(Configuration.PROPERTY_AZURE_TENANT_ID),\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n                     configuration.get(Configuration.PROPERTY_AZURE_CLIENT_SECRET),\n                     identityClientOptions);\n+            } else if (configuration.containsAll(Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_TENANT_ID,\n+                    Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH)) {\n+                return new ClientCertificateCredential(configuration.get(Configuration.PROPERTY_AZURE_TENANT_ID),\n+                    configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),\n+                    configuration.get(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH),\n+                    null,\n+                    identityClientOptions);\n+            } else if (configuration.containsAll(Configuration.PROPERTY_AZURE_USERNAME,\n+                    Configuration.PROPERTY_AZURE_CLIENT_ID,\n+                    Configuration.PROPERTY_AZURE_PASSWORD)) {\n+                return new UsernamePasswordCredential(configuration.get(Configuration.PROPERTY_AZURE_CLIENT_ID),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0ODQzMw==", "bodyText": "Could remove the local instance since Configuration uses the fluent pattern for put.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368148433", "createdAt": "2020-01-17T21:42:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/EnvironmentCredentialTests.java", "diffHunk": "@@ -36,4 +36,46 @@ public void testCreateEnvironmentCredential() {\n             .expectNextMatches(token -> \"token\".equals(token.getToken()))\n             .verifyComplete();\n     }\n+\n+    @Test\n+    public void testCreateEnvironmentClientCertificateCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0ODQ4NQ==", "bodyText": "Same as the previous comment", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368148485", "createdAt": "2020-01-17T21:42:59Z", "author": {"login": "alzimmermsft"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/EnvironmentCredentialTests.java", "diffHunk": "@@ -36,4 +36,46 @@ public void testCreateEnvironmentCredential() {\n             .expectNextMatches(token -> \"token\".equals(token.getToken()))\n             .verifyComplete();\n     }\n+\n+    @Test\n+    public void testCreateEnvironmentClientCertificateCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_ID, \"foo\");\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH, \"bar\");\n+        configuration.put(Configuration.PROPERTY_AZURE_TENANT_ID, \"baz\");\n+\n+        EnvironmentCredential credential = new EnvironmentCredentialBuilder().build();\n+\n+        // authentication will fail client-id=foo, but should be able to create ClientSecretCredential\n+        StepVerifier.create(credential.getToken(new TokenRequestContext().addScopes(\"qux/.default\"))\n+            .doOnSuccess(s -> fail())\n+            .onErrorResume(t -> {\n+                String message = t.getMessage();\n+                Assert.assertFalse(message != null && message.contains(\"Cannot create any credentials with the current environment variables\"));\n+                return Mono.just(new AccessToken(\"token\", OffsetDateTime.MAX));\n+            }))\n+            .expectNextMatches(token -> \"token\".equals(token.getToken()))\n+            .verifyComplete();\n+    }\n+\n+    @Test\n+    public void testCreateEnvironmentUserPasswordCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTE1MDc5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-344915079", "createdAt": "2020-01-18T01:27:35Z", "commit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyNzozNVrOFfI5FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyODowM1rOFfI5QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTg2MQ==", "bodyText": "NIT: I think this comment should say \"ClientCertificateCredential\" instead of \"ClientSecretCredential\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368195861", "createdAt": "2020-01-18T01:27:35Z", "author": {"login": "ellismg"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/EnvironmentCredentialTests.java", "diffHunk": "@@ -36,4 +36,46 @@ public void testCreateEnvironmentCredential() {\n             .expectNextMatches(token -> \"token\".equals(token.getToken()))\n             .verifyComplete();\n     }\n+\n+    @Test\n+    public void testCreateEnvironmentClientCertificateCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_ID, \"foo\");\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH, \"bar\");\n+        configuration.put(Configuration.PROPERTY_AZURE_TENANT_ID, \"baz\");\n+\n+        EnvironmentCredential credential = new EnvironmentCredentialBuilder().build();\n+\n+        // authentication will fail client-id=foo, but should be able to create ClientSecretCredential", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTkwNA==", "bodyText": "NIT: Similar feedback as above, I think this should be UsernamePasswordCredential in the comment.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#discussion_r368195904", "createdAt": "2020-01-18T01:28:03Z", "author": {"login": "ellismg"}, "path": "sdk/identity/azure-identity/src/test/java/com/azure/identity/EnvironmentCredentialTests.java", "diffHunk": "@@ -36,4 +36,46 @@ public void testCreateEnvironmentCredential() {\n             .expectNextMatches(token -> \"token\".equals(token.getToken()))\n             .verifyComplete();\n     }\n+\n+    @Test\n+    public void testCreateEnvironmentClientCertificateCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_ID, \"foo\");\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_CERTIFICATE_PATH, \"bar\");\n+        configuration.put(Configuration.PROPERTY_AZURE_TENANT_ID, \"baz\");\n+\n+        EnvironmentCredential credential = new EnvironmentCredentialBuilder().build();\n+\n+        // authentication will fail client-id=foo, but should be able to create ClientSecretCredential\n+        StepVerifier.create(credential.getToken(new TokenRequestContext().addScopes(\"qux/.default\"))\n+            .doOnSuccess(s -> fail())\n+            .onErrorResume(t -> {\n+                String message = t.getMessage();\n+                Assert.assertFalse(message != null && message.contains(\"Cannot create any credentials with the current environment variables\"));\n+                return Mono.just(new AccessToken(\"token\", OffsetDateTime.MAX));\n+            }))\n+            .expectNextMatches(token -> \"token\".equals(token.getToken()))\n+            .verifyComplete();\n+    }\n+\n+    @Test\n+    public void testCreateEnvironmentUserPasswordCredential() {\n+        Configuration configuration = Configuration.getGlobalConfiguration();\n+        configuration.put(Configuration.PROPERTY_AZURE_CLIENT_ID, \"foo\");\n+        configuration.put(Configuration.PROPERTY_AZURE_USERNAME, \"bar\");\n+        configuration.put(Configuration.PROPERTY_AZURE_PASSWORD, \"baz\");\n+\n+        EnvironmentCredential credential = new EnvironmentCredentialBuilder().build();\n+\n+        // authentication will fail client-id=foo, but should be able to create ClientSecretCredential", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404d0f745c1c31508c0b0e6f9f912f123bda2ee2"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7faf16fec9db60ce861bd37c53841b5162a9463e", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7faf16fec9db60ce861bd37c53841b5162a9463e", "committedDate": "2020-01-19T06:43:39Z", "message": "corrected some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3688c59d8a019a167db7b22997821a7fa408d3d", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a3688c59d8a019a167db7b22997821a7fa408d3d", "committedDate": "2020-01-19T07:13:35Z", "message": "used fluent method calls for Configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda0741584111db11e3518bd50ef77c95f70d86c", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/bda0741584111db11e3518bd50ef77c95f70d86c", "committedDate": "2020-01-19T07:25:14Z", "message": "now gets configuration values into local variables, and then verify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01966edd77087a06989bc37290b77cdfd16dd6c8", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/01966edd77087a06989bc37290b77cdfd16dd6c8", "committedDate": "2020-01-19T07:28:46Z", "message": "remove unnnecessary import in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDY2OTg5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-346066989", "createdAt": "2020-01-21T17:42:10Z", "commit": {"oid": "01966edd77087a06989bc37290b77cdfd16dd6c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2ODI3Mjg0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7337#pullrequestreview-346827284", "createdAt": "2020-01-22T19:01:13Z", "commit": {"oid": "01966edd77087a06989bc37290b77cdfd16dd6c8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb032afab61a7232533876f10b7a844adb09ae01", "author": {"user": {"login": "cxznmhdcxz", "name": "RuiJun Hu (MSFT)"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eb032afab61a7232533876f10b7a844adb09ae01", "committedDate": "2020-01-23T01:48:02Z", "message": "update javadoc comments for EnvironmentCredential"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 617, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}