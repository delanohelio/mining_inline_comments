{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDA5ODU2", "number": 8301, "title": "API review tool feedback part 1", "bodyText": "Rename property sentimentScores to confidenceScores\nFor LinkedEntity, rename id to dataSourceEntityId and getId() to getDataSourceEntityId()\nRename the class SentimentScorePerLabel to SentimentConfidenceScorePerLabel to reflect swagger naming.\nDelete all intermediate WithResponse suffixed and Update APIs\nUnroll defaultCountryHint and defaultLanguage to builder API and remove TextAnalyticsClientOptions.\nRemove InnerError classs\nChange all input List to Iterable", "createdAt": "2020-02-19T21:38:22Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301", "merged": true, "mergeCommit": {"oid": "3736fe8ae96b281da0a59746d7c28e71db858e8f"}, "closed": true, "closedAt": "2020-02-21T04:35:15Z", "author": {"login": "mssfang"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF9ZZPgH2gAyMzc3NDA5ODU2OmZkMGM3MzcwMmU5NjNkN2ZjYjE4YjBiNjdlMDY3YTkxNGZmMmUxMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGXU0XgFqTM2MjM4Mjg3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd0c73702e963d7fcb18b0b67e067a914ff2e110", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd0c73702e963d7fcb18b0b67e067a914ff2e110", "committedDate": "2020-02-19T21:27:39Z", "message": "API review tool feeback part 1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/58682cd3e5100c816dc0aec5c7627c5293730bc8", "committedDate": "2020-02-19T22:01:16Z", "message": "renaming models, method name, and properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTIyMTMw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-361522130", "createdAt": "2020-02-19T23:49:16Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzo0OToxNlrOFr72YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzo0OToxNlrOFr72YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxMzY2NQ==", "bodyText": "why getDataSourceLinkId and not getDataSourceEntitiesId like the property name?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r381613665", "createdAt": "2020-02-19T23:49:16Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/README.md", "diffHunk": "@@ -264,7 +264,7 @@ String text = \"Old Faithful is a geyser at Yellowstone Park.\";\n for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text)) {\n     System.out.println(\"Linked Entities:\");\n     System.out.printf(\"Name: %s, ID: %s, URL: %s, data source: %s.%n\",\n-        linkedEntity.getName(), linkedEntity.getId(), linkedEntity.getUrl(), linkedEntity.getDataSource());\n+        linkedEntity.getName(), linkedEntity.getDataSourceLinkId(), linkedEntity.getUrl(), linkedEntity.getDataSource());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTg1NzMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-361585733", "createdAt": "2020-02-20T01:50:34Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMTo1MDozNFrOFr-oSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMTo1NTowOFrOFr-yUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY1OTIwOA==", "bodyText": "You might want to raise the exception with the inner error here when the error is null.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r381659208", "createdAt": "2020-02-20T01:50:34Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -162,13 +161,23 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<DetectedLanguage>> detectLanguageWithResponse(String text, String countryHint) {\n-        try {\n-            return withContext(context ->\n-                detectLanguageAsyncClient.detectLanguageWithResponse(text, countryHint, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+    public Mono<DetectedLanguage> detectLanguage(String text, String countryHint) {\n+        return detectLanguageBatch(Collections.singletonList(text), countryHint, null)\n+            .map(documentCollection -> {\n+                final Iterator<DetectLanguageResult> iterator = documentCollection.iterator();\n+                // Collection will never empty\n+                if (!iterator.hasNext()) {\n+                    throw logger.logExceptionAsError(\n+                        new IllegalStateException(\"An empty collection returned which is an unexpected error.\"));\n+                }\n+\n+                final DetectLanguageResult languageResult = iterator.next();\n+                if (languageResult.isError()) {\n+                    throw logger.logExceptionAsError(Transforms.toTextAnalyticsException(languageResult.getError()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY2MTc3Ng==", "bodyText": "getDataSourceEntityId ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r381661776", "createdAt": "2020-02-20T01:55:08Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/LinkedEntity.java", "diffHunk": "@@ -94,8 +94,8 @@ public String getLanguage() {\n      *\n      * @return the id value.\n      */\n-    public String getId() {\n-        return this.id;\n+    public String getDataSourceLinkId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2a6a3cc61775e17a9c58b1e3240df1fcff0713", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a2a6a3cc61775e17a9c58b1e3240df1fcff0713", "committedDate": "2020-02-20T16:51:34Z", "message": "rename getDataSourceLinkId to getDataSourceEntityId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDc2OTE3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362076917", "createdAt": "2020-02-20T17:05:16Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzowNToxN1rOFsbrzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzowNToxN1rOFsbrzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNTI0Ng==", "bodyText": "We do this because there is another type with this name, right? is it the generated one?\nwhat is the difference between both?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382135246", "createdAt": "2020-02-20T17:05:17Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -131,7 +107,9 @@ private AnalyzeSentimentResult convertToAnalyzeSentimentResult(final DocumentSen\n                 new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n                     documentSentiment.getSentiment())));\n         }\n-        final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n+\n+        final com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDgyOTQ2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362082946", "createdAt": "2020-02-20T17:13:37Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxMzozN1rOFsb9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxMzozN1rOFsb9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzOTc0Mw==", "bodyText": "Let's make sure that the docstring here specifies that these are confidence scores, not sentiment scores.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382139743", "createdAt": "2020-02-20T17:13:37Z", "author": {"login": "kristapratico"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -845,7 +834,7 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n \n     /**\n      * Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and\n-     * Neutral) for the document and each sentence within i\n+     * Neutral) for the document and each sentence within it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 498}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDgzMTQz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362083143", "createdAt": "2020-02-20T17:13:53Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxMzo1M1rOFsb99w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxMzo1M1rOFsb99w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzOTg5NQ==", "bodyText": "same here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382139895", "createdAt": "2020-02-20T17:13:53Z", "author": {"login": "kristapratico"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -864,41 +853,50 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<DocumentSentiment> analyzeSentiment(String text) {\n         try {\n-            return analyzeSentimentWithResponse(text, defaultLanguage).flatMap(FluxUtil::toMono);\n+            return analyzeSentiment(text, defaultLanguage);\n         } catch (RuntimeException ex) {\n             return monoError(logger, ex);\n         }\n     }\n \n     /**\n      * Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and\n-     * Neutral) for the document and each sentence within i\n+     * Neutral) for the document and each sentence within it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 516}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDgzOTg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362083985", "createdAt": "2020-02-20T17:15:05Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNTowNVrOFscAbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNTowNVrOFscAbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDUyNg==", "bodyText": "Is this the autogenerated one? why we use one here and in other places the one from com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382140526", "createdAt": "2020-02-20T17:15:05Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -145,11 +123,12 @@ private AnalyzeSentimentResult convertToAnalyzeSentimentResult(final DocumentSen\n                         new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n                             sentenceSentiment.getSentiment())));\n                 }\n-                SentimentConfidenceScorePerLabel confidenceScorePerSentence = sentenceSentiment.getSentenceScores();\n+                com.azure.ai.textanalytics.implementation.models.SentimentConfidenceScorePerLabel\n+                    confidenceScorePerSentence = sentenceSentiment.getSentenceScores();\n \n                 return new SentenceSentiment(\n                     sentimentLabel,\n-                    new SentimentScorePerLabel(confidenceScorePerSentence.getNegative(),\n+                    new SentimentConfidenceScorePerLabel(confidenceScorePerSentence.getNegative(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDg0ODAx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362084801", "createdAt": "2020-02-20T17:16:17Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNjoxN1rOFscC8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNjoxN1rOFscC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTE2OA==", "bodyText": "Don't abbreviate, write out \"Personally Identifiable Information\" (PII)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382141168", "createdAt": "2020-02-20T17:16:17Z", "author": {"login": "kristapratico"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -368,8 +364,8 @@ public DetectedLanguage detectLanguage(String text) {\n      * See <a href=\"https://aka.ms/talangs\"></a> for the list of enabled languages.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Recognizes the PII entities with http response in a list of text with a provided language representation.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizePiiEntitiesBatchWithResponse#List-String-TextAnalyticsRequestOptions-Context}\n+     * <p>Recognizes the PII entities in a list of text with a provided language representation.</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 323}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDg1NzE4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362085718", "createdAt": "2020-02-20T17:17:30Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNzozMFrOFscFyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNzozMFrOFscFyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MTg5OA==", "bodyText": "confidence scores", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382141898", "createdAt": "2020-02-20T17:17:30Z", "author": {"login": "kristapratico"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -750,17 +742,16 @@ public DocumentSentiment analyzeSentiment(String text) {\n      * English as default.\n      * @param options The {@link TextAnalyticsRequestOptions options} to configure the scoring model for documents\n      * and show statistics.\n-     * @param context Additional context that is passed through the Http pipeline during the service call.\n      *\n-     * @return A {@link Response} containing the {@link DocumentResultCollection batch} of\n-     * {@link AnalyzeSentimentResult text sentiments} with their numeric scores.\n+     * @return A {@link DocumentResultCollection batch} of {@link AnalyzeSentimentResult text sentiments} with their\n+     * numeric scores.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 640}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDg2OTEy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362086912", "createdAt": "2020-02-20T17:19:09Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDg3NjYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362087661", "createdAt": "2020-02-20T17:20:12Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyMDoxMlrOFscLuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyMDoxMlrOFscLuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MzQxNw==", "bodyText": "NIT: will never be empty", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382143417", "createdAt": "2020-02-20T17:20:12Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -162,13 +161,23 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<DetectedLanguage>> detectLanguageWithResponse(String text, String countryHint) {\n-        try {\n-            return withContext(context ->\n-                detectLanguageAsyncClient.detectLanguageWithResponse(text, countryHint, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+    public Mono<DetectedLanguage> detectLanguage(String text, String countryHint) {\n+        return detectLanguageBatch(Collections.singletonList(text), countryHint, null)\n+            .map(documentCollection -> {\n+                final Iterator<DetectLanguageResult> iterator = documentCollection.iterator();\n+                // Collection will never empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTAyNDcw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362102470", "createdAt": "2020-02-20T17:41:50Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0MTo1MFrOFsc5eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0MTo1MFrOFsc5eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTEyOA==", "bodyText": "the confidence score....\nAlso, Add to docstrings that the score represents the Softmax score.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382155128", "createdAt": "2020-02-20T17:41:50Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/DocumentSentiment.java", "diffHunk": "@@ -13,20 +13,20 @@\n @Immutable\n public final class DocumentSentiment {\n     private final SentimentLabel sentiment;\n-    private final SentimentScorePerLabel sentimentScores;\n+    private final SentimentConfidenceScorePerLabel confidenceScores;\n     private final List<SentenceSentiment> sentences;\n \n     /**\n      * Creates a {@code DocumentSentiment} model that describes the sentiment of the document.\n      *\n      * @param sentiment the sentiment label of the document\n-     * @param sentimentScores the score of sentiment label of the document\n+     * @param confidenceScores the score of sentiment label of the document", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTAzMzg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362103385", "createdAt": "2020-02-20T17:43:14Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0MzoxNFrOFsc8XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0MzoxNFrOFsc8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NTg2OA==", "bodyText": "same here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382155868", "createdAt": "2020-02-20T17:43:14Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/SentenceSentiment.java", "diffHunk": "@@ -12,21 +12,21 @@\n public final class SentenceSentiment {\n     private final int length;\n     private final int offset;\n-    private final SentimentScorePerLabel sentimentScores;\n+    private final SentimentConfidenceScorePerLabel confidenceScores;\n     private final SentimentLabel sentiment;\n \n     /**\n      * Creates a {@code SentenceSentiment} model that describes the sentiment analysis of sentence.\n      *\n      * @param sentiment sentiment label of the sentence\n-     * @param sentimentScores the score of sentiment label of the sentence\n+     * @param confidenceScores the score of sentiment label of the sentence", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTA0MTE4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362104118", "createdAt": "2020-02-20T17:44:21Z", "commit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0NDoyMVrOFsc-fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzo0NDoyMVrOFsc-fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE1NjQxNQ==", "bodyText": "is there a reason why there are so many format changes in the PR?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382156415", "createdAt": "2020-02-20T17:44:21Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/samples/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -74,90 +74,76 @@ public void detectLanguage() {\n         String inputText = \"Bonjour tout le monde\";\n         textAnalyticsAsyncClient.detectLanguage(inputText).subscribe(detectedLanguage ->\n             System.out.printf(\"Detected language name: %s, ISO 6391 Name: %s, score: %.2f.%n\",\n-                detectedLanguage.getName(),\n-                detectedLanguage.getIso6391Name(),\n-                detectedLanguage.getScore()));\n+                detectedLanguage.getName(), detectedLanguage.getIso6391Name(), detectedLanguage.getScore()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58682cd3e5100c816dc0aec5c7627c5293730bc8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e4e0e67d9e9b1f1c78e7ea366411367715d32b5", "committedDate": "2020-02-20T17:59:37Z", "message": "wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTE5MTk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362119196", "createdAt": "2020-02-20T18:07:26Z", "commit": {"oid": "3a2a6a3cc61775e17a9c58b1e3240df1fcff0713"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowNzoyN1rOFsdsnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowNzoyN1rOFsdsnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2ODIyMA==", "bodyText": "Consider changing ID to Entity Id in Data Source", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382168220", "createdAt": "2020-02-20T18:07:27Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/README.md", "diffHunk": "@@ -264,7 +264,7 @@ String text = \"Old Faithful is a geyser at Yellowstone Park.\";\n for (LinkedEntity linkedEntity : textAnalyticsClient.recognizeLinkedEntities(text)) {\n     System.out.println(\"Linked Entities:\");\n     System.out.printf(\"Name: %s, ID: %s, URL: %s, data source: %s.%n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2a6a3cc61775e17a9c58b1e3240df1fcff0713"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTMzMjc3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362133277", "createdAt": "2020-02-20T18:29:13Z", "commit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyOToxM1rOFseYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODoyOToxM1rOFseYwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE3OTUyMg==", "bodyText": "Should we add something to the docstring about how when using this method, we are using the DefaultCountryHint value?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382179522", "createdAt": "2020-02-20T18:29:13Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -56,74 +54,76 @@\n     }\n \n     /**\n-     * Returns the detected language and a numeric score between zero and one. Scores close to one indicate 100%\n+     * Returns the detected language and a confidence score between zero and one. Scores close to one indicate 100%\n      * certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language of single input text</p>\n+     * <p>Detects the language of single input text.</p>\n      * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n-     * @return the {@link DetectedLanguage detected language} of the text.\n+     *\n+     * @return The {@link DetectedLanguage detected language} of the text.\n+     *\n      * @throws NullPointerException if {@code text} is {@code null}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public DetectedLanguage detectLanguage(String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTM0Mzc2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362134376", "createdAt": "2020-02-20T18:30:52Z", "commit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODozMDo1MlrOFsecDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODozMDo1MlrOFsecDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MDM2Nw==", "bodyText": "Defaults to \"US\"\n\nBecause that is the default from the service? should we instead default it to the default of the client?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382180367", "createdAt": "2020-02-20T18:30:52Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -56,74 +54,76 @@\n     }\n \n     /**\n-     * Returns the detected language and a numeric score between zero and one. Scores close to one indicate 100%\n+     * Returns the detected language and a confidence score between zero and one. Scores close to one indicate 100%\n      * certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language of single input text</p>\n+     * <p>Detects the language of single input text.</p>\n      * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n-     * @return the {@link DetectedLanguage detected language} of the text.\n+     *\n+     * @return The {@link DetectedLanguage detected language} of the text.\n+     *\n      * @throws NullPointerException if {@code text} is {@code null}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public DetectedLanguage detectLanguage(String text) {\n-        return detectLanguageWithResponse(text, client.getDefaultCountryHint(), Context.NONE).getValue();\n+        return detectLanguage(text, client.getDefaultCountryHint());\n     }\n \n     /**\n-     * Returns a {@link Response} containing the detected language and a numeric score between zero and one.\n+     * Returns the detected language and a confidence score between zero and one.\n      * Scores close to one indicate 100% certainty that the identified language is true.\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Detects the language with http response in a text with a provided country hint.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguageWithResponse#String-String-Context}\n+     * <p>Detects the language of single input text with a provided country hint.</p>\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.detectLanguage#String-String}\n      *\n      * @param text The text to be analyzed.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n      * @param countryHint Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTM4MTM5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362138139", "createdAt": "2020-02-20T18:36:36Z", "commit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODozNjozN1rOFseniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODozNjozN1rOFseniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4MzMwNA==", "bodyText": "same here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#discussion_r382183304", "createdAt": "2020-02-20T18:36:37Z", "author": {"login": "maririos"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsClient.java", "diffHunk": "@@ -198,79 +198,75 @@ public DetectedLanguage detectLanguage(String text) {\n      * For a list of enabled languages, check: <a href=\"https://aka.ms/talangs\"></a>\n      *\n      * <p><strong>Code Sample</strong></p>\n-     * <p>Recognizes the entities with http response in a text with a provided language representation.</p>\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizeEntities#String-String-Context}\n+     * <p>Recognizes the entities in a text with a provided language representation.</p>\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsClient.recognizeEntities#String-String}\n      *\n      * @param text the text to recognize entities for.\n      * For text length limits, maximum batch size, and supported text encoding, see\n      * <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\"/>.\n      * @param language The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as default.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4e0e67d9e9b1f1c78e7ea366411367715d32b5"}, "originalPosition": 182}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b00655be7286e27d11d72ce11443aa2f89be470", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b00655be7286e27d11d72ce11443aa2f89be470", "committedDate": "2020-02-20T20:04:28Z", "message": "another word"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0c4ce9fadc55e81dd5693db6399bd1979b29dce", "author": {"user": {"login": "mssfang", "name": "Shawn Fang"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c0c4ce9fadc55e81dd5693db6399bd1979b29dce", "committedDate": "2020-02-20T20:32:08Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzgyODc4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8301#pullrequestreview-362382878", "createdAt": "2020-02-21T03:40:11Z", "commit": {"oid": "c0c4ce9fadc55e81dd5693db6399bd1979b29dce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2359, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}