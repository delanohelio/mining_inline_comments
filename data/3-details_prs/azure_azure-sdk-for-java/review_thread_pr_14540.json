{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MDAyNTgw", "number": 14540, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoyOTozMVrOEdbA3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1MDoxOVrOEdbQPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg2NzQ4OnYy", "diffSide": "RIGHT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoyOTozMVrOHIkltQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoyOTozMVrOHIkltQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1MDEzMw==", "bodyText": "We do not need this since this is a max overload one and we have overloads with Response<>", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14540#discussion_r478750133", "createdAt": "2020-08-27T23:29:31Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -753,24 +753,15 @@ public <T> Mono<Response<T>> createDigitalTwinWithResponse(String digitalTwinId,\n /**\n  * Deletes a digital twin. All relationships referencing the digital twin must already be deleted.\n  *\n- * @param digitalTwinId The id of the digital twin. The id is unique within the service and case sensitive.\n+ * @param digitalTwinId The Id of the digital twin. The Id is unique within the service and case sensitive.\n  */\n @ServiceMethod(returns = ReturnType.SINGLE)\n public Mono<Void> deleteDigitalTwin(String digitalTwinId)\n \n /**\n  * Deletes a digital twin. All relationships referencing the digital twin must already be deleted.\n  *\n- * @param digitalTwinId The id of the digital twin. The id is unique within the service and case sensitive.\n- * @param options The optional settings for this request\n- */\n-@ServiceMethod(returns = ReturnType.SINGLE)\n-public Mono<Void> deleteDigitalTwin(String digitalTwinId, RequestOptions options)\n-\n-/**\n- * Deletes a digital twin. All relationships referencing the digital twin must already be deleted.\n- *\n- * @param digitalTwinId The id of the digital twin. The id is unique within the service and case sensitive.\n+ * @param digitalTwinId The Id of the digital twin. The Id is unique within the service and case sensitive.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16bf8ac1e18482ec672f3b4dc9dc707e49991853"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjg3MTIyOnYy", "diffSide": "LEFT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzozMTozMlrOHIkoDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzozMTozMlrOHIkoDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1MDczNA==", "bodyText": "This is not required for the same reason as above", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14540#discussion_r478750734", "createdAt": "2020-08-27T23:31:32Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -787,39 +778,16 @@ public Mono<Response<Void>> deleteDigitalTwinWithResponse(String digitalTwinId,\n @ServiceMethod(returns = ReturnType.SINGLE)\n public Mono<String> updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)\n \n-/**\n- * Updates a digital twin.\n- *\n- * @param digitalTwinId The Id of the digital twin.\n- * @param digitalTwinUpdateOperations The application/json-patch+json operations to be performed on the specified digital twin\n- * @param classType The model class to convert the response to.\n- * @return A Http response containing updated application/json digital twin.\n- */\n-@ServiceMethod(returns = ReturnType.SINGLE)\n-public <T> Mono<Response<T>> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, Class<T> classType)\n-\n  /**\n  * Updates a digital twin.\n  *\n  * @param digitalTwinId The Id of the digital twin.\n  * @param digitalTwinUpdateOperations The application/json-patch+json operations to be performed on the specified digital twin\n- * @param options The optional settings for this request\n- * @return The updated application/json digital twin.\n- */\n-@ServiceMethod(returns = ReturnType.SINGLE)\n-public Mono<String> updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations, RequestOptions options)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16bf8ac1e18482ec672f3b4dc9dc707e49991853"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkwNjg3OnYy", "diffSide": "LEFT", "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1MDoxOVrOHIk86A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1MDoxOVrOHIk86A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NjA3Mg==", "bodyText": "duplicate", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14540#discussion_r478756072", "createdAt": "2020-08-27T23:50:19Z", "author": {"login": "bikamani"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -787,39 +778,16 @@ public Mono<Response<Void>> deleteDigitalTwinWithResponse(String digitalTwinId,\n @ServiceMethod(returns = ReturnType.SINGLE)\n public Mono<String> updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)\n \n-/**\n- * Updates a digital twin.\n- *\n- * @param digitalTwinId The Id of the digital twin.\n- * @param digitalTwinUpdateOperations The application/json-patch+json operations to be performed on the specified digital twin\n- * @param classType The model class to convert the response to.\n- * @return A Http response containing updated application/json digital twin.\n- */\n-@ServiceMethod(returns = ReturnType.SINGLE)\n-public <T> Mono<Response<T>> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, Class<T> classType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16bf8ac1e18482ec672f3b4dc9dc707e49991853"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1446, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}