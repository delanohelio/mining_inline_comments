{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDg0MDgw", "number": 11479, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowNDoxMVrOEAQbVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowODoyOVrOEAQgGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzA0NTk2OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowNDoxMlrOGbbNfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjowNToyNlrOGbe0AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMDU1OA==", "bodyText": "the args indentation should be the same.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431410558", "createdAt": "2020-05-27T20:04:12Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -104,16 +103,16 @@ public static CosmosAsyncPermissionResponse createCosmosAsyncPermissionResponse(\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n-                                                                                              CosmosAsyncContainer cosmosContainer) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n+                                                                                         CosmosAsyncContainer cosmosContainer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTU2OA==", "bodyText": "Done.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431469568", "createdAt": "2020-05-27T22:05:26Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -104,16 +103,16 @@ public static CosmosAsyncPermissionResponse createCosmosAsyncPermissionResponse(\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n-                                                                                              CosmosAsyncContainer cosmosContainer) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n+                                                                                         CosmosAsyncContainer cosmosContainer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMDU1OA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzA0NjE5OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowNDoxN1rOGbbNog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjowNTozMFrOGbe0GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMDU5NA==", "bodyText": "the args indentation should be the same.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431410594", "createdAt": "2020-05-27T20:04:17Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -104,16 +103,16 @@ public static CosmosAsyncPermissionResponse createCosmosAsyncPermissionResponse(\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n-                                                                                              CosmosAsyncContainer cosmosContainer) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n+                                                                                         CosmosAsyncContainer cosmosContainer) {\n+        return new CosmosStoredProcedureResponse(response);\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(StoredProcedureResponse response,\n-                                                                                              CosmosAsyncContainer cosmosContainer,\n-                                                                                              String storedProcedureId) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer, storedProcedureId);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(StoredProcedureResponse response,\n+                                                                                         CosmosAsyncContainer cosmosContainer,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTU5Mg==", "bodyText": "Done.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431469592", "createdAt": "2020-05-27T22:05:30Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -104,16 +103,16 @@ public static CosmosAsyncPermissionResponse createCosmosAsyncPermissionResponse(\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n-                                                                                              CosmosAsyncContainer cosmosContainer) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(ResourceResponse<StoredProcedure> response,\n+                                                                                         CosmosAsyncContainer cosmosContainer) {\n+        return new CosmosStoredProcedureResponse(response);\n     }\n \n     @Warning(value = INTERNAL_USE_ONLY_WARNING)\n-    public static CosmosAsyncStoredProcedureResponse createCosmosAsyncStoredProcedureResponse(StoredProcedureResponse response,\n-                                                                                              CosmosAsyncContainer cosmosContainer,\n-                                                                                              String storedProcedureId) {\n-        return new CosmosAsyncStoredProcedureResponse(response, cosmosContainer, storedProcedureId);\n+    public static CosmosStoredProcedureResponse createCosmosStoredProcedureResponse(StoredProcedureResponse response,\n+                                                                                         CosmosAsyncContainer cosmosContainer,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMDU5NA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzA1MzczOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosStoredProcedure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowNjo1NFrOGbbSkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjowNTozOFrOGbe0UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMTg1Nw==", "bodyText": "This passes async version to the constructor of the sync version. This should be required only by implementation not public api right?\nI think the constructor should be package private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431411857", "createdAt": "2020-05-27T20:06:54Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosStoredProcedure.java", "diffHunk": "@@ -14,20 +14,16 @@\n  */\n public class CosmosStoredProcedure {\n     private final String id;\n-    private final CosmosContainer container;\n     private final CosmosAsyncStoredProcedure storedProcedure;\n \n     /**\n      * Instantiates a new Cosmos sync stored procedure.\n      *\n      * @param id the id\n-     * @param container the container\n      * @param storedProcedure the stored procedure\n      */\n-    public CosmosStoredProcedure(String id, CosmosContainer container, CosmosAsyncStoredProcedure storedProcedure) {\n-\n+    public CosmosStoredProcedure(String id, CosmosAsyncStoredProcedure storedProcedure) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTY0OA==", "bodyText": "Changed to package-private.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431469648", "createdAt": "2020-05-27T22:05:38Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosStoredProcedure.java", "diffHunk": "@@ -14,20 +14,16 @@\n  */\n public class CosmosStoredProcedure {\n     private final String id;\n-    private final CosmosContainer container;\n     private final CosmosAsyncStoredProcedure storedProcedure;\n \n     /**\n      * Instantiates a new Cosmos sync stored procedure.\n      *\n      * @param id the id\n-     * @param container the container\n      * @param storedProcedure the stored procedure\n      */\n-    public CosmosStoredProcedure(String id, CosmosContainer container, CosmosAsyncStoredProcedure storedProcedure) {\n-\n+    public CosmosStoredProcedure(String id, CosmosAsyncStoredProcedure storedProcedure) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMTg1Nw=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzA1ODE3OnYy", "diffSide": "LEFT", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDowODoyOVrOGbbVaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzoyOTo1MFrOGbgpLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMjU4NA==", "bodyText": "why isn't this needed anymore? in the absence of this method does the code throw the valid type of exception (if any failure)?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431412584", "createdAt": "2020-05-27T20:08:29Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "diffHunk": "@@ -236,42 +230,6 @@ public CosmosTrigger getTrigger(String id) {\n                                  asyncScripts.getTrigger(id));\n     }\n \n-    /**\n-     * Map stored procedure response and block cosmos sync stored procedure response.\n-     *\n-     * @param storedProcedureResponseMono the stored procedure response mono\n-     * @return the cosmos sync stored procedure response\n-     */\n-    CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTgzMw==", "bodyText": "It will still throw the valid exception type. That was just wrapping the exception to CosmosException, which is what originally gets thrown by async APIs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431469833", "createdAt": "2020-05-27T22:06:06Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "diffHunk": "@@ -236,42 +230,6 @@ public CosmosTrigger getTrigger(String id) {\n                                  asyncScripts.getTrigger(id));\n     }\n \n-    /**\n-     * Map stored procedure response and block cosmos sync stored procedure response.\n-     *\n-     * @param storedProcedureResponseMono the stored procedure response mono\n-     * @return the cosmos sync stored procedure response\n-     */\n-    CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMjU4NA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5NzQzMg==", "bodyText": "do we have tests to validate that?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431497432", "createdAt": "2020-05-27T23:22:58Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "diffHunk": "@@ -236,42 +230,6 @@ public CosmosTrigger getTrigger(String id) {\n                                  asyncScripts.getTrigger(id));\n     }\n \n-    /**\n-     * Map stored procedure response and block cosmos sync stored procedure response.\n-     *\n-     * @param storedProcedureResponseMono the stored procedure response mono\n-     * @return the cosmos sync stored procedure response\n-     */\n-    CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMjU4NA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5OTUxNg==", "bodyText": "I reverted the change in the latest iteration to make sure we are consistent with exceptions across the SDK. Thanks for bringing this up.\nWill also add tests to check the exception type.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431499516", "createdAt": "2020-05-27T23:29:43Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "diffHunk": "@@ -236,42 +230,6 @@ public CosmosTrigger getTrigger(String id) {\n                                  asyncScripts.getTrigger(id));\n     }\n \n-    /**\n-     * Map stored procedure response and block cosmos sync stored procedure response.\n-     *\n-     * @param storedProcedureResponseMono the stored procedure response mono\n-     * @return the cosmos sync stored procedure response\n-     */\n-    CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMjU4NA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5OTU2Ng==", "bodyText": "In another follow up PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11479#discussion_r431499566", "createdAt": "2020-05-27T23:29:50Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosScripts.java", "diffHunk": "@@ -236,42 +230,6 @@ public CosmosTrigger getTrigger(String id) {\n                                  asyncScripts.getTrigger(id));\n     }\n \n-    /**\n-     * Map stored procedure response and block cosmos sync stored procedure response.\n-     *\n-     * @param storedProcedureResponseMono the stored procedure response mono\n-     * @return the cosmos sync stored procedure response\n-     */\n-    CosmosStoredProcedureResponse mapStoredProcedureResponseAndBlock(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMjU4NA=="}, "originalCommit": {"oid": "3f433a4425761816a7a30223491aa9db369d97c6"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4079, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}