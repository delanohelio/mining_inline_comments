{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjY5NzMz", "number": 12198, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoxNzowMFrOEFoDdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMTo1NlrOEFoXuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM0NTgyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoxNzowMFrOGj7byQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMzo1NFrOGj8AOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNzExMw==", "bodyText": "Should I be more explicit with source in the name?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440327113", "createdAt": "2020-06-15T17:17:00Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "diffHunk": "@@ -24,7 +27,7 @@\n      * Instantiates an empty {@code BlobDownloadHeaders}.\n      */\n     public BlobDownloadHeaders() {\n-        objectReplicationSourcePolicies = null;\n+        objectReplicationPolicies = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMjQ3Mw==", "bodyText": "Maybe objectReplicationSourceProperties? Since there's already another variable to hold the destination policy header if we get back the OR info of a destination blob.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440332473", "createdAt": "2020-06-15T17:26:37Z", "author": {"login": "amnguye"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "diffHunk": "@@ -24,7 +27,7 @@\n      * Instantiates an empty {@code BlobDownloadHeaders}.\n      */\n     public BlobDownloadHeaders() {\n-        objectReplicationSourcePolicies = null;\n+        objectReplicationPolicies = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNzExMw=="}, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjQ0Mw==", "bodyText": "changed to ORSourcePOlicies", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440336443", "createdAt": "2020-06-15T17:33:54Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobDownloadHeaders.java", "diffHunk": "@@ -24,7 +27,7 @@\n      * Instantiates an empty {@code BlobDownloadHeaders}.\n      */\n     public BlobDownloadHeaders() {\n-        objectReplicationSourcePolicies = null;\n+        objectReplicationPolicies = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNzExMw=="}, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM1MDU2OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoxODoxOVrOGj7emA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoxODoxOVrOGj7emA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNzgzMg==", "bodyText": "TODO : delete", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440327832", "createdAt": "2020-06-15T17:18:19Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobProperties.java", "diffHunk": "@@ -50,7 +52,8 @@\n     private final Long tagCount;\n     private final String versionId;\n     private final Boolean isCurrentVersion;\n-    private final Map<String, ObjectReplicationPolicy> objectReplicationSourcePolicies;\n+    private final List<ObjectReplicationPolicy> objectReplicationPolicies;\n+//    private final Map<String, ObjectReplicationPolicy> objectReplicationSourcePolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM4NTIyOnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzoyODoxOVrOGj70hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzo1NzowMFrOGj8xgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMzQ0Ng==", "bodyText": "We should accept list of rules as constructor parameter as well, so that this is fully functional after construction (avoid multi-step init).\nIf we're aiming to make this class immutable we should clone the list (https://stackoverflow.com/questions/6137224/immutable-object-with-arraylist-member-variable-why-can-this-variable-be-chang )", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440333446", "createdAt": "2020-06-15T17:28:19Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "diffHunk": "@@ -3,24 +3,24 @@\n \n package com.azure.storage.blob.models;\n \n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * A type that contains information about an object replication policy on a source blob.\n  */\n public class ObjectReplicationPolicy {\n \n     private final String policyId;\n-    private final Map<String, String> ruleStatuses;\n+    private final List<ObjectReplicationRule> objectReplicationRules;\n \n     ObjectReplicationPolicy(String policyId) {\n         this.policyId = policyId;\n-        this.ruleStatuses = new HashMap<>();\n+        this.objectReplicationRules = new ArrayList<>();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NzU4MQ==", "bodyText": "Should I make all the constructors public?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440347581", "createdAt": "2020-06-15T17:54:29Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "diffHunk": "@@ -3,24 +3,24 @@\n \n package com.azure.storage.blob.models;\n \n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * A type that contains information about an object replication policy on a source blob.\n  */\n public class ObjectReplicationPolicy {\n \n     private final String policyId;\n-    private final Map<String, String> ruleStatuses;\n+    private final List<ObjectReplicationRule> objectReplicationRules;\n \n     ObjectReplicationPolicy(String policyId) {\n         this.policyId = policyId;\n-        this.ruleStatuses = new HashMap<>();\n+        this.objectReplicationRules = new ArrayList<>();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMzQ0Ng=="}, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTA1OQ==", "bodyText": "Yes, customers should be able to create these types for test purposes. See BlobContainerAccessPolicies as an example (though that one isn't perfectly immutable...).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440349059", "createdAt": "2020-06-15T17:57:00Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "diffHunk": "@@ -3,24 +3,24 @@\n \n package com.azure.storage.blob.models;\n \n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * A type that contains information about an object replication policy on a source blob.\n  */\n public class ObjectReplicationPolicy {\n \n     private final String policyId;\n-    private final Map<String, String> ruleStatuses;\n+    private final List<ObjectReplicationRule> objectReplicationRules;\n \n     ObjectReplicationPolicy(String policyId) {\n         this.policyId = policyId;\n-        this.ruleStatuses = new HashMap<>();\n+        this.objectReplicationRules = new ArrayList<>();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzMzQ0Ng=="}, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM5MzI1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMDozMlrOGj75cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMDozMlrOGj75cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNDcwNg==", "bodyText": "By looking at usage I think we could simplify this and code that's using it by usage of stream api.\nhttps://stackoverflow.com/questions/23696317/find-first-element-by-predicate", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440334706", "createdAt": "2020-06-15T17:30:32Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationPolicy.java", "diffHunk": "@@ -31,10 +31,20 @@ public String getPolicyId() {\n     }\n \n     /**\n-     * @return A {@code Map} of rules associated with this policy to the status of the replication associated with that\n+     * @return A {@code List} of rules associated with this policy to the status of the replication associated with that\n      * rule.\n      */\n-    public Map<String, String> getRules() {\n-        return this.ruleStatuses;\n+    public List<ObjectReplicationRule> getRules() {\n+        return this.objectReplicationRules;\n+    }\n+\n+    static int getIndexOfObjectReplicationPolicy(String policyId,\n+        List<ObjectReplicationPolicy> objectReplicationPolicies) {\n+        for (int i = 0; i < objectReplicationPolicies.size(); i++) {\n+            if (policyId.equals(objectReplicationPolicies.get(i).getPolicyId())) {\n+                return i;\n+            }\n+        }\n+        return -1;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM5NjU4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMTozNlrOGj77iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMTozNlrOGj77iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTI0MQ==", "bodyText": "same here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440335241", "createdAt": "2020-06-15T17:31:36Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ObjectReplicationRule.java", "diffHunk": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.models;\n+\n+import java.util.List;\n+\n+/**\n+ * A type that contains information about an object replication rule on a source blob.\n+ */\n+public class ObjectReplicationRule {\n+\n+    private final String ruleId;\n+    private final ObjectReplicationStatus status;\n+\n+\n+    ObjectReplicationRule(String ruleId, ObjectReplicationStatus status) {\n+        this.ruleId = ruleId;\n+        this.status = status;\n+    }\n+\n+    /**\n+     * @return The rule id.\n+     */\n+    public String getRuleId() {\n+        return ruleId;\n+    }\n+\n+    /**\n+     * @return The {@link ObjectReplicationStatus}\n+     */\n+    public ObjectReplicationStatus getStatus() {\n+        return status;\n+    }\n+\n+    static int getIndexOfObjectReplicationRule(String ruleId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzM5NzY4OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/BlobAPITest.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozMTo1NlrOGj78RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNzozNDozMVrOGj8BfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTQyOQ==", "bodyText": "star import.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440335429", "createdAt": "2020-06-15T17:31:56Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/BlobAPITest.groovy", "diffHunk": "@@ -7,28 +7,7 @@ import com.azure.core.http.RequestConditions\n import com.azure.core.util.CoreUtils\n import com.azure.core.util.polling.LongRunningOperationStatus\n import com.azure.identity.DefaultAzureCredentialBuilder\n-import com.azure.identity.EnvironmentCredentialBuilder\n-import com.azure.storage.blob.models.AccessTier\n-import com.azure.storage.blob.models.ArchiveStatus\n-import com.azure.storage.blob.models.BlobBeginCopyOptions\n-import com.azure.storage.blob.models.BlobCopyFromUrlOptions\n-import com.azure.storage.blob.models.BlobErrorCode\n-import com.azure.storage.blob.models.BlobHttpHeaders\n-import com.azure.storage.blob.models.BlobRange\n-import com.azure.storage.blob.models.BlobRequestConditions\n-import com.azure.storage.blob.models.BlobStorageException\n-import com.azure.storage.blob.models.BlobType\n-import com.azure.storage.blob.models.BlockListType\n-import com.azure.storage.blob.models.CopyStatusType\n-import com.azure.storage.blob.models.CustomerProvidedKey\n-import com.azure.storage.blob.models.DeleteSnapshotsOptionType\n-import com.azure.storage.blob.models.DownloadRetryOptions\n-import com.azure.storage.blob.models.LeaseStateType\n-import com.azure.storage.blob.models.LeaseStatusType\n-import com.azure.storage.blob.models.ParallelTransferOptions\n-import com.azure.storage.blob.models.PublicAccessType\n-import com.azure.storage.blob.models.RehydratePriority\n-import com.azure.storage.blob.models.SyncCopyStatusType\n+import com.azure.storage.blob.models.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNjc2NA==", "bodyText": "fixed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12198#discussion_r440336764", "createdAt": "2020-06-15T17:34:31Z", "author": {"login": "gapra-msft"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/BlobAPITest.groovy", "diffHunk": "@@ -7,28 +7,7 @@ import com.azure.core.http.RequestConditions\n import com.azure.core.util.CoreUtils\n import com.azure.core.util.polling.LongRunningOperationStatus\n import com.azure.identity.DefaultAzureCredentialBuilder\n-import com.azure.identity.EnvironmentCredentialBuilder\n-import com.azure.storage.blob.models.AccessTier\n-import com.azure.storage.blob.models.ArchiveStatus\n-import com.azure.storage.blob.models.BlobBeginCopyOptions\n-import com.azure.storage.blob.models.BlobCopyFromUrlOptions\n-import com.azure.storage.blob.models.BlobErrorCode\n-import com.azure.storage.blob.models.BlobHttpHeaders\n-import com.azure.storage.blob.models.BlobRange\n-import com.azure.storage.blob.models.BlobRequestConditions\n-import com.azure.storage.blob.models.BlobStorageException\n-import com.azure.storage.blob.models.BlobType\n-import com.azure.storage.blob.models.BlockListType\n-import com.azure.storage.blob.models.CopyStatusType\n-import com.azure.storage.blob.models.CustomerProvidedKey\n-import com.azure.storage.blob.models.DeleteSnapshotsOptionType\n-import com.azure.storage.blob.models.DownloadRetryOptions\n-import com.azure.storage.blob.models.LeaseStateType\n-import com.azure.storage.blob.models.LeaseStatusType\n-import com.azure.storage.blob.models.ParallelTransferOptions\n-import com.azure.storage.blob.models.PublicAccessType\n-import com.azure.storage.blob.models.RehydratePriority\n-import com.azure.storage.blob.models.SyncCopyStatusType\n+import com.azure.storage.blob.models.*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTQyOQ=="}, "originalCommit": {"oid": "1c82c357757e9edc220710e2a8912df90b8b90be"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3836, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}