{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMjc1NTUx", "number": 7476, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOToyNTowM1rODYSSOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOToyNTowM1rODYSSOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzkxOTk1OnYy", "diffSide": "RIGHT", "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/specialized/BlockBlobAPITest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOToyNTowM1rOFeDs2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxOToyNTowM1rOFeDs2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA2MjIzMg==", "bodyText": "This can be simplified by using try-with-resources pattern:\nnew FileOutputStream(outFile).with { outStream ->\n      outStream.write(FluxUtil.collectBytesInByteBufferStream(blobAsyncClient.download()).block());\n}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7476#discussion_r367062232", "createdAt": "2020-01-15T19:25:03Z", "author": {"login": "srnagar"}, "path": "sdk/storage/azure-storage-blob/src/test/java/com/azure/storage/blob/specialized/BlockBlobAPITest.groovy", "diffHunk": "@@ -651,19 +648,20 @@ class BlockBlobAPITest extends APISpec {\n             .verifyComplete()\n \n         then:\n-        def outFile = file.getPath().toString() + \"result\"\n-        def outChannel = AsynchronousFileChannel.open(Paths.get(outFile), StandardOpenOption.CREATE,\n-            StandardOpenOption.WRITE)\n-        StepVerifier.create(FluxUtil.writeFile(blobAsyncClient.download(), outChannel)).verifyComplete()\n-        outChannel.close()\n+        def outFile = new File(file.getPath().toString() + \"result\")\n+        outFile.createNewFile()\n \n-        compareFiles(file, new File(outFile), 0, fileSize)\n+        def outStream = new FileOutputStream(outFile)\n+        outStream.write(FluxUtil.collectBytesInByteBufferStream(blobAsyncClient.download()).block())\n+        outStream.close()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f7c6e1b29f2918c1d9bb4fc0c85b63f76ca77c6"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 510, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}