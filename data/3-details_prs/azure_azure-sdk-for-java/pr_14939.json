{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDE1NjU2", "number": 14939, "title": "[Service Bus] Enable SAS support in connection string for Service Bus", "bodyText": "This PR adds support to include SharedAccessSignature token in the connection string.\nMore details and discussion can be found here: Azure/azure-sdk#1701\nThis is similar to the Event hubs PR - #14912", "createdAt": "2020-09-09T01:39:58Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939", "merged": true, "mergeCommit": {"oid": "ca756d50debd59c475dd90f026af9b05c3015a24"}, "closed": true, "closedAt": "2020-09-09T18:18:41Z", "author": {"login": "srnagar"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHCDrcAH2gAyNDgyNDE1NjU2OjU2OGVlMTdiNTUzNWIyMjM1YjRlYTQ4ODdjMmRmMGI2NWE2ZGQ0YWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHPts8AH2gAyNDgyNDE1NjU2OjRlN2YwM2FjNDFlNjIzYjMxMGM4YzQ1OTkwMTVmYmNkYzg4MTgxMTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "568ee17b5535b2235b4ea4887c2df0b65a6dd4aa", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/568ee17b5535b2235b4ea4887c2df0b65a6dd4aa", "committedDate": "2020-09-09T01:38:32Z", "message": "Enable SAS support in connection string for Service Bus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa6d0e08e997a28dc0501830004fdc9fd5ec5327", "committedDate": "2020-09-09T02:05:18Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NjUzNjY3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939#pullrequestreview-484653667", "createdAt": "2020-09-09T04:33:25Z", "commit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzAwNjY5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939#pullrequestreview-484700669", "createdAt": "2020-09-09T06:38:13Z", "commit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNjozODoxNFrOHO4u2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNjo1MTowMlrOHO5G1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MTYxMQ==", "bodyText": "Can we add one more example where user give bad date time format for example 202012-31T13:37:45Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939#discussion_r485371611", "createdAt": "2020-09-09T06:38:14Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ServiceBusSharedKeyCredentialTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.implementation;\n+\n+import com.azure.core.credential.TokenRequestContext;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import reactor.test.StepVerifier;\n+\n+import java.time.OffsetDateTime;\n+import java.util.stream.Stream;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+/**\n+ * Unit tests for {@link ServiceBusSharedKeyCredential}.\n+ */\n+public class ServiceBusSharedKeyCredentialTest {\n+\n+    @ParameterizedTest\n+    @MethodSource(\"getSas\")\n+    public void testSharedAccessSignatureCredential(String sas, OffsetDateTime expectedExpirationTime) {\n+        ServiceBusSharedKeyCredential serviceBusSharedKeyCredential = new ServiceBusSharedKeyCredential(sas);\n+        StepVerifier.create(serviceBusSharedKeyCredential.getToken(new TokenRequestContext().addScopes(\"sb://test\"\n+            + \"-entity.servicebus.windows.net/.default\")))\n+            .assertNext(token -> {\n+                assertNotNull(token.getToken());\n+                assertEquals(sas, token.getToken());\n+                assertEquals(expectedExpirationTime, token.getExpiresAt());\n+            })\n+            .verifyComplete();\n+    }\n+\n+    private static Stream<Arguments> getSas() {\n+        String validSas = \"SharedAccessSignature \"\n+            + \"sr=https%3A%2F%2Fentity-name.servicebus.windows.net%2F\"\n+            + \"&sig=encodedsignature%3D\"\n+            + \"&se=1599537084\"\n+            + \"&skn=test-sas-key\";\n+        String validSasWithNoExpirationTime = \"SharedAccessSignature \"\n+            + \"sr=https%3A%2F%2Fentity-name.servicebus.windows.net%2F\"\n+            + \"&sig=encodedsignature%3D\"\n+            + \"&skn=test-sas-key\";\n+        String validSasInvalidExpirationTimeFormat = \"SharedAccessSignature \"\n+            + \"sr=https%3A%2F%2Fentity-name.servicebus.windows.net%2F\"\n+            + \"&sig=encodedsignature%3D\"\n+            + \"&se=se=2020-12-31T13:37:45Z\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MjEyNg==", "bodyText": "What if user give a space, will it be valid  for example & se =1599537084 ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939#discussion_r485372126", "createdAt": "2020-09-09T06:39:16Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ServiceBusSharedKeyCredentialTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.messaging.servicebus.implementation;\n+\n+import com.azure.core.credential.TokenRequestContext;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import reactor.test.StepVerifier;\n+\n+import java.time.OffsetDateTime;\n+import java.util.stream.Stream;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+/**\n+ * Unit tests for {@link ServiceBusSharedKeyCredential}.\n+ */\n+public class ServiceBusSharedKeyCredentialTest {\n+\n+    @ParameterizedTest\n+    @MethodSource(\"getSas\")\n+    public void testSharedAccessSignatureCredential(String sas, OffsetDateTime expectedExpirationTime) {\n+        ServiceBusSharedKeyCredential serviceBusSharedKeyCredential = new ServiceBusSharedKeyCredential(sas);\n+        StepVerifier.create(serviceBusSharedKeyCredential.getToken(new TokenRequestContext().addScopes(\"sb://test\"\n+            + \"-entity.servicebus.windows.net/.default\")))\n+            .assertNext(token -> {\n+                assertNotNull(token.getToken());\n+                assertEquals(sas, token.getToken());\n+                assertEquals(expectedExpirationTime, token.getExpiresAt());\n+            })\n+            .verifyComplete();\n+    }\n+\n+    private static Stream<Arguments> getSas() {\n+        String validSas = \"SharedAccessSignature \"\n+            + \"sr=https%3A%2F%2Fentity-name.servicebus.windows.net%2F\"\n+            + \"&sig=encodedsignature%3D\"\n+            + \"&se=1599537084\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3Nzc0OQ==", "bodyText": "Should we log here in case of logger.verbose(\"Could not parse .... \") to give user information that something might be wrong in their string and they have a chance to fix the formatting issue in their string?  But at same time, we do not want to fill logs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14939#discussion_r485377749", "createdAt": "2020-09-09T06:51:02Z", "author": {"login": "hemanttanwar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusSharedKeyCredential.java", "diffHunk": "@@ -155,4 +182,22 @@ private AccessToken generateSharedAccessSignature(final String resource) throws\n \n         return new AccessToken(token, expiresOn);\n     }\n+\n+    private OffsetDateTime getExpirationTime(String sharedAccessSignature) {\n+        String[] parts = sharedAccessSignature.split(\"&\");\n+        return Arrays.stream(parts)\n+            .map(part -> part.split(\"=\"))\n+            .filter(pair -> pair.length == 2 && pair[0].equalsIgnoreCase(\"se\"))\n+            .findFirst()\n+            .map(pair -> pair[1])\n+            .map(expirationTimeStr -> {\n+                try {\n+                    long epochSeconds = Long.parseLong(expirationTimeStr);\n+                    return Instant.ofEpochSecond(epochSeconds).atOffset(ZoneOffset.UTC);\n+                } catch (NumberFormatException exception) {\n+                    return OffsetDateTime.MAX;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa6d0e08e997a28dc0501830004fdc9fd5ec5327"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e7f03ac41e623b310c8c4599015fbcdc8818119", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4e7f03ac41e623b310c8c4599015fbcdc8818119", "committedDate": "2020-09-09T17:33:12Z", "message": "Add logs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3692, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}