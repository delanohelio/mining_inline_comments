{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjYwNDk3", "number": 12050, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNTo1M1rOEEdpjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNjowOFrOEEdp1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTE1NTMzOnYy", "diffSide": "LEFT", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ParallelTransferOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNTo1M1rOGiGmGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNTo1M1rOGiGmGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjgyNA==", "bodyText": "This was introduced in STG73 so can be just removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12050#discussion_r438412824", "createdAt": "2020-06-10T21:15:53Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/ParallelTransferOptions.java", "diffHunk": "@@ -129,20 +129,6 @@ public Integer getNumBuffers() {\n         return this.maxConcurrency;\n     }\n \n-    /**\n-     * For buffered upload only. Sets the number of buffers is the maximum number of buffers this method\n-     * should allocate. Memory will be allocated lazily as needed. Must be at least two. Typically, the larger the\n-     * number of buffers, the more parallel, and thus faster, the upload portion  of this operation will be.\n-     * The amount of memory consumed by methods using this value may be up to blockSize * numBuffers.\n-     *\n-     * @param numBuffers The number of buffers.\n-     * @return The ParallelTransferOptions object itself.\n-     * @deprecated Use #se\n-     */\n-    public ParallelTransferOptions setNumBuffers(Integer numBuffers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9edf600ab15e1807008efe4c03cd913c0eafb0b2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTE1NjA2OnYy", "diffSide": "LEFT", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/ParallelTransferOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNjowOFrOGiGmkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxNjowOFrOGiGmkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjk0Ng==", "bodyText": "This was introduced in STG73 so can be just removed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12050#discussion_r438412946", "createdAt": "2020-06-10T21:16:08Z", "author": {"login": "kasobol-msft"}, "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/ParallelTransferOptions.java", "diffHunk": "@@ -107,21 +107,6 @@ public Integer getNumBuffers() {\n         return this.maxConcurrency;\n     }\n \n-    /**\n-     * For buffered upload only, the number of buffers is the maximum number of buffers this method\n-     * should allocate. Memory will be allocated lazily as needed. Must be at least two. Typically, the larger the\n-     * number of buffers, the more parallel, and thus faster, the upload portion  of this operation will be.\n-     * The amount of memory consumed by methods using this value may be up to blockSize * numBuffers.\n-     *\n-     * @param numBuffers The number of buffers.\n-     * @return The ParallelTransferOptions object itself.\n-     * @deprecated Use {@link #setMaxConcurrency(Integer)}\n-     */\n-    @Deprecated\n-    public ParallelTransferOptions setNumBuffers(Integer numBuffers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9edf600ab15e1807008efe4c03cd913c0eafb0b2"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3938, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}