{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NTY5NDk3", "number": 14723, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTowNDowM1rOEfPMxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozNTozMVrOEfia8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTkwMzQwOnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/fluent/inner/QueueResourceInner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTowNDowM1rOHLYlTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTowNDowM1rOHLYlTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY5OTE1MQ==", "bodyText": "Manual changes from extends ProxyResource to extends Resource as the Impl class requires <? extends Resource>. The tags of Resource would not expose to end users by restricting fluent interfaces stages.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r481699151", "createdAt": "2020-09-02T05:04:03Z", "author": {"login": "xseeseesee"}, "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/fluent/inner/QueueResourceInner.java", "diffHunk": "@@ -0,0 +1,605 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.servicebus.fluent.inner;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.annotation.JsonFlatten;\n+import com.azure.core.management.Resource;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.servicebus.models.EntityAvailabilityStatus;\n+import com.azure.resourcemanager.servicebus.models.EntityStatus;\n+import com.azure.resourcemanager.servicebus.models.MessageCountDetails;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.time.OffsetDateTime;\n+\n+/** The QueueResource model. */\n+@JsonFlatten\n+@Fluent\n+public class QueueResourceInner extends Resource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c5e42d188f894503bc732050441aac13667976"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTkxNzM1OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTowNjoyM1rOHLYumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNTowNjoyM1rOHLYumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcwMTUyOA==", "bodyText": "Rewrite this class as moving from joda.time to java.time.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r481701528", "createdAt": "2020-09-02T05:06:23Z", "author": {"login": "xseeseesee"}, "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "diffHunk": "@@ -0,0 +1,450 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.servicebus.implementation;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+\n+/**\n+ * Represents a time interval.\n+ */\n+public class TimeSpan {\n+    private static long ticksPerMillisecond = 10000;\n+    private static long ticksPerSecond = ticksPerMillisecond * 1000;\n+    private static long ticksPerMinute = ticksPerSecond * 60;\n+    private static long ticksPerHour = ticksPerMinute * 60;\n+    private static long ticksPerDay = ticksPerHour * 24;\n+    private static double millisecondsPerTick = 1.0 / ticksPerMillisecond;\n+    private static double secondsPerTick = 1.0 / ticksPerSecond;\n+    private static double minutesPerTick = 1.0 / ticksPerMinute;\n+\n+    private long days;\n+    private long hours;\n+    private long minutes;\n+    private long seconds;\n+    private long milliseconds;\n+\n+    /**\n+     * Creates TimeSpan.\n+     */\n+    public TimeSpan() {\n+    }\n+\n+    /**\n+     * Specifies the number of days.\n+     *\n+     * @param days number of days\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withDays(final long days) {\n+        this.days = days;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of hours.\n+     *\n+     * @param hours number of hours\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withHours(final long hours) {\n+        this.hours = hours;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of minutes.\n+     *\n+     * @param minutes number of minutes\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMinutes(final long minutes) {\n+        this.minutes = minutes;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of seconds.\n+     *\n+     * @param seconds number of seconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withSeconds(final long seconds) {\n+        this.seconds = seconds;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of milliseconds.\n+     *\n+     * @param milliseconds number of milliseconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMilliseconds(final long milliseconds) {\n+        this.milliseconds = milliseconds;\n+        return this;\n+    }\n+\n+    /**\n+     * @return days value\n+     */\n+    public long days() {\n+        return this.days;\n+    }\n+\n+    /**\n+     * @return hours value\n+     */\n+    public long hours() {\n+        return this.hours;\n+    }\n+\n+    /**\n+     * @return minutes value\n+     */\n+    public long minutes() {\n+        return this.minutes;\n+    }\n+\n+    /**\n+     * @return seconds value\n+     */\n+    public long seconds() {\n+        return this.seconds;\n+    }\n+\n+    /**\n+     * @return mill-seconds value\n+     */\n+    public long milliseconds() {\n+        return this.milliseconds;\n+    }\n+\n+    /**\n+     * @return total number of milliseconds represented by this instance\n+     */\n+    public double totalMilliseconds() {\n+        return totalTicks() * millisecondsPerTick;\n+    }\n+\n+    /**\n+     * @return total number of milliseconds represented by this instance in duration format\n+     */\n+    public Duration totalMillisDuration() {\n+        Double millis = Double.valueOf(totalMilliseconds());\n+        return Duration.ofMillis(millis.longValue());\n+    }\n+\n+    /**\n+     * @return total number of seconds represented by this instance\n+     */\n+    public double totalSeconds() {\n+        return totalTicks() * secondsPerTick;\n+    }\n+\n+    /**\n+     * @return total number of minutes represented by this instance\n+     */\n+    public double totalMinutes() {\n+        return totalTicks() * minutesPerTick;\n+    }\n+\n+    /**\n+     * Gets TimeSpan from given duration.\n+     *\n+     * @param duration duration\n+     * @return TimeSpan\n+     */\n+    public static TimeSpan fromDuration(Duration duration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c5e42d188f894503bc732050441aac13667976"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjI0MDI3OnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjowMTo1MlrOHLcE5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjowMTo1MlrOHLcE5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1NjM5MQ==", "bodyText": "milli?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r481756391", "createdAt": "2020-09-02T06:01:52Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "diffHunk": "@@ -0,0 +1,450 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.servicebus.implementation;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+\n+/**\n+ * Represents a time interval.\n+ */\n+public class TimeSpan {\n+    private static long ticksPerMillisecond = 10000;\n+    private static long ticksPerSecond = ticksPerMillisecond * 1000;\n+    private static long ticksPerMinute = ticksPerSecond * 60;\n+    private static long ticksPerHour = ticksPerMinute * 60;\n+    private static long ticksPerDay = ticksPerHour * 24;\n+    private static double millisecondsPerTick = 1.0 / ticksPerMillisecond;\n+    private static double secondsPerTick = 1.0 / ticksPerSecond;\n+    private static double minutesPerTick = 1.0 / ticksPerMinute;\n+\n+    private long days;\n+    private long hours;\n+    private long minutes;\n+    private long seconds;\n+    private long milliseconds;\n+\n+    /**\n+     * Creates TimeSpan.\n+     */\n+    public TimeSpan() {\n+    }\n+\n+    /**\n+     * Specifies the number of days.\n+     *\n+     * @param days number of days\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withDays(final long days) {\n+        this.days = days;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of hours.\n+     *\n+     * @param hours number of hours\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withHours(final long hours) {\n+        this.hours = hours;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of minutes.\n+     *\n+     * @param minutes number of minutes\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMinutes(final long minutes) {\n+        this.minutes = minutes;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of seconds.\n+     *\n+     * @param seconds number of seconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withSeconds(final long seconds) {\n+        this.seconds = seconds;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of milliseconds.\n+     *\n+     * @param milliseconds number of milliseconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMilliseconds(final long milliseconds) {\n+        this.milliseconds = milliseconds;\n+        return this;\n+    }\n+\n+    /**\n+     * @return days value\n+     */\n+    public long days() {\n+        return this.days;\n+    }\n+\n+    /**\n+     * @return hours value\n+     */\n+    public long hours() {\n+        return this.hours;\n+    }\n+\n+    /**\n+     * @return minutes value\n+     */\n+    public long minutes() {\n+        return this.minutes;\n+    }\n+\n+    /**\n+     * @return seconds value\n+     */\n+    public long seconds() {\n+        return this.seconds;\n+    }\n+\n+    /**\n+     * @return mill-seconds value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c5e42d188f894503bc732050441aac13667976"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjI1NjMzOnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjowNDo0MVrOHLcP9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjowNDo0MVrOHLcP9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1OTIyMA==", "bodyText": "Duration is just Duration. It is about time, not about unit. Maybe just toDuration()?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r481759220", "createdAt": "2020-09-02T06:04:41Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "diffHunk": "@@ -0,0 +1,450 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.servicebus.implementation;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+\n+/**\n+ * Represents a time interval.\n+ */\n+public class TimeSpan {\n+    private static long ticksPerMillisecond = 10000;\n+    private static long ticksPerSecond = ticksPerMillisecond * 1000;\n+    private static long ticksPerMinute = ticksPerSecond * 60;\n+    private static long ticksPerHour = ticksPerMinute * 60;\n+    private static long ticksPerDay = ticksPerHour * 24;\n+    private static double millisecondsPerTick = 1.0 / ticksPerMillisecond;\n+    private static double secondsPerTick = 1.0 / ticksPerSecond;\n+    private static double minutesPerTick = 1.0 / ticksPerMinute;\n+\n+    private long days;\n+    private long hours;\n+    private long minutes;\n+    private long seconds;\n+    private long milliseconds;\n+\n+    /**\n+     * Creates TimeSpan.\n+     */\n+    public TimeSpan() {\n+    }\n+\n+    /**\n+     * Specifies the number of days.\n+     *\n+     * @param days number of days\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withDays(final long days) {\n+        this.days = days;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of hours.\n+     *\n+     * @param hours number of hours\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withHours(final long hours) {\n+        this.hours = hours;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of minutes.\n+     *\n+     * @param minutes number of minutes\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMinutes(final long minutes) {\n+        this.minutes = minutes;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of seconds.\n+     *\n+     * @param seconds number of seconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withSeconds(final long seconds) {\n+        this.seconds = seconds;\n+        return this;\n+    }\n+\n+    /**\n+     * Specifies the number of milliseconds.\n+     *\n+     * @param milliseconds number of milliseconds\n+     * @return TimeSpan\n+     */\n+    public TimeSpan withMilliseconds(final long milliseconds) {\n+        this.milliseconds = milliseconds;\n+        return this;\n+    }\n+\n+    /**\n+     * @return days value\n+     */\n+    public long days() {\n+        return this.days;\n+    }\n+\n+    /**\n+     * @return hours value\n+     */\n+    public long hours() {\n+        return this.hours;\n+    }\n+\n+    /**\n+     * @return minutes value\n+     */\n+    public long minutes() {\n+        return this.minutes;\n+    }\n+\n+    /**\n+     * @return seconds value\n+     */\n+    public long seconds() {\n+        return this.seconds;\n+    }\n+\n+    /**\n+     * @return mill-seconds value\n+     */\n+    public long milliseconds() {\n+        return this.milliseconds;\n+    }\n+\n+    /**\n+     * @return total number of milliseconds represented by this instance\n+     */\n+    public double totalMilliseconds() {\n+        return totalTicks() * millisecondsPerTick;\n+    }\n+\n+    /**\n+     * @return total number of milliseconds represented by this instance in duration format\n+     */\n+    public Duration totalMillisDuration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c5e42d188f894503bc732050441aac13667976"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzIyMjQxOnYy", "diffSide": "RIGHT", "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowOTowNVrOHLmEXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOTowOTowNVrOHLmEXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyMDA5Mg==", "bodyText": "javadoc also need a bit change?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r481920092", "createdAt": "2020-09-02T09:09:05Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resourcemanager/azure-resourcemanager-servicebus/src/main/java/com/azure/resourcemanager/servicebus/implementation/TimeSpan.java", "diffHunk": "@@ -133,7 +133,7 @@ public double totalMilliseconds() {\n     /**\n      * @return total number of milliseconds represented by this instance in duration format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e044628afe915cb52b74be896db7164c94af2e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTA1MjY0OnYy", "diffSide": "RIGHT", "path": "eng/versioning/version_client.txt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjozNTozMVrOHL3pNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjoyMToxOVrOHMTA9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwODA1Mw==", "bodyText": "This is starting at 2.0.0-beta.4 because the package under the com.microsoft group left off at 2.0.0-beta.3?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r482208053", "createdAt": "2020-09-02T16:35:31Z", "author": {"login": "alzimmermsft"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -83,6 +83,7 @@ com.azure.resourcemanager:azure-resourcemanager-privatedns;2.0.0-beta.4;2.0.0-be\n com.azure.resourcemanager:azure-resourcemanager-resources;2.0.0-beta.3;2.0.0-beta.4\n com.azure.resourcemanager:azure-resourcemanager-redis;2.0.0-beta.3;2.0.0-beta.4\n com.azure.resourcemanager:azure-resourcemanager-samples;2.0.0-beta.3;2.0.0-beta.4\n+com.azure.resourcemanager:azure-resourcemanager-servicebus;2.0.0-beta.4;2.0.0-beta.4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e044628afe915cb52b74be896db7164c94af2e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY1NjUwMg==", "bodyText": "It's because we have a centralized package azure-resourcemanager. All the supported services named as azure-resourcemanager-{serviceName} would have same version. So for newly added one, it will have the same version defined in current version.\nMeanwhile, in azure-resourcemanager we just wrap all services into azure client so that the users could access them more conveniently.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14723#discussion_r482656502", "createdAt": "2020-09-03T02:21:19Z", "author": {"login": "xseeseesee"}, "path": "eng/versioning/version_client.txt", "diffHunk": "@@ -83,6 +83,7 @@ com.azure.resourcemanager:azure-resourcemanager-privatedns;2.0.0-beta.4;2.0.0-be\n com.azure.resourcemanager:azure-resourcemanager-resources;2.0.0-beta.3;2.0.0-beta.4\n com.azure.resourcemanager:azure-resourcemanager-redis;2.0.0-beta.3;2.0.0-beta.4\n com.azure.resourcemanager:azure-resourcemanager-samples;2.0.0-beta.3;2.0.0-beta.4\n+com.azure.resourcemanager:azure-resourcemanager-servicebus;2.0.0-beta.4;2.0.0-beta.4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIwODA1Mw=="}, "originalCommit": {"oid": "06e044628afe915cb52b74be896db7164c94af2e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1398, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}