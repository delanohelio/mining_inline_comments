{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NzU0MjU5", "number": 12456, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozMTowN1rOEIGxCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0OTowN1rOEINTDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTM0OTIyOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozMTowN1rOGn3lKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowMDoyMVrOGn4gLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1ODI4MA==", "bodyText": "This is implementation code, do we still need to use @Deprecated or could we remove it instead?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444458280", "createdAt": "2020-06-23T19:31:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java", "diffHunk": "@@ -8,11 +8,11 @@\n     public static final String PLATFORM_INFO = getOSInformation();\n     public static final String FRAMEWORK_INFO = getFrameworkInfo();\n \n-    /**\n+    /*\n      * Gets the USER AGENT string as defined in:\n      * $/core/azure-core/src/main/java/com/azure/core/http/policy/UserAgentPolicy.java\n-     * TODO (conniey): Extract logic from UserAgentPolicy into something we can use here.\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3MzM4OQ==", "bodyText": "We shouldn't need Deprecated because it's not part of our API surface area.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444473389", "createdAt": "2020-06-23T20:00:21Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java", "diffHunk": "@@ -8,11 +8,11 @@\n     public static final String PLATFORM_INFO = getOSInformation();\n     public static final String FRAMEWORK_INFO = getFrameworkInfo();\n \n-    /**\n+    /*\n      * Gets the USER AGENT string as defined in:\n      * $/core/azure-core/src/main/java/com/azure/core/http/policy/UserAgentPolicy.java\n-     * TODO (conniey): Extract logic from UserAgentPolicy into something we can use here.\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1ODI4MA=="}, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTM1NjQwOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozMzoxOFrOGn3prg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMTowNzo1NlrOGn6s0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1OTQzOA==", "bodyText": "Does this utility class resolve this issue? #7549", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444459438", "createdAt": "2020-06-23T19:33:18Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTM5Mg==", "bodyText": "Yes, I had not seen this issue earlier but I think this PR will address this issue too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444509392", "createdAt": "2020-06-23T21:07:56Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1OTQzOA=="}, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTM2NzUzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozNzowN1rOGn3w-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozNzowN1rOGn3w-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MTMwNQ==", "bodyText": "Thoughts on removing the Configuration-less APIs? If we need to extend these in the future to also add a property such as String features there would be the need for many additional APIs. Also, right now these additional APIs are only an internal convenience which we could handle with internal code.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444461305", "createdAt": "2020-06-23T19:37:07Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTM3MDAxOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozNzo0OVrOGn3yew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozNzo0OVrOGn3yew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MTY5MQ==", "bodyText": "Thoughts on only offering this API to begin? Would be trivial to add reduced parameter overloads but can't remove them once they are shipped.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444461691", "createdAt": "2020-06-23T19:37:49Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTM3NjE4OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozOTo1NFrOGn32WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozOTo1NFrOGn32WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MjY4MQ==", "bodyText": "Should we remove the String.format and handle appending into the StringBuilder to match the format.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444462681", "createdAt": "2020-06-23T19:39:54Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        StringBuilder userAgentBuilder = new StringBuilder();\n+\n+        // Only add the application ID if it is present as it is optional.\n+        if (applicationId != null) {\n+            applicationId = applicationId.length() > 24 ? applicationId.substring(0, 24) : applicationId;\n+            userAgentBuilder.append(applicationId).append(\" \");\n+        }\n+\n+        // Add the required default User-Agent string.\n+        userAgentBuilder.append(String.format(DEFAULT_USER_AGENT_FORMAT, sdkName, sdkVersion));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTQ1NjE5OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowNTo0NFrOGn4qgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowNTo0NFrOGn4qgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjAzMg==", "bodyText": "Can 24 be made into a private constant? So if we need to change it, we can without missing a place. Also, how did we come up with 24? :)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444476032", "createdAt": "2020-06-23T20:05:44Z", "author": {"login": "conniey"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        StringBuilder userAgentBuilder = new StringBuilder();\n+\n+        // Only add the application ID if it is present as it is optional.\n+        if (applicationId != null) {\n+            applicationId = applicationId.length() > 24 ? applicationId.substring(0, 24) : applicationId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38da357fdde95848fa1517d1393a6562511ed06d"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQxOTMzOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/UserAgentUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0OTowN1rOGoB_Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDoyNDowOVrOGoCeCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODc2Nw==", "bodyText": "Should this print 'null/null' or just be empty strings?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444628767", "createdAt": "2020-06-24T03:49:07Z", "author": {"login": "JonathanGiles"}, "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/UserAgentUtilTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Unit tests for {@link UserAgentUtil}.\n+ */\n+public class UserAgentUtilTest {\n+\n+    @Test\n+    void testUserAgentStringFormat() {\n+        String javaVersion = System.getProperty(\"java.version\");\n+        String osName = System.getProperty(\"os.name\");\n+        String osVersion = System.getProperty(\"os.version\");\n+        String plaform = new StringBuilder().append(\"(\")\n+            .append(javaVersion).append(\"; \")\n+            .append(osName).append(\"; \")\n+            .append(osVersion).append(\")\")\n+            .toString();\n+\n+        // with platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\", null));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // without platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+\n+        // long app id should be truncated\n+        assertEquals(\"ReallyLongApplicationIde azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"ReallyLongApplicationIdentity\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // null sdk name and version\n+        assertEquals(\"myapp azsdk-java-null/null \" + plaform,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d398a11b7cc90fbe72940a1dd7c321e5bba271"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNjY4Mw==", "bodyText": "This is the existing format and it might be useful in doing a regex match to extract fields from the user agent string.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444636683", "createdAt": "2020-06-24T04:24:09Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/UserAgentUtilTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Unit tests for {@link UserAgentUtil}.\n+ */\n+public class UserAgentUtilTest {\n+\n+    @Test\n+    void testUserAgentStringFormat() {\n+        String javaVersion = System.getProperty(\"java.version\");\n+        String osName = System.getProperty(\"os.name\");\n+        String osVersion = System.getProperty(\"os.version\");\n+        String plaform = new StringBuilder().append(\"(\")\n+            .append(javaVersion).append(\"; \")\n+            .append(osName).append(\"; \")\n+            .append(osVersion).append(\")\")\n+            .toString();\n+\n+        // with platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\", null));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // without platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+\n+        // long app id should be truncated\n+        assertEquals(\"ReallyLongApplicationIde azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"ReallyLongApplicationIdentity\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // null sdk name and version\n+        assertEquals(\"myapp azsdk-java-null/null \" + plaform,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODc2Nw=="}, "originalCommit": {"oid": "f6d398a11b7cc90fbe72940a1dd7c321e5bba271"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3726, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}