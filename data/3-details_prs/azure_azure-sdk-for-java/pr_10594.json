{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTI1NTkx", "number": 10594, "title": "Fixes backpressure for AmqpReceiveLink and Service Bus equivalent", "bodyText": "Previously, we did not take into account backpressure properly and would continue to emit even after the requested number was satisfied. In this model, if the value is Long.MAX_VALUE, there is no back pressure and we always add credits to the link. Otherwise, we will only add the requested amount.\nCloses the reactor connection on close\nFixes ClaimsBasedChannel to properly check the error status on unsuccessful authorization.\n\nFixes #10520\nFixes #9792", "createdAt": "2020-04-29T06:55:30Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10594", "merged": true, "mergeCommit": {"oid": "4882f41a096514aeea47d1d45400c1e72a121787"}, "closed": true, "closedAt": "2020-04-30T01:13:25Z", "author": {"login": "conniey"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccSnfLgH2gAyNDEwNTI1NTkxOjMwYmVlODc4ZjY0MDVlNzEwNWI5ZjY5OTk0NWRlMDRkMGVhYmVjOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcchmgIgH2gAyNDEwNTI1NTkxOjdlYmY2MWE0YjIzODQ1MzEwNmFmMjE4ZjYyMTE1MmViNTRjOWQ1NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "30bee878f6405e7105b9f699945de04d0eabec99", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/30bee878f6405e7105b9f699945de04d0eabec99", "committedDate": "2020-04-29T06:37:23Z", "message": "Adding support for backpressure and tests in Event Hubs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1045d0e395969f6d887b1d67ef29fcb265b19e7", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c1045d0e395969f6d887b1d67ef29fcb265b19e7", "committedDate": "2020-04-29T06:37:32Z", "message": "Adding support for backpressure and tests in Service Bus."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9799dc34864e2616a0e471aefd8977b9da3c8fac", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9799dc34864e2616a0e471aefd8977b9da3c8fac", "committedDate": "2020-04-29T06:52:07Z", "message": "Adding delay for tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ea0f41c3ef7059e531ff45f6a4295efe94a3b96", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1ea0f41c3ef7059e531ff45f6a4295efe94a3b96", "committedDate": "2020-04-29T07:56:20Z", "message": "Fixing cancellation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0471b89496bd022a568a2ba1013c9d50e4cf7cba", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0471b89496bd022a568a2ba1013c9d50e4cf7cba", "committedDate": "2020-04-29T07:56:44Z", "message": "Fixing cancellation for Service Bus."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69a2cfb3755fb0755a2d70264fb6e8b0430efdf", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e69a2cfb3755fb0755a2d70264fb6e8b0430efdf", "committedDate": "2020-04-29T17:21:56Z", "message": "Fixes reactor connection to close. Also fixes verification on CBS node."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93558d96e904f0e6bb217274b52fdd0f30388346", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/93558d96e904f0e6bb217274b52fdd0f30388346", "committedDate": "2020-04-29T17:23:20Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "706af29349de0631b4ff8d32a0df565cd434c895", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/706af29349de0631b4ff8d32a0df565cd434c895", "committedDate": "2020-04-29T17:34:33Z", "message": "Cleaning up."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyOTIzMTU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10594#pullrequestreview-402923158", "createdAt": "2020-04-29T18:19:32Z", "commit": {"oid": "706af29349de0631b4ff8d32a0df565cd434c895"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODoxOTozMlrOGOLT2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODozOTozM1rOGOMBwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxODU1Mg==", "bodyText": "This didn't have to change. The error message should use the name of the param instead of the instance variable name.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10594#discussion_r417518552", "createdAt": "2020-04-29T18:19:32Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClaimsBasedSecurityChannel.java", "diffHunk": "@@ -37,7 +45,7 @@ public ClaimsBasedSecurityChannel(Mono<RequestResponseChannel> responseChannelMo\n         this.authorizationType = Objects.requireNonNull(authorizationType, \"'authorizationType' cannot be null.\");\n         this.retryOptions = Objects.requireNonNull(retryOptions, \"'retryOptions' cannot be null.\");\n         this.credential = Objects.requireNonNull(tokenCredential, \"'tokenCredential' cannot be null.\");\n-        this.cbsChannelMono = Objects.requireNonNull(responseChannelMono, \"'responseChannelMono' cannot be null.\");\n+        this.cbsChannelMono = Objects.requireNonNull(responseChannelMono, \"'cbsChannelMono' cannot be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "706af29349de0631b4ff8d32a0df565cd434c895"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyOTYyOA==", "bodyText": "Can we use AtomicReference here instead of AtomicReferenceFieldUpdater? I don't think we'll have too many instances of AmqpReceiveLinkProcessor for memory being an issue. The reflection-based update can cause issues if the name of the volatile var is changed and the field updater is not updated.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10594#discussion_r417529628", "createdAt": "2020-04-29T18:38:19Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/implementation/AmqpReceiveLinkProcessor.java", "diffHunk": "@@ -25,40 +24,50 @@\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;\n+import java.util.concurrent.atomic.AtomicLongFieldUpdater;\n+import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n \n /**\n  * Processes AMQP receive links into a stream of AMQP messages.\n  */\n public class AmqpReceiveLinkProcessor extends FluxProcessor<AmqpReceiveLink, Message> implements Subscription {\n-    // We don't want to dump too many credits on the link at once. It's easy enough to ask for more.\n-    private static final int MINIMUM_REQUEST = 0;\n-    private static final int MAXIMUM_REQUEST = 100;\n-\n     private final ClientLogger logger = new ClientLogger(AmqpReceiveLinkProcessor.class);\n     private final Object lock = new Object();\n     private final AtomicBoolean isTerminated = new AtomicBoolean();\n-    private final AtomicBoolean hasDownstream = new AtomicBoolean();\n     private final AtomicInteger retryAttempts = new AtomicInteger();\n-    private final AtomicInteger linkCreditRequest = new AtomicInteger(1);\n     private final Deque<Message> messageQueue = new ConcurrentLinkedDeque<>();\n+    private final AtomicBoolean hasFirstLink = new AtomicBoolean();\n+    private final AtomicBoolean linkCreditsAdded = new AtomicBoolean();\n \n     private final int prefetch;\n     private final AmqpRetryPolicy retryPolicy;\n-    private Disposable parentConnection;\n-\n-    private volatile Subscription upstream;\n-    private volatile CoreSubscriber<? super Message> downstream;\n-    private volatile boolean isCancelled;\n+    private final Disposable parentConnection;\n \n     private volatile Throwable lastError;\n+    private volatile boolean isCancelled;\n     private volatile AmqpReceiveLink currentLink;\n     private volatile Disposable currentLinkSubscriptions;\n     private volatile Disposable retrySubscription;\n \n-    volatile int wip;\n-    static final AtomicIntegerFieldUpdater<AmqpReceiveLinkProcessor> WIP =\n+    private volatile CoreSubscriber<? super Message> downstream;\n+    @SuppressWarnings(\"rawtypes\")\n+    private static final AtomicReferenceFieldUpdater<AmqpReceiveLinkProcessor, CoreSubscriber> DOWNSTREAM =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "706af29349de0631b4ff8d32a0df565cd434c895"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUzMDMwNQ==", "bodyText": "Same here - prefer to use AtomicReference.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10594#discussion_r417530305", "createdAt": "2020-04-29T18:39:33Z", "author": {"login": "srnagar"}, "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReceiveLinkProcessor.java", "diffHunk": "@@ -14,47 +14,69 @@\n import reactor.core.CoreSubscriber;\n import reactor.core.Disposable;\n import reactor.core.Disposables;\n+import reactor.core.Exceptions;\n import reactor.core.publisher.FluxProcessor;\n import reactor.core.publisher.Mono;\n import reactor.core.publisher.Operators;\n import reactor.core.scheduler.Schedulers;\n \n import java.time.Duration;\n+import java.util.Deque;\n import java.util.Objects;\n+import java.util.concurrent.ConcurrentLinkedDeque;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;\n+import java.util.concurrent.atomic.AtomicLongFieldUpdater;\n+import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n \n import static com.azure.core.util.FluxUtil.monoError;\n \n /**\n  * Processes AMQP receive links into a stream of AMQP messages.\n+ *\n+ * This is almost a carbon copy of AmqpReceiveLinkProcessor. When we can abstract it from proton-j, it would be nice to\n+ * unify this.\n  */\n public class ServiceBusReceiveLinkProcessor extends FluxProcessor<AmqpReceiveLink, Message> implements Subscription {\n-    // We don't want to dump too many credits on the link at once. It's easy enough to ask for more.\n-    private static final int MINIMUM_REQUEST = 0;\n-    private static final int MAXIMUM_REQUEST = 100;\n-\n     private final ClientLogger logger = new ClientLogger(ServiceBusReceiveLinkProcessor.class);\n     private final Object lock = new Object();\n     private final AtomicBoolean isTerminated = new AtomicBoolean();\n-    private final AtomicBoolean hasDownstream = new AtomicBoolean();\n     private final AtomicInteger retryAttempts = new AtomicInteger();\n-    private final AtomicBoolean isRequested = new AtomicBoolean();\n-    private final AtomicInteger linkCreditRequest = new AtomicInteger(1);\n+    private final Deque<Message> messageQueue = new ConcurrentLinkedDeque<>();\n+    private final AtomicBoolean hasFirstLink = new AtomicBoolean();\n+    private final AtomicBoolean linkCreditsAdded = new AtomicBoolean();\n \n     private final int prefetch;\n     private final AmqpRetryPolicy retryPolicy;\n-    private Disposable parentConnection;\n+    private final Disposable parentConnection;\n     private final AmqpErrorContext errorContext;\n \n-    private volatile Subscription upstream;\n-    private volatile CoreSubscriber<? super Message> downstream;\n-\n     private volatile Throwable lastError;\n+    private volatile boolean isCancelled;\n     private volatile AmqpReceiveLink currentLink;\n     private volatile Disposable currentLinkSubscriptions;\n     private volatile Disposable retrySubscription;\n \n+    private volatile CoreSubscriber<? super Message> downstream;\n+    @SuppressWarnings(\"rawtypes\")\n+    private static final AtomicReferenceFieldUpdater<ServiceBusReceiveLinkProcessor, CoreSubscriber> DOWNSTREAM =\n+        AtomicReferenceFieldUpdater.newUpdater(ServiceBusReceiveLinkProcessor.class, CoreSubscriber.class,\n+            \"downstream\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "706af29349de0631b4ff8d32a0df565cd434c895"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49cf0ebdd3a98428b7e7fc509e7155789fe4c17c", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/49cf0ebdd3a98428b7e7fc509e7155789fe4c17c", "committedDate": "2020-04-29T19:36:51Z", "message": "Fix consumption downstream."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c960a9055ce1a312292ea49eb38bfedfa1ab408b", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c960a9055ce1a312292ea49eb38bfedfa1ab408b", "committedDate": "2020-04-29T20:01:42Z", "message": "Replacing with AtomicReferences."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c95fa03d5412b0683cd83a924889099389002c0", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c95fa03d5412b0683cd83a924889099389002c0", "committedDate": "2020-04-29T20:07:27Z", "message": "Fix name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a7fe5ecf0cff41c34e550146544f9ee1b7165b7", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a7fe5ecf0cff41c34e550146544f9ee1b7165b7", "committedDate": "2020-04-29T21:53:13Z", "message": "Fix broken tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de1c0cfaa5d45b362b9283e91257562c4593fb2", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3de1c0cfaa5d45b362b9283e91257562c4593fb2", "committedDate": "2020-04-29T23:33:56Z", "message": "Fixing imports."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ebf61a4b238453106af218f621152eb54c9d572", "author": {"user": {"login": "conniey", "name": "Connie Yau"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ebf61a4b238453106af218f621152eb54c9d572", "committedDate": "2020-04-30T00:04:53Z", "message": "Fixing test case."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4642, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}