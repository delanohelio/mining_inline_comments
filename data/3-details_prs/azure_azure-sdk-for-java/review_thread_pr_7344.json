{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTgxMzE2", "number": 7344, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOToxMzozOFrODXPxew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo1MDo0MVrODYW4AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzAyMjY3OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/test-resources.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOToxMzozOFrOFcdixw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQyMDozMjoxNVrOFcq-xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4ODQ4Nw==", "bodyText": "Is this expected to be under sdk/eventhubs? Should this be under a specific module? For e.g. sdk/eventhubs/azure-messaging-eventhubs?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r365388487", "createdAt": "2020-01-10T19:13:38Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,351 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc0894dea2da3cb79a8f1e315464ee9c4dede820"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwODY0NQ==", "bodyText": "This is right place based on current strategy as we have already done in storage also.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r365608645", "createdAt": "2020-01-12T20:32:15Z", "author": {"login": "hemanttanwar"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,351 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4ODQ4Nw=="}, "originalCommit": {"oid": "fc0894dea2da3cb79a8f1e315464ee9c4dede820"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODI3NzY1OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/test-resources.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMTozNjowN1rOFeHNFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMTozNjowN1rOFeHNFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzExOTYzNw==", "bodyText": "nit: we should try to keep these in alphabetical order.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367119637", "createdAt": "2020-01-15T21:36:07Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,351 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"storageEndpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"eventHubName\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"javaeventhub\"\n+        },\n+        \"eventHubNamespaceHostNameSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"servicebus.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        }\n+    },\n+    \"variables\": {\n+        \"storageApiVersion\": \"2019-04-01\",\n+        \"eventHubsApiVersion\": \"2017-04-01\",\n+        \"authorizationApiVersion\": \"2018-09-01-preview\",\n+        \"blobDataContributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]\",\n+        \"contributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c')]\",\n+        \"AuthorizationRulesName\": \"[concat('authr', parameters('baseName'))]\",\n+        \"primaryAccountName\": \"[concat('prim', parameters('baseName'))]\",\n+        \"secondaryAccountName\": \"[concat('sec', parameters('baseName'))]\",\n+        \"premiumAccountName\": \"[concat('prem', parameters('baseName'))]\",\n+        \"dataLakeAccountName\": \"[concat('dtlk', parameters('baseName'))]\",\n+        \"location\": \"[resourceGroup().location]\",\n+        \"eventHubNameSpaceName\": \"[parameters('baseName')]\"\n+    },\n+    \"resources\": [\n+        {\n+            \"type\": \"Microsoft.EventHub/namespaces\",\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"name\": \"[variables('eventHubNameSpaceName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard\",\n+                \"tier\": \"Standard\",\n+                \"capacity\": 5\n+            },\n+            \"properties\": {\n+                \"zoneRedundant\": false,\n+                \"isAutoInflateEnabled\": false,\n+                \"maximumThroughputUnits\": 0,\n+                \"cors\": {\n+                    \"corsRules\": [\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"*\"],\n+                            \"allowedMethods\": [\"DELETE\", \"GET\", \"HEAD\", \"MERGE\", \"POST\", \"OPTIONS\", \"PUT\"],\n+                            \"maxAgeInSeconds\": 86400,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        }\n+                    ]\n+                }\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/eventhubs\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"location\": \"[variables('location')]\",\n+            \"dependsOn\": [\n+                \"[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"messageRetentionInDays\": 7,\n+                \"partitionCount\": 2\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('dataContributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('blobDataContributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('contributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('contributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"2017-04-01\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/AuthorizationRules\",\n+            \"dependsOn\": [\n+                \"[concat('Microsoft.EventHub/namespaces/', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"rights\": [\"Send\", \"Listen\", \"Manage\"]\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('primaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('secondaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('premiumAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Premium_LRS\",\n+                \"tier\": \"Premium\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('dataLakeAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"isHnsEnabled\": true,\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        }\n+    ],\n+    \"outputs\": {\n+        \"AZURE_EVENTHUBS_CONNECTION_STRING\": {\n+            \"type\": \"string\",\n+            \"value\": \"[concat(listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('baseName'), 'RootManageSharedAccessKey'), variables('eventHubsApiVersion')).primaryConnectionString, ';EntityPath=', parameters('eventHubName') )]\"\n+        },\n+        \"AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[concat(variables('eventHubNameSpaceName'), '.', parameters('eventHubNamespaceHostNameSuffix'))]\"\n+        },\n+        \"AZURE_EVENTHUBS_EVENT_HUB_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[parameters('eventHubName')]\"\n+        },\n+        \"PRIMARY_STORAGE_ACCOUNT_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[variables('primaryAccountName')]\"\n+        },\n+        \"PRIMARY_STORAGE_ACCOUNT_KEY\": {\n+            \"type\": \"string\",\n+            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName')), variables('storageApiVersion')).keys[0].value]\"\n+        },\n+        \"SECONDARY_STORAGE_ACCOUNT_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[variables('secondaryAccountName')]\"\n+        },\n+        \"SECONDARY_STORAGE_ACCOUNT_KEY\": {\n+            \"type\": \"string\",\n+            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('secondaryAccountName')), variables('storageApiVersion')).keys[0].value]\"\n+        },\n+        \"BLOB_STORAGE_ACCOUNT_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[variables('secondaryAccountName')]\"\n+        },\n+        \"BLOB_STORAGE_ACCOUNT_KEY\": {\n+            \"type\": \"string\",\n+            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('secondaryAccountName')), variables('storageApiVersion')).keys[0].value]\"\n+        },\n+        \"PREMIUM_STORAGE_ACCOUNT_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[variables('premiumAccountName')]\"\n+        },\n+        \"PREMIUM_STORAGE_ACCOUNT_KEY\": {\n+            \"type\": \"string\",\n+            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('premiumAccountName')), variables('storageApiVersion')).keys[0].value]\"\n+        },\n+        \"AZURE_STORAGE_FILE_ENDPOINT\": {\n+            \"type\": \"string\",\n+            \"value\": \"[reference(resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName')), variables('storageApiVersion')).primaryEndpoints.file]\"\n+        },\n+        \"AZURE_STORAGE_QUEUE_ENDPOINT\": {\n+            \"type\": \"string\",\n+            \"value\": \"[reference(resourceId('Microsoft.Storage/storageAccounts', variables('primaryAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]\"\n+        },\n+        \"STORAGE_DATA_LAKE_ACCOUNT_NAME\": {\n+            \"type\": \"string\",\n+            \"value\": \"[variables('dataLakeAccountName')]\"\n+        },\n+        \"STORAGE_DATA_LAKE_ACCOUNT_KEY\": {\n+            \"type\": \"string\",\n+            \"value\": \"[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName')), variables('storageApiVersion')).keys[0].value]\"\n+        },\n+\n+        \"AZURE_STORAGE_BLOB_CONNECTION_STRING\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafd108c1d9745ffd65122c56977a72fea8b37e"}, "originalPosition": 337}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODI4MzE2OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/test-resources.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMTozODoxNlrOFeHQcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjoxOToxNFrOFeISyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEyMDQ5Nw==", "bodyText": "We have a test that tries to authenticate using azure-identity . Does this also output the AZURE_CLIENT_ID, AZURE_CLIENT_SECRET, and AZURE_TENANT_ID?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367120497", "createdAt": "2020-01-15T21:38:16Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,351 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"storageEndpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"eventHubName\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"javaeventhub\"\n+        },\n+        \"eventHubNamespaceHostNameSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"servicebus.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        }\n+    },\n+    \"variables\": {\n+        \"storageApiVersion\": \"2019-04-01\",\n+        \"eventHubsApiVersion\": \"2017-04-01\",\n+        \"authorizationApiVersion\": \"2018-09-01-preview\",\n+        \"blobDataContributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]\",\n+        \"contributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c')]\",\n+        \"AuthorizationRulesName\": \"[concat('authr', parameters('baseName'))]\",\n+        \"primaryAccountName\": \"[concat('prim', parameters('baseName'))]\",\n+        \"secondaryAccountName\": \"[concat('sec', parameters('baseName'))]\",\n+        \"premiumAccountName\": \"[concat('prem', parameters('baseName'))]\",\n+        \"dataLakeAccountName\": \"[concat('dtlk', parameters('baseName'))]\",\n+        \"location\": \"[resourceGroup().location]\",\n+        \"eventHubNameSpaceName\": \"[parameters('baseName')]\"\n+    },\n+    \"resources\": [\n+        {\n+            \"type\": \"Microsoft.EventHub/namespaces\",\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"name\": \"[variables('eventHubNameSpaceName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard\",\n+                \"tier\": \"Standard\",\n+                \"capacity\": 5\n+            },\n+            \"properties\": {\n+                \"zoneRedundant\": false,\n+                \"isAutoInflateEnabled\": false,\n+                \"maximumThroughputUnits\": 0,\n+                \"cors\": {\n+                    \"corsRules\": [\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"*\"],\n+                            \"allowedMethods\": [\"DELETE\", \"GET\", \"HEAD\", \"MERGE\", \"POST\", \"OPTIONS\", \"PUT\"],\n+                            \"maxAgeInSeconds\": 86400,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        }\n+                    ]\n+                }\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/eventhubs\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"location\": \"[variables('location')]\",\n+            \"dependsOn\": [\n+                \"[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"messageRetentionInDays\": 7,\n+                \"partitionCount\": 2\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('dataContributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('blobDataContributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('contributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('contributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"2017-04-01\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/AuthorizationRules\",\n+            \"dependsOn\": [\n+                \"[concat('Microsoft.EventHub/namespaces/', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"rights\": [\"Send\", \"Listen\", \"Manage\"]\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('primaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('secondaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('premiumAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Premium_LRS\",\n+                \"tier\": \"Premium\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('dataLakeAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"isHnsEnabled\": true,\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        }\n+    ],\n+    \"outputs\": {\n+        \"AZURE_EVENTHUBS_CONNECTION_STRING\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aafd108c1d9745ffd65122c56977a72fea8b37e"}, "originalPosition": 276}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEzNzQ4Mg==", "bodyText": "Yes we are getting these env properties .\nhttps://github.com/Azure/azure-sdk-for-java/pull/7344/files#diff-8207928b799f9b8433d6601cec51886fR14", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367137482", "createdAt": "2020-01-15T22:19:14Z", "author": {"login": "hemanttanwar"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,351 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"storageEndpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"eventHubName\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"javaeventhub\"\n+        },\n+        \"eventHubNamespaceHostNameSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"servicebus.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        }\n+    },\n+    \"variables\": {\n+        \"storageApiVersion\": \"2019-04-01\",\n+        \"eventHubsApiVersion\": \"2017-04-01\",\n+        \"authorizationApiVersion\": \"2018-09-01-preview\",\n+        \"blobDataContributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]\",\n+        \"contributorRoleId\": \"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c')]\",\n+        \"AuthorizationRulesName\": \"[concat('authr', parameters('baseName'))]\",\n+        \"primaryAccountName\": \"[concat('prim', parameters('baseName'))]\",\n+        \"secondaryAccountName\": \"[concat('sec', parameters('baseName'))]\",\n+        \"premiumAccountName\": \"[concat('prem', parameters('baseName'))]\",\n+        \"dataLakeAccountName\": \"[concat('dtlk', parameters('baseName'))]\",\n+        \"location\": \"[resourceGroup().location]\",\n+        \"eventHubNameSpaceName\": \"[parameters('baseName')]\"\n+    },\n+    \"resources\": [\n+        {\n+            \"type\": \"Microsoft.EventHub/namespaces\",\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"name\": \"[variables('eventHubNameSpaceName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard\",\n+                \"tier\": \"Standard\",\n+                \"capacity\": 5\n+            },\n+            \"properties\": {\n+                \"zoneRedundant\": false,\n+                \"isAutoInflateEnabled\": false,\n+                \"maximumThroughputUnits\": 0,\n+                \"cors\": {\n+                    \"corsRules\": [\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"*\"],\n+                            \"allowedMethods\": [\"DELETE\", \"GET\", \"HEAD\", \"MERGE\", \"POST\", \"OPTIONS\", \"PUT\"],\n+                            \"maxAgeInSeconds\": 86400,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        },\n+                        {\n+                            \"allowedOrigins\": [\"example.com\"],\n+                            \"allowedMethods\": [\"GET\"],\n+                            \"maxAgeInSeconds\": 8888,\n+                            \"exposedHeaders\": [\"*\"],\n+                            \"allowedHeaders\": [\"*\"]\n+                        }\n+                    ]\n+                }\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"[variables('eventHubsApiVersion')]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/eventhubs\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"location\": \"[variables('location')]\",\n+            \"dependsOn\": [\n+                \"[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"messageRetentionInDays\": 7,\n+                \"partitionCount\": 2\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('dataContributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('blobDataContributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Authorization/roleAssignments\",\n+            \"apiVersion\": \"[variables('authorizationApiVersion')]\",\n+            \"name\": \"[guid(concat('contributorRoleId', variables('primaryAccountName')))]\",\n+            \"dependsOn\": [\n+                \"[variables('primaryAccountName')]\"\n+            ],\n+            \"properties\": {\n+                \"roleDefinitionId\": \"[variables('contributorRoleId')]\",\n+                \"principalId\": \"[parameters('testApplicationOid')]\"\n+            }\n+        },\n+        {\n+            \"apiVersion\": \"2017-04-01\",\n+            \"name\": \"[concat(parameters('baseName'), '/', parameters('eventHubName'))]\",\n+            \"type\": \"Microsoft.EventHub/namespaces/AuthorizationRules\",\n+            \"dependsOn\": [\n+                \"[concat('Microsoft.EventHub/namespaces/', variables('eventHubNameSpaceName'))]\"\n+            ],\n+            \"properties\": {\n+                \"rights\": [\"Send\", \"Listen\", \"Manage\"]\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('primaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('secondaryAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('premiumAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Premium_LRS\",\n+                \"tier\": \"Premium\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        },\n+        {\n+            \"type\": \"Microsoft.Storage/storageAccounts\",\n+            \"apiVersion\": \"[variables('storageApiVersion')]\",\n+            \"name\": \"[variables('dataLakeAccountName')]\",\n+            \"location\": \"[variables('location')]\",\n+            \"sku\": {\n+                \"name\": \"Standard_RAGRS\",\n+                \"tier\": \"Standard\"\n+            },\n+            \"kind\": \"StorageV2\",\n+            \"properties\": {\n+                \"isHnsEnabled\": true,\n+                \"networkAcls\": {\n+                    \"bypass\": \"AzureServices\",\n+                    \"virtualNetworkRules\": [],\n+                    \"ipRules\": [],\n+                    \"defaultAction\": \"Allow\"\n+                },\n+                \"supportsHttpsTrafficOnly\": true,\n+                \"encryption\": {\n+                    \"services\": {\n+                        \"file\": {\n+                            \"enabled\": true\n+                        },\n+                        \"blob\": {\n+                            \"enabled\": true\n+                        }\n+                    },\n+                    \"keySource\": \"Microsoft.Storage\"\n+                },\n+                \"accessTier\": \"Hot\"\n+            }\n+        }\n+    ],\n+    \"outputs\": {\n+        \"AZURE_EVENTHUBS_CONNECTION_STRING\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEyMDQ5Nw=="}, "originalCommit": {"oid": "2aafd108c1d9745ffd65122c56977a72fea8b37e"}, "originalPosition": 276}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODQ2MTUwOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/tests.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MDo1OVrOFeJAvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MDo1OVrOFeJAvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE0OTI0Nw==", "bodyText": "Is AZURE_STORAGE_ACCESS_KEY still needed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367149247", "createdAt": "2020-01-15T22:50:59Z", "author": {"login": "danieljurek"}, "path": "sdk/eventhubs/tests.yml", "diffHunk": "@@ -4,21 +4,22 @@ jobs:\n   - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml\n     parameters:\n       ServiceDirectory: eventhubs\n+      TimeoutInMinutes: 120\n       EnvVars:\n-        AZURE_EVENTHUBS_CONNECTION_STRING: $(java-event-hubs-test-connection-string)\n-        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(java-event-hubs-fully-qualified-domain-name)\n-        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(java-event-hubs-event-hub-name)\n+        AZURE_EVENTHUBS_CONNECTION_STRING: $(AZURE_EVENTHUBS_CONNECTION_STRING)\n+        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME)\n+        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(AZURE_EVENTHUBS_EVENT_HUB_NAME)\n         AZURE_TEST_MODE: RECORD\n         AZURE_LOG_LEVEL: 4\n         AZURE_TENANT_ID: $(aad-azure-sdk-test-tenant-id)\n         AZURE_CLIENT_ID: $(aad-azure-sdk-test-client-id)\n         AZURE_CLIENT_SECRET: $(aad-azure-sdk-test-client-secret)\n-        PRIMARY_STORAGE_ACCOUNT_NAME: $(java-storage-test-primary-account-name)\n-        PRIMARY_STORAGE_ACCOUNT_KEY: $(java-storage-test-primary-account-key)\n-        SECONDARY_STORAGE_ACCOUNT_NAME: $(java-storage-test-secondary-account-name)\n-        SECONDARY_STORAGE_ACCOUNT_KEY: $(java-storage-test-secondary-account-key)\n-        BLOB_STORAGE_ACCOUNT_NAME: $(java-storage-test-blob-account-name)\n-        BLOB_STORAGE_ACCOUNT_KEY: $(java-storage-test-blob-account-key)\n-        PREMIUM_STORAGE_ACCOUNT_NAME: $(java-storage-test-premium-account-name)\n-        PREMIUM_STORAGE_ACCOUNT_KEY: $(java-storage-test-premium-account-key)\n+        PRIMARY_STORAGE_ACCOUNT_NAME: $(PRIMARY_STORAGE_ACCOUNT_NAME)\n+        PRIMARY_STORAGE_ACCOUNT_KEY: $(PRIMARY_STORAGE_ACCOUNT_KEY)\n+        SECONDARY_STORAGE_ACCOUNT_NAME: $(SECONDARY_STORAGE_ACCOUNT_NAME)\n+        SECONDARY_STORAGE_ACCOUNT_KEY: $(SECONDARY_STORAGE_ACCOUNT_KEY)\n+        BLOB_STORAGE_ACCOUNT_NAME: $(BLOB_STORAGE_ACCOUNT_NAME)\n+        BLOB_STORAGE_ACCOUNT_KEY: $(BLOB_STORAGE_ACCOUNT_KEY)\n+        PREMIUM_STORAGE_ACCOUNT_NAME: $(PREMIUM_STORAGE_ACCOUNT_NAME)\n+        PREMIUM_STORAGE_ACCOUNT_KEY: $(PREMIUM_STORAGE_ACCOUNT_KEY)\n         AZURE_STORAGE_ACCESS_KEY: $(java-storage-test-access-key)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc66bb46f1285d88baa8f045aedcbb07703c60f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODQ3MTc2OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/tests.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1NTo1M1rOFeJHMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDowODo1MVrOFeKYxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1MDg5OA==", "bodyText": "Using the current version of New-TestResources.ps1 (https://github.com/Azure/azure-sdk-for-java/blob/master/eng/New-TestResources.ps1#L242) the variable mapping is no longer required for output variables. If you plumb all of the secrets through the ARM template you can reduce the EnvVars section down to:\nEnvVars:\n    AZURE_TEST_MODE: RECORD\n    AZURE_LOG_LEVEL: 4\n\nYou'll need to plumb the AZURE_CLIENT_ID and friends through the ARM template.\n...\n\"parameters\": { \n        \"tenantId\": {\n            \"type\": \"string\",\n            \"defaultValue\": \"72f988bf-86f1-41af-91ab-2d7cd011db47\",\n            \"metadata\": {\n                \"description\": \"The tenant ID to which the application and resources belong.\"\n            }\n        },\n        \"testApplicationId\": {\n            \"type\": \"string\",\n            \"metadata\": {\n                \"description\": \"The application client ID used to run tests.\"\n            }\n        },\n        \"testApplicationSecret\": {\n            \"type\": \"string\",\n            \"metadata\": {\n                \"description\": \"The application client secret used to run tests.\"\n            }\n        }, \n...\n\n\"outputs\": { \n        \"AZURE_TENANT_ID\": {\n            \"type\": \"string\",\n            \"value\": \"[parameters('tenantId')]\"\n        },\n        \"AZURE_CLIENT_ID\": {\n            \"type\": \"string\",\n            \"value\": \"[parameters('testApplicationId')]\"\n        },\n        \"AZURE_CLIENT_SECRET\": {\n            \"type\": \"string\",\n            \"value\": \"[parameters('testApplicationSecret')]\"\n        },\n...\n\nNote that these changes touch only the parameters and the outputs, no resources or variables are involved.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367150898", "createdAt": "2020-01-15T22:55:53Z", "author": {"login": "danieljurek"}, "path": "sdk/eventhubs/tests.yml", "diffHunk": "@@ -4,21 +4,22 @@ jobs:\n   - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml\n     parameters:\n       ServiceDirectory: eventhubs\n+      TimeoutInMinutes: 120\n       EnvVars:\n-        AZURE_EVENTHUBS_CONNECTION_STRING: $(java-event-hubs-test-connection-string)\n-        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(java-event-hubs-fully-qualified-domain-name)\n-        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(java-event-hubs-event-hub-name)\n+        AZURE_EVENTHUBS_CONNECTION_STRING: $(AZURE_EVENTHUBS_CONNECTION_STRING)\n+        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME)\n+        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(AZURE_EVENTHUBS_EVENT_HUB_NAME)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc66bb46f1285d88baa8f045aedcbb07703c60f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3MTc4Mw==", "bodyText": "Update the EnvVars section of the tests.yml file:\nEnvVars:\n    AZURE_TEST_MODE: RECORD\n    AZURE_LOG_LEVEL: 4\n\nAll of the rest of the mappings are redundant now.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367171783", "createdAt": "2020-01-16T00:08:51Z", "author": {"login": "danieljurek"}, "path": "sdk/eventhubs/tests.yml", "diffHunk": "@@ -4,21 +4,22 @@ jobs:\n   - template: ../../eng/pipelines/templates/jobs/archetype-sdk-tests.yml\n     parameters:\n       ServiceDirectory: eventhubs\n+      TimeoutInMinutes: 120\n       EnvVars:\n-        AZURE_EVENTHUBS_CONNECTION_STRING: $(java-event-hubs-test-connection-string)\n-        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(java-event-hubs-fully-qualified-domain-name)\n-        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(java-event-hubs-event-hub-name)\n+        AZURE_EVENTHUBS_CONNECTION_STRING: $(AZURE_EVENTHUBS_CONNECTION_STRING)\n+        AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME: $(AZURE_EVENTHUBS_FULLY_QUALIFIED_DOMAIN_NAME)\n+        AZURE_EVENTHUBS_EVENT_HUB_NAME: $(AZURE_EVENTHUBS_EVENT_HUB_NAME)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1MDg5OA=="}, "originalCommit": {"oid": "3cc66bb46f1285d88baa8f045aedcbb07703c60f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODY3MjAwOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/test-resources.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo1MDo0MVrOFeLBqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo1MDo0MVrOFeLBqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE4MjI0OQ==", "bodyText": "This closes the testApplicationSecret object, but not the parameters object, so the variables section looks like another parameter to the script.\nThis line should be }}, to close the testApplicationSecret object and close the parameters section.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7344#discussion_r367182249", "createdAt": "2020-01-16T00:50:41Z", "author": {"login": "danieljurek"}, "path": "sdk/eventhubs/test-resources.json", "diffHunk": "@@ -0,0 +1,430 @@\n+{\n+    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n+    \"contentVersion\": \"1.0.0.0\",\n+    \"parameters\": {\n+        \"baseName\": {\n+            \"type\": \"String\"\n+        },\n+        \"storageEndpointSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"core.windows.net\"\n+        },\n+        \"eventHubName\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"javaeventhub\"\n+        },\n+        \"eventHubNamespaceHostNameSuffix\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"servicebus.windows.net\"\n+        },\n+        \"testApplicationOid\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The principal to assign the role to. This is application object id.\"\n+            }\n+        },\n+        \"tenantId\": {\n+            \"type\": \"string\",\n+            \"defaultValue\": \"72f988bf-86f1-41af-91ab-2d7cd011db47\",\n+            \"metadata\": {\n+                \"description\": \"The tenant ID to which the application and resources belong.\"\n+            }\n+        },\n+        \"testApplicationId\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The application client ID used to run tests.\"\n+            }\n+        },\n+        \"testApplicationSecret\": {\n+            \"type\": \"string\",\n+            \"metadata\": {\n+                \"description\": \"The application client secret used to run tests.\"\n+            }\n+        },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7000abcd431a57dc38bf2fe65ae68c2a798431f"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 564, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}