{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MzIxMDgz", "number": 14493, "title": "Update API surface for relationship APIs", "bodyText": "For APIs returning json objects, we will expose 2 variations:\n\npublic Mono<DigitalTwinsResponse<String>> createDigitalTwinWithResponse(String digitalTwinId, String digitalTwin) { }\npublic <T> Mono<DigitalTwinsResponse<T>> createDigitalTwinWithResponse(String digitalTwinId, Object digitalTwin, Class<T> klazz) { }\n\nThe relationships API design document has been updated to reflect this change.\nI have also added the following classes:\n\nDigitalTwinsStringSerializer - handles the custom string serialization logic for sending json strings as-is.\nBasicDigitalTwin, DigitalTwinMetadata and WritableProperty - helper classes to help serialize the returned digital twin. Referenced in samples. (same as in C#).\nDigitalTwinsResponse<T> and DigitalTwinsResponseHeaders - Digital twin specific response types inherited from ResponseBase<H, T> for returning digital twin response. It is of generic type, since some return types from public APIs will be String, while some will be <T>.", "createdAt": "2020-08-26T23:21:50Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493", "merged": true, "mergeCommit": {"oid": "9ca4dc09124a57a86245e18131f254fd34c4d7d0"}, "closed": true, "closedAt": "2020-08-27T19:08:18Z", "author": {"login": "abhipsaMisra"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC0YWwgH2gAyNDc0MzIxMDgzOjczMTUwZWZlYmViOWMyNWNlYTY4OWI5ZWRjNTI1NmM1Mjk1MjgwMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDFE4gAH2gAyNDc0MzIxMDgzOjM5MDZmZDg3YzhmNjU4YjI4ODA1YTZlNjEzOWY3ZWZlNmRlMjI4OWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "73150efebeb9c25cea689b9edc5256c529528021", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/73150efebeb9c25cea689b9edc5256c529528021", "committedDate": "2020-08-26T23:26:45Z", "message": "feat(adt): Add helper models for digital twins, update serialization\nlogic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc14f4281a089a55bfc3cba6fb15b444046195dc", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fc14f4281a089a55bfc3cba6fb15b444046195dc", "committedDate": "2020-08-26T23:28:28Z", "message": "update API surface for relationship APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22fabbf2e0e70f90ebe37faa3e2e78020d28cb6d", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/22fabbf2e0e70f90ebe37faa3e2e78020d28cb6d", "committedDate": "2020-08-26T23:16:06Z", "message": "update API surface for relationship APIs"}, "afterCommit": {"oid": "fc14f4281a089a55bfc3cba6fb15b444046195dc", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fc14f4281a089a55bfc3cba6fb15b444046195dc", "committedDate": "2020-08-26T23:28:28Z", "message": "update API surface for relationship APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MTMxMzY4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#pullrequestreview-476131368", "createdAt": "2020-08-26T23:42:19Z", "commit": {"oid": "fc14f4281a089a55bfc3cba6fb15b444046195dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzo0MjoyMFrOHHkCZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzo0MjoyMFrOHHkCZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY5MjUxOQ==", "bodyText": "The final relationship APIs have not been implemented yet. They will be implemented in the next PR.\nWhile the final pageable API will look similar to this, this is more of a test to see how the PL works.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#discussion_r477692519", "createdAt": "2020-08-26T23:42:20Z", "author": {"login": "abhipsaMisra"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -149,12 +146,59 @@ public HttpPipeline getHttpPipeline() {\n      * @param digitalTwinId The Id of the source digital twin.\n      * @param relationshipName The name of a relationship to filter to.\n      * @return A {@link PagedFlux} of application/json relationships belonging to the specified digital twin and the http response.\n-     * TODO: Impl here returns an Object and not a String.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<Object> listRelationships(String digitalTwinId, String relationshipName) {\n-        return new PagedFlux<>(\n-            () -> protocolLayer.getDigitalTwins().listRelationshipsSinglePageAsync(digitalTwinId, relationshipName),\n-            nextLink -> protocolLayer.getDigitalTwins().listRelationshipsNextSinglePageAsync(nextLink));\n+    public PagedFlux<String> listRelationships(String digitalTwinId, String relationshipName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc14f4281a089a55bfc3cba6fb15b444046195dc"}, "originalPosition": 191}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a1e647a96d3de8542f8fb8015cc9d4ab87c333", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4a1e647a96d3de8542f8fb8015cc9d4ab87c333", "committedDate": "2020-08-27T01:00:35Z", "message": "update delete and update APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/2114a9fb3d577ef6cacbf8fe6e1653fd35947559", "committedDate": "2020-08-27T01:17:38Z", "message": "Move DigitalTwinsResponse and DigitalTwinsResponseHeaders to util package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTExMDA0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#pullrequestreview-476911004", "createdAt": "2020-08-27T16:56:02Z", "commit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1NjowMlrOHIZI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1OToyM1rOHIZQpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MjUyMA==", "bodyText": "won't we be having the same issue with the headers if we use the default Response type?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#discussion_r478562520", "createdAt": "2020-08-27T16:56:02Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -125,22 +126,18 @@ public HttpPipeline getHttpPipeline() {\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<Response<String>> createRelationshipWithResponse(String digitalTwinId, String relationshipId, String relationship) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDUxOA==", "bodyText": "I think we need to rename this variable ... fake, mock or something", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#discussion_r478564518", "createdAt": "2020-08-27T16:59:23Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/implementation/serializer/DigitalTwinsStringSerializer.java", "diffHunk": "@@ -0,0 +1,42 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.digitaltwins.core.implementation.serializer;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+import com.fasterxml.jackson.databind.ser.std.StdSerializer;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Configures the {@link StdSerializer<String>} with custom behavior needed to work with Digital Twins REST API.\n+ */\n+public class DigitalTwinsStringSerializer extends StdSerializer<String> {\n+    private static final long serialVersionUID = 1L;\n+    private final ObjectMapper mapper;\n+\n+    public DigitalTwinsStringSerializer(Class<?> t, boolean dummy, ObjectMapper mapper) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTQxMDg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#pullrequestreview-476941088", "createdAt": "2020-08-27T17:36:44Z", "commit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzozNjo0NFrOHIakbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzozODowNlrOHIanZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4NTk2NQ==", "bodyText": "can we rename model class to typeClass or something so it won't be confused with the ADT model terminology?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#discussion_r478585965", "createdAt": "2020-08-27T17:36:44Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -299,7 +299,31 @@ These APIs are invoked via DigitalTwinsAsyncClient.\n      * @return A REST response containing the application/json relationship created.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<String>> createRelationshipWithResponse(String digitalTwinId, String relationshipId, String relationship) { }\n+    public Mono<DigitalTwinsResponse<String>> createRelationshipWithResponse(String digitalTwinId, String relationshipId, String relationship) { }\n+\n+    /**\n+     * Creates a relationship on a digital twin.\n+     *\n+     * @param digitalTwinId The Id of the source digital twin.\n+     * @param relationshipId The Id of the relationship to be created.\n+     * @param relationship The relationship to be created.\n+     * @param modelClass The model class to convert the relationship to.\n+     * @return The relationship created.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public <T> Mono<T> createRelationship(String digitalTwinId, String relationshipId, Object relationship, Class<T> modelClass) { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4NjcyNg==", "bodyText": "do we need another Mono updateRelationship that takes a RequestOption?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14493#discussion_r478586726", "createdAt": "2020-08-27T17:38:06Z", "author": {"login": "azabbasi"}, "path": "sdk/digitaltwins/azure-digitaltwins-core/API design.md", "diffHunk": "@@ -319,19 +343,40 @@ These APIs are invoked via DigitalTwinsAsyncClient.\n      * @return A REST response containing the application/json relationship corresponding to the provided relationshipId.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<String>> getRelationshipWithResponse(String digitalTwinId, String relationshipId) { }\n+    public Mono<DigitalTwinsResponse<String>> getRelationshipWithResponse(String digitalTwinId, String relationshipId) { }\n+\n+    /**\n+     * Gets a relationship on a digital twin.\n+     *\n+     * @param digitalTwinId The Id of the source digital twin.\n+     * @param relationshipId The Id of the relationship to retrieve.\n+     * @param modelClass The model class to convert the relationship to.\n+     * @return The relationship corresponding to the provided relationshipId.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public <T> Mono<T> getRelationship(String digitalTwinId, String relationshipId, Class<T> modelClass) { }\n+\n+    /**\n+     * Gets a relationship on a digital twin.\n+     *\n+     * @param digitalTwinId The Id of the source digital twin.\n+     * @param relationshipId The Id of the relationship to retrieve.\n+     * @param modelClass The model class to convert the relationship to.\n+     * @return A REST response containing the relationship corresponding to the provided relationshipId.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public <T> Mono<DigitalTwinsResponse<T>> getRelationshipWithResponse(String digitalTwinId, String relationshipId, Class<T> modelClass) { }\n \n     /**\n      * Updates the properties of a relationship on a digital twin.\n      *\n      * @param digitalTwinId The Id of the source digital twin.\n      * @param relationshipId The Id of the relationship to be updated.\n      * @param relationshipUpdateOperations The application/json-patch+json operations to be performed on the specified digital twin's relationship.\n-     * @param options The optional settings for this request.\n      * @return An empty response.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2114a9fb3d577ef6cacbf8fe6e1653fd35947559"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3906fd87c8f658b28805a6e6139f7efe6de2289e", "author": {"user": {"login": "abhipsaMisra", "name": "Abhipsa Misra"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3906fd87c8f658b28805a6e6139f7efe6de2289e", "committedDate": "2020-08-27T18:53:52Z", "message": "update the serialzer to call a different base constructor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 82, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}