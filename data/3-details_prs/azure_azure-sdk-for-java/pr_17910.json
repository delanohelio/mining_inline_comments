{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjc0MzMx", "number": 17910, "title": "ACS Chat: Preview 3 refactor", "bodyText": "Ran AutoRest against the latest swagger to regenerate code\nRefactored client code to be in-line with swagger changes\n\nSplit client into Chat client and Thread client\nAdded idempotency header to createChatThread\nAdd paging support to listParticipants and `listReadReceipts'\n\n\nRe-recorded live test sessions", "createdAt": "2020-12-02T01:16:13Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910", "merged": true, "mergeCommit": {"oid": "d576969d67895819d70c35af37014a8eb95241a7"}, "closed": true, "closedAt": "2020-12-07T22:09:56Z", "author": {"login": "danielgerlag"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhtFkmgH2gAyNTMwNjc0MzMxOjliNWI5MDJmMGU2MmMyNDNmMzAxNTVkOTBjODU3YzZlZDM0M2VjOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj5Fp6gFqTU0NjM3ODE4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b5b902f0e62c243f30155d90c857c6ed343ec8a", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9b5b902f0e62c243f30155d90c857c6ed343ec8a", "committedDate": "2020-11-30T22:28:33Z", "message": "use local swagger.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb3fdb52de1f2058030b99d8a2f23d62099259cf", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/eb3fdb52de1f2058030b99d8a2f23d62099259cf", "committedDate": "2020-12-01T00:34:47Z", "message": "fix AutoRest directive to match new swagger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa62494e916c84e9d27affb1133a2395a5ebbf61", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa62494e916c84e9d27affb1133a2395a5ebbf61", "committedDate": "2020-12-01T22:33:13Z", "message": "run AutoRest, update wrapper code accordingly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c568f4622e0af8fbd99a52635eb4c1b323719a0", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c568f4622e0af8fbd99a52635eb4c1b323719a0", "committedDate": "2020-12-01T23:16:12Z", "message": "more refactoring against new swagger generated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1d877598110e0a40c82d40982f1e1973b6c177c", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1d877598110e0a40c82d40982f1e1973b6c177c", "committedDate": "2020-12-01T23:25:20Z", "message": "correct actual vs. expected in assertions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37e69beabe7f8c475a551799a75740de0c7fd00a", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/37e69beabe7f8c475a551799a75740de0c7fd00a", "committedDate": "2020-12-01T23:47:27Z", "message": "update test session recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ddd3b25aad8e0cabdf78103446562c743577973", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ddd3b25aad8e0cabdf78103446562c743577973", "committedDate": "2020-12-01T23:54:02Z", "message": "sync README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c433919c78b396bf05babdd62ac05e53d6533a33", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c433919c78b396bf05babdd62ac05e53d6533a33", "committedDate": "2020-12-02T00:20:49Z", "message": "expose sync overloads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab9ee57ed9bb2b97b71d6c32324cc420d6d457a", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9ab9ee57ed9bb2b97b71d6c32324cc420d6d457a", "committedDate": "2020-12-02T01:10:31Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9", "committedDate": "2020-12-02T01:24:37Z", "message": "update README.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDM2MjY2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#pullrequestreview-542436266", "createdAt": "2020-12-02T01:45:50Z", "commit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTo0NTo1MVrOH9HD1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzo1MDo1M1rOH9zBkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg0MDg1NQ==", "bodyText": "chatClient (singular all the way) ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r533840855", "createdAt": "2020-12-02T01:45:51Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatAsyncClient.java", "diffHunk": "@@ -33,11 +36,13 @@\n     private final ClientLogger logger = new ClientLogger(ChatAsyncClient.class);\n \n     private final AzureCommunicationChatServiceImpl chatServiceClient;\n+    private final ChatsImpl chatsClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1ODcyMA==", "bodyText": "from creating a chat thread", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534558720", "createdAt": "2020-12-02T23:44:25Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/README.md", "diffHunk": "@@ -102,8 +102,9 @@ Use the `createChatThread` method to create a chat thread.\n - Use `topic` to give a thread topic;\n - Use `participants` to list the thread participants to be added to the thread;\n \n-`chatThreadClient` is the response returned from creating a thread. It can be used for performing operations on the created thread: add participants, send message, etc.\n-It contains a `chatThreadId` property which is the unique ID of the thread. The property is accessible by the public method getChatThreadId().\n+`CreateChatThreadResult` is the response returned from creating a thread. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1OTA2Mg==", "bodyText": ".ChatImpl", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534559062", "createdAt": "2020-12-02T23:45:21Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatAsyncClient.java", "diffHunk": "@@ -2,15 +2,18 @@\n // Licensed under the MIT License.\n package com.azure.communication.chat;\n \n+import com.azure.communication.chat.implementation.converters.CreateChatThreadResultConverter;\n import reactor.core.publisher.Mono;\n \n+import com.azure.communication.chat.models.ChatThread;\n+import com.azure.communication.chat.models.ChatThreadInfo;\n+import com.azure.communication.chat.models.CreateChatThreadOptions;\n+import com.azure.communication.chat.models.CreateChatThreadResult;\n+import com.azure.communication.chat.models.ListChatThreadsOptions;\n import com.azure.communication.chat.implementation.converters.ChatThreadConverter;\n import com.azure.communication.chat.implementation.converters.CreateChatThreadOptionsConverter;\n import com.azure.communication.chat.implementation.AzureCommunicationChatServiceImpl;\n-import com.azure.communication.chat.models.CreateChatThreadOptions;\n-import com.azure.communication.chat.models.ListChatThreadsOptions;\n-import com.azure.communication.chat.models.ChatThread;\n-import com.azure.communication.chat.models.ChatThreadInfo;\n+import com.azure.communication.chat.implementation.ChatsImpl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1OTMzMg==", "bodyText": "THREAD_RESOURCE_STATUS_TYPE  - Not needed anymore", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534559332", "createdAt": "2020-12-02T23:46:03Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatAsyncClient.java", "diffHunk": "@@ -33,11 +36,13 @@\n     private final ClientLogger logger = new ClientLogger(ChatAsyncClient.class);\n \n     private final AzureCommunicationChatServiceImpl chatServiceClient;\n+    private final ChatsImpl chatsClient;\n \n     private static final String THREAD_RESOURCE_STATUS_TYPE = \"thread\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2MDU2NQ==", "bodyText": ".ChatThreadImpl", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534560565", "createdAt": "2020-12-02T23:49:22Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatThreadAsyncClient.java", "diffHunk": "@@ -2,6 +2,7 @@\n // Licensed under the MIT License.\n package com.azure.communication.chat;\n \n+import com.azure.communication.chat.implementation.ChatThreadsImpl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2MTE2OA==", "bodyText": "threadClient => chatThreadClient\nIn general, Thread was considered too generic on the earlier reviews so we are following that convention across all sdks : prefix names with Chat when they refer to chat threads", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534561168", "createdAt": "2020-12-02T23:50:53Z", "author": {"login": "juancamilor"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatThreadAsyncClient.java", "diffHunk": "@@ -50,11 +53,13 @@\n     private final ClientLogger logger = new ClientLogger(ChatThreadAsyncClient.class);\n \n     private final AzureCommunicationChatServiceImpl chatServiceClient;\n+    private final ChatThreadsImpl threadClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzUyNzQw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#pullrequestreview-543352740", "createdAt": "2020-12-03T00:40:16Z", "commit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDo0MDoxNlrOH90JLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDo0MzozM1rOH90N7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU3OTUwMA==", "bodyText": "Here (and everywhere we do listParticipantsOptions.get...) we should have a null check on listParticipantsOptions\nCheck out the other methods that had pagination already, they should have null checks before invoking the threadClient with options", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534579500", "createdAt": "2020-12-03T00:40:16Z", "author": {"login": "angiurgiu"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatThreadAsyncClient.java", "diffHunk": "@@ -270,12 +275,28 @@ public String getChatThreadId() {\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PagedFlux<ChatParticipant> listParticipants() {\n+        ListParticipantsOptions listParticipantsOptions = new ListParticipantsOptions();\n+        return listParticipants(listParticipantsOptions);\n+    }\n+\n+    /**\n+     * Gets the participants of a thread.\n+     *\n+     * @param listParticipantsOptions The request options.\n+     * @return the participants of a thread.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<ChatParticipant> listParticipants(ListParticipantsOptions listParticipantsOptions) {\n         try {\n             return pagedFluxConvert(new PagedFlux<>(\n                 () -> withContext(context ->\n-                    this.chatServiceClient.listChatParticipantsSinglePageAsync(chatThreadId, context)),\n+                    this.threadClient.listChatParticipantsSinglePageAsync(\n+                        chatThreadId,\n+                        listParticipantsOptions.getMaxPageSize(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU3OTk3MQ==", "bodyText": "Same comment, take precautions against NullReferenceExceptions", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534579971", "createdAt": "2020-12-03T00:41:30Z", "author": {"login": "angiurgiu"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/ChatThreadAsyncClient.java", "diffHunk": "@@ -697,11 +734,26 @@ public String getChatThreadId() {\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PagedFlux<ChatMessageReadReceipt> listReadReceipts() {\n+        ListReadReceiptOptions listReadReceiptOptions = new ListReadReceiptOptions();\n+        return listReadReceipts(listReadReceiptOptions);\n+    }\n+\n+    /**\n+     * Gets read receipts for a thread.\n+     *\n+     * @param listReadReceiptOptions The additional options for this operation.\n+     * @return read receipts for a thread.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<ChatMessageReadReceipt> listReadReceipts(ListReadReceiptOptions listReadReceiptOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4MDcxOQ==", "bodyText": "Id instead of ID", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#discussion_r534580719", "createdAt": "2020-12-03T00:43:33Z", "author": {"login": "angiurgiu"}, "path": "sdk/communication/azure-communication-chat/src/main/java/com/azure/communication/chat/models/CreateChatThreadOptions.java", "diffHunk": "@@ -22,6 +22,8 @@\n     @JsonProperty(value = \"participants\", required = true)\n     private List<ChatParticipant> participants;\n \n+    private String repeatabilityRequestID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d922581c16f3d56a7a8e74ef0a469cc9fb65a8c9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12cdfcc12153f3a54b72b48e47e0b81ea9bce37c", "author": {"user": {"login": "danielgerlag", "name": "Daniel Gerlag"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/12cdfcc12153f3a54b72b48e47e0b81ea9bce37c", "committedDate": "2020-12-03T22:59:23Z", "message": "pr feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Mzc4MTg1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17910#pullrequestreview-546378185", "createdAt": "2020-12-07T17:35:22Z", "commit": {"oid": "12cdfcc12153f3a54b72b48e47e0b81ea9bce37c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1588, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}