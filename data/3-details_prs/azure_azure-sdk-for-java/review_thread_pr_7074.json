{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzMzNjU4", "number": 7074, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOToyOToyOVrODVhphQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODozOTo1MVrODVuWVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODk3OTg5OnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOToyOToyOVrOFZzQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMzoxNjowMlrOFZ5SMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5ODQwNQ==", "bodyText": "Prefer to use code embedding for READMEs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362598405", "createdAt": "2020-01-02T19:29:29Z", "author": {"login": "srnagar"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -135,14 +137,60 @@ ConfigurationAsyncClient client = new ConfigurationClientBuilder()\n         .buildAsyncClient();\n ```\n \n-You can also use `TokenCredential` to create a configuration client, such as an Azure Active Directory (AAD) token.\n-Unlike a connection string if you're using an AAD token you must supply the endpoint of AppConfiguration service. The\n-endpoint can be obtained by going to your App Configuration instance in the Azure portal and navigating to \"Overview\"\n-page and look for the \"Endpoint\" keyword. \n+#### Use AAD token\n+\n+Here we demonstrate using [DefaultAzureCredential][default_cred_ref]\n+to authenticate as a service principal. However, the configuration client\n+accepts any [azure-identity][azure_identity] credential. See the\n+[azure-identity][azure_identity] documentation for more information about other\n+credentials.\n+\n+##### Create a service principal (optional)\n+This [Azure CLI][azure_cli] snippet shows how to create a\n+new service principal. Before using it, replace \"your-application-name\" with\n+the appropriate name for your service principal.\n+\n+Create a service principal:\n+```Bash\n+az ad sp create-for-rbac --name http://my-application --skip-assignment\n+```\n+\n+> Output:\n+> ```json\n+> {\n+>     \"appId\": \"generated app id\",\n+>     \"displayName\": \"my-application\",\n+>     \"name\": \"http://my-application\",\n+>     \"password\": \"random password\",\n+>     \"tenant\": \"tenant id\"\n+> }\n+> ```\n+\n+Use the output to set **AZURE_CLIENT_ID** (\"appId\" above), **AZURE_CLIENT_SECRET**\n+(\"password\" above) and **AZURE_TENANT_ID** (\"tenant\" above) environment variables.\n+The following example shows a way to do this in Bash:\n+```Bash\n+export AZURE_CLIENT_ID=\"generated app id\"\n+export AZURE_CLIENT_SECRET=\"random password\"\n+export AZURE_TENANT_ID=\"tenant id\"\n+```\n+\n+Assign one of the applicable [App Configuration roles][app_config_role] to the service principal.\n+\n+##### Create a client\n+Once the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET** and\n+**AZURE_TENANT_ID** environment variables are set,\n+[DefaultAzureCredential][default_cred_ref] will be able to authenticate the\n+configuration client.\n+\n+Constructing the client also requires your configuration store's URL, which you can\n+get from the Azure CLI or the Azure Portal. In the Azure Portal, the URL can be found listed as the service \"Endpoint\"\n \n ```Java\n-// An example of using TokenCredential and Endpoint to create a synchronous client\n-TokenCredential credential = new DefaultAzureCredential();\n+import com.azure.identity.DefaultAzureCredential;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27b1143a9cbfd48f475f1af5549d9e039e201448"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY5NzI2NA==", "bodyText": "updated.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362697264", "createdAt": "2020-01-03T03:16:02Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -135,14 +137,60 @@ ConfigurationAsyncClient client = new ConfigurationClientBuilder()\n         .buildAsyncClient();\n ```\n \n-You can also use `TokenCredential` to create a configuration client, such as an Azure Active Directory (AAD) token.\n-Unlike a connection string if you're using an AAD token you must supply the endpoint of AppConfiguration service. The\n-endpoint can be obtained by going to your App Configuration instance in the Azure portal and navigating to \"Overview\"\n-page and look for the \"Endpoint\" keyword. \n+#### Use AAD token\n+\n+Here we demonstrate using [DefaultAzureCredential][default_cred_ref]\n+to authenticate as a service principal. However, the configuration client\n+accepts any [azure-identity][azure_identity] credential. See the\n+[azure-identity][azure_identity] documentation for more information about other\n+credentials.\n+\n+##### Create a service principal (optional)\n+This [Azure CLI][azure_cli] snippet shows how to create a\n+new service principal. Before using it, replace \"your-application-name\" with\n+the appropriate name for your service principal.\n+\n+Create a service principal:\n+```Bash\n+az ad sp create-for-rbac --name http://my-application --skip-assignment\n+```\n+\n+> Output:\n+> ```json\n+> {\n+>     \"appId\": \"generated app id\",\n+>     \"displayName\": \"my-application\",\n+>     \"name\": \"http://my-application\",\n+>     \"password\": \"random password\",\n+>     \"tenant\": \"tenant id\"\n+> }\n+> ```\n+\n+Use the output to set **AZURE_CLIENT_ID** (\"appId\" above), **AZURE_CLIENT_SECRET**\n+(\"password\" above) and **AZURE_TENANT_ID** (\"tenant\" above) environment variables.\n+The following example shows a way to do this in Bash:\n+```Bash\n+export AZURE_CLIENT_ID=\"generated app id\"\n+export AZURE_CLIENT_SECRET=\"random password\"\n+export AZURE_TENANT_ID=\"tenant id\"\n+```\n+\n+Assign one of the applicable [App Configuration roles][app_config_role] to the service principal.\n+\n+##### Create a client\n+Once the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET** and\n+**AZURE_TENANT_ID** environment variables are set,\n+[DefaultAzureCredential][default_cred_ref] will be able to authenticate the\n+configuration client.\n+\n+Constructing the client also requires your configuration store's URL, which you can\n+get from the Azure CLI or the Azure Portal. In the Azure Portal, the URL can be found listed as the service \"Endpoint\"\n \n ```Java\n-// An example of using TokenCredential and Endpoint to create a synchronous client\n-TokenCredential credential = new DefaultAzureCredential();\n+import com.azure.identity.DefaultAzureCredential;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5ODQwNQ=="}, "originalCommit": {"oid": "27b1143a9cbfd48f475f1af5549d9e039e201448"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTA2MDcwOnYy", "diffSide": "RIGHT", "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODozOTo1MVrOFaGokQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMToxMTo0M1rOFaJe-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxNTk4NQ==", "bodyText": "I'd put this in a try-finally block, so if any errors happen, it'll always try to dispose of the connection.\ntry {\n} finally {\n    if (conn != null) {\n        conn.close();\n    }\n}", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362915985", "createdAt": "2020-01-03T18:39:51Z", "author": {"login": "conniey"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -223,14 +223,15 @@ String url = configurationClient.getConfigurationSetting(urlKey, urlLabel).getVa\n Connection conn;\n try {\n     conn = DriverManager.getConnection(url);\n+    conn.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9b5a8076eb842413d400cf87f40295584d668"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1MzIyMw==", "bodyText": "but how do you handle the exception? Ignore the exception and throws it? like the example below:\n public void sqlExample() throws SQLException {\n        ConfigurationClient configurationClient = new ConfigurationClientBuilder()\n            .connectionString(connectionString)\n            .buildClient();\n\n        // urlLabel is optional\n        String url = configurationClient.getConfigurationSetting(urlKey, urlLabel).getValue();\n        Connection conn = null;\n        try {\n            conn = DriverManager.getConnection(url);\n        } finally {\n            if (conn != null) {\n                conn.close();\n            }\n        }\n    }", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362953223", "createdAt": "2020-01-03T20:37:04Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -223,14 +223,15 @@ String url = configurationClient.getConfigurationSetting(urlKey, urlLabel).getVa\n Connection conn;\n try {\n     conn = DriverManager.getConnection(url);\n+    conn.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxNTk4NQ=="}, "originalCommit": {"oid": "9da9b5a8076eb842413d400cf87f40295584d668"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk1NzQyNA==", "bodyText": "Try-finally can have a catch block too.\nhttps://www.javatpoint.com/finally-block-in-exception-handling", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362957424", "createdAt": "2020-01-03T20:52:45Z", "author": {"login": "conniey"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -223,14 +223,15 @@ String url = configurationClient.getConfigurationSetting(urlKey, urlLabel).getVa\n Connection conn;\n try {\n     conn = DriverManager.getConnection(url);\n+    conn.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxNTk4NQ=="}, "originalCommit": {"oid": "9da9b5a8076eb842413d400cf87f40295584d668"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk2MjY4MA==", "bodyText": "conn.close() throws exception as well", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7074#discussion_r362962680", "createdAt": "2020-01-03T21:11:43Z", "author": {"login": "mssfang"}, "path": "sdk/appconfiguration/azure-data-appconfiguration/README.md", "diffHunk": "@@ -223,14 +223,15 @@ String url = configurationClient.getConfigurationSetting(urlKey, urlLabel).getVa\n Connection conn;\n try {\n     conn = DriverManager.getConnection(url);\n+    conn.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkxNTk4NQ=="}, "originalCommit": {"oid": "9da9b5a8076eb842413d400cf87f40295584d668"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 626, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}