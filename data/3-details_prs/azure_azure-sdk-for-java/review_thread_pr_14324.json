{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMzI0MjUx", "number": 14324, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxMzo1NVrOEbD7dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTozNToxM1rOEcIGFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODExMzgzOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxMzo1NVrOHE2uHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxMzo1NVrOHE2uHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1Mjg5Mg==", "bodyText": "this fix is not related to empty id but it is a quick fix for make sure the async and sync tests are verifying the same thing. Previously they are verifying the error.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r474852892", "createdAt": "2020-08-21T18:13:55Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -268,21 +287,32 @@ public void recognizeEntitiesDuplicateIdInput(HttpClient httpClient, TextAnalyti\n                 .verifyErrorSatisfies(ex -> assertEquals(HttpResponseException.class, ex.getClass())));\n     }\n \n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void recognizeEntitiesEmptyIdInput(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        textAnalyticsInputEmptyIdRunner(inputs ->\n+            StepVerifier.create(client.recognizeEntitiesBatchWithResponse(inputs, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,\n+                    //       https://github.com/Azure/azure-sdk-for-java/issues/13960\n+                    // assertEquals(INVALID_DOCUMENT, textAnalyticsError.getErrorCode());\n+                }));\n+    }\n+\n     @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n     @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n     public void recognizeEntitiesBatchInputSingleError(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n         client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n         recognizeBatchCategorizedEntitySingleErrorRunner((inputs) ->\n             StepVerifier.create(client.recognizeEntitiesBatchWithResponse(inputs, null))\n-                .assertNext(resultCollection -> {\n-                    resultCollection.getValue().forEach(result -> {\n-                        assertTrue(result.isError());\n-                        final TextAnalyticsError error = result.getError();\n-                        TextAnalyticsErrorCode errorCode = error.getErrorCode();\n-                        assertTrue(TextAnalyticsErrorCode.fromString(\"invalidDocument\").equals(errorCode));\n-                        assertTrue(\"Document text is empty.\".equals(error.getMessage()));\n-                    });\n-                }).verifyComplete());\n+                .assertNext(resultCollection -> resultCollection.getValue().forEach(recognizeEntitiesResult -> {\n+                    Exception exception = assertThrows(TextAnalyticsException.class, recognizeEntitiesResult::getEntities);\n+                    assertEquals(String.format(BATCH_ERROR_EXCEPTION_MESSAGE, \"RecognizeEntitiesResult\"), exception.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODExNTQwOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxNDoyOVrOHE2vFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxNDoyOVrOHE2vFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1MzE0Mg==", "bodyText": "same reason as https://github.com/Azure/azure-sdk-for-java/pull/14324/files#r474852892", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r474853142", "createdAt": "2020-08-21T18:14:29Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -376,21 +406,32 @@ public void recognizePiiEntitiesDuplicateIdInput(HttpClient httpClient, TextAnal\n                 .verifyErrorSatisfies(ex -> assertEquals(HttpResponseException.class, ex.getClass())));\n     }\n \n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void recognizePiiEntitiesEmptyIdInput(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        textAnalyticsInputEmptyIdRunner(inputs ->\n+            StepVerifier.create(client.recognizePiiEntitiesBatchWithResponse(inputs, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,\n+                    //       https://github.com/Azure/azure-sdk-for-java/issues/13960\n+                    // assertEquals(INVALID_DOCUMENT, textAnalyticsError.getErrorCode());\n+                }));\n+    }\n+\n     @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n     @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n     public void recognizePiiEntitiesBatchInputSingleError(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n         client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n         recognizeBatchPiiEntitySingleErrorRunner((inputs) ->\n             StepVerifier.create(client.recognizePiiEntitiesBatchWithResponse(inputs, null))\n-                .assertNext(resultCollection -> {\n-                    resultCollection.getValue().forEach(result -> {\n-                        assertTrue(result.isError());\n-                        final TextAnalyticsError error = result.getError();\n-                        TextAnalyticsErrorCode errorCode = error.getErrorCode();\n-                        assertTrue(TextAnalyticsErrorCode.fromString(\"invalidDocument\").equals(errorCode));\n-                        assertTrue(\"Document text is empty.\".equals(error.getMessage()));\n-                    });\n-                }).verifyComplete());\n+                .assertNext(resultCollection -> resultCollection.getValue().forEach(recognizePiiEntitiesResult -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTAwNTYwOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMjozMDoyMVrOHE_ejA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMzo0OTo1N1rOHGEpmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5NjM2NA==", "bodyText": "Seems like form here we are getting non-null values. What exactly is missing?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r474996364", "createdAt": "2020-08-21T22:30:21Z", "author": {"login": "samvaity"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -198,6 +198,25 @@ public void detectLanguageDuplicateIdInput(HttpClient httpClient, TextAnalyticsS\n                 .verifyErrorSatisfies(ex -> assertEquals(HttpResponseException.class, ex.getClass())));\n     }\n \n+    /**\n+     * Verifies that an invalid document exception is returned for input documents with an empty ID.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void detectLanguageEmptyIdInput(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        detectLanguageInputEmptyIdRunner(inputs ->\n+            StepVerifier.create(client.detectLanguageBatchWithResponse(inputs, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEyOTY5MQ==", "bodyText": "The JSON output is same as the postman output. Java deserialization doesn't parse the \"error\" object in this case. More detail can be found in here: https://teams.microsoft.com/l/message/19:d6ff4003f5c848a2a2d6dcdfc0ebd497@thread.skype/1597103339389?tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47&groupId=3e17dcb0-4257-4a30-b843-77f47f1d4121&parentMessageId=1597103339389&teamName=Azure%20SDK&channelName=Service%20-%20Text%20Analytics&createdTime=1597103339389", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476129691", "createdAt": "2020-08-25T03:49:57Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -198,6 +198,25 @@ public void detectLanguageDuplicateIdInput(HttpClient httpClient, TextAnalyticsS\n                 .verifyErrorSatisfies(ex -> assertEquals(HttpResponseException.class, ex.getClass())));\n     }\n \n+    /**\n+     * Verifies that an invalid document exception is returned for input documents with an empty ID.\n+     */\n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void detectLanguageEmptyIdInput(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        detectLanguageInputEmptyIdRunner(inputs ->\n+            StepVerifier.create(client.detectLanguageBatchWithResponse(inputs, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk5NjM2NA=="}, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDAyMjk3OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNToyODozNVrOHFqcDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMDo0MTo0NVrOHG04-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwMDIzOA==", "bodyText": "I'm not seeing tests for the error that gets thrown when too many documents are being passed (might just not have found the tests). I have tests for every endpoint except detect_language and they're all called test_too_many_documents. Here's an example of one. Even though we're no longer throwing a special error ourselves in this case, I think it's still good to have a test for it", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r475700238", "createdAt": "2020-08-24T15:28:35Z", "author": {"login": "iscai-msft"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -98,6 +102,12 @@\n     @Test\n     abstract void recognizeEntitiesForFaultyText(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion);\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0NTU0Ng==", "bodyText": "I was thinking to do it later when resolving this issue #13960. But it should be good to include the tests but keep the issue open until service resolve it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476145546", "createdAt": "2020-08-25T04:13:06Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -98,6 +102,12 @@\n     @Test\n     abstract void recognizeEntitiesForFaultyText(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion);\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwMDIzOA=="}, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1ODM2NA==", "bodyText": "seems only detect_language can take more than 31 documents currently. Does it happen in Python? Other endpoints can throw errors in 10 documents.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476158364", "createdAt": "2020-08-25T04:31:06Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -98,6 +102,12 @@\n     @Test\n     abstract void recognizeEntitiesForFaultyText(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion);\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwMDIzOA=="}, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0MjAzOA==", "bodyText": "the limit is different for the different endpoints, see here.  For detect_language i don't have any tests, since if I have more than 1000 documents, I run into batch oversize error instead. The other tests I do based off of the size limit + 1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476542038", "createdAt": "2020-08-25T15:33:17Z", "author": {"login": "iscai-msft"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -98,6 +102,12 @@\n     @Test\n     abstract void recognizeEntitiesForFaultyText(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion);\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwMDIzOA=="}, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkyMDA1OQ==", "bodyText": "OK. then i would have no test for detect_language endpoint then", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476920059", "createdAt": "2020-08-26T00:41:45Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -98,6 +102,12 @@\n     @Test\n     abstract void recognizeEntitiesForFaultyText(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion);\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTcwMDIzOA=="}, "originalCommit": {"oid": "d86c8c083ff2c8e42e4a00d2d3bd48e3354e1428"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTI3NzQwOnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTozNDowOVrOHGd2pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMDo0OToyNlrOHG1NYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0MjYzMA==", "bodyText": "nit: i'd remove this commented out code, you can't really reach too many documents with detect_language, since if you go over, you will actually run into a batch size overload error instead", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476542630", "createdAt": "2020-08-25T15:34:09Z", "author": {"login": "iscai-msft"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -243,6 +243,25 @@ public void detectLanguageNoneCountryHint(HttpClient httpClient, TextAnalyticsSe\n                 .verifyComplete());\n     }\n \n+//    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64bb30b01cef0c1cd394a06fd0d6a96334998a81"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkyNTI4Mw==", "bodyText": "removed this test", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476925283", "createdAt": "2020-08-26T00:49:26Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -243,6 +243,25 @@ public void detectLanguageNoneCountryHint(HttpClient httpClient, TextAnalyticsSe\n                 .verifyComplete());\n     }\n \n+//    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0MjYzMA=="}, "originalCommit": {"oid": "64bb30b01cef0c1cd394a06fd0d6a96334998a81"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTI4MjE0OnYy", "diffSide": "RIGHT", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTozNToxM1rOHGd5oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMDozNDozMVrOHG0mIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0MzM5Mg==", "bodyText": "just to clarify, you're going to start asserting the error code and message once you regenerate with the swagger fix?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476543392", "createdAt": "2020-08-25T15:35:13Z", "author": {"login": "iscai-msft"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -365,6 +384,22 @@ public void recognizeEntitiesForListWithOptions(HttpClient httpClient, TextAnaly\n                 .verifyComplete());\n     }\n \n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void recognizeEntitiesBatchTooManyDocuments(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        tooManyDocumentsRunner(inputs ->\n+            StepVerifier.create(client.recognizeEntitiesBatch(inputs, null, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64bb30b01cef0c1cd394a06fd0d6a96334998a81"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjkxNTIzNA==", "bodyText": "I will only assert the error code.\nJohan's comments in Cognitive Scrum chat:\n\"\"Note: we should not (in the general case) be asserting on error messages. I would not consider localizing error messages to be a breaking change, for example...\"\" and \"Yes. I assume that we don't have client library dependencies on the message itself (it's been done in the past, and it has not ended well)\"", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14324#discussion_r476915234", "createdAt": "2020-08-26T00:34:31Z", "author": {"login": "mssfang"}, "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -365,6 +384,22 @@ public void recognizeEntitiesForListWithOptions(HttpClient httpClient, TextAnaly\n                 .verifyComplete());\n     }\n \n+    @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n+    @MethodSource(\"com.azure.ai.textanalytics.TestUtils#getTestParameters\")\n+    public void recognizeEntitiesBatchTooManyDocuments(HttpClient httpClient, TextAnalyticsServiceVersion serviceVersion) {\n+        client = getTextAnalyticsAsyncClient(httpClient, serviceVersion);\n+        tooManyDocumentsRunner(inputs ->\n+            StepVerifier.create(client.recognizeEntitiesBatch(inputs, null, null))\n+                .verifyErrorSatisfies(ex -> {\n+                    HttpResponseException httpResponseException = (HttpResponseException) ex;\n+                    assertEquals(400, httpResponseException.getResponse().getStatusCode());\n+                    TextAnalyticsError textAnalyticsError = (TextAnalyticsError) httpResponseException.getValue();\n+                    // TODO: TextAnalyticsError has null values for all properties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0MzM5Mg=="}, "originalCommit": {"oid": "64bb30b01cef0c1cd394a06fd0d6a96334998a81"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1582, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}