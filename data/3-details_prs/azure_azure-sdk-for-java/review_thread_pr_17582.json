{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODg3MDE3", "number": 17582, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjo1MjowOFrOE43IEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozOTozNFrOFOTgcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDU4ODk2OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/implementation/OkHttpClientProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMjo1MjowOFrOHzCFHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzozNjowNFrOHzC0cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MzUwMQ==", "bodyText": "If I understand correctly ClientOptions::responseTimeout is not applicable for OkHttp right?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r523273501", "createdAt": "2020-11-13T22:52:08Z", "author": {"login": "anuchandy"}, "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/implementation/OkHttpClientProvider.java", "diffHunk": "@@ -13,4 +14,18 @@\n     public HttpClient createInstance() {\n         return new OkHttpAsyncHttpClientBuilder().build();\n     }\n+\n+    @Override\n+    public HttpClient createInstance(HttpClientOptions clientOptions) {\n+        OkHttpAsyncHttpClientBuilder builder = new OkHttpAsyncHttpClientBuilder();\n+\n+        if (clientOptions != null) {\n+            builder = builder.proxy(clientOptions.getProxyOptions())\n+                .configuration(clientOptions.getConfiguration())\n+                .writeTimeout(clientOptions.getWriteTimeout())\n+                .readTimeout(clientOptions.getReadTimeout());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e0135284af9ae7449cbe615488138d14d937f26"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NTYxNg==", "bodyText": "Correct, OkHttp doesn't have an explicit API to set the timeout period for receiving a response for a request.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r523285616", "createdAt": "2020-11-13T23:36:04Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/implementation/OkHttpClientProvider.java", "diffHunk": "@@ -13,4 +14,18 @@\n     public HttpClient createInstance() {\n         return new OkHttpAsyncHttpClientBuilder().build();\n     }\n+\n+    @Override\n+    public HttpClient createInstance(HttpClientOptions clientOptions) {\n+        OkHttpAsyncHttpClientBuilder builder = new OkHttpAsyncHttpClientBuilder();\n+\n+        if (clientOptions != null) {\n+            builder = builder.proxy(clientOptions.getProxyOptions())\n+                .configuration(clientOptions.getConfiguration())\n+                .writeTimeout(clientOptions.getWriteTimeout())\n+                .readTimeout(clientOptions.getReadTimeout());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MzUwMQ=="}, "originalCommit": {"oid": "7e0135284af9ae7449cbe615488138d14d937f26"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODk5MjUwOnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoyOToyOVrOH0QKJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoyOToyOVrOH0QKJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjc0MQ==", "bodyText": "Do we need a new type here? We already have ClientOptions which also is used for configuring client-specific settings.  There are pros and cons to using ClientOptions vs creating new HttpClientOptions.\nUsing ClientOptions:\nPros:\n\nClientOptions is already GA'd and is wired on to many client builders. So, adding a new configuration to ClientOptions will require no further changes to client builders in terms of API.\nUser has to learn about just one ClientOptions type\n\nCons:\n\nClientOptions is used for both AMQP and HTTP clients. So, some of the configurations in HTTP client options may not apply for AMQP services\n\nUsing HttpClientOptions:\nPros:\n\nContains only configurations applicable to HTTP-based services\n\nCons:\n\nRequires updating client builders of all services to add a new option to set HttpClientOptions\nUsers will see two setters: clientOptions(ClientOptions clientOptions) and httpClientOptions(HttpClientOptions httpClientOptions)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r524552741", "createdAt": "2020-11-16T20:29:29Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,161 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;\n+\n+import com.azure.core.util.Configuration;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.TableEntity\n+ */\n+public class HttpClientOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e0135284af9ae7449cbe615488138d14d937f26"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTQyNDE4OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozNToxNFrOIS_G2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozNToxNFrOIS_G2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc3OTIyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return The update HttpClientOptions object.\n          \n          \n            \n                 * @return The updated HttpClientOptions object.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556779227", "createdAt": "2021-01-13T19:35:14Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,176 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.ProxyOptions;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.\n+ */\n+public class HttpClientOptions extends ClientOptions {\n+    private static final Duration MINIMUM_TIMEOUT = Duration.ofMillis(1);\n+    private static final Duration DEFAULT_TIMEOUT = Duration.ofSeconds(60);\n+    private static final Duration NO_TIMEOUT = Duration.ZERO;\n+\n+    private ProxyOptions proxyOptions;\n+    private Configuration configuration;\n+    private Duration writeTimeout;\n+    private Duration responseTimeout;\n+    private Duration readTimeout;\n+\n+    @Override\n+    public HttpClientOptions setApplicationId(String applicationId) {\n+        super.setApplicationId(applicationId);\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public HttpClientOptions setHeaders(Iterable<Header> headers) {\n+        super.setHeaders(headers);\n+\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the {@link ProxyOptions proxy options} that the {@link HttpClient} will use.\n+     *\n+     * @param proxyOptions The proxy options to use.\n+     * @return The update HttpClientOptions object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTQzODU1OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/samples/java/com/azure/core/http/HttpPipelineBuilderJavaDocCodeSnippets.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozOTowOVrOIS_PZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTo1MzowMFrOIS_uzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA==", "bodyText": "How about moving the codesnippets into a package like com.azure.core.docs.*? This will keep the samples clean for the user to find runnable code samples.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556781414", "createdAt": "2021-01-13T19:39:09Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/samples/java/com/azure/core/http/HttpPipelineBuilderJavaDocCodeSnippets.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4NDgzMA==", "bodyText": "This sounds like a good location, let's do this in another PR.\nShould we make this a standard convention? Ex. in AppConfiguration they'll use com.azure.data.appconfiguration.docs.*", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556784830", "createdAt": "2021-01-13T19:45:02Z", "author": {"login": "alzimmermsft"}, "path": "sdk/core/azure-core/src/samples/java/com/azure/core/http/HttpPipelineBuilderJavaDocCodeSnippets.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA=="}, "originalCommit": {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4OTQ1NA==", "bodyText": "Yeah, this should be a standard convention for all client libraries.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556789454", "createdAt": "2021-01-13T19:53:00Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/samples/java/com/azure/core/http/HttpPipelineBuilderJavaDocCodeSnippets.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA=="}, "originalCommit": {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTQzOTg3OnYy", "diffSide": "RIGHT", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozOTozNFrOIS_QOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxOTozOTozNFrOIS_QOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTYyNQ==", "bodyText": "Make this final.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556781625", "createdAt": "2021-01-13T19:39:34Z", "author": {"login": "srnagar"}, "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,176 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.ProxyOptions;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.\n+ */\n+public class HttpClientOptions extends ClientOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2853, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}