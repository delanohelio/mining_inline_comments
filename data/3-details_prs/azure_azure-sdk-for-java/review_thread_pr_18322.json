{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NTA4NjM3", "number": 18322, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoxODoyNVrOFIcofg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyNzowNlrOFIc3vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDAyMDQ2OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoxODoyNVrOIKXpWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoxODoyNVrOIKXpWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0NDA4OQ==", "bodyText": "Hi, @lzc-1997-abel , please create another PR to set multiple scopes for graph and office. For both test and sample(with readme).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18322#discussion_r547744089", "createdAt": "2020-12-23T07:18:25Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.converter;\n+\n+import com.azure.test.oauth.SeleniumTestUtils;\n+import com.azure.test.utils.AppRunner;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.*;\n+\n+public class RefreshTokenScopesIT {\n+\n+    @Test\n+    public void testRefreshTokenConverter() {\n+        try (AppRunner app = new AppRunner(DumbApp.class)) {\n+            SeleniumTestUtils.addProperty(app);\n+            app.property(\"azure.activedirectory.authorization.office.scopes\", \"https://manage.office.com/ActivityFeed.Read\");\n+            app.property(\"azure.activedirectory.authorization.graph.scopes\", \"https://graph.microsoft.com/User.Read\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a5aab36c6ce71b8176a484bf77c42d425f4cf8"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDAzMDE0OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyMDozMlrOIKXvsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyMDozMlrOIKXvsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0NTcxMg==", "bodyText": "Why office and graph should contain profile scope? I remember openid and profile only needed for on-demand client.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18322#discussion_r547745712", "createdAt": "2020-12-23T07:20:32Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.converter;\n+\n+import com.azure.test.oauth.SeleniumTestUtils;\n+import com.azure.test.utils.AppRunner;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.*;\n+\n+public class RefreshTokenScopesIT {\n+\n+    @Test\n+    public void testRefreshTokenConverter() {\n+        try (AppRunner app = new AppRunner(DumbApp.class)) {\n+            SeleniumTestUtils.addProperty(app);\n+            app.property(\"azure.activedirectory.authorization.office.scopes\", \"https://manage.office.com/ActivityFeed.Read\");\n+            app.property(\"azure.activedirectory.authorization.graph.scopes\", \"https://graph.microsoft.com/User.Read\");\n+            List<String> endPoints = new ArrayList<>();\n+            endPoints.add(\"api/office\");\n+            endPoints.add(\"api/azure\");\n+            endPoints.add(\"api/graph\");\n+            endPoints.add(\"api/arm\");\n+            Map<String, String> result = SeleniumTestUtils.get(app, endPoints);\n+\n+            Assert.assertFalse(result.get(\"api/office\").contains(\"profile\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a5aab36c6ce71b8176a484bf77c42d425f4cf8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDAzMzQ0OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyMToyN1rOIKXx5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyMToyN1rOIKXx5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0NjI3Nw==", "bodyText": "accessTokenScopes/office is easier to understand. Same to other endpoints.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18322#discussion_r547746277", "createdAt": "2020-12-23T07:21:27Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.converter;\n+\n+import com.azure.test.oauth.SeleniumTestUtils;\n+import com.azure.test.utils.AppRunner;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.*;\n+\n+public class RefreshTokenScopesIT {\n+\n+    @Test\n+    public void testRefreshTokenConverter() {\n+        try (AppRunner app = new AppRunner(DumbApp.class)) {\n+            SeleniumTestUtils.addProperty(app);\n+            app.property(\"azure.activedirectory.authorization.office.scopes\", \"https://manage.office.com/ActivityFeed.Read\");\n+            app.property(\"azure.activedirectory.authorization.graph.scopes\", \"https://graph.microsoft.com/User.Read\");\n+            List<String> endPoints = new ArrayList<>();\n+            endPoints.add(\"api/office\");\n+            endPoints.add(\"api/azure\");\n+            endPoints.add(\"api/graph\");\n+            endPoints.add(\"api/arm\");\n+            Map<String, String> result = SeleniumTestUtils.get(app, endPoints);\n+\n+            Assert.assertFalse(result.get(\"api/office\").contains(\"profile\"));\n+            Assert.assertTrue(result.get(\"api/office\").contains(\"https://manage.office.com/ActivityFeed.Read\"));\n+\n+            Assert.assertTrue(result.get(\"api/azure\").contains(\"profile\"));\n+            Assert.assertTrue(result.get(\"api/azure\").contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+            Assert.assertTrue(result.get(\"api/graph\").contains(\"profile\"));\n+            Assert.assertTrue(result.get(\"api/graph\").contains(\"https://graph.microsoft.com/User.Read\"));\n+\n+            Assert.assertNotEquals(\"error\", result.get(\"api/arm\"));\n+        }\n+    }\n+\n+    @EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)\n+    @SpringBootApplication\n+    @RestController\n+    public static class DumbApp {\n+\n+        @GetMapping(value = \"api/office\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a5aab36c6ce71b8176a484bf77c42d425f4cf8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDA0NjYzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/oauth/SeleniumTestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyNDoxOVrOIKX6sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyNDoxOVrOIKX6sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc0ODUzMA==", "bodyText": "Can we put endPoints.get(0) into for loop?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18322#discussion_r547748530", "createdAt": "2020-12-23T07:24:19Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/oauth/SeleniumTestUtils.java", "diffHunk": "@@ -77,12 +79,12 @@\n             Thread.sleep(10000);\n             driver.findElement(By.cssSelector(\"input[type='submit']\")).click();\n             Thread.sleep(10000);\n-            result.add(driver.findElement(By.tagName(\"body\")).getText());\n+            result.put(endPoints.get(0) , driver.findElement(By.tagName(\"body\")).getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a5aab36c6ce71b8176a484bf77c42d425f4cf8"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NDA1OTUxOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyNzowNlrOIKYC2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzoyNzowNlrOIKYC2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc1MDYxNg==", "bodyText": "accessTokenScopesIT", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18322#discussion_r547750616", "createdAt": "2020-12-23T07:27:06Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot-test-aad/src/test/java/com/azure/test/aad/converter/RefreshTokenScopesIT.java", "diffHunk": "@@ -0,0 +1,88 @@\n+\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.test.aad.converter;\n+\n+import com.azure.test.oauth.SeleniumTestUtils;\n+import com.azure.test.utils.AppRunner;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.*;\n+\n+public class RefreshTokenScopesIT {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a5aab36c6ce71b8176a484bf77c42d425f4cf8"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2502, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}