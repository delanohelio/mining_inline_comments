{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwOTcwODI2", "number": 16886, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMToyOToxNlrOEyj9-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMToyOToxNlrOEyj9-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDUzNTYxOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMToyOToxNlrOHpRuDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMTozMzowOFrOHpR1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0Mzk4Mw==", "bodyText": "FAILED_CLOSE_CONSUMER_PARTITION=Failed to close consumer for partition {}\nThe string has only one parameter but this call gives two.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16886#discussion_r513043983", "createdAt": "2020-10-27T21:29:16Z", "author": {"login": "YijunXieMS"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "diffHunk": "@@ -128,12 +128,19 @@ void stopAllPartitionPumps() {\n      * @param ownership The partition ownership information for which the connection state will be verified.\n      */\n     void verifyPartitionConnection(PartitionOwnership ownership) {\n-        if (partitionPumps.containsKey(ownership.getPartitionId())) {\n-            EventHubConsumerAsyncClient consumerClient = partitionPumps.get(ownership.getPartitionId());\n+        String partitionId = ownership.getPartitionId();\n+        if (partitionPumps.containsKey(partitionId)) {\n+            EventHubConsumerAsyncClient consumerClient = partitionPumps.get(partitionId);\n             if (consumerClient.isConnectionClosed()) {\n                 logger.info(\"Connection closed for {}, partition {}. Removing the consumer.\",\n-                    ownership.getEventHubName(), ownership.getPartitionId());\n-                partitionPumps.remove(ownership.getPartitionId());\n+                    ownership.getEventHubName(), partitionId);\n+                try {\n+                    partitionPumps.get(partitionId).close();\n+                } catch (Exception ex) {\n+                    logger.warning(Messages.FAILED_CLOSE_CONSUMER_PARTITION, partitionId, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7acb9f7fa2ee955290b4051476416bbb7d0af94a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0NTg3Mw==", "bodyText": "For logs, the last arg can be an exception that isn't part of the message param.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16886#discussion_r513045873", "createdAt": "2020-10-27T21:33:08Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "diffHunk": "@@ -128,12 +128,19 @@ void stopAllPartitionPumps() {\n      * @param ownership The partition ownership information for which the connection state will be verified.\n      */\n     void verifyPartitionConnection(PartitionOwnership ownership) {\n-        if (partitionPumps.containsKey(ownership.getPartitionId())) {\n-            EventHubConsumerAsyncClient consumerClient = partitionPumps.get(ownership.getPartitionId());\n+        String partitionId = ownership.getPartitionId();\n+        if (partitionPumps.containsKey(partitionId)) {\n+            EventHubConsumerAsyncClient consumerClient = partitionPumps.get(partitionId);\n             if (consumerClient.isConnectionClosed()) {\n                 logger.info(\"Connection closed for {}, partition {}. Removing the consumer.\",\n-                    ownership.getEventHubName(), ownership.getPartitionId());\n-                partitionPumps.remove(ownership.getPartitionId());\n+                    ownership.getEventHubName(), partitionId);\n+                try {\n+                    partitionPumps.get(partitionId).close();\n+                } catch (Exception ex) {\n+                    logger.warning(Messages.FAILED_CLOSE_CONSUMER_PARTITION, partitionId, ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0Mzk4Mw=="}, "originalCommit": {"oid": "7acb9f7fa2ee955290b4051476416bbb7d0af94a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3874, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}