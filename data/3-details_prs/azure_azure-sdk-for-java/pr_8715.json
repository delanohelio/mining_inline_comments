{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDE1MjI1", "number": 8715, "title": "Add configuration for refresh token before expiry", "bodyText": "Add tests later but just opening a PR for design discussion.\nFixes #6182\nSample usage:\nManagedIdentityCredential credential = new ManagedIdentityCredentialBuilder()\n    .clientId(\"user managed identity client id\")\n    .tokenRefreshOffset(Duration.ofMinutes(10))\n    .build();", "createdAt": "2020-03-05T01:18:20Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715", "merged": true, "mergeCommit": {"oid": "d4080735f46181037b0c5e27e7d526cecec18a87"}, "closed": true, "closedAt": "2020-03-06T21:46:30Z", "author": {"login": "jianghaolu"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKhDcMgH2gAyMzg0MDE1MjI1OjUxMGRjMjc5YWFlODA3ZDQ3MjQwOWVlZDgyZjg5ZmY2ZThlNzE2NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLGnIIgFqTM3MDYyMzgwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "510dc279aae807d472409eed82f89ff6e8e71659", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/510dc279aae807d472409eed82f89ff6e8e71659", "committedDate": "2020-03-05T01:15:57Z", "message": "Add configuration for refresh token before expiry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1217579f5f1dcbaa2723d0d56560edce1ac6f1fa", "committedDate": "2020-03-05T01:17:47Z", "message": "Fix test utils in identity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjM3OTA2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369237906", "createdAt": "2020-03-05T01:18:47Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToxODo0OFrOFyDZmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToxODo0OFrOFyDZmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAyODgyNg==", "bodyText": "A better name suggestion is welcome", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388028826", "createdAt": "2020-03-05T01:18:48Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/CredentialBuilderBase.java", "diffHunk": "@@ -68,4 +68,17 @@ public T httpPipeline(HttpPipeline httpPipeline) {\n         this.identityClientOptions.setHttpPipeline(httpPipeline);\n         return (T) this;\n     }\n+\n+    /**\n+     * Sets the duration before the actual expiry of a token to refresh it.\n+     * This is useful when network is congested and a request containing the\n+     * token takes longer than normal to get to the server.\n+     *\n+     * @param refreshBeforeExpiry the duration before the actual expiry of a token to refresh it\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public T setRefreshBeforeExpiry(Duration refreshBeforeExpiry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjM4MTk3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369238197", "createdAt": "2020-03-05T01:19:49Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToxOTo0OVrOFyDanw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToxOTo0OVrOFyDanw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAyOTA4Nw==", "bodyText": "Default matches the 2 minutes in AccessToken: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core/src/main/java/com/azure/core/credential/AccessToken.java#L22", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388029087", "createdAt": "2020-03-05T01:19:49Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClientOptions.java", "diffHunk": "@@ -21,6 +21,7 @@\n     private Function<Duration, Duration> retryTimeout;\n     private ProxyOptions proxyOptions;\n     private HttpPipeline httpPipeline;\n+    private Duration refreshBeforeExpiry = Duration.ofMinutes(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjM4NTAx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369238501", "createdAt": "2020-03-05T01:20:50Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToyMDo1MVrOFyDbvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMToyMDo1MVrOFyDbvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAyOTM3NA==", "bodyText": "Reverts the minus 2 minutes in AccessToken: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core/src/main/java/com/azure/core/credential/AccessToken.java#L22", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388029374", "createdAt": "2020-03-05T01:20:51Z", "author": {"login": "jianghaolu"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MsalToken.java", "diffHunk": "@@ -22,9 +22,10 @@\n      *\n      * @param msalResult the raw authentication result returned by MSAL\n      */\n-    public MsalToken(IAuthenticationResult msalResult) {\n-        super(msalResult.accessToken(), OffsetDateTime.ofInstant(msalResult.expiresOnDate().toInstant(),\n-            ZoneOffset.UTC));\n+    public MsalToken(IAuthenticationResult msalResult, IdentityClientOptions options) {\n+        super(msalResult.accessToken(), OffsetDateTime.ofInstant(\n+                msalResult.expiresOnDate().toInstant().minus(options.getRefreshBeforeExpiry()), ZoneOffset.UTC)\n+            .plusMinutes(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Mjc0Mzkw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369274390", "createdAt": "2020-03-05T03:26:47Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMzoyNjo0N1rOFyFVgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMzo0Nzo0OFrOFyFmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2MDU0NQ==", "bodyText": "How about `tokenRefreshOffset' or similar?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388060545", "createdAt": "2020-03-05T03:26:47Z", "author": {"login": "JonathanGiles"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/CredentialBuilderBase.java", "diffHunk": "@@ -68,4 +68,17 @@ public T httpPipeline(HttpPipeline httpPipeline) {\n         this.identityClientOptions.setHttpPipeline(httpPipeline);\n         return (T) this;\n     }\n+\n+    /**\n+     * Sets the duration before the actual expiry of a token to refresh it.\n+     * This is useful when network is congested and a request containing the\n+     * token takes longer than normal to get to the server.\n+     *\n+     * @param refreshBeforeExpiry the duration before the actual expiry of a token to refresh it\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public T setRefreshBeforeExpiry(Duration refreshBeforeExpiry) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAyODgyNg=="}, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2MDY0Ng==", "bodyText": "You should document what the default value is if it is not set.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388060646", "createdAt": "2020-03-05T03:27:17Z", "author": {"login": "JonathanGiles"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/CredentialBuilderBase.java", "diffHunk": "@@ -68,4 +68,17 @@ public T httpPipeline(HttpPipeline httpPipeline) {\n         this.identityClientOptions.setHttpPipeline(httpPipeline);\n         return (T) this;\n     }\n+\n+    /**\n+     * Sets the duration before the actual expiry of a token to refresh it.\n+     * This is useful when network is congested and a request containing the\n+     * token takes longer than normal to get to the server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2NDcxOQ==", "bodyText": "There is duplicate code here and above for creating the AccessToken, which is a possible source of bugs in the future if they are not kept in sync. Consider creating a method to centralise it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388064719", "createdAt": "2020-03-05T03:46:55Z", "author": {"login": "JonathanGiles"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -403,7 +401,9 @@\n                             .useDelimiter(\"\\\\A\");\n                     String result = s.hasNext() ? s.next() : \"\";\n \n-                    return SERIALIZER_ADAPTER.<MSIToken>deserialize(result, MSIToken.class, SerializerEncoding.JSON);\n+                    MSIToken msiToken = SERIALIZER_ADAPTER.<MSIToken>deserialize(result, MSIToken.class, SerializerEncoding.JSON);\n+                    return new AccessToken(msiToken.getToken(),\n+                            msiToken.getExpiresAt().plusMinutes(2).minus(options.getRefreshBeforeExpiry()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA2NDkyNA==", "bodyText": "I feel like we are spreading the two minute concept out throughout the code base. Can you have it as a private static final value that is referred to everywhere?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388064924", "createdAt": "2020-03-05T03:47:48Z", "author": {"login": "JonathanGiles"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MsalToken.java", "diffHunk": "@@ -22,9 +22,10 @@\n      *\n      * @param msalResult the raw authentication result returned by MSAL\n      */\n-    public MsalToken(IAuthenticationResult msalResult) {\n-        super(msalResult.accessToken(), OffsetDateTime.ofInstant(msalResult.expiresOnDate().toInstant(),\n-            ZoneOffset.UTC));\n+    public MsalToken(IAuthenticationResult msalResult, IdentityClientOptions options) {\n+        super(msalResult.accessToken(), OffsetDateTime.ofInstant(\n+                msalResult.expiresOnDate().toInstant().minus(options.getRefreshBeforeExpiry()), ZoneOffset.UTC)\n+            .plusMinutes(2));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAyOTM3NA=="}, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MjkxMTk2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369291196", "createdAt": "2020-03-05T04:39:16Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNDozOToxNlrOFyGNDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNDozOToxNlrOFyGNDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDc2Nw==", "bodyText": "This adjustment of expires time looks good to me, but I have a question on when should we acquire the token from MSI endpoint. This method seems to retrieve the token as soon as it is called. Let's say it is called at 1 pm so token acquired at 1.00 pm, now let's caller subscribed to the returned Mono at 1.10 pm, now caller is served with 10 min old token. Should we delay the token acquisition until the caller subscribes to the returned mono? (I mean putting the entire acquisition logic in Mono.defer).", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r388074767", "createdAt": "2020-03-05T04:39:16Z", "author": {"login": "anuchandy"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -350,7 +346,9 @@\n             Scanner s = new Scanner(connection.getInputStream(), StandardCharsets.UTF_8.name()).useDelimiter(\"\\\\A\");\n             String result = s.hasNext() ? s.next() : \"\";\n \n-            return Mono.just(SERIALIZER_ADAPTER.deserialize(result, MSIToken.class, SerializerEncoding.JSON));\n+            MSIToken msiToken = SERIALIZER_ADAPTER.deserialize(result, MSIToken.class, SerializerEncoding.JSON);\n+            return Mono.just(new AccessToken(msiToken.getToken(),\n+                    msiToken.getExpiresAt().plusMinutes(2).minus(options.getRefreshBeforeExpiry())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzE0ODYy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-369314862", "createdAt": "2020-03-05T06:09:47Z", "commit": {"oid": "1217579f5f1dcbaa2723d0d56560edce1ac6f1fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a934984f22895336c51fbe443c69443ee1494353", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/a934984f22895336c51fbe443c69443ee1494353", "committedDate": "2020-03-05T19:56:05Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e0664454f86a2cc762bf6ce5dfbdc0ef0f6c53c", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3e0664454f86a2cc762bf6ce5dfbdc0ef0f6c53c", "committedDate": "2020-03-05T20:00:00Z", "message": "Builder style setter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc7bf1d7495b77d8cc6ef3fa90de835e62136afa", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc7bf1d7495b77d8cc6ef3fa90de835e62136afa", "committedDate": "2020-03-05T22:40:59Z", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into refreshbeforeexpiry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTEyMTQ4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-370512148", "createdAt": "2020-03-06T17:50:14Z", "commit": {"oid": "dc7bf1d7495b77d8cc6ef3fa90de835e62136afa"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzo1MDoxNFrOFzB0PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzo1MzozMFrOFzB6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MTQ1Mw==", "bodyText": "nit; null check.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r389051453", "createdAt": "2020-03-06T17:50:14Z", "author": {"login": "anuchandy"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClientOptions.java", "diffHunk": "@@ -125,6 +126,29 @@ public IdentityClientOptions setHttpPipeline(HttpPipeline httpPipeline) {\n         return this;\n     }\n \n+    /**\n+<<<<<<< HEAD\n+     * @return how long before the actual token expiry to refresh the token.\n+     */\n+    public Duration getTokenRefreshOffset() {\n+        return tokenRefreshOffset;\n+    }\n+\n+    /**\n+     * Sets how long before the actual token expiry to refresh the token. The\n+     * token will be considered expired at and after the time of (actual\n+     * expiry - token refresh offset). The default offset is 2 minutes.\n+     *\n+     * This is useful when network is congested and a request containing the\n+     * token takes longer than normal to get to the server.\n+     *\n+     * @param tokenRefreshOffset the duration before the actual expiry of a token to refresh it\n+     */\n+    public IdentityClientOptions setTokenRefreshOffset(Duration tokenRefreshOffset) {\n+        this.tokenRefreshOffset = tokenRefreshOffset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7bf1d7495b77d8cc6ef3fa90de835e62136afa"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1MTUyMw==", "bodyText": "nit; <<<<<<< HEAD from conflict resoln.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r389051523", "createdAt": "2020-03-06T17:50:23Z", "author": {"login": "anuchandy"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClientOptions.java", "diffHunk": "@@ -125,6 +126,29 @@ public IdentityClientOptions setHttpPipeline(HttpPipeline httpPipeline) {\n         return this;\n     }\n \n+    /**\n+<<<<<<< HEAD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7bf1d7495b77d8cc6ef3fa90de835e62136afa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA1Mjk5NA==", "bodyText": "nit; Object.requireNonNull checks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#discussion_r389052994", "createdAt": "2020-03-06T17:53:30Z", "author": {"login": "anuchandy"}, "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityToken.java", "diffHunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity.implementation;\n+\n+import com.azure.core.credential.AccessToken;\n+\n+import java.time.OffsetDateTime;\n+\n+/**\n+ * Type representing authentication result from the azure-identity client.\n+ */\n+public class IdentityToken extends AccessToken {\n+    /**\n+     * Creates an identity token instance.\n+     *\n+     * @param token the token string.\n+     * @param expiresAt the expiration time.\n+     * @param options the identity client options.\n+     */\n+    public IdentityToken(String token, OffsetDateTime expiresAt, IdentityClientOptions options) {\n+        super(token, expiresAt.plusMinutes(2).minus(options.getTokenRefreshOffset()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7bf1d7495b77d8cc6ef3fa90de835e62136afa"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07a5ce9c0ae694d1e9bf34bfd90ce6527a28aec0", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/07a5ce9c0ae694d1e9bf34bfd90ce6527a28aec0", "committedDate": "2020-03-06T20:24:01Z", "message": "Add tests and address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjIzODA4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8715#pullrequestreview-370623808", "createdAt": "2020-03-06T21:01:25Z", "commit": {"oid": "07a5ce9c0ae694d1e9bf34bfd90ce6527a28aec0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 891, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}