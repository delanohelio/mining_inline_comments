{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyODk0MjUx", "number": 10145, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMjo1MToyOFrODxdZsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMjo1MToyOFrODxdZsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTg4NTMxOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMjo1MToyOFrOGE8Q_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNTo0NToyM1rOGE_EHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgzNDg3Ng==", "bodyText": "This logic doesn't exist in SB either.... would you mind copy and paste it there? :D Kill two birds with 3 stones?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10145#discussion_r407834876", "createdAt": "2020-04-14T02:51:28Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "diffHunk": "@@ -624,17 +627,26 @@ private ProxyOptions getDefaultProxyConfiguration(Configuration configuration) {\n             return ProxyOptions.SYSTEM_DEFAULTS;\n         }\n \n-        final String[] hostPort = proxyAddress.split(\":\");\n-        if (hostPort.length < 2) {\n-            throw logger.logExceptionAsError(new IllegalArgumentException(\"HTTP_PROXY cannot be parsed into a proxy\"));\n-        }\n-\n-        final String host = hostPort[0];\n-        final int port = Integer.parseInt(hostPort[1]);\n-        final Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(host, port));\n-        final String username = configuration.get(ProxyOptions.PROXY_USERNAME);\n-        final String password = configuration.get(ProxyOptions.PROXY_PASSWORD);\n+        return getProxyOptions(authentication, proxyAddress);\n+    }\n \n-        return new ProxyOptions(authentication, proxy, username, password);\n+    private ProxyOptions getProxyOptions(ProxyAuthenticationType authentication, String proxyAddress) {\n+        String host;\n+        int port;\n+        if (HOST_PORT_PATTERN.matcher(proxyAddress.trim()).find()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5769d2b240fd33c05a4458aad29a4c2b44d6142"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3MjkzNw==", "bodyText": "Sure, let me fix SB too.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10145#discussion_r407872937", "createdAt": "2020-04-14T05:19:34Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "diffHunk": "@@ -624,17 +627,26 @@ private ProxyOptions getDefaultProxyConfiguration(Configuration configuration) {\n             return ProxyOptions.SYSTEM_DEFAULTS;\n         }\n \n-        final String[] hostPort = proxyAddress.split(\":\");\n-        if (hostPort.length < 2) {\n-            throw logger.logExceptionAsError(new IllegalArgumentException(\"HTTP_PROXY cannot be parsed into a proxy\"));\n-        }\n-\n-        final String host = hostPort[0];\n-        final int port = Integer.parseInt(hostPort[1]);\n-        final Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(host, port));\n-        final String username = configuration.get(ProxyOptions.PROXY_USERNAME);\n-        final String password = configuration.get(ProxyOptions.PROXY_PASSWORD);\n+        return getProxyOptions(authentication, proxyAddress);\n+    }\n \n-        return new ProxyOptions(authentication, proxy, username, password);\n+    private ProxyOptions getProxyOptions(ProxyAuthenticationType authentication, String proxyAddress) {\n+        String host;\n+        int port;\n+        if (HOST_PORT_PATTERN.matcher(proxyAddress.trim()).find()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgzNDg3Ng=="}, "originalCommit": {"oid": "b5769d2b240fd33c05a4458aad29a4c2b44d6142"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg4MDczMw==", "bodyText": "You're the best!", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10145#discussion_r407880733", "createdAt": "2020-04-14T05:45:23Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubClientBuilder.java", "diffHunk": "@@ -624,17 +627,26 @@ private ProxyOptions getDefaultProxyConfiguration(Configuration configuration) {\n             return ProxyOptions.SYSTEM_DEFAULTS;\n         }\n \n-        final String[] hostPort = proxyAddress.split(\":\");\n-        if (hostPort.length < 2) {\n-            throw logger.logExceptionAsError(new IllegalArgumentException(\"HTTP_PROXY cannot be parsed into a proxy\"));\n-        }\n-\n-        final String host = hostPort[0];\n-        final int port = Integer.parseInt(hostPort[1]);\n-        final Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(host, port));\n-        final String username = configuration.get(ProxyOptions.PROXY_USERNAME);\n-        final String password = configuration.get(ProxyOptions.PROXY_PASSWORD);\n+        return getProxyOptions(authentication, proxyAddress);\n+    }\n \n-        return new ProxyOptions(authentication, proxy, username, password);\n+    private ProxyOptions getProxyOptions(ProxyAuthenticationType authentication, String proxyAddress) {\n+        String host;\n+        int port;\n+        if (HOST_PORT_PATTERN.matcher(proxyAddress.trim()).find()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgzNDg3Ng=="}, "originalCommit": {"oid": "b5769d2b240fd33c05a4458aad29a4c2b44d6142"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1879, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}