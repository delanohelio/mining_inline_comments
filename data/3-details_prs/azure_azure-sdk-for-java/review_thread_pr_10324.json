{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDM5NzU1", "number": 10324, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTowMzowNVrODy2_lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMTo1MzoxM1rODzgn2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjU2NDA3OnYy", "diffSide": "RIGHT", "path": "sdk/management/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTowMzowNVrOGHJqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjo1ODo1N1rOGIBNNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1MTQ3NQ==", "bodyText": "Any reason we pick this beta version? The latest is 4.0.2.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410151475", "createdAt": "2020-04-17T11:03:05Z", "author": {"login": "xseeseesee"}, "path": "sdk/management/pom.xml", "diffHunk": "@@ -91,6 +91,12 @@\n                 <artifactId>azure-storage-blob</artifactId>\n                 <version>12.4.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.github.spotbugs</groupId>\n+                <artifactId>spotbugs-annotations</artifactId>\n+                <version>4.0.0-beta3</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0ODI4OA==", "bodyText": "This is aligned with the plugin version. https://github.com/azure/azure-sdk-for-java/blob/5810f30086c93a1431deeae7f0a10f890b0012d6/sdk/management/pom.xml#L221, I'm not sure if these should be aligned or not. Maybe we could discuss about.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411048288", "createdAt": "2020-04-20T02:06:27Z", "author": {"login": "ChenTanyi"}, "path": "sdk/management/pom.xml", "diffHunk": "@@ -91,6 +91,12 @@\n                 <artifactId>azure-storage-blob</artifactId>\n                 <version>12.4.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.github.spotbugs</groupId>\n+                <artifactId>spotbugs-annotations</artifactId>\n+                <version>4.0.0-beta3</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1MTQ3NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA2MTU1Ng==", "bodyText": "I've change it to latest version", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411061556", "createdAt": "2020-04-20T02:58:57Z", "author": {"login": "ChenTanyi"}, "path": "sdk/management/pom.xml", "diffHunk": "@@ -91,6 +91,12 @@\n                 <artifactId>azure-storage-blob</artifactId>\n                 <version>12.4.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>com.github.spotbugs</groupId>\n+                <artifactId>spotbugs-annotations</artifactId>\n+                <version>4.0.0-beta3</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1MTQ3NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTA0NjE1OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/RestClientBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo0Njo1MVrOGHhwYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjo1OTowN1rOGIBNXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NjI3NQ==", "bodyText": "Maybe we should change the name of clone method. Maybe newBuilder. (Because I didn't really want a Cloneable when adding that method.)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410546275", "createdAt": "2020-04-18T01:46:51Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -29,7 +29,7 @@\n  * A rest client builder.\n  */\n @ServiceClientBuilder(serviceClients = RestClient.class)\n-public final class RestClientBuilder {\n+public final class RestClientBuilder implements Cloneable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA2MTU5Ng==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411061596", "createdAt": "2020-04-20T02:59:07Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -29,7 +29,7 @@\n  * A rest client builder.\n  */\n @ServiceClientBuilder(serviceClients = RestClient.class)\n-public final class RestClientBuilder {\n+public final class RestClientBuilder implements Cloneable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NjI3NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTA0OTE0OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/ExpandableStringEnum.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo0NzozNFrOGHhxpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjo1OToxNlrOGIBNgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NjU5Ng==", "bodyText": "There should be a same class in core. May be we can remove this later.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410546596", "createdAt": "2020-04-18T01:47:34Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/ExpandableStringEnum.java", "diffHunk": "@@ -15,36 +16,34 @@\n  * @param <T> a specific expandable enum type\n  */\n public abstract class ExpandableStringEnum<T extends ExpandableStringEnum<T>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA2MTYzNQ==", "bodyText": "removed", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411061635", "createdAt": "2020-04-20T02:59:16Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/ExpandableStringEnum.java", "diffHunk": "@@ -15,36 +16,34 @@\n  * @param <T> a specific expandable enum type\n  */\n public abstract class ExpandableStringEnum<T extends ExpandableStringEnum<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NjU5Ng=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTA1NjQ2OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/CreatableResourcesImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo0OTo0NlrOGHh1gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjoxMzozNFrOGIEqSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NzU4NQ==", "bodyText": "Please detail on what happens here. transient should not be used lightly.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410547585", "createdAt": "2020-04-18T01:49:46Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/CreatableResourcesImpl.java", "diffHunk": "@@ -79,12 +79,12 @@ protected CreatableResourcesImpl() {\n      *\n      * @param <ResourceT> the type of the resources in the batch.\n      */\n-    private class CreatedResourcesImpl<ResourceT extends Indexable>\n+    private static class CreatedResourcesImpl<ResourceT extends Indexable>\n             extends HashMap<String, ResourceT>\n             implements CreatedResources<ResourceT> {\n-        private final ClientLogger logger = new ClientLogger(this.getClass());\n+        private final transient ClientLogger logger = new ClientLogger(this.getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0ODgxMg==", "bodyText": "The spotbugs said the CreatableResourcesImpl has two variable that cannot be serialized. After my search, it seems add transient can fix it.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411048812", "createdAt": "2020-04-20T02:08:43Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/CreatableResourcesImpl.java", "diffHunk": "@@ -79,12 +79,12 @@ protected CreatableResourcesImpl() {\n      *\n      * @param <ResourceT> the type of the resources in the batch.\n      */\n-    private class CreatedResourcesImpl<ResourceT extends Indexable>\n+    private static class CreatedResourcesImpl<ResourceT extends Indexable>\n             extends HashMap<String, ResourceT>\n             implements CreatedResources<ResourceT> {\n-        private final ClientLogger logger = new ClientLogger(this.getClass());\n+        private final transient ClientLogger logger = new ClientLogger(this.getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NzU4NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1NjQzNQ==", "bodyText": "Could you see if it is possible to convert the class to composition (use a HashMap var, instead of extends HashMap, then delegate other Map method to that var)? This way we should be able to get rid of Serializable interface.\nCurrently I didn't see the place that need the Serializable. Correct me if I am wrong.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411056435", "createdAt": "2020-04-20T02:39:03Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/CreatableResourcesImpl.java", "diffHunk": "@@ -79,12 +79,12 @@ protected CreatableResourcesImpl() {\n      *\n      * @param <ResourceT> the type of the resources in the batch.\n      */\n-    private class CreatedResourcesImpl<ResourceT extends Indexable>\n+    private static class CreatedResourcesImpl<ResourceT extends Indexable>\n             extends HashMap<String, ResourceT>\n             implements CreatedResources<ResourceT> {\n-        private final ClientLogger logger = new ClientLogger(this.getClass());\n+        private final transient ClientLogger logger = new ClientLogger(this.getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NzU4NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExODE1NA==", "bodyText": "Changed extends to private var. Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411118154", "createdAt": "2020-04-20T06:13:34Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/CreatableResourcesImpl.java", "diffHunk": "@@ -79,12 +79,12 @@ protected CreatableResourcesImpl() {\n      *\n      * @param <ResourceT> the type of the resources in the batch.\n      */\n-    private class CreatedResourcesImpl<ResourceT extends Indexable>\n+    private static class CreatedResourcesImpl<ResourceT extends Indexable>\n             extends HashMap<String, ResourceT>\n             implements CreatedResources<ResourceT> {\n-        private final ClientLogger logger = new ClientLogger(this.getClass());\n+        private final transient ClientLogger logger = new ClientLogger(this.getClass());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0NzU4NQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTA1OTc1OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/IndependentChildrenImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1MDo0MlrOGHh28A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoxMDowNFrOGIAcog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0Nzk1Mg==", "bodyText": "why parent()? maybe only delete this line?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410547952", "createdAt": "2020-04-18T01:50:42Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/IndependentChildrenImpl.java", "diffHunk": "@@ -81,7 +79,7 @@ public T getById(String id) {\n     @Override\n     public Mono<T> getByIdAsync(String id) {\n         ResourceId resourceId = ResourceId.fromString(id);\n-        if (resourceId == null) {\n+        if (resourceId.parent() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTEyMg==", "bodyText": "Since the next line has resourceId.parent().name(), so I add parent() in it. Is it better not to check this NPE?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411049122", "createdAt": "2020-04-20T02:10:04Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/collection/implementation/IndependentChildrenImpl.java", "diffHunk": "@@ -81,7 +79,7 @@ public T getById(String id) {\n     @Override\n     public Mono<T> getByIdAsync(String id) {\n         ResourceId resourceId = ResourceId.fromString(id);\n-        if (resourceId == null) {\n+        if (resourceId.parent() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0Nzk1Mg=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTA2NTI3OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/models/implementation/IndependentChildImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMTo1MjowNFrOGHh5UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoxMToyOFrOGIAeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0ODU2MQ==", "bodyText": "What error message associates with this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r410548561", "createdAt": "2020-04-18T01:52:04Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/models/implementation/IndependentChildImpl.java", "diffHunk": "@@ -68,6 +68,10 @@ public String resourceGroupName() {\n         }\n     }\n \n+    protected String parentName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTQ4NA==", "bodyText": "The error message is we could not expose a protected / public variable that hasn't been used. So I add this function to use the variable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411049484", "createdAt": "2020-04-20T02:11:28Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/arm/models/implementation/IndependentChildImpl.java", "diffHunk": "@@ -68,6 +68,10 @@ public String resourceGroupName() {\n         }\n     }\n \n+    protected String parentName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU0ODU2MQ=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MzM4NDU2OnYy", "diffSide": "RIGHT", "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/dag/TaskGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMTo1MzoxM1rOGIAMkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoxMjo1NlrOGIAfgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0NTAxMA==", "bodyText": "Currently the norm in sdk is to add it to suppression\n  <Match>\n    <Class name=\"~com\\.microsoft\\.azure\\.keyvault\\.requests\\.\\w+Request\"/>\n    <Bug pattern=\"BC_UNCONFIRMED_CAST_OF_RETURN_VALUE\"/>\n  </Match>\n\nWe could keep the annotation, and see what to do after more services get checked.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411045010", "createdAt": "2020-04-20T01:53:13Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/dag/TaskGroup.java", "diffHunk": "@@ -337,6 +339,7 @@ public void addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup) {\n     /**\n      * @return list with current task entries in this task group\n      */\n+    @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST_OF_RETURN_VALUE\", justification = \"Incorrect spot bugs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTg1Nw==", "bodyText": "Agree, if much more services meet such an error spotbugs, we could add it to suppression.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10324#discussion_r411049857", "createdAt": "2020-04-20T02:12:56Z", "author": {"login": "ChenTanyi"}, "path": "sdk/resources/mgmt/src/main/java/com/azure/management/resources/fluentcore/dag/TaskGroup.java", "diffHunk": "@@ -337,6 +339,7 @@ public void addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup) {\n     /**\n      * @return list with current task entries in this task group\n      */\n+    @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST_OF_RETURN_VALUE\", justification = \"Incorrect spot bugs\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0NTAxMA=="}, "originalCommit": {"oid": "5810f30086c93a1431deeae7f0a10f890b0012d6"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1829, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}