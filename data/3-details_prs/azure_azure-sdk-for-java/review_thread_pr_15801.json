{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0Njk5ODY3", "number": 15801, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo1OToxMVrOEokIkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNjo0OVrOEseUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTcwNTE1OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2AutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo1OToxMVrOHZupXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNjoyMjoxMVrOHe8lyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc0MDcwMg==", "bodyText": "Will multi-tenant application still function with this change?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15801#discussion_r496740702", "createdAt": "2020-09-29T13:59:11Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2AutoConfiguration.java", "diffHunk": "@@ -36,29 +42,69 @@\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET)\n @ConditionalOnProperty(prefix = \"azure.activedirectory\", value = \"tenant-id\")\n-@PropertySource(value = \"classpath:aad-oauth2-common.properties\")\n @PropertySource(value = \"classpath:service-endpoints.properties\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class, ServiceEndpointsProperties.class })\n public class AADOAuth2AutoConfiguration {\n \n-    private final AADAuthenticationProperties aadAuthProps;\n-    private final ServiceEndpointsProperties serviceEndpointsProps;\n+    private final AADAuthenticationProperties aadAuthenticationProperties;\n+    private final ServiceEndpointsProperties serviceEndpointsProperties;\n \n     public AADOAuth2AutoConfiguration(AADAuthenticationProperties aadAuthProperties,\n-                                      ServiceEndpointsProperties serviceEndpointsProps) {\n-        this.aadAuthProps = aadAuthProperties;\n-        this.serviceEndpointsProps = serviceEndpointsProps;\n+                                      ServiceEndpointsProperties serviceEndpointsProperties) {\n+        this.aadAuthenticationProperties = aadAuthProperties;\n+        this.serviceEndpointsProperties = serviceEndpointsProperties;\n     }\n \n     @Bean\n     @ConditionalOnProperty(prefix = \"azure.activedirectory.user-group\", value = \"allowed-groups\")\n     public OAuth2UserService<OidcUserRequest, OidcUser> oidcUserService() {\n-        return new AADOAuth2UserService(aadAuthProps, serviceEndpointsProps);\n+        return new AADOAuth2UserService(aadAuthenticationProperties, serviceEndpointsProperties);\n+    }\n+\n+    @Bean\n+    public ClientRegistrationRepository clientRegistrationRepository() {\n+        return new InMemoryClientRegistrationRepository(azureClientRegistration());\n+    }\n+\n+    private ClientRegistration azureClientRegistration() {\n+        String tenantId = aadAuthenticationProperties.getTenantId().trim();\n+        Assert.hasText(tenantId, \"azure.activedirectory.tenant-id should have text.\");\n+        Assert.doesNotContain(tenantId, \" \", \"azure.activedirectory.tenant-id should not contain ' '.\");\n+        Assert.doesNotContain(tenantId, \"/\", \"azure.activedirectory.tenant-id should not contain '/'.\");\n+        return ClientRegistration.withRegistrationId(\"azure\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f3342fd0c012dc37805c5c98932dc3896255da9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIxMjA0Mg==", "bodyText": "IMU, if we set azure.activedirectory.tenant-id=common, then multi-tenant application will function.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15801#discussion_r502212042", "createdAt": "2020-10-09T06:22:11Z", "author": {"login": "chenrujun"}, "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/aad/AADOAuth2AutoConfiguration.java", "diffHunk": "@@ -36,29 +42,69 @@\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @ConditionalOnWebApplication(type = ConditionalOnWebApplication.Type.SERVLET)\n @ConditionalOnProperty(prefix = \"azure.activedirectory\", value = \"tenant-id\")\n-@PropertySource(value = \"classpath:aad-oauth2-common.properties\")\n @PropertySource(value = \"classpath:service-endpoints.properties\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class, ServiceEndpointsProperties.class })\n public class AADOAuth2AutoConfiguration {\n \n-    private final AADAuthenticationProperties aadAuthProps;\n-    private final ServiceEndpointsProperties serviceEndpointsProps;\n+    private final AADAuthenticationProperties aadAuthenticationProperties;\n+    private final ServiceEndpointsProperties serviceEndpointsProperties;\n \n     public AADOAuth2AutoConfiguration(AADAuthenticationProperties aadAuthProperties,\n-                                      ServiceEndpointsProperties serviceEndpointsProps) {\n-        this.aadAuthProps = aadAuthProperties;\n-        this.serviceEndpointsProps = serviceEndpointsProps;\n+                                      ServiceEndpointsProperties serviceEndpointsProperties) {\n+        this.aadAuthenticationProperties = aadAuthProperties;\n+        this.serviceEndpointsProperties = serviceEndpointsProperties;\n     }\n \n     @Bean\n     @ConditionalOnProperty(prefix = \"azure.activedirectory.user-group\", value = \"allowed-groups\")\n     public OAuth2UserService<OidcUserRequest, OidcUser> oidcUserService() {\n-        return new AADOAuth2UserService(aadAuthProps, serviceEndpointsProps);\n+        return new AADOAuth2UserService(aadAuthenticationProperties, serviceEndpointsProperties);\n+    }\n+\n+    @Bean\n+    public ClientRegistrationRepository clientRegistrationRepository() {\n+        return new InMemoryClientRegistrationRepository(azureClientRegistration());\n+    }\n+\n+    private ClientRegistration azureClientRegistration() {\n+        String tenantId = aadAuthenticationProperties.getTenantId().trim();\n+        Assert.hasText(tenantId, \"azure.activedirectory.tenant-id should have text.\");\n+        Assert.doesNotContain(tenantId, \" \", \"azure.activedirectory.tenant-id should not contain ' '.\");\n+        Assert.doesNotContain(tenantId, \"/\", \"azure.activedirectory.tenant-id should not contain '/'.\");\n+        return ClientRegistration.withRegistrationId(\"azure\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc0MDcwMg=="}, "originalCommit": {"oid": "6f3342fd0c012dc37805c5c98932dc3896255da9"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY5MzQ1OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNTo1MFrOHfvKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNTo1MFrOHfvKnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA0MDY2OQ==", "bodyText": "The azure-identity is not used by the aad-b2c starter?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15801#discussion_r503040669", "createdAt": "2020-10-12T05:05:50Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory-b2c/pom.xml", "diffHunk": "@@ -36,6 +36,11 @@\n       <artifactId>azure-spring-boot</artifactId>\n       <version>3.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-spring-boot;current} -->\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c71b1e17599b837bc019617bf47106b007749b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY5NDA1OnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-active-directory/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNjoyMVrOHfvLAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNjoyMVrOHfvLAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA0MDc2OA==", "bodyText": "The aad starter does not use this azure-identity?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15801#discussion_r503040768", "createdAt": "2020-10-12T05:06:21Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-active-directory/pom.xml", "diffHunk": "@@ -35,6 +35,11 @@\n       <artifactId>azure-spring-boot</artifactId>\n       <version>3.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-spring-boot;current} -->\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c71b1e17599b837bc019617bf47106b007749b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY5NDYzOnYy", "diffSide": "RIGHT", "path": "sdk/spring/azure-spring-boot-starter-servicebus-jms/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNjo0OVrOHfvLZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNTowNjo0OVrOHfvLZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA0MDg2OA==", "bodyText": "Service bus jms has no dependency on this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15801#discussion_r503040868", "createdAt": "2020-10-12T05:06:49Z", "author": {"login": "saragluna"}, "path": "sdk/spring/azure-spring-boot-starter-servicebus-jms/pom.xml", "diffHunk": "@@ -25,6 +25,11 @@\n       <artifactId>azure-spring-boot</artifactId>\n       <version>3.0.0-beta.1</version> <!-- {x-version-update;com.azure:azure-spring-boot;current} -->\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c71b1e17599b837bc019617bf47106b007749b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 673, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}