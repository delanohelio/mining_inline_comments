{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTY1MTc3", "number": 14143, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoxNDozNFrOEZk-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoxNDozNFrOEZk-jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjU1Njk1OnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoxNDozNFrOHCeQqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNToyMzozOFrOHDMlEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1NDk4NQ==", "bodyText": "please use dataProvider for providing different query params.\nthis will help in the reliability for the test: less chance for test to timeout, better visiblity on failure on what exactly failed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14143#discussion_r472354985", "createdAt": "2020-08-18T17:14:34Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -232,7 +232,44 @@ public void queryPlanDiagnostics() {\n         }\n     }\n \n-    @Test(groups = {\"simple\"})\n+    @Test(groups = {\"simple\"}, timeOut = TIMEOUT)\n+    public void queryMetrics() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11d599073eb19fe34184490104f7f92999007daf"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzExMzg3Mw==", "bodyText": "done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14143#discussion_r473113873", "createdAt": "2020-08-19T15:23:38Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/CosmosDiagnosticsTest.java", "diffHunk": "@@ -232,7 +232,44 @@ public void queryPlanDiagnostics() {\n         }\n     }\n \n-    @Test(groups = {\"simple\"})\n+    @Test(groups = {\"simple\"}, timeOut = TIMEOUT)\n+    public void queryMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1NDk4NQ=="}, "originalCommit": {"oid": "11d599073eb19fe34184490104f7f92999007daf"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1603, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}