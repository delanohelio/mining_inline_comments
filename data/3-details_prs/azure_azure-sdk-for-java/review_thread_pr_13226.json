{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODkxMjU3", "number": 13226, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNDozODowN1rOEO9a5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzoyNzoxNVrOEPOrIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTIxODI4OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNDozODowN1rOGyZ1kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNDozODowN1rOGyZ1kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUwNTI5Nw==", "bodyText": "should not be public", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455505297", "createdAt": "2020-07-16T04:38:07Z", "author": {"login": "arerlend"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -41,7 +41,7 @@\n  *\n  * Implemented by {@link ObjectBatch} and {@link EventDataBatch}.\n  */\n-abstract class EventDataBatchBase {\n+public abstract class EventDataBatchBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b46a50fdc3d831213619ec75d8f093a3cf259564"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTM2Njk4OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNTo1OTozOFrOGybMuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoxMjo1MFrOGyyRIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNzYxMQ==", "bodyText": "Does this get overridden in the subtypes?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455527611", "createdAt": "2020-07-16T05:59:38Z", "author": {"login": "alzimmermsft"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5867ac6af84a7f0aef517d805b26669988c3b825"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwNTU2OQ==", "bodyText": "Subtype tryAdd() methods call this method, yes.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455905569", "createdAt": "2020-07-16T16:12:50Z", "author": {"login": "arerlend"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNzYxMQ=="}, "originalCommit": {"oid": "5867ac6af84a7f0aef517d805b26669988c3b825"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzgyNDExOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoyOTowMFrOGyy6dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzowMTo0OVrOGy0IaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNjE1MQ==", "bodyText": "This should be an NPE rather than IllegalArgument. https://azure.github.io/azure-sdk/java_implementation.html#java-errors-system-errors", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455916151", "createdAt": "2020-07-16T16:29:00Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {\n         if (eventData == null) {\n             throw logger.logExceptionAsWarning(new IllegalArgumentException(\"eventData cannot be null\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5867ac6af84a7f0aef517d805b26669988c3b825"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNjEwNA==", "bodyText": "fixed, thanks Connie", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455936104", "createdAt": "2020-07-16T17:01:49Z", "author": {"login": "arerlend"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {\n         if (eventData == null) {\n             throw logger.logExceptionAsWarning(new IllegalArgumentException(\"eventData cannot be null\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNjE1MQ=="}, "originalCommit": {"oid": "5867ac6af84a7f0aef517d805b26669988c3b825"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDA0MTIxOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzoyNjoxMVrOGy1Ciw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzoyNjoxMVrOGy1Ciw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1MDk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException if {@code batch} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException if {@code objectBatch} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455950987", "createdAt": "2020-07-16T17:26:11Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -457,15 +457,40 @@ public String getEventHubName() {\n     }\n \n     /**\n-     * Sends the batch to the associated Event Hub.\n+     * Sends the object batch to the associated Event Hub.\n      *\n-     * @param batch The batch to send to the service.\n+     * @param objectBatch The batch to send to the service.\n+     * @param <T> object type\n+     * @return A {@link Mono} that completes when the batch is pushed to the service.\n+     * @throws NullPointerException if {@code batch} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c99ff6a67bab0de7cb12904d84662775d4df4e4e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDA0NTEzOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzoyNzoxNVrOGy1FCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzoyNzoxNVrOGy1FCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1MTYyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException if {@code batch} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException if {@code eventDataBatch} is {@code null}.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455951627", "createdAt": "2020-07-16T17:27:15Z", "author": {"login": "srnagar"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -457,15 +457,40 @@ public String getEventHubName() {\n     }\n \n     /**\n-     * Sends the batch to the associated Event Hub.\n+     * Sends the object batch to the associated Event Hub.\n      *\n-     * @param batch The batch to send to the service.\n+     * @param objectBatch The batch to send to the service.\n+     * @param <T> object type\n+     * @return A {@link Mono} that completes when the batch is pushed to the service.\n+     * @throws NullPointerException if {@code batch} is {@code null}.\n+     * @see EventHubProducerAsyncClient#createBatch(Class)\n+     * @see EventHubProducerAsyncClient#createBatch(Class, CreateBatchOptions)\n+     */\n+    public <T> Mono<Void> send(ObjectBatch<T> objectBatch) {\n+        return this.sendInternal(objectBatch);\n+    }\n+\n+    /**\n+     * Sends the event data batch to the associated Event Hub.\n+     *\n+     * @param eventDataBatch The batch to send to the service.\n      * @return A {@link Mono} that completes when the batch is pushed to the service.\n      * @throws NullPointerException if {@code batch} is {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c99ff6a67bab0de7cb12904d84662775d4df4e4e"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}