{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODg5Mzgw", "number": 15852, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowMzowMFrOErzmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowNDowMVrOErznQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzY5NjAzOnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowMzowMFrOHex9Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowMzowMFrOHex9Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNzgxMA==", "bodyText": "Should we also dispose of the client if it is closed?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15852#discussion_r502037810", "createdAt": "2020-10-08T22:03:00Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "diffHunk": "@@ -119,6 +120,23 @@ void stopAllPartitionPumps() {\n         });\n     }\n \n+    /**\n+     * Checks the state of the connection for the given partition. If the connection is closed, then this method will\n+     * remove the partition from the list of partition pumps.\n+     *\n+     * @param ownership The partition ownership information for which the connection state will be verified.\n+     */\n+    void verifyPartitionConnection(PartitionOwnership ownership) {\n+        if (partitionPumps.containsKey(ownership.getPartitionId())) {\n+            EventHubConsumerAsyncClient consumerClient = partitionPumps.get(ownership.getPartitionId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c180dfdd22f3721133e9d993c84849f5facee5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzY5ODU5OnYy", "diffSide": "RIGHT", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowNDowMVrOHex-og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjowNDoxMVrOHex-4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzODE3OA==", "bodyText": "The if condition isn't necessary, iirc, we already call that logic internally.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15852#discussion_r502038178", "createdAt": "2020-10-08T22:04:01Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "diffHunk": "@@ -166,17 +184,25 @@ void startPartitionPump(PartitionOwnership claimedOwnership, Checkpoint checkpoi\n             partitionPumps.put(claimedOwnership.getPartitionId(), eventHubConsumer);\n             //@formatter:off\n             Flux<Flux<PartitionEvent>> partitionEventFlux;\n+            Flux<PartitionEvent> receiver = eventHubConsumer\n+                .receiveFromPartition(claimedOwnership.getPartitionId(), startFromEventPosition, receiveOptions)\n+                .doOnNext(partitionEvent -> {\n+                    if (logger.canLogAtLevel(LogLevel.VERBOSE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c180dfdd22f3721133e9d993c84849f5facee5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzODI0Mw==", "bodyText": "Same with all other instances.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15852#discussion_r502038243", "createdAt": "2020-10-08T22:04:11Z", "author": {"login": "conniey"}, "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/PartitionPumpManager.java", "diffHunk": "@@ -166,17 +184,25 @@ void startPartitionPump(PartitionOwnership claimedOwnership, Checkpoint checkpoi\n             partitionPumps.put(claimedOwnership.getPartitionId(), eventHubConsumer);\n             //@formatter:off\n             Flux<Flux<PartitionEvent>> partitionEventFlux;\n+            Flux<PartitionEvent> receiver = eventHubConsumer\n+                .receiveFromPartition(claimedOwnership.getPartitionId(), startFromEventPosition, receiveOptions)\n+                .doOnNext(partitionEvent -> {\n+                    if (logger.canLogAtLevel(LogLevel.VERBOSE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzODE3OA=="}, "originalCommit": {"oid": "83c180dfdd22f3721133e9d993c84849f5facee5"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}