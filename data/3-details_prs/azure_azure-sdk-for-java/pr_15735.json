{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDE3NTEw", "number": 15735, "title": "Internal: Fixed exception handling around GoneException and RequestTimeoutException", "bodyText": "Fixing a couple of issues with the exception handling in the availability stack:\n\nWrite-requests which have been sent to the service should not be retried when they fail with GoneException\nRead-requests resulting in Request timeouts (when the time between sending the request and waiting for response extends the request timeout duration or service returns 408) should be retried\nAdmission control incorrectly was throwing a RequestTimeoutException -should have been a GoneException instead\n\nCloses #15363\nCloses #15305\nCloses #15304", "createdAt": "2020-09-25T23:02:52Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735", "merged": true, "mergeCommit": {"oid": "187d9e97a5157d99ea05bc221912830928745b10"}, "closed": true, "closedAt": "2020-10-02T11:33:42Z", "author": {"login": "FabianMeiswinkel"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMdUDygH2gAyNDkzNDE3NTEwOmUzZjAxMWY4YTM4YWZhNDU4NWIyMjc3YTRhOWQxZGE4MDE2MmRmZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOZhANgH2gAyNDkzNDE3NTEwOjZmMGIxNDIxZTgxNmY4NTQxNDQwOTU0MzlhZDQ4NzIzMTcwMTU5MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3f011f8a38afa4585b2277a4a9d1da80162dfde", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e3f011f8a38afa4585b2277a4a9d1da80162dfde", "committedDate": "2020-09-25T22:13:29Z", "message": "Fixing exception handling for Gone and Request timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758a8594061673341d07a648e014419d24d05bca", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/758a8594061673341d07a648e014419d24d05bca", "committedDate": "2020-09-25T22:48:09Z", "message": "Adding basic unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f0c6809e5d410a0f95926c638f8698456296c1bb", "committedDate": "2020-09-25T22:51:43Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzM2ODkz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-497736893", "createdAt": "2020-09-28T17:12:39Z", "commit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoxMjozOVrOHZIDKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMTowMlrOHZIVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwODMyOA==", "bodyText": "nice! thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r496108328", "createdAt": "2020-09-28T17:12:39Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/RntbdTransportClient.java", "diffHunk": "@@ -203,7 +203,7 @@ public long id() {\n             BridgeInternal.setRequestTimeline(cosmosException, record.takeTimelineSnapshot());\n             BridgeInternal.setRntbdPendingRequestQueueSize(cosmosException, record.pendingRequestQueueSize());\n             BridgeInternal.setChannelTaskQueueSize(cosmosException, record.channelTaskQueueLength());\n-\n+            BridgeInternal.setSendingRequestStarted(cosmosException, record.hasSendingRequestStarted());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTIxNQ==", "bodyText": "I wonder if we should incorporate that into the RntbdRequestRecord stages as SEND_STARTED stage, and this as an event to the request timeline.\ne.g.:\nQUEUED, PIPELINED, SEND_STARTED, SENT, RECEIVED, COMPLETED", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r496111215", "createdAt": "2020-09-28T17:17:52Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -213,13 +214,26 @@ public long transportRequestId() {\n     // region Methods\n \n     public boolean expire() {\n-        final RequestTimeoutException error = new RequestTimeoutException(this.toString(), this.args.physicalAddress());\n+        final GoneException error = new GoneException(this.toString(), null, this.args.physicalAddress());\n         BridgeInternal.setRequestHeaders(error, this.args.serviceRequest().getHeaders());\n+\n         return this.completeExceptionally(error);\n     }\n \n     public abstract Timeout newTimeout(final TimerTask task);\n \n+    /**\n+     * Provides information whether the request could have been sent to the service\n+     * @return fals if it is possible to guarantee that the request never arrived at the service - true otherwise\n+     */\n+    public boolean hasSendingRequestStarted() {\n+        return this.sendingRequestHasStarted;\n+    }\n+\n+    void setSendingRequestHasStarted() {\n+        this.sendingRequestHasStarted = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMzAzOQ==", "bodyText": "address refresh is done as part of the retry.\nIf no one retries who is going to refresh the address caches when request.requestContext.forceRefreshAddressCache set to true?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r496113039", "createdAt": "2020-09-28T17:21:02Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -60,12 +60,25 @@ public GoneAndRetryWithRetryPolicy(RxDocumentServiceRequest request, Integer wai\n             !(exception instanceof RetryWithException) &&\n             !(exception instanceof PartitionIsMigratingException) &&\n             !(exception instanceof InvalidPartitionException &&\n-            (this.request.getPartitionKeyRangeIdentity() == null ||\n-            this.request.getPartitionKeyRangeIdentity().getCollectionRid() == null)) &&\n+                (this.request.getPartitionKeyRangeIdentity() == null ||\n+                this.request.getPartitionKeyRangeIdentity().getCollectionRid() == null)) &&\n             !(exception instanceof PartitionKeyRangeIsSplittingException)) {\n+\n             logger.debug(\"Operation will NOT be retried. Current attempt {}, Exception: \", this.attemptCount,\n-                    exception);\n+                exception);\n+            stopStopWatch(this.durationTimer);\n+            return Mono.just(ShouldRetryResult.noRetry());\n+        } else if (exception instanceof GoneException &&\n+            !request.isReadOnly() &&\n+            BridgeInternal.hasSendingRequestStarted((CosmosException)exception)) {\n+\n+            logger.debug(\n+                \"Operation will NOT be retried. Write operations can not be retried safely when sending the request \" +\n+                    \"to the service because they aren't idempotent. Current attempt {}, Exception: \",\n+                this.attemptCount,\n+                exception);\n             stopStopWatch(this.durationTimer);\n+            this.request.requestContext.forceRefreshAddressCache = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzQ1MTA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-497745109", "createdAt": "2020-09-28T17:24:04Z", "commit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ac3ba6285abd909294cd64910c24da2f94baa0", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/07ac3ba6285abd909294cd64910c24da2f94baa0", "committedDate": "2020-09-29T01:27:29Z", "message": "Really enforcing AddressRefresh after failing Gone for writes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/585dea7d460a1b50b601f75121a6188ae0f21610", "committedDate": "2020-09-29T02:01:45Z", "message": "Fixing unit test regression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mjk2MDkx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498296091", "createdAt": "2020-09-29T09:46:20Z", "commit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo0NjoyMFrOHZlKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo0NjoyMFrOHZlKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4NTMzNA==", "bodyText": "Nice thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r496585334", "createdAt": "2020-09-29T09:46:20Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentServiceRequest.java", "diffHunk": "@@ -83,6 +83,10 @@ public boolean isReadOnlyScript() {\n         }\n     }\n \n+    public boolean isReadOnly() {\n+        return this.isReadOnlyRequest() || this.isReadOnlyScript();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mjk5Nzg4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498299788", "createdAt": "2020-09-29T09:50:55Z", "commit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo1MDo1NVrOHZlVqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo1MDo1NVrOHZlVqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4ODIwMQ==", "bodyText": "Other similar tracers are at warn below.\nWarn seems makes sense.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r496588201", "createdAt": "2020-09-29T09:50:55Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -60,13 +60,27 @@ public GoneAndRetryWithRetryPolicy(RxDocumentServiceRequest request, Integer wai\n             !(exception instanceof RetryWithException) &&\n             !(exception instanceof PartitionIsMigratingException) &&\n             !(exception instanceof InvalidPartitionException &&\n-            (this.request.getPartitionKeyRangeIdentity() == null ||\n-            this.request.getPartitionKeyRangeIdentity().getCollectionRid() == null)) &&\n+                (this.request.getPartitionKeyRangeIdentity() == null ||\n+                this.request.getPartitionKeyRangeIdentity().getCollectionRid() == null)) &&\n             !(exception instanceof PartitionKeyRangeIsSplittingException)) {\n+\n             logger.debug(\"Operation will NOT be retried. Current attempt {}, Exception: \", this.attemptCount,\n-                    exception);\n+                exception);\n             stopStopWatch(this.durationTimer);\n             return Mono.just(ShouldRetryResult.noRetry());\n+        } else if (exception instanceof GoneException &&\n+            !request.isReadOnly() &&\n+            BridgeInternal.hasSendingRequestStarted((CosmosException)exception)) {\n+\n+            logger.debug(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MzAxMDU2", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498301056", "createdAt": "2020-09-29T09:52:27Z", "commit": {"oid": "585dea7d460a1b50b601f75121a6188ae0f21610"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f985dc35ff2dacc963b46376722a15ec8658000", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f985dc35ff2dacc963b46376722a15ec8658000", "committedDate": "2020-09-29T10:11:24Z", "message": "Changing log-level to warn if we don't retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ff088e2bf661db2d25ca5f5545f9ed408b60fd", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/21ff088e2bf661db2d25ca5f5545f9ed408b60fd", "committedDate": "2020-09-29T10:59:55Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/31c603510f672116d4f58e0f6716959d445387b2", "committedDate": "2020-09-29T19:30:32Z", "message": "Fixing VI failure unrelated to my changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODQwODA1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498840805", "createdAt": "2020-09-29T20:09:53Z", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDowOTo1M1rOHZ_Vfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDowOTo1M1rOHZ_Vfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxNDE0Mg==", "bodyText": "If the STAGE status is before SENT, is that enough to decide whether we should retry?\nOr maybe can use @flush() to decide whether the request is on wire? I think when calling flush(), sslHandler will start to prepare handshake etc", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497014142", "createdAt": "2020-09-29T20:09:53Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -492,6 +492,7 @@ public void write(final ChannelHandlerContext context, final Object message, fin\n \n             final RntbdRequestRecord record = (RntbdRequestRecord) message;\n             this.timestamps.channelWriteAttempted();\n+            record.setSendingRequestHasStarted();\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODQzNjA0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498843604", "createdAt": "2020-09-29T20:13:59Z", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxMzo1OVrOHZ_dpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxMzo1OVrOHZ_dpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxNjIyOQ==", "bodyText": "Why need to create RequestTimeoutException as inner? would not 'error' itself enough?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497016229", "createdAt": "2020-09-29T20:13:59Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -799,7 +800,11 @@ private void messageReceived(final ChannelHandlerContext context, final RntbdRes\n                     break;\n \n                 case StatusCodes.REQUEST_TIMEOUT:\n-                    cause = new RequestTimeoutException(error, lsn, partitionKeyRangeId, responseHeaders);\n+                    Exception inner = new RequestTimeoutException(error, lsn, partitionKeyRangeId, responseHeaders);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODQ1MDIw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498845020", "createdAt": "2020-09-29T20:16:02Z", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxNjowMlrOHZ_iEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxNjowMlrOHZ_iEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxNzM2MA==", "bodyText": "not important, just wonder should we use different file name here for .net?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497017360", "createdAt": "2020-09-29T20:16:02Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos-dotnet-benchmark/src/main/resources/log4j2.properties", "diffHunk": "@@ -0,0 +1,25 @@\n+# This is the log4j configuration for benchmarks\n+# Set root logger level to INFO and its default appender to be 'STDOUT'.\n+rootLogger.level = info\n+rootLogger.appenderRef.stdout.ref = STDOUT\n+\n+# Uncomment here and lines 21 - 25 to enable logging to a file as well.\n+#rootLogger.appenderRef.logFile.ref = FILE\n+\n+property.logDirectory = $${sys:azure.cosmos.logger.directory}\n+property.hostName = $${sys:azure.cosmos.hostname}\n+\n+logger.netty.name = io.netty\n+logger.netty.level = off\n+\n+# STDOUT is a ConsoleAppender and uses PatternLayout.\n+appender.console.name = STDOUT\n+appender.console.type = Console\n+appender.console.layout.type = PatternLayout\n+appender.console.layout.pattern = %d %5X{pid} [%t] %-5p %c - %m%n\n+\n+#appender.logfile.name = FILE\n+#appender.logfile.type = File\n+#appender.logfile.filename = ${logDirectory}/azure-cosmos-benchmark.log", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODQ1ODM5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498845839", "createdAt": "2020-09-29T20:17:11Z", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxNzoxMlrOHZ_kww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoxNzoxMlrOHZ_kww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxODA1MQ==", "bodyText": "NIT: the the indent same as above line?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497018051", "createdAt": "2020-09-29T20:17:12Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GoneAndRetryWithRetryPolicy.java", "diffHunk": "@@ -60,13 +60,27 @@ public GoneAndRetryWithRetryPolicy(RxDocumentServiceRequest request, Integer wai\n             !(exception instanceof RetryWithException) &&\n             !(exception instanceof PartitionIsMigratingException) &&\n             !(exception instanceof InvalidPartitionException &&\n-            (this.request.getPartitionKeyRangeIdentity() == null ||\n-            this.request.getPartitionKeyRangeIdentity().getCollectionRid() == null)) &&\n+                (this.request.getPartitionKeyRangeIdentity() == null ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODQ4MzI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-498848325", "createdAt": "2020-09-29T20:20:46Z", "commit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoyMDo0NlrOHZ_sgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDoyMDo0NlrOHZ_sgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAyMDAzNA==", "bodyText": "Why we need to refresh address here? If we reach here, it means we will not going to retry the request, is that we are trying to proactively refresh the address?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497020034", "createdAt": "2020-09-29T20:20:46Z", "author": {"login": "xinlian12"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryUtils.java", "diffHunk": "@@ -82,11 +84,20 @@\n \n                 if (!shouldRetryResult.shouldRetry) {\n                     retryPolicy.updateEndTime();\n-                    if(shouldRetryResult.exception == null) {\n-                        return Mono.error(e);\n-                    } else {\n-                        return Mono.error(shouldRetryResult.exception);\n+\n+                    final Throwable errorToReturn = shouldRetryResult.exception != null ? shouldRetryResult.exception : e;\n+                    final Mono<T> failure = Mono.error(errorToReturn);\n+\n+                    if (shouldRetryResult.policyArg != null &&\n+                        shouldRetryResult.policyArg.getValue0() != null &&\n+                        shouldRetryResult.policyArg.getValue0()) {\n+\n+                        return addressSelector.resolveAddressesAsync(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3368ad8bca99696797bd7ae9afb909fc39828d9", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/b3368ad8bca99696797bd7ae9afb909fc39828d9", "committedDate": "2020-09-29T21:59:46Z", "message": "Update log4j2.properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac49b1e7916198afcae5fa96d9fdc409ec3a35f", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ac49b1e7916198afcae5fa96d9fdc409ec3a35f", "committedDate": "2020-09-29T22:00:37Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97f95273a025bb853a52b564cd86e9fc0acac3af", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/97f95273a025bb853a52b564cd86e9fc0acac3af", "committedDate": "2020-09-30T18:10:02Z", "message": "Fixing unit test flakiness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "157db1c911c61e0e7e0b07a91161a14b3388599e", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/157db1c911c61e0e7e0b07a91161a14b3388599e", "committedDate": "2020-09-30T18:19:42Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cefd308bfeec9a3e4d089adb9aa8d15d87fd747", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9cefd308bfeec9a3e4d089adb9aa8d15d87fd747", "committedDate": "2020-09-30T18:20:09Z", "message": "Merging with Mo's Diagnostics PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ecf26d04001ac94c6f77decd913df4b8af53ad", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/41ecf26d04001ac94c6f77decd913df4b8af53ad", "committedDate": "2020-09-30T19:16:49Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzQ4ODc3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-499748877", "createdAt": "2020-09-30T19:33:36Z", "commit": {"oid": "9cefd308bfeec9a3e4d089adb9aa8d15d87fd747"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTo1NTozMlrOHatFOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTo1ODo0MFrOHatLoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2MzY0MA==", "bodyText": "this is for refreshing address cache on a Gone Exception for write request.\nWith this approach the write response will get blocked till the unrelated address resolution completes.\nyou could instead trigger an address cache refresh in background and return the write response immediately.\nSee this as example:\nhttps://github.com/Azure/azure-sdk-for-java/blob/master/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/ConsistencyWriter.java#L365-L373", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497763640", "createdAt": "2020-09-30T19:55:32Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryUtils.java", "diffHunk": "@@ -82,11 +84,20 @@\n \n                 if (!shouldRetryResult.shouldRetry) {\n                     retryPolicy.updateEndTime();\n-                    if(shouldRetryResult.exception == null) {\n-                        return Mono.error(e);\n-                    } else {\n-                        return Mono.error(shouldRetryResult.exception);\n+\n+                    final Throwable errorToReturn = shouldRetryResult.exception != null ? shouldRetryResult.exception : e;\n+                    final Mono<T> failure = Mono.error(errorToReturn);\n+\n+                    if (shouldRetryResult.policyArg != null &&\n+                        shouldRetryResult.policyArg.getValue0() != null &&\n+                        shouldRetryResult.policyArg.getValue0()) {\n+\n+                        return addressSelector.resolveAddressesAsync(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ecf26d04001ac94c6f77decd913df4b8af53ad"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2NTI4MQ==", "bodyText": "I agree with you. Thanks.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497765281", "createdAt": "2020-09-30T19:58:40Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -213,13 +214,26 @@ public long transportRequestId() {\n     // region Methods\n \n     public boolean expire() {\n-        final RequestTimeoutException error = new RequestTimeoutException(this.toString(), this.args.physicalAddress());\n+        final GoneException error = new GoneException(this.toString(), null, this.args.physicalAddress());\n         BridgeInternal.setRequestHeaders(error, this.args.serviceRequest().getHeaders());\n+\n         return this.completeExceptionally(error);\n     }\n \n     public abstract Timeout newTimeout(final TimerTask task);\n \n+    /**\n+     * Provides information whether the request could have been sent to the service\n+     * @return fals if it is possible to guarantee that the request never arrived at the service - true otherwise\n+     */\n+    public boolean hasSendingRequestStarted() {\n+        return this.sendingRequestHasStarted;\n+    }\n+\n+    void setSendingRequestHasStarted() {\n+        this.sendingRequestHasStarted = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTIxNQ=="}, "originalCommit": {"oid": "f0c6809e5d410a0f95926c638f8698456296c1bb"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5Nzk3ODU3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-499797857", "createdAt": "2020-09-30T20:45:41Z", "commit": {"oid": "41ecf26d04001ac94c6f77decd913df4b8af53ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/45cfea1f34112d4f90f274453b9ca09b7ed24a14", "committedDate": "2020-09-30T22:48:14Z", "message": "Moving the address refresh to a background task for writes hitting 410"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTEzNDU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-499913458", "createdAt": "2020-10-01T00:00:41Z", "commit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMDowMDo0MVrOHazQoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMDoxNjoxOFrOHazibQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2NDg2NQ==", "bodyText": "Can you please add a comment here what policyArg.getValue0() is ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497864865", "createdAt": "2020-10-01T00:00:41Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RetryUtils.java", "diffHunk": "@@ -82,11 +85,18 @@\n \n                 if (!shouldRetryResult.shouldRetry) {\n                     retryPolicy.updateEndTime();\n-                    if(shouldRetryResult.exception == null) {\n-                        return Mono.error(e);\n-                    } else {\n-                        return Mono.error(shouldRetryResult.exception);\n+\n+                    final Throwable errorToReturn = shouldRetryResult.exception != null ? shouldRetryResult.exception : e;\n+                    final Mono<T> failure = Mono.error(errorToReturn);\n+\n+                    if (shouldRetryResult.policyArg != null &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2NzI5OQ==", "bodyText": "@FabianMeiswinkel  - I am fine with adding the flag, I don't think it introduces additional complexity.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497867299", "createdAt": "2020-10-01T00:10:05Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -492,6 +492,7 @@ public void write(final ChannelHandlerContext context, final Object message, fin\n \n             final RntbdRequestRecord record = (RntbdRequestRecord) message;\n             this.timestamps.channelWriteAttempted();\n+            record.setSendingRequestHasStarted();\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAxNDE0Mg=="}, "originalCommit": {"oid": "31c603510f672116d4f58e0f6716959d445387b2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2NzU1Nw==", "bodyText": "typo on return value :)\nfals -> false", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497867557", "createdAt": "2020-10-01T00:11:05Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -213,13 +214,26 @@ public long transportRequestId() {\n     // region Methods\n \n     public boolean expire() {\n-        final RequestTimeoutException error = new RequestTimeoutException(this.toString(), this.args.physicalAddress());\n+        final GoneException error = new GoneException(this.toString(), null, this.args.physicalAddress());\n         BridgeInternal.setRequestHeaders(error, this.args.serviceRequest().getHeaders());\n+\n         return this.completeExceptionally(error);\n     }\n \n     public abstract Timeout newTimeout(final TimerTask task);\n \n+    /**\n+     * Provides information whether the request could have been sent to the service\n+     * @return fals if it is possible to guarantee that the request never arrived at the service - true otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2ODE4Ng==", "bodyText": "If I understand this correctly, we are saying that this API returns true if the request has been sent to the service and received it, false otherwise - meaning either the request is sent but not received by the service, or request is not sent at all ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497868186", "createdAt": "2020-10-01T00:13:42Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -213,13 +214,26 @@ public long transportRequestId() {\n     // region Methods\n \n     public boolean expire() {\n-        final RequestTimeoutException error = new RequestTimeoutException(this.toString(), this.args.physicalAddress());\n+        final GoneException error = new GoneException(this.toString(), null, this.args.physicalAddress());\n         BridgeInternal.setRequestHeaders(error, this.args.serviceRequest().getHeaders());\n+\n         return this.completeExceptionally(error);\n     }\n \n     public abstract Timeout newTimeout(final TimerTask task);\n \n+    /**\n+     * Provides information whether the request could have been sent to the service\n+     * @return fals if it is possible to guarantee that the request never arrived at the service - true otherwise", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2NzU1Nw=="}, "originalCommit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2OTQyMQ==", "bodyText": "Not sure why the CI didn't catch this, but this is missing Microsoft copyright header information.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#discussion_r497869421", "createdAt": "2020-10-01T00:16:18Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/directconnectivity/ReplicatedResourceClientGoneForWriteTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package com.azure.cosmos.implementation.directconnectivity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45cfea1f34112d4f90f274453b9ca09b7ed24a14"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ad514f79862c51e6d1e5eb027db5d9690cc27d5", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6ad514f79862c51e6d1e5eb027db5d9690cc27d5", "committedDate": "2020-10-01T00:28:11Z", "message": "Addressed Kushagra's PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fac63e468ee4c4c1de5bfcaa3cc59f77e047c82", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4fac63e468ee4c4c1de5bfcaa3cc59f77e047c82", "committedDate": "2020-10-01T00:28:43Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTQxMDU4", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15735#pullrequestreview-499941058", "createdAt": "2020-10-01T00:33:33Z", "commit": {"oid": "4fac63e468ee4c4c1de5bfcaa3cc59f77e047c82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1472735cf604458d5535948824316b8b7bc9fb", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e1472735cf604458d5535948824316b8b7bc9fb", "committedDate": "2020-10-01T20:04:12Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/GoneAndRequestTimeoutExceptionHandling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f0b1421e816f854144095439ad4872317015901", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6f0b1421e816f854144095439ad4872317015901", "committedDate": "2020-10-01T22:55:51Z", "message": "Addressing benchmark flakiness introduced due to not retrying writes which have been sent"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}