{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MDE2NTIx", "number": 9017, "title": "Addressing compiler warnings", "bodyText": "", "createdAt": "2020-03-12T03:13:47Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017", "merged": true, "mergeCommit": {"oid": "1300def7a6c810eb0b9f3a9fe175316e7f4f98f7"}, "closed": true, "closedAt": "2020-03-14T02:01:07Z", "author": {"login": "anuchandy"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMy4uRgH2gAyMzg3MDE2NTIxOmVhODAzYmM5NmI3NGM2OWQ1NGRhNjJjMmU4NjE3N2Y1MjhlZWY5ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNUy28gH2gAyMzg3MDE2NTIxOjIxYjRkYWNmYTcxZWIyNTYyMzdjM2M1YTA0YTA3Nzc3NWZkNmYzNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea803bc96b74c69d54da62c2e86177f528eef985", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea803bc96b74c69d54da62c2e86177f528eef985", "committedDate": "2020-03-12T03:10:23Z", "message": "Addressing compiler warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/04bf9bd5e3a1a1a9450992374d785051d84a3435", "committedDate": "2020-03-12T03:10:38Z", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into cosmos-look"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjU0NjE0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373254614", "createdAt": "2020-03-12T03:17:40Z", "commit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoxNzo0MFrOF1QBDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMzoyMzo1NlrOF1QF3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI2Mw==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381263", "createdAt": "2020-03-12T03:17:40Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -494,7 +497,7 @@ public String getId() {\n      * @param partitionKey the partition key\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(String itemId, PartitionKey partitionKey) {\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI3NA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381274", "createdAt": "2020-03-12T03:17:45Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -510,7 +513,7 @@ public String getId() {\n      * @param options the request options\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTMzNA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381334", "createdAt": "2020-03-12T03:18:00Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "diffHunk": "@@ -347,7 +347,7 @@ private CosmosItemResponse mapDeleteItemResponseAndBlock(Mono<CosmosAsyncItemRes\n      * @return the cosmos sync item response\n      * @throws CosmosClientException the cosmos client exception\n      */\n-    public CosmosItemResponse deleteItem(String itemId, PartitionKey partitionKey,\n+    public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTk3Mg==", "bodyText": "This can be the diamond operator on the right hand side", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391381972", "createdAt": "2020-03-12T03:21:13Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GlobalAddressResolver.java", "diffHunk": "@@ -125,7 +126,7 @@ private EndpointCache getOrAddEndpoint(URI endpoint) {\n         });\n \n         if (this.addressCacheByEndpoint.size() > this.maxEndpoints) {\n-            List<URI> allEndpoints = new ArrayList(this.endpointManager.getWriteEndpoints());\n+            List<URI> allEndpoints = new ArrayList<URI>(this.endpointManager.getWriteEndpoints());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjA2OA==", "bodyText": "Diamond operators", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382068", "createdAt": "2020-03-12T03:21:41Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/QuorumReader.java", "diffHunk": "@@ -320,9 +320,9 @@ public QuorumReader(\n                         (ReplicatedResourceClient.isGlobalStrongEnabled() && this.serviceConfigReader.getDefaultConsistencyLevel() == ConsistencyLevel.STRONG) &&\n                             (entity.requestContext.originalRequestConsistencyLevel == null || entity.requestContext.originalRequestConsistencyLevel == ConsistencyLevel.STRONG);\n \n-                    ValueHolder<Long> readLsn = new ValueHolder(-1);\n-                    ValueHolder<Long> globalCommittedLSN = new ValueHolder(-1);\n-                    ValueHolder<StoreResult> storeResult = new ValueHolder(null);\n+                    ValueHolder<Long> readLsn = new ValueHolder<Long>(-1L);\n+                    ValueHolder<Long> globalCommittedLSN = new ValueHolder<Long>(-1L);\n+                    ValueHolder<StoreResult> storeResult = new ValueHolder<StoreResult>(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjIxOQ==", "bodyText": "Diamond operator", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382219", "createdAt": "2020-03-12T03:22:29Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/StoreReader.java", "diffHunk": "@@ -385,8 +385,10 @@ private ReadReplicaResult createReadReplicaResult(List<StoreResult> responseResu\n                                     // TODO: enforceSessionCheck is true, replace with true\n                                     boolean enforceSessionCheck = true;\n \n-                                    MutableVolatile<Boolean> hasGoneException = new MutableVolatile(false);\n-                                    MutableVolatile<ReadReplicaResult> shortCircuitResult = new MutableVolatile();\n+                                    MutableVolatile<Boolean> hasGoneException\n+                                        = new MutableVolatile<Boolean>(false);\n+                                    MutableVolatile<ReadReplicaResult> shortCircuitResult\n+                                        = new MutableVolatile<ReadReplicaResult>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw==", "bodyText": "Don't introduce more guava dependencies! :-) Use the standard Java APIs for hashcode", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382407", "createdAt": "2020-03-12T03:23:36Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ4MQ==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382481", "createdAt": "2020-03-12T03:23:52Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -15,9 +15,9 @@\n  */\n public class CosmosResponse<T extends Resource> {\n     private T properties;\n-    protected final ResourceResponse resourceResponseWrapper;\n+    protected final ResourceResponse<?> resourceResponseWrapper;\n \n-    protected CosmosResponse(ResourceResponse resourceResponse) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ5NA==", "bodyText": "API change for @kushagraThapar and @moderakh to review.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391382494", "createdAt": "2020-03-12T03:23:56Z", "author": {"login": "JonathanGiles"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -26,7 +26,7 @@ protected CosmosResponse(T properties) {\n         this.resourceResponseWrapper = null;\n     }\n \n-    protected CosmosResponse(ResourceResponse resourceResponse, T properties) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse, T properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjc1NDEw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373275410", "createdAt": "2020-03-12T04:44:16Z", "commit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo0NDoxNlrOF1REzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo0NjowNVrOF1RGbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5ODYwNg==", "bodyText": "I think this should have T and Class<T> instead of Object", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391398606", "createdAt": "2020-03-12T04:44:16Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/ModelBridgeInternal.java", "diffHunk": "@@ -72,8 +72,8 @@ public static CosmosAsyncDatabaseResponse createCosmosAsyncDatabaseResponse(Reso\n         return new CosmosAsyncItemResponse<>(response, classType);\n     }\n \n-    public static CosmosAsyncItemResponse createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response, Class classType) {\n-        return new CosmosAsyncItemResponse(response, classType);\n+    public static CosmosAsyncItemResponse<Object> createCosmosAsyncItemResponseWithObjectType(ResourceResponse<Document> response) {\n+        return new CosmosAsyncItemResponse<>(response, Object.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5OTAyMQ==", "bodyText": "@kushagraThapar  I thought we changed this to getItem(). No?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391399021", "createdAt": "2020-03-12T04:46:05Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosItemResponse.java", "diffHunk": "@@ -26,9 +26,8 @@\n      *\n      * @return the resource\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public T getResource() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/20728f8013f3425c7e6a0da34ff9aca8936d8d48", "committedDate": "2020-03-12T10:38:42Z", "message": "Addressing rest of the compiler warnings, removing failonerror:false from pom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzM5NDA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373739409", "createdAt": "2020-03-12T17:02:08Z", "commit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzowMjowOFrOF1nT1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzoyNTowMVrOF1oJgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MjkwMw==", "bodyText": "Do we need to get rid of the whole plugin ?\nWhy can't we just flip the failOnWarning flag to true.\nIn my understanding, by this plugin -> we decide on the java compiler version used for our SDK.\nIn my opinion, we should keep this.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391762903", "createdAt": "2020-03-12T17:02:08Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/pom.xml", "diffHunk": "@@ -280,18 +280,6 @@ Licensed under the MIT License.\n         </configuration>\n       </plugin>\n \n-      <!--  CosmosSkip - Needed temporary to not fail on warning on compilation -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MzUyNA==", "bodyText": "Yes, this looks good to me.\n@mbhaskar  - I noticed we have some APIs, that do not take classType in parameter, like this one. Is it okay to have type as Object for these ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763524", "createdAt": "2020-03-12T17:03:11Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -494,7 +497,7 @@ public String getId() {\n      * @param partitionKey the partition key\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(String itemId, PartitionKey partitionKey) {\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(String itemId, PartitionKey partitionKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI2Mw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2MzY3Mw==", "bodyText": "Same as above. Basically the same APIs.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763673", "createdAt": "2020-03-12T17:03:25Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -510,7 +513,7 @@ public String getId() {\n      * @param options the request options\n      * @return an {@link Mono} containing the  cosmos item resource response.\n      */\n-    public Mono<CosmosAsyncItemResponse> deleteItem(\n+    public Mono<CosmosAsyncItemResponse<Object>> deleteItem(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTI3NA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2Mzg5MA==", "bodyText": "Same API as above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391763890", "createdAt": "2020-03-12T17:03:47Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosContainer.java", "diffHunk": "@@ -347,7 +347,7 @@ private CosmosItemResponse mapDeleteItemResponseAndBlock(Mono<CosmosAsyncItemRes\n      * @return the cosmos sync item response\n      * @throws CosmosClientException the cosmos client exception\n      */\n-    public CosmosItemResponse deleteItem(String itemId, PartitionKey partitionKey,\n+    public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MTMzNA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2NjU2NA==", "bodyText": "I am really wondering, why do we need to change the implementation package classes ?\n@anuchandy @JonathanGiles  - This will really affect the scope of this PR, as any change in implementation package needs a lot of extra testing and perf runs. It is very difficult to figure our and solve bugs in implementation package.\nWhy can't we skip this warnings from implementation package ?\n@moderakh - your thoughts ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391766564", "createdAt": "2020-03-12T17:08:15Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ResourceId.java", "diffHunk": "@@ -180,21 +180,21 @@ public static ResourceId newAttachmentId(String documentId, int attachmentId) {\n                         ResourceId.blockCopy(buffer, 8, subCollRes, 0, 8);\n \n                         long subCollectionResource = ByteBuffer.wrap(buffer, 8, 8).getLong();\n-                        if ((subCollRes[7] >> 4) == (byte) CollectionChildResourceType.Document) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc2ODA3OA==", "bodyText": "I am not sure about this one.\n@milismsft  - can you please look at this break statement introduction change ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391768078", "createdAt": "2020-03-12T17:10:44Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);\n                     StatusCodeErrorType docDbError = ExceptionClassifier.classifyClientException(clientException);\n \n+                    // Note: @kushagraThapar and @moderakh to ensure fallthrough is not expected and break is good", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA==", "bodyText": "@David-Noble-at-work can you please look through some of these rntbd changes ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391770894", "createdAt": "2020-03-12T17:15:22Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MTAyOA==", "bodyText": "@David-Noble-at-work", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391771028", "createdAt": "2020-03-12T17:15:35Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -37,9 +37,9 @@ public boolean acceptOutboundMessage(final Object message) {\n      * @throws IllegalStateException is thrown if an error occurs\n      */\n     @Override\n-    protected void encode(final ChannelHandlerContext context, final Object message, final ByteBuf out) throws IllegalStateException {\n+    protected void encode(final ChannelHandlerContext context, final RntbdContextRequest message, final ByteBuf out) throws IllegalStateException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NDU4NQ==", "bodyText": "This looks good to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391774585", "createdAt": "2020-03-12T17:21:37Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -15,9 +15,9 @@\n  */\n public class CosmosResponse<T extends Resource> {\n     private T properties;\n-    protected final ResourceResponse resourceResponseWrapper;\n+    protected final ResourceResponse<?> resourceResponseWrapper;\n \n-    protected CosmosResponse(ResourceResponse resourceResponse) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ4MQ=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NDY1MA==", "bodyText": "This looks good to me.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391774650", "createdAt": "2020-03-12T17:21:42Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosResponse.java", "diffHunk": "@@ -26,7 +26,7 @@ protected CosmosResponse(T properties) {\n         this.resourceResponseWrapper = null;\n     }\n \n-    protected CosmosResponse(ResourceResponse resourceResponse, T properties) {\n+    protected CosmosResponse(ResourceResponse<?> resourceResponse, T properties) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQ5NA=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NjU1MQ==", "bodyText": "Yes, I think fallthrough is intentional here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391776551", "createdAt": "2020-03-12T17:24:52Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "diffHunk": "@@ -866,6 +868,8 @@ private static ConsistencyLevel parseConsistency(String consistency) {\n         }\n     }\n \n+    @SuppressWarnings(\"fallthrough\")\n+    // Note: @kushagraThapar @moderakh to evaluate whether fallthrough intentional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3NjY0MA==", "bodyText": "Yes, I think fallthrough is intentional here", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391776640", "createdAt": "2020-03-12T17:25:01Z", "author": {"login": "kushagraThapar"}, "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/implementation/TestSuiteBase.java", "diffHunk": "@@ -255,6 +255,8 @@ protected static void truncateCollection(DocumentCollection collection) {\n         logger.info(\"Finished truncating collection {}.\", collection.getId());\n     }\n \n+    @SuppressWarnings(\"fallthrough\")\n+    // Note: @kushagraThapar @moderakh to evaluate whether fallthrough intentional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c90f9f670c83e4836c2f508150b68d4a6db8c47", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/3c90f9f670c83e4836c2f508150b68d4a6db8c47", "committedDate": "2020-03-12T18:21:47Z", "message": "Fixing java8 compiler warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "225f0229eb209f9256e720ee29083379565eb295", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/225f0229eb209f9256e720ee29083379565eb295", "committedDate": "2020-03-12T18:58:20Z", "message": "Rename: CosmosItemResponse::getResource to getItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c7548c76578da5b8674d7ac7e390fda2085f895", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/4c7548c76578da5b8674d7ac7e390fda2085f895", "committedDate": "2020-03-12T18:34:46Z", "message": "Rename: CosmosItemResponse::getResource to getItem"}, "afterCommit": {"oid": "225f0229eb209f9256e720ee29083379565eb295", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/225f0229eb209f9256e720ee29083379565eb295", "committedDate": "2020-03-12T18:58:20Z", "message": "Rename: CosmosItemResponse::getResource to getItem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODc2MjQw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373876240", "createdAt": "2020-03-12T20:24:48Z", "commit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyNDo0OFrOF1uKCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTowMzoxOVrOF1vNcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NTA4Mw==", "bodyText": "Why cant we just cast to (Map<String, String>)  keep the null as it is instead of creating an object", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391875083", "createdAt": "2020-03-12T20:24:48Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/NotFoundException.java", "diffHunk": "@@ -79,7 +80,7 @@ public NotFoundException(String message, HttpHeaders headers, URI requestUri) {\n     }\n \n     NotFoundException(Exception innerException) {\n-        this(RMResources.NotFound, innerException, (Map) null, null);\n+        this(RMResources.NotFound, innerException, new HashMap<>(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDE1Mg==", "bodyText": "Is it possible to suppress this warning and create a work item for this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391890152", "createdAt": "2020-03-12T20:58:24Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MjMzOQ==", "bodyText": "Is it possible to suppress this warning and create a work item for this?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r391892339", "createdAt": "2020-03-12T21:03:19Z", "author": {"login": "mbhaskar"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,12 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(this.version, this.globalLsn, this.localLsnByRegion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTU1NzIy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373955722", "createdAt": "2020-03-12T23:05:14Z", "commit": {"oid": "225f0229eb209f9256e720ee29083379565eb295"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTc3ODE0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-373977814", "createdAt": "2020-03-13T00:18:06Z", "commit": {"oid": "225f0229eb209f9256e720ee29083379565eb295"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80285baab857a5b2b28ed0a745cb39b31c88b01c", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/80285baab857a5b2b28ed0a745cb39b31c88b01c", "committedDate": "2020-03-13T02:19:14Z", "message": "Merge branch 'master' of github.com:azure/azure-sdk-for-java into cosmos-look"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d345fba9328c28513a5f506e3a3701435e1536f7", "committedDate": "2020-03-13T02:48:35Z", "message": "Using super.hashCode() for PartitionKeyInternal and VectorSessionToken"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MDMzNTYx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-374033561", "createdAt": "2020-03-13T03:40:23Z", "commit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMzo0MDoyM1rOF12xWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDowNDo1N1rOF13C-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNjIxOQ==", "bodyText": "Curious: I do not see that this override is required. I sometimes include overrides for debugging purposes. Is that what this one is for or am I missing something?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392016219", "createdAt": "2020-03-13T03:40:23Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,15 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODEzMQ==", "bodyText": "Some additional context on the changes to this file would be helpful. I see a switch with breaks added and a note to verify that the fall-through was unintentional. I know that checkstyle and stopbugs complain about fall-throughs within switches and also about braces around case statements.\nWas the fall-through unintentional?\nIf that's the case is the note still needed?\nTo satisfy checkstyle should we not remove the braces around the case statements?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392018131", "createdAt": "2020-03-13T03:51:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTc0NQ==", "bodyText": "This looks like exactly the set of changes I made on my batch api working branch and so I'm pleased to see them here. I'll do a more thorough comparison of your changes vs mine in a few minutes. Stay tuned...", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392019745", "createdAt": "2020-03-13T03:59:42Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA==", "bodyText": "Same as above. I want to compare what's in my branch to what's in this PR.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392019944", "createdAt": "2020-03-13T04:00:50Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDI1Ng==", "bodyText": "Also: do we need the \"rawtypes\" suppression after adding the template types?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020256", "createdAt": "2020-03-13T04:02:28Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDMzNw==", "bodyText": "Same as above.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020337", "createdAt": "2020-03-13T04:02:57Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdResponse.java", "diffHunk": "@@ -34,7 +34,8 @@\n \n     // region Fields\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMDcyOQ==", "bodyText": "Are we tracking issues? Should there not be a reference to an issue when it comes to things like this that--I presume--might need to be done before GA?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392020729", "createdAt": "2020-03-13T04:04:57Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +170,21 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MDcwOTgz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-374070983", "createdAt": "2020-03-13T06:20:47Z", "commit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88ae743ddd3cce6fc4a17b305df810e8621bf02c", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/88ae743ddd3cce6fc4a17b305df810e8621bf02c", "committedDate": "2020-03-13T08:25:23Z", "message": "Removing raw-type supressions those are not required anymore, cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDQxNDIw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#pullrequestreview-374441420", "createdAt": "2020-03-13T16:28:40Z", "commit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoyODo0MFrOF2KTqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzowMDoxNVrOF2LeMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNjI5Ng==", "bodyText": "I see that an issue has been logged to implement what I would expect to see: an implementation different than super.hashCode.\nQuestion: Have we switched from TODO () to \"Note: @\" as a marker for work to be done?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392336296", "createdAt": "2020-03-13T16:28:40Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/VectorSessionToken.java", "diffHunk": "@@ -109,6 +110,15 @@ public boolean equals(Object obj) {\n         return this.version == other.version\n                 && this.globalLsn == other.globalLsn\n                 && this.areRegionProgressEqual(other.localLsnByRegion);\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNjIxOQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNzIxNQ==", "bodyText": "Thank you. Please resolve this after the change is in.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392337215", "createdAt": "2020-03-13T16:30:15Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/changefeed/implementation/PartitionProcessorImpl.java", "diffHunk": "@@ -128,16 +128,20 @@ public PartitionProcessorImpl(ChangeFeedObserver observer, ChangeFeedContextClie\n                         BridgeInternal.getPartitionKeyInternal(this.options.getPartitionKey()), Thread.currentThread().getId(), clientException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxODEzMQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MTA3OQ==", "bodyText": "thank you. Please resolve when the change is in.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392341079", "createdAt": "2020-03-13T16:36:42Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,12 +35,15 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTk0NA=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MzY5MQ==", "bodyText": "This is good to go. On my branch I eliminated this local variable declaration and that's not an elimination that I'll ask you to make:\nfinal RntbdContextRequest request = message;", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392343691", "createdAt": "2020-03-13T16:41:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTc0NQ=="}, "originalCommit": {"oid": "d345fba9328c28513a5f506e3a3701435e1536f7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MTg3NA==", "bodyText": "Yes, what you say is true and--on my working branch--I've implemented acceptOutboundMessage like this:\n    /**\n     * Returns {@code true} if the given message is an {@link RntbdContextRequest} message.\n     * <p>\n     * If {@code false} this message should be passed to the next {@link ChannelOutboundHandler} in the pipeline.\n     *\n     * @param message the message to encode.\n     * @return {@code true}, if the given message is an an @{link RntbdContextRequest} instance; otherwise {@code false}.\n     */\n    @Override\n    public boolean acceptOutboundMessage(final Object message) {\n        return message.getClass() == RntbdContextRequest.class;\n    }", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392351874", "createdAt": "2020-03-13T16:54:04Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MzMzOQ==", "bodyText": "Please resolve this whenever you're ready.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392353339", "createdAt": "2020-03-13T16:56:29Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdContextRequestEncoder.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-final class RntbdContextRequestEncoder extends MessageToByteEncoder {\n+final class RntbdContextRequestEncoder extends MessageToByteEncoder<RntbdContextRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc3MDg5NA=="}, "originalCommit": {"oid": "20728f8013f3425c7e6a0da34ff9aca8936d8d48"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NDM1OA==", "bodyText": "Nit: an extra few spaces before AtomicIntegerFieldUpdater", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392354358", "createdAt": "2020-03-13T16:58:23Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestRecord.java", "diffHunk": "@@ -35,10 +35,10 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(RntbdRequestRecord.class);\n \n-    private static final AtomicIntegerFieldUpdater REQUEST_LENGTH =\n-        AtomicIntegerFieldUpdater.newUpdater(RntbdRequestRecord.class, \"requestLength\");\n+    private static final AtomicIntegerFieldUpdater<RntbdRequestRecord> REQUEST_LENGTH =\n+            AtomicIntegerFieldUpdater.newUpdater(RntbdRequestRecord.class, \"requestLength\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ae743ddd3cce6fc4a17b305df810e8621bf02c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1NTM3Ng==", "bodyText": "and I see there is an issue link to complete the implementation.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9017#discussion_r392355376", "createdAt": "2020-03-13T17:00:15Z", "author": {"login": "David-Noble-at-work"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -170,6 +171,18 @@ public boolean equals(Object obj) {\n         return this.compareTo(pki) == 0;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        if (this.components == null || this.components.size() == 0) {\n+            return 0;\n+        }\n+        int [] ordinals = new int[this.components.size()];\n+        for (int i = 0; i < this.components.size(); i++) {\n+            ordinals[i] = this.components.get(i).GetTypeOrdinal();\n+        }\n+        return Objects.hashCode(ordinals);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4MjQwNw=="}, "originalCommit": {"oid": "04bf9bd5e3a1a1a9450992374d785051d84a3435"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b4dacfa71eb256237c3c5a04a077775fd6f367", "author": {"user": {"login": "anuchandy", "name": "Anu Thomas Chandy"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/21b4dacfa71eb256237c3c5a04a077775fd6f367", "committedDate": "2020-03-13T18:40:45Z", "message": "Note -> TODO, remove extra-space and replacing instanceof with class eqality"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 774, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}