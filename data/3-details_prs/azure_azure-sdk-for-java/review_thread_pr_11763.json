{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTkzNTUy", "number": 11763, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToyNDoxN1rOECaNNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToyNzozN1rOECaPlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTYxOTc1OnYy", "diffSide": "RIGHT", "path": "sdk/sql/mgmt/src/main/java/com/azure/management/sql/implementation/SqlDatabaseExportRequestImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToyNDoxN1rOGe2Prw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNTozMDozOFrOGe2Wnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5OTIxNQ==", "bodyText": "OK for now. One uncertainty is whether EndpointSuffix will be needed.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r434999215", "createdAt": "2020-06-04T05:24:17Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/sql/mgmt/src/main/java/com/azure/management/sql/implementation/SqlDatabaseExportRequestImpl.java", "diffHunk": "@@ -13,19 +14,23 @@\n import com.azure.management.sql.SqlDatabaseExportRequest;\n import com.azure.management.sql.SqlDatabaseImportExportResponse;\n import com.azure.management.sql.StorageKeyType;\n+import com.azure.management.storage.BlobContainer;\n+import com.azure.management.storage.BlobContainers;\n+import com.azure.management.storage.PublicAccess;\n import com.azure.management.storage.StorageAccount;\n-import com.azure.storage.blob.BlobServiceClient;\n-import com.azure.storage.blob.BlobServiceClientBuilder;\n-import com.azure.storage.blob.implementation.models.StorageErrorException;\n-import java.util.Objects;\n-import reactor.core.Exceptions;\n import reactor.core.publisher.Mono;\n \n+import java.util.Objects;\n+\n /** Implementation for SqlDatabaseExportRequest. */\n public class SqlDatabaseExportRequestImpl extends ExecutableImpl<SqlDatabaseImportExportResponse>\n     implements SqlDatabaseExportRequest, SqlDatabaseExportRequest.SqlDatabaseExportRequestDefinition {\n \n     private final ClientLogger logger = new ClientLogger(getClass());\n+    private static final String STORAGE_CONNECTION_STRING =\n+        \"DefaultEndpointsProtocol=https;\" +\n+            \"AccountName=%s;\" +\n+            \"AccountKey=%s\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDk5MQ==", "bodyText": "Has removed since we don't use data-plane now", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r435000991", "createdAt": "2020-06-04T05:30:38Z", "author": {"login": "ChenTanyi"}, "path": "sdk/sql/mgmt/src/main/java/com/azure/management/sql/implementation/SqlDatabaseExportRequestImpl.java", "diffHunk": "@@ -13,19 +14,23 @@\n import com.azure.management.sql.SqlDatabaseExportRequest;\n import com.azure.management.sql.SqlDatabaseImportExportResponse;\n import com.azure.management.sql.StorageKeyType;\n+import com.azure.management.storage.BlobContainer;\n+import com.azure.management.storage.BlobContainers;\n+import com.azure.management.storage.PublicAccess;\n import com.azure.management.storage.StorageAccount;\n-import com.azure.storage.blob.BlobServiceClient;\n-import com.azure.storage.blob.BlobServiceClientBuilder;\n-import com.azure.storage.blob.implementation.models.StorageErrorException;\n-import java.util.Objects;\n-import reactor.core.Exceptions;\n import reactor.core.publisher.Mono;\n \n+import java.util.Objects;\n+\n /** Implementation for SqlDatabaseExportRequest. */\n public class SqlDatabaseExportRequestImpl extends ExecutableImpl<SqlDatabaseImportExportResponse>\n     implements SqlDatabaseExportRequest, SqlDatabaseExportRequest.SqlDatabaseExportRequestDefinition {\n \n     private final ClientLogger logger = new ClientLogger(getClass());\n+    private static final String STORAGE_CONNECTION_STRING =\n+        \"DefaultEndpointsProtocol=https;\" +\n+            \"AccountName=%s;\" +\n+            \"AccountKey=%s\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk5OTIxNQ=="}, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTYyNTgxOnYy", "diffSide": "RIGHT", "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNToyNzozN1rOGe2TSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowMTo1OFrOGe27RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDEzNw==", "bodyText": "Any detail?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r435000137", "createdAt": "2020-06-04T05:27:37Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "diffHunk": "@@ -388,8 +388,7 @@ public CosmosDBAccountImpl withoutReadReplication(Region region) {\n         this.ensureFailoverIsInitialized();\n         for (int i = 1; i < this.failoverPolicies.size(); i++) {\n             if (this.failoverPolicies.get(i).locationName() != null) {\n-                String locName = this.failoverPolicies.get(i).locationName().replace(\" \", \"\")\n-                    .toLowerCase(Locale.ROOT);\n+                String locName = this.formatLocationName(this.failoverPolicies.get(i).locationName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMTQ0OQ==", "bodyText": "I just refactor it to a function since it would use every where.\nIn cosmos, these two location are all accepted: \"West US\", \"westus\". And it will return the \"West US\" while our Region uses \"westus\".", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r435001449", "createdAt": "2020-06-04T05:32:13Z", "author": {"login": "ChenTanyi"}, "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "diffHunk": "@@ -388,8 +388,7 @@ public CosmosDBAccountImpl withoutReadReplication(Region region) {\n         this.ensureFailoverIsInitialized();\n         for (int i = 1; i < this.failoverPolicies.size(); i++) {\n             if (this.failoverPolicies.get(i).locationName() != null) {\n-                String locName = this.failoverPolicies.get(i).locationName().replace(\" \", \"\")\n-                    .toLowerCase(Locale.ROOT);\n+                String locName = this.formatLocationName(this.failoverPolicies.get(i).locationName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDEzNw=="}, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwNTE2MQ==", "bodyText": "Ok, then maybe static is better.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r435005161", "createdAt": "2020-06-04T05:44:55Z", "author": {"login": "weidongxu-microsoft"}, "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "diffHunk": "@@ -388,8 +388,7 @@ public CosmosDBAccountImpl withoutReadReplication(Region region) {\n         this.ensureFailoverIsInitialized();\n         for (int i = 1; i < this.failoverPolicies.size(); i++) {\n             if (this.failoverPolicies.get(i).locationName() != null) {\n-                String locName = this.failoverPolicies.get(i).locationName().replace(\" \", \"\")\n-                    .toLowerCase(Locale.ROOT);\n+                String locName = this.formatLocationName(this.failoverPolicies.get(i).locationName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDEzNw=="}, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDM3Mg==", "bodyText": "Done", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11763#discussion_r435010372", "createdAt": "2020-06-04T06:01:58Z", "author": {"login": "ChenTanyi"}, "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "diffHunk": "@@ -388,8 +388,7 @@ public CosmosDBAccountImpl withoutReadReplication(Region region) {\n         this.ensureFailoverIsInitialized();\n         for (int i = 1; i < this.failoverPolicies.size(); i++) {\n             if (this.failoverPolicies.get(i).locationName() != null) {\n-                String locName = this.failoverPolicies.get(i).locationName().replace(\" \", \"\")\n-                    .toLowerCase(Locale.ROOT);\n+                String locName = this.formatLocationName(this.failoverPolicies.get(i).locationName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAwMDEzNw=="}, "originalCommit": {"oid": "a8380497875fd16c2efc08d9fea40ef74779e6b3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3968, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}