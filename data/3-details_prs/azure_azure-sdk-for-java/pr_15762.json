{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzkyMjQ4", "number": 15762, "title": "Added response timeout API in reactor netty Http Client", "bodyText": "Added response timeout API in reactor netty Http Client for Query Plan, Address Refresh and in general.", "createdAt": "2020-09-27T23:09:03Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762", "merged": true, "mergeCommit": {"oid": "4161d4cf279d78e5328b8e378283d26cb6ef4f5e"}, "closed": true, "closedAt": "2020-09-30T02:55:49Z", "author": {"login": "kushagraThapar"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNHSz8AH2gAyNDkzNzkyMjQ4OjE5NjhjNGNiM2ZlN2U2MGU5MzgyOGZiOGQxZjVjYTdlZDFhNjFhZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNv7aagH2gAyNDkzNzkyMjQ4OjFmMGJlNjE5YTUxMGM2OTQzOWM3NTcyMGIwMTliZjg2Y2U5NDM2NDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1968c4cb3fe7e60e93828fb8d1f5ca7ed1a61ad1", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1968c4cb3fe7e60e93828fb8d1f5ca7ed1a61ad1", "committedDate": "2020-09-27T23:08:08Z", "message": "Added response timeout API for Query Plan, Address Refresh and in general"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MTMzMjI0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497133224", "createdAt": "2020-09-28T00:52:15Z", "commit": {"oid": "1968c4cb3fe7e60e93828fb8d1f5ca7ed1a61ad1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMDo1Mzo0OVrOHYrmhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMDo1NToyMFrOHYrnZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0MjI0NA==", "bodyText": "why change in method name ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495642244", "createdAt": "2020-09-28T00:53:49Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -98,29 +100,41 @@ private void configureChannelPipelineHandlers() {\n         Objects.requireNonNull(request.httpMethod());\n         Objects.requireNonNull(request.uri());\n         Objects.requireNonNull(this.httpClientConfig);\n-        if(request.getReactorNettyRequestRecord() == null) {\n+        if(request.reactorNettyRequestRecord() == null) {\n             ReactorNettyRequestRecord reactorNettyRequestRecord = new ReactorNettyRequestRecord();\n             reactorNettyRequestRecord.setTimeCreated(Instant.now());\n-            request.setReactorNettyRequestRecord(reactorNettyRequestRecord);\n+            request.withReactorNettyRequestRecord(reactorNettyRequestRecord);\n         }\n \n         final AtomicReference<ReactorNettyHttpResponse> responseReference = new AtomicReference<>();\n \n+        final Duration responseTimeout;\n+        if (OperationType.QueryPlan.equals(request.operationType())) {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getQueryPlanResponseTimeoutInSeconds());\n+        } else if (OperationType.AddressRefresh.equals(request.operationType())) {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getAddressRefreshResponseTimeoutInSeconds());\n+        } else {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getDirectHttpsResponseTimeoutInSeconds());\n+        }\n+\n+        logger.info(\"Request Operation Type is : {}\", request.operationType());\n+\n         return this.httpClient\n             .observe((connection, state) -> {\n                 Instant time = Instant.now();\n                 if(state.equals(HttpClientState.CONNECTED) || state.equals(HttpClientState.ACQUIRED)){\n-                    request.getReactorNettyRequestRecord().setTimeConnected(time);\n+                    request.reactorNettyRequestRecord().setTimeConnected(time);\n                 } else if(state.equals(HttpClientState.CONFIGURED)){\n-                    request.getReactorNettyRequestRecord().setTimeConfigured(time);\n+                    request.reactorNettyRequestRecord().setTimeConfigured(time);\n                 } else if(state.equals(HttpClientState.REQUEST_SENT)){\n-                    request.getReactorNettyRequestRecord().setTimeSent(time);\n+                    request.reactorNettyRequestRecord().setTimeSent(time);\n                 } else if(state.equals(HttpClientState.RESPONSE_RECEIVED)){\n-                    request.getReactorNettyRequestRecord().setTimeReceived(time);\n+                    request.reactorNettyRequestRecord().setTimeReceived(time);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1968c4cb3fe7e60e93828fb8d1f5ca7ed1a61ad1"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0MjQ3MA==", "bodyText": "this is for IllegalReferenceCountException ?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495642470", "createdAt": "2020-09-28T00:55:20Z", "author": {"login": "simplynaveen20"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -133,8 +147,16 @@ private void configureChannelPipelineHandlers() {\n             .doOnCancel(() -> {\n                 ReactorNettyHttpResponse reactorNettyHttpResponse = responseReference.get();\n                 if (reactorNettyHttpResponse != null) {\n-                    reactorNettyHttpResponse.releaseAfterCancel(request.httpMethod());\n+                    reactorNettyHttpResponse.releaseOnNotSubscribedResponse(ReactorNettyResponseState.CANCELLED);\n+                }\n+            })\n+            .onErrorMap(throwable -> {\n+                logger.error(\"Error occurred while sending request : \", throwable);\n+                ReactorNettyHttpResponse reactorNettyHttpResponse = responseReference.get();\n+                if (reactorNettyHttpResponse != null) {\n+                    reactorNettyHttpResponse.releaseOnNotSubscribedResponse(ReactorNettyResponseState.ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1968c4cb3fe7e60e93828fb8d1f5ca7ed1a61ad1"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c", "author": {"user": {"login": "mbhaskar", "name": "Bhaskar Mallapragada"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4893e3f01f983ccefbed93e3afe65be094cd63c", "committedDate": "2020-09-28T04:45:33Z", "message": "Retry the queryplan and address refresh calls on gateway ReadTimeOut exception\nUnit tests for above retries\nIllegalRefCount fix by retain()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjM5Njky", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497239692", "createdAt": "2020-09-28T07:11:37Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxMTozN1rOHYxCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxMTozN1rOHYxCcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTMxMg==", "bodyText": "NIT: I would prefer a name like \"NonIOBoundOperationRetryCount\" - that way we can reuse the constant.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495731312", "createdAt": "2020-09-28T07:11:37Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ClientRetryPolicy.java", "diffHunk": "@@ -29,6 +30,7 @@\n     final static int RetryIntervalInMS = 1000; //Once we detect failover wait for 1 second before retrying request.\n     final static int MaxRetryCount = 120;\n     private final static int MaxServiceUnavailableRetryCount = 1;\n+    private final static int MAX_QUERYPLAN_ADDRESS_RETRY_COUNT = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjQxMzQ3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497241347", "createdAt": "2020-09-28T07:14:13Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxNDoxM1rOHYxHVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxNDoxM1rOHYxHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMjU2NA==", "bodyText": "NIT: similar as above - have a helper function IsNonIOBoundOperation or similar that returns true for now if addres refresh or query plan retrieval but can be extended easily", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495732564", "createdAt": "2020-09-28T07:14:13Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ClientRetryPolicy.java", "diffHunk": "@@ -106,9 +110,15 @@ public ClientRetryPolicy(GlobalEndpointManager globalEndpointManager,\n                 } else {\n                     return this.shouldNotRetryOnEndpointFailureAsync(this.isReadRequest, false);\n                 }\n+            } else if (clientException != null && clientException.getCause() instanceof ReadTimeoutException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjQzNjMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497243633", "createdAt": "2020-09-28T07:17:57Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxNzo1N1rOHYxOFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoxNzo1N1rOHYxOFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNDI5NQ==", "bodyText": "Question: Why the DIRECT prefix ? This is not just applicable when using Direct Transport with Https Transport (vs. TCP) but for all https calls (independent of Gateway or Direct with Https, correct?) If so I would remove the Direct - could otherwise be too confusing", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495734295", "createdAt": "2020-09-28T07:17:57Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Configs.java", "diffHunk": "@@ -176,6 +182,18 @@ public int getReactorNettyMaxConnectionPoolSize() {\n         return REACTOR_NETTY_MAX_CONNECTION_POOL_SIZE;\n     }\n \n+    public int getDirectHttpsResponseTimeoutInSeconds() {\n+        return getJVMConfigAsInt(DIRECT_HTTPS_RESPONSE_TIMEOUT_IN_SECONDS, DEFAULT_DIRECT_HTTPS_RESPONSE_TIMEOUT_IN_SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjQ2Mzgy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497246382", "createdAt": "2020-09-28T07:22:21Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMjoyMVrOHYxWaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMjoyMVrOHYxWaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNjQyNA==", "bodyText": "NIT - do we also want to expose maxRetryCount in VMOptions?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495736424", "createdAt": "2020-09-28T07:22:21Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Configs.java", "diffHunk": "@@ -65,6 +68,9 @@\n     private static final Duration CONNECTION_ACQUIRE_TIMEOUT = Duration.ofSeconds(45);\n     private static final int REACTOR_NETTY_MAX_CONNECTION_POOL_SIZE = 1000;\n     private static final String REACTOR_NETTY_CONNECTION_POOL_NAME = \"reactor-netty-connection-pool\";\n+    private static final int DEFAULT_DIRECT_HTTPS_RESPONSE_TIMEOUT_IN_SECONDS = 60;\n+    private static final int DEFAULT_QUERY_PLAN_RESPONSE_TIMEOUT_IN_SECONDS = 3;\n+    private static final int DEFAULT_ADDRESS_REFRESH_RESPONSE_TIMEOUT_IN_SECONDS = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjU5OTUx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497259951", "createdAt": "2020-09-28T07:42:49Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0Mjo0OVrOHYx-Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0Mjo0OVrOHYx-Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0NjYxNQ==", "bodyText": "When searching for Unpooled.wrappedBuffer there are several other places where we don't retain it as well.  SHouldn't this be consistent across the board?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495746615", "createdAt": "2020-09-28T07:42:49Z", "author": {"login": "FabianMeiswinkel"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/BufferedHttpResponse.java", "diffHunk": "@@ -50,7 +50,7 @@ public HttpHeaders headers() {\n \n     @Override\n     public Flux<ByteBuf> body() {\n-        return bodyAsByteArray().flatMapMany(bytes -> Flux.just(Unpooled.wrappedBuffer(bytes)));\n+        return bodyAsByteArray().flatMapMany(bytes -> Flux.just(Unpooled.wrappedBuffer(bytes).retain()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e", "author": {"user": {"login": "mbhaskar", "name": "Bhaskar Mallapragada"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/7f82d1f2b09df29d9b35b098773b2722fece1b3e", "committedDate": "2020-09-28T07:47:54Z", "message": "Adding log on retry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjY0MzMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497264333", "createdAt": "2020-09-28T07:49:26Z", "commit": {"oid": "c4893e3f01f983ccefbed93e3afe65be094cd63c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjY4Njk1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497268695", "createdAt": "2020-09-28T07:55:53Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mjg0OTA5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497284909", "createdAt": "2020-09-28T08:18:52Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoxODo1M1rOHYzI8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoxODo1M1rOHYzI8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2NTc0NQ==", "bodyText": "The logic is not query/address dependent, can it be named generic to convey the intent.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495765745", "createdAt": "2020-09-28T08:18:53Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ClientRetryPolicy.java", "diffHunk": "@@ -121,6 +131,23 @@ public ClientRetryPolicy(GlobalEndpointManager globalEndpointManager,\n         return this.throttlingRetry.shouldRetry(e);\n     }\n \n+    private Mono<ShouldRetryResult> shouldRetryQueryPlanAndAddress() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Mjg5OTA3", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497289907", "createdAt": "2020-09-28T08:25:40Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoyNTo0MFrOHYzYJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoyNTo0MFrOHYzYJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2OTYzNg==", "bodyText": "HtpReqeustMessage CTOR always forces the operationType, why is it missing?\nIdeally its better to make it operationType immutable.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495769636", "createdAt": "2020-09-28T08:25:40Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/HttpTransportClient.java", "diffHunk": "@@ -361,6 +361,9 @@ private HttpRequest prepareHttpMessage(\n                 throw new IllegalStateException();\n         }\n \n+        // add operation type\n+        httpRequestMessage.withOperationType(request.getOperationType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjkxNzY5", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497291769", "createdAt": "2020-09-28T08:28:08Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoyODowOFrOHYzd3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoyODowOFrOHYzd3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3MTEwMw==", "bodyText": "Will it impact the full region fail-over?\nIf so does it needs to be finer scoped like, ReadTimeout & non-data-plane operations etc...", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r495771103", "createdAt": "2020-09-28T08:28:08Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GatewayAddressCache.java", "diffHunk": "@@ -559,7 +563,10 @@ public void dispose() {\n             }\n \n             if (WebExceptionUtility.isNetworkFailure(dce)) {\n-                BridgeInternal.setSubStatusCode(dce, HttpConstants.SubStatusCodes.GATEWAY_ENDPOINT_UNAVAILABLE);\n+                if (!(dce.getCause() instanceof ReadTimeoutException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NjYyMzMz", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497662333", "createdAt": "2020-09-28T15:44:31Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo0NTo1MlrOHZEqLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo0NjoxMFrOHZEq-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1Mjc4MQ==", "bodyText": "the safer approach is to do a recursive cause check similar to WebExceptionUtility.isNetworkFailure().\nCan this be factored out as a utility method to WebExceptionUtility similar to WebExceptionUtility.isNetworkFailure().?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r496052781", "createdAt": "2020-09-28T15:45:52Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxGatewayStoreModel.java", "diffHunk": "@@ -299,7 +301,10 @@ private String ensureSlashPrefixed(String path) {\n                        }\n \n                        if (WebExceptionUtility.isNetworkFailure(dce)) {\n-                           BridgeInternal.setSubStatusCode(dce, HttpConstants.SubStatusCodes.GATEWAY_ENDPOINT_UNAVAILABLE);\n+                           if (!(dce.getCause() instanceof ReadTimeoutException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1Mjk4NQ==", "bodyText": "ditto", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r496052985", "createdAt": "2020-09-28T15:46:10Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/GatewayAddressCache.java", "diffHunk": "@@ -342,7 +343,10 @@ public GatewayAddressCache(\n             }\n \n             if (WebExceptionUtility.isNetworkFailure(dce)) {\n-                BridgeInternal.setSubStatusCode(dce, HttpConstants.SubStatusCodes.GATEWAY_ENDPOINT_UNAVAILABLE);\n+                if (!(dce.getCause() instanceof ReadTimeoutException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Njg0Mjky", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497684292", "createdAt": "2020-09-28T16:08:59Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowODo1OVrOHZFmhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowODo1OVrOHZFmhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2ODIyOQ==", "bodyText": "seems you are trying to fix a netty ref counting issue.\nI don't have all the context. However at the first look this doesn't seem to me to be the right place for increasing the ref count.\nUnpooled.wrappedBuffer() already sets ref count to a non zero value. If we have ref counting issue. I suspect we should fix that elsewhere. not here.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r496068229", "createdAt": "2020-09-28T16:08:59Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/RxDocumentServiceRequest.java", "diffHunk": "@@ -953,7 +953,7 @@ public void clearRoutingHints() {\n             return Flux.empty();\n         }\n \n-        return Flux.just(Unpooled.wrappedBuffer(contentAsByteArray));\n+        return Flux.just(Unpooled.wrappedBuffer(contentAsByteArray).retain());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Njg5NTI1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-497689525", "createdAt": "2020-09-28T16:15:22Z", "commit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxNToyMlrOHZF2tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxNToyMlrOHZF2tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA3MjM3Mw==", "bodyText": "These is business logic. HttpClient should only be doing http network layer handling not business logic.\nIf we need to set a different response timeout per business logic operation then the caller of HttpClient.Send should pass the timeout as an override.\nadding an overloaded method HttpClient.send(httpRequest, responseTimeout) and keeping the business logic out of the HttpClient to me seems a better approach.\nThat way you don't have to add operationType to the HttpRequest.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#discussion_r496072373", "createdAt": "2020-09-28T16:15:22Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/http/ReactorNettyClient.java", "diffHunk": "@@ -98,29 +100,39 @@ private void configureChannelPipelineHandlers() {\n         Objects.requireNonNull(request.httpMethod());\n         Objects.requireNonNull(request.uri());\n         Objects.requireNonNull(this.httpClientConfig);\n-        if(request.getReactorNettyRequestRecord() == null) {\n+        if(request.reactorNettyRequestRecord() == null) {\n             ReactorNettyRequestRecord reactorNettyRequestRecord = new ReactorNettyRequestRecord();\n             reactorNettyRequestRecord.setTimeCreated(Instant.now());\n-            request.setReactorNettyRequestRecord(reactorNettyRequestRecord);\n+            request.withReactorNettyRequestRecord(reactorNettyRequestRecord);\n         }\n \n         final AtomicReference<ReactorNettyHttpResponse> responseReference = new AtomicReference<>();\n \n+        final Duration responseTimeout;\n+        if (OperationType.QueryPlan.equals(request.operationType())) {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getQueryPlanResponseTimeoutInSeconds());\n+        } else if (OperationType.AddressRefresh.equals(request.operationType())) {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getAddressRefreshResponseTimeoutInSeconds());\n+        } else {\n+            responseTimeout = Duration.ofSeconds(this.httpClientConfig.getConfigs().getDirectHttpsResponseTimeoutInSeconds());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f82d1f2b09df29d9b35b098773b2722fece1b3e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fd600f09faf4785ae76843d1a9c6adf8a16f410", "author": {"user": {"login": "mbhaskar", "name": "Bhaskar Mallapragada"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9fd600f09faf4785ae76843d1a9c6adf8a16f410", "committedDate": "2020-09-28T21:14:27Z", "message": "Remvoving retain() for CTL run."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d83cb99c3e3d6ba55c68425f75bb5a7e9a93e528", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d83cb99c3e3d6ba55c68425f75bb5a7e9a93e528", "committedDate": "2020-09-29T00:53:12Z", "message": "Implemented code review comments, updated responseTimeout API, removed Flux Byte Buf to Flux of byte array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6783e72b5e493473cfb5bed14481b5527f9d9f50", "author": {"user": {"login": "mbhaskar", "name": "Bhaskar Mallapragada"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/6783e72b5e493473cfb5bed14481b5527f9d9f50", "committedDate": "2020-09-29T04:41:02Z", "message": "Adding timeout and retry for address refresh\nAdding unit test for above"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f509e904fc1fa5ff32be740a4f70658e226d24b4", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/f509e904fc1fa5ff32be740a4f70658e226d24b4", "committedDate": "2020-09-29T19:05:01Z", "message": "Fixed address refresh retry, updated default timeout for query plan and address refresh to 5 seconds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d21d4c40fa5fb683e41f19c08495c932f743a482", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/d21d4c40fa5fb683e41f19c08495c932f743a482", "committedDate": "2020-09-29T20:08:33Z", "message": "Updated spring-boot-starter-parent replace version to 2.2.10.RELEASE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODc1Nzgy", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-498875782", "createdAt": "2020-09-29T20:41:01Z", "commit": {"oid": "d21d4c40fa5fb683e41f19c08495c932f743a482"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODgyOTk0", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15762#pullrequestreview-498882994", "createdAt": "2020-09-29T20:51:35Z", "commit": {"oid": "d21d4c40fa5fb683e41f19c08495c932f743a482"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04c3bb733a4a272f6772c3a483cb506aeb7a49ef", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/04c3bb733a4a272f6772c3a483cb506aeb7a49ef", "committedDate": "2020-09-29T20:53:06Z", "message": "Renames and code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757425a0d49fda268b7d27bd3f79a19fc0115ead", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/757425a0d49fda268b7d27bd3f79a19fc0115ead", "committedDate": "2020-09-29T21:00:37Z", "message": "Checking against general exception e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f0be619a510c69439c75720b019bf86ce943641", "author": {"user": {"login": "kushagraThapar", "name": "Kushagra Thapar"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/1f0be619a510c69439c75720b019bf86ce943641", "committedDate": "2020-09-29T22:28:41Z", "message": "Added new substatus code for Gateway ReadTimeoutException"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}