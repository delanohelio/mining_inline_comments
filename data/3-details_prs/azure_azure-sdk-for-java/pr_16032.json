{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTMxMTMy", "number": 16032, "title": "Handling SslException on channel close", "bodyText": "This issue was reported by a customer (ICM#205604603) - adding changes to handle this error and reduce noise level in logs.\nOnce we have this issue resolved, we would need you to take a look at the below exception.\nCustomer is getting hundreds of these exceptions while performing write operations. They are only seeing these errors in the logs and there is no impact to the application.\njavax.net.ssl.SSLException: SSLEngine closed already\nat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:854)\nat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:811)\nat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:792)\nat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:1939)\nat io.netty.handler.ssl.SslHandler.closeOutbound0(SslHandler.java:668)\nat io.netty.handler.ssl.SslHandler.closeOutbound(SslHandler.java:652)\nat io.netty.handler.ssl.SslHandler.closeOutbound(SslHandler.java:640)\nat com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdRequestManager.close(RntbdRequestManager.java:391)\nat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:622)\nat io.netty.channel.AbstractChannelHandlerContext.access$1200(AbstractChannelHandlerContext.java:61)\nat io.netty.channel.AbstractChannelHandlerContext$11.run(AbstractChannelHandlerContext.java:611)\nat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\nat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\nat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\nat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\nat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\nat java.lang.Thread.run(Thread.java:748)", "createdAt": "2020-10-07T10:01:01Z", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032", "merged": true, "mergeCommit": {"oid": "aced874ba88dc08436db1e4212d754a7d20225d3"}, "closed": true, "closedAt": "2020-10-07T21:55:02Z", "author": {"login": "FabianMeiswinkel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQJ-_HAH2gAyNDk5MTMxMTMyOjYwMWI1MmY3NTY0NzU2OGU0YzFjOTcwZWY1MmNkMzEzNzgwNmE1NGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQTPDsAH2gAyNDk5MTMxMTMyOmUzNTZhYmQ0YTdkMTk3ZmNlZjZhOTNjMjc1N2EyODJmNGZkNjlmNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "601b52f75647568e4c1c970ef52cd3137806a54d", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/601b52f75647568e4c1c970ef52cd3137806a54d", "committedDate": "2020-10-07T09:57:58Z", "message": "Handling SslException on channel close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/607876341015bd80e85d1cd388de743a0f48a774", "committedDate": "2020-10-07T13:31:48Z", "message": "Added SpotBug exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDA1ODAw", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#pullrequestreview-504005800", "createdAt": "2020-10-07T15:29:20Z", "commit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDA2MjEx", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#pullrequestreview-504006211", "createdAt": "2020-10-07T15:29:42Z", "commit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyOTo0MlrOHd5I6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyOTo0MlrOHd5I6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjkyMw==", "bodyText": "Do similar happen for reactor http code paths also?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501106923", "createdAt": "2020-10-07T15:29:42Z", "author": {"login": "kirankumarkolli"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDU2MjU1", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#pullrequestreview-504056255", "createdAt": "2020-10-07T16:23:20Z", "commit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzoyMFrOHd7flg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzoyNFrOHd7fvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTQ5NA==", "bodyText": "you don't need \"{}\" for exception and also exception.toString not needed here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    exception.toString());\n          \n          \n            \n            logger.debug(\"SslException when attempting to close the outbound SSL connection\", exception);", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501145494", "createdAt": "2020-10-07T16:23:20Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTUzMg==", "bodyText": "ditto.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16032#discussion_r501145532", "createdAt": "2020-10-07T16:23:24Z", "author": {"login": "moderakh"}, "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/directconnectivity/rntbd/RntbdRequestManager.java", "diffHunk": "@@ -391,10 +392,30 @@ public void close(final ChannelHandlerContext context, final ChannelPromise prom\n         final SslHandler sslHandler = context.pipeline().get(SslHandler.class);\n \n         if (sslHandler != null) {\n-            // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n-            // This ensures that all SSL engine and ByteBuf resources are released\n-            // This is something that does not occur in the call to ChannelPipeline.close that follows\n-            sslHandler.closeOutbound();\n+\n+            try {\n+                // Netty 4.1.36.Final: SslHandler.closeOutbound must be called before closing the pipeline\n+                // This ensures that all SSL engine and ByteBuf resources are released\n+                // This is something that does not occur in the call to ChannelPipeline.close that follows\n+                sslHandler.closeOutbound();\n+            } catch (Exception exception) {\n+\n+                // Netty will throw the following exception here if the outbound SSL connection has been closed already\n+                // javax.net.ssl.SSLException: SSLEngine closed already\n+                // Reducing the noise level here because multiple concurrent closes can happen due to race conditions\n+                // and there is no harm in this case\n+                if (exception instanceof SSLException) {\n+                    logger.debug(\n+                        \"SslException when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());\n+                } else {\n+                    logger.warn(\n+                        \"Exception when attempting to close the outbound SSL connection: {}\",\n+                        exception.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "607876341015bd80e85d1cd388de743a0f48a774"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e60545f9e505c1fb339066582ce606170588bed", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e60545f9e505c1fb339066582ce606170588bed", "committedDate": "2020-10-07T20:42:48Z", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into users/fabianm/RntbRequestManagerCloseExceptionHandling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e356abd4a7d197fcef6a93c2757a282f4fd69f67", "author": {"user": {"login": "FabianMeiswinkel", "name": "Fabian Meiswinkel"}}, "url": "https://github.com/Azure/azure-sdk-for-java/commit/e356abd4a7d197fcef6a93c2757a282f4fd69f67", "committedDate": "2020-10-07T20:44:40Z", "message": "Fxing logging of exceptions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2169, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}