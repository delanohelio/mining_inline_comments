{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODY1NTU0", "number": 15183, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0Nzo0OVrOEjTriA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0Nzo0OVrOEjTriA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDU4MDU2OnYy", "diffSide": "RIGHT", "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchAsyncClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0Nzo0OVrOHRmAXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTowODoxM1rOHRs0Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxMDUyNw==", "bodyText": "Do you think we could reorder the params like\nIndexingHook indexingHook, Boolean autoFlush, Duration flushWindow, Integer batchSize, Duration flushWindow, Integer batchSize)", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15183#discussion_r488210527", "createdAt": "2020-09-14T20:47:49Z", "author": {"login": "samvaity"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchAsyncClient.java", "diffHunk": "@@ -187,12 +187,12 @@ public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient() {\n      * @param batchSize The number of documents in a batch that will trigger it to be indexed. If automatic batch\n      * sending is disabled this value is ignored. If {@code batchSize} is null a default value of 1000 is used.\n      * @param indexingHook An implementation of {@link IndexingHook} used to handle document callback actions.\n-     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with\n-     * this {@link SearchAsyncClient}.\n+     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with this {@link\n+     * SearchAsyncClient}.\n      * @throws IllegalArgumentException If {@code batchSize} is less than one.\n      */\n-    public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient(Boolean autoFlush,\n-        Duration flushWindow, Integer batchSize, IndexingHook indexingHook) {\n+    public SearchBatchAsyncClient getSearchBatchAsyncClient(Boolean autoFlush, Duration flushWindow, Integer batchSize,\n+        IndexingHook indexingHook) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d9f2ed8c22c354d59c1cfc9cd39419907c04b0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxMTA4Nw==", "bodyText": "* @throws IllegalArgumentException If {@code batchSize} is less than one.\n\n\nKeeping this in mind can batchSize be int instead?", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15183#discussion_r488211087", "createdAt": "2020-09-14T20:49:03Z", "author": {"login": "samvaity"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchAsyncClient.java", "diffHunk": "@@ -187,12 +187,12 @@ public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient() {\n      * @param batchSize The number of documents in a batch that will trigger it to be indexed. If automatic batch\n      * sending is disabled this value is ignored. If {@code batchSize} is null a default value of 1000 is used.\n      * @param indexingHook An implementation of {@link IndexingHook} used to handle document callback actions.\n-     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with\n-     * this {@link SearchAsyncClient}.\n+     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with this {@link\n+     * SearchAsyncClient}.\n      * @throws IllegalArgumentException If {@code batchSize} is less than one.\n      */\n-    public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient(Boolean autoFlush,\n-        Duration flushWindow, Integer batchSize, IndexingHook indexingHook) {\n+    public SearchBatchAsyncClient getSearchBatchAsyncClient(Boolean autoFlush, Duration flushWindow, Integer batchSize,\n+        IndexingHook indexingHook) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxMDUyNw=="}, "originalCommit": {"oid": "33d9f2ed8c22c354d59c1cfc9cd39419907c04b0"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyMjE0Mg==", "bodyText": "Ordering of parameters is based on what will most likely be configured. Integer is used as there is a default value.", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15183#discussion_r488322142", "createdAt": "2020-09-15T01:08:13Z", "author": {"login": "alzimmermsft"}, "path": "sdk/search/azure-search-documents/src/main/java/com/azure/search/documents/SearchAsyncClient.java", "diffHunk": "@@ -187,12 +187,12 @@ public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient() {\n      * @param batchSize The number of documents in a batch that will trigger it to be indexed. If automatic batch\n      * sending is disabled this value is ignored. If {@code batchSize} is null a default value of 1000 is used.\n      * @param indexingHook An implementation of {@link IndexingHook} used to handle document callback actions.\n-     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with\n-     * this {@link SearchAsyncClient}.\n+     * @return A {@link SearchBatchAsyncClient} used to index documents for the Search index associated with this {@link\n+     * SearchAsyncClient}.\n      * @throws IllegalArgumentException If {@code batchSize} is less than one.\n      */\n-    public SearchBatchAsyncClient getSearchIndexDocumentBatchingAsyncClient(Boolean autoFlush,\n-        Duration flushWindow, Integer batchSize, IndexingHook indexingHook) {\n+    public SearchBatchAsyncClient getSearchBatchAsyncClient(Boolean autoFlush, Duration flushWindow, Integer batchSize,\n+        IndexingHook indexingHook) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxMDUyNw=="}, "originalCommit": {"oid": "33d9f2ed8c22c354d59c1cfc9cd39419907c04b0"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1129, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}