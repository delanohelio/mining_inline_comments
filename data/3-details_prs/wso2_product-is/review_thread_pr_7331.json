{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjEzODEy", "number": 7331, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDowNDo1OVrODZb2ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMTowOToxN1rODZdFaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTk3MzQ3OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDowNDo1OVrOFf0Ziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDozNDozNlrOFf1TTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw==", "bodyText": "Shall we change the class name to AccountLockWhileCaseInsensitiveUserFalseTestCase", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368908683", "createdAt": "2020-01-21T10:04:59Z", "author": {"login": "DMHP"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b6649a9228f9b0696106de42ee4cda16e384120"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkyMzQ3MA==", "bodyText": "Updated", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368923470", "createdAt": "2020-01-21T10:34:36Z", "author": {"login": "ShanChathusanda93"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw=="}, "originalCommit": {"oid": "7b6649a9228f9b0696106de42ee4cda16e384120"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTk4MDQ0OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDowNzoxN1rOFf0d3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDozNDo0NlrOFf1ToA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwOTc4OQ==", "bodyText": "shall we re-use the method getDeploymentTomlFile() defined in ISIntegrationTest base class to fetch the file.", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368909789", "createdAt": "2020-01-21T10:07:17Z", "author": {"login": "DMHP"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b6649a9228f9b0696106de42ee4cda16e384120"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkyMzU1Mg==", "bodyText": "Updated", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368923552", "createdAt": "2020-01-21T10:34:46Z", "author": {"login": "ShanChathusanda93"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwOTc4OQ=="}, "originalCommit": {"oid": "7b6649a9228f9b0696106de42ee4cda16e384120"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDE1MzAyOnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMTowMTo0NlrOFf2GZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjowMTowNVrOFf3meQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzNjU1MA==", "bodyText": "Shall we put a comment like \"Initiating after the restart.\"", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368936550", "createdAt": "2020-01-21T11:01:46Z", "author": {"login": "DMHP"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTE0NQ==", "bodyText": "Updated.", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961145", "createdAt": "2020-01-21T12:01:05Z", "author": {"login": "ShanChathusanda93"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzNjU1MA=="}, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDE2MzAwOnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMTowNToxOVrOFf2M1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjowMToxN1rOFf3myg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzODE5OQ==", "bodyText": "Shall we extract [1] to a private method.\n[1] https://github.com/wso2/product-is/pull/7331/files#diff-5a568678ef146a2ce34d484b6f8b09fdR106-R110", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368938199", "createdAt": "2020-01-21T11:05:19Z", "author": {"login": "DMHP"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTIyNg==", "bodyText": "Updated.", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961226", "createdAt": "2020-01-21T12:01:17Z", "author": {"login": "ShanChathusanda93"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzODE5OQ=="}, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDE3NTEyOnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMTowOToxN1rOFf2UGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjowMToyN1rOFf3m_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MDA1OA==", "bodyText": "Shall we catch only the specific exception types.", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368940058", "createdAt": "2020-01-21T11:09:17Z", "author": {"login": "DMHP"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];\n+        ClaimValue lockedClaim = new ClaimValue();\n+        lockedClaim.setClaimURI(ACCOUNT_LOCK_CLAIM_URI);\n+        lockedClaim.setValue(Boolean.TRUE.toString());\n+        claimValues[0] = lockedClaim;\n+\n+        try {\n+            usmServiceClient.addUser(userName, password, roles, claimValues, null, false);\n+            log.info(\"Locked user account created.\");\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTI3OQ==", "bodyText": "Updated.", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961279", "createdAt": "2020-01-21T12:01:27Z", "author": {"login": "ShanChathusanda93"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];\n+        ClaimValue lockedClaim = new ClaimValue();\n+        lockedClaim.setClaimURI(ACCOUNT_LOCK_CLAIM_URI);\n+        lockedClaim.setValue(Boolean.TRUE.toString());\n+        claimValues[0] = lockedClaim;\n+\n+        try {\n+            usmServiceClient.addUser(userName, password, roles, claimValues, null, false);\n+            log.info(\"Locked user account created.\");\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MDA1OA=="}, "originalCommit": {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1436, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}