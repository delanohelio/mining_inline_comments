{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Mjk1NzM3", "number": 9926, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo1NToxNFrOE0rVJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo1NToxNFrOE0rVJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjcxMzM0OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/application/authz/ApplicationAuthzTestCase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo1NToxNFrOHsh8gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODowMToxNlrOHsjYqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1NTU1Mg==", "bodyText": "do we need to declare these variables? cant we pass like\nhttpClientAzUser = HttpClientBuilder.create().setDefaultCookieStore(new BasicCookieStore()).build();", "url": "https://github.com/wso2/product-is/pull/9926#discussion_r516455552", "createdAt": "2020-11-03T06:55:14Z", "author": {"login": "thanujalk"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/application/authz/ApplicationAuthzTestCase.java", "diffHunk": "@@ -83,6 +86,9 @@\n                     \"    <Rule Effect=\\\"Deny\\\" RuleId=\\\"denyall\\\"/>\\n\" +\n                     \"</Policy>\";\n \n+    CookieStore cookieStore = new BasicCookieStore();\n+    CookieStore cookieStoreUnAuthorized = new BasicCookieStore();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf4ce63f3713de4c41ebeb3f2c9e98bd0424215b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1NjIxOQ==", "bodyText": "in other places as well..", "url": "https://github.com/wso2/product-is/pull/9926#discussion_r516456219", "createdAt": "2020-11-03T06:57:27Z", "author": {"login": "thanujalk"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/application/authz/ApplicationAuthzTestCase.java", "diffHunk": "@@ -83,6 +86,9 @@\n                     \"    <Rule Effect=\\\"Deny\\\" RuleId=\\\"denyall\\\"/>\\n\" +\n                     \"</Policy>\";\n \n+    CookieStore cookieStore = new BasicCookieStore();\n+    CookieStore cookieStoreUnAuthorized = new BasicCookieStore();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1NTU1Mg=="}, "originalCommit": {"oid": "bf4ce63f3713de4c41ebeb3f2c9e98bd0424215b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3OTE0Nw==", "bodyText": "In some places, we can reuse the cookie store by clearing it like:  cookieStore.clear(), I will fix the other places.", "url": "https://github.com/wso2/product-is/pull/9926#discussion_r516479147", "createdAt": "2020-11-03T08:01:16Z", "author": {"login": "inthirakumaaran"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/application/authz/ApplicationAuthzTestCase.java", "diffHunk": "@@ -83,6 +86,9 @@\n                     \"    <Rule Effect=\\\"Deny\\\" RuleId=\\\"denyall\\\"/>\\n\" +\n                     \"</Policy>\";\n \n+    CookieStore cookieStore = new BasicCookieStore();\n+    CookieStore cookieStoreUnAuthorized = new BasicCookieStore();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1NTU1Mg=="}, "originalCommit": {"oid": "bf4ce63f3713de4c41ebeb3f2c9e98bd0424215b"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1394, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}