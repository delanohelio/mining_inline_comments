{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTY3ODg5", "number": 8590, "title": " Add integration tests for samlsso legacy URL mode", "bodyText": "Description\nThis PR will add integration tests for oauth2 endpoints for legacy URL mode.\n\nAdd tests for the samlartresolve endpoint for both tenant and super tenant legacy URL mode.\nAdd tests for samlsso, IDP initiated samlsso and saml invalid issuer for tenant legacy URL mode.\n\nRelated issue: #8524", "createdAt": "2020-06-29T03:01:00Z", "url": "https://github.com/wso2/product-is/pull/8590", "merged": true, "mergeCommit": {"oid": "90711c719e510b4962d4163fff5717a01f180097"}, "closed": true, "closedAt": "2020-07-02T04:41:38Z", "author": {"login": "GANGANI"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv4JcHgFqTQzODg1OTk1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJbtpdgFqTQ4OTU4MDQwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODU5OTUy", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-438859952", "createdAt": "2020-06-29T03:05:31Z", "commit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTozMVrOGqDUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTozMVrOGqDUnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NzgwNw==", "bodyText": "Update the license.", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446747807", "createdAt": "2020-06-29T03:05:31Z", "author": {"login": "ashensw"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODYwMDI0", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-438860024", "createdAt": "2020-06-29T03:05:53Z", "commit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTo1M1rOGqDU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTo1M1rOGqDU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Nzg3OA==", "bodyText": "Fix formatting.", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446747878", "createdAt": "2020-06-29T03:05:53Z", "author": {"login": "ashensw"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLAartResolve(SAMLConfig config, String appName) throws Exception {\n+\n+        samlArtResolve =true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODkyMTgz", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-438892183", "createdAt": "2020-06-29T05:19:50Z", "commit": {"oid": "db6519d17a39bc68aa08982b911eb1fe830fe1a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4b4e8afd0c2b0743adcad220ec3a339a937f459", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/e4b4e8afd0c2b0743adcad220ec3a339a937f459", "committedDate": "2020-07-01T11:17:45Z", "message": "Add integration tests for samlsso legacy URL mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f8fe4d0751577ad325f4b5ed26c82271795c366", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/3f8fe4d0751577ad325f4b5ed26c82271795c366", "committedDate": "2020-07-01T11:17:45Z", "message": "Add travelocity.properties file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ffcb4ef91e29a99b5c59e760712b638934ab11", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/18ffcb4ef91e29a99b5c59e760712b638934ab11", "committedDate": "2020-07-01T11:17:45Z", "message": "Format the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/0838822983fcf8db36a9618538d7dddd6af892d6", "committedDate": "2020-07-02T00:59:25Z", "message": "Change test case execution order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db6519d17a39bc68aa08982b911eb1fe830fe1a9", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/db6519d17a39bc68aa08982b911eb1fe830fe1a9", "committedDate": "2020-06-29T03:54:25Z", "message": "Format the code"}, "afterCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6", "author": {"user": {"login": "GANGANI", "name": "Gangani Chamika"}}, "url": "https://github.com/wso2/product-is/commit/0838822983fcf8db36a9618538d7dddd6af892d6", "committedDate": "2020-07-02T00:59:25Z", "message": "Change test case execution order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMzI5OTkz", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-441329993", "createdAt": "2020-07-02T03:45:01Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTE5OTk4", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489519998", "createdAt": "2020-09-16T11:14:41Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNDo0MlrOHSr_WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNDo0MlrOHSr_WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzE0NQ==", "bodyText": "Missing description", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489357145", "createdAt": "2020-09-16T11:14:42Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -403,6 +420,16 @@ public SAMLSSOServiceProviderDTO createSsoSPDTOForIdPInit(SAMLConfig config){\n         return idpInitSpDTO;\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTIwNzEx", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489520711", "createdAt": "2020-09-16T11:15:46Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNTo0NlrOHSsBkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNTo0NlrOHSsBkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzcxNA==", "bodyText": "Shall we add a class level comment", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489357714", "createdAt": "2020-09-16T11:15:46Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTI1MjM2", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489525236", "createdAt": "2020-09-16T11:22:52Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMjo1M1rOHSsPdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMjo1M1rOHSsPdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTI2OA==", "bodyText": "missing Javadoc", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489361268", "createdAt": "2020-09-16T11:22:53Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLArtResolve(SAMLConfig config, String appName) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTI1NzMw", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489525730", "createdAt": "2020-09-16T11:23:38Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMzozOVrOHSsQ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMzozOVrOHSsQ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTYxOQ==", "bodyText": "Class level comment", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489361619", "createdAt": "2020-09-16T11:23:39Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -24,39 +24,33 @@\n import org.apache.commons.logging.LogFactory;\n import org.apache.http.Header;\n import org.apache.http.HttpResponse;\n-import org.apache.http.NameValuePair;\n import org.apache.http.ProtocolException;\n-import org.apache.http.client.entity.UrlEncodedFormEntity;\n-import org.apache.http.client.methods.HttpGet;\n-import org.apache.http.client.methods.HttpPost;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.impl.client.DefaultRedirectHandler;\n-import org.apache.http.message.BasicNameValuePair;\n import org.apache.http.protocol.HttpContext;\n import org.apache.http.util.EntityUtils;\n import org.testng.Assert;\n import org.testng.annotations.AfterClass;\n import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.Property;\n import org.wso2.carbon.identity.application.common.model.xsd.ServiceProvider;\n-import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n import org.wso2.identity.integration.common.clients.application.mgt.ApplicationManagementServiceClient;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n-import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n \n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n \n-public class SAMLInvalidIssuerTestCase extends ISIntegrationTest {\n+public class SAMLInvalidIssuerTestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTc2ODA0", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489576804", "createdAt": "2020-09-16T12:35:11Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozNToxMVrOHSuroQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozNToxMVrOHSuroQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMTI0OQ==", "bodyText": "shall we change it to a debug log instead of using an info log? otherwise having if (log.isDebugEnabled()) { is redundant", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489401249", "createdAt": "2020-09-16T12:35:11Z", "author": {"login": "dewniMW"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {\n+\n+    private static final Log log = LogFactory.getLog(SAMLSSOTestCase.class);\n+\n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLARTRESOLVETestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()) {\n+            log.info(\"SAML Artifact Binding Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTgwNDA4", "url": "https://github.com/wso2/product-is/pull/8590#pullrequestreview-489580408", "createdAt": "2020-09-16T12:39:51Z", "commit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozOTo1MVrOHSu2Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozOTo1MVrOHSu2Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMzkyNw==", "bodyText": "change to log.debug", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489403927", "createdAt": "2020-09-16T12:39:51Z", "author": {"login": "dewniMW"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -67,34 +61,33 @@\n     private static final String ATTRIBUTE_CS_INDEX_VALUE = \"1239245949\";\n     private static final String ATTRIBUTE_CS_INDEX_NAME = \"attrConsumServiceIndex\";\n \n-    // User Attributes\n-    private static final String USERNAME = \"testUser\";\n-    private static final String PASSWORD = \"testUser\";\n-    private static final String EMAIL = \"testUser@wso2.com\";\n-    private static final String NICKNAME = \"testUserNick\";\n-\n     private static final String ACS_URL = \"http://localhost:8490/travelocity.com/home.jsp\";\n     private static final String COMMON_AUTH_URL = \"https://localhost:9853/commonauth\";\n     private static final String SAML_SSO_LOGIN_URL =\n             \"http://localhost:8490/travelocity.com/samlsso?SAML2.HTTPBinding=HTTP-Redirect\";\n     private static final String SAML_ERROR_NOTIFICATION_PATH = \"/authenticationendpoint/samlsso_notification.do\";\n \n-    //Claim Uris\n-    private static final String firstNameClaimURI = \"http://wso2.org/claims/givenname\";\n-    private static final String lastNameClaimURI = \"http://wso2.org/claims/lastname\";\n-    private static final String emailClaimURI = \"http://wso2.org/claims/emailaddress\";\n-\n-    private static final String profileName = \"default\";\n-\n     private ApplicationManagementServiceClient applicationManagementServiceClient;\n     private RemoteUserStoreManagerServiceClient remoteUSMServiceClient;\n     private DefaultHttpClient httpClient;\n \n     private boolean isSAMLReturned;\n \n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLInvalidIssuerTestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()){\n+            log.info(\"SAML SSO Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1292, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}