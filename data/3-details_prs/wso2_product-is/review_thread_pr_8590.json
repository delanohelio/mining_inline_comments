{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTY3ODg5", "number": 8590, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTozMVrOEJhLgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozOTo1MVrOEkCQvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDE2MjU3OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTozMVrOGqDUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo1NTo0MlrOGqD9JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NzgwNw==", "bodyText": "Update the license.", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446747807", "createdAt": "2020-06-29T03:05:31Z", "author": {"login": "ashensw"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1ODE4MQ==", "bodyText": "Fixed db6519d", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446758181", "createdAt": "2020-06-29T03:55:42Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NzgwNw=="}, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDE2MzA5OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzowNTo1M1rOGqDU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo1NTozNFrOGqD9Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Nzg3OA==", "bodyText": "Fix formatting.", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446747878", "createdAt": "2020-06-29T03:05:53Z", "author": {"login": "ashensw"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLAartResolve(SAMLConfig config, String appName) throws Exception {\n+\n+        samlArtResolve =true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1ODE0Nw==", "bodyText": "Fixed db6519d", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r446758147", "createdAt": "2020-06-29T03:55:34Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLAartResolve(SAMLConfig config, String appName) throws Exception {\n+\n+        samlArtResolve =true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Nzg3OA=="}, "originalCommit": {"oid": "9fbbbb41cd2acfc9977e604de26f9195d5e12029"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTkxMjI1OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNDo0MlrOHSr_WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OTo1NlrOHS3YwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzE0NQ==", "bodyText": "Missing description", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489357145", "createdAt": "2020-09-16T11:14:42Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -403,6 +420,16 @@ public SAMLSSOServiceProviderDTO createSsoSPDTOForIdPInit(SAMLConfig config){\n         return idpInitSpDTO;\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0Mzg3Mw==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543873", "createdAt": "2020-09-16T15:49:56Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -403,6 +420,16 @@ public SAMLSSOServiceProviderDTO createSsoSPDTOForIdPInit(SAMLConfig config){\n         return idpInitSpDTO;\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzE0NQ=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTkxNTk4OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToxNTo0NlrOHSsBkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OTo0NFrOHS3YJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzcxNA==", "bodyText": "Shall we add a class level comment", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489357714", "createdAt": "2020-09-16T11:15:46Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MzcxOQ==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543719", "createdAt": "2020-09-16T15:49:44Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1NzcxNA=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTkzOTA4OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMjo1M1rOHSsPdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OTozNVrOHS3XxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTI2OA==", "bodyText": "missing Javadoc", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489361268", "createdAt": "2020-09-16T11:22:53Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLArtResolve(SAMLConfig config, String appName) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MzYyMQ==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543621", "createdAt": "2020-09-16T15:49:35Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/AbstractSAMLSSOTestCase.java", "diffHunk": "@@ -280,6 +284,12 @@ public void createUser(SAMLConfig config) {\n         }\n     }\n \n+    public void createApplicationForSAMLArtResolve(SAMLConfig config, String appName) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTI2OA=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTk0MTA5OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMToyMzozOVrOHSsQ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OToyNlrOHS3XZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTYxOQ==", "bodyText": "Class level comment", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489361619", "createdAt": "2020-09-16T11:23:39Z", "author": {"login": "Abilashini"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -24,39 +24,33 @@\n import org.apache.commons.logging.LogFactory;\n import org.apache.http.Header;\n import org.apache.http.HttpResponse;\n-import org.apache.http.NameValuePair;\n import org.apache.http.ProtocolException;\n-import org.apache.http.client.entity.UrlEncodedFormEntity;\n-import org.apache.http.client.methods.HttpGet;\n-import org.apache.http.client.methods.HttpPost;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.impl.client.DefaultRedirectHandler;\n-import org.apache.http.message.BasicNameValuePair;\n import org.apache.http.protocol.HttpContext;\n import org.apache.http.util.EntityUtils;\n import org.testng.Assert;\n import org.testng.annotations.AfterClass;\n import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.Property;\n import org.wso2.carbon.identity.application.common.model.xsd.ServiceProvider;\n-import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n import org.wso2.identity.integration.common.clients.application.mgt.ApplicationManagementServiceClient;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n-import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n \n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n \n-public class SAMLInvalidIssuerTestCase extends ISIntegrationTest {\n+public class SAMLInvalidIssuerTestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MzUyNA==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543524", "createdAt": "2020-09-16T15:49:26Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -24,39 +24,33 @@\n import org.apache.commons.logging.LogFactory;\n import org.apache.http.Header;\n import org.apache.http.HttpResponse;\n-import org.apache.http.NameValuePair;\n import org.apache.http.ProtocolException;\n-import org.apache.http.client.entity.UrlEncodedFormEntity;\n-import org.apache.http.client.methods.HttpGet;\n-import org.apache.http.client.methods.HttpPost;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.impl.client.DefaultRedirectHandler;\n-import org.apache.http.message.BasicNameValuePair;\n import org.apache.http.protocol.HttpContext;\n import org.apache.http.util.EntityUtils;\n import org.testng.Assert;\n import org.testng.annotations.AfterClass;\n import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig;\n import org.wso2.carbon.identity.application.common.model.xsd.Property;\n import org.wso2.carbon.identity.application.common.model.xsd.ServiceProvider;\n-import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n import org.wso2.identity.integration.common.clients.application.mgt.ApplicationManagementServiceClient;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n-import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n \n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.List;\n \n-public class SAMLInvalidIssuerTestCase extends ISIntegrationTest {\n+public class SAMLInvalidIssuerTestCase extends AbstractSAMLSSOTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2MTYxOQ=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjE5NTU5OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozNToxMVrOHSuroQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OToxOFrOHS3XDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMTI0OQ==", "bodyText": "shall we change it to a debug log instead of using an info log? otherwise having if (log.isDebugEnabled()) { is redundant", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489401249", "createdAt": "2020-09-16T12:35:11Z", "author": {"login": "dewniMW"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {\n+\n+    private static final Log log = LogFactory.getLog(SAMLSSOTestCase.class);\n+\n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLARTRESOLVETestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()) {\n+            log.info(\"SAML Artifact Binding Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MzQzNg==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543436", "createdAt": "2020-09-16T15:49:18Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLARTRESOLVETestCase.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.identity.integration.test.saml;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Factory;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.sso.saml.stub.types.SAMLSSOServiceProviderDTO;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.CommonConstants;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+\n+public class SAMLARTRESOLVETestCase extends AbstractSAMLSSOTestCase {\n+\n+    private static final Log log = LogFactory.getLog(SAMLSSOTestCase.class);\n+\n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLARTRESOLVETestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()) {\n+            log.info(\"SAML Artifact Binding Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMTI0OQ=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjIxMjQ2OnYy", "diffSide": "RIGHT", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjozOTo1MVrOHSu2Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0OToxMFrOHS3Wqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMzkyNw==", "bodyText": "change to log.debug", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489403927", "createdAt": "2020-09-16T12:39:51Z", "author": {"login": "dewniMW"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -67,34 +61,33 @@\n     private static final String ATTRIBUTE_CS_INDEX_VALUE = \"1239245949\";\n     private static final String ATTRIBUTE_CS_INDEX_NAME = \"attrConsumServiceIndex\";\n \n-    // User Attributes\n-    private static final String USERNAME = \"testUser\";\n-    private static final String PASSWORD = \"testUser\";\n-    private static final String EMAIL = \"testUser@wso2.com\";\n-    private static final String NICKNAME = \"testUserNick\";\n-\n     private static final String ACS_URL = \"http://localhost:8490/travelocity.com/home.jsp\";\n     private static final String COMMON_AUTH_URL = \"https://localhost:9853/commonauth\";\n     private static final String SAML_SSO_LOGIN_URL =\n             \"http://localhost:8490/travelocity.com/samlsso?SAML2.HTTPBinding=HTTP-Redirect\";\n     private static final String SAML_ERROR_NOTIFICATION_PATH = \"/authenticationendpoint/samlsso_notification.do\";\n \n-    //Claim Uris\n-    private static final String firstNameClaimURI = \"http://wso2.org/claims/givenname\";\n-    private static final String lastNameClaimURI = \"http://wso2.org/claims/lastname\";\n-    private static final String emailClaimURI = \"http://wso2.org/claims/emailaddress\";\n-\n-    private static final String profileName = \"default\";\n-\n     private ApplicationManagementServiceClient applicationManagementServiceClient;\n     private RemoteUserStoreManagerServiceClient remoteUSMServiceClient;\n     private DefaultHttpClient httpClient;\n \n     private boolean isSAMLReturned;\n \n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLInvalidIssuerTestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()){\n+            log.info(\"SAML SSO Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwNDM2Mg==", "bodyText": "shouldn't it be config.toString() ?", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489404362", "createdAt": "2020-09-16T12:40:27Z", "author": {"login": "dewniMW"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -67,34 +61,33 @@\n     private static final String ATTRIBUTE_CS_INDEX_VALUE = \"1239245949\";\n     private static final String ATTRIBUTE_CS_INDEX_NAME = \"attrConsumServiceIndex\";\n \n-    // User Attributes\n-    private static final String USERNAME = \"testUser\";\n-    private static final String PASSWORD = \"testUser\";\n-    private static final String EMAIL = \"testUser@wso2.com\";\n-    private static final String NICKNAME = \"testUserNick\";\n-\n     private static final String ACS_URL = \"http://localhost:8490/travelocity.com/home.jsp\";\n     private static final String COMMON_AUTH_URL = \"https://localhost:9853/commonauth\";\n     private static final String SAML_SSO_LOGIN_URL =\n             \"http://localhost:8490/travelocity.com/samlsso?SAML2.HTTPBinding=HTTP-Redirect\";\n     private static final String SAML_ERROR_NOTIFICATION_PATH = \"/authenticationendpoint/samlsso_notification.do\";\n \n-    //Claim Uris\n-    private static final String firstNameClaimURI = \"http://wso2.org/claims/givenname\";\n-    private static final String lastNameClaimURI = \"http://wso2.org/claims/lastname\";\n-    private static final String emailClaimURI = \"http://wso2.org/claims/emailaddress\";\n-\n-    private static final String profileName = \"default\";\n-\n     private ApplicationManagementServiceClient applicationManagementServiceClient;\n     private RemoteUserStoreManagerServiceClient remoteUSMServiceClient;\n     private DefaultHttpClient httpClient;\n \n     private boolean isSAMLReturned;\n \n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLInvalidIssuerTestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()){\n+            log.info(\"SAML SSO Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMzkyNw=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0MzMzOQ==", "bodyText": "Fixed 70d73b5", "url": "https://github.com/wso2/product-is/pull/8590#discussion_r489543339", "createdAt": "2020-09-16T15:49:10Z", "author": {"login": "GANGANI"}, "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/saml/SAMLInvalidIssuerTestCase.java", "diffHunk": "@@ -67,34 +61,33 @@\n     private static final String ATTRIBUTE_CS_INDEX_VALUE = \"1239245949\";\n     private static final String ATTRIBUTE_CS_INDEX_NAME = \"attrConsumServiceIndex\";\n \n-    // User Attributes\n-    private static final String USERNAME = \"testUser\";\n-    private static final String PASSWORD = \"testUser\";\n-    private static final String EMAIL = \"testUser@wso2.com\";\n-    private static final String NICKNAME = \"testUserNick\";\n-\n     private static final String ACS_URL = \"http://localhost:8490/travelocity.com/home.jsp\";\n     private static final String COMMON_AUTH_URL = \"https://localhost:9853/commonauth\";\n     private static final String SAML_SSO_LOGIN_URL =\n             \"http://localhost:8490/travelocity.com/samlsso?SAML2.HTTPBinding=HTTP-Redirect\";\n     private static final String SAML_ERROR_NOTIFICATION_PATH = \"/authenticationendpoint/samlsso_notification.do\";\n \n-    //Claim Uris\n-    private static final String firstNameClaimURI = \"http://wso2.org/claims/givenname\";\n-    private static final String lastNameClaimURI = \"http://wso2.org/claims/lastname\";\n-    private static final String emailClaimURI = \"http://wso2.org/claims/emailaddress\";\n-\n-    private static final String profileName = \"default\";\n-\n     private ApplicationManagementServiceClient applicationManagementServiceClient;\n     private RemoteUserStoreManagerServiceClient remoteUSMServiceClient;\n     private DefaultHttpClient httpClient;\n \n     private boolean isSAMLReturned;\n \n+    private SAMLConfig config;\n+\n+    @Factory(dataProvider = \"samlConfigProvider\")\n+    public SAMLInvalidIssuerTestCase(SAMLConfig config) {\n+\n+        if (log.isDebugEnabled()){\n+            log.info(\"SAML SSO Test initialized for \" + config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwMzkyNw=="}, "originalCommit": {"oid": "0838822983fcf8db36a9618538d7dddd6af892d6"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1421, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}