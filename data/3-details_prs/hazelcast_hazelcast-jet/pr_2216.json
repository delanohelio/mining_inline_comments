{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzYxODQ5", "number": 2216, "title": "Add test for mapUsingService stage with gRPC", "bodyText": "Add test for using mapUsingService for gRPC\nChecklist\n\n Tags Set\n Milestone Set\n[N/A] Any breaking changes are documented\n[N/A] New public APIs have @Nonnull/@Nullable annotations\n[N/A] New public APIs have @since tags in Javadoc\n[N/A] For code samples, code sample main readme is updated", "createdAt": "2020-04-24T06:43:14Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2216", "merged": true, "mergeCommit": {"oid": "c005f418d8af7df0de3c1ca1a01da69b662527ea"}, "closed": true, "closedAt": "2020-04-24T07:52:14Z", "author": {"login": "olukas"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcarrmLgH2gAyNDA4MzYxODQ5OjgyNjRlMjJjNjI1ZWIzZWI2ZjY4NTA3ZjY1OGMyZjBkZDJkNzliYTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcasWy1AFqTM5OTcwMzE1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8264e22c625eb3eb6f68507f658c2f0dd2d79ba1", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8264e22c625eb3eb6f68507f658c2f0dd2d79ba1", "committedDate": "2020-04-24T06:41:39Z", "message": "Add test for mapUsingService stage with gRPC"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Njk1MDIy", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2216#pullrequestreview-399695022", "createdAt": "2020-04-24T07:15:22Z", "commit": {"oid": "8264e22c625eb3eb6f68507f658c2f0dd2d79ba1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxNToyMlrOGLJ4mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxNToyMlrOGLJ4mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0OTQ2NA==", "bodyText": "Do we need the catch blocks here?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2216#discussion_r414349464", "createdAt": "2020-04-24T07:15:22Z", "author": {"login": "frant-hartm"}, "path": "extensions/grpc/src/test/java/com/hazelcast/jet/grpc/GrpcServiceTest.java", "diffHunk": "@@ -118,6 +118,34 @@ public void when_bidirectionalStreaming_distributed() throws IOException {\n         instance().newJob(p).join();\n     }\n \n+    @Test\n+    public void whenNotAsync_bidirectionalStreaming_distributed() throws IOException {\n+        // Given\n+        server = createServer(new GreeterServiceImpl());\n+        final int port = server.getPort();\n+\n+        List<String> items = IntStream.range(0, ITEM_COUNT).mapToObj(Integer::toString).collect(toList());\n+\n+        Pipeline p = Pipeline.create();\n+        BatchStageWithKey<String, String> stage = p.readFrom(TestSources.items(items))\n+                .groupingKey(i -> i);\n+        // When\n+        BatchStage<String> mapped = stage.mapUsingService(bidirectionalStreaming(port), (service, key, item) -> {\n+            HelloRequest req = HelloRequest.newBuilder().setName(item).build();\n+            try {\n+                return service.call(req).get().getMessage();\n+            } catch (Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8264e22c625eb3eb6f68507f658c2f0dd2d79ba1"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1eb37b82a74a360375a563ba091a93d192d9a60", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f1eb37b82a74a360375a563ba091a93d192d9a60", "committedDate": "2020-04-24T07:27:15Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzAzMTU0", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2216#pullrequestreview-399703154", "createdAt": "2020-04-24T07:28:50Z", "commit": {"oid": "f1eb37b82a74a360375a563ba091a93d192d9a60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3752, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}