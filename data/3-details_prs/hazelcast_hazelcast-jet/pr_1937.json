{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTk5MTA3", "number": 1937, "title": "Fix File sink with lp>1 or shared dir", "bodyText": "Fixes #1935\nIn the original state all processors tried to delete all .tmp files in the\ndirectory. However when P1 got to do it, P2 might already started creating\nfiles which caused that P1 deleted working files of P2. On Windows, the delete\nfailed, on Linux the processor failed later when it was trying to commit the\nfile.", "createdAt": "2020-02-06T16:39:40Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937", "merged": true, "mergeCommit": {"oid": "f255dfad5c820ad5b8d2374dfe968aa4d70af5e6"}, "closed": true, "closedAt": "2020-02-07T16:48:25Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBteVWAH2gAyMzcxOTk5MTA3OjJmMmRiYTg2NmYyOGVjNDJkNTQ4Y2Y3NTdhMGFlZGJiOTQ2MjI3ZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCB22mgH2gAyMzcxOTk5MTA3OjFkZGE3ZjI1NDQ3NWRlMGQ0ZDFlOTkwMWY2MjU4MDY2NzhmMjI2MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2f2dba866f28ec42d548cf757a0aedbb946227fe", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2f2dba866f28ec42d548cf757a0aedbb946227fe", "committedDate": "2020-02-06T16:38:52Z", "message": "Fix File sink with lp>1 or shared dir\n\nFixes #1935\n\nIn the original state all processors tried to delete all .tmp files in the\ndirectory. However when P1 got to do it, P2 might already started creating\nfiles which caused that P1 deleted working files of P2. On Windows, the delete\nfailed, on Linux the processor failed later when it was trying to commit the\nfile."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da015b9f43d1a7c0f6f3c92a4d06a569ef2bc155", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/da015b9f43d1a7c0f6f3c92a4d06a569ef2bc155", "committedDate": "2020-02-07T07:41:24Z", "message": "Add @since tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ae5c851ce909358ce228b74a2e2aea211cdc1d", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/48ae5c851ce909358ce228b74a2e2aea211cdc1d", "committedDate": "2020-02-07T07:41:51Z", "message": "Merge branch 'master' into file-sink-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb7083dd61b232966753d8c566ed938cafb0b90", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4bb7083dd61b232966753d8c566ed938cafb0b90", "committedDate": "2020-02-07T08:26:33Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDAxMTU3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#pullrequestreview-355001157", "createdAt": "2020-02-07T08:42:09Z", "commit": {"oid": "4bb7083dd61b232966753d8c566ed938cafb0b90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo0MjowOVrOFm1zJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODo0MjowOVrOFm1zJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3MTY1Mw==", "bodyText": "why don't we always leave the cleanup to the processor, looks like this will simplify the logic ?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376271653", "createdAt": "2020-02-07T08:42:09Z", "author": {"login": "gurbuzali"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteFileP.java", "diffHunk": "@@ -236,6 +248,33 @@ private void abortUnfinishedTransactions() {\n         try (Stream<Path> fileStream = Files.list(directory)) {\n             fileStream\n                     .filter(file -> file.getFileName().toString().endsWith(TEMP_FILE_SUFFIX))\n+                    .filter(file -> {\n+                        assert utility.usesTransactionLifecycle();\n+                        Matcher m = FILE_INDEX_WITH_SEQ.matcher(file.getFileName().toString());\n+                        if (!m.find() || m.groupCount() < 1) {\n+                            context.logger().warning(\"file with unknown name structure found in the directory: \" + file);\n+                            return false;\n+                        }\n+                        int index;\n+                        try {\n+                            index = Integer.parseInt(m.group(1));\n+                        } catch (NumberFormatException e) {\n+                            context.logger().warning(\n+                                    \"file with unknown name structure found in the directory: \" + file, e);\n+                            return false;\n+                        }\n+                        int localIndexLow = context.memberIndex() * context.localParallelism();\n+                        int localIndexHigh = localIndexLow + context.localParallelism();\n+                        boolean isLocalIndex = index >= localIndexLow && index < localIndexHigh;\n+                        if (sharedFileSystem || isLocalIndex) {\n+                            // If the file index belongs to one of the local processors (when directory is not shred)\n+                            // or when the directory is shared, we must leave that processor to do the cleanup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bb7083dd61b232966753d8c566ed938cafb0b90"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9a8fcc2a2dde039ca3ace5e62fc635ebad916c18", "committedDate": "2020-02-07T09:11:44Z", "message": "Fix compilation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDM4OTU1", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#pullrequestreview-355038955", "createdAt": "2020-02-07T09:47:57Z", "commit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo0Nzo1N1rOFm3l1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTo1OToxOFrOFm37Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMTAxNA==", "bodyText": "typo, \"shared\"", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376301014", "createdAt": "2020-02-07T09:47:57Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteFileP.java", "diffHunk": "@@ -236,6 +248,33 @@ private void abortUnfinishedTransactions() {\n         try (Stream<Path> fileStream = Files.list(directory)) {\n             fileStream\n                     .filter(file -> file.getFileName().toString().endsWith(TEMP_FILE_SUFFIX))\n+                    .filter(file -> {\n+                        assert utility.usesTransactionLifecycle();\n+                        Matcher m = FILE_INDEX_WITH_SEQ.matcher(file.getFileName().toString());\n+                        if (!m.find() || m.groupCount() < 1) {\n+                            context.logger().warning(\"file with unknown name structure found in the directory: \" + file);\n+                            return false;\n+                        }\n+                        int index;\n+                        try {\n+                            index = Integer.parseInt(m.group(1));\n+                        } catch (NumberFormatException e) {\n+                            context.logger().warning(\n+                                    \"file with unknown name structure found in the directory: \" + file, e);\n+                            return false;\n+                        }\n+                        int localIndexLow = context.memberIndex() * context.localParallelism();\n+                        int localIndexHigh = localIndexLow + context.localParallelism();\n+                        boolean isLocalIndex = index >= localIndexLow && index < localIndexHigh;\n+                        if (sharedFileSystem || isLocalIndex) {\n+                            // If the file index belongs to one of the local processors (when directory is not shred)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNDM3NQ==", "bodyText": "can you add some comments here explaining what are these?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376304375", "createdAt": "2020-02-07T09:54:53Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteFileP.java", "diffHunk": "@@ -236,6 +248,33 @@ private void abortUnfinishedTransactions() {\n         try (Stream<Path> fileStream = Files.list(directory)) {\n             fileStream\n                     .filter(file -> file.getFileName().toString().endsWith(TEMP_FILE_SUFFIX))\n+                    .filter(file -> {\n+                        assert utility.usesTransactionLifecycle();\n+                        Matcher m = FILE_INDEX_WITH_SEQ.matcher(file.getFileName().toString());\n+                        if (!m.find() || m.groupCount() < 1) {\n+                            context.logger().warning(\"file with unknown name structure found in the directory: \" + file);\n+                            return false;\n+                        }\n+                        int index;\n+                        try {\n+                            index = Integer.parseInt(m.group(1));\n+                        } catch (NumberFormatException e) {\n+                            context.logger().warning(\n+                                    \"file with unknown name structure found in the directory: \" + file, e);\n+                            return false;\n+                        }\n+                        int localIndexLow = context.memberIndex() * context.localParallelism();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNTU3Mg==", "bodyText": "missing nonnull annotation (also check the rest)", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376305572", "createdAt": "2020-02-07T09:57:24Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSinkBuilder.java", "diffHunk": "@@ -86,6 +87,8 @@\n      * The rolling is based on system time, not on event time. By default no\n      * rolling by date is done. If the system clock goes back, the outcome is\n      * unspecified and possibly corrupt.\n+     *\n+     * @since 4.0\n      */\n     public FileSinkBuilder<T> rollByDate(@Nullable String datePattern) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNjEwOA==", "bodyText": "wouldn't it be better to take primitive long? what good does it to do pass null? You could use Long.MAX_VALUE if you don't want rolling by size.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376306108", "createdAt": "2020-02-07T09:58:32Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSinkBuilder.java", "diffHunk": "@@ -96,6 +99,8 @@\n      * Enables rolling by file size. If the size after writing a batch of items\n      * exceeds the limit, a new file will be started. From this follows that\n      * the file will typically be larger than the given maximum.\n+     *\n+     * @since 4.0\n      */\n     public FileSinkBuilder<T> rollByFileSize(@Nullable Long maxFileSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwNjQzNQ==", "bodyText": "can't we always assume it's shared, why require the user to specify it or not? It makes sense for source, but not for sink. Even if it's not shared, you want distinct files you can merge later.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#discussion_r376306435", "createdAt": "2020-02-07T09:59:18Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSinkBuilder.java", "diffHunk": "@@ -120,17 +125,41 @@\n      *      guarantee. If false, sink's guarantee will be at-least-once\n      *      even if job's is exactly-once\n      * @return this instance for fluent API\n+     *\n+     * @since 4.0\n      */\n     public FileSinkBuilder<T> exactlyOnce(boolean enable) {\n         exactlyOnce = enable;\n         return this;\n     }\n \n+    /**\n+     * Sets if files are in a shared storage visible to all members. Default\n+     * value is {@code false}.\n+     * <p>\n+     * If {@code sharedFileSystem} is {@code true}, Jet will assume all members\n+     * see the same files. Otherwise it will assume that only processors on the\n+     * local member them.\n+     * <p>\n+     * If you start all the members on a single machine (such as for\n+     * development), set this property to true. If you have multiple machines\n+     * with multiple members each and the directory is not a shared storage,\n+     * it's not possible to configure the file reader correctly - use only one\n+     * member per machine.\n+     *\n+     * @since 4.0\n+     */\n+    @Nonnull\n+    public FileSinkBuilder<T> sharedFileSystem(boolean sharedFileSystem) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a8fcc2a2dde039ca3ace5e62fc635ebad916c18"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a14db04e48e58736c4ef31dd773809bc5abeb00", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/0a14db04e48e58736c4ef31dd773809bc5abeb00", "committedDate": "2020-02-07T10:41:16Z", "message": "Simplify aborting txns, assume folder is shared"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDkxMjgz", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#pullrequestreview-355091283", "createdAt": "2020-02-07T11:20:30Z", "commit": {"oid": "0a14db04e48e58736c4ef31dd773809bc5abeb00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04022c594ca078b7547b7cd100ea5b2b15221767", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/04022c594ca078b7547b7cd100ea5b2b15221767", "committedDate": "2020-02-07T14:23:21Z", "message": "Merge branch 'master' into file-sink-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b09c9ef009797c0e2ea930ebbaece5c29c30783c", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b09c9ef009797c0e2ea930ebbaece5c29c30783c", "committedDate": "2020-02-07T14:31:52Z", "message": "Use constant to disable file rolling by size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c4c9c3743213885fb8e21a74012d3c9e5a20175", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/0c4c9c3743213885fb8e21a74012d3c9e5a20175", "committedDate": "2020-02-07T14:39:54Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjAyMzA2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1937#pullrequestreview-355202306", "createdAt": "2020-02-07T14:43:05Z", "commit": {"oid": "0c4c9c3743213885fb8e21a74012d3c9e5a20175"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dda7f254475de0d4d1e9901f625806678f22622", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/1dda7f254475de0d4d1e9901f625806678f22622", "committedDate": "2020-02-07T16:23:45Z", "message": "Fix compilation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2978, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}