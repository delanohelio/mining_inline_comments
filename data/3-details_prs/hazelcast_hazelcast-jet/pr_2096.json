{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzIzODAz", "number": 2096, "title": "Add cooperative warning to mapUsingService", "bodyText": "Javadoc on mapUsingService is missing a warning about the restrictions on cooperative processors and the need to call toNonCooperative if they aren't respected.\nChecklist\n\n Tags Set\n Milestone Set", "createdAt": "2020-03-25T17:26:38Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2096", "merged": true, "mergeCommit": {"oid": "64fb4781c3fce503b0e674a2e4ed6063f7e1d753"}, "closed": true, "closedAt": "2020-03-26T10:02:07Z", "author": {"login": "mtopolnik"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRK5eAgH2gAyMzkzNzIzODAzOjYyYzFjN2Y1ZWJhNzQ2N2E3OGQyNDk2YzBlNGI4NDRjMjE4ZGMwMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRYvvsAH2gAyMzkzNzIzODAzOjljOWQ2ZDczNjE0Zjg0NGY0MGU4NDA1OTlhOTIwZWZkNGE3MGNmY2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62c1c7f5eba7467a78d2496c0e4b844c218dc001", "author": {"user": {"login": "mtopolnik", "name": "Marko Topolnik"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/62c1c7f5eba7467a78d2496c0e4b844c218dc001", "committedDate": "2020-03-25T17:24:37Z", "message": "Add cooperative warning to mapUsingService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzkxODA4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2096#pullrequestreview-381791808", "createdAt": "2020-03-26T08:35:07Z", "commit": {"oid": "62c1c7f5eba7467a78d2496c0e4b844c218dc001"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODozNTowN1rOF78HLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODozNTowN1rOF78HLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5NTE4MA==", "bodyText": "I think it would be good to point to Processor.isCooperative() javadoc. The cooperative contract is explained there in more detail.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2096#discussion_r398395180", "createdAt": "2020-03-26T08:35:07Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/ServiceFactories.java", "diffHunk": "@@ -98,6 +98,17 @@ private ServiceFactories() { }\n      * A variant of {@link #sharedService(FunctionEx, ConsumerEx)\n      * sharedService(createFn, destroyFn)} with a no-op {@code\n      * destroyFn}.\n+     * <p>\n+     * <strong>Note:</strong> if your service has a blocking API (e.g., doing\n+     * synchronous IO or acquiring locks), you must call {@link\n+     * ServiceFactory#toNonCooperative()} as a hint to the Jet execution engine\n+     * to start a dedicated thread for those calls. Failing to do this can\n+     * cause severe performance problems. You should also carefully consider\n+     * how much local parallelism you need for this step since each parallel\n+     * tasklet needs its own thread. Call {@code GeneralStage#setLocalParallelism\n+     * stage.setLocalParallelism()} to set an explicit level, otherwise it will\n+     * depend on the number of cores on the Jet machine, which makes no sense\n+     * for blocking code.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62c1c7f5eba7467a78d2496c0e4b844c218dc001"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c9d6d73614f844f40e840599a920efd4a70cfcd", "author": {"user": {"login": "mtopolnik", "name": "Marko Topolnik"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9c9d6d73614f844f40e840599a920efd4a70cfcd", "committedDate": "2020-03-26T09:32:40Z", "message": "Fix {@code } -> {@link }"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2737, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}