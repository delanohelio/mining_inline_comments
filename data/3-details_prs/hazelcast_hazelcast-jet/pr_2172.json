{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNjc2NTg3", "number": 2172, "title": "Attempt to fix Observable tests", "bodyText": "Attempt to fix some flaky tests for Observables. Even though can't reproduce the failures it seems to be caused by not cleaning up properly after tests.\nChecklist\n\n Tags Set\n Milestone Set\n\nFixes #2026", "createdAt": "2020-04-15T10:31:56Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172", "merged": true, "mergeCommit": {"oid": "87a9cd79920412a5206f2444f0cec036778f6a08"}, "closed": true, "closedAt": "2020-04-16T12:52:02Z", "author": {"login": "jbartok"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYH_sLAFqTM5NDM4NTU5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYLwTlgFqTM5NDU3NjgxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mzg1NTkz", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#pullrequestreview-394385593", "createdAt": "2020-04-16T07:57:49Z", "commit": {"oid": "b90925ba714ad79ec7899e3034183bda0b40f9d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1Nzo0OVrOGGZIEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1ODo1MFrOGGZKXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjMwNQ==", "bodyText": "caps is only used for static final variables (i.e. constants?)", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409356305", "createdAt": "2020-04-16T07:57:49Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java", "diffHunk": "@@ -51,7 +51,7 @@\n     protected static final String JOURNALED_CACHE_PREFIX = \"journaledCache.\";\n     protected static final int MEMBER_COUNT = 2;\n \n-    protected static JetTestInstanceFactory factory = new JetTestInstanceFactory();\n+    protected static JetTestInstanceFactory FACTORY = new JetTestInstanceFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90925ba714ad79ec7899e3034183bda0b40f9d7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1Njg5Mg==", "bodyText": "method should have @Override if it's overriding, or you can just use another method name", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409356892", "createdAt": "2020-04-16T07:58:50Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java", "diffHunk": "@@ -63,20 +63,19 @@\n     private TestObserver testObserver;\n     private Observable<Long> testObservable;\n     private UUID registrationId;\n-    private Set<Observable<?>> usedObservables;\n \n     @Before\n     public void before() {\n-        usedObservables = new HashSet<>();\n         observableName = randomName();\n         testObserver = new TestObserver();\n-        testObservable = getObservable(observableName);\n+        testObservable = jet().getObservable(observableName);\n         registrationId = testObservable.addObserver(testObserver);\n     }\n \n     @After\n-    public void after() {\n-        usedObservables.forEach(Observable::destroy);\n+    public void after() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b90925ba714ad79ec7899e3034183bda0b40f9d7"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a21bb5f571ab3e328dc76b5185355c9e80ec0d50", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a21bb5f571ab3e328dc76b5185355c9e80ec0d50", "committedDate": "2020-04-16T08:14:58Z", "message": "Name static factory properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcf7ae9eb047bacfb64a065207c4b226769a1bf6", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/fcf7ae9eb047bacfb64a065207c4b226769a1bf6", "committedDate": "2020-04-16T08:14:59Z", "message": "Fix clean-up issues & improve test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c11dbd141586e50bc4e2c77a69f67097104e4fb", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6c11dbd141586e50bc4e2c77a69f67097104e4fb", "committedDate": "2020-04-16T08:16:53Z", "message": "Revert \"Name static factory properly\"\n\nThis reverts commit a21bb5f5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "committedDate": "2020-04-16T08:19:07Z", "message": "Add @Override annotation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b90925ba714ad79ec7899e3034183bda0b40f9d7", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b90925ba714ad79ec7899e3034183bda0b40f9d7", "committedDate": "2020-04-15T10:26:21Z", "message": "Fix clean-up issues & improve test"}, "afterCommit": {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8431d3becbfdbcc799208eaca3c21f55ee4a25d6", "committedDate": "2020-04-16T08:19:07Z", "message": "Add @Override annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTc2MTE2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#pullrequestreview-394576116", "createdAt": "2020-04-16T12:20:57Z", "commit": {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoyMDo1N1rOGGil6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoyMDo1N1rOGGil6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxMTQwMw==", "bodyText": "We can do this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertFalse(activeObservables.contains(b.name()));\n          \n          \n            \n                    assertEquals(new HashSet<>(Arrays.asList(a.name(), c.name())), activeObservables);\n          \n      \n    \n    \n  \n\nThis way we'll see in the exception message what's the difference.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#discussion_r409511403", "createdAt": "2020-04-16T12:20:57Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ObservableResultsTest.java", "diffHunk": "@@ -553,15 +553,19 @@ public void unnamedObservable() {\n     }\n \n     @Test\n-    public void getObservables() {\n+    public void onlyObservedObservablesGetActivated() {\n         //when\n-        getObservable(\"a\").addObserver(Observer.of(ConsumerEx.noop()));\n-        getObservable(\"b\");\n-        getObservable(\"c\").addObserver(Observer.of(ConsumerEx.noop()));\n+        Observable<Object> a = jet().newObservable();\n+        Observable<Object> b = jet().newObservable();\n+        Observable<Object> c = jet().newObservable();\n+\n+        a.addObserver(Observer.of(ConsumerEx.noop()));\n+        c.addObserver(Observer.of(ConsumerEx.noop()));\n \n         //then\n         Set<String> activeObservables = jet().getObservables().stream().map(Observable::name).collect(Collectors.toSet());\n-        assertTrue(activeObservables.containsAll(Arrays.asList(\"a\", \"c\")));\n+        assertTrue(activeObservables.containsAll(Arrays.asList(a.name(), c.name())));\n+        assertFalse(activeObservables.contains(b.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTc2ODE0", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2172#pullrequestreview-394576814", "createdAt": "2020-04-16T12:21:59Z", "commit": {"oid": "8431d3becbfdbcc799208eaca3c21f55ee4a25d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2799, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}