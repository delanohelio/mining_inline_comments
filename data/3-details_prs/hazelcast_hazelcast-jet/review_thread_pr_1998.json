{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjMwOTQ3", "number": 1998, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowODo1NlrODhj7Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxNDozNlrODhkFIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE4MjIzOnYy", "diffSide": "RIGHT", "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowODo1NlrOFsXEAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowODo1NlrOFsXEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTUyMw==", "bodyText": "Bad indentation", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382059523", "createdAt": "2020-02-20T15:08:56Z", "author": {"login": "viliam-durina"}, "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "diffHunk": "@@ -49,7 +49,12 @@\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n-            \"    return ['echo-%s' % i for i in input_list]\\n\";\n+ \"    return ['echo-%s' % i for i in input_list]\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5b754a20a88b3df949886147c1a96d828f8440"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE4Mjk2OnYy", "diffSide": "RIGHT", "path": "extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowOTowN1rOFsXEbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowOTowN1rOFsXEbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyOQ==", "bodyText": "serializable", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382059629", "createdAt": "2020-02-20T15:09:07Z", "author": {"login": "viliam-durina"}, "path": "extensions/python/src/main/java/com/hazelcast/jet/python/PythonService.java", "diffHunk": "@@ -128,6 +131,11 @@ public void onNext(OutputMessage outputItem) {\n         @Override\n         public void onError(Throwable e) {\n             try {\n+                if (e instanceof StatusException || e instanceof StatusRuntimeException) {\n+                    // not seriazliable exceptions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5b754a20a88b3df949886147c1a96d828f8440"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTIwMTkwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxMzoyNlrOFsXQNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxMzoyNlrOFsXQNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MjY0NQ==", "bodyText": "I would expand this comment, something like:\n\nSometimes exceptions are not serializable. For example #1995. When sending exception as a response and the serialization fails, the response will not be sent and the operation will hang. If it happened, replace it with another exception that can be serialized.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382062645", "createdAt": "2020-02-20T15:13:26Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java", "diffHunk": "@@ -73,7 +76,17 @@ private void doSendResponse(Object value) {\n             final JetService service = getService();\n             service.getLiveOperationRegistry().deregister(this);\n         } finally {\n-            sendResponse(value);\n+            try {\n+                sendResponse(value);\n+            } catch (Exception e) {\n+                Throwable ex = peel(e);\n+                if (value instanceof Throwable && ex instanceof HazelcastSerializationException) {\n+                    // we got a non-serializable exception here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5b754a20a88b3df949886147c1a96d828f8440"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTIwNzM5OnYy", "diffSide": "RIGHT", "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxNDozNlrOFsXTng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToxNDozNlrOFsXTng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzUxOA==", "bodyText": "This line probably isn't necessary. Also can't assertions be turned off as in java?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1998#discussion_r382063518", "createdAt": "2020-02-20T15:14:36Z", "author": {"login": "viliam-durina"}, "path": "extensions/python/src/test/java/com/hazelcast/jet/python/PythonServiceTest.java", "diffHunk": "@@ -49,7 +49,12 @@\n     private static final int ITEM_COUNT = 10_000;\n     private static final String ECHO_HANDLER_FUNCTION =\n             \"def handle(input_list):\\n\" +\n-            \"    return ['echo-%s' % i for i in input_list]\\n\";\n+ \"    return ['echo-%s' % i for i in input_list]\\n\";\n+\n+    private static final String FAILING_FUNCTION\n+            = \"def handle(input_list):\\n\"\n+            + \"    assert 1 == 2\\n\"\n+            + \"    return ['echo-%s' % i for i in input_list]\\n\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed5b754a20a88b3df949886147c1a96d828f8440"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4879, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}