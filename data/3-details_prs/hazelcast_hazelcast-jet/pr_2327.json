{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzE0NTYy", "number": 2327, "title": "Add tests for cdc-mysql connector", "bodyText": "Added following tests for CDC + MySQL:\n\ntests for listening events by whitelist and blacklist\nlistening before listened database, table or column is created\nbasic negative tests for authentication and connection\n\nAll tests use docker and take a long time. Hence they are part of nightly profile. See the current results of them here - http://jenkins.hazelcast.com/view/Jet%20-%20Misc/job/jet-custom-oss-nightly/2/testReport/com.hazelcast.jet.cdc.mysql/\nChecklist\n\n Tags Set\n Milestone Set\n[N/A] Any breaking changes are documented\n[N/A] New public APIs have @Nonnull/@Nullable annotations\n[N/A] New public APIs have @since tags in Javadoc\n[N/A] For code samples, code sample main readme is updated", "createdAt": "2020-06-15T06:15:57Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327", "merged": true, "mergeCommit": {"oid": "61726dc00a04a4d9a7c1ff53dbd823247aa3ad63"}, "closed": true, "closedAt": "2020-06-15T11:44:57Z", "author": {"login": "olukas"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqipoogH2gAyNDM0MzE0NTYyOmZjMjI5NGZkMDBmMGM3NTMxNjhjZWFkNzlkMTdkOTY5NmQzMmNkZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcregcggH2gAyNDM0MzE0NTYyOmYwNmI2ZmRjZGQ1MTZkNWIwZDRjY2I1MTIwZThhN2E0OGJmYjE4Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/fc2294fd00f0c753168cead79d17d9696d32cdd0", "committedDate": "2020-06-12T13:13:09Z", "message": "Add tests for cdc-mysql connector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzQ4NTA4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#pullrequestreview-430348508", "createdAt": "2020-06-15T06:19:03Z", "commit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjoxOTowM1rOGjkfvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjozNTowM1rOGjk1xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1MTI5Mg==", "bodyText": "If you introduce such a parent test class, then would be nice to modify the already existing integration test to use it too.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r439951292", "createdAt": "2020-06-15T06:19:03Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/AbstractMySqlIntegrationTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.cdc.mysql;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.hazelcast.jet.accumulator.LongAccumulator;\n+import com.hazelcast.jet.cdc.AbstractIntegrationTest;\n+import com.hazelcast.jet.cdc.ChangeRecord;\n+import com.hazelcast.jet.cdc.Operation;\n+import com.hazelcast.jet.cdc.RecordPart;\n+import com.hazelcast.jet.pipeline.Pipeline;\n+import com.hazelcast.jet.pipeline.Sinks;\n+import com.hazelcast.jet.pipeline.StreamSource;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.util.Objects;\n+import org.junit.Rule;\n+import org.testcontainers.containers.MySQLContainer;\n+\n+import static com.hazelcast.jet.Util.entry;\n+import static org.testcontainers.containers.MySQLContainer.MYSQL_PORT;\n+\n+public class AbstractMySqlIntegrationTest extends AbstractIntegrationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1MTg0Mg==", "bodyText": "Maybe use database whitelisting (source configuration option) instead of filtering in the pipeline (unless that's what you want to test).", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r439951842", "createdAt": "2020-06-15T06:20:40Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/AbstractMySqlIntegrationTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.cdc.mysql;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.hazelcast.jet.accumulator.LongAccumulator;\n+import com.hazelcast.jet.cdc.AbstractIntegrationTest;\n+import com.hazelcast.jet.cdc.ChangeRecord;\n+import com.hazelcast.jet.cdc.Operation;\n+import com.hazelcast.jet.cdc.RecordPart;\n+import com.hazelcast.jet.pipeline.Pipeline;\n+import com.hazelcast.jet.pipeline.Sinks;\n+import com.hazelcast.jet.pipeline.StreamSource;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.util.Objects;\n+import org.junit.Rule;\n+import org.testcontainers.containers.MySQLContainer;\n+\n+import static com.hazelcast.jet.Util.entry;\n+import static org.testcontainers.containers.MySQLContainer.MYSQL_PORT;\n+\n+public class AbstractMySqlIntegrationTest extends AbstractIntegrationTest {\n+\n+    protected static final String DATABASE = \"testDb\";\n+    protected static final String SINK_MAP_NAME = \"resultsMap\";\n+\n+    @Rule\n+    public MySQLContainer<?> mysql = new MySQLContainer<>(\"debezium/example-mysql:1.2\")\n+            .withUsername(\"mysqluser\")\n+            .withPassword(\"mysqlpw\");\n+\n+    protected MySqlCdcSources.Builder initialSourceBuilder() {\n+        return MySqlCdcSources.mysql(\"cdcMysql\")\n+                .setDatabaseAddress(mysql.getContainerIpAddress())\n+                .setDatabasePort(mysql.getMappedPort(MYSQL_PORT))\n+                .setDatabaseUser(\"debezium\")\n+                .setDatabasePassword(\"dbz\")\n+                .setClusterName(\"dbserver1\");\n+    }\n+\n+    protected Pipeline preparePipeline(StreamSource<ChangeRecord> source) {\n+        Pipeline pipeline = Pipeline.create();\n+        pipeline.readFrom(source)\n+                .withNativeTimestamps(0)\n+                .filter(t -> t.database().startsWith(DATABASE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1MjAyMg==", "bodyText": "No need to set local parallelism, the source by default has a single instance.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r439952022", "createdAt": "2020-06-15T06:21:16Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/AbstractMySqlIntegrationTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.cdc.mysql;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.hazelcast.jet.accumulator.LongAccumulator;\n+import com.hazelcast.jet.cdc.AbstractIntegrationTest;\n+import com.hazelcast.jet.cdc.ChangeRecord;\n+import com.hazelcast.jet.cdc.Operation;\n+import com.hazelcast.jet.cdc.RecordPart;\n+import com.hazelcast.jet.pipeline.Pipeline;\n+import com.hazelcast.jet.pipeline.Sinks;\n+import com.hazelcast.jet.pipeline.StreamSource;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.util.Objects;\n+import org.junit.Rule;\n+import org.testcontainers.containers.MySQLContainer;\n+\n+import static com.hazelcast.jet.Util.entry;\n+import static org.testcontainers.containers.MySQLContainer.MYSQL_PORT;\n+\n+public class AbstractMySqlIntegrationTest extends AbstractIntegrationTest {\n+\n+    protected static final String DATABASE = \"testDb\";\n+    protected static final String SINK_MAP_NAME = \"resultsMap\";\n+\n+    @Rule\n+    public MySQLContainer<?> mysql = new MySQLContainer<>(\"debezium/example-mysql:1.2\")\n+            .withUsername(\"mysqluser\")\n+            .withPassword(\"mysqlpw\");\n+\n+    protected MySqlCdcSources.Builder initialSourceBuilder() {\n+        return MySqlCdcSources.mysql(\"cdcMysql\")\n+                .setDatabaseAddress(mysql.getContainerIpAddress())\n+                .setDatabasePort(mysql.getMappedPort(MYSQL_PORT))\n+                .setDatabaseUser(\"debezium\")\n+                .setDatabasePassword(\"dbz\")\n+                .setClusterName(\"dbserver1\");\n+    }\n+\n+    protected Pipeline preparePipeline(StreamSource<ChangeRecord> source) {\n+        Pipeline pipeline = Pipeline.create();\n+        pipeline.readFrom(source)\n+                .withNativeTimestamps(0)\n+                .filter(t -> t.database().startsWith(DATABASE))\n+                .setLocalParallelism(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1Njc4OQ==", "bodyText": "The tests you describe here are conceptually non-DB specific, but I'm not sure you can rely on every connector to every DB behaving the same way, so it would be safest to threat it as MySQL specific tests.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r439956789", "createdAt": "2020-06-15T06:34:38Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/AuthAndConnectionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.cdc.mysql;\n+\n+import com.hazelcast.jet.JetInstance;\n+import com.hazelcast.jet.Job;\n+import com.hazelcast.jet.cdc.ChangeRecord;\n+import com.hazelcast.jet.core.JetTestSupport;\n+import com.hazelcast.jet.pipeline.Pipeline;\n+import com.hazelcast.jet.pipeline.Sinks;\n+import com.hazelcast.jet.pipeline.StreamSource;\n+import com.hazelcast.test.annotation.NightlyTest;\n+import java.sql.SQLException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.testcontainers.containers.MySQLContainer;\n+\n+import static com.hazelcast.jet.core.JobStatus.FAILED;\n+import static com.hazelcast.test.HazelcastTestSupport.assertEqualsEventually;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.testcontainers.containers.MySQLContainer.MYSQL_PORT;\n+\n+@Category(NightlyTest.class)\n+public class AuthAndConnectionIntegrationTest extends JetTestSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NjkzNA==", "bodyText": "Threat it and NAME it like MySQL specific tests.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r439956934", "createdAt": "2020-06-15T06:35:03Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/AuthAndConnectionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.cdc.mysql;\n+\n+import com.hazelcast.jet.JetInstance;\n+import com.hazelcast.jet.Job;\n+import com.hazelcast.jet.cdc.ChangeRecord;\n+import com.hazelcast.jet.core.JetTestSupport;\n+import com.hazelcast.jet.pipeline.Pipeline;\n+import com.hazelcast.jet.pipeline.Sinks;\n+import com.hazelcast.jet.pipeline.StreamSource;\n+import com.hazelcast.test.annotation.NightlyTest;\n+import java.sql.SQLException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.testcontainers.containers.MySQLContainer;\n+\n+import static com.hazelcast.jet.core.JobStatus.FAILED;\n+import static com.hazelcast.test.HazelcastTestSupport.assertEqualsEventually;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.testcontainers.containers.MySQLContainer.MYSQL_PORT;\n+\n+@Category(NightlyTest.class)\n+public class AuthAndConnectionIntegrationTest extends JetTestSupport {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1Njc4OQ=="}, "originalCommit": {"oid": "fc2294fd00f0c753168cead79d17d9696d32cdd0"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63514ad18ca1d176799455ae5d877e8d3abae4be", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/63514ad18ca1d176799455ae5d877e8d3abae4be", "committedDate": "2020-06-15T09:42:19Z", "message": "Addressed PR review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNTA0Mjcw", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#pullrequestreview-430504270", "createdAt": "2020-06-15T10:11:08Z", "commit": {"oid": "63514ad18ca1d176799455ae5d877e8d3abae4be"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMDoxMTowOFrOGjr0tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMDoxMTo0OVrOGjr2GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA3MTM1MA==", "bodyText": "Maybe drop initial, just call it sourceBuilder?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r440071350", "createdAt": "2020-06-15T10:11:08Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/MySqlIntegrationTest.java", "diffHunk": "@@ -298,12 +289,7 @@ public void cdcMapSink() throws Exception {\n \n     @Nonnull\n     private StreamSource<ChangeRecord> source(String tableName) {\n-        return MySqlCdcSources.mysql(tableName)\n-                .setDatabaseAddress(mysql.getContainerIpAddress())\n-                .setDatabasePort(mysql.getMappedPort(MYSQL_PORT))\n-                .setDatabaseUser(\"debezium\")\n-                .setDatabasePassword(\"dbz\")\n-                .setClusterName(\"dbserver1\")\n+        return initialSourceBuilder(tableName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63514ad18ca1d176799455ae5d877e8d3abae4be"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA3MTcwNA==", "bodyText": "Maybe drop prepare from the method name?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2327#discussion_r440071704", "createdAt": "2020-06-15T10:11:49Z", "author": {"login": "jbartok"}, "path": "extensions/cdc-mysql/src/test/java/com/hazelcast/jet/cdc/mysql/MySqlListenWhiteBlackListIntegrationTest.java", "diffHunk": "@@ -314,6 +320,30 @@ private void test(StreamSource<ChangeRecord> source, List<String> expectedRecord\n         }\n     }\n \n+    private Pipeline preparePipeline(StreamSource<ChangeRecord> source) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63514ad18ca1d176799455ae5d877e8d3abae4be"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f06b6fdcdd516d5b0d4ccb5120e8a7a48bfb1877", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f06b6fdcdd516d5b0d4ccb5120e8a7a48bfb1877", "committedDate": "2020-06-15T10:57:25Z", "message": "Some renaming"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3655, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}