{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNTY5MDQ3", "number": 2552, "title": "Fix S3SinkTest Issue", "bodyText": "The issue here is that the test code gets the list of keys by asking the s3 server, but when it asks for the value of one of these keys in the next step, the s3 server could not find this key. We can say that seeing a key, then not seeing the same key is an eventual consistency issue in the S3 side (Note: Frantisek showed me this point and said that he also encountered this type of issue during s3 benchmarks. He can help discussions on this topic). Although they say s3 provides eventual consistency, it may not. I added a conditional wait after these key deletions because maybe the key deletions are running slowly.\nI am aware that with eventual consistency guarantee, write operations may be reflected after cleanup. But we call cleanup before and after tests. In such a case, the test including these writes will fail before since these writes will not be visible in this test.\n\nAdd a new method that suppresses exceptions in AssertTrueEventually. Use this AssertTrueEventuallyAndSuppressExceptions method in S3SinkTests. (This is somewhat controversial. Is it okay to suppress the exceptions here?)\nUse the latest versions of S3 APIs which are recommended.\nAlso, add conditional wait after test cleanup which is called before and after tests.\nChange the logging level to INFO.\n\nChecklist\n\n Tags Set\n Milestone Set\n\nLinks to issues fixed (if any):\nFixes #2317", "createdAt": "2020-09-23T07:15:33Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552", "merged": true, "mergeCommit": {"oid": "82c8ab8be151a217c0552c83a76bebca1c7b0a72"}, "closed": true, "closedAt": "2020-09-28T06:40:39Z", "author": {"login": "ufukyilmaz"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLXqGOAH2gAyNDkxNTY5MDQ3OjE4OGUxOGRkYTFlZjVjYzNiNGQ3ZTM4NTM1NzU2OTg1OGNhNTFlM2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMXNV7gFqTQ5NjUwODYwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "188e18dda1ef5cc3b4d7e385357569858ca51e3b", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/188e18dda1ef5cc3b4d7e385357569858ca51e3b", "committedDate": "2020-09-22T13:04:12Z", "message": "Add new method that suppresses exceptions in AssertTrueEventually\n\nUse this AssertTrueEventuallyAndSuppressExceptions method in S3SinkTests. Also, use the latest versions of S3 APIs that are recommended."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0b241bc90b4681be663ddc50cfa7a4c359fd432", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/c0b241bc90b4681be663ddc50cfa7a4c359fd432", "committedDate": "2020-09-23T06:57:12Z", "message": "Add a conditional wait after cleanup."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32cf368c70a0dc61f5652e475c7a71512a9da416", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/32cf368c70a0dc61f5652e475c7a71512a9da416", "committedDate": "2020-09-23T09:36:30Z", "message": "Change the logging level to INFO."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/60288182fc15a0972263d45757d5f5b86835d9be", "committedDate": "2020-09-24T10:20:48Z", "message": "Address the review comments\n\n- Add logging to cleanup step\n- Remove the AssertTrueEventuallyAndSuppressException method.\nAdd try catch block into the test instead of using that method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NDc0NjI0", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#pullrequestreview-495474624", "createdAt": "2020-09-24T11:33:19Z", "commit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTozMzoxOVrOHXWECw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo0MjoyOFrOHXWW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MDc3OQ==", "bodyText": "we can move this to a method for readibility and for re-use:\nclient.listObjectsV2(ListObjectsV2Request.builder().bucket(bucketName).build())", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#discussion_r494240779", "createdAt": "2020-09-24T11:33:19Z", "author": {"login": "gurbuzali"}, "path": "extensions/s3/src/test/java/com/hazelcast/jet/s3/S3SinkTest.java", "diffHunk": "@@ -51,6 +54,24 @@ public void deleteObjects() {\n         if (!identifiers.isEmpty()) {\n             client.deleteObjects(b -> b.bucket(bucketName).delete(d -> d.objects(identifiers)));\n         }\n+\n+        int sleepMillis = (int) (SECONDS.toMillis(WAIT_AFTER_CLEANUP_IN_SECS) / 10);\n+        long deadline = System.currentTimeMillis() + SECONDS.toMillis(WAIT_AFTER_CLEANUP_IN_SECS);\n+        int keyCount;\n+        while ((keyCount = client.listObjectsV2(ListObjectsV2Request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0MTg0Nw==", "bodyText": "start method name with lower case", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#discussion_r494241847", "createdAt": "2020-09-24T11:35:16Z", "author": {"login": "gurbuzali"}, "path": "extensions/s3/src/test/java/com/hazelcast/jet/s3/S3TestBase.java", "diffHunk": "@@ -168,6 +170,23 @@ void deleteBucket(S3Client client, String bucket) {\n         }\n     }\n \n+    Stream<String> S3ObjectToLines(S3Object o, S3Client client, String bucketName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0Mjg3Mg==", "bodyText": "the exception from the issue is NoSuchKeyException not NoSuchBucketException\nI think we can use the parent S3Exception here", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#discussion_r494242872", "createdAt": "2020-09-24T11:37:15Z", "author": {"login": "gurbuzali"}, "path": "extensions/s3/src/test/java/com/hazelcast/jet/s3/S3TestBase.java", "diffHunk": "@@ -168,6 +170,23 @@ void deleteBucket(S3Client client, String bucket) {\n         }\n     }\n \n+    Stream<String> S3ObjectToLines(S3Object o, S3Client client, String bucketName) {\n+        try {\n+            ResponseInputStream<GetObjectResponse> is = client.getObject(req -> req.bucket(bucketName).key(o.key()), toInputStream());\n+            try (BufferedReader reader = new BufferedReader(new InputStreamReader(is, CHARSET))) {\n+                // materialize the stream, since we can't read it afterwards\n+                return reader.lines().collect(Collectors.toList()).stream();\n+            } catch (IOException e) {\n+                throw new AssertionError(\"Error reading file \", e);\n+            }\n+        } catch (NoSuchBucketException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0Mzg5OQ==", "bodyText": "you can pass the exception to the logger.warning as an argument instead of print stacktrace", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#discussion_r494243899", "createdAt": "2020-09-24T11:39:15Z", "author": {"login": "gurbuzali"}, "path": "extensions/s3/src/test/java/com/hazelcast/jet/s3/S3TestBase.java", "diffHunk": "@@ -168,6 +170,23 @@ void deleteBucket(S3Client client, String bucket) {\n         }\n     }\n \n+    Stream<String> S3ObjectToLines(S3Object o, S3Client client, String bucketName) {\n+        try {\n+            ResponseInputStream<GetObjectResponse> is = client.getObject(req -> req.bucket(bucketName).key(o.key()), toInputStream());\n+            try (BufferedReader reader = new BufferedReader(new InputStreamReader(is, CHARSET))) {\n+                // materialize the stream, since we can't read it afterwards\n+                return reader.lines().collect(Collectors.toList()).stream();\n+            } catch (IOException e) {\n+                throw new AssertionError(\"Error reading file \", e);\n+            }\n+        } catch (NoSuchBucketException e) {\n+            logger.warning(\"S3 side is having eventual consistency issue that it could not\" +\n+                    \" find the key that is listed before. We ignore this issue.\");\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTYwOQ==", "bodyText": "why copy/paste inputStreamToLines here ? we can just call it\nreturn inputStreamToLines(client.getObject(req -> req.bucket(bucketName).key(o.key()), toInputStream()));", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#discussion_r494245609", "createdAt": "2020-09-24T11:42:28Z", "author": {"login": "gurbuzali"}, "path": "extensions/s3/src/test/java/com/hazelcast/jet/s3/S3TestBase.java", "diffHunk": "@@ -168,6 +170,23 @@ void deleteBucket(S3Client client, String bucket) {\n         }\n     }\n \n+    Stream<String> S3ObjectToLines(S3Object o, S3Client client, String bucketName) {\n+        try {\n+            ResponseInputStream<GetObjectResponse> is = client.getObject(req -> req.bucket(bucketName).key(o.key()), toInputStream());\n+            try (BufferedReader reader = new BufferedReader(new InputStreamReader(is, CHARSET))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60288182fc15a0972263d45757d5f5b86835d9be"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82d53e6b4682295f20a2a6463415d63cc534b1b5", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/82d53e6b4682295f20a2a6463415d63cc534b1b5", "committedDate": "2020-09-24T12:43:49Z", "message": "Address the review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba9eedc6dfb6167acce127a7b0980501353f669b", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ba9eedc6dfb6167acce127a7b0980501353f669b", "committedDate": "2020-09-24T12:45:43Z", "message": "Fix checkstyle issue (Line length)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NTA4NjA3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2552#pullrequestreview-496508607", "createdAt": "2020-09-25T15:06:43Z", "commit": {"oid": "ba9eedc6dfb6167acce127a7b0980501353f669b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3631, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}