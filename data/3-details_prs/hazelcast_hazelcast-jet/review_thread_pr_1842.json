{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDU0MjIx", "number": 1842, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzo0NDo1MlrODWi8Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNzo1NzozMlrODWw5sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTY3NzU0OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzo0NDo1MlrOFbXSIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzo0NDo1MlrOFbXSIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIzNzM0Ng==", "bodyText": "can you make this a Util method? it's repeated several times.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1842#discussion_r364237346", "createdAt": "2020-01-08T13:44:52Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java", "diffHunk": "@@ -151,9 +151,9 @@ public ILogger getLogger() {\n         }\n     }\n \n-    private static Address masterAddress(Cluster cluster) {\n+    private static UUID masterUUID(Cluster cluster) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb1cc70ff37fb5920b207bf30747613775234b42"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTc5NDI4OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobProxy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoyNDo0MFrOFbYZuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDoyNDo0MFrOFbYZuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI1NTY3Mg==", "bodyText": "We have a getMasterMember method on the ClusterService.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1842#discussion_r364255672", "createdAt": "2020-01-08T14:24:40Z", "author": {"login": "sancar"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobProxy.java", "diffHunk": "@@ -142,6 +145,11 @@ protected JobConfig doGetJobConfig() {\n     }\n \n     @Override\n+    protected UUID masterUuid() {\n+        Optional<Member> first = container().getClusterService().getMembers().stream().findFirst();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb1cc70ff37fb5920b207bf30747613775234b42"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTg1NDAwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo0Mjo0N1rOFbY9TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTowNToyMFrOFbZtng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDc4MA==", "bodyText": "you can use use clientClusterService.getMaster() here and inline the Util method", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1842#discussion_r364264780", "createdAt": "2020-01-08T14:42:47Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java", "diffHunk": "@@ -156,16 +155,15 @@ protected long doGetJobSubmissionTime() {\n     protected JobConfig doGetJobConfig() {\n         return callAndRetryIfTargetNotFound(() -> {\n             ClientMessage request = JetGetJobConfigCodec.encodeRequest(getId());\n-            ClientMessage response = invocation(request, masterAddress()).invoke().get();\n+            ClientMessage response = invocation(request, masterUuid()).invoke().get();\n             Data data = JetGetJobConfigCodec.decodeResponse(response).response;\n             return serializationService().toObject(data);\n         });\n     }\n \n     @Override\n-    protected Address masterAddress() {\n-        Optional<Member> first = container().getCluster().getMembers().stream().findFirst();\n-        return first.orElseThrow(() -> new IllegalStateException(\"No members found in cluster\")).getAddress();\n+    protected UUID masterUuid() {\n+        return Util.getMaster(container().getCluster()).getUuid();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3624c51949c576d3b64daacfe0b225512ab9eb87"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI3NzE1MA==", "bodyText": "Ok, but we should be aware that we are changing behaviour, not just adapting (ie. no more exception). Is that ok?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1842#discussion_r364277150", "createdAt": "2020-01-08T15:05:20Z", "author": {"login": "jbartok"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java", "diffHunk": "@@ -156,16 +155,15 @@ protected long doGetJobSubmissionTime() {\n     protected JobConfig doGetJobConfig() {\n         return callAndRetryIfTargetNotFound(() -> {\n             ClientMessage request = JetGetJobConfigCodec.encodeRequest(getId());\n-            ClientMessage response = invocation(request, masterAddress()).invoke().get();\n+            ClientMessage response = invocation(request, masterUuid()).invoke().get();\n             Data data = JetGetJobConfigCodec.decodeResponse(response).response;\n             return serializationService().toObject(data);\n         });\n     }\n \n     @Override\n-    protected Address masterAddress() {\n-        Optional<Member> first = container().getCluster().getMembers().stream().findFirst();\n-        return first.orElseThrow(() -> new IllegalStateException(\"No members found in cluster\")).getAddress();\n+    protected UUID masterUuid() {\n+        return Util.getMaster(container().getCluster()).getUuid();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI2NDc4MA=="}, "originalCommit": {"oid": "3624c51949c576d3b64daacfe0b225512ab9eb87"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTk2NDY3OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNzo1NzozMlrOFbtVnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNzo1NzozMlrOFbtVnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU5ODY4Nw==", "bodyText": "To get master member, we get the master member and get its uuid and then get the master member again ?\n@jbartok", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1842#discussion_r364598687", "createdAt": "2020-01-09T07:57:32Z", "author": {"login": "sancar"}, "path": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "diffHunk": "@@ -406,7 +406,7 @@ public void cluster(\n             JetClientInstanceImpl client = (JetClientInstanceImpl) jet;\n             HazelcastClientInstanceImpl hazelcastClient = client.getHazelcastClient();\n             ClientClusterService clientClusterService = hazelcastClient.getClientClusterService();\n-            Member masterMember = clientClusterService.getMember(clientClusterService.getMasterAddress());\n+            Member masterMember = clientClusterService.getMember(clientClusterService.getMasterMember().getUuid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bad252efff8fc482f0cd18b2ee6c0782fc31dbb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4907, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}