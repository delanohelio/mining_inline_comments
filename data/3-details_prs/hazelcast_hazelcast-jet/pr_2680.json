{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjI0MzM3", "number": 2680, "title": "Write JSON directly to stream in SQL", "bodyText": "", "createdAt": "2020-11-18T14:27:42Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680", "merged": true, "mergeCommit": {"oid": "29f2b31d00195c0cfa4583d93453e5f3ab6df3e8"}, "closed": true, "closedAt": "2020-11-18T15:51:10Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddu_aSAH2gAyNTIzMjI0MzM3OmIwZGY2YzI1ZGRlODIxMjNkNjYxYTcyMWI3YTEzNDM0MGJiNzU2MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddv4sTAH2gAyNTIzMjI0MzM3OjljZmRiMmZiMTk1ZDUyOGQxYzc4Mjg0OGQ2ZWI2NTMxNjQ1ODc5ZDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0df6c25dde82123d661a721b7a134340bb75625", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b0df6c25dde82123d661a721b7a134340bb75625", "committedDate": "2020-11-18T14:25:56Z", "message": "Write JSON directly to stream in SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4100bd2b37ae37ece1e26b87e9da015f9c305ee7", "committedDate": "2020-11-18T14:27:24Z", "message": "Don't expect JSON as String in Kafka SQL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTAyNjIw", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#pullrequestreview-533502620", "createdAt": "2020-11-18T14:30:43Z", "commit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTU1Njg1", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#pullrequestreview-533555685", "createdAt": "2020-11-18T15:21:38Z", "commit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToyMTozOFrOH1y-AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToyMjoyNVrOH1zAiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MTY0OQ==", "bodyText": "Tests should be adjusted?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#discussion_r526171649", "createdAt": "2020-11-18T15:21:38Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/extract/JsonQueryTarget.java", "diffHunk": "@@ -33,14 +33,13 @@\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    private ObjectNode json;\n+    private JsonNode json;\n \n     @Override\n     public void setTarget(Object target) {\n         try {\n-            json = (ObjectNode) (target instanceof ObjectNode ? target\n-                    : target instanceof String ? MAPPER.readTree((String) target)\n-                    : MAPPER.readTree((byte[]) target));\n+            json = target instanceof ObjectNode ? (ObjectNode) target", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MjI5OQ==", "bodyText": "com.fasterxml.jackson.core:jackson-databind isn't needed anymore?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#discussion_r526172299", "createdAt": "2020-11-18T15:22:25Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/inject/JsonUpsertTarget.java", "diffHunk": "@@ -16,25 +16,26 @@\n \n package com.hazelcast.jet.sql.impl.inject;\n \n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.hazelcast.sql.impl.QueryException;\n import com.hazelcast.sql.impl.type.QueryDataType;\n \n import javax.annotation.Nullable;\n import javax.annotation.concurrent.NotThreadSafe;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n \n import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n import static com.hazelcast.jet.sql.impl.inject.UpsertInjector.FAILING_TOP_LEVEL_INJECTOR;\n \n @NotThreadSafe\n class JsonUpsertTarget implements UpsertTarget {\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1f6dc29e3c76fe25f53de658fc4d3225a0777a5", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f1f6dc29e3c76fe25f53de658fc4d3225a0777a5", "committedDate": "2020-11-18T15:25:31Z", "message": "Fix test failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTYwMDY0", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#pullrequestreview-533560064", "createdAt": "2020-11-18T15:25:43Z", "commit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToyNTo0NFrOH1zLYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNToyNTo0NFrOH1zLYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3NTA3NQ==", "bodyText": "Simply json? It's not obvious without checking the type what gen is.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2680#discussion_r526175075", "createdAt": "2020-11-18T15:25:44Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/inject/JsonUpsertTarget.java", "diffHunk": "@@ -16,25 +16,26 @@\n \n package com.hazelcast.jet.sql.impl.inject;\n \n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.JsonNode;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.fasterxml.jackson.core.JsonFactory;\n+import com.fasterxml.jackson.core.JsonGenerator;\n import com.hazelcast.sql.impl.QueryException;\n import com.hazelcast.sql.impl.type.QueryDataType;\n \n import javax.annotation.Nullable;\n import javax.annotation.concurrent.NotThreadSafe;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n \n import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n import static com.hazelcast.jet.sql.impl.inject.UpsertInjector.FAILING_TOP_LEVEL_INJECTOR;\n \n @NotThreadSafe\n class JsonUpsertTarget implements UpsertTarget {\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n+    private static final JsonFactory JSON_FACTORY = new JsonFactory();\n \n-    private ObjectNode json;\n+    private final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+    private JsonGenerator jsonGen;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4100bd2b37ae37ece1e26b87e9da015f9c305ee7"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cfdb2fb195d528d1c782848d6eb6531645879d3", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9cfdb2fb195d528d1c782848d6eb6531645879d3", "committedDate": "2020-11-18T15:28:30Z", "message": "Rename variable"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3543, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}