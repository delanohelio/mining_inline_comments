{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NTUyODU3", "number": 2699, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODoyODoyNlrOE8HGNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzo0Njo1NVrOFLLP-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDY2Mjk1OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetBootstrap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODoyODoyNlrOH4DHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwODoyODoyNlrOH4DHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODUzMzM3MQ==", "bodyText": "Here, I couldn't manage how to filter jobs submitted from a different client in a proper way.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2699#discussion_r528533371", "createdAt": "2020-11-23T08:28:26Z", "author": {"login": "ufukyilmaz"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetBootstrap.java", "diffHunk": "@@ -124,6 +131,11 @@ public static synchronized void executeJar(@Nonnull Supplier<JetInstance> suppli\n             String[] jobArgs = args.toArray(new String[0]);\n             // upcast args to Object so it's passed as a single array-typed argument\n             main.invoke(null, (Object) jobArgs);\n+            List<Job> jobsAfterSubmit = JetBootstrap.supplier.get().getJobs();\n+            printJobStatusInfo(jobsAfterSubmit\n+                    .stream()\n+                    .filter(job -> !jobsBeforeSubmit.contains(job))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf9a5e26a48013c88101b37d42afe619effa407e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjYyOTcwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetBootstrap.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzo0Njo1NVrOIOND6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzo0Njo1NVrOIOND6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc2NDk3MA==", "bodyText": "I think a date would be useful for debugging - e.g. when there is a large pause between submission and change to running state.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2699#discussion_r551764970", "createdAt": "2021-01-05T07:46:55Z", "author": {"login": "frant-hartm"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetBootstrap.java", "diffHunk": "@@ -138,6 +150,51 @@ public static synchronized void executeJar(@Nonnull Supplier<JetInstance> suppli\n         }\n     }\n \n+    private static void awaitJobsStarted() {\n+        List<Job> submittedJobs = JetBootstrap.supplier.get().submittedJobs();\n+        int submittedCount = submittedJobs.size();\n+        if (submittedCount == 0) {\n+            System.out.println(\"The JAR didn't submit any jobs.\");\n+            return;\n+        }\n+        int previousCount = -1;\n+        while (true) {\n+            uncheckRun(() -> Thread.sleep(JOB_START_CHECK_INTERVAL_MILLIS));\n+            List<Job> startedJobs = submittedJobs.stream()\n+                .filter(job -> !STARTUP_STATUSES.contains(job.getStatus()))\n+                .collect(Collectors.toList());\n+\n+            submittedJobs = submittedJobs.stream()\n+                    .filter(job -> !startedJobs.contains(job))\n+                    .collect(Collectors.toList());\n+\n+            int remainingCount = submittedJobs.size();\n+\n+            if (submittedJobs.isEmpty() && remainingCount == previousCount) {\n+                break;\n+            }\n+            if (remainingCount == previousCount) {\n+                continue;\n+            }\n+            for (Job job : startedJobs) {\n+                // The change of job statuses after the check above\n+                // won't be a problem here. Because they cannot revert\n+                // back to startup statuses.\n+                if (job.getName() != null) {\n+                    System.out.println(\"Job '\" + job.getName() + \"' is \" + job.getStatus().name() + \".\");\n+                } else {\n+                    System.out.println(\"Job \" + job.getIdString() + \" is \" + job.getStatus().name() + \".\");\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae8f6ec4deea59976a9b7a7ac8f6bb2a59fb147"}, "originalPosition": 127}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4515, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}