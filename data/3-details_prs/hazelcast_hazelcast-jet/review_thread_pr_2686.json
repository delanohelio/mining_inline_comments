{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTI3Mzc1", "number": 2686, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODo1MjoyMlrOE7caCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODo1MjoyMlrOE7caCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzY2ODU5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/opt/logical/LogicalRules.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwODo1MjoyMlrOH3GG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDo1NTowMlrOH3K5lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUzMzc4MQ==", "bodyText": "Shouldn't we also add PROJECT_INSTANCE and JOIN_INSTANCE?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2686#discussion_r527533781", "createdAt": "2020-11-20T08:52:22Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/opt/logical/LogicalRules.java", "diffHunk": "@@ -40,6 +41,7 @@ public static RuleSet getRuleSet() {\n                 FilterMergeRule.INSTANCE,\n                 FilterProjectTransposeRule.INSTANCE,\n                 FilterIntoScanLogicalRule.INSTANCE,\n+                ReduceExpressionsRule.FILTER_INSTANCE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97086d46bb774bb536548c067420cce5f12643f9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUzNDQ4OQ==", "bodyText": "JOIN_INSTANCE will be included with joins.\nRegarding PROJECT_INSTANCE I could not find a case where it would be applicable apart from CASE which is not supported (yet).", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2686#discussion_r527534489", "createdAt": "2020-11-20T08:53:41Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/opt/logical/LogicalRules.java", "diffHunk": "@@ -40,6 +41,7 @@ public static RuleSet getRuleSet() {\n                 FilterMergeRule.INSTANCE,\n                 FilterProjectTransposeRule.INSTANCE,\n                 FilterIntoScanLogicalRule.INSTANCE,\n+                ReduceExpressionsRule.FILTER_INSTANCE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUzMzc4MQ=="}, "originalCommit": {"oid": "97086d46bb774bb536548c067420cce5f12643f9"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxMjMwOQ==", "bodyText": "JOIN_INSTANCE - my mistake\nPROJECT_INSTANCE: I thought it will simplify a + 1 + 1 to a + 2, but it doesn't... Also that a IS NULL AND a IS NOT NULL is simplified to false, but it doesn't... I thought Calcite does this.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2686#discussion_r527612309", "createdAt": "2020-11-20T10:55:02Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/opt/logical/LogicalRules.java", "diffHunk": "@@ -40,6 +41,7 @@ public static RuleSet getRuleSet() {\n                 FilterMergeRule.INSTANCE,\n                 FilterProjectTransposeRule.INSTANCE,\n                 FilterIntoScanLogicalRule.INSTANCE,\n+                ReduceExpressionsRule.FILTER_INSTANCE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUzMzc4MQ=="}, "originalCommit": {"oid": "97086d46bb774bb536548c067420cce5f12643f9"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4504, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}