{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNzUzNjk3", "number": 2682, "title": "Improve Kafka serde properties inference", "bodyText": "Added Kafka property inference for no key format.\nRefactored Kafka property inference so it does not fail without Kafka on the classpath.\nImproved tests.\nChecklist:\n\n Labels and Milestone set", "createdAt": "2020-11-19T08:00:28Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682", "merged": true, "mergeCommit": {"oid": "19f0d8dd04f31548483da6c08f10dda08a5e1990"}, "closed": true, "closedAt": "2020-11-19T08:37:58Z", "author": {"login": "gierlachg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd-CcEgH2gAyNTIzNzUzNjk3OjMzYTEwNWQyMzlmYjRhYzg0NzA1ZjhlMmQwOTQxYmY5MmFhMzA5ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd-d29AFqTUzNDE3ODI1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "33a105d239fb4ac84705f8e2d0941bf92aa309ec", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/33a105d239fb4ac84705f8e2d0941bf92aa309ec", "committedDate": "2020-11-19T07:57:49Z", "message": "Improve Kafka serde properties inference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTY3OTA1", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#pullrequestreview-534167905", "createdAt": "2020-11-19T08:13:19Z", "commit": {"oid": "33a105d239fb4ac84705f8e2d0941bf92aa309ec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoxMzoxOVrOH2RLEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODoxNDozMVrOH2RNuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NjUxMg==", "bodyText": "Do we care? It will fail sooner or later due to some NoClassDefFoundError. Especially the NullSerializer - it's not in kafka and we might rename/move it, the kafka serializers are unlikely to change FQN.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#discussion_r526666512", "createdAt": "2020-11-19T08:13:19Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/kafka/PropertiesResolver.java", "diffHunk": "@@ -49,11 +34,34 @@\n     static final String VALUE_SERIALIZER = \"value.serializer\";\n     static final String VALUE_DESERIALIZER = \"value.deserializer\";\n \n-    static final String AVRO_SERIALIZER = \"io.confluent.kafka.serializers.KafkaAvroSerializer\";\n-    static final String AVRO_DESERIALIZER = \"io.confluent.kafka.serializers.KafkaAvroDeserializer\";\n+    // using strings instead of canonical names to not fail without Kafka on the classpath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a105d239fb4ac84705f8e2d0941bf92aa309ec"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY2NzE5Mg==", "bodyText": "NullSerializer might be OK, we'll never try to write to the key. But NullDeserializer isn't, the key might be there, we just don't map it. I used ByteArrayDeserializer and ByteArraySerializer, these work with any data.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#discussion_r526667192", "createdAt": "2020-11-19T08:14:31Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/kafka/PropertiesResolver.java", "diffHunk": "@@ -62,49 +70,51 @@ static Properties resolveProperties(Map<String, String> options) {\n         Properties properties = new Properties();\n         properties.putAll(options);\n \n-        properties(options, true).forEach(properties::putIfAbsent);\n-        properties(options, false).forEach(properties::putIfAbsent);\n+        withSerdeProperties(true, options, properties);\n+        withSerdeProperties(false, options, properties);\n \n         return properties;\n     }\n \n-    private static Map<String, String> properties(Map<String, String> options, boolean isKey) {\n-        Map<String, String> properties = new HashMap<>();\n-\n+    private static void withSerdeProperties(\n+            boolean isKey,\n+            Map<String, String> options,\n+            Properties properties\n+    ) {\n         String serializer = isKey ? KEY_SERIALIZER : VALUE_SERIALIZER;\n         String deserializer = isKey ? KEY_DESERIALIZER : VALUE_DESERIALIZER;\n \n         String format = options.get(isKey ? OPTION_KEY_FORMAT : OPTION_VALUE_FORMAT);\n-        if (JAVA_FORMAT.equals(format)) {\n+        if (format == null && isKey) {\n+            properties.putIfAbsent(serializer, NULL_SERIALIZER);\n+            properties.putIfAbsent(deserializer, NULL_DESERIALIZER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a105d239fb4ac84705f8e2d0941bf92aa309ec"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d03cde7cc831f9e2ff77cad711ff6adbe7ef2b03", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d03cde7cc831f9e2ff77cad711ff6adbe7ef2b03", "committedDate": "2020-11-19T08:23:11Z", "message": "Using byte array (de) serializers as null serializers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTc4MjU2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2682#pullrequestreview-534178256", "createdAt": "2020-11-19T08:27:46Z", "commit": {"oid": "d03cde7cc831f9e2ff77cad711ff6adbe7ef2b03"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3547, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}