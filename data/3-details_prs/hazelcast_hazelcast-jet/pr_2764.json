{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjAxODg5", "number": 2764, "title": "Re-assign InputSplits on members for LocalFileSystem", "bodyText": "When reading local files using Hadoop, the source splits the input on one of the members and distributes those splits to other members, ignoring the files on other members. With the fix, source splits the input on all members if the input belongs to local file system.\nWe've also introduced a property HadoopSources.SHARED_LOCAL_FS. It can be used to mark the local file system as shared (e.g multiple members on a machine).\nChecklist:\n\n Labels and Milestone set\n Added a line in hazelcast-jet-distribution/src/root/release_notes.txt (for any non-trivial fix/enhancement/feature)\n New public APIs have @Nonnull/@Nullable annotations\n New public APIs have @since tags in Javadoc\n Updated examples/README.md (when adding a new code sample)", "createdAt": "2020-12-28T19:00:23Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764", "merged": true, "mergeCommit": {"oid": "c79ed3d8e8074331a8ea2e5c1e4dab70a12960b8"}, "closed": true, "closedAt": "2021-01-05T16:42:16Z", "author": {"login": "gurbuzali"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqqXf4AH2gAyNTQ2MjAxODg5OmNkMjJmZGM4OWFmMzI1NmU4ODY2MTgzZjQ1NTE4MjhlOGQwMmMyNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtMSx4AH2gAyNTQ2MjAxODg5OmQ3MTNhZTc0MzNlNDI2ODgzOTUyYWE0ZWQ1YTg1NDcwNTExZGIwMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd22fdc89af3256e8866183f4551828e8d02c24d", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/cd22fdc89af3256e8866183f4551828e8d02c24d", "committedDate": "2020-12-28T18:23:44Z", "message": "re-assign input splits on members if all the input paths are of the local file system"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98803a2e7816fa3553854ad512bbfa8b34c98690", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/98803a2e7816fa3553854ad512bbfa8b34c98690", "committedDate": "2020-12-28T18:47:00Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60621a44994efff22c7b53e606efa84b0a72c78c", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/60621a44994efff22c7b53e606efa84b0a72c78c", "committedDate": "2020-12-28T19:02:54Z", "message": "add since tag for HadoopSources.SHARED_LOCAL_FS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/257fc7e81fac91d8de12125d2ba95c6da7b22301", "committedDate": "2020-12-28T19:27:38Z", "message": "sink test fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODMzMzMx", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#pullrequestreview-560833331", "createdAt": "2021-01-04T07:59:13Z", "commit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNzo1OToxNFrOINoS2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoxMzozM1rOIOMXFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE2MjU4NQ==", "bodyText": "This is a change in the Hadoop connector behavior, right? Maybe we should default to true, which is current behavior.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551162585", "createdAt": "2021-01-04T07:59:14Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/HadoopSources.java", "diffHunk": "@@ -62,12 +62,30 @@\n      *\n      * <pre>{@code\n      *     Configuration conf = new Configuration();\n-     *     conf.set(HadoopSources.COPY_ON_READ, \"false\");\n+     *     conf.setBoolean(HadoopSources.COPY_ON_READ, false);\n      *     BatchSource<Entry<K, V>> source = HadoopSources.inputFormat(conf);\n      * }</pre>\n      */\n     public static final String COPY_ON_READ = \"jet.source.copyonread\";\n \n+    /**\n+     * When reading files from local file system using Hadoop, each processor\n+     * reads files from its own local file system. If the local file system\n+     * is shared between members, e.g multiple members on a machine, you should\n+     * configure this property as {@code true}.\n+     * <p>\n+     * Here is how you can configure the source. Default value is {@code false}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0OTMyMQ==", "bodyText": "AFAIK we don't recommend running multiple members on a single machine, so the javadoc should give a better example, e.g. NFS mounted filesystem or similar.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551749321", "createdAt": "2021-01-05T07:00:06Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/HadoopSources.java", "diffHunk": "@@ -62,12 +62,30 @@\n      *\n      * <pre>{@code\n      *     Configuration conf = new Configuration();\n-     *     conf.set(HadoopSources.COPY_ON_READ, \"false\");\n+     *     conf.setBoolean(HadoopSources.COPY_ON_READ, false);\n      *     BatchSource<Entry<K, V>> source = HadoopSources.inputFormat(conf);\n      * }</pre>\n      */\n     public static final String COPY_ON_READ = \"jet.source.copyonread\";\n \n+    /**\n+     * When reading files from local file system using Hadoop, each processor\n+     * reads files from its own local file system. If the local file system\n+     * is shared between members, e.g multiple members on a machine, you should", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1MDE5OQ==", "bodyText": "This still happens on the coordinator node, the reassign must be in get(int) method.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551750199", "createdAt": "2021-01-05T07:03:09Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHadoopNewApiP.java", "diffHunk": "@@ -206,7 +214,7 @@ private Supplier(\n         ) {\n             this.configuration = configuration;\n             this.projectionFn = projectionFn;\n-            this.assignedSplits = assignedSplits;\n+            this.assignedSplits = reAssignSplits(assignedSplits);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1MDkwMQ==", "bodyText": "Maybe just use a regular for instead of stream().map(...) - mutating in map is a code smell.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551750901", "createdAt": "2021-01-05T07:05:30Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHadoopNewApiP.java", "diffHunk": "@@ -225,6 +233,30 @@ private Supplier(\n                             }\n                     ).collect(toList());\n         }\n+\n+        private List<IndexedInputSplit> reAssignSplits(List<IndexedInputSplit> assignedSplits) {\n+            // If the local file system is marked as shared, no re-assign\n+            if (configuration.getBoolean(HadoopSources.SHARED_LOCAL_FS, false)) {\n+                return assignedSplits;\n+            }\n+            try {\n+                // If any of the input paths do not belong to LocalFileSystem, no re-assign\n+                Job job = Job.getInstance(configuration);\n+                Path[] inputPaths = FileInputFormat.getInputPaths(job);\n+                for (Path inputPath : inputPaths) {\n+                    if (!(inputPath.getFileSystem(configuration) instanceof LocalFileSystem)) {\n+                        return assignedSplits;\n+                    }\n+                }\n+\n+                // re-assign the splits\n+                int[] index = new int[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1MTk1Nw==", "bodyText": "Ha! It's correct here in the ReadHadoopOldApiP", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551751957", "createdAt": "2021-01-05T07:08:37Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHadoopOldApiP.java", "diffHunk": "@@ -148,20 +140,91 @@ public void init(@Nonnull Context context) throws Exception {\n         @Override\n         @Nonnull\n         public List<Processor> get(int count) {\n-            Map<Integer, List<IndexedInputSplit>> processorToSplits = Util.distributeObjects(count, assignedSplits);\n-            InputFormat inputFormat = jobConf.getInputFormat();\n-            Processor noopProcessor = Processors.noopP().get();\n-\n+            List<IndexedInputSplit> reAssignedSplits = reAssignSplits(assignedSplits, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1MzQ5Mg==", "bodyText": "The shared FS flag is set to false, maybe we should always reassign and forbid non-local FS & shared=false combination.\nAlso we can avoid assigning the splits in meta supplier if we assign them here.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551753492", "createdAt": "2021-01-05T07:13:33Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHadoopNewApiP.java", "diffHunk": "@@ -225,6 +233,30 @@ private Supplier(\n                             }\n                     ).collect(toList());\n         }\n+\n+        private List<IndexedInputSplit> reAssignSplits(List<IndexedInputSplit> assignedSplits) {\n+            // If the local file system is marked as shared, no re-assign\n+            if (configuration.getBoolean(HadoopSources.SHARED_LOCAL_FS, false)) {\n+                return assignedSplits;\n+            }\n+            try {\n+                // If any of the input paths do not belong to LocalFileSystem, no re-assign\n+                Job job = Job.getInstance(configuration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNTYzMTQ1", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#pullrequestreview-561563145", "createdAt": "2021-01-05T07:25:38Z", "commit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNTozOFrOIOMmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNTozOFrOIOMmBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzMxOA==", "bodyText": "Can this ever be RawLocalFileSystem?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#discussion_r551757318", "createdAt": "2021-01-05T07:25:38Z", "author": {"login": "frant-hartm"}, "path": "extensions/hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHadoopNewApiP.java", "diffHunk": "@@ -225,6 +233,30 @@ private Supplier(\n                             }\n                     ).collect(toList());\n         }\n+\n+        private List<IndexedInputSplit> reAssignSplits(List<IndexedInputSplit> assignedSplits) {\n+            // If the local file system is marked as shared, no re-assign\n+            if (configuration.getBoolean(HadoopSources.SHARED_LOCAL_FS, false)) {\n+                return assignedSplits;\n+            }\n+            try {\n+                // If any of the input paths do not belong to LocalFileSystem, no re-assign\n+                Job job = Job.getInstance(configuration);\n+                Path[] inputPaths = FileInputFormat.getInputPaths(job);\n+                for (Path inputPath : inputPaths) {\n+                    if (!(inputPath.getFileSystem(configuration) instanceof LocalFileSystem)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257fc7e81fac91d8de12125d2ba95c6da7b22301"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63e680c05f0f4dcd55412a483ea515ca86e8b15", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b63e680c05f0f4dcd55412a483ea515ca86e8b15", "committedDate": "2021-01-05T12:40:12Z", "message": "review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODMzMDMy", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2764#pullrequestreview-561833032", "createdAt": "2021-01-05T14:29:46Z", "commit": {"oid": "b63e680c05f0f4dcd55412a483ea515ca86e8b15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d713ae7433e426883952aa4ed5a85470511db012", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d713ae7433e426883952aa4ed5a85470511db012", "committedDate": "2021-01-05T15:03:12Z", "message": "shared -> remote"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3442, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}