{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NTgyOTE5", "number": 2288, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDozM1rOEBwi4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMjoyNFrOEBwnEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjc5MzkyOnYy", "diffSide": "RIGHT", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDozM1rOGdzCxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDozM1rOGdzCxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODE4Mg==", "bodyText": "Can we use something like:\n        assertThatThrownBy(() -> submitJob(p))\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\n                .hasStackTraceContaining(\"failed to authenticate user [elastic]\");", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898182", "createdAt": "2020-06-02T14:00:33Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjc5NDk0OnYy", "diffSide": "RIGHT", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDo0NVrOGdzDfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDo0NVrOGdzDfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODM2Ng==", "bodyText": "Same here", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898366", "createdAt": "2020-06-02T14:00:45Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }\n+    }\n+\n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkDeleteRequest_then_jobShouldFail() throws Exception {\n+        Sink<String> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                (item) -> new DeleteRequest(\"my-index\", item)\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(\"notExist\"))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjgwNDY2OnYy", "diffSide": "RIGHT", "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMjoyNFrOGdzJ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMjoyNFrOGdzJ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwMDAwMQ==", "bodyText": "Sharp-eyed! Thanks!", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433900001", "createdAt": "2020-06-02T14:02:24Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "diffHunk": "@@ -76,7 +76,7 @@ public void given_authenticatedClient_whenWriteToElasticSink_thenFinishSuccessfu\n     }\n \n     @Test\n-    public void given_clientWithWrongPassword_whenReadFromElasticSource_thenFailWithAuthenticationException() {\n+    public void given_clientWithWrongPassword_whenWriteToElasticSink_thenFailWithAuthenticationException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4596, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}