{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTI3MjE2", "number": 2642, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNToxOTowN1rOE1tF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNToxOTowN1rOE1tF6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzQ4Nzc5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateSnapshot.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNToxOTowN1rOHuIMgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo0ODozNVrOHuutaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMDgxNg==", "bodyText": "Throw SqlValidatorException (see ParserResource)?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2642#discussion_r518130816", "createdAt": "2020-11-05T15:19:07Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateSnapshot.java", "diffHunk": "@@ -45,10 +46,15 @@\n     public SqlCreateSnapshot(\n             SqlIdentifier snapshotName,\n             SqlIdentifier jobName,\n+            boolean replace,\n             SqlParserPos pos\n     ) {\n         super(OPERATOR, pos, true, false);\n \n+        if (!replace) {\n+            throw QueryException.error(\"The OR REPLACE option is required for CREATE SNAPSHOT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83b0413da238abc887ecf755b31225efdd1b400e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NTM0Ng==", "bodyText": "I don't like the indirection much, I don't see a benefit to it. It technically isn't a validator exception, but parsing exc: the parser fails to create a SqlNode.\nWe do this style already, for example here: \n  \n    \n      hazelcast-jet/hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateJob.java\n    \n    \n         Line 117\n      in\n      4ec1e18\n    \n    \n    \n    \n\n        \n          \n           throw QueryException.error(\"Unknown job option: \" + key); \n        \n    \n  \n\n\nThe user will receive HazelcastSqlException with code=PARSING anyway.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2642#discussion_r518585346", "createdAt": "2020-11-06T08:12:28Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateSnapshot.java", "diffHunk": "@@ -45,10 +46,15 @@\n     public SqlCreateSnapshot(\n             SqlIdentifier snapshotName,\n             SqlIdentifier jobName,\n+            boolean replace,\n             SqlParserPos pos\n     ) {\n         super(OPERATOR, pos, true, false);\n \n+        if (!replace) {\n+            throw QueryException.error(\"The OR REPLACE option is required for CREATE SNAPSHOT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMDgxNg=="}, "originalCommit": {"oid": "83b0413da238abc887ecf755b31225efdd1b400e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4NzM0Ng==", "bodyText": "Exactly, if it's a parsing one maybe we should throw a parsing exception, giving user position etc., QueryException does not seem to be fitted to that.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2642#discussion_r518587346", "createdAt": "2020-11-06T08:17:00Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateSnapshot.java", "diffHunk": "@@ -45,10 +46,15 @@\n     public SqlCreateSnapshot(\n             SqlIdentifier snapshotName,\n             SqlIdentifier jobName,\n+            boolean replace,\n             SqlParserPos pos\n     ) {\n         super(OPERATOR, pos, true, false);\n \n+        if (!replace) {\n+            throw QueryException.error(\"The OR REPLACE option is required for CREATE SNAPSHOT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMDgxNg=="}, "originalCommit": {"oid": "83b0413da238abc887ecf755b31225efdd1b400e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc2MTgzMw==", "bodyText": "Got it, fixed. But the exception marks the whole command...", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2642#discussion_r518761833", "createdAt": "2020-11-06T13:48:35Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/parse/SqlCreateSnapshot.java", "diffHunk": "@@ -45,10 +46,15 @@\n     public SqlCreateSnapshot(\n             SqlIdentifier snapshotName,\n             SqlIdentifier jobName,\n+            boolean replace,\n             SqlParserPos pos\n     ) {\n         super(OPERATOR, pos, true, false);\n \n+        if (!replace) {\n+            throw QueryException.error(\"The OR REPLACE option is required for CREATE SNAPSHOT\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODEzMDgxNg=="}, "originalCommit": {"oid": "83b0413da238abc887ecf755b31225efdd1b400e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4444, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}