{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDIxODA2", "number": 2161, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToyMlrODwZ_Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozMjozMVrODxn2Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzOTcwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToyMlrOGDY0Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToyMlrOGDY0Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTQ3NA==", "bodyText": "Double space", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406205474", "createdAt": "2020-04-09T13:31:22Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b32b2a1350521e534923c00a457f3e5b85715c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0MDU5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTozM1rOGDY0qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTozM1rOGDY0qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTYxMQ==", "bodyText": "We can add @Nonnull annotation for the method and @Nullable for object parameter.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406205611", "createdAt": "2020-04-09T13:31:33Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b32b2a1350521e534923c00a457f3e5b85715c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0ODMwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoxNFrOGDY5cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoxNFrOGDY5cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjgzMw==", "bodyText": "requireNonNullAndSerializable would better match the standard Objects.requireNonNull. We can also use it inside the method...", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r406206833", "createdAt": "2020-04-09T13:33:14Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -182,6 +182,32 @@ public static void checkSerializable(Object object, String objectName) {\n         }\n     }\n \n+    /**\n+     * Checks that the {@code object} is not null and  implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52b32b2a1350521e534923c00a457f3e5b85715c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzU5NjM0OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozMjozMVrOGFMWEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjozMjozMVrOGFMWEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5ODMyMw==", "bodyText": "can we add Nullable / Nonnull annotations to these methods?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2161#discussion_r408098323", "createdAt": "2020-04-14T12:32:31Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -180,6 +181,33 @@ public static void checkSerializable(Object object, String objectName) {\n             // never really thrown, as the underlying stream never throws it\n             throw new JetException(e);\n         }\n+        return object;\n+    }\n+\n+    /**\n+     * Checks that the {@code object} is not null and implements\n+     * {@link Serializable} and is correctly serializable by actually\n+     * trying to serialize it. This will reveal some non-serializable\n+     * field early.\n+     * <p>\n+     * Usage:\n+     * <pre>{@code\n+     * void setValue(@Nonnull Object value) {\n+     *     this.value = checkNonNullAndSerializable(value, \"value\");\n+     * }\n+     * }</pre>\n+     *\n+     * @param object     object to check\n+     * @param objectName object description for the exception\n+     * @return given object\n+     * @throws IllegalArgumentException if {@code object} is not serializable\n+     */\n+    public static <T> T checkNonNullAndSerializable(T object, String objectName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55b6a7803dbca59e1d15306dc564aa54ad1f2cb5"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4799, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}