{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NzY4NzUy", "number": 2689, "title": "Check IMap security for sql", "bodyText": "Fixes #2662", "createdAt": "2020-11-20T15:10:57Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689", "merged": true, "mergeCommit": {"oid": "95f890b18f52065070904ad65587fef0d17ab9b9"}, "closed": true, "closedAt": "2020-11-23T08:53:42Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeY0rAgH2gAyNTI0NzY4NzUyOmFmZjYzZGYxYTBiZDFmNzNiNGJmOGYyN2NmM2E5YmY4MzA3MjQ3MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfQMLMAFqTUzNjIyNTcwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e", "committedDate": "2020-11-20T15:10:13Z", "message": "Check IMap security for sql\n\nFixes #2662"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTIxNjM2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689#pullrequestreview-535521636", "createdAt": "2020-11-20T15:22:16Z", "commit": {"oid": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNToyMjoxNlrOH3UIgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNToyMjoxNlrOH3UIgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc2MzU4Nw==", "bodyText": "Can't we use visit(LogicalTableModify modify)? Maybe we could skip the table != null condition in addPermissionForTable.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689#discussion_r527763587", "createdAt": "2020-11-20T15:22:16Z", "author": {"login": "gierlachg"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/JetSqlBackend.java", "diffHunk": "@@ -228,17 +235,49 @@ private ExecutionPlan toPlan(RelNode rel, List<String> fieldNames, OptimizerCont\n         boolean isStreaming = containsStreamSource(rel);\n         boolean isInsert = physicalRel instanceof TableModify;\n \n+        List<Permission> permissions = extractPermissions(physicalRel);\n         if (isInsert) {\n             DAG dag = createDag(physicalRel);\n-            return new ExecutionPlan(dag, isStreaming, true, null, null, planExecutor);\n+            return new ExecutionPlan(dag, isStreaming, true, null, null, planExecutor, permissions);\n         } else {\n             QueryId queryId = QueryId.create(nodeEngine.getLocalMember().getUuid());\n             DAG dag = createDag(new JetRootRel(physicalRel, nodeEngine.getThisAddress(), queryId));\n             SqlRowMetadata rowMetadata = createRowMetadata(fieldNames, physicalRel.schema().getTypes());\n-            return new ExecutionPlan(dag, isStreaming, false, queryId, rowMetadata, planExecutor);\n+            return new ExecutionPlan(dag, isStreaming, false, queryId, rowMetadata, planExecutor, permissions);\n         }\n     }\n \n+    private List<Permission> extractPermissions(PhysicalRel physicalRel) {\n+        List<Permission> permissions = new ArrayList<>();\n+\n+        physicalRel.accept(new RelShuttleImpl() {\n+            @Override\n+            public RelNode visit(TableScan scan) {\n+                addPermissionForTable(scan.getTable(), ActionConstants.ACTION_READ);\n+                return super.visit(scan);\n+            }\n+\n+            @Override\n+            public RelNode visit(RelNode other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjI1NzA4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2689#pullrequestreview-536225708", "createdAt": "2020-11-23T07:40:40Z", "commit": {"oid": "aff63df1a0bd1f73b4bf8f27cf3a9bf83072472e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3551, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}