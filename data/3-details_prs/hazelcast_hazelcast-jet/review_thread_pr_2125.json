{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjIzMTI1", "number": 2125, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDowMDowM1rODtdkgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxOTo0OFrODuQ1gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTk2OTk1OnYy", "diffSide": "RIGHT", "path": "site/docs/api/spring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDowMDowM1rOF-5dfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDowMDowM1rOF-5dfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ5NzQ2OA==", "bodyText": "space needed here ?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r401497468", "createdAt": "2020-04-01T10:00:03Z", "author": {"login": "eminn"}, "path": "site/docs/api/spring.md", "diffHunk": "@@ -328,3 +328,23 @@ attributes.\n     </jet:client>\n </beans>\n ```\n+\n+## SpringBoot Integration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e94b93ccba3df0793b8172c3a0c8bd7c58978146"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzcyMTk5OnYy", "diffSide": "RIGHT", "path": "site/docs/api/spring.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo1Njo0OFrOF_do2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMzowNDo0OVrOGADjzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5MDIwMA==", "bodyText": "can we give an example how to use it? needs to show what dependency to add and how it's used inside spring code.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402090200", "createdAt": "2020-04-02T06:56:48Z", "author": {"login": "cangencer"}, "path": "site/docs/api/spring.md", "diffHunk": "@@ -328,3 +328,23 @@ attributes.\n     </jet:client>\n </beans>\n ```\n+\n+## SpringBoot Integration\n+\n+Hazelcast Jet provides\n+[Hazelcast Jet Spring Boot Starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter)\n+which automatically configures and starts a `JetInstance`, either a\n+server or a client, if Jet is on the classpath.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e94b93ccba3df0793b8172c3a0c8bd7c58978146"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxMTUwMQ==", "bodyText": "I've added a tutorial and linked it here", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402711501", "createdAt": "2020-04-03T03:04:49Z", "author": {"login": "gurbuzali"}, "path": "site/docs/api/spring.md", "diffHunk": "@@ -328,3 +328,23 @@ attributes.\n     </jet:client>\n </beans>\n ```\n+\n+## SpringBoot Integration\n+\n+Hazelcast Jet provides\n+[Hazelcast Jet Spring Boot Starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter)\n+which automatically configures and starts a `JetInstance`, either a\n+server or a client, if Jet is on the classpath.\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5MDIwMA=="}, "originalCommit": {"oid": "e94b93ccba3df0793b8172c3a0c8bd7c58978146"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODI5MDUwOnYy", "diffSide": "RIGHT", "path": "site/docs/tutorials/spring-boot.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowNzoxMVrOGAJrng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODowODowMVrOGAJuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxMTgwNg==", "bodyText": "Do we need this @RestController since we are not defining any endpoints ?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402811806", "createdAt": "2020-04-03T08:07:11Z", "author": {"login": "eminn"}, "path": "site/docs/tutorials/spring-boot.md", "diffHunk": "@@ -0,0 +1,181 @@\n+---\n+title: Spring Boot Starter \n+description: How to auto-configure Jet in Spring Boot Application\n+---\n+\n+Spring Boot makes it easy to create and use third-party libraries, such\n+as Hazelcast Jet, with minimum configurations possible. While Spring\n+Boot provides starters for some libraries, Hazelcast Jet hosts its own\n+[starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter).\n+\n+Let's create a simple Spring Boot application which starts a Jet\n+instance and auto-wires it.\n+\n+## 1. Create a New Java Project\n+\n+We assume you're using an IDE. Create a blank Java project named\n+`tutorial-jet-starter` and copy the Gradle or Maven file into it:\n+\n+<!--DOCUSAURUS_CODE_TABS-->\n+\n+<!--Gradle-->\n+\n+```groovy\n+plugins {\n+  id 'org.springframework.boot' version '2.2.6.RELEASE'\n+  id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n+  id 'java'\n+}\n+group = 'org.example'\n+version '1.0-SNAPSHOT'\n+\n+repositories.mavenCentral()\n+\n+dependencies {\n+  compile 'com.hazelcast.jet.contrib:hazelcast-jet-spring-boot-starter:2.0.0'  \n+}\n+```\n+\n+<!--Maven-->\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>tutorial-jet-starter</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hazelcast.jet.contrib</groupId>\n+            <artifactId>hazelcast-jet-spring-boot-starter</artifactId>\n+            <version>2.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n+```\n+\n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n+## 2. Create the Application Main Class\n+\n+The following code creates a Spring Boot application which starts a Jet\n+member with default configuration.\n+\n+```java\n+package org.example;\n+\n+import com.hazelcast.jet.JetInstance;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02594bf72d262a21c420130852a53578d129756b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxMjUxMg==", "bodyText": "it's a leftover", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402812512", "createdAt": "2020-04-03T08:08:01Z", "author": {"login": "gurbuzali"}, "path": "site/docs/tutorials/spring-boot.md", "diffHunk": "@@ -0,0 +1,181 @@\n+---\n+title: Spring Boot Starter \n+description: How to auto-configure Jet in Spring Boot Application\n+---\n+\n+Spring Boot makes it easy to create and use third-party libraries, such\n+as Hazelcast Jet, with minimum configurations possible. While Spring\n+Boot provides starters for some libraries, Hazelcast Jet hosts its own\n+[starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter).\n+\n+Let's create a simple Spring Boot application which starts a Jet\n+instance and auto-wires it.\n+\n+## 1. Create a New Java Project\n+\n+We assume you're using an IDE. Create a blank Java project named\n+`tutorial-jet-starter` and copy the Gradle or Maven file into it:\n+\n+<!--DOCUSAURUS_CODE_TABS-->\n+\n+<!--Gradle-->\n+\n+```groovy\n+plugins {\n+  id 'org.springframework.boot' version '2.2.6.RELEASE'\n+  id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n+  id 'java'\n+}\n+group = 'org.example'\n+version '1.0-SNAPSHOT'\n+\n+repositories.mavenCentral()\n+\n+dependencies {\n+  compile 'com.hazelcast.jet.contrib:hazelcast-jet-spring-boot-starter:2.0.0'  \n+}\n+```\n+\n+<!--Maven-->\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>tutorial-jet-starter</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hazelcast.jet.contrib</groupId>\n+            <artifactId>hazelcast-jet-spring-boot-starter</artifactId>\n+            <version>2.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n+```\n+\n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n+## 2. Create the Application Main Class\n+\n+The following code creates a Spring Boot application which starts a Jet\n+member with default configuration.\n+\n+```java\n+package org.example;\n+\n+import com.hazelcast.jet.JetInstance;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgxMTgwNg=="}, "originalCommit": {"oid": "02594bf72d262a21c420130852a53578d129756b"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODM2OTI5OnYy", "diffSide": "RIGHT", "path": "site/docs/tutorials/spring-boot.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoxOTo0OFrOGAKWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODozMzoyMVrOGALEKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyMjgzNQ==", "bodyText": "This doesn't seem like a correct yaml configuration", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402822835", "createdAt": "2020-04-03T08:19:48Z", "author": {"login": "eminn"}, "path": "site/docs/tutorials/spring-boot.md", "diffHunk": "@@ -0,0 +1,179 @@\n+---\n+title: Spring Boot Starter \n+description: How to auto-configure Jet in Spring Boot Application\n+---\n+\n+Spring Boot makes it easy to create and use third-party libraries, such\n+as Hazelcast Jet, with minimum configurations possible. While Spring\n+Boot provides starters for some libraries, Hazelcast Jet hosts its own\n+[starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter).\n+\n+Let's create a simple Spring Boot application which starts a Jet\n+instance and auto-wires it.\n+\n+## 1. Create a New Java Project\n+\n+We assume you're using an IDE. Create a blank Java project named\n+`tutorial-jet-starter` and copy the Gradle or Maven file into it:\n+\n+<!--DOCUSAURUS_CODE_TABS-->\n+\n+<!--Gradle-->\n+\n+```groovy\n+plugins {\n+  id 'org.springframework.boot' version '2.2.6.RELEASE'\n+  id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n+  id 'java'\n+}\n+group = 'org.example'\n+version '1.0-SNAPSHOT'\n+\n+repositories.mavenCentral()\n+\n+dependencies {\n+  compile 'com.hazelcast.jet.contrib:hazelcast-jet-spring-boot-starter:2.0.0'  \n+}\n+```\n+\n+<!--Maven-->\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>tutorial-jet-starter</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hazelcast.jet.contrib</groupId>\n+            <artifactId>hazelcast-jet-spring-boot-starter</artifactId>\n+            <version>2.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n+```\n+\n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n+## 2. Create the Application Main Class\n+\n+The following code creates a Spring Boot application which starts a Jet\n+member with default configuration.\n+\n+```java\n+package org.example;\n+\n+import com.hazelcast.jet.JetInstance;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class TutorialApplication {\n+\n+    @Autowired\n+    JetInstance jetInstance;\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(TutorialApplication.class, args);\n+    }\n+}\n+```\n+\n+When you run it on your IDE, you should see in the logs that a Jet\n+member is started and the default configuration file is used:\n+\n+```text\n+...\n+c.h.i.config.AbstractConfigLocator       : Loading 'hazelcast-jet-default.xml' from the classpath.\n+...\n+com.hazelcast.core.LifecycleService      : [127.0.0.1]:5701 [jet] [4.0] [127.0.0.1]:5701 is STARTED\n+...\n+```\n+\n+## 3. Custom Configuration\n+\n+Let's add some custom configuration to our Jet member by defining a\n+configuration file named `hazelcast-jet.yaml` at the root directory.\n+\n+```yaml\n+hazelcast-jet:\n+  instance:\n+    cooperative-thread-count: 4\n+  edge-defaults:\n+    queue-size: 2048\n+  hazelcast:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891bd047d0bc7c02aa698aa11a081c55765dc220"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgzMzQzMw==", "bodyText": "weird, it worked actually while writing the tutorial, I've observed that the there was a log cooperative-thread-count= 4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402833433", "createdAt": "2020-04-03T08:32:05Z", "author": {"login": "gurbuzali"}, "path": "site/docs/tutorials/spring-boot.md", "diffHunk": "@@ -0,0 +1,179 @@\n+---\n+title: Spring Boot Starter \n+description: How to auto-configure Jet in Spring Boot Application\n+---\n+\n+Spring Boot makes it easy to create and use third-party libraries, such\n+as Hazelcast Jet, with minimum configurations possible. While Spring\n+Boot provides starters for some libraries, Hazelcast Jet hosts its own\n+[starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter).\n+\n+Let's create a simple Spring Boot application which starts a Jet\n+instance and auto-wires it.\n+\n+## 1. Create a New Java Project\n+\n+We assume you're using an IDE. Create a blank Java project named\n+`tutorial-jet-starter` and copy the Gradle or Maven file into it:\n+\n+<!--DOCUSAURUS_CODE_TABS-->\n+\n+<!--Gradle-->\n+\n+```groovy\n+plugins {\n+  id 'org.springframework.boot' version '2.2.6.RELEASE'\n+  id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n+  id 'java'\n+}\n+group = 'org.example'\n+version '1.0-SNAPSHOT'\n+\n+repositories.mavenCentral()\n+\n+dependencies {\n+  compile 'com.hazelcast.jet.contrib:hazelcast-jet-spring-boot-starter:2.0.0'  \n+}\n+```\n+\n+<!--Maven-->\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>tutorial-jet-starter</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hazelcast.jet.contrib</groupId>\n+            <artifactId>hazelcast-jet-spring-boot-starter</artifactId>\n+            <version>2.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n+```\n+\n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n+## 2. Create the Application Main Class\n+\n+The following code creates a Spring Boot application which starts a Jet\n+member with default configuration.\n+\n+```java\n+package org.example;\n+\n+import com.hazelcast.jet.JetInstance;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class TutorialApplication {\n+\n+    @Autowired\n+    JetInstance jetInstance;\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(TutorialApplication.class, args);\n+    }\n+}\n+```\n+\n+When you run it on your IDE, you should see in the logs that a Jet\n+member is started and the default configuration file is used:\n+\n+```text\n+...\n+c.h.i.config.AbstractConfigLocator       : Loading 'hazelcast-jet-default.xml' from the classpath.\n+...\n+com.hazelcast.core.LifecycleService      : [127.0.0.1]:5701 [jet] [4.0] [127.0.0.1]:5701 is STARTED\n+...\n+```\n+\n+## 3. Custom Configuration\n+\n+Let's add some custom configuration to our Jet member by defining a\n+configuration file named `hazelcast-jet.yaml` at the root directory.\n+\n+```yaml\n+hazelcast-jet:\n+  instance:\n+    cooperative-thread-count: 4\n+  edge-defaults:\n+    queue-size: 2048\n+  hazelcast:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyMjgzNQ=="}, "originalCommit": {"oid": "891bd047d0bc7c02aa698aa11a081c55765dc220"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgzNDQ3Mg==", "bodyText": "I mean the hazelcast part", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2125#discussion_r402834472", "createdAt": "2020-04-03T08:33:21Z", "author": {"login": "eminn"}, "path": "site/docs/tutorials/spring-boot.md", "diffHunk": "@@ -0,0 +1,179 @@\n+---\n+title: Spring Boot Starter \n+description: How to auto-configure Jet in Spring Boot Application\n+---\n+\n+Spring Boot makes it easy to create and use third-party libraries, such\n+as Hazelcast Jet, with minimum configurations possible. While Spring\n+Boot provides starters for some libraries, Hazelcast Jet hosts its own\n+[starter](https://github.com/hazelcast/hazelcast-jet-contrib/tree/master/hazelcast-jet-spring-boot-starter).\n+\n+Let's create a simple Spring Boot application which starts a Jet\n+instance and auto-wires it.\n+\n+## 1. Create a New Java Project\n+\n+We assume you're using an IDE. Create a blank Java project named\n+`tutorial-jet-starter` and copy the Gradle or Maven file into it:\n+\n+<!--DOCUSAURUS_CODE_TABS-->\n+\n+<!--Gradle-->\n+\n+```groovy\n+plugins {\n+  id 'org.springframework.boot' version '2.2.6.RELEASE'\n+  id 'io.spring.dependency-management' version '1.0.9.RELEASE'\n+  id 'java'\n+}\n+group = 'org.example'\n+version '1.0-SNAPSHOT'\n+\n+repositories.mavenCentral()\n+\n+dependencies {\n+  compile 'com.hazelcast.jet.contrib:hazelcast-jet-spring-boot-starter:2.0.0'  \n+}\n+```\n+\n+<!--Maven-->\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>tutorial-jet-starter</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.hazelcast.jet.contrib</groupId>\n+            <artifactId>hazelcast-jet-spring-boot-starter</artifactId>\n+            <version>2.0.0</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n+```\n+\n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n+## 2. Create the Application Main Class\n+\n+The following code creates a Spring Boot application which starts a Jet\n+member with default configuration.\n+\n+```java\n+package org.example;\n+\n+import com.hazelcast.jet.JetInstance;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class TutorialApplication {\n+\n+    @Autowired\n+    JetInstance jetInstance;\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(TutorialApplication.class, args);\n+    }\n+}\n+```\n+\n+When you run it on your IDE, you should see in the logs that a Jet\n+member is started and the default configuration file is used:\n+\n+```text\n+...\n+c.h.i.config.AbstractConfigLocator       : Loading 'hazelcast-jet-default.xml' from the classpath.\n+...\n+com.hazelcast.core.LifecycleService      : [127.0.0.1]:5701 [jet] [4.0] [127.0.0.1]:5701 is STARTED\n+...\n+```\n+\n+## 3. Custom Configuration\n+\n+Let's add some custom configuration to our Jet member by defining a\n+configuration file named `hazelcast-jet.yaml` at the root directory.\n+\n+```yaml\n+hazelcast-jet:\n+  instance:\n+    cooperative-thread-count: 4\n+  edge-defaults:\n+    queue-size: 2048\n+  hazelcast:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyMjgzNQ=="}, "originalCommit": {"oid": "891bd047d0bc7c02aa698aa11a081c55765dc220"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4782, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}