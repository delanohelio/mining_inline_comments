{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzEyOTg0", "number": 2541, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDo0ODozMFrOElskgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDo0ODozMFrOElskgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTYzMDExOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/aggregate/AggregateOperationBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDo0ODozMFrOHVT3sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjoxNjoyNlrOHVYl1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwNzY5OA==", "bodyText": "In case you didn't consciously decide against it: maybe add labels to all such Javadoc links, to be consistent inside this entire class.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2541#discussion_r492107698", "createdAt": "2020-09-21T14:48:30Z", "author": {"login": "jbartok"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/aggregate/AggregateOperationBuilder.java", "diffHunk": "@@ -54,12 +54,12 @@\n     }\n \n     /**\n-     * Registers the supplied {@code accumulate} primitive. Also selects the\n-     * fixed-arity variant of the aggregate operation.\n+     * Registers the {@link AggregateOperation1#accumulateFn()} accumulate}\n+     * primitive. Also selects the fixed-arity variant of the aggregate\n+     * operation.\n      * <p>\n-     * This method is synonymous with {@link #andAccumulate0(\n-     *BiConsumerEx)}, but makes more sense when defining a\n-     * simple, arity-1 aggregate operation.\n+     * This method is synonymous with {@link #andAccumulate0(BiConsumerEx)},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e290e38bcc373b727ef3d884bcf2944b64a06ed"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTA0NA==", "bodyText": "Thanks, saved me another PR :)", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2541#discussion_r492185044", "createdAt": "2020-09-21T16:16:26Z", "author": {"login": "mtopolnik"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/aggregate/AggregateOperationBuilder.java", "diffHunk": "@@ -54,12 +54,12 @@\n     }\n \n     /**\n-     * Registers the supplied {@code accumulate} primitive. Also selects the\n-     * fixed-arity variant of the aggregate operation.\n+     * Registers the {@link AggregateOperation1#accumulateFn()} accumulate}\n+     * primitive. Also selects the fixed-arity variant of the aggregate\n+     * operation.\n      * <p>\n-     * This method is synonymous with {@link #andAccumulate0(\n-     *BiConsumerEx)}, but makes more sense when defining a\n-     * simple, arity-1 aggregate operation.\n+     * This method is synonymous with {@link #andAccumulate0(BiConsumerEx)},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwNzY5OA=="}, "originalCommit": {"oid": "5e290e38bcc373b727ef3d884bcf2944b64a06ed"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4580, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}