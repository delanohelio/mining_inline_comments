{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTY3MDcz", "number": 2163, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTowNDo1MVrODxyGjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTowNDo1MVrODxyGjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTI3NjkzOnYy", "diffSide": "RIGHT", "path": "site/docs/design-docs/007-grpc-support.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTowNDo1MVrOGFc2ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMjozODozN1rOGF3t8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2ODgzNQ==", "bodyText": "Did we actually achieve this goal? Do we have some proof of good performance (apart from the lessons learned from the Python integration)?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2163#discussion_r408368835", "createdAt": "2020-04-14T19:04:51Z", "author": {"login": "frant-hartm"}, "path": "site/docs/design-docs/007-grpc-support.md", "diffHunk": "@@ -0,0 +1,191 @@\n+---\n+title: 007 - Extended gRPC Support\n+description: Improved support for working with gRPC services\n+---\n+\n+*Target Release*: 4.1\n+\n+## Goal\n+\n+Provide a convenient way to call gRPC services with good performance\n+as part of a pipeline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c42904800ed83458ea0a63f545012963ebf4647"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTg3NQ==", "bodyText": "I didn't get to have any time to do full benchmarks. @mtopolnik has some preliminary numbers. But it needs to be tested on a real cluster, with a non co-located service.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2163#discussion_r408629875", "createdAt": "2020-04-15T07:17:49Z", "author": {"login": "cangencer"}, "path": "site/docs/design-docs/007-grpc-support.md", "diffHunk": "@@ -0,0 +1,191 @@\n+---\n+title: 007 - Extended gRPC Support\n+description: Improved support for working with gRPC services\n+---\n+\n+*Target Release*: 4.1\n+\n+## Goal\n+\n+Provide a convenient way to call gRPC services with good performance\n+as part of a pipeline.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2ODgzNQ=="}, "originalCommit": {"oid": "3c42904800ed83458ea0a63f545012963ebf4647"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgwODk0NQ==", "bodyText": "I did a quick local bench and bidirectional is about 2x more throughput than unary.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2163#discussion_r408808945", "createdAt": "2020-04-15T12:38:37Z", "author": {"login": "cangencer"}, "path": "site/docs/design-docs/007-grpc-support.md", "diffHunk": "@@ -0,0 +1,191 @@\n+---\n+title: 007 - Extended gRPC Support\n+description: Improved support for working with gRPC services\n+---\n+\n+*Target Release*: 4.1\n+\n+## Goal\n+\n+Provide a convenient way to call gRPC services with good performance\n+as part of a pipeline.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2ODgzNQ=="}, "originalCommit": {"oid": "3c42904800ed83458ea0a63f545012963ebf4647"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4801, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}