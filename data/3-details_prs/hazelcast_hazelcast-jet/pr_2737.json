{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MjYwODUy", "number": 2737, "title": "Use static loggers and log with prefix", "bodyText": "We use dynamic names to create loggers, such as job-name, vertex-name. These created loggers are not cleaned after the job is finished. We've attempted to remove them but some log implementations does not provide removal of loggers once created. Thus, we should use static named loggers and add the dynamically changing information to the log message.\nFixes #2703 and #2730\nBreaking changes (list specific methods/types/messages):\n\nAPI\nclient protocol format\nserialized form\nsnapshot format\n\nChecklist:\n\n Labels and Milestone set\n Added a line in hazelcast-jet-distribution/src/root/release_notes.txt (for any non-trivial fix/enhancement/feature)\n New public APIs have @Nonnull/@Nullable annotations\n New public APIs have @since tags in Javadoc\n Updated examples/README.md (when adding a new code sample)", "createdAt": "2020-12-08T08:25:31Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737", "merged": true, "mergeCommit": {"oid": "367f330efda32113d0ac8337e0797cd9d59da0dd"}, "closed": true, "closedAt": "2020-12-16T09:55:34Z", "author": {"login": "gurbuzali"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkcaMuAFqTU0ODAyMjg0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmrpTDgFqTU1MzQyNjgzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDIyODQx", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#pullrequestreview-548022841", "createdAt": "2020-12-09T10:05:56Z", "commit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDowNTo1NlrOICMe9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDozMDo0NFrOICNh7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MjU5OQ==", "bodyText": "This is a bit performance sensitive. Instead of a pattern we should append \" -> \" to the prefix in the constructor and here use this:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    wrapped.log(level, String.format(PATTERN, prefix, message));\n          \n          \n            \n                    wrapped.log(level, prefix + message);", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539172599", "createdAt": "2020-12-09T10:05:56Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {\n+\n+    private static final String PATTERN = \"%s -> %s\";\n+\n+    private final ILogger wrapped;\n+    private final String prefix;\n+\n+    public PrefixedLogger(ILogger wrapped, String prefix) {\n+        this.wrapped = wrapped;\n+        this.prefix = prefix;\n+    }\n+\n+    @Override\n+    public void log(Level level, String message) {\n+        wrapped.log(level, String.format(PATTERN, prefix, message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3MzEyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PrefixedLogger extends AbstractLogger {\n          \n          \n            \n            /**\n          \n          \n            \n             * A Logger implementation that wraps another Logger and prefixes all the\n          \n          \n            \n             * logged messages with a given prefix.\n          \n          \n            \n             */\n          \n          \n            \n            public class PrefixedLogger extends AbstractLogger {", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539173122", "createdAt": "2020-12-09T10:06:42Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3NjA4Nw==", "bodyText": "Maybe the -> part should not be hardcoded here but by the user of this class. This class would then have a very simple contract and be in some util package.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539176087", "createdAt": "2020-12-09T10:11:02Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/PrefixedLogger.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.execution;\n+\n+import com.hazelcast.logging.AbstractLogger;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.logging.LogEvent;\n+\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class PrefixedLogger extends AbstractLogger {\n+\n+    private static final String PATTERN = \"%s -> %s\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NTE0OA==", "bodyText": "Previous code used getLogger(getClass() + \".\" + toString()). Now we use context.logger() which already contains vertex information, so we'll log the vertex information twice.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539185148", "createdAt": "2020-12-09T10:24:12Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -172,7 +170,7 @@ public ProcessorTasklet(\n                                     .sorted(comparing(OutboundEdgeStream::ordinal))\n                                     .toArray(OutboundEdgeStream[]::new);\n         this.ssContext = ssContext;\n-        this.logger = getLogger(context);\n+        this.logger = new PrefixedLogger(context.logger(), toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjIxNg==", "bodyText": "We no longer need to sanitize the vertex name, now it's a part of the message, not of the logger name.\nSame on line 251, I can't comment there because it's not changed in this PR. We can also remove the sanitizeLoggerNamePart() method, we're no longer using any user input text in logger names anywhere.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539186216", "createdAt": "2020-12-09T10:25:40Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "diffHunk": "@@ -177,30 +178,31 @@ public void initialize(NodeEngine nodeEngine,\n             QueuedPipe<Object>[] snapshotQueues = new QueuedPipe[vertex.localParallelism()];\n             Arrays.setAll(snapshotQueues, i -> new OneToOneConcurrentArrayQueue<>(SNAPSHOT_QUEUE_SIZE));\n             ConcurrentConveyor<Object> ssConveyor = ConcurrentConveyor.concurrentConveyor(null, snapshotQueues);\n+            ILogger storeSnapShotLogger = new PrefixedLogger(\n+                    nodeEngine.getLogger(StoreSnapshotTasklet.class), sanitizeLoggerNamePart(vertex.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjgwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ILogger storeSnapShotLogger = new PrefixedLogger(\n          \n          \n            \n                        ILogger storeSnapshotLogger = new PrefixedLogger(", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539186803", "createdAt": "2020-12-09T10:26:34Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "diffHunk": "@@ -177,30 +178,31 @@ public void initialize(NodeEngine nodeEngine,\n             QueuedPipe<Object>[] snapshotQueues = new QueuedPipe[vertex.localParallelism()];\n             Arrays.setAll(snapshotQueues, i -> new OneToOneConcurrentArrayQueue<>(SNAPSHOT_QUEUE_SIZE));\n             ConcurrentConveyor<Object> ssConveyor = ConcurrentConveyor.concurrentConveyor(null, snapshotQueues);\n+            ILogger storeSnapShotLogger = new PrefixedLogger(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4OTc0MA==", "bodyText": "This would be easier to read:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String prefix = String.format(\"%s#ProcessorMetaSupplier\", vertex.getName());\n          \n          \n            \n                        String prefix = vertex.getName() + \"#ProcessorMetaSupplier\";", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r539189740", "createdAt": "2020-12-09T10:30:44Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlanBuilder.java", "diffHunk": "@@ -87,8 +88,8 @@ private ExecutionPlanBuilder() {\n                     e -> vertexIdMap.get(e.getSourceName()), isJobDistributed);\n             final List<EdgeDef> outbound = toEdgeDefs(dag.getOutboundEdges(vertex.getName()), defaultEdgeConfig,\n                     e -> vertexIdMap.get(e.getDestName()), isJobDistributed);\n-            final ILogger logger = nodeEngine.getLogger(String.format(\"%s.%s#ProcessorMetaSupplier\",\n-                    metaSupplier.getClass().getName(), vertex.getName()));\n+            String prefix = String.format(\"%s#ProcessorMetaSupplier\", vertex.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf477d4d5f759832d730f52860329a245000e88e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534dc355783f2637a05e47caea2d057f107ef538", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/534dc355783f2637a05e47caea2d057f107ef538", "committedDate": "2020-12-11T07:49:15Z", "message": "use static loggers and log with prefixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "committedDate": "2020-12-11T07:49:43Z", "message": "unify logger prefixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4871f0c3a50425ea96b5004c5155f49f295ea216", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4871f0c3a50425ea96b5004c5155f49f295ea216", "committedDate": "2020-12-09T10:01:33Z", "message": "Merge branch 'master' into static-logger-names"}, "afterCommit": {"oid": "ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ff5860a4f5179134f3d141b485c4e88e4a7fadf5", "committedDate": "2020-12-11T07:49:43Z", "message": "unify logger prefixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9798d35cf979ed4b8e4df5d7ee8b7b58c3c53d15", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9798d35cf979ed4b8e4df5d7ee8b7b58c3c53d15", "committedDate": "2020-12-11T08:14:53Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4af19a74b108c0f7bc5794fd74cee68add91ce0f", "committedDate": "2020-12-11T08:35:38Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzA1NTUx", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#pullrequestreview-552305551", "createdAt": "2020-12-15T10:23:37Z", "commit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyMzozOFrOIGDnBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDo0NzoxOFrOIGEnTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMTUxMQ==", "bodyText": "The name is too generic for Util. Use loggerPrefix at least. Or maybe move them to the PrefixedLogger", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543221511", "createdAt": "2020-12-15T10:23:38Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMzk2MA==", "bodyText": "The jobName is an identifier, don't trim it. If you name your job myjob  (with the trailing space), you need that trailing space when you do JetInstance.getJob(\"myjob \"). Even an empty job name is a valid job name.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();\n          \n          \n            \n                    String jobIdentification = jobName != null ? jobName : idToString(jobId);", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543223960", "createdAt": "2020-12-15T10:26:49Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {\n+        String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyNTEzMA==", "bodyText": "\"Identity\" means that it's a handle to something that's identified by it. This is more like \"discriminator\" or \"subclass\"", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543225130", "createdAt": "2020-12-15T10:28:30Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNzk2Nw==", "bodyText": "identity can be null", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r543237967", "createdAt": "2020-12-15T10:47:18Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {\n+        String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();\n+        return jobIdentification + \"/\" + vertexName + (identity == null ? \"\" : '/' + identity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88172dc1d425fdb76526e9fb4ded1c32e7317f9a", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/88172dc1d425fdb76526e9fb4ded1c32e7317f9a", "committedDate": "2020-12-15T19:17:03Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92188acbcaefcec2c37659cd8ca77674c4643986", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/92188acbcaefcec2c37659cd8ca77674c4643986", "committedDate": "2020-12-16T08:03:00Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02c96a4c3ceab53bc47cec4dcf0b23af090847ae", "author": {"user": null}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/02c96a4c3ceab53bc47cec4dcf0b23af090847ae", "committedDate": "2020-12-16T08:09:04Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c047db2cb9dfdea0d7857ddfcff0cdb1a1111a6d", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/c047db2cb9dfdea0d7857ddfcff0cdb1a1111a6d", "committedDate": "2020-12-16T09:36:12Z", "message": "Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDI2ODM4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#pullrequestreview-553426838", "createdAt": "2020-12-16T07:46:44Z", "commit": {"oid": "88172dc1d425fdb76526e9fb4ded1c32e7317f9a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo0Njo0NFrOIG4ARw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo0Njo0NFrOIG4ARw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3OTk0Mw==", "bodyText": "my mistake, it's ok", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2737#discussion_r544079943", "createdAt": "2020-12-16T07:46:44Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -442,8 +443,21 @@ public static String addOrIncrementIndexInName(String name) {\n         return name + '-' + index;\n     }\n \n-    public static String sanitizeLoggerNamePart(String name) {\n-        return name.replace('.', '_');\n+    public static ILogger prefixedLogger(ILogger logger, String prefix) {\n+        return new PrefixedLogger(logger, prefix);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName) {\n+        return prefix(jobName, jobId, vertexName, null);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, int processorIndex) {\n+        return prefix(jobName, jobId, vertexName, \"procIndex:\" + processorIndex);\n+    }\n+\n+    public static String prefix(String jobName, long jobId, String vertexName, String identity) {\n+        String jobIdentification = StringUtil.isNullOrEmptyAfterTrim(jobName) ? idToString(jobId) : jobName.trim();\n+        return jobIdentification + \"/\" + vertexName + (identity == null ? \"\" : '/' + identity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIzNzk2Nw=="}, "originalCommit": {"oid": "4af19a74b108c0f7bc5794fd74cee68add91ce0f"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3419, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}