{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTQ3NTYw", "number": 2648, "title": "Support IMap joins", "bodyText": "Added generic support for nested loop inner joins (outer join will be part of separate PR).\nImplemented IMap nested loop join with couple of optimizations:\n\nif it's an equi join with the base type IMap key, a direct lookup (getAsync()) is performed\nif it's an equi join, IMap is queried using predicate API entrySet(Predicate)\nin all other cases the content of the IMap is loaded in full (entrySet()) for each batch of upstream rows\n\nChecklist:\n\n Labels and Milestone set", "createdAt": "2020-11-10T14:55:57Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648", "merged": true, "mergeCommit": {"oid": "e467d928867a077dea6e96e269c6aaf96a2e8013"}, "closed": true, "closedAt": "2021-01-11T11:42:46Z", "author": {"login": "gierlachg"}, "timelineItems": {"totalCount": 118, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABduDpjLgH2gAyNTE4NTQ3NTYwOjU0MWViNmEzMzRiYTRiOTM5Y2NiNzU4ZWQ4ZTg5MDdiNzNmYTM5ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvEv3tgFqTU2NTI2NTUxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "541eb6a334ba4b939ccb758ed8e8907b73fa3982", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/541eb6a334ba4b939ccb758ed8e8907b73fa3982", "committedDate": "2021-01-08T07:32:51Z", "message": "Fix tests & finish javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcbb6c68b363bb365ef79f532364cc56cd0b1821", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/fcbb6c68b363bb365ef79f532364cc56cd0b1821", "committedDate": "2021-01-08T09:29:51Z", "message": "Do not limit batch size for scan case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfab649bff77ae5dc5fa524d5412651d43a37b23", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/cfab649bff77ae5dc5fa524d5412651d43a37b23", "committedDate": "2021-01-08T10:35:58Z", "message": "Ensure TransformBatchP emits all the items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4561e5fed44d2c20202a5a94e560d2505c701ba", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b4561e5fed44d2c20202a5a94e560d2505c701ba", "committedDate": "2021-01-08T12:26:33Z", "message": "Refactor TransformBatchedP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c10f12ca71cb8feb0fdbea4420dfe593220c395", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8c10f12ca71cb8feb0fdbea4420dfe593220c395", "committedDate": "2021-01-08T12:29:04Z", "message": "Refactor TransformBatchedP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e75db94a426b8e599a4f08d9900b6a2a1754caf", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6e75db94a426b8e599a4f08d9900b6a2a1754caf", "committedDate": "2021-01-08T12:34:43Z", "message": "Merge remote-tracking branch 'upstream/master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60e4df8bdfdd9d74fc9a22093e72424cea2a6dd9", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/60e4df8bdfdd9d74fc9a22093e72424cea2a6dd9", "committedDate": "2021-01-08T14:42:03Z", "message": "Fix race when applying the projector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f49cda36b5a2de94e13772e035e4fc4d4cc3c53", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/1f49cda36b5a2de94e13772e035e4fc4d4cc3c53", "committedDate": "2021-01-08T16:59:53Z", "message": "Implement test for JoinByPrimitiveKeyProcessor using TestSupport"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09de8b5fe6e64a9b864d8adf8f67ba0714251245", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/09de8b5fe6e64a9b864d8adf8f67ba0714251245", "committedDate": "2021-01-09T10:16:18Z", "message": "Fix outer non-key equi-join with additional join conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d5974831bbe9ac5873b54b1dc89a78030712453", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/1d5974831bbe9ac5873b54b1dc89a78030712453", "committedDate": "2021-01-09T10:16:29Z", "message": "Rename test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "532ac47d70dd62448d38baeb5000941bc0391a23", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/532ac47d70dd62448d38baeb5000941bc0391a23", "committedDate": "2021-01-09T10:56:07Z", "message": "Fix SessionWindowPTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2e0e4f977ed760c24399cc043959e6c5070594", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8d2e0e4f977ed760c24399cc043959e6c5070594", "committedDate": "2021-01-09T11:07:15Z", "message": "More tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c0310ed97ad7deb72f328c7ba62a1b5618f308", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/c8c0310ed97ad7deb72f328c7ba62a1b5618f308", "committedDate": "2021-01-11T07:53:10Z", "message": "Remove duplicate outer-join handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c1aa2c166b006e948b492f5ae19d6eb933426d5", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6c1aa2c166b006e948b492f5ae19d6eb933426d5", "committedDate": "2021-01-11T08:55:39Z", "message": "Refactor join tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a82b4fde19c3cbcec21c4ad38253b1132bd78da", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2a82b4fde19c3cbcec21c4ad38253b1132bd78da", "committedDate": "2021-01-11T09:47:37Z", "message": "Simplify TransformBatchedP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b4f49d4003e5dd242f1748adfebdfb7c9cf9ee", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/92b4f49d4003e5dd242f1748adfebdfb7c9cf9ee", "committedDate": "2021-01-11T09:54:42Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7445e342f955fd2268b99486d0d8198c721df05", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a7445e342f955fd2268b99486d0d8198c721df05", "committedDate": "2021-01-11T11:22:47Z", "message": "More javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MjY1NTE3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-565265517", "createdAt": "2021-01-11T11:23:35Z", "commit": {"oid": "a7445e342f955fd2268b99486d0d8198c721df05"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "088785d2e3852bbf0f20a9c33c0ec86f71e00b9c", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/088785d2e3852bbf0f20a9c33c0ec86f71e00b9c", "committedDate": "2020-11-05T14:01:07Z", "message": "Add enrichment joins (SQL)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03477a0e6468f71f0e2e632573254b9d9ca1bc13", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/03477a0e6468f71f0e2e632573254b9d9ca1bc13", "committedDate": "2020-11-05T14:31:41Z", "message": "Remove unused class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "246b4c756700f2fceef280c2e4cde79638bd2c9b", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/246b4c756700f2fceef280c2e4cde79638bd2c9b", "committedDate": "2020-11-06T15:31:06Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecc9fc90f97cdd4e8dc95b360704cef111326f76", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ecc9fc90f97cdd4e8dc95b360704cef111326f76", "committedDate": "2020-11-06T15:32:01Z", "message": "Merge remote-tracking branch 'upstream/sql-join' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be32e661fbb131925be496f095cee4afa8d0402e", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/be32e661fbb131925be496f095cee4afa8d0402e", "committedDate": "2020-11-09T10:09:57Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a70eea9c9d89ea0b623d389633745d5337ce0a6", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2a70eea9c9d89ea0b623d389633745d5337ce0a6", "committedDate": "2020-11-09T11:47:50Z", "message": "Add FilterIntoJoinRule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f474da4d2c5f2b77457da395b6a641e61f3b606a", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f474da4d2c5f2b77457da395b6a641e61f3b606a", "committedDate": "2020-11-09T12:36:08Z", "message": "Simplify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "418e5b125b1f2e012c1fa8cc00dcd796499a95b0", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/418e5b125b1f2e012c1fa8cc00dcd796499a95b0", "committedDate": "2020-11-10T13:18:45Z", "message": "More tests, improved join processors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84313217693243ded8d2f3045440ed0d0d31c095", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/84313217693243ded8d2f3045440ed0d0d31c095", "committedDate": "2020-11-10T13:26:13Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00e26de1876f8c1e1ff08f5a2e3dd77c89b700ab", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/00e26de1876f8c1e1ff08f5a2e3dd77c89b700ab", "committedDate": "2020-11-10T14:27:46Z", "message": "Some javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7045073e217b75d18ecd4d70f392fa04e35dcd4a", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7045073e217b75d18ecd4d70f392fa04e35dcd4a", "committedDate": "2020-11-10T14:54:03Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d48180dd885d587c1ece17093bc8cd8ddba8294", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2d48180dd885d587c1ece17093bc8cd8ddba8294", "committedDate": "2020-11-10T15:04:21Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MzIwMjA3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-528320207", "createdAt": "2020-11-11T16:15:44Z", "commit": {"oid": "2d48180dd885d587c1ece17093bc8cd8ddba8294"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxNTo0NFrOHxUDGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxNTo0NFrOHxUDGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3MDc0NQ==", "bodyText": "This query can be transformed to\nSELECT 1 FROM b AS b1 JOIN b AS b2 ON 1=1\nor to:\nSELECT 1 FROM b AS b1, b AS b2\nI'm surprised that cross join isn't handled by Calcite before we observe it...", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r521470745", "createdAt": "2020-11-11T16:15:44Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/test/java/com/hazelcast/jet/sql/SqlJoinTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.sql;\n+\n+import com.hazelcast.jet.sql.impl.connector.test.TestBatchSqlConnector;\n+import com.hazelcast.sql.SqlService;\n+import com.hazelcast.sql.impl.QueryException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+public class SqlJoinTest extends SqlTestSupport {\n+\n+    private static SqlService sqlService;\n+\n+    @BeforeClass\n+    public static void setUpClass() {\n+        initialize(2, null);\n+        sqlService = instance().getSql();\n+    }\n+\n+    @Test\n+    public void test_leftJoinFails() {\n+        TestBatchSqlConnector.create(sqlService, \"b\", 0);\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 LEFT JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"LEFT join not supported\");\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 LEFT OUTER JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"LEFT join not supported\");\n+    }\n+\n+    @Test\n+    public void test_rightJoinFails() {\n+        TestBatchSqlConnector.create(sqlService, \"b\", 0);\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 RIGHT JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"RIGHT join not supported\");\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 RIGHT OUTER JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"RIGHT join not supported\");\n+    }\n+\n+    @Test\n+    public void test_fullJoinFails() {\n+        TestBatchSqlConnector.create(sqlService, \"b\", 0);\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 FULL JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"FULL join not supported\");\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 FULL OUTER JOIN b AS b2 ON b1.v = b2.v\"))\n+                .hasCauseInstanceOf(QueryException.class)\n+                .hasMessageContaining(\"FULL join not supported\");\n+    }\n+\n+    @Test\n+    public void test_crossJoinFails() {\n+        TestBatchSqlConnector.create(sqlService, \"b\", 0);\n+\n+        assertThatThrownBy(() -> sqlService.execute(\"SELECT 1 FROM b AS b1 CROSS JOIN b AS b2\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d48180dd885d587c1ece17093bc8cd8ddba8294"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d121b1ac9a3c2f872e5305ebab3f569b274b2047", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d121b1ac9a3c2f872e5305ebab3f569b274b2047", "committedDate": "2020-11-12T07:21:08Z", "message": "Enable CROSS JOIN"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a7e936757131a8b4b149eb72ccbd04d7f9e90b", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/72a7e936757131a8b4b149eb72ccbd04d7f9e90b", "committedDate": "2020-11-12T07:37:24Z", "message": "Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28f912d8aacf2aaf7751911b621a2bdbee2ba3bd", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/28f912d8aacf2aaf7751911b621a2bdbee2ba3bd", "committedDate": "2020-11-12T07:38:02Z", "message": "Merge remote-tracking branch 'remotes/hazelcast/master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2f2d0492c5e1b04575c424d9eadf177a8cb4e7", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/bb2f2d0492c5e1b04575c424d9eadf177a8cb4e7", "committedDate": "2020-11-12T07:39:16Z", "message": "Merge remote-tracking branch 'upstream/sql-join' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb6d852a1bd728534e8ec2e82d583e8dcd10cd8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6bb6d852a1bd728534e8ec2e82d583e8dcd10cd8", "committedDate": "2020-11-12T07:43:42Z", "message": "Javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e3847063500ad4f3d67d77eda51c17c4109509", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/27e3847063500ad4f3d67d77eda51c17c4109509", "committedDate": "2020-11-12T11:31:53Z", "message": "Renaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "086653971f291b6eb9647481673558901462f8c7", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/086653971f291b6eb9647481673558901462f8c7", "committedDate": "2020-11-12T12:19:56Z", "message": "Refactor join processor suppliers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a865501c99295e09358d99a6ab0fdc00a8e151e9", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a865501c99295e09358d99a6ab0fdc00a8e151e9", "committedDate": "2020-11-12T12:43:17Z", "message": "Fix spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a9aec2d5d7c57f78b427a81bc7ffc60f508a8c", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/49a9aec2d5d7c57f78b427a81bc7ffc60f508a8c", "committedDate": "2020-11-12T12:59:38Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39106e4b480ae920fd0af1a0c2386d3083ae211e", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/39106e4b480ae920fd0af1a0c2386d3083ae211e", "committedDate": "2020-11-12T13:00:32Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b953afa80f7f8be0c41cd704e35b0f5e132e03e", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3b953afa80f7f8be0c41cd704e35b0f5e132e03e", "committedDate": "2020-11-12T13:02:40Z", "message": "Tweak javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1e13d210259952a263e31bcb782eadf5cc4ed0b", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d1e13d210259952a263e31bcb782eadf5cc4ed0b", "committedDate": "2020-11-12T14:39:18Z", "message": "toString() tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68d85f5b4b299c2b254edc248c109aa6b4577721", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/68d85f5b4b299c2b254edc248c109aa6b4577721", "committedDate": "2020-11-12T15:04:26Z", "message": "Make serviceContext nullable (it always was)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ddd623754335bd6cdca3456759fbc32fd8a5558", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6ddd623754335bd6cdca3456759fbc32fd8a5558", "committedDate": "2020-11-12T15:04:29Z", "message": "Add join tests with type conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e37b89dba7463d246c3b514587372947c79f9e56", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/e37b89dba7463d246c3b514587372947c79f9e56", "committedDate": "2020-11-12T15:07:02Z", "message": "Remove SuppressWarnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/168583a337e4b46ea0f078150f365f7a7bf67958", "committedDate": "2020-11-12T15:34:03Z", "message": "Add join method to the vertex name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MzI1MDA2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-528325006", "createdAt": "2020-11-11T16:21:00Z", "commit": {"oid": "2d48180dd885d587c1ece17093bc8cd8ddba8294"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoyMTowMFrOHxUQ9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNjoyNDowMVrOHyC0Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3NDI5NQ==", "bodyText": "Don't we need to do type conversion here? Imagine two maps:\nm1: IMap<Integer, Integer>\nm2: IMap<Integer, Long>\nSELECT *\nFROM m1\nJOIN m2 USING(this)\nthe predicate will compare Integer to Long, which is always false.\nMaybe calcite generates Project nodes to do the casting or maybe HZ Predicates handle it, i don't know. But I didn't see a test for that", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r521474295", "createdAt": "2020-11-11T16:21:00Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/map/JoinByPredicateProcessorFactory.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.sql.impl.connector.map;\n+\n+import com.hazelcast.function.BiFunctionEx;\n+import com.hazelcast.function.FunctionEx;\n+import com.hazelcast.function.SupplierEx;\n+import com.hazelcast.jet.Traverser;\n+import com.hazelcast.jet.Traversers;\n+import com.hazelcast.jet.core.Processor;\n+import com.hazelcast.jet.impl.processor.TransformP;\n+import com.hazelcast.jet.pipeline.ServiceFactory;\n+import com.hazelcast.jet.sql.impl.ExpressionUtil;\n+import com.hazelcast.jet.sql.impl.JoinInfo;\n+import com.hazelcast.jet.sql.impl.connector.keyvalue.KvRowProjector;\n+import com.hazelcast.jet.sql.impl.connector.map.JoinProcessors.JoinProcessorFactory;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.query.Predicate;\n+import com.hazelcast.query.PredicateBuilder;\n+import com.hazelcast.query.PredicateBuilder.EntryObject;\n+import com.hazelcast.query.Predicates;\n+import com.hazelcast.sql.impl.extract.QueryPath;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map.Entry;\n+\n+final class JoinByPredicateProcessorFactory implements JoinProcessorFactory {\n+\n+    static final JoinByPredicateProcessorFactory INSTANCE = new JoinByPredicateProcessorFactory();\n+\n+    private JoinByPredicateProcessorFactory() {\n+    }\n+\n+    @Override\n+    public Processor create(\n+            ServiceFactory<Object, IMap<Object, Object>> mapFactory,\n+            IMap<Object, Object> map,\n+            QueryPath[] rightPaths,\n+            SupplierEx<KvRowProjector> rightProjectorSupplier,\n+            JoinInfo joinInfo\n+    ) {\n+        return new TransformP<Object[], Object[]>(\n+                joinFn(map, rightPaths, rightProjectorSupplier.get(), joinInfo)\n+        ) {\n+            @Override\n+            public boolean isCooperative() {\n+                return false;\n+            }\n+        };\n+    }\n+\n+    private static FunctionEx<Object[], Traverser<Object[]>> joinFn(\n+            IMap<Object, Object> map,\n+            QueryPath[] rightPaths,\n+            KvRowProjector rightProjector,\n+            JoinInfo joinInfo\n+    ) {\n+        assert joinInfo.isEquiJoin();\n+\n+        int[] leftEquiJoinIndices = joinInfo.leftEquiJoinIndices();\n+        int[] rightEquiJoinIndices = joinInfo.rightEquiJoinIndices();\n+        BiFunctionEx<Object[], Object[], Object[]> joinFn = ExpressionUtil.joinFn(joinInfo.nonEquiCondition());\n+\n+        return left -> {\n+            Predicate<Object, Object> predicate = toPredicate(left, leftEquiJoinIndices, rightEquiJoinIndices, rightPaths);\n+            if (predicate == null) {\n+                return Traversers.empty();\n+            }\n+\n+            List<Object[]> rows = new ArrayList<>();\n+            for (Entry<Object, Object> entry : map.entrySet(predicate)) {\n+                Object[] right = rightProjector.project(entry);\n+                if (right == null) {\n+                    continue;\n+                }\n+\n+                Object[] joined = joinFn.apply(left, right);\n+                if (joined != null) {\n+                    rows.add(joined);\n+                }\n+            }\n+            return Traversers.traverseIterable(rows);\n+        };\n+    }\n+\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    private static Predicate<Object, Object> toPredicate(\n+            Object[] left,\n+            int[] leftEquiJoinIndices,\n+            int[] rightEquiJoinIndices,\n+            QueryPath[] rightPaths\n+    ) {\n+        PredicateBuilder builder = Predicates.newPredicateBuilder();\n+        EntryObject entryObject = builder.getEntryObject();\n+        for (int i = 0; i < leftEquiJoinIndices.length; i++) {\n+            Comparable leftValue = (Comparable) left[leftEquiJoinIndices[i]];\n+\n+            // might need a change when/if IS NOT DISTINCT FROM is supported\n+            if (leftValue == null) {\n+                return null;\n+            }\n+\n+            QueryPath rightPath = rightPaths[rightEquiJoinIndices[i]];\n+\n+            EntryObject object;\n+            if (rightPath.isKey()) {\n+                object = rightPath.isTop()\n+                        ? entryObject.key()\n+                        : entryObject.key().get(rightPath.getPath());\n+            } else {\n+                object = rightPath.isTop()\n+                        ? entryObject.get(rightPath.toString())\n+                        : entryObject.get(QueryPath.VALUE).get(rightPath.getPath());\n+            }\n+            if (i == 0) {\n+                object.equal(leftValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d48180dd885d587c1ece17093bc8cd8ddba8294"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIzNjkzOA==", "bodyText": "We should somehow use a distributed-partitioned edge in this case. The map.get call can then be local.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r522236938", "createdAt": "2020-11-12T16:24:01Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/map/IMapSqlConnector.java", "diffHunk": "@@ -122,6 +132,69 @@ public final Table createTable(\n         );\n     }\n \n+    @Override\n+    public boolean supportsNestedLoopReader() {\n+        return true;\n+    }\n+\n+    @Nonnull @Override\n+    public Vertex nestedLoopReader(\n+            @Nonnull DAG dag,\n+            @Nonnull Table table0,\n+            @Nullable Expression<Boolean> predicate,\n+            @Nonnull List<Expression<?>> projections,\n+            @Nonnull JetJoinInfo joinInfo\n+    ) {\n+        PartitionedMapTable table = (PartitionedMapTable) table0;\n+\n+        ProcessorSupplier pSupplier;\n+        String name = table.getMapName();\n+        List<TableField> fields = table.getFields();\n+        QueryPath[] paths = fields.stream().map(field -> ((MapTableField) field).getPath()).toArray(QueryPath[]::new);\n+        QueryDataType[] types = fields.stream().map(TableField::getType).toArray(QueryDataType[]::new);\n+        QueryTargetDescriptor keyDescriptor = table.getKeyDescriptor();\n+        QueryTargetDescriptor valueDescriptor = table.getValueDescriptor();\n+\n+        KvRowProjector.Supplier rightRowProjectorSupplier =\n+                KvRowProjector.supplier(paths, types, keyDescriptor, valueDescriptor, predicate, projections);\n+\n+        String desc;\n+        if (isEquiJoinByPrimitiveKey(joinInfo, fields)) {\n+            pSupplier = new JoinByPrimitiveKeyProcessorSupplier(joinInfo, name, rightRowProjectorSupplier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5OTEyMjYx", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-529912261", "createdAt": "2020-11-13T09:38:44Z", "commit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTozODo0NFrOHynRSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTozODo0NFrOHynRSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDI0OA==", "bodyText": "We should use this way every time we have an equi-join for right.__key, e.g.:\nSELECT * \nFROM a JOIN b ON a.field=b.__key and b.field=10", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r522834248", "createdAt": "2020-11-13T09:38:44Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/map/IMapSqlConnector.java", "diffHunk": "@@ -122,6 +132,69 @@ public final Table createTable(\n         );\n     }\n \n+    @Override\n+    public boolean supportsNestedLoopReader() {\n+        return true;\n+    }\n+\n+    @Nonnull @Override\n+    public Vertex nestedLoopReader(\n+            @Nonnull DAG dag,\n+            @Nonnull Table table0,\n+            @Nullable Expression<Boolean> predicate,\n+            @Nonnull List<Expression<?>> projections,\n+            @Nonnull JetJoinInfo joinInfo\n+    ) {\n+        PartitionedMapTable table = (PartitionedMapTable) table0;\n+\n+        ProcessorSupplier pSupplier;\n+        String name = table.getMapName();\n+        List<TableField> fields = table.getFields();\n+        QueryPath[] paths = fields.stream().map(field -> ((MapTableField) field).getPath()).toArray(QueryPath[]::new);\n+        QueryDataType[] types = fields.stream().map(TableField::getType).toArray(QueryDataType[]::new);\n+        QueryTargetDescriptor keyDescriptor = table.getKeyDescriptor();\n+        QueryTargetDescriptor valueDescriptor = table.getValueDescriptor();\n+\n+        KvRowProjector.Supplier rightRowProjectorSupplier =\n+                KvRowProjector.supplier(paths, types, keyDescriptor, valueDescriptor, predicate, projections);\n+\n+        String desc;\n+        if (isEquiJoinByPrimitiveKey(joinInfo, fields)) {\n+            pSupplier = new JoinByPrimitiveKeyProcessorSupplier(joinInfo, name, rightRowProjectorSupplier);\n+            desc = \"imap.get\";\n+        } else if (joinInfo.isEquiJoin()) {\n+            pSupplier = new JoinByPredicateProcessorSupplier(joinInfo, name, paths, rightRowProjectorSupplier);\n+            desc = \"imap.entrySet(predicate)\";\n+        } else {\n+            pSupplier = new JoinScanProcessorSupplier(joinInfo, name, rightRowProjectorSupplier);\n+            desc = \"imap.entrySet(<full>)\";\n+        }\n+        return dag.newVertex(\n+                \"NestedLoopJoin(\" + toString(table) + \")-\" + desc + \"-\" + randomLetters(),\n+                pSupplier\n+        );\n+    }\n+\n+    private static boolean isEquiJoinByPrimitiveKey(JetJoinInfo joinInfo, List<TableField> fields) {\n+        if (joinInfo.rightEquiJoinIndices().length != 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5OTUzNzQ5", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-529953749", "createdAt": "2020-11-13T10:38:39Z", "commit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMDozODozOVrOHypRFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMDozODozOVrOHypRFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2Njk2Ng==", "bodyText": "We should:\n\ncache the result entrySet for some time (like 10 seconds). We should cache it projected.\nshare it among local processors: maybe have a volatile field in the PSupplier and have 0th local processor update it for everyone.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r522866966", "createdAt": "2020-11-13T10:38:39Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/map/JoinScanProcessorSupplier.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.sql.impl.connector.map;\n+\n+import com.hazelcast.function.BiFunctionEx;\n+import com.hazelcast.function.FunctionEx;\n+import com.hazelcast.internal.serialization.InternalSerializationService;\n+import com.hazelcast.jet.Traverser;\n+import com.hazelcast.jet.Traversers;\n+import com.hazelcast.jet.core.Processor;\n+import com.hazelcast.jet.core.ProcessorSupplier;\n+import com.hazelcast.jet.impl.execution.init.Contexts.ProcSupplierCtx;\n+import com.hazelcast.jet.impl.processor.TransformBatchedP;\n+import com.hazelcast.jet.sql.impl.ExpressionUtil;\n+import com.hazelcast.jet.sql.impl.JetJoinInfo;\n+import com.hazelcast.jet.sql.impl.connector.keyvalue.KvRowProjector;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.DataSerializable;\n+import com.hazelcast.query.impl.getters.Extractors;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map.Entry;\n+\n+@SuppressFBWarnings(\n+        value = {\"SE_BAD_FIELD\", \"SE_NO_SERIALVERSIONID\"},\n+        justification = \"the class is never java-serialized\"\n+)\n+final class JoinScanProcessorSupplier implements ProcessorSupplier, DataSerializable {\n+\n+    private static final int MAX_BATCH_SIZE = 1024;\n+\n+    private JetJoinInfo joinInfo;\n+    private String mapName;\n+    private KvRowProjector.Supplier rightRowProjectorSupplier;\n+\n+    private transient IMap<Object, Object> map;\n+    private transient InternalSerializationService serializationService;\n+    private transient Extractors extractors;\n+\n+    @SuppressWarnings(\"unused\")\n+    private JoinScanProcessorSupplier() {\n+    }\n+\n+    JoinScanProcessorSupplier(\n+            JetJoinInfo joinInfo,\n+            String mapName,\n+            KvRowProjector.Supplier rightRowProjectorSupplier\n+    ) {\n+        this.joinInfo = joinInfo;\n+        this.mapName = mapName;\n+        this.rightRowProjectorSupplier = rightRowProjectorSupplier;\n+    }\n+\n+    @Override\n+    public void init(@Nonnull Context context) {\n+        map = context.jetInstance().getMap(mapName);\n+        serializationService = ((ProcSupplierCtx) context).serializationService();\n+        extractors = Extractors.newBuilder(serializationService).build();\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public Collection<? extends Processor> get(int count) {\n+        List<Processor> processors = new ArrayList<>(count);\n+        for (int i = 0; i < count; i++) {\n+            Processor processor = new TransformBatchedP<Object[], Object[]>(\n+                    MAX_BATCH_SIZE,\n+                    joinFn(joinInfo, map, rightRowProjectorSupplier.get(serializationService, extractors))\n+            ) {\n+                @Override\n+                public boolean isCooperative() {\n+                    return false;\n+                }\n+            };\n+            processors.add(processor);\n+        }\n+        return processors;\n+    }\n+\n+    private static FunctionEx<List<? super Object[]>, Traverser<Object[]>> joinFn(\n+            JetJoinInfo joinInfo,\n+            IMap<Object, Object> map,\n+            KvRowProjector rightRowProjector\n+    ) {\n+        BiFunctionEx<Object[], Object[], Object[]> joinFn = ExpressionUtil.joinFn(joinInfo.condition());\n+\n+        return lefts -> {\n+            List<Object[]> rows = new ArrayList<>();\n+            for (Entry<Object, Object> entry : map.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "168583a337e4b46ea0f078150f365f7a7bf67958"}, "originalPosition": 110}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cad542b29b6551c24f2027e043935f98f52c585", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3cad542b29b6551c24f2027e043935f98f52c585", "committedDate": "2020-11-13T16:12:07Z", "message": "Some more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37247d1849c9aaf797167a65be0a5ea4c6c076bc", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/37247d1849c9aaf797167a65be0a5ea4c6c076bc", "committedDate": "2020-11-16T07:30:09Z", "message": "Use key lookup whenever key equi-join condition is present"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb64ed34822188b160e7ce5bbd30285c6319c57b", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/cb64ed34822188b160e7ce5bbd30285c6319c57b", "committedDate": "2020-11-16T07:30:44Z", "message": "Merge remote-tracking branch 'upstream/sql-join' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edf4f9e60fff0dcedc247d82120c096e4dd80d81", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/edf4f9e60fff0dcedc247d82120c096e4dd80d81", "committedDate": "2020-11-16T07:40:15Z", "message": "Tests renames"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2b1b78e466a0cf7549ed28f81f16e3dc9bea44", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/5a2b1b78e466a0cf7549ed28f81f16e3dc9bea44", "committedDate": "2020-11-16T14:50:40Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7c5ff00692d01238da4c2a9f5f91effa9328f45", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/e7c5ff00692d01238da4c2a9f5f91effa9328f45", "committedDate": "2020-11-18T11:47:05Z", "message": "Support NestedLoopJoin Edge configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4201d33f5ce831d4e824bae7ce8de1107eaf6efd", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4201d33f5ce831d4e824bae7ce8de1107eaf6efd", "committedDate": "2020-11-19T08:39:59Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a13a0d1fbf419b0280ced6735465640a7cba3cc", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/5a13a0d1fbf419b0280ced6735465640a7cba3cc", "committedDate": "2020-11-20T08:11:47Z", "message": "Use join reduce expression rule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a63dcd5121bad1f973d63855b7e623771486366f", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a63dcd5121bad1f973d63855b7e623771486366f", "committedDate": "2020-11-20T11:00:12Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7a6c5322d81835a973268db55993ac2092fb82", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/8c7a6c5322d81835a973268db55993ac2092fb82", "committedDate": "2020-11-20T11:05:17Z", "message": "Validate VALUES"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2331231502373f5fc8c0f39e4b3ff7c3105e2033", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2331231502373f5fc8c0f39e4b3ff7c3105e2033", "committedDate": "2020-11-23T11:13:03Z", "message": "Improve validation message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b06f85c410160116a9f8556b3f7779ffc724c1b9", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b06f85c410160116a9f8556b3f7779ffc724c1b9", "committedDate": "2020-11-23T12:23:21Z", "message": "Naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d56501d15ac5273c5862707a7b3b1a97e7b5ceaa", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d56501d15ac5273c5862707a7b3b1a97e7b5ceaa", "committedDate": "2020-11-23T13:38:24Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aec68f92fcbda478708539678502672dfc8c6ce", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/0aec68f92fcbda478708539678502672dfc8c6ce", "committedDate": "2020-11-23T14:47:42Z", "message": "Support LEFT [OUTER] joins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "113f868f0947d3fd5b65445bf0caa0dca2e01518", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/113f868f0947d3fd5b65445bf0caa0dca2e01518", "committedDate": "2020-11-25T09:08:05Z", "message": "Support DAG unique vertices"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5a742e28f9d9df578b91b6975925005d988dd50", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f5a742e28f9d9df578b91b6975925005d988dd50", "committedDate": "2020-11-25T09:27:29Z", "message": "Fix unique vertex name generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22eaaaae6b256cc95fa337739a8c532506e7d311", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/22eaaaae6b256cc95fa337739a8c532506e7d311", "committedDate": "2020-11-25T12:36:59Z", "message": "Add TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cc3844208eef7859e6b3d1d81089c60c57ec5a7", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7cc3844208eef7859e6b3d1d81089c60c57ec5a7", "committedDate": "2020-11-25T13:34:11Z", "message": "Cleanup - outer -> inner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a58aa6b5c5500e3e6bf79c5a79ea6d0e118efb", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b2a58aa6b5c5500e3e6bf79c5a79ea6d0e118efb", "committedDate": "2020-11-25T14:00:28Z", "message": "Use local partitioned entries API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24930c149f9c74bc46abb332fd88e494936aab2b", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/24930c149f9c74bc46abb332fd88e494936aab2b", "committedDate": "2020-11-25T14:36:19Z", "message": "Turn on right side project pull up for outer joins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d384cbce6dc32af3c2897b76449b48cdbd96e918", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d384cbce6dc32af3c2897b76449b48cdbd96e918", "committedDate": "2020-11-25T14:37:08Z", "message": "Merge branch 'sql-join' into partitioned-entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "819299be362ea0df2979300ad54a12613f173a0e", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/819299be362ea0df2979300ad54a12613f173a0e", "committedDate": "2020-11-26T07:11:18Z", "message": "Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a00f3b6b94decb31c6c37e02a8a3a5df8f92777", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6a00f3b6b94decb31c6c37e02a8a3a5df8f92777", "committedDate": "2020-11-26T08:53:24Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52c6f7ef253908b54a7ee26ce30639ba3804b350", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/52c6f7ef253908b54a7ee26ce30639ba3804b350", "committedDate": "2020-11-26T08:55:32Z", "message": "Merge branch 'sql-join' into partitioned-entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83f157c30b1a5c4ca7756f8b3a8b8136592a56a8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/83f157c30b1a5c4ca7756f8b3a8b8136592a56a8", "committedDate": "2020-11-26T09:00:08Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b00a412dc3812c83a03d86acdc7d57fe1e6c728", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4b00a412dc3812c83a03d86acdc7d57fe1e6c728", "committedDate": "2020-11-26T09:12:17Z", "message": "Tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79388c80b719750d3bb4929b07b7652a58931d52", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/79388c80b719750d3bb4929b07b7652a58931d52", "committedDate": "2020-11-26T09:12:32Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a6a3076f0f661385325b008a0e173c3f8df5f5", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/c4a6a3076f0f661385325b008a0e173c3f8df5f5", "committedDate": "2020-11-26T15:23:31Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f4722ea95b5f35982b1cacc47ad95c2df1b5f4", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/05f4722ea95b5f35982b1cacc47ad95c2df1b5f4", "committedDate": "2020-11-26T15:24:43Z", "message": "Merge branch 'sql-join' into partitioned-entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86cf33067a0a277c5119e50834d051bbca21a9d5", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/86cf33067a0a277c5119e50834d051bbca21a9d5", "committedDate": "2020-12-07T07:59:35Z", "message": "Fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4389c907bb70379f2b5b299c4c902ab7fda6545d", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4389c907bb70379f2b5b299c4c902ab7fda6545d", "committedDate": "2020-12-07T08:02:12Z", "message": "Format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb4e9372bafb0b29e05afd264ef531ceacbaaa8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3fb4e9372bafb0b29e05afd264ef531ceacbaaa8", "committedDate": "2020-12-07T08:02:55Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "247903e592e6d6d82a30021c0555c8e685d1cda8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/247903e592e6d6d82a30021c0555c8e685d1cda8", "committedDate": "2020-12-07T08:14:03Z", "message": "Naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e3080a34a6e6d892efcede3d21d37dc6d15283f", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/5e3080a34a6e6d892efcede3d21d37dc6d15283f", "committedDate": "2020-12-07T09:12:51Z", "message": "Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cb23677ddd033d99a21328ccfc1285a7e296fd0", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9cb23677ddd033d99a21328ccfc1285a7e296fd0", "committedDate": "2020-12-07T11:35:37Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "213de9052b1de63102fae49838b9ede868cd5738", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/213de9052b1de63102fae49838b9ede868cd5738", "committedDate": "2020-12-09T07:41:12Z", "message": "Merge remote-tracking branch 'upstream/master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355f51d09fab73f5858f5c28f9e769befb8abf6c", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/355f51d09fab73f5858f5c28f9e769befb8abf6c", "committedDate": "2020-12-09T13:06:36Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc6aa3d6ad2f8ebb99086ca7a7f20849ba33e65", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7bc6aa3d6ad2f8ebb99086ca7a7f20849ba33e65", "committedDate": "2020-12-11T12:25:09Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "230ec71e2a065026803f8dadc67b6741f0060750", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/230ec71e2a065026803f8dadc67b6741f0060750", "committedDate": "2020-12-11T12:33:09Z", "message": "Merge branch 'master' into sql-join\n\n# Conflicts:\n#\thazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/kafka/KafkaTable.java\n#\thazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/validate/UnsupportedOperationVisitor.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "738906911e591a796910ee1f438181e75872f6fc", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/738906911e591a796910ee1f438181e75872f6fc", "committedDate": "2020-12-11T12:42:24Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e714dd4b82072faa97a6610e7e5e8d9ca462b12d", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/e714dd4b82072faa97a6610e7e5e8d9ca462b12d", "committedDate": "2020-12-15T11:27:54Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946beb31a289e40a6e0824f5aebaa745908d9460", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/946beb31a289e40a6e0824f5aebaa745908d9460", "committedDate": "2020-12-15T11:57:21Z", "message": "Use fanout() for non primitive key inner joins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8714a9b0e9909a6ca979c6e84cb15770f25c43a", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d8714a9b0e9909a6ca979c6e84cb15770f25c43a", "committedDate": "2020-12-15T13:41:57Z", "message": "Remove intermediate list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba65ed49226a1d5e9b7ca61541119cb26c2433c8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ba65ed49226a1d5e9b7ca61541119cb26c2433c8", "committedDate": "2020-12-17T07:25:07Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7ca9b507f421f2d7803a007b2797912ed293cbc", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/e7ca9b507f421f2d7803a007b2797912ed293cbc", "committedDate": "2020-12-17T08:26:12Z", "message": "Merge branch 'master' into sql-join"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acb5b6750feddf2738ebb8b890597a8d1ddaaba8", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/acb5b6750feddf2738ebb8b890597a8d1ddaaba8", "committedDate": "2020-12-17T08:51:04Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d165c46c1356a1c2e995c71b53348608ce9f82be", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d165c46c1356a1c2e995c71b53348608ce9f82be", "committedDate": "2020-12-18T09:34:04Z", "message": "Improve scan case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0c5d8a71d6dda7327eeeb1ee6d3ffd00160ebb", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4f0c5d8a71d6dda7327eeeb1ee6d3ffd00160ebb", "committedDate": "2020-12-18T09:54:53Z", "message": "Fix spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0d44f072fb0dd04368c92c7f07bde7227b26f0c", "author": {"user": {"login": "TomaszGaweda", "name": "Tomasz Gaw\u0119da"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b0d44f072fb0dd04368c92c7f07bde7227b26f0c", "committedDate": "2021-01-07T08:03:01Z", "message": "Config option to disable the IMDG version check (#2610)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f46b3e693b4aab55cc395bb196fe020281728c4", "author": {"user": {"login": "cangencer", "name": "Can Gencer"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7f46b3e693b4aab55cc395bb196fe020281728c4", "committedDate": "2021-01-07T08:03:03Z", "message": "Add SQL CLI as jet sql command (#2654)\n\n* Use JLine to read sql lines\r\n\r\n* Add basic multiline support\r\n\r\n* Add a way to cancel a streaming query\r\n\r\n* Add SQL CLI documentation\r\n\r\n* Workaround the jline race in signal handlers\r\n\r\nSee https://github.com/jline/jline3/pull/629\r\n\r\n* Allow special commands to run without semicolon\r\n\r\nCo-authored-by: Ufuk <ufuk.yilmaz@hazelcast.com>\r\nCo-authored-by: Viliam Durina <viliam-durina@users.noreply.github.com>\r\nCo-authored-by: Marko Topolnik <marko@hazelcast.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad30be28da963be74dfc2afc00b5361781d13de7", "author": {"user": {"login": "ufukyilmaz", "name": null}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ad30be28da963be74dfc2afc00b5361781d13de7", "committedDate": "2021-01-07T08:03:05Z", "message": "Update IMDG version to 4.1.1 (#2766)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60d7a6792ab2928fdb69540ae0a1155d55bd80cb", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/60d7a6792ab2928fdb69540ae0a1155d55bd80cb", "committedDate": "2021-01-07T08:23:19Z", "message": "Renaming, simplify joinFn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69e8893c80d8ac3db0452a3c59aa7cbf7615c308", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/69e8893c80d8ac3db0452a3c59aa7cbf7615c308", "committedDate": "2021-01-07T08:27:05Z", "message": "Use fanout() edge for joining using entrySet()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ab785f9c978e22a431d76328ab47119f8d352a1", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/1ab785f9c978e22a431d76328ab47119f8d352a1", "committedDate": "2021-01-07T10:59:54Z", "message": "Add comments to various join variants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9824500aeef1d268fede3abb8356c779b05f0e05", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/9824500aeef1d268fede3abb8356c779b05f0e05", "committedDate": "2021-01-07T11:01:31Z", "message": "Remove unnecessary cast"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb8a13d834065048ebb05478d9579262474e39b3", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/cb8a13d834065048ebb05478d9579262474e39b3", "committedDate": "2021-01-07T11:02:32Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a7586207eccf2bc1c5d8aa99c65549275befcd6", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3a7586207eccf2bc1c5d8aa99c65549275befcd6", "committedDate": "2021-01-07T11:02:35Z", "message": "Add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22e68fd31f95d8ef2c31bca261ed409452c5296", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d22e68fd31f95d8ef2c31bca261ed409452c5296", "committedDate": "2021-01-07T11:02:37Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d73cebfad1c9a2c02b8a66679c0a6d8bc57be146", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/d73cebfad1c9a2c02b8a66679c0a6d8bc57be146", "committedDate": "2021-01-07T11:02:39Z", "message": "Improve error msg when joining a subquery or VALUES"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b38435f90a04065da440b4d0e8ba5adc9978de", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/60b38435f90a04065da440b4d0e8ba5adc9978de", "committedDate": "2021-01-07T11:02:41Z", "message": "Simplify ExpressionUtilTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc0737d75814700b272a9531f803d83676adcde", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7bc0737d75814700b272a9531f803d83676adcde", "committedDate": "2021-01-07T11:02:43Z", "message": "Replace `boolean inner` with `RelJoinType`\n\nWe implied that `!inner == LEFT`, but that's not true in SQL, it was perplexing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2425510e4b00cc0bc90072d31576064fefabc67a", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2425510e4b00cc0bc90072d31576064fefabc67a", "committedDate": "2021-01-07T11:02:45Z", "message": "Fix partitionIdSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82a764eb0839b04d53fcfc5e70fde82822d7a746", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/82a764eb0839b04d53fcfc5e70fde82822d7a746", "committedDate": "2021-01-07T11:04:48Z", "message": "Add TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2230d48d3794a2708c1a29e507b51f26289eecac", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/2230d48d3794a2708c1a29e507b51f26289eecac", "committedDate": "2021-01-07T12:23:54Z", "message": "Merge branch 'master' into sql-join\n\n# Conflicts:\n#\thazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6f4554c7dc4d79a0c1e5a301736f1dda8dda0aa", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f6f4554c7dc4d79a0c1e5a301736f1dda8dda0aa", "committedDate": "2021-01-07T12:41:35Z", "message": "Fix spotbugs & formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc45116ff6fcf5a53cf518385e65e0e651aa74e6", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/dc45116ff6fcf5a53cf518385e65e0e651aa74e6", "committedDate": "2021-01-07T14:28:20Z", "message": "Fix SqlConnector.nestedLoopReader() javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7685152c9191e01b45808e700dc4732aa0cca5", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3e7685152c9191e01b45808e700dc4732aa0cca5", "committedDate": "2021-01-07T16:16:55Z", "message": "Unify JoinByPredicate inner and outer variants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNjI0MDY4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#pullrequestreview-563624068", "createdAt": "2021-01-07T16:19:40Z", "commit": {"oid": "3e7685152c9191e01b45808e700dc4732aa0cca5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNjoxOTo0MFrOIPy0Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNjoxOTo0MFrOIPy0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQzMjExOA==", "bodyText": "Why do we limit the batch size? We do entrySet repeatedly but only in order to have fresh data. But I think the batch can be unlimited here (and it's practically limited already, the inbox has limited size). It might even be better to scan for updated data once per second.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2648#discussion_r553432118", "createdAt": "2021-01-07T16:19:40Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-sql/src/main/java/com/hazelcast/jet/sql/impl/connector/map/JoinScanProcessorSupplier.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.sql.impl.connector.map;\n+\n+import com.hazelcast.function.FunctionEx;\n+import com.hazelcast.jet.Traverser;\n+import com.hazelcast.jet.core.Processor;\n+import com.hazelcast.jet.core.ProcessorSupplier;\n+import com.hazelcast.jet.impl.processor.TransformBatchedP;\n+import com.hazelcast.jet.sql.impl.ExpressionUtil;\n+import com.hazelcast.jet.sql.impl.JetJoinInfo;\n+import com.hazelcast.jet.sql.impl.connector.keyvalue.KvRowProjector;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.DataSerializable;\n+import com.hazelcast.projection.Projection;\n+import com.hazelcast.sql.impl.expression.Expression;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map.Entry;\n+\n+import static com.hazelcast.jet.Traversers.traverseIterable;\n+import static com.hazelcast.jet.impl.util.Util.extendArray;\n+\n+@SuppressFBWarnings(\n+        value = {\"SE_BAD_FIELD\", \"SE_NO_SERIALVERSIONID\"},\n+        justification = \"the class is never java-serialized\"\n+)\n+final class JoinScanProcessorSupplier implements ProcessorSupplier, DataSerializable {\n+\n+    private static final int MAX_BATCH_SIZE = 1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7685152c9191e01b45808e700dc4732aa0cca5"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3500, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}