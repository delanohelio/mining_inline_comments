{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTk2NjUz", "number": 2100, "title": "[006] Add Google Protocol Buffers serialization support", "bodyText": "Added Google Protocol Buffers serialization support in form of a StreamSerializer adapter.\nIt can be registered on a job-level or instantiated and registered for the client/cluster.\nChecklist\n\n Tags Set\n Milestone Set\n New public APIs have @Nonnull/@Nullable annotations\n New public APIs have @since tags in Javadoc", "createdAt": "2020-03-26T14:14:22Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100", "merged": true, "mergeCommit": {"oid": "97af860bfcb6aa5d44a6a0386ef38e56bea33ca5"}, "closed": true, "closedAt": "2020-04-02T07:42:09Z", "author": {"login": "gierlachg"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRcwjPAH2gAyMzk0MTk2NjUzOmYwZTNmZjExMGQxOGJjM2ExNGIxOTc5ZDEzZjJiODE3NGI0ODNlNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTmt9RAH2gAyMzk0MTk2NjUzOjNkNjE5MTY2YTQ1NDQ1ZDRhZTkzYTMxNTIyYWQ5MTgzYzA3NWE5NTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0e3ff110d18bc3a14b1979d13f2b8174b483e48", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f0e3ff110d18bc3a14b1979d13f2b8174b483e48", "committedDate": "2020-03-26T14:13:10Z", "message": "Add protobuf serialization support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2c01a45820ac18f0ef253c127547a0540e49d9c", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a2c01a45820ac18f0ef253c127547a0540e49d9c", "committedDate": "2020-03-26T14:39:00Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03aa90b8e80ee84e7da4da56d07d86d1bd7069cf", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/03aa90b8e80ee84e7da4da56d07d86d1bd7069cf", "committedDate": "2020-03-26T15:24:36Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94973bf35b94cd92a5ce391e161463ae15fa9c52", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/94973bf35b94cd92a5ce391e161463ae15fa9c52", "committedDate": "2020-03-27T10:05:58Z", "message": "Add protobuf serialization support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a9308d6f3e949065cfd67707f56856a321807d", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/39a9308d6f3e949065cfd67707f56856a321807d", "committedDate": "2020-03-27T10:48:47Z", "message": "Improve javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c33a34d3a9dbd52c5f2872678aee3a32b5db836", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/5c33a34d3a9dbd52c5f2872678aee3a32b5db836", "committedDate": "2020-03-27T10:50:14Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb7f7701fa73e59c0e8ea240e8571d0e6ba1a41", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/4bb7f7701fa73e59c0e8ea240e8571d0e6ba1a41", "committedDate": "2020-03-27T10:51:59Z", "message": "Merge branch 'master' into protobuf_support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/784a0b5db43f0f5be2d30caf8e652bf4ff88c67b", "committedDate": "2020-03-27T11:58:35Z", "message": "Add protobuf serialization support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODE0Mzc4", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-383814378", "createdAt": "2020-03-30T12:44:03Z", "commit": {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0NDowM1rOF9n4mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0OToyNFrOF9oFNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MDkyMw==", "bodyText": "could we explain why? i.e. it needs to be a certain type etc.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400160923", "createdAt": "2020-03-30T12:44:03Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoStreamSerializer.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ *     https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public class ProtoStreamSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Google Protocol Buffers v3 serializer.\n+     *\n+     * @param typeId unique type id of serializer\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     */\n+    public ProtoStreamSerializer(int typeId, @Nonnull Class<T> clazz) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MTIyNQ==", "bodyText": "is parser thread safe?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400161225", "createdAt": "2020-03-30T12:44:34Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoStreamSerializer.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ *     https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public class ProtoStreamSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Google Protocol Buffers v3 serializer.\n+     *\n+     * @param typeId unique type id of serializer\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     */\n+    public ProtoStreamSerializer(int typeId, @Nonnull Class<T> clazz) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported\");\n+\n+        this.typeId = typeId;\n+        this.parser = parser(clazz);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private Parser<T> parser(Class<T> clazz) {\n+        try {\n+            T defaultMessageInstance = (T) clazz.getMethod(DEFAULT_INSTANCE_METHOD_NAME).invoke(null);\n+            return (Parser<T>) defaultMessageInstance.getParserForType();\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n+            throw sneakyThrow(e);\n+        }\n+    }\n+\n+    @Override\n+    public int getTypeId() {\n+        return typeId;\n+    }\n+\n+    @Override\n+    public void write(ObjectDataOutput out, T object) throws IOException {\n+        out.writeByteArray(object.toByteArray());\n+    }\n+\n+    @Override\n+    public T read(ObjectDataInput in) throws IOException {\n+        return parser.parseFrom(in.readByteArray());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDE1MQ==", "bodyText": "how is this different than SerializerHook? It seems like we created lot of new interfaces, without a concrete reason.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400164151", "createdAt": "2020-03-30T12:49:24Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/serialization/SerializerFactory.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl.serialization;\n+\n+import com.hazelcast.internal.util.ExceptionUtil;\n+import com.hazelcast.internal.util.ServiceLoader;\n+import com.hazelcast.nio.serialization.Serializer;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Iterator;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkFalse;\n+import static com.hazelcast.internal.util.Preconditions.checkState;\n+import static com.hazelcast.jet.impl.util.ReflectionUtils.loadClass;\n+import static com.hazelcast.jet.impl.util.ReflectionUtils.newInstance;\n+\n+/**\n+ * A serializer factory facade that discovers serializer factories by reading:\n+ * <ul>\n+ *     <li>\"META-INF/services/com.hazelcast.jet.protobuf.SerializerFactoryHook\"\n+ *     for Google Protocol Buffers v3 serializer factory</li>\n+ * </ul>\n+ * <p>\n+ * This system is meant to be internal code and is subject to change at any time.\n+ */\n+public final class SerializerFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "784a0b5db43f0f5be2d30caf8e652bf4ff88c67b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b6d6844ae8537aef9b1d338dc10565472b4c28", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b3b6d6844ae8537aef9b1d338dc10565472b4c28", "committedDate": "2020-03-30T14:33:21Z", "message": "Simplify serializers creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "076a57ded23474fe058355ff5df7b85e9fe864ce", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/076a57ded23474fe058355ff5df7b85e9fe864ce", "committedDate": "2020-03-31T06:33:09Z", "message": "Merge branch 'master' into protobuf_support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f295767b651ead93b4c62d01c688ed067f977c66", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f295767b651ead93b4c62d01c688ed067f977c66", "committedDate": "2020-03-31T06:54:44Z", "message": "Simplify even more"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5a9d0a9e227e7f27aa33da4d6b55410ab189950", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/a5a9d0a9e227e7f27aa33da4d6b55410ab189950", "committedDate": "2020-03-31T07:46:29Z", "message": "Merge branch 'master' into protobuf_support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTA5MjI1", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-384509225", "createdAt": "2020-03-31T08:28:09Z", "commit": {"oid": "a5a9d0a9e227e7f27aa33da4d6b55410ab189950"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoyODowOVrOF-Kvpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoyODowOVrOF-Kvpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczMjA3MQ==", "bodyText": "missing annotation on return type. Could also explain the parameters?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400732071", "createdAt": "2020-03-31T08:28:09Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtoSerializer.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * An adapter implementation of {@link StreamSerializer} for Google Protocol\n+ * Buffers v3 binary format.\n+ *\n+ * <p>To learn more about Protocol Buffers, visit:\n+ * <a href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ * https://developers.google.com/protocol-buffers/docs/proto3\n+ * </a>\n+ *\n+ * @param <T> the Protocol Buffers {@link GeneratedMessageV3} handled by this\n+ *            {@link StreamSerializer}.\n+ * @since 4.1\n+ */\n+public abstract class ProtoSerializer<T extends GeneratedMessageV3> implements StreamSerializer<T> {\n+\n+    private static final String DEFAULT_INSTANCE_METHOD_NAME = \"getDefaultInstance\";\n+\n+    private final int typeId;\n+    private final Parser<T> parser;\n+\n+    /**\n+     * Creates Protocol Buffers v3 serializer.\n+     *\n+     * @param clazz  class of {@link GeneratedMessageV3} handled by this\n+     *               serializer\n+     * @param typeId unique type id of serializer\n+     */\n+    public ProtoSerializer(@Nonnull Class<T> clazz, int typeId) {\n+        checkTrue(GeneratedMessageV3.class.isAssignableFrom(clazz), clazz.getName() + \" is not supported, \" +\n+                \"provide a Protocol Buffers \" + GeneratedMessageV3.class.getName() + \" type\");\n+\n+        this.typeId = typeId;\n+        this.parser = parser(clazz);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private Parser<T> parser(Class<T> clazz) {\n+        try {\n+            T defaultMessageInstance = (T) clazz.getMethod(DEFAULT_INSTANCE_METHOD_NAME).invoke(null);\n+            return (Parser<T>) defaultMessageInstance.getParserForType();\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n+            throw sneakyThrow(e);\n+        }\n+    }\n+\n+    @Override\n+    public int getTypeId() {\n+        return typeId;\n+    }\n+\n+    @Override\n+    public void write(ObjectDataOutput out, T object) throws IOException {\n+        out.writeByteArray(object.toByteArray());\n+    }\n+\n+    @Override\n+    public T read(ObjectDataInput in) throws IOException {\n+        return parser.parseFrom(in.readByteArray());\n+    }\n+\n+    /**\n+     * An utility method that creates an anonymous {@link ProtoSerializer}.\n+     */\n+    public static <T extends GeneratedMessageV3> ProtoSerializer<T> from(@Nonnull Class<T> clazz, int typeId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5a9d0a9e227e7f27aa33da4d6b55410ab189950"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b67879d0247d5e4c50db857ef21488675e4848", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/b5b67879d0247d5e4c50db857ef21488675e4848", "committedDate": "2020-03-31T10:30:00Z", "message": "Add ProtoSerializerHook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca39e4039d947e3c0a1a6b78817131ca15a4a144", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ca39e4039d947e3c0a1a6b78817131ca15a4a144", "committedDate": "2020-03-31T11:07:16Z", "message": "Merge branch 'master' into protobuf_support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1697e35cd7fec3cad20ed87e1c291337e12e4c0", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/f1697e35cd7fec3cad20ed87e1c291337e12e4c0", "committedDate": "2020-03-31T11:09:46Z", "message": "Add protobuf extension to distribution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "156afde9caec88e92be0a43d59bfbad00a7f48b9", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/156afde9caec88e92be0a43d59bfbad00a7f48b9", "committedDate": "2020-03-31T11:40:45Z", "message": "Fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjU3MTg3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-384657187", "createdAt": "2020-03-31T11:54:12Z", "commit": {"oid": "156afde9caec88e92be0a43d59bfbad00a7f48b9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo1NDoxMlrOF-SEVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo1Njo0OVrOF-SJmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MjA1Mw==", "bodyText": "nitpicking but we keep these sorted", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400852053", "createdAt": "2020-03-31T11:54:12Z", "author": {"login": "cangencer"}, "path": "extensions/pom.xml", "diffHunk": "@@ -34,6 +34,7 @@\n \n     <modules>\n         <module>avro</module>\n+        <module>protobuf</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "156afde9caec88e92be0a43d59bfbad00a7f48b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MzQwMA==", "bodyText": "is this required? when doing the gRPC module it was not required to add this step, it was added automatically.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r400853400", "createdAt": "2020-03-31T11:56:49Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/pom.xml", "diffHunk": "@@ -0,0 +1,130 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Hazelcast Inc.\n+  ~\n+  ~ Licensed under the Hazelcast Community License (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://hazelcast.com/hazelcast-community-license\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <packaging>jar</packaging>\n+    <name>hazelcast-jet-protobuf</name>\n+    <description>Protobuf support for Hazelcast Jet</description>\n+    <url>http://www.hazelcast.com/</url>\n+\n+    <artifactId>hazelcast-jet-protobuf</artifactId>\n+\n+    <parent>\n+        <groupId>com.hazelcast.jet</groupId>\n+        <artifactId>hazelcast-jet-extensions</artifactId>\n+        <version>4.1-SNAPSHOT</version>\n+    </parent>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>kr.motd.maven</groupId>\n+                <artifactId>os-maven-plugin</artifactId>\n+                <version>${maven.os.plugin.version}</version>\n+            </extension>\n+        </extensions>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.xolstice.maven.plugins</groupId>\n+                <artifactId>protobuf-maven-plugin</artifactId>\n+                <version>${maven.protobuf.plugin.version}</version>\n+                <extensions>true</extensions>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>test-compile</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <protoTestSourceRoot>${project.basedir}/src/test/resources</protoTestSourceRoot>\n+                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>build-helper-maven-plugin</artifactId>\n+                <version>${maven.builder.helper.version}</version>\n+                <executions>\n+                    <execution>\n+                        <id>add-protobuf-generate-test-sources</id>\n+                        <phase>generate-test-sources</phase>\n+                        <goals>\n+                            <goal>add-test-source</goal>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "156afde9caec88e92be0a43d59bfbad00a7f48b9"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04c02b07fda4261f29ab7d78d344c7fc24372915", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/04c02b07fda4261f29ab7d78d344c7fc24372915", "committedDate": "2020-03-31T12:23:11Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af78449c6d842ff190db73a458cdc4c03c52c6c", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/6af78449c6d842ff190db73a458cdc4c03c52c6c", "committedDate": "2020-04-01T08:28:41Z", "message": "Add missing @since tag to ProtoSerializerHook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7a72d1e249a10c63967cec43d91dd8c5b73bfd", "author": {"user": {"login": "mtopolnik", "name": "Marko Topolnik"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7e7a72d1e249a10c63967cec43d91dd8c5b73bfd", "committedDate": "2020-04-01T14:35:42Z", "message": "Improve Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958b28bfa52701cea8b5b6c7d5ab2f4398686046", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/958b28bfa52701cea8b5b6c7d5ab2f4398686046", "committedDate": "2020-04-01T16:03:54Z", "message": "Forbid serializers with negative type ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "545602af3dd594021d2c5fda97c0b66067fb72b3", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/545602af3dd594021d2c5fda97c0b66067fb72b3", "committedDate": "2020-04-01T16:04:00Z", "message": "Merge remote-tracking branch 'origin/protobuf_support' into protobuf_support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/54998291f1ab1bd0e77f1ca298407c49a8dd54fa", "committedDate": "2020-04-01T16:07:48Z", "message": "Rename Proto to Protobuf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzM5MzI3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-385739327", "createdAt": "2020-04-01T16:13:16Z", "commit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTQ5MDc5", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-386149079", "createdAt": "2020-04-02T06:54:17Z", "commit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo1NDoxN1rOF_dkcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo1NDoxN1rOF_dkcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4OTA3NA==", "bodyText": "should be jet-start.sh", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r402089074", "createdAt": "2020-04-02T06:54:17Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtobufSerializer.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.google.protobuf.Parser;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+\n+import javax.annotation.Nonnull;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static com.hazelcast.internal.util.Preconditions.checkTrue;\n+import static com.hazelcast.jet.impl.util.ExceptionUtil.sneakyThrow;\n+\n+/**\n+ * Adapts a generated <a\n+ * href=\"https://developers.google.com/protocol-buffers/docs/proto3\">\n+ * Google Protocol Buffers v3</a> serializer class to the Hazelcast {@link\n+ * StreamSerializer} interface.\n+ * <p>\n+ * To learn how to use this class, visit Jet's <a\n+ * href=\"https://hazelcast-jet.io/docs/api/serialization#google-protocol-buffers\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTQ5MzEz", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-386149313", "createdAt": "2020-04-02T06:54:43Z", "commit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo1NDo0M1rOF_dlMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNjo1NDo0M1rOF_dlMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4OTI2NQ==", "bodyText": "same as before", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#discussion_r402089265", "createdAt": "2020-04-02T06:54:43Z", "author": {"login": "cangencer"}, "path": "extensions/protobuf/src/main/java/com/hazelcast/jet/protobuf/ProtobufSerializerHook.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Hazelcast Inc.\n+ *\n+ * Licensed under the Hazelcast Community License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://hazelcast.com/hazelcast-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.protobuf;\n+\n+import com.google.protobuf.GeneratedMessageV3;\n+import com.hazelcast.nio.serialization.Serializer;\n+import com.hazelcast.nio.serialization.SerializerHook;\n+\n+/**\n+ * Simplifies using the {@linkplain SerializerHook Hazelcast Serializer\n+ * Hook mechanism} to register a Google Protocol Buffers serializer with\n+ * the Hazelcast Jet cluster. The serialized class can then be used in\n+ * Hazelcast data structures and Jet jobs.\n+ * <p>\n+ * To use it, create a JAR containing the serializer hook class and\n+ * {@code META-INF/services/com.hazelcast.SerializerHook}, a plain-text\n+ * file containing its fully qualified name. Visit Jet's <a\n+ * href=\"https://hazelcast-jet.io/docs/api/serialization#google-protocol-buffers\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTQ5NzMy", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2100#pullrequestreview-386149732", "createdAt": "2020-04-02T06:55:30Z", "commit": {"oid": "54998291f1ab1bd0e77f1ca298407c49a8dd54fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d619166a45445d4ae93a31522ad9183c075a952", "author": {"user": {"login": "gierlachg", "name": "Grzegorz Gierlach"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/3d619166a45445d4ae93a31522ad9183c075a952", "committedDate": "2020-04-02T06:57:14Z", "message": "Change docs URLs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}