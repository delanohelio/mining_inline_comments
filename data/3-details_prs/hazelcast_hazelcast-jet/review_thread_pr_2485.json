{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTE2NTQ0", "number": 2485, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTo1NjowNVrOEfhdpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowMzo0MFrOEf-vew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDg5NTcyOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/WatermarkPolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTo1NjowNVrOHL2F0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzoyNDo1MlrOHMZgDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE4MjYwOA==", "bodyText": "missing @since", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2485#discussion_r482182608", "createdAt": "2020-09-02T15:56:05Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/WatermarkPolicy.java", "diffHunk": "@@ -98,4 +90,27 @@ public long getCurrentWatermark() {\n             }\n         };\n     }\n+\n+    /**\n+     * Maintains a watermark that lags behind the real time by the given\n+     * amount. Doesn't consider the event timestamp at all.\n+     *\n+     * @param lag the desired difference between the top observed timestamp\n+     *            and the watermark\n+     */\n+    @Nonnull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e4f8458db23c17b645908deb51cc31940d5eccc"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc2Mjc2Ng==", "bodyText": "It's core API, do we care? It can also be gone...\nI added it nevertheless, it doesn't hurt.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2485#discussion_r482762766", "createdAt": "2020-09-03T07:24:52Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/WatermarkPolicy.java", "diffHunk": "@@ -98,4 +90,27 @@ public long getCurrentWatermark() {\n             }\n         };\n     }\n+\n+    /**\n+     * Maintains a watermark that lags behind the real time by the given\n+     * amount. Doesn't consider the event timestamp at all.\n+     *\n+     * @param lag the desired difference between the top observed timestamp\n+     *            and the watermark\n+     */\n+    @Nonnull", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE4MjYwOA=="}, "originalCommit": {"oid": "1e4f8458db23c17b645908deb51cc31940d5eccc"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTY4OTAyOnYy", "diffSide": "RIGHT", "path": "site/docs/api/pipeline.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowMjo0MVrOHMlizA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowMjo0MVrOHMlizA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MDA3Ng==", "bodyText": "missing a .. Should we also say, instead of event-time semantics, system-time semantics will be used?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2485#discussion_r482960076", "createdAt": "2020-09-03T13:02:41Z", "author": {"login": "cangencer"}, "path": "site/docs/api/pipeline.md", "diffHunk": "@@ -53,6 +53,10 @@ a `SourceStreamStage` which offers just these methods:\n   provides a function to the source that determines the timestamp of\n   each event.\n \n+- `withIngestionTimestamps()`\n+  declares that the source will assign the time of ingestion as the\n+  event timestamp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d065d36be562dc4b8f453cf94fa716fefa662182"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTY5Mjc1OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/StreamSourceStage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowMzo0MFrOHMllEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzowMzo0MFrOHMllEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2MDY1OA==", "bodyText": "\"If the timestamp is extracted from the event and there are no more event\" sounds a bit confusing since it sounds like it's referring to this method. I think it would be better to link to the other methods, i.e. if nativeTimestamps or withTimestamps method is used..", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2485#discussion_r482960658", "createdAt": "2020-09-03T13:03:40Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/StreamSourceStage.java", "diffHunk": "@@ -49,6 +49,11 @@\n      * it observes an event from the data source and assign it as the event\n      * timestamp.\n      * <p>\n+     * With this mode the event time advances even in the absence of events. If\n+     * the timestamp is extracted from the event and there are no more events,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d065d36be562dc4b8f453cf94fa716fefa662182"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4553, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}