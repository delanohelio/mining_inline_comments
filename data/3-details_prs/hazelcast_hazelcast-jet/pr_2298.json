{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Mjc2NjA5", "number": 2298, "title": "Use hz-serialization for processor suppliers", "bodyText": "", "createdAt": "2020-06-03T15:23:23Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2298", "merged": true, "mergeCommit": {"oid": "26a701fc91eeaacbdcbf463cc5666d990e588d32"}, "closed": true, "closedAt": "2020-06-05T09:44:39Z", "author": {"login": "viliam-durina"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnrG2sAH2gAyNDI3Mjc2NjA5OjQ0Y2EzOTVkYWU2Y2ZlYjhhMmQ5ZTBkNjkyYTY0ODg2NTFiZDUyNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoNWmLAFqTQyNTA0Nzk2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44ca395dae6cfeb8a2d9e0d692a6488651bd5272", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/44ca395dae6cfeb8a2d9e0d692a6488651bd5272", "committedDate": "2020-06-03T15:22:32Z", "message": "Use hz-serialization for processor suppliers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30875fc4ad4342d8640bd5d06ff9874ca34b53ed", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/30875fc4ad4342d8640bd5d06ff9874ca34b53ed", "committedDate": "2020-06-04T07:29:53Z", "message": "Fix deserialization using a correct class loader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce9372e5bb58c1f85febb5792062a5dd21ead779", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/ce9372e5bb58c1f85febb5792062a5dd21ead779", "committedDate": "2020-06-04T07:37:51Z", "message": "Match the read & write code better"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7078a7da9d3b1d7f6bf9701fca421097f460aa80", "author": {"user": {"login": "viliam-durina", "name": "Viliam Durina"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/7078a7da9d3b1d7f6bf9701fca421097f460aa80", "committedDate": "2020-06-04T07:44:55Z", "message": "Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDQ3OTY3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2298#pullrequestreview-425047967", "createdAt": "2020-06-05T07:12:09Z", "commit": {"oid": "7078a7da9d3b1d7f6bf9701fca421097f460aa80"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOGfi4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOGfi4tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMDYxNA==", "bodyText": "is the qualifier needed?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2298#discussion_r435730614", "createdAt": "2020-06-05T07:12:09Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/CustomClassLoadedObject.java", "diffHunk": "@@ -94,23 +95,36 @@ public boolean isOverwritable() {\n         // explicit cast to OutputStream and intentionally omitting to close ObjectOutputStream\n         @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n         public void write(ObjectDataOutput out, CustomClassLoadedObject object) throws IOException {\n-            final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n-            objectOutputStream.writeObject(object.object);\n-            // Force flush if not yet written due to internal behavior if pos < 1024\n-            objectOutputStream.flush();\n+            boolean isJavaSerialized = !(object.object instanceof DataSerializable);\n+            out.writeBoolean(isJavaSerialized);\n+            if (isJavaSerialized) {\n+                final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n+                objectOutputStream.writeObject(object.object);\n+                // Force flush if not yet written due to internal behavior if pos < 1024\n+                objectOutputStream.flush();\n+            } else {\n+                out.writeObject(object.object);\n+            }\n         }\n \n         @Override\n         // explicit cast to InputStream and intentionally omitting to close ObjectInputStream\n-        @SuppressFBWarnings({ \"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n-        public CustomClassLoadedObject read(ObjectDataInput in) throws IOException {\n+        @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n+        public CustomClassLoadedObject read(com.hazelcast.nio.ObjectDataInput in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7078a7da9d3b1d7f6bf9701fca421097f460aa80"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3647, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}