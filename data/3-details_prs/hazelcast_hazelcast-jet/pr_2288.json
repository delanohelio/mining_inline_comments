{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NTgyOTE5", "number": 2288, "title": "Add test for elastic and update/delete for non existing document", "bodyText": "Behavior of delete/update non existing document for elastic sink is not ideal now. It fails job if this happen. However it can be a problem when job is restarted (and the same delete request should be executed again) etc. Fixing this can be complicated - for Jet 4.2 this will be covered by documentation and eventually changed/fixed in the future. This PR adds regression tests for checking that behavior was not changed unexpectedly.\nChecklist\n\n Tags Set\n Milestone Set\n[N/A] Any breaking changes are documented\n[N/A] New public APIs have @Nonnull/@Nullable annotations\n[N/A] New public APIs have @since tags in Javadoc\n[N/A] For code samples, code sample main readme is updated", "createdAt": "2020-06-02T13:25:40Z", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288", "merged": true, "mergeCommit": {"oid": "2a3ede819e7eff22fbf4a20336b48bf63a5179c5"}, "closed": true, "closedAt": "2020-06-03T07:01:09Z", "author": {"login": "olukas"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnVXMSAFqTQyMjcwOTA4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnjZZogFqTQyMzI0OTI3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzA5MDg3", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#pullrequestreview-422709087", "createdAt": "2020-06-02T14:00:32Z", "commit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMDozM1rOGdzCxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDowMjoyNFrOGdzJ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODE4Mg==", "bodyText": "Can we use something like:\n        assertThatThrownBy(() -> submitJob(p))\n                .hasRootCauseInstanceOf(ElasticsearchStatusException.class)\n                .hasStackTraceContaining(\"failed to authenticate user [elastic]\");", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898182", "createdAt": "2020-06-02T14:00:33Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5ODM2Ng==", "bodyText": "Same here", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433898366", "createdAt": "2020-06-02T14:00:45Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "diffHunk": "@@ -140,6 +142,56 @@ public void given_documentInIndex_whenWriteToElasticSinkDeleteRequest_then_docum\n         assertNoDocuments(\"my-index\");\n     }\n \n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkUpdateRequest_then_jobShouldFail() throws Exception {\n+        Sink<TestItem> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                item -> new UpdateRequest(\"my-index\", item.id).doc(item.asMap())\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(new TestItem(\"notExist\", \"Frantisek\")))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }\n+    }\n+\n+    /**\n+     * Regression test for checking that behavior was not unexpectedly changed.\n+     * It is possible that behavior will be changed in any of future version\n+     * since failing job based on unsuccessful delete/update leads to problems\n+     * when job are restarted.\n+     */\n+    @Test\n+    public void given_documentNotInIndex_whenWriteToElasticSinkDeleteRequest_then_jobShouldFail() throws Exception {\n+        Sink<String> elasticSink = ElasticSinks.elastic(\n+                elasticClientSupplier(),\n+                (item) -> new DeleteRequest(\"my-index\", item)\n+        );\n+\n+        Pipeline p = Pipeline.create();\n+        p.readFrom(TestSources.items(\"notExist\"))\n+                .writeTo(elasticSink);\n+\n+        try {\n+            submitJob(p);\n+            fail();\n+        } catch (CompletionException ex) {\n+            // expected\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkwMDAwMQ==", "bodyText": "Sharp-eyed! Thanks!", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#discussion_r433900001", "createdAt": "2020-06-02T14:02:24Z", "author": {"login": "frant-hartm"}, "path": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "diffHunk": "@@ -76,7 +76,7 @@ public void given_authenticatedClient_whenWriteToElasticSink_thenFinishSuccessfu\n     }\n \n     @Test\n-    public void given_clientWithWrongPassword_whenReadFromElasticSource_thenFailWithAuthenticationException() {\n+    public void given_clientWithWrongPassword_whenWriteToElasticSink_thenFailWithAuthenticationException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a8072ad6863deeac0230426433070156ab50ad0", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/0a8072ad6863deeac0230426433070156ab50ad0", "committedDate": "2020-06-03T05:44:22Z", "message": "Add test for elastic and update/delete for non existing document"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbb14df74be08473a5ac9c7b3470e87d3d3e35f7", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/cbb14df74be08473a5ac9c7b3470e87d3d3e35f7", "committedDate": "2020-06-02T13:18:45Z", "message": "Add test for elastic and update/delete for non existing document"}, "afterCommit": {"oid": "0a8072ad6863deeac0230426433070156ab50ad0", "author": {"user": {"login": "olukas", "name": "Ondrej Lukas"}}, "url": "https://github.com/hazelcast/hazelcast-jet/commit/0a8072ad6863deeac0230426433070156ab50ad0", "committedDate": "2020-06-03T05:44:22Z", "message": "Add test for elastic and update/delete for non existing document"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjQ5Mjc2", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2288#pullrequestreview-423249276", "createdAt": "2020-06-03T06:23:33Z", "commit": {"oid": "0a8072ad6863deeac0230426433070156ab50ad0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3643, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}