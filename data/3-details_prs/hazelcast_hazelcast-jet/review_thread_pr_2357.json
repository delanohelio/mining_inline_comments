{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTY3NTg4", "number": 2357, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0OToxNlrOEIbQwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0OToxNlrOEIbQwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjcwNzIxOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0OToxNlrOGoYXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjo0NzozM1rOGoteEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5NTQxMQ==", "bodyText": "minor but I think better to put this into IOUtil?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2357#discussion_r444995411", "createdAt": "2020-06-24T15:49:16Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -464,4 +465,22 @@ public static ProcessingGuarantee min(ProcessingGuarantee g1, ProcessingGuarante\n     public static <T, R> List<R> toList(@Nonnull Collection<T> coll, Function<? super T, ? extends R> mapFn) {\n         return coll.stream().map(mapFn).collect(Collectors.toList());\n     }\n+\n+    /**\n+     * Extracts the file name from the URL. File name is the part of {@code\n+     * url.getPath()} after the last '/' character. Returns empty string if the\n+     * path ends with a '/'.\n+     * <p>\n+     * Returns null if input is null or if {@code url.getPath()} returns null.\n+     */\n+    @Nullable\n+    public static String fileNameFromUrl(@Nullable URL url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b90446ac88a762577cf193d93a9d78e2175a79"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0MTIwMg==", "bodyText": "done", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2357#discussion_r445341202", "createdAt": "2020-06-25T06:47:33Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "diffHunk": "@@ -464,4 +465,22 @@ public static ProcessingGuarantee min(ProcessingGuarantee g1, ProcessingGuarante\n     public static <T, R> List<R> toList(@Nonnull Collection<T> coll, Function<? super T, ? extends R> mapFn) {\n         return coll.stream().map(mapFn).collect(Collectors.toList());\n     }\n+\n+    /**\n+     * Extracts the file name from the URL. File name is the part of {@code\n+     * url.getPath()} after the last '/' character. Returns empty string if the\n+     * path ends with a '/'.\n+     * <p>\n+     * Returns null if input is null or if {@code url.getPath()} returns null.\n+     */\n+    @Nullable\n+    public static String fileNameFromUrl(@Nullable URL url) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5NTQxMQ=="}, "originalCommit": {"oid": "75b90446ac88a762577cf193d93a9d78e2175a79"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4642, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}