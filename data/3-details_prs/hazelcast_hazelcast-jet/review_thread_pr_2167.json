{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzU1NDY3", "number": 2167, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowMjowMlrODx7O0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTowODo1OFrODx-5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc3MjY3OnYy", "diffSide": "RIGHT", "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowMjowMlrOGFq7EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoyMTozM1rOGFs6Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5OTMxMg==", "bodyText": "what happens if times out 5 seconds?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2167#discussion_r408599312", "createdAt": "2020-04-15T06:02:02Z", "author": {"login": "cangencer"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "diffHunk": "@@ -107,7 +108,7 @@ private GrpcServices() {\n                 .withCreateContextFn(ctx -> channelFn.get().build())\n                 .withCreateServiceFn((ctx, channel) -> new UnaryService<>(channel, callStubFn))\n                 .withDestroyServiceFn(UnaryService::destroy)\n-                .withDestroyContextFn(ManagedChannel::shutdown);\n+                .withDestroyContextFn(channel -> channel.shutdown().awaitTermination(5, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d791aab9726e8c94c942529e385e25059173510c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzMTUwMQ==", "bodyText": "Ha! I thought it throws TimeoutException, but it just returns true/false if it managed to shutdown in time.\nWhat should we do? Throw the exception ourselves?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2167#discussion_r408631501", "createdAt": "2020-04-15T07:20:54Z", "author": {"login": "frant-hartm"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "diffHunk": "@@ -107,7 +108,7 @@ private GrpcServices() {\n                 .withCreateContextFn(ctx -> channelFn.get().build())\n                 .withCreateServiceFn((ctx, channel) -> new UnaryService<>(channel, callStubFn))\n                 .withDestroyServiceFn(UnaryService::destroy)\n-                .withDestroyContextFn(ManagedChannel::shutdown);\n+                .withDestroyContextFn(channel -> channel.shutdown().awaitTermination(5, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5OTMxMg=="}, "originalCommit": {"oid": "d791aab9726e8c94c942529e385e25059173510c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzMTgzOA==", "bodyText": "is there some way to terminate it not so gracefully?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2167#discussion_r408631838", "createdAt": "2020-04-15T07:21:33Z", "author": {"login": "cangencer"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "diffHunk": "@@ -107,7 +108,7 @@ private GrpcServices() {\n                 .withCreateContextFn(ctx -> channelFn.get().build())\n                 .withCreateServiceFn((ctx, channel) -> new UnaryService<>(channel, callStubFn))\n                 .withDestroyServiceFn(UnaryService::destroy)\n-                .withDestroyContextFn(ManagedChannel::shutdown);\n+                .withDestroyContextFn(channel -> channel.shutdown().awaitTermination(5, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5OTMxMg=="}, "originalCommit": {"oid": "d791aab9726e8c94c942529e385e25059173510c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzM3MzgzOnYy", "diffSide": "RIGHT", "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTowODo1OFrOGFwtTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTowODo1OFrOGFwtTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5NDA5Mg==", "bodyText": "it would be better to use the logger from ctx, you can do this by making createContextFn return tuple2(channel, logger) , kind of ugly, but it should be fine.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2167#discussion_r408694092", "createdAt": "2020-04-15T09:08:58Z", "author": {"login": "cangencer"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/GrpcServices.java", "diffHunk": "@@ -107,7 +112,7 @@ private GrpcServices() {\n                 .withCreateContextFn(ctx -> channelFn.get().build())\n                 .withCreateServiceFn((ctx, channel) -> new UnaryService<>(channel, callStubFn))\n                 .withDestroyServiceFn(UnaryService::destroy)\n-                .withDestroyContextFn(ManagedChannel::shutdown);\n+                .withDestroyContextFn(channel -> GrpcUtil.shutdownChannel(channel, logger));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc58ee4611892e013f7e2f6b102a983fbc18a44a"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4804, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}