{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Mjc2NjA5", "number": 2298, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOEC15bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOEC15bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDE1NjYyOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/CustomClassLoadedObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOGfi4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzoxMjowOVrOGfi4tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTczMDYxNA==", "bodyText": "is the qualifier needed?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2298#discussion_r435730614", "createdAt": "2020-06-05T07:12:09Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/CustomClassLoadedObject.java", "diffHunk": "@@ -94,23 +95,36 @@ public boolean isOverwritable() {\n         // explicit cast to OutputStream and intentionally omitting to close ObjectOutputStream\n         @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n         public void write(ObjectDataOutput out, CustomClassLoadedObject object) throws IOException {\n-            final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n-            objectOutputStream.writeObject(object.object);\n-            // Force flush if not yet written due to internal behavior if pos < 1024\n-            objectOutputStream.flush();\n+            boolean isJavaSerialized = !(object.object instanceof DataSerializable);\n+            out.writeBoolean(isJavaSerialized);\n+            if (isJavaSerialized) {\n+                final ObjectOutputStream objectOutputStream = new ObjectOutputStream((OutputStream) out);\n+                objectOutputStream.writeObject(object.object);\n+                // Force flush if not yet written due to internal behavior if pos < 1024\n+                objectOutputStream.flush();\n+            } else {\n+                out.writeObject(object.object);\n+            }\n         }\n \n         @Override\n         // explicit cast to InputStream and intentionally omitting to close ObjectInputStream\n-        @SuppressFBWarnings({ \"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n-        public CustomClassLoadedObject read(ObjectDataInput in) throws IOException {\n+        @SuppressFBWarnings({\"BC_UNCONFIRMED_CAST\", \"OS_OPEN_STREAM\"})\n+        public CustomClassLoadedObject read(com.hazelcast.nio.ObjectDataInput in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7078a7da9d3b1d7f6bf9701fca421097f460aa80"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4601, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}