{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0Njg1MjAw", "number": 1858, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODoyOToxMVrODZIPbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODoyOToxMVrODZIPbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Njc2MDEzOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwODoyOToxMVrOFfWbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMToxODo0OFrOFfbLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxNzYxOA==", "bodyText": "Can we add this to assertCollection method ?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1858#discussion_r368417618", "createdAt": "2020-01-20T08:29:11Z", "author": {"login": "eminn"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "diffHunk": "@@ -68,6 +69,9 @@ public void test(Path originalPath) throws IOException {\n         Set<Path> originalSet = getChildrenFromRoot(originalPath);\n         Set<Path> unzippedSet = getChildrenFromRoot(unzippedPath);\n \n+        if (originalSet.size() != unzippedSet.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1a9bd96d7a9ada88d546d25d014e8b1a5197e6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3OTg4OA==", "bodyText": "you mean to have it on IMDG side or overwrite it on our side ?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1858#discussion_r368479888", "createdAt": "2020-01-20T10:42:41Z", "author": {"login": "gurbuzali"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "diffHunk": "@@ -68,6 +69,9 @@ public void test(Path originalPath) throws IOException {\n         Set<Path> originalSet = getChildrenFromRoot(originalPath);\n         Set<Path> unzippedSet = getChildrenFromRoot(unzippedPath);\n \n+        if (originalSet.size() != unzippedSet.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxNzYxOA=="}, "originalCommit": {"oid": "9c1a9bd96d7a9ada88d546d25d014e8b1a5197e6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ4Nzk4Mw==", "bodyText": "I thought it comes from JetAssert but still we can improve the one in IMDG to print contents when the size is not equal", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1858#discussion_r368487983", "createdAt": "2020-01-20T11:00:30Z", "author": {"login": "eminn"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "diffHunk": "@@ -68,6 +69,9 @@ public void test(Path originalPath) throws IOException {\n         Set<Path> originalSet = getChildrenFromRoot(originalPath);\n         Set<Path> unzippedSet = getChildrenFromRoot(unzippedPath);\n \n+        if (originalSet.size() != unzippedSet.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxNzYxOA=="}, "originalCommit": {"oid": "9c1a9bd96d7a9ada88d546d25d014e8b1a5197e6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5NTQwOA==", "bodyText": "I've put it to JetTestSupport for now, after the change on IMDG side we can remove it", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1858#discussion_r368495408", "createdAt": "2020-01-20T11:18:48Z", "author": {"login": "gurbuzali"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/IOUtilTest.java", "diffHunk": "@@ -68,6 +69,9 @@ public void test(Path originalPath) throws IOException {\n         Set<Path> originalSet = getChildrenFromRoot(originalPath);\n         Set<Path> unzippedSet = getChildrenFromRoot(unzippedPath);\n \n+        if (originalSet.size() != unzippedSet.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxNzYxOA=="}, "originalCommit": {"oid": "9c1a9bd96d7a9ada88d546d25d014e8b1a5197e6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4916, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}