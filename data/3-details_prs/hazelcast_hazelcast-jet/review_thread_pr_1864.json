{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTI0MjAw", "number": 1864, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzozNTowM1rODZSHgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzozNTowM1rODZSHgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODM3ODI1OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzozNTowM1rOFfldow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDo0MDozMVrOFf8XBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2Mzk3MQ==", "bodyText": "I wonder if this will slow down job completion, since most processors will have a noop close implementation?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1864#discussion_r368663971", "createdAt": "2020-01-20T17:35:03Z", "author": {"login": "cangencer"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -343,11 +344,29 @@ private void stateMachineStep() {\n             case EMIT_DONE_ITEM:\n                 if (outbox.offerToEdgesAndSnapshot(DONE_ITEM)) {\n                     ssContext.processorTaskletDone();\n-                    state = END;\n-                    progTracker.done();\n+                    progTracker.madeProgress();\n+                    state = CLOSE;\n+                    stateMachineStep();\n                 }\n                 return;\n \n+            case CLOSE:\n+                if (isCooperative()) {\n+                    if (closeFuture == null) {\n+                        closeFuture = executionService.submit(this::closeProcessor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f81f62120539ab53bd1d0f67f8934bb0dbc626"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1OTE2Mw==", "bodyText": "Maybe we can have a no-op constant that we recognize and short-circuit this?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1864#discussion_r368859163", "createdAt": "2020-01-21T08:16:10Z", "author": {"login": "mtopolnik"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -343,11 +344,29 @@ private void stateMachineStep() {\n             case EMIT_DONE_ITEM:\n                 if (outbox.offerToEdgesAndSnapshot(DONE_ITEM)) {\n                     ssContext.processorTaskletDone();\n-                    state = END;\n-                    progTracker.done();\n+                    progTracker.madeProgress();\n+                    state = CLOSE;\n+                    stateMachineStep();\n                 }\n                 return;\n \n+            case CLOSE:\n+                if (isCooperative()) {\n+                    if (closeFuture == null) {\n+                        closeFuture = executionService.submit(this::closeProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2Mzk3MQ=="}, "originalCommit": {"oid": "63f81f62120539ab53bd1d0f67f8934bb0dbc626"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzOTExMA==", "bodyText": "@cangencer Using JMH submitting 100 no-op tasks to ForkJoinPool.commonPool and waiting for their completion by checking future.isDone takes on average 300\u03bcs. So it's not that much pain.\n@mtopolnik It's not a lambda, but a method we call. We can check if the declaringClass of close method is the Processor class:\nif (p.getClass().getMethod(\"close\").getDeclaringClass() == Processor.class)\n    // ignore the close method\nI benchmarked this too. This check took 1.3\u03bcs, while directly executing a no-op runnable took 1.7\u03bcs. I think it's not worth the complexity, we're not on a hot path.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/1864#discussion_r369039110", "createdAt": "2020-01-21T14:40:31Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "diffHunk": "@@ -343,11 +344,29 @@ private void stateMachineStep() {\n             case EMIT_DONE_ITEM:\n                 if (outbox.offerToEdgesAndSnapshot(DONE_ITEM)) {\n                     ssContext.processorTaskletDone();\n-                    state = END;\n-                    progTracker.done();\n+                    progTracker.madeProgress();\n+                    state = CLOSE;\n+                    stateMachineStep();\n                 }\n                 return;\n \n+            case CLOSE:\n+                if (isCooperative()) {\n+                    if (closeFuture == null) {\n+                        closeFuture = executionService.submit(this::closeProcessor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2Mzk3MQ=="}, "originalCommit": {"oid": "63f81f62120539ab53bd1d0f67f8934bb0dbc626"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}