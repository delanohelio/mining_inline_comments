{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzUwOTkx", "number": 2581, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NDo1NlrOEpwTFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDozMDo0NlrOEqQenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE4Mzg5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NDo1NlrOHbnkhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NDo1NlrOHbnkhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMTkyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lead to the suspension of the job. Throws an {@code IllegalStateException}\n          \n          \n            \n                 * led to the suspension of the job. Throws an {@code IllegalStateException}", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498721924", "createdAt": "2020-10-02T09:44:56Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE4NTM5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NToxNVrOHbnlWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NToxNVrOHbnlWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjEzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * if the job is not actually suspended.\n          \n          \n            \n                 * if the job is not currently suspended.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722138", "createdAt": "2020-10-02T09:45:15Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not actually suspended.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE4NjI2OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NTozMFrOHbnl2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NTozMFrOHbnl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjI2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Description of the cause that has lead to the job being suspended.\n          \n          \n            \n             * Description of the cause that has led to the job being suspended.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722267", "createdAt": "2020-10-02T09:45:30Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE4OTAzOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NjoyNVrOHbnniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NjoyNVrOHbnniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjY5Ng==", "bodyText": "Shall we remove this?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498722696", "createdAt": "2020-10-02T09:46:25Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "diffHunk": "@@ -86,21 +87,15 @@ default String getName() {\n     JobStatus getStatus();\n \n     /**\n-     * Return a human-readable description of the cause that led to the\n-     * suspension of this job. For example whether the suspension has been\n-     * explicitly requested by the user or an error has occurred and the job is\n-     * configured to be suspended in such a case (see {@link\n-     * JobConfig#setSuspendOnFailure(boolean)}) - in this case the details of\n-     * the error are also provided.\n-     *\n-     * @return cause that led to the job suspension\n-     * @throws IllegalStateException if the job is not suspended\n+     * Return a {@link JobSuspensionCause description of the cause} that has\n+     * lead to the suspension of the job. Throws an {@code IllegalStateException}\n+     * if the job is not actually suspended.\n      *\n      * @since 4.3\n      */\n     @EvolvingApi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE5NzE2OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0OTowMVrOHbnsiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0OTowMVrOHbnsiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMzk3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Provides the error that has lead to the suspension of the job, or returns\n          \n          \n            \n                 * Provides the error that has led to the suspension of the job, or returns", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498723977", "createdAt": "2020-10-02T09:49:01Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE5ODQwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0OToyNFrOHbntRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyMToyMlrOHcWr3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA==", "bodyText": "Does it return null if requested by user? It's not clear to me and seems wrong.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498724164", "createdAt": "2020-10-02T09:49:24Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTE5Nw==", "bodyText": "Yes. Should it throw an exception instead?", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499379197", "createdAt": "2020-10-05T06:59:38Z", "author": {"login": "jbartok"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA=="}, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5Mzg1Mg==", "bodyText": "Two options:\n\nthrow a reconstructed exc in the same way as Job.join does\nreturn a String...", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499493852", "createdAt": "2020-10-05T10:21:22Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDE2NA=="}, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjIyNzgzOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo1OTo0MFrOHbn_-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzowMzowOFrOHcPxcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODk1Mg==", "bodyText": "The client might not have the Throwable class. For example, you have a job with a custom ML library. That lib is added either through JobConfig, or to the member class path. A client (e.g. the mancenter) connects and tries to see the cause. It will fail.\nAlso I'm not sure that we never read the JobExecutionRecord in a context where the classes from JobConfig might not be available, it will fail with this change.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498728952", "createdAt": "2020-10-02T09:59:40Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl;\n+\n+import com.hazelcast.jet.core.JobSuspensionCause;\n+import com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+\n+public class JobSuspensionCauseImpl implements JobSuspensionCause, IdentifiedDataSerializable {\n+\n+    private static final JobSuspensionCauseImpl REQUESTED_BY_USER = new JobSuspensionCauseImpl(null);\n+\n+    private Throwable error;\n+\n+    public JobSuspensionCauseImpl() { //needed for deserialization\n+    }\n+\n+    private JobSuspensionCauseImpl(Throwable error) {\n+        this.error = error;\n+    }\n+\n+    @Override\n+    public boolean requestedByUser() {\n+        return error == null;\n+    }\n+\n+    @Override\n+    public boolean dueToError() {\n+        return error != null;\n+    }\n+\n+    @Nullable\n+    @Override\n+    public Throwable errorCause() {\n+        return error;\n+    }\n+\n+    @Override\n+    public int getFactoryId() {\n+        return JetInitDataSerializerHook.FACTORY_ID;\n+    }\n+\n+    @Override\n+    public int getClassId() {\n+        return JetInitDataSerializerHook.JOB_SUSPENSION_CAUSE;\n+    }\n+\n+    @Override\n+    public void writeData(ObjectDataOutput out) throws IOException {\n+        out.writeObject(error);\n+    }\n+\n+    @Override\n+    public void readData(ObjectDataInput in) throws IOException {\n+        error = in.readObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MDU5Mw==", "bodyText": "Ok. I can then just keep the error and its stack trace formatted as a string, as before. The idea was to have an extra, safe status type checking, but while adding that I saw no reason not to carry the actual Throwable. But then there is one.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499380593", "createdAt": "2020-10-05T07:03:08Z", "author": {"login": "jbartok"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSuspensionCauseImpl.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.impl;\n+\n+import com.hazelcast.jet.core.JobSuspensionCause;\n+import com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.IdentifiedDataSerializable;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+\n+public class JobSuspensionCauseImpl implements JobSuspensionCause, IdentifiedDataSerializable {\n+\n+    private static final JobSuspensionCauseImpl REQUESTED_BY_USER = new JobSuspensionCauseImpl(null);\n+\n+    private Throwable error;\n+\n+    public JobSuspensionCauseImpl() { //needed for deserialization\n+    }\n+\n+    private JobSuspensionCauseImpl(Throwable error) {\n+        this.error = error;\n+    }\n+\n+    @Override\n+    public boolean requestedByUser() {\n+        return error == null;\n+    }\n+\n+    @Override\n+    public boolean dueToError() {\n+        return error != null;\n+    }\n+\n+    @Nullable\n+    @Override\n+    public Throwable errorCause() {\n+        return error;\n+    }\n+\n+    @Override\n+    public int getFactoryId() {\n+        return JetInitDataSerializerHook.FACTORY_ID;\n+    }\n+\n+    @Override\n+    public int getClassId() {\n+        return JetInitDataSerializerHook.JOB_SUSPENSION_CAUSE;\n+    }\n+\n+    @Override\n+    public void writeData(ObjectDataOutput out) throws IOException {\n+        out.writeObject(error);\n+    }\n+\n+    @Override\n+    public void readData(ObjectDataInput in) throws IOException {\n+        error = in.readObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODk1Mg=="}, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjIzODMwOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowMzoyNlrOHboGZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzowMzoyNlrOHcPx2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDU5Nw==", "bodyText": "What about adding a @Nonnull getDescription() method for simple cases that just want some information? The toString() can also delegate to this method.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498730597", "createdAt": "2020-10-02T10:03:26Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MDY5Ng==", "bodyText": "Ok.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499380696", "createdAt": "2020-10-05T07:03:26Z", "author": {"login": "jbartok"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMDU5Nw=="}, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjI0MTU5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowNDo1M1rOHboIfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowNDo1M1rOHboIfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMTEzNQ==", "bodyText": "\"True if the user explicitly suspended the job\"", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498731135", "createdAt": "2020-10-02T10:04:53Z", "author": {"login": "mtopolnik"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjI0ODkxOnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowNzozNFrOHboNMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowNzozNFrOHboNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjMzNg==", "bodyText": "\"True if Jet suspended the job because it encountered an error during execution\"", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498732336", "createdAt": "2020-10-02T10:07:34Z", "author": {"login": "mtopolnik"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjI1MDU1OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowODoxM1rOHboOLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDowODoxM1rOHboOLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjU4OQ==", "bodyText": "... is not an exception.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r498732589", "createdAt": "2020-10-02T10:08:13Z", "author": {"login": "mtopolnik"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Description of the cause that has lead to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the job has been suspended due to an explicit request from the\n+     * user.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if the job has been suspended due to encountering an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Provides the error that has lead to the suspension of the job, or returns\n+     * null if the cause of the suspension is different.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabe58573bd9bcc611a1e74d682f4d6daf255bda"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzQzNzk5OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyNTo0MVrOHcW14w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyNTo0MVrOHcW14w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5NjQxOQ==", "bodyText": "UnsupportedOperationException is for cases when some behavior is prescribed by the contract, but for some reason isn't implemented.\nBetter would be IllegalStateException.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499496419", "createdAt": "2020-10-05T10:25:41Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Description of the cause that has led to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the user explicitly suspended the job.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if Jet suspended the job because it encountered an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Describes the error that has led to the suspension of the job. Throws\n+     * {@link UnsupportedOperationException} if job was not suspended due to an", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75a61168c680090f41b79bdf2faafacc7fb6b1d5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzQ1MDI3OnYy", "diffSide": "RIGHT", "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyODo1OVrOHcW9Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyODo1OVrOHcW9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5ODI2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Describes the job suspension cause in a human readable form.\n          \n          \n            \n                 * Describes the job suspension cause in a human-readable form.\n          \n      \n    \n    \n  \n\nWithout the dash it's a form that's human and also readable :).", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499498267", "createdAt": "2020-10-05T10:28:59Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/JobSuspensionCause.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.jet.core;\n+\n+import com.hazelcast.jet.config.JobConfig;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Description of the cause that has led to the job being suspended.\n+ * <p>\n+ * One reason for the job to be suspended is the user explicitly requesting it.\n+ * Another reason is encountering an error during execution, while being\n+ * configured to get suspended in such cases, instead of just failing. See\n+ * {@link JobConfig#setSuspendOnFailure(boolean)}.\n+ * <p>\n+ * When the job has been suspended due to an error, then the cause of that\n+ * error is provided.\n+ *\n+ * @since 4.4\n+ */\n+public interface JobSuspensionCause {\n+\n+    /**\n+     * True if the user explicitly suspended the job.\n+     */\n+    boolean requestedByUser();\n+\n+    /**\n+     * True if Jet suspended the job because it encountered an error during\n+     * execution.\n+     */\n+    boolean dueToError();\n+\n+    /**\n+     * Describes the error that has led to the suspension of the job. Throws\n+     * {@link UnsupportedOperationException} if job was not suspended due to an\n+     * error.\n+     */\n+    @Nonnull\n+    String errorCause();\n+\n+    /**\n+     * Describes the job suspension cause in a human readable form.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75a61168c680090f41b79bdf2faafacc7fb6b1d5"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzQ1NjI5OnYy", "diffSide": "LEFT", "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDozMDo0NlrOHcXAxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDozMDo0NlrOHcXAxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5OTIwNg==", "bodyText": "You can keep this assert against the description method.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2581#discussion_r499499206", "createdAt": "2020-10-05T10:30:46Z", "author": {"login": "viliam-durina"}, "path": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendExecutionOnFailureTest.java", "diffHunk": "@@ -113,7 +113,11 @@ public void when_jobSuspendedByUser_then_suspensionCauseSaysSo() {\n         assertJobStatusEventually(job, RUNNING);\n         job.suspend();\n         assertJobStatusEventually(job, SUSPENDED);\n-        assertEquals(\"Requested by user\", job.getSuspensionCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75a61168c680090f41b79bdf2faafacc7fb6b1d5"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4400, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}