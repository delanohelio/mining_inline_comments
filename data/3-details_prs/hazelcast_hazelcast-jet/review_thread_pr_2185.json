{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTkzNDY3", "number": 2185, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMjozNVrODyymhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMjozNVrODyymhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NTg0NDU1OnYy", "diffSide": "RIGHT", "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/impl/UnaryService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzoxMjozNVrOGHCgCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTozMTozNlrOGHG6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDE4NQ==", "bodyText": "This would be user error, so let's raise this to a hard check.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2185#discussion_r410034185", "createdAt": "2020-04-17T07:12:35Z", "author": {"login": "mtopolnik"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/impl/UnaryService.java", "diffHunk": "@@ -49,14 +49,15 @@ public void destroy() {\n     private static class Observer<R> implements StreamObserver<R> {\n         private final CompletableFuture<R> future;\n \n-        private volatile R value ;\n+        private R value ;\n \n         Observer() {\n             this.future = new CompletableFuture<>();\n         }\n \n         @Override\n         public void onNext(R value) {\n+            assert this.value == null : \"value should not be assigned twice in unary mode\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b4e34b77eb813da20c52dcd1dab549a4347e5c8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEwNjQ1OA==", "bodyText": "grpc doesn't allow this, and throws exception. The only case would be if this observer was used for a non-unary service, whcih I think the signature wouldn't allow.", "url": "https://github.com/hazelcast/hazelcast-jet/pull/2185#discussion_r410106458", "createdAt": "2020-04-17T09:31:36Z", "author": {"login": "cangencer"}, "path": "extensions/grpc/src/main/java/com/hazelcast/jet/grpc/impl/UnaryService.java", "diffHunk": "@@ -49,14 +49,15 @@ public void destroy() {\n     private static class Observer<R> implements StreamObserver<R> {\n         private final CompletableFuture<R> future;\n \n-        private volatile R value ;\n+        private R value ;\n \n         Observer() {\n             this.future = new CompletableFuture<>();\n         }\n \n         @Override\n         public void onNext(R value) {\n+            assert this.value == null : \"value should not be assigned twice in unary mode\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAzNDE4NQ=="}, "originalCommit": {"oid": "6b4e34b77eb813da20c52dcd1dab549a4347e5c8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4830, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}