{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzM0ODYw", "number": 570, "title": "PLANNER-2247: Task events consumption / data index subscriptions", "bodyText": "Many thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-12-15T15:29:11Z", "url": "https://github.com/kiegroup/kogito-apps/pull/570", "merged": true, "mergeCommit": {"oid": "fdd069bf349ef6b644e4ba61728b3f3fb31f968e"}, "closed": true, "closedAt": "2020-12-17T19:42:39Z", "author": {"login": "wmedvede"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmeLPLgBqjQxMTU5MDA1NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnHDZwAFqTU1NDgzMDgxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d4e65523b88a1135eaefa8f392331d7bdadb834", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/7d4e65523b88a1135eaefa8f392331d7bdadb834", "committedDate": "2020-12-15T15:21:35Z", "message": "PLANNER-2247: Task events consumption / data index subscriptions"}, "afterCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e42eb2bacde8df5dea1bbcb78f5124d9ee994982", "committedDate": "2020-12-15T17:55:17Z", "message": "PLANNER-2247: Task events consumption / data index subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0Mzk2NDk4", "url": "https://github.com/kiegroup/kogito-apps/pull/570#pullrequestreview-554396498", "createdAt": "2020-12-17T08:59:59Z", "commit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODo1OTo1OVrOIHrN8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwOTozNDozMVrOIHsoJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxOTAyNw==", "bodyText": "While I favor using a separate classes for each purpose, maybe the duplication SonarCloud complains about could be reduced by introducing an abstract parent class?", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544919027", "createdAt": "2020-12-17T08:59:59Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/main/java/org/kie/kogito/taskassigning/messaging/UserTaskEvent.java", "diffHunk": "@@ -0,0 +1,262 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.taskassigning.messaging;\n+\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import io.quarkus.runtime.annotations.RegisterForReflection;\n+\n+@RegisterForReflection\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class UserTaskEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyNTkzMA==", "bodyText": "Nitpicking: in the optaplanner repository, we usually use 10 seconds for test timeouts. Even if the test runs on desperately slow machine, there is enough buffer for it to pass. It's just a timeout, so it will take the 10 seconds only if there is an issue and then we know it's worth investigating.", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544925930", "createdAt": "2020-12-17T09:10:32Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/test/java/org/kie/kogito/taskassigning/messaging/ReactiveMessagingEventConsumerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.taskassigning.messaging;\n+\n+import java.util.concurrent.CompletionStage;\n+\n+import org.eclipse.microprofile.reactive.messaging.Message;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+class ReactiveMessagingEventConsumerTest {\n+\n+    @Test\n+    @Timeout(2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyOTA0MA==", "bodyText": "The RegisterForReflection annotation is there because of the (de)serialization  to/from JSON?", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544929040", "createdAt": "2020-12-17T09:15:18Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/main/java/org/kie/kogito/taskassigning/messaging/UserTaskEventMessage.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.taskassigning.messaging;\n+\n+import java.net.URI;\n+import java.time.ZonedDateTime;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import io.quarkus.runtime.annotations.RegisterForReflection;\n+\n+@RegisterForReflection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkzMDU4Mw==", "bodyText": "How does this microprofile-config.properties relate to Quarkus (and its application.properties)?", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544930583", "createdAt": "2020-12-17T09:17:42Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -1,8 +1,17 @@\n quarkus.oidc.enabled=true\n quarkus.oidc.tenant-enabled=false\n-\n %keycloak.quarkus.oidc.tenant-enabled=true\n %keycloak.quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/kogito\n %keycloak.quarkus.oidc.client-id=kogito-task-assigning-service\n %keycloak.quarkus.oidc.application-type=service\n-%keycloak.quarkus.oidc.credentials.secret=secret\n\\ No newline at end of file\n+%keycloak.quarkus.oidc.credentials.secret=secret\n+\n+quarkus.kafka.bootstrap-servers=localhost:9092\n+\n+mp.messaging.incoming.kogito-usertaskinstances-events.connector=smallrye-kafka\n+mp.messaging.incoming.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events\n+mp.messaging.incoming.kogito-usertaskinstances-events.value.deserializer=org.kie.kogito.taskassigning.messaging.UserTaskEventDeserializer\n+mp.messaging.incoming.kogito-usertaskinstances-events.group.id=kogito-task-assigning-service\n+mp.messaging.incoming.kogito-usertaskinstances-events.enable.auto.commit=false\n+mp.messaging.incoming.kogito-usertaskinstances-events.auto.offset.reset=earliest\n+mp.messaging.incoming.kogito-usertaskinstances-events.isolation.level=read_committed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkzNjM3Ng==", "bodyText": "I think this test case can be simplified a bit, depending on what you want to check:\nA) to check only the deserialization, prepare the expected object and use assertIsEqualToComparingFieldByFieldRecursively to make sure it's equal to the object deserialized from JSON\nB) in case you want to check also serialization, you can deserialize and again serialize the JSON and compare it as a String with the original JSON String. This way you check also formatting (not sure how much relevant it is in this case).", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544936376", "createdAt": "2020-12-17T09:26:16Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/test/java/org/kie/kogito/taskassigning/messaging/UserTaskEventDeserializerTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.taskassigning.messaging;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.kie.kogito.taskassigning.TestUtil.parseZonedDateTime;\n+\n+class UserTaskEventDeserializerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkzNzQzNA==", "bodyText": "What is the role of the endpoint in the event?", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544937434", "createdAt": "2020-12-17T09:27:42Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/src/main/java/org/kie/kogito/taskassigning/messaging/UserTaskEventDeserializer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.taskassigning.messaging;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.time.temporal.ChronoUnit;\n+\n+import com.google.common.net.UrlEscapers;\n+import org.apache.kafka.common.errors.SerializationException;\n+import org.apache.kafka.common.serialization.Deserializer;\n+\n+import static java.lang.String.format;\n+import static org.kie.kogito.taskassigning.util.JsonUtils.OBJECT_MAPPER;\n+\n+public class UserTaskEventDeserializer implements Deserializer<UserTaskEvent> {\n+\n+    @Override\n+    public UserTaskEvent deserialize(String topic, byte[] data) {\n+        try {\n+            if (data == null) {\n+                return null;\n+            }\n+            UserTaskEventMessage message = OBJECT_MAPPER.readValue(data, UserTaskEventMessage.class);\n+            UserTaskEvent event = message.getData();\n+            event.setEventTime(message.getTime());\n+            event.setLastUpdate(message.getTime().truncatedTo(ChronoUnit.MILLIS));\n+            event.setEndpoint(buildEndpoint(message.getSource(), event.getProcessInstanceId(), event.getName(), event.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk0MjExOA==", "bodyText": "If we use guava just to do HTML escaping, may I suggest using https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 instead? It's memory footprint is ~5 times smaller.", "url": "https://github.com/kiegroup/kogito-apps/pull/570#discussion_r544942118", "createdAt": "2020-12-17T09:34:31Z", "author": {"login": "rsynek"}, "path": "task-assigning/task-assigning-process-service-client/pom.xml", "diffHunk": "@@ -35,7 +35,19 @@\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-api</artifactId>\n     </dependency>\n-    \n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.guava</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7db278a3c7630bbf5304bd32ab110fb91049c64", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e7db278a3c7630bbf5304bd32ab110fb91049c64", "committedDate": "2020-12-17T14:28:23Z", "message": "PLANNER-2247: Task events consumption / data index subscriptions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e42eb2bacde8df5dea1bbcb78f5124d9ee994982", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e42eb2bacde8df5dea1bbcb78f5124d9ee994982", "committedDate": "2020-12-15T17:55:17Z", "message": "PLANNER-2247: Task events consumption / data index subscriptions"}, "afterCommit": {"oid": "e7db278a3c7630bbf5304bd32ab110fb91049c64", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e7db278a3c7630bbf5304bd32ab110fb91049c64", "committedDate": "2020-12-17T14:28:23Z", "message": "PLANNER-2247: Task events consumption / data index subscriptions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODMwODE2", "url": "https://github.com/kiegroup/kogito-apps/pull/570#pullrequestreview-554830816", "createdAt": "2020-12-17T17:33:20Z", "commit": {"oid": "e7db278a3c7630bbf5304bd32ab110fb91049c64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}