{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MDQ4NTEz", "number": 424, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDozMDowOVrOEe174A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDozMDowOVrOEe174A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzc2NDE2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Atoms/LoadMore/LoadMore.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDozMDowOVrOHKwQpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNDo0NDo1M1rOHLXbEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzODUwMw==", "bodyText": "can we introduce a function? so that we don't repeat the same JSX 4 times.", "url": "https://github.com/kiegroup/kogito-apps/pull/424#discussion_r481038503", "createdAt": "2020-09-01T10:30:09Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Atoms/LoadMore/LoadMore.tsx", "diffHunk": "@@ -28,26 +34,68 @@ const LoadMore: React.FC<IOwnProps & OUIAProps> = ({\n   ouiaId,\n   ouiaSafe\n }) => {\n+  const [isOpen, setIsOpen] = useState(false);\n+  const [loadMoreValue, setLoadMoreValue] = useState(10);\n+\n   const loadMore = newPageSize => {\n     setLoadMoreClicked && setLoadMoreClicked(true);\n     const newOffset = offset + pageSize;\n     setOffset(newOffset);\n     getMoreItems(newOffset, newPageSize);\n   };\n \n-  const load10More = () => {\n-    loadMore(10);\n-  };\n-  const load20More = () => {\n-    loadMore(20);\n-  };\n-  const load50More = () => {\n-    loadMore(50);\n+  const onToggle = (isDropdownOpen: boolean) => {\n+    setIsOpen(isDropdownOpen);\n   };\n-  const load100More = () => {\n-    loadMore(100);\n+\n+  const onSelect = event => {\n+    const selectedValue = parseInt(event.currentTarget.id, 10);\n+    setLoadMoreValue(selectedValue);\n   };\n \n+  const dropdownItems = [\n+    <DropdownItem key=\"loadmore10\" component=\"button\" id=\"10\">\n+      <Split hasGutter>\n+        <SplitItem>Load 10 more</SplitItem>\n+        {loadMoreValue === 10 && (\n+          <SplitItem>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "453a82d7cea01a12a4b0fadf4cbceccacf6b825f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA0MDg5Mw==", "bodyText": "Maybe a function for whole DropdownItem, that would take arguments count: number ? sth like (types to be added)\nconst dropdownItem = (count: number) => {\n  return <DropdownItem key={'loadmore'+count} component=\"button\" id={count}>\n      <Split hasGutter>\n        <SplitItem>Load {count} more</SplitItem>\n        {loadMoreValue === count && (\n          <SplitItem>\n            <CheckIcon size=\"sm\" color=\"var(--pf-global--info-color--100)\" />\n          </SplitItem>\n        )}\n      </Split>\n    </DropdownItem>\n}", "url": "https://github.com/kiegroup/kogito-apps/pull/424#discussion_r481040893", "createdAt": "2020-09-01T10:34:45Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Atoms/LoadMore/LoadMore.tsx", "diffHunk": "@@ -28,26 +34,68 @@ const LoadMore: React.FC<IOwnProps & OUIAProps> = ({\n   ouiaId,\n   ouiaSafe\n }) => {\n+  const [isOpen, setIsOpen] = useState(false);\n+  const [loadMoreValue, setLoadMoreValue] = useState(10);\n+\n   const loadMore = newPageSize => {\n     setLoadMoreClicked && setLoadMoreClicked(true);\n     const newOffset = offset + pageSize;\n     setOffset(newOffset);\n     getMoreItems(newOffset, newPageSize);\n   };\n \n-  const load10More = () => {\n-    loadMore(10);\n-  };\n-  const load20More = () => {\n-    loadMore(20);\n-  };\n-  const load50More = () => {\n-    loadMore(50);\n+  const onToggle = (isDropdownOpen: boolean) => {\n+    setIsOpen(isDropdownOpen);\n   };\n-  const load100More = () => {\n-    loadMore(100);\n+\n+  const onSelect = event => {\n+    const selectedValue = parseInt(event.currentTarget.id, 10);\n+    setLoadMoreValue(selectedValue);\n   };\n \n+  const dropdownItems = [\n+    <DropdownItem key=\"loadmore10\" component=\"button\" id=\"10\">\n+      <Split hasGutter>\n+        <SplitItem>Load 10 more</SplitItem>\n+        {loadMoreValue === 10 && (\n+          <SplitItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzODUwMw=="}, "originalCommit": {"oid": "453a82d7cea01a12a4b0fadf4cbceccacf6b825f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4MDE0NQ==", "bodyText": "Hi @jstastny-cz - I have converted the JSX to a function . Please have a look", "url": "https://github.com/kiegroup/kogito-apps/pull/424#discussion_r481680145", "createdAt": "2020-09-02T04:44:53Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/common/src/components/Atoms/LoadMore/LoadMore.tsx", "diffHunk": "@@ -28,26 +34,68 @@ const LoadMore: React.FC<IOwnProps & OUIAProps> = ({\n   ouiaId,\n   ouiaSafe\n }) => {\n+  const [isOpen, setIsOpen] = useState(false);\n+  const [loadMoreValue, setLoadMoreValue] = useState(10);\n+\n   const loadMore = newPageSize => {\n     setLoadMoreClicked && setLoadMoreClicked(true);\n     const newOffset = offset + pageSize;\n     setOffset(newOffset);\n     getMoreItems(newOffset, newPageSize);\n   };\n \n-  const load10More = () => {\n-    loadMore(10);\n-  };\n-  const load20More = () => {\n-    loadMore(20);\n-  };\n-  const load50More = () => {\n-    loadMore(50);\n+  const onToggle = (isDropdownOpen: boolean) => {\n+    setIsOpen(isDropdownOpen);\n   };\n-  const load100More = () => {\n-    loadMore(100);\n+\n+  const onSelect = event => {\n+    const selectedValue = parseInt(event.currentTarget.id, 10);\n+    setLoadMoreValue(selectedValue);\n   };\n \n+  const dropdownItems = [\n+    <DropdownItem key=\"loadmore10\" component=\"button\" id=\"10\">\n+      <Split hasGutter>\n+        <SplitItem>Load 10 more</SplitItem>\n+        {loadMoreValue === 10 && (\n+          <SplitItem>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzODUwMw=="}, "originalCommit": {"oid": "453a82d7cea01a12a4b0fadf4cbceccacf6b825f"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 666, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}