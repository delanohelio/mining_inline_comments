{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTYzOTM0", "number": 149, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozNToyNVrODvIWAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0Mjo1M1rODvIjVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ2MzY5OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzozNToyNVrOGBX-6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzoyOTo1MVrOGB2e_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5NDY5Ng==", "bodyText": "@Sara4994 can we avoid disabling the tslint rules?", "url": "https://github.com/kiegroup/kogito-apps/pull/149#discussion_r404094696", "createdAt": "2020-04-06T13:35:25Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -97,6 +99,89 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n     parameters.length !== 1 && generateQuery();\n   }, [parameters.length > 1]);\n \n+  const nestedCheck = (ele, valueObj) => {\n+    for(const key in ele) {\n+      const temp = ele[key]\n+     if(typeof temp[0] === 'object'){\n+       // tslint:disable-next-line: forin\n+       for(const nestedProp  in temp[0]){\n+       const nestedObj = {}\n+       const result = nestedCheck(temp[0], valueObj)\n+       if(valueObj.hasOwnProperty(nestedProp)){\n+         valueObj[nestedProp] = result\n+       } else {\n+         nestedObj[nestedProp] = result\n+         valueObj = {...valueObj, ...nestedObj}\n+       }\n+       return valueObj;\n+       }   \n+     } else {\n+       const val = ele[key]\n+        const tempObj={};\n+        tempObj[val[0]] = null;\n+        const firstKey = Object.keys(valueObj)[0]\n+        valueObj = {...valueObj[firstKey], ...tempObj}\n+        return valueObj;  \n+     }\n+   }\n+  }\n+\n+  const checkFunc = (ele, valueObj) => {\n+     // tslint:disable-next-line: forin\n+     for(const key in ele) {\n+       const temp = ele[key]\n+      if(typeof temp[0] === 'object'){\n+        // tslint:disable-next-line: forin\n+        for(const nestedProp  in temp[0]){\n+        const nestedObj = {}\n+        if(valueObj.hasOwnProperty(nestedProp)){\n+          const result = nestedCheck(temp[0], valueObj)\n+          valueObj[nestedProp] = result\n+        } else {\n+          const result = checkFunc(temp[0], valueObj)\n+          nestedObj[nestedProp] = result\n+          valueObj = {...valueObj, ...nestedObj}\n+        }\n+        return valueObj;\n+        }   \n+      } else {\n+        const val = ele[key]\n+         const tempObj={};\n+         tempObj[val[0]] = null;\n+         valueObj = {...valueObj , ...tempObj}\n+         return valueObj;  \n+      }\n+    }\n+  }\n+\n+  const validateResponse = (obj) => {\n+    let contentObj= {}\n+    // tslint:disable-next-line: forin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26aec5a545f2ce2d23c1e0722c21598c1ec6eb60"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU5NDQzMQ==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/149#discussion_r404594431", "createdAt": "2020-04-07T07:29:51Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -97,6 +99,89 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n     parameters.length !== 1 && generateQuery();\n   }, [parameters.length > 1]);\n \n+  const nestedCheck = (ele, valueObj) => {\n+    for(const key in ele) {\n+      const temp = ele[key]\n+     if(typeof temp[0] === 'object'){\n+       // tslint:disable-next-line: forin\n+       for(const nestedProp  in temp[0]){\n+       const nestedObj = {}\n+       const result = nestedCheck(temp[0], valueObj)\n+       if(valueObj.hasOwnProperty(nestedProp)){\n+         valueObj[nestedProp] = result\n+       } else {\n+         nestedObj[nestedProp] = result\n+         valueObj = {...valueObj, ...nestedObj}\n+       }\n+       return valueObj;\n+       }   \n+     } else {\n+       const val = ele[key]\n+        const tempObj={};\n+        tempObj[val[0]] = null;\n+        const firstKey = Object.keys(valueObj)[0]\n+        valueObj = {...valueObj[firstKey], ...tempObj}\n+        return valueObj;  \n+     }\n+   }\n+  }\n+\n+  const checkFunc = (ele, valueObj) => {\n+     // tslint:disable-next-line: forin\n+     for(const key in ele) {\n+       const temp = ele[key]\n+      if(typeof temp[0] === 'object'){\n+        // tslint:disable-next-line: forin\n+        for(const nestedProp  in temp[0]){\n+        const nestedObj = {}\n+        if(valueObj.hasOwnProperty(nestedProp)){\n+          const result = nestedCheck(temp[0], valueObj)\n+          valueObj[nestedProp] = result\n+        } else {\n+          const result = checkFunc(temp[0], valueObj)\n+          nestedObj[nestedProp] = result\n+          valueObj = {...valueObj, ...nestedObj}\n+        }\n+        return valueObj;\n+        }   \n+      } else {\n+        const val = ele[key]\n+         const tempObj={};\n+         tempObj[val[0]] = null;\n+         valueObj = {...valueObj , ...tempObj}\n+         return valueObj;  \n+      }\n+    }\n+  }\n+\n+  const validateResponse = (obj) => {\n+    let contentObj= {}\n+    // tslint:disable-next-line: forin", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA5NDY5Ng=="}, "originalCommit": {"oid": "26aec5a545f2ce2d23c1e0722c21598c1ec6eb60"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzQ5NzgyOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Organisms/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMzo0Mjo1M1rOGBYT9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozMDowMVrOGB2fVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDA4Ng==", "bodyText": "please remove coment out code.", "url": "https://github.com/kiegroup/kogito-apps/pull/149#discussion_r404100086", "createdAt": "2020-04-06T13:42:53Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -119,9 +119,9 @@ const DomainExplorerTable = ({ columnFilters, tableLoading, displayTable }) => {\n       }\n     };\n     const tempKeys = [];\n-    let tempValue = [];\n+    const tempValue = [];\n     iter(object);\n-    tempValue = tempValue.filter(value => value !== null)\n+    // tempValue = tempValue.filter(value => value !== null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26aec5a545f2ce2d23c1e0722c21598c1ec6eb60"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU5NDUxNw==", "bodyText": "@cristianonicolai done", "url": "https://github.com/kiegroup/kogito-apps/pull/149#discussion_r404594517", "createdAt": "2020-04-07T07:30:01Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -119,9 +119,9 @@ const DomainExplorerTable = ({ columnFilters, tableLoading, displayTable }) => {\n       }\n     };\n     const tempKeys = [];\n-    let tempValue = [];\n+    const tempValue = [];\n     iter(object);\n-    tempValue = tempValue.filter(value => value !== null)\n+    // tempValue = tempValue.filter(value => value !== null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEwMDA4Ng=="}, "originalCommit": {"oid": "26aec5a545f2ce2d23c1e0722c21598c1ec6eb60"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1048, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}