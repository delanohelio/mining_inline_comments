{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjc2MzQ5", "number": 450, "title": "[KOGITO-3297] Bump CloudEvents api to 2.x", "bodyText": "Related to kiegroup/kogito-runtimes#750\nFix https://issues.redhat.com/browse/KOGITO-3297\nSigned-off-by: ruromero rromerom@redhat.com", "createdAt": "2020-09-08T20:24:04Z", "url": "https://github.com/kiegroup/kogito-apps/pull/450", "merged": true, "mergeCommit": {"oid": "12e7ab697a2af1dbec35aa9e334b2076397080c4"}, "closed": true, "closedAt": "2020-09-23T14:27:04Z", "author": {"login": "ruromero"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG9jZPgH2gAyNDgyMjc2MzQ5OjkyN2U3YTA5ZjczOTRhZWZlMzRjZTQ1MDcyYTZlZmUwNmMyYzcxYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLJ2qLgFqTQ5Mjk3NTg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "927e7a09f7394aefe34ce45072a6efe06c2c71ad", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/927e7a09f7394aefe34ce45072a6efe06c2c71ad", "committedDate": "2020-09-08T20:23:39Z", "message": "[KOGITO-3297] Bump CloudEvents api to 2.x\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDg1OTkx", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-484485991", "createdAt": "2020-09-08T20:54:44Z", "commit": {"oid": "927e7a09f7394aefe34ce45072a6efe06c2c71ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3869edb7aaa780e5397f72604fdb6bedb29c59", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3b3869edb7aaa780e5397f72604fdb6bedb29c59", "committedDate": "2020-09-09T07:34:01Z", "message": "[KOGITO-3297] Fix explainability tests\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzkzMDc5", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-484793079", "createdAt": "2020-09-09T08:48:04Z", "commit": {"oid": "3b3869edb7aaa780e5397f72604fdb6bedb29c59"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e794c16e87e81d2f0512af1af8a2384633ed4b20", "committedDate": "2020-09-14T10:19:13Z", "message": "[KOGITO-3297] Remove E\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3446932bc5246fb4824b4d7b382ea950298f0331", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3446932bc5246fb4824b4d7b382ea950298f0331", "committedDate": "2020-09-09T09:02:00Z", "message": "[KOGITO-3297] Remove E\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}, "afterCommit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e794c16e87e81d2f0512af1af8a2384633ed4b20", "committedDate": "2020-09-14T10:19:13Z", "message": "[KOGITO-3297] Remove E\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjM3MTIy", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-487637122", "createdAt": "2020-09-14T10:51:55Z", "commit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo1MTo1NVrOHROT_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMjoxOFrOHROoqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjMzNQ==", "bodyText": "What about refactor getCloudEventType() to return TypeReference<E>?\nObjectMapper can be specified as constructor parameter and then you can move deserialization logic here and isolate business logic for subclasses like:\n    protected abstract void internalHandleCloudEvent(final CloudEvent cloudEvent, final E payload);\n\n    protected abstract void handleCloudEvent(final CloudEvent cloudEvent) {\n        final E payload;\n        try {\n            payload = mapper.readValue(cloudEvent.getData(), getCloudEventType());\n        } catch (IOException e) {\n            LOG.error(\"Unable to deserialize CloudEvent data as \" + getCloudEventType().getName(), e);\n            return;\n        }\n        if (event == null) {\n            LOG.error(\"Received CloudEvent with id {} from {} with empty data\", cloudEvent.getId(), cloudEvent.getSource());\n            return;\n        }\n\n        LOG.debug(\"Received CloudEvent with id {} from {}\", cloudEvent.getId(), cloudEvent.getSource());\n\n        internalHandleCloudEvent(cloudEvent, payload);\n    }", "url": "https://github.com/kiegroup/kogito-apps/pull/450#discussion_r487822335", "createdAt": "2020-09-14T10:51:55Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/BaseEventConsumer.java", "diffHunk": "@@ -50,16 +49,14 @@ public BaseEventConsumer(final TrustyService service) {\n         return message.ack();\n     }\n \n-    protected Optional<CloudEventImpl<E>> decodeCloudEvent(final String payload) {\n+    protected Optional<CloudEvent> decodeCloudEvent(final String payload) {\n         try {\n-            return Optional.of(CloudEventUtils.decode(payload, getCloudEventType()));\n+            return Optional.of(CloudEventUtils.decode(payload));\n         } catch (IllegalStateException e) {\n             LOG.error(String.format(\"Can't decode message to CloudEvent: %s\", payload), e);\n             return Optional.empty();\n         }\n     }\n \n-    protected abstract TypeReference<CloudEventImpl<E>> getCloudEventType();\n-\n-    protected abstract void handleCloudEvent(final CloudEventImpl<E> cloudEvent);\n+    protected abstract void handleCloudEvent(final CloudEvent cloudEvent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNzQ1MA==", "bodyText": "Please do not mix injection on field and on constructor: move all the injection to constructor", "url": "https://github.com/kiegroup/kogito-apps/pull/450#discussion_r487827450", "createdAt": "2020-09-14T11:01:59Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/incoming/ExplainabilityResultConsumer.java", "diffHunk": "@@ -46,17 +44,17 @@\n import org.slf4j.LoggerFactory;\n \n @ApplicationScoped\n-public class ExplainabilityResultConsumer extends BaseEventConsumer<ExplainabilityResultDto> {\n+public class ExplainabilityResultConsumer extends BaseEventConsumer {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(ExplainabilityResultConsumer.class);\n \n-    private static final TypeReference<CloudEventImpl<ExplainabilityResultDto>> CLOUD_EVENT_TYPE = new TypeReference<>() {\n-    };\n-\n     private ExplainabilityResultConsumer() {\n         //CDI proxy\n     }\n \n+    @Inject\n+    ObjectMapper mapper;\n+\n     @Inject\n     public ExplainabilityResultConsumer(TrustyService service) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNzU2Mg==", "bodyText": "Please do not mix injection on field and on constructor: move all the injection to constructor", "url": "https://github.com/kiegroup/kogito-apps/pull/450#discussion_r487827562", "createdAt": "2020-09-14T11:02:11Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/incoming/ModelEventConsumer.java", "diffHunk": "@@ -33,15 +31,15 @@\n import org.kie.kogito.trusty.service.messaging.BaseEventConsumer;\n \n @ApplicationScoped\n-public class ModelEventConsumer extends BaseEventConsumer<ModelEvent> {\n-\n-    private static final TypeReference<CloudEventImpl<ModelEvent>> CLOUD_EVENT_TYPE_REF = new TypeReference<>() {\n-    };\n+public class ModelEventConsumer extends BaseEventConsumer {\n \n     private  ModelEventConsumer() {\n         //CDI proxy\n     }\n \n+    @Inject\n+    ObjectMapper mapper;\n+\n     @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNzYyNw==", "bodyText": "Please do not mix injection on field and on constructor: move all the injection to constructor", "url": "https://github.com/kiegroup/kogito-apps/pull/450#discussion_r487827627", "createdAt": "2020-09-14T11:02:18Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/incoming/TraceEventConsumer.java", "diffHunk": "@@ -33,15 +31,15 @@\n import org.kie.kogito.trusty.service.messaging.BaseEventConsumer;\n \n @ApplicationScoped\n-public class TraceEventConsumer extends BaseEventConsumer<TraceEvent> {\n-\n-    private static final TypeReference<CloudEventImpl<TraceEvent>> CLOUD_EVENT_TYPE_REF = new TypeReference<>() {\n-    };\n+public class TraceEventConsumer extends BaseEventConsumer {\n \n     private TraceEventConsumer() {\n         //CDI proxy\n     }\n \n+    @Inject\n+    ObjectMapper mapper;\n+\n     @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e794c16e87e81d2f0512af1af8a2384633ed4b20"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1a9cb5f76ca7831ed43c969865610206150062", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ca1a9cb5f76ca7831ed43c969865610206150062", "committedDate": "2020-09-14T20:01:05Z", "message": "[KOGITO-3297] Code review\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTAyODY2", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-488102866", "createdAt": "2020-09-14T20:07:37Z", "commit": {"oid": "ca1a9cb5f76ca7831ed43c969865610206150062"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d707e67cf29657797995f89fbcdc6b99f38ee181", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d707e67cf29657797995f89fbcdc6b99f38ee181", "committedDate": "2020-09-18T13:17:33Z", "message": "[KOGITO-3297] Fix tests\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16d08429d537740821c1e8d74eb70fb34e224595", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/16d08429d537740821c1e8d74eb70fb34e224595", "committedDate": "2020-09-18T12:04:18Z", "message": "[KOGITO-3297] Fix tests\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}, "afterCommit": {"oid": "d707e67cf29657797995f89fbcdc6b99f38ee181", "author": {"user": {"login": "ruromero", "name": "Ruben Romero Montes"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d707e67cf29657797995f89fbcdc6b99f38ee181", "committedDate": "2020-09-18T13:17:33Z", "message": "[KOGITO-3297] Fix tests\n\nSigned-off-by: ruromero <rromerom@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTc0NzEz", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-492974713", "createdAt": "2020-09-21T20:57:30Z", "commit": {"oid": "d707e67cf29657797995f89fbcdc6b99f38ee181"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTc0ODk1", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-492974895", "createdAt": "2020-09-21T20:57:47Z", "commit": {"oid": "d707e67cf29657797995f89fbcdc6b99f38ee181"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTc1ODcz", "url": "https://github.com/kiegroup/kogito-apps/pull/450#pullrequestreview-492975873", "createdAt": "2020-09-21T20:59:15Z", "commit": {"oid": "d707e67cf29657797995f89fbcdc6b99f38ee181"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4772, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}