{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDU0NDA0", "number": 372, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNzo1M1rOEWJUgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTo0NToyNVrOEWJqSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU2ODMyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNzo1M1rOG9TExw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNzo1M1rOG9TExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyODgzOQ==", "bodyText": "can we specify type of filterChips ?\nI think it could be\n(filterChips: (chips: string[]) => string[]) => void", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466928839", "createdAt": "2020-08-07T09:27:53Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "diffHunk": "@@ -15,40 +15,44 @@ import {\n } from '@patternfly/react-core';\n import { GraphQL } from '../../../graphql/types';\n import useGetInputFieldsFromTypeQuery = GraphQL.useGetInputFieldsFromTypeQuery;\n-import gql from 'graphql-tag';\n-import { useApolloClient } from 'react-apollo';\n import { QuestionCircleIcon } from '@patternfly/react-icons';\n-import { validateResponse, set, removeDuplicates } from '../../../utils/Utils';\n+import { set, removeDuplicates } from '../../../utils/Utils';\n import '../../styles.css';\n \n-const DomainExplorerFilterOptions = ({\n-  enableCache,\n+interface ResponseType {\n+  loading?: boolean;\n+  data: any;\n+}\n+interface IOwnProps {\n+  filterChips: string[];\n+  finalFilters: object;\n+  generateFilterQuery: () => void;\n+  getQueryTypes: ResponseType;\n+  getSchema: ResponseType;\n+  reset: boolean;\n+  runQuery: boolean;\n+  setFilterChips: (filterChips) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU3MDc3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyODo0OFrOG9TGaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyODo0OFrOG9TGaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyOTI1Nw==", "bodyText": "also here?\nsetFinalFilters: (finalFilters: (filters: string[]) => void) => void;", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466929257", "createdAt": "2020-08-07T09:28:48Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "diffHunk": "@@ -15,40 +15,44 @@ import {\n } from '@patternfly/react-core';\n import { GraphQL } from '../../../graphql/types';\n import useGetInputFieldsFromTypeQuery = GraphQL.useGetInputFieldsFromTypeQuery;\n-import gql from 'graphql-tag';\n-import { useApolloClient } from 'react-apollo';\n import { QuestionCircleIcon } from '@patternfly/react-icons';\n-import { validateResponse, set, removeDuplicates } from '../../../utils/Utils';\n+import { set, removeDuplicates } from '../../../utils/Utils';\n import '../../styles.css';\n \n-const DomainExplorerFilterOptions = ({\n-  enableCache,\n+interface ResponseType {\n+  loading?: boolean;\n+  data: any;\n+}\n+interface IOwnProps {\n+  filterChips: string[];\n+  finalFilters: object;\n+  generateFilterQuery: () => void;\n+  getQueryTypes: ResponseType;\n+  getSchema: ResponseType;\n+  reset: boolean;\n+  runQuery: boolean;\n+  setFilterChips: (filterChips) => void;\n+  setFinalFilters: (finalFilters) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU3NDExOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyOTo0OVrOG9TIYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyOTo0OVrOG9TIYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyOTc2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              setOffset: (offset) => void;\n          \n          \n            \n              setReset: (reset) => void;\n          \n          \n            \n              setRunQuery: (runQuery) => void;\n          \n          \n            \n              setOffset: (offset: number) => void;\n          \n          \n            \n              setReset: (reset: boolean) => void;\n          \n          \n            \n              setRunQuery: (runQuery: boolean) => void;", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466929761", "createdAt": "2020-08-07T09:29:49Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerFilterOptions/DomainExplorerFilterOptions.tsx", "diffHunk": "@@ -15,40 +15,44 @@ import {\n } from '@patternfly/react-core';\n import { GraphQL } from '../../../graphql/types';\n import useGetInputFieldsFromTypeQuery = GraphQL.useGetInputFieldsFromTypeQuery;\n-import gql from 'graphql-tag';\n-import { useApolloClient } from 'react-apollo';\n import { QuestionCircleIcon } from '@patternfly/react-icons';\n-import { validateResponse, set, removeDuplicates } from '../../../utils/Utils';\n+import { set, removeDuplicates } from '../../../utils/Utils';\n import '../../styles.css';\n \n-const DomainExplorerFilterOptions = ({\n-  enableCache,\n+interface ResponseType {\n+  loading?: boolean;\n+  data: any;\n+}\n+interface IOwnProps {\n+  filterChips: string[];\n+  finalFilters: object;\n+  generateFilterQuery: () => void;\n+  getQueryTypes: ResponseType;\n+  getSchema: ResponseType;\n+  reset: boolean;\n+  runQuery: boolean;\n+  setFilterChips: (filterChips) => void;\n+  setFinalFilters: (finalFilters) => void;\n+  setOffset: (offset) => void;\n+  setReset: (reset) => void;\n+  setRunQuery: (runQuery) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU5NzA2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozNjo0NlrOG9TWAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozNjo0NlrOG9TWAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMzI1MQ==", "bodyText": "can we specify type of type? :-)", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466933251", "createdAt": "2020-08-07T09:36:46Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -38,22 +38,45 @@ import {\n   KogitoEmptyStateType\n } from '../../Atoms/KogitoEmptyState/KogitoEmptyState';\n \n-const DomainExplorerTable = ({\n+interface RowContent {\n+  cells: string[] | object[];\n+  parent?: number;\n+  isOpen?: boolean;\n+  rowKey: string;\n+}\n+interface IOwnProps {\n+  columnFilters: any[];\n+  displayTable: boolean;\n+  displayEmptyState: boolean;\n+  filterError: string;\n+  finalFilters: object;\n+  filterChips: string[];\n+  handleRetry: () => void;\n+  isLoadingMore: boolean;\n+  offset: number;\n+  onDeleteChip: (type) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU5OTA2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozNzozMVrOG9TXSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozNzozMVrOG9TXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMzU3OA==", "bodyText": "also rows, can we define type? even any[] would help at least.", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466933578", "createdAt": "2020-08-07T09:37:31Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -38,22 +38,45 @@ import {\n   KogitoEmptyStateType\n } from '../../Atoms/KogitoEmptyState/KogitoEmptyState';\n \n-const DomainExplorerTable = ({\n+interface RowContent {\n+  cells: string[] | object[];\n+  parent?: number;\n+  isOpen?: boolean;\n+  rowKey: string;\n+}\n+interface IOwnProps {\n+  columnFilters: any[];\n+  displayTable: boolean;\n+  displayEmptyState: boolean;\n+  filterError: string;\n+  finalFilters: object;\n+  filterChips: string[];\n+  handleRetry: () => void;\n+  isLoadingMore: boolean;\n+  offset: number;\n+  onDeleteChip: (type) => void;\n+  parameters: object[];\n+  rows: RowContent[];\n+  selected: string[];\n+  setRows: (rows) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjYyMTgwOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTo0NDo0NVrOG9TlCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjowNDo1MVrOG9XRyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzNzA5OA==", "bodyText": "can we add comment on what does it actually mean when we have true result? The finalFilters check is clear and understandable, but I have issue understanding why parameters need to be greater than 1 to perform any action.", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466937098", "createdAt": "2020-08-07T09:44:45Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "diffHunk": "@@ -201,6 +207,64 @@ const DomainExplorer: React.FC<IOwnProps> = ({\n     fields: parameters\n   });\n \n+  async function generateFilterQuery() {\n+    setTableLoading(true);\n+    setEnableRefresh(true);\n+    if (\n+      parameters.length > 1 &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk5NzcwNA==", "bodyText": "@jstastny-cz  added a comment explaining this condition", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466997704", "createdAt": "2020-08-07T12:04:51Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "diffHunk": "@@ -201,6 +207,64 @@ const DomainExplorer: React.FC<IOwnProps> = ({\n     fields: parameters\n   });\n \n+  async function generateFilterQuery() {\n+    setTableLoading(true);\n+    setEnableRefresh(true);\n+    if (\n+      parameters.length > 1 &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzNzA5OA=="}, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjYyNDA4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTo0NToyNVrOG9TmWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjowNDowNlrOG9XQTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzNzQzMg==", "bodyText": "here I am not sure what we expect the firstKey to be and why don't we check that particular one.", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466937432", "createdAt": "2020-08-07T09:45:25Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "diffHunk": "@@ -201,6 +207,64 @@ const DomainExplorer: React.FC<IOwnProps> = ({\n     fields: parameters\n   });\n \n+  async function generateFilterQuery() {\n+    setTableLoading(true);\n+    setEnableRefresh(true);\n+    if (\n+      parameters.length > 1 &&\n+      finalFilters &&\n+      Object.keys(finalFilters).length > 0\n+    ) {\n+      try {\n+        const response = await client.query({\n+          query: gql`\n+            ${domainQuery.query}\n+          `,\n+          variables: domainQuery.variables,\n+          fetchPolicy: enableCache ? 'cache-first' : 'network-only'\n+        });\n+        const firstKey = Object.keys(response.data)[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk5NzMyNQ==", "bodyText": "@jstastny-cz as discussed, added a check if response.data has length 1", "url": "https://github.com/kiegroup/kogito-apps/pull/372#discussion_r466997325", "createdAt": "2020-08-07T12:04:06Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/common/src/components/Organisms/DomainExplorer/DomainExplorer.tsx", "diffHunk": "@@ -201,6 +207,64 @@ const DomainExplorer: React.FC<IOwnProps> = ({\n     fields: parameters\n   });\n \n+  async function generateFilterQuery() {\n+    setTableLoading(true);\n+    setEnableRefresh(true);\n+    if (\n+      parameters.length > 1 &&\n+      finalFilters &&\n+      Object.keys(finalFilters).length > 0\n+    ) {\n+      try {\n+        const response = await client.query({\n+          query: gql`\n+            ${domainQuery.query}\n+          `,\n+          variables: domainQuery.variables,\n+          fetchPolicy: enableCache ? 'cache-first' : 'network-only'\n+        });\n+        const firstKey = Object.keys(response.data)[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzNzQzMg=="}, "originalCommit": {"oid": "731f99584d4df07143932d3cbfcec1c774380c9c"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 887, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}