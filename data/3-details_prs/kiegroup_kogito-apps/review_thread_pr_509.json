{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNTQ1Mzc3", "number": 509, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo1MjoxNFrOEyVh4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0MjoxNFrOE0v9VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjE2OTk0OnYy", "diffSide": "RIGHT", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo1MjoxNFrOHo6nTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNDowMTowMlrOHqIcMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ==", "bodyText": "Wouldnt be enought to do:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n          \n          \n            \n                    event.getData().setActualOwner(null);", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r512665421", "createdAt": "2020-10-27T12:52:14Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NDgyNw==", "bodyText": "it does not work, because of code line [1]\nI also can not remove the condition, if remove it, the unit test will be failed [2]\n[1] \n  \n    \n      kogito-apps/data-index/data-index-storage/data-index-storage-api/src/main/java/org/kie/kogito/index/model/UserTaskInstanceMeta.java\n    \n    \n         Line 86\n      in\n      3604788\n    \n    \n    \n    \n\n        \n          \n           if (id != null && !id.trim().isEmpty()) { \n        \n    \n  \n\n.\n[2] \n  \n    \n      kogito-apps/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/messaging/KogitoCloudEventDeserializerTest.java\n    \n    \n         Line 143\n      in\n      edaf89d\n    \n    \n    \n    \n\n        \n          \n           .hasFieldOrPropertyWithValue(\"data.actualOwner\", null)", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r512754827", "createdAt": "2020-10-27T14:45:50Z", "author": {"login": "bxf12315"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NDU3NA==", "bodyText": "this should help:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n          \n          \n            \n                    event = getUserTaskCloudEvent(taskId, processId, processInstanceId, null, null, state);\n          \n          \n            \n                    event.getData().setActualOwner(null);", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513854574", "createdAt": "2020-10-29T01:19:08Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk0MDUyOA==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513940528", "createdAt": "2020-10-29T04:01:02Z", "author": {"login": "bxf12315"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxOTc2NzI5OnYy", "diffSide": "RIGHT", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMToyMDoxM1rOHqDOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMDo0MTowMVrOHqza2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            validateUserTaskInstance(getUserTaskInstanceByIdNoActualOwner(taskId), event);\n          \n      \n    \n    \n  \n\nYou actually need to create the method getUserTaskInstanceByIdNoActualOwner, with a query that does the same that Task Console ( actualOwner: { isNull: true } ). Same for getDealsByTaskId, a variation where the actualOwner is also filtered. The real value is to assert that the queries execute fine and respond the expect value.", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513855159", "createdAt": "2020-10-29T01:20:13Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5OTQ0Mw==", "bodyText": "Done", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513899443", "createdAt": "2020-10-29T02:52:08Z", "author": {"login": "bxf12315"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2ODIwMg==", "bodyText": "Still need a query for deals to test the task metada actualOwner.", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513968202", "createdAt": "2020-10-29T04:53:36Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4ODg2Ng==", "bodyText": "Updated", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r514188866", "createdAt": "2020-10-29T11:30:56Z", "author": {"login": "bxf12315"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0NDY5Nw==", "bodyText": "@bxf12315 getDealsByTaskId does not use actualOwner: { isNull: true }, you need a new query.", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r514644697", "createdAt": "2020-10-30T00:41:01Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, "originalCommit": {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDQzMTExOnYy", "diffSide": "RIGHT", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNDo1Mjo0MlrOHqKG4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNDo1Mjo0MlrOHqKG4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2Nzg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    given().contentType(ContentType.JSON)\n          \n          \n            \n                            .body(getUserTaskInstanceByIdNotActualOwner(taskId))\n          \n          \n            \n                            .when().post(\"/graphql\")\n          \n          \n            \n                            .then().log().ifValidationFails().statusCode(200)\n          \n          \n            \n                            .body(\"data.UserTaskInstances[0].actualOwner\", nullValue());\n          \n          \n            \n                    validateUserTaskInstance(getUserTaskInstanceByIdNotActualOwner(taskId,), event);", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513967843", "createdAt": "2020-10-29T04:52:42Z", "author": {"login": "cristianonicolai"}, "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +797,16 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event = getUserTaskCloudEvent(taskId, processId, processInstanceId, null, null, state, null);\n+        indexUserTaskCloudEvent(event);\n+\n+        given().contentType(ContentType.JSON)\n+                .body(getUserTaskInstanceByIdNotActualOwner(taskId))\n+                .when().post(\"/graphql\")\n+                .then().log().ifValidationFails().statusCode(200)\n+                .body(\"data.UserTaskInstances[0].actualOwner\", nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba3c1a0a8eb4af5d08d3ce7c8bcffdd1cf8bf09"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzQ3MTU3OnYy", "diffSide": "RIGHT", "path": "data-index/data-index-service/data-index-service-common/src/test/resources/graphql_queries.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0MjoxNFrOHspEzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDozMzowNlrOHsxfaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MjM2Ng==", "bodyText": "I would propose keeping the name as proposed by Cristiano: \"UserTaskInstanceByIdNoActualOwner\" or maybe \"UserTaskInstanceByIdWithNoActualOwner\"", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r516572366", "createdAt": "2020-11-03T10:42:14Z", "author": {"login": "jstastny-cz"}, "path": "data-index/data-index-service/data-index-service-common/src/test/resources/graphql_queries.json", "diffHunk": "@@ -106,6 +106,12 @@\n       \"actualOwner\": \"%s\"\n     }\n   },\n+  \"UserTaskInstanceByIdNotActualOwner\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f2245ae9ab4e973d2cb2f0cb493e3e9e6cef8b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5NTQ1Mw==", "bodyText": "@bxf12315 could you please take a look pleasE?", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r516595453", "createdAt": "2020-11-03T11:23:10Z", "author": {"login": "pefernan"}, "path": "data-index/data-index-service/data-index-service-common/src/test/resources/graphql_queries.json", "diffHunk": "@@ -106,6 +106,12 @@\n       \"actualOwner\": \"%s\"\n     }\n   },\n+  \"UserTaskInstanceByIdNotActualOwner\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MjM2Ng=="}, "originalCommit": {"oid": "70f2245ae9ab4e973d2cb2f0cb493e3e9e6cef8b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxMDI1MQ==", "bodyText": "updated", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r516710251", "createdAt": "2020-11-03T14:33:06Z", "author": {"login": "bxf12315"}, "path": "data-index/data-index-service/data-index-service-common/src/test/resources/graphql_queries.json", "diffHunk": "@@ -106,6 +106,12 @@\n       \"actualOwner\": \"%s\"\n     }\n   },\n+  \"UserTaskInstanceByIdNotActualOwner\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MjM2Ng=="}, "originalCommit": {"oid": "70f2245ae9ab4e973d2cb2f0cb493e3e9e6cef8b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1169, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}