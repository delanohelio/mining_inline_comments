{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTE0MTMx", "number": 259, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODozMjoyN1rOEEajXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODozMjoyN1rOEEajXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDY0Nzk2OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODozMjoyN1rOGiBgEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMjo1NDo0OFrOGjhxkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg==", "bodyText": "the differentiation based on types is not visible in these shallow snapshots. Is it possible to use mount instead? Maybe we can even mock the EmptyStateIcon, but using mount we should see the actual icon passed to the component.", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438329362", "createdAt": "2020-06-10T18:32:27Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU0Mjk3NQ==", "bodyText": "yeah, makes sense. So now I changed to mount but I couldn't figure how to mock only the EmptyStateIcon. I could only mock the entire react-core module. @AjayJagan any tips on how to do that?\nThis fails with finding the module.\njest.mock('@patternfly/react-core/EmptyState/EmptyStateIcon');\nAnd this ends up mocking all components, then it stops at the Bullseye component which is not what we want.\njest.mock('@patternfly/react-core')", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438542975", "createdAt": "2020-06-11T04:58:26Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NTUyMg==", "bodyText": "You can do this to mock just a single component from whole package:\nconst MockedComponent = (): React.ReactElement => {\n  return <></>;\n};\n\njest.mock('@patternfly/react-core', () => ({\n  ...jest.requireActual('@patternfly/react-core'),\n  EmptyStateIcon: () => {\n    return <MockedComponent />;\n  }\n}));", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438585522", "createdAt": "2020-06-11T07:09:50Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzOTU5OQ==", "bodyText": "mock works but then I get the following in the snapshot:\n<EmptyStateIcon\n            color=\"var(--pf-global--warning-color--100)\"\n            icon={[Function]}\n            size=\"sm\"\n          >\n        <EmptyStateIconMock />\n</EmptyStateIcon>", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438639599", "createdAt": "2020-06-11T08:53:48Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MjkyNw==", "bodyText": "ah, sorry, I didn't realize, so we can either keep it full or just mock the icons passed to EmptyStateIcon. That would mean mocking ''@patternfly/react-icons'' instead:\nconst MockedComponent = (): React.ReactElement => {\n  return <></>;\n};\n\njest.mock('@patternfly/react-icons', () => ({\n  ...jest.requireActual('@patternfly/react-icons'),\n  InfoCircleIcon: () => {\n    return <MockedComponent />;\n  },\n  ExclamationTriangleIcon: () => { return <MockedComponent /> },\n.\n.\n.\n}));", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438752927", "createdAt": "2020-06-11T12:42:03Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1NDAyMQ==", "bodyText": "We'd still save ~80 lines out of 380 in the snapshots. And reducing the noise.", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r438754021", "createdAt": "2020-06-11T12:44:01Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwNjcwNA==", "bodyText": "@jstastny-cz thanks that helped. Have a look now", "url": "https://github.com/kiegroup/kogito-apps/pull/259#discussion_r439906704", "createdAt": "2020-06-15T02:54:48Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Atoms/KogitoEmptyState/tests/__snapshots__/KogitoEmptyState.test.tsx.snap", "diffHunk": "@@ -1,6 +1,29 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`Emptystate component tests snapshot testing 1`] = `\n+exports[`KogitoEmptyState component tests Info test 1`] = `\n+<Bullseye>\n+  <EmptyState\n+    variant=\"full\"\n+  >\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--info-color--100)\"\n+      icon={[Function]}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyOTM2Mg=="}, "originalCommit": {"oid": "61d497851141eeb444b03785b83e4086b17c6606"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 968, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}