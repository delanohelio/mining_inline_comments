{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzkxMDYw", "number": 239, "title": "KOGITO-2172 Implemented display data functionality for the Generic Task List Comp\u2026", "bodyText": "https://issues.redhat.com/browse/KOGITO-2172\nImplemented display data functionality using PF4 Table component for Generic Task List Component. Here are the main functionalities for the DataTableComponent:\n\nDisplay data (an array of json object) passed in props.\nUsers can decide the columns they want to show in the table by defining the \"columns\" (an array of string) prop; If there is no \"columns\" props defined, all properties of the \"data\" json object will be displayed.\nUsers can define custom \"Loading\" component and pass it to the table component in props, if there is a custom \"Loading\" component defined, it will be displayed when the table is loading status; Otherwise, the default \"Loading\" component is displayed.\nUsers can define custom \"Error\" component and pass it to the table component in props, if there is a custom \"Error\" component defined, it will be displayed when the table is loading status; Otherwise, the default \"Loading\" component is displayed.\n\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-05-28T23:22:50Z", "url": "https://github.com/kiegroup/kogito-apps/pull/239", "merged": true, "mergeCommit": {"oid": "2e304ac87a858b49fc8d09325e8b8117904ef836"}, "closed": true, "closedAt": "2020-06-08T13:02:23Z", "author": {"login": "yzhao583"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl_uxNgFqTQyMDgxNDU4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoUwhOgBqjM0MTE5NzM1MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODE0NTgz", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-420814583", "createdAt": "2020-05-29T09:57:22Z", "commit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTo1NzoyMlrOGcWeBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDoxNTo0NFrOGcXBIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4MTQ0NA==", "bodyText": "I would argue to keep the fact that it is a mock visible, what I am doing in other PR is to name the component as mock, in this case it would be MockedDataTableContainer wdyt? It's then apparent in snapshot that we actually don't expect the component to be rendered properly.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432381444", "createdAt": "2020-05-29T09:57:22Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Templates/DataTableContainer/__mocks__/DataTableContainer.tsx", "diffHunk": "@@ -0,0 +1,7 @@\n+import React from 'react';\n+\n+const DataTableContainer = (): React.ReactElement => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4NDI4MQ==", "bodyText": "For any mocks using MockedProvider we need to do additional steps to have nice snapshots (otherwise we get just empty-state component render even if we provide mocked data).\nHere there are no values passed to the component, so I guess this test is for rendering the DataTableContainer with a DataTableComponent than is in 'empty-state'. So I see two options now:\n\nIf we don't care about the DataTableComponent in the tests here, we should mock it IMO.\nIf we care about DataTableComponent rendering we should also add test where the component would actually show some data.\n\nBut I assume option 1 is sufficient for testing this container, and given that you've already created mock for DataTableComponent, I would just mock it for this test.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432384281", "createdAt": "2020-05-29T10:02:57Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Templates/DataTableContainer/tests/DataTableContainer.test.tsx", "diffHunk": "@@ -0,0 +1,19 @@\n+import React from 'react';\n+import DataTableContainer from '../DataTableContainer';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import { MockedProvider } from '@apollo/react-testing';\n+\n+describe('DataTableContainer component tests', () => {\n+  it('Snapshot tests', () => {\n+    const wrapper = getWrapper(\n+      <Router>\n+        <MockedProvider>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4NTA0Ng==", "bodyText": "In relation with comment on the test itself -> here would be the place in snapshot to see the mocked component.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432385046", "createdAt": "2020-05-29T10:04:30Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Templates/DataTableContainer/tests/__snapshots__/DataTableContainer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,237 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`DataTableContainer component tests Snapshot tests 1`] = `\n+<DataTableContainer\n+  ouiaContext={\n+    Object {\n+      \"isOuia\": false,\n+      \"ouiaId\": null,\n+    }\n+  }\n+>\n+  <PageSection\n+    variant=\"light\"\n+  >\n+    <section\n+      className=\"pf-c-page__main-section pf-m-light\"\n+    >\n+      <PageTitleComponent\n+        title=\"User Tasks\"\n+      >\n+        <Title\n+          headingLevel=\"h1\"\n+          size=\"4xl\"\n+        >\n+          <h1\n+            className=\"pf-c-title pf-m-4xl\"\n+          >\n+            User Tasks\n+          </h1>\n+        </Title>\n+      </PageTitleComponent>\n+      <Component>\n+        <ComponentWithOuia\n+          component={[Function]}\n+          componentProps={\n+            Object {\n+              \"children\": Array [\n+                <BreadcrumbItem>\n+                  <Link\n+                    to=\"/\"\n+                  >\n+                    Home\n+                  </Link>\n+                </BreadcrumbItem>,\n+                <BreadcrumbItem\n+                  isActive={true}\n+                >\n+                  User Tasks\n+                </BreadcrumbItem>,\n+              ],\n+            }\n+          }\n+          consumerContext={\n+            Object {\n+              \"isOuia\": false,\n+              \"ouiaId\": null,\n+            }\n+          }\n+        >\n+          <Breadcrumb\n+            ouiaContext={\n+              Object {\n+                \"isOuia\": false,\n+                \"ouiaId\": null,\n+              }\n+            }\n+          >\n+            <nav\n+              aria-label=\"Breadcrumb\"\n+              className=\"pf-c-breadcrumb\"\n+            >\n+              <ol\n+                className=\"pf-c-breadcrumb__list\"\n+              >\n+                <BreadcrumbItem>\n+                  <li\n+                    className=\"pf-c-breadcrumb__item\"\n+                  >\n+                    <Link\n+                      to=\"/\"\n+                    >\n+                      <LinkAnchor\n+                        href=\"/\"\n+                        navigate={[Function]}\n+                      >\n+                        <a\n+                          href=\"/\"\n+                          onClick={[Function]}\n+                        >\n+                          Home\n+                        </a>\n+                      </LinkAnchor>\n+                    </Link>\n+                    <span\n+                      className=\"pf-c-breadcrumb__item-divider\"\n+                    >\n+                      <AngleRightIcon\n+                        color=\"currentColor\"\n+                        noVerticalAlign={false}\n+                        size=\"sm\"\n+                        title={null}\n+                      >\n+                        <svg\n+                          aria-hidden={true}\n+                          aria-labelledby={null}\n+                          fill=\"currentColor\"\n+                          height=\"1em\"\n+                          role=\"img\"\n+                          style={\n+                            Object {\n+                              \"verticalAlign\": \"-0.125em\",\n+                            }\n+                          }\n+                          viewBox=\"0 0 256 512\"\n+                          width=\"1em\"\n+                        >\n+                          <path\n+                            d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"\n+                            transform=\"\"\n+                          />\n+                        </svg>\n+                      </AngleRightIcon>\n+                    </span>\n+                  </li>\n+                </BreadcrumbItem>\n+                <BreadcrumbItem\n+                  isActive={true}\n+                >\n+                  <li\n+                    className=\"pf-c-breadcrumb__item\"\n+                  >\n+                    User Tasks\n+                  </li>\n+                </BreadcrumbItem>\n+              </ol>\n+            </nav>\n+          </Breadcrumb>\n+        </ComponentWithOuia>\n+      </Component>\n+    </section>\n+  </PageSection>\n+  <PageSection>\n+    <section\n+      className=\"pf-c-page__main-section\"\n+    >\n+      <Grid\n+        gutter=\"md\"\n+      >\n+        <div\n+          className=\"pf-l-grid pf-m-gutter\"\n+        >\n+          <GridItem\n+            span={12}\n+          >\n+            <div\n+              className=\"pf-l-grid__item pf-m-12-col\"\n+            >\n+              <Card\n+                className=\"data-table\"\n+              >\n+                <article\n+                  className=\"pf-c-card data-table\"\n+                >\n+                  <DataTableComponent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4NjgyNQ==", "bodyText": "IMO shallow does not actually run the graphql query like mount would. That's why the following snapshot is also just showing only the component with properties being passed, no children - which I would expect based on the mocked data passed in.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432386825", "createdAt": "2020-05-29T10:08:07Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/tests/DataTableComponent.test.tsx", "diffHunk": "@@ -0,0 +1,164 @@\n+import React from 'react';\n+import { shallow } from 'enzyme';\n+import DataTableComponent from '../DataTableComponent';\n+import { gql } from 'apollo-boost';\n+import { MockedProvider } from '@apollo/react-testing';\n+\n+const data = [\n+  {\n+    id: '45a73767-5da3-49bf-9c40-d533c3e77ef3',\n+    description: null,\n+    name: 'Apply for visa',\n+    priority: '1',\n+    processInstanceId: '9ae7ce3b-d49c-4f35-b843-8ac3d22fa427',\n+    processId: 'travels',\n+    rootProcessInstanceId: null,\n+    rootProcessId: null,\n+    state: 'Ready',\n+    actualOwner: null,\n+    adminGroups: [],\n+    adminUsers: [],\n+    completed: null,\n+    started: '2020-02-19T11:11:56.282Z',\n+    excludedUsers: [],\n+    potentialGroups: [],\n+    potentialUsers: [],\n+    inputs:\n+      '{\"Skippable\":\"true\",\"trip\":{\"city\":\"Boston\",\"country\":\"US\",\"begin\":\"2020-02-19T23:00:00.000+01:00\",\"end\":\"2020-02-26T23:00:00.000+01:00\",\"visaRequired\":true},\"TaskName\":\"VisaApplication\",\"NodeName\":\"Apply for visa\",\"traveller\":{\"firstName\":\"Rachel\",\"lastName\":\"White\",\"email\":\"rwhite@gorle.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Cabalone\",\"city\":\"Zerf\",\"zipCode\":\"765756\",\"country\":\"Poland\"}},\"Priority\":\"1\"}\"',\n+    outputs: '{}',\n+    referenceName: 'VisaApplication'\n+  },\n+  {\n+    id: '047ec38d-5d57-4330-8c8d-9bd67b53a529',\n+    description: '',\n+    name: 'Confirm travel',\n+    priority: '1',\n+    processInstanceId: '9ae407dd-cdfa-4722-8a49-0a6d2e14550d',\n+    processId: 'travels',\n+    rootProcessInstanceId: null,\n+    rootProcessId: null,\n+    state: 'Ready',\n+    actualOwner: null,\n+    adminGroups: [],\n+    adminUsers: [],\n+    completed: null,\n+    started: '2020-02-19T10:59:34.185Z',\n+    excludedUsers: [],\n+    potentialGroups: [],\n+    potentialUsers: [],\n+    inputs:\n+      '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2019-12-09T23:00:00.000+01:00\",\"arrival\":\"2019-12-14T23:00:00.000+01:00\"},\"TaskName\":\"ConfirmTravel\",\"NodeName\":\"Confirm travel\",\"Priority\":\"1\",\"Skippable\":\"true\",\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"New York\",\"zipCode\":\"12345\",\"country\":\"US\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null}}',\n+    outputs: '{\"ActorId\":\"\"}',\n+    referenceName: 'ConfirmTravel'\n+  }\n+];\n+const columns = ['ProcessId', 'Name', 'Priority', 'ProcessInstanceId', 'State'];\n+const GET_USER_TASKS_BY_STATE = gql`\n+  query getUserTasksByState($state: String) {\n+    ProcessInstances(where: { state: { equal: $state } }) {\n+      id\n+      description\n+      name\n+      priority\n+      processInstanceId\n+      processId\n+      rootProcessInstanceId\n+      rootProcessId\n+      state\n+      actualOwner\n+      adminGroups\n+      adminUsers\n+      completed\n+      started\n+      excludedUsers\n+      potentialGroups\n+      potentialUsers\n+      inputs\n+      outputs\n+      referenceName\n+    }\n+  }\n+`;\n+const mocks = [\n+  {\n+    request: {\n+      query: GET_USER_TASKS_BY_STATE,\n+      variables: {\n+        state: ['Ready']\n+      }\n+    },\n+    result: {\n+      data: {\n+        UserTaskInstances: [\n+          {\n+            id: '45a73767-5da3-49bf-9c40-d533c3e77ef3',\n+            description: null,\n+            name: 'Apply for visa',\n+            priority: '1',\n+            processInstanceId: '9ae7ce3b-d49c-4f35-b843-8ac3d22fa427',\n+            processId: 'travels',\n+            rootProcessInstanceId: null,\n+            rootProcessId: null,\n+            state: 'Ready',\n+            actualOwner: null,\n+            adminGroups: [],\n+            adminUsers: [],\n+            completed: null,\n+            started: '2020-02-19T11:11:56.282Z',\n+            excludedUsers: [],\n+            potentialGroups: [],\n+            potentialUsers: [],\n+            inputs:\n+              '{\"Skippable\":\"true\",\"trip\":{\"city\":\"Boston\",\"country\":\"US\",\"begin\":\"2020-02-19T23:00:00.000+01:00\",\"end\":\"2020-02-26T23:00:00.000+01:00\",\"visaRequired\":true},\"TaskName\":\"VisaApplication\",\"NodeName\":\"Apply for visa\",\"traveller\":{\"firstName\":\"Rachel\",\"lastName\":\"White\",\"email\":\"rwhite@gorle.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Cabalone\",\"city\":\"Zerf\",\"zipCode\":\"765756\",\"country\":\"Poland\"}},\"Priority\":\"1\"}\"',\n+            outputs: '{}',\n+            referenceName: 'VisaApplication'\n+          },\n+          {\n+            id: '047ec38d-5d57-4330-8c8d-9bd67b53a529',\n+            description: '',\n+            name: 'Confirm travel',\n+            priority: '1',\n+            processInstanceId: '9ae407dd-cdfa-4722-8a49-0a6d2e14550d',\n+            processId: 'travels',\n+            rootProcessInstanceId: null,\n+            rootProcessId: null,\n+            state: 'Ready',\n+            actualOwner: null,\n+            adminGroups: [],\n+            adminUsers: [],\n+            completed: null,\n+            started: '2020-02-19T10:59:34.185Z',\n+            excludedUsers: [],\n+            potentialGroups: [],\n+            potentialUsers: [],\n+            inputs:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2019-12-09T23:00:00.000+01:00\",\"arrival\":\"2019-12-14T23:00:00.000+01:00\"},\"TaskName\":\"ConfirmTravel\",\"NodeName\":\"Confirm travel\",\"Priority\":\"1\",\"Skippable\":\"true\",\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"New York\",\"zipCode\":\"12345\",\"country\":\"US\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null}}',\n+            outputs: '{\"ActorId\":\"\"}',\n+            referenceName: 'ConfirmTravel'\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+const props1 = {\n+  data,\n+  isLoading: false,\n+  columns,\n+  networkStatus: 1,\n+  error: {},\n+  refetch: jest.fn(),\n+  LoadingComponent: undefined,\n+  ErrorComponent: undefined\n+};\n+\n+describe('DataTable component tests', () => {\n+  it('Snapshot tests 1', () => {\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4NzMwMg==", "bodyText": "I would call the component MockedDataList -> for the snapshots to apparently show that the component is actually mocked.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432387302", "createdAt": "2020-05-29T10:09:13Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/__mocks__/DataTableComponent.tsx", "diffHunk": "@@ -0,0 +1,7 @@\n+import React from 'react';\n+\n+const DataListComponent = (): React.ReactElement => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5MDQzMg==", "bodyText": "If you decide to use mount instead mind that the test needs to be async, I have a solution in my PR, where I just introduce another wrapper for such cases: getWrapperAsync, then the test would look like:\nit('', async ()=> {\n     const wrapper = await getWrapperAsync(....)\n     expect(wrapper).toMatchSnapshot();\n})\n\nReach out to me if needed.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r432390432", "createdAt": "2020-05-29T10:15:44Z", "author": {"login": "jstastny-cz"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/tests/DataTableComponent.test.tsx", "diffHunk": "@@ -0,0 +1,164 @@\n+import React from 'react';\n+import { shallow } from 'enzyme';\n+import DataTableComponent from '../DataTableComponent';\n+import { gql } from 'apollo-boost';\n+import { MockedProvider } from '@apollo/react-testing';\n+\n+const data = [\n+  {\n+    id: '45a73767-5da3-49bf-9c40-d533c3e77ef3',\n+    description: null,\n+    name: 'Apply for visa',\n+    priority: '1',\n+    processInstanceId: '9ae7ce3b-d49c-4f35-b843-8ac3d22fa427',\n+    processId: 'travels',\n+    rootProcessInstanceId: null,\n+    rootProcessId: null,\n+    state: 'Ready',\n+    actualOwner: null,\n+    adminGroups: [],\n+    adminUsers: [],\n+    completed: null,\n+    started: '2020-02-19T11:11:56.282Z',\n+    excludedUsers: [],\n+    potentialGroups: [],\n+    potentialUsers: [],\n+    inputs:\n+      '{\"Skippable\":\"true\",\"trip\":{\"city\":\"Boston\",\"country\":\"US\",\"begin\":\"2020-02-19T23:00:00.000+01:00\",\"end\":\"2020-02-26T23:00:00.000+01:00\",\"visaRequired\":true},\"TaskName\":\"VisaApplication\",\"NodeName\":\"Apply for visa\",\"traveller\":{\"firstName\":\"Rachel\",\"lastName\":\"White\",\"email\":\"rwhite@gorle.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Cabalone\",\"city\":\"Zerf\",\"zipCode\":\"765756\",\"country\":\"Poland\"}},\"Priority\":\"1\"}\"',\n+    outputs: '{}',\n+    referenceName: 'VisaApplication'\n+  },\n+  {\n+    id: '047ec38d-5d57-4330-8c8d-9bd67b53a529',\n+    description: '',\n+    name: 'Confirm travel',\n+    priority: '1',\n+    processInstanceId: '9ae407dd-cdfa-4722-8a49-0a6d2e14550d',\n+    processId: 'travels',\n+    rootProcessInstanceId: null,\n+    rootProcessId: null,\n+    state: 'Ready',\n+    actualOwner: null,\n+    adminGroups: [],\n+    adminUsers: [],\n+    completed: null,\n+    started: '2020-02-19T10:59:34.185Z',\n+    excludedUsers: [],\n+    potentialGroups: [],\n+    potentialUsers: [],\n+    inputs:\n+      '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2019-12-09T23:00:00.000+01:00\",\"arrival\":\"2019-12-14T23:00:00.000+01:00\"},\"TaskName\":\"ConfirmTravel\",\"NodeName\":\"Confirm travel\",\"Priority\":\"1\",\"Skippable\":\"true\",\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"New York\",\"zipCode\":\"12345\",\"country\":\"US\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null}}',\n+    outputs: '{\"ActorId\":\"\"}',\n+    referenceName: 'ConfirmTravel'\n+  }\n+];\n+const columns = ['ProcessId', 'Name', 'Priority', 'ProcessInstanceId', 'State'];\n+const GET_USER_TASKS_BY_STATE = gql`\n+  query getUserTasksByState($state: String) {\n+    ProcessInstances(where: { state: { equal: $state } }) {\n+      id\n+      description\n+      name\n+      priority\n+      processInstanceId\n+      processId\n+      rootProcessInstanceId\n+      rootProcessId\n+      state\n+      actualOwner\n+      adminGroups\n+      adminUsers\n+      completed\n+      started\n+      excludedUsers\n+      potentialGroups\n+      potentialUsers\n+      inputs\n+      outputs\n+      referenceName\n+    }\n+  }\n+`;\n+const mocks = [\n+  {\n+    request: {\n+      query: GET_USER_TASKS_BY_STATE,\n+      variables: {\n+        state: ['Ready']\n+      }\n+    },\n+    result: {\n+      data: {\n+        UserTaskInstances: [\n+          {\n+            id: '45a73767-5da3-49bf-9c40-d533c3e77ef3',\n+            description: null,\n+            name: 'Apply for visa',\n+            priority: '1',\n+            processInstanceId: '9ae7ce3b-d49c-4f35-b843-8ac3d22fa427',\n+            processId: 'travels',\n+            rootProcessInstanceId: null,\n+            rootProcessId: null,\n+            state: 'Ready',\n+            actualOwner: null,\n+            adminGroups: [],\n+            adminUsers: [],\n+            completed: null,\n+            started: '2020-02-19T11:11:56.282Z',\n+            excludedUsers: [],\n+            potentialGroups: [],\n+            potentialUsers: [],\n+            inputs:\n+              '{\"Skippable\":\"true\",\"trip\":{\"city\":\"Boston\",\"country\":\"US\",\"begin\":\"2020-02-19T23:00:00.000+01:00\",\"end\":\"2020-02-26T23:00:00.000+01:00\",\"visaRequired\":true},\"TaskName\":\"VisaApplication\",\"NodeName\":\"Apply for visa\",\"traveller\":{\"firstName\":\"Rachel\",\"lastName\":\"White\",\"email\":\"rwhite@gorle.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Cabalone\",\"city\":\"Zerf\",\"zipCode\":\"765756\",\"country\":\"Poland\"}},\"Priority\":\"1\"}\"',\n+            outputs: '{}',\n+            referenceName: 'VisaApplication'\n+          },\n+          {\n+            id: '047ec38d-5d57-4330-8c8d-9bd67b53a529',\n+            description: '',\n+            name: 'Confirm travel',\n+            priority: '1',\n+            processInstanceId: '9ae407dd-cdfa-4722-8a49-0a6d2e14550d',\n+            processId: 'travels',\n+            rootProcessInstanceId: null,\n+            rootProcessId: null,\n+            state: 'Ready',\n+            actualOwner: null,\n+            adminGroups: [],\n+            adminUsers: [],\n+            completed: null,\n+            started: '2020-02-19T10:59:34.185Z',\n+            excludedUsers: [],\n+            potentialGroups: [],\n+            potentialUsers: [],\n+            inputs:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2019-12-09T23:00:00.000+01:00\",\"arrival\":\"2019-12-14T23:00:00.000+01:00\"},\"TaskName\":\"ConfirmTravel\",\"NodeName\":\"Confirm travel\",\"Priority\":\"1\",\"Skippable\":\"true\",\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"New York\",\"zipCode\":\"12345\",\"country\":\"US\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null}}',\n+            outputs: '{\"ActorId\":\"\"}',\n+            referenceName: 'ConfirmTravel'\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+const props1 = {\n+  data,\n+  isLoading: false,\n+  columns,\n+  networkStatus: 1,\n+  error: {},\n+  refetch: jest.fn(),\n+  LoadingComponent: undefined,\n+  ErrorComponent: undefined\n+};\n+\n+describe('DataTable component tests', () => {\n+  it('Snapshot tests 1', () => {\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4NjgyNQ=="}, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 157}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNjQzMTQ0", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-421643144", "createdAt": "2020-06-01T07:26:20Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTg5MTI2", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422189126", "createdAt": "2020-06-01T21:17:52Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMToxNzo1MlrOGdaenQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMToxNzo1MlrOGdaenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ5NTcwOQ==", "bodyText": "Two comments here. First, I think this is the fourth time we have .spinner-center and .error-text defined between the packages. We definitely need to think about how to share common CSS here.\nSecond, we need to establish some good naming practices for CSS classes. I have been using something close to .kogito-packagename\u2014block__element\u2014modifier. In the domain explorer, we\u2019ve used this to solve the same problem of a too-wide table.\n.kogito-management-console--domain-explorer__table-OverFlow {\noverflow-y: auto;\n}", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433495709", "createdAt": "2020-06-01T21:17:52Z", "author": {"login": "srambach"}, "path": "packages/task-console/src/components/Templates/DataTableContainer/DataTable.css", "diffHunk": "@@ -0,0 +1,13 @@\n+.spinner-center {\n+  text-align: center;\n+  margin-top: 5%;\n+}\n+\n+.error-text{\n+  text-align: center;\n+  margin-top: 5%;\n+}\n+\n+.data-table{\n+  overflow: auto;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzIzNzI3", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422323727", "createdAt": "2020-06-02T03:51:04Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMzo1MTowNFrOGdhKFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMzo1MTowNFrOGdhKFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwNTE0Mg==", "bodyText": "Hello @yzhao583 , So there was a discussion on naming the components and  everyone feels that it would be better to remove the 'component' at the end of every components(for instance in this case just the DataTable). wdyt @cristianonicolai @Sara4994  @srambach . Other than that the PR looks awesome :)", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433605142", "createdAt": "2020-06-02T03:51:04Z", "author": {"login": "AjayJagan"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/DataTableComponent.tsx", "diffHunk": "@@ -0,0 +1,140 @@\n+import React, { useEffect, useState } from 'react';\n+import { Bullseye } from '@patternfly/react-core';\n+import { Table, TableHeader, TableBody } from '@patternfly/react-table';\n+import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';\n+import EmptyStateComponent from '../../Atoms/EmptyStateComponent/EmptyStateComponent';\n+import '@patternfly/patternfly/patternfly-addons.css';\n+import _ from 'lodash';\n+\n+interface IOwnProps {\n+  data: any[];\n+  isLoading: boolean;\n+  columns?: any[];\n+  networkStatus: any;\n+  error: any;\n+  refetch: () => void;\n+  LoadingComponent?: React.ReactNode;\n+  ErrorComponent?: React.ReactNode;\n+}\n+\n+const getColumns = (data, columns) => {\n+  let columnList = [];\n+  if (data) {\n+    columnList = columns\n+      ? columns\n+      : _.filter(_.keys(_.sample(data)), key => key !== '__typename');\n+  }\n+  return columnList;\n+};\n+\n+const getRows = (data, columns) => {\n+  let rowList = [];\n+  if (data) {\n+    rowList = data.map(rowData => {\n+      return {\n+        cells: _.reduce(\n+          columns,\n+          (result, column) => {\n+            _.forEach(rowData, (value, key) => {\n+              if (key.toLowerCase() === column.toLowerCase()) {\n+                if (_.isEmpty(value) || value === '{}') {\n+                  result.push('N/A');\n+                } else {\n+                  result.push(value);\n+                }\n+              }\n+            });\n+            return result;\n+          },\n+          []\n+        ),\n+        rowKey: JSON.stringify(rowData).substr(0, 20) // This is a walkaround to bypass the \"id\" cannot be included in \"columns\" issue\n+      };\n+    });\n+  }\n+  return rowList;\n+};\n+\n+const DataTableComponent: React.FC<IOwnProps> = ({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzI4MDgw", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422328080", "createdAt": "2020-06-02T04:07:17Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDowNzoxN1rOGdhXvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoyNTowNVrOGdhnGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwODYzNg==", "bodyText": "@yzhao583, @Sara4994 is working on moving and renaming these components to the common module, maybe is worth if you guys sync for one PR after the other.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433608636", "createdAt": "2020-06-02T04:07:17Z", "author": {"login": "cristianonicolai"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/DataTableComponent.tsx", "diffHunk": "@@ -0,0 +1,140 @@\n+import React, { useEffect, useState } from 'react';\n+import { Bullseye } from '@patternfly/react-core';\n+import { Table, TableHeader, TableBody } from '@patternfly/react-table';\n+import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMjI2Ng==", "bodyText": "@yzhao583 I think on management console we end-up using a random uuid, maybe double check with @AjayJagan @Sara4994.", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433612266", "createdAt": "2020-06-02T04:23:34Z", "author": {"login": "cristianonicolai"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/DataTableComponent.tsx", "diffHunk": "@@ -0,0 +1,140 @@\n+import React, { useEffect, useState } from 'react';\n+import { Bullseye } from '@patternfly/react-core';\n+import { Table, TableHeader, TableBody } from '@patternfly/react-table';\n+import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';\n+import EmptyStateComponent from '../../Atoms/EmptyStateComponent/EmptyStateComponent';\n+import '@patternfly/patternfly/patternfly-addons.css';\n+import _ from 'lodash';\n+\n+interface IOwnProps {\n+  data: any[];\n+  isLoading: boolean;\n+  columns?: any[];\n+  networkStatus: any;\n+  error: any;\n+  refetch: () => void;\n+  LoadingComponent?: React.ReactNode;\n+  ErrorComponent?: React.ReactNode;\n+}\n+\n+const getColumns = (data, columns) => {\n+  let columnList = [];\n+  if (data) {\n+    columnList = columns\n+      ? columns\n+      : _.filter(_.keys(_.sample(data)), key => key !== '__typename');\n+  }\n+  return columnList;\n+};\n+\n+const getRows = (data, columns) => {\n+  let rowList = [];\n+  if (data) {\n+    rowList = data.map(rowData => {\n+      return {\n+        cells: _.reduce(\n+          columns,\n+          (result, column) => {\n+            _.forEach(rowData, (value, key) => {\n+              if (key.toLowerCase() === column.toLowerCase()) {\n+                if (_.isEmpty(value) || value === '{}') {\n+                  result.push('N/A');\n+                } else {\n+                  result.push(value);\n+                }\n+              }\n+            });\n+            return result;\n+          },\n+          []\n+        ),\n+        rowKey: JSON.stringify(rowData).substr(0, 20) // This is a walkaround to bypass the \"id\" cannot be included in \"columns\" issue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMjU2OQ==", "bodyText": "+1 for dropping Compoment from the naming. Also, @yzhao583 is this a Task specific table, do we want to maybe name for specifically or even keep as generic and move to the common module?", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433612569", "createdAt": "2020-06-02T04:25:05Z", "author": {"login": "cristianonicolai"}, "path": "packages/task-console/src/components/Organisms/DataTableComponent/DataTableComponent.tsx", "diffHunk": "@@ -0,0 +1,140 @@\n+import React, { useEffect, useState } from 'react';\n+import { Bullseye } from '@patternfly/react-core';\n+import { Table, TableHeader, TableBody } from '@patternfly/react-table';\n+import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';\n+import EmptyStateComponent from '../../Atoms/EmptyStateComponent/EmptyStateComponent';\n+import '@patternfly/patternfly/patternfly-addons.css';\n+import _ from 'lodash';\n+\n+interface IOwnProps {\n+  data: any[];\n+  isLoading: boolean;\n+  columns?: any[];\n+  networkStatus: any;\n+  error: any;\n+  refetch: () => void;\n+  LoadingComponent?: React.ReactNode;\n+  ErrorComponent?: React.ReactNode;\n+}\n+\n+const getColumns = (data, columns) => {\n+  let columnList = [];\n+  if (data) {\n+    columnList = columns\n+      ? columns\n+      : _.filter(_.keys(_.sample(data)), key => key !== '__typename');\n+  }\n+  return columnList;\n+};\n+\n+const getRows = (data, columns) => {\n+  let rowList = [];\n+  if (data) {\n+    rowList = data.map(rowData => {\n+      return {\n+        cells: _.reduce(\n+          columns,\n+          (result, column) => {\n+            _.forEach(rowData, (value, key) => {\n+              if (key.toLowerCase() === column.toLowerCase()) {\n+                if (_.isEmpty(value) || value === '{}') {\n+                  result.push('N/A');\n+                } else {\n+                  result.push(value);\n+                }\n+              }\n+            });\n+            return result;\n+          },\n+          []\n+        ),\n+        rowKey: JSON.stringify(rowData).substr(0, 20) // This is a walkaround to bypass the \"id\" cannot be included in \"columns\" issue\n+      };\n+    });\n+  }\n+  return rowList;\n+};\n+\n+const DataTableComponent: React.FC<IOwnProps> = ({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwNTE0Mg=="}, "originalCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDM0OTMx", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422434931", "createdAt": "2020-06-02T08:03:19Z", "commit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODowMzoxOVrOGdmgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODowMzoxOVrOGdmgZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY5Mjc3NQ==", "bodyText": "I think this could be removed", "url": "https://github.com/kiegroup/kogito-apps/pull/239#discussion_r433692775", "createdAt": "2020-06-02T08:03:19Z", "author": {"login": "pefernan"}, "path": "packages/task-console/src/components/Templates/DataTableContainer/DataTableContainer.tsx", "diffHunk": "@@ -0,0 +1,87 @@\n+import {\n+  Breadcrumb,\n+  BreadcrumbItem,\n+  Card,\n+  Grid,\n+  GridItem,\n+  PageSection,\n+  InjectedOuiaProps,\n+  withOuiaContext,\n+  Bullseye\n+} from '@patternfly/react-core';\n+import _ from 'lodash';\n+import React, { useEffect } from 'react';\n+import { Link } from 'react-router-dom';\n+import PageTitleComponent from '../../Molecules/PageTitleComponent/PageTitleComponent';\n+import './DataTable.css';\n+import DataTableComponent from '../../Organisms/DataTableComponent/DataTableComponent';\n+import { useGetUserTasksByStatesQuery } from '../../../graphql/types';\n+import { ouiaPageTypeAndObjectId } from '@kogito-apps/common';\n+import SpinnerComponent from '../../Atoms/SpinnerComponent/SpinnerComponent';\n+\n+const UserTaskLoadingComponent = (\n+  <Bullseye>\n+    <SpinnerComponent spinnerText=\"Loading user tasks...\" />\n+  </Bullseye>\n+);\n+\n+const DataTableContainer: React.FC<InjectedOuiaProps> = ({ ouiaContext }) => {\n+  const {\n+    loading,\n+    error,\n+    data,\n+    refetch,\n+    networkStatus\n+  } = useGetUserTasksByStatesQuery({\n+    variables: {\n+      state: ['Ready'] // FIXME: state should not be hard-coded.\n+    },\n+    fetchPolicy: 'network-only',\n+    notifyOnNetworkStatusChange: true\n+  });\n+\n+  // const columns = [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a526ae4a107dd3192a732852becf6192328577"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzY3MTgy", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422767182", "createdAt": "2020-06-02T14:59:33Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzcxNDgx", "url": "https://github.com/kiegroup/kogito-apps/pull/239#pullrequestreview-422771481", "createdAt": "2020-06-02T15:03:56Z", "commit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "915574c8d9b8c7fcb18fc51ea50b0ec591f0791a", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/915574c8d9b8c7fcb18fc51ea50b0ec591f0791a", "committedDate": "2020-05-29T23:56:43Z", "message": "Update snapshot tests"}, "afterCommit": {"oid": "f2c5f7cf7318a7a1cd269c842f18dae816d9dd23", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/f2c5f7cf7318a7a1cd269c842f18dae816d9dd23", "committedDate": "2020-06-02T21:13:12Z", "message": "Use uuid v4 to generate random rowKey for DataTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77cc0b1d3ee9bd6177efd0a309a7a0b244b87004", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/77cc0b1d3ee9bd6177efd0a309a7a0b244b87004", "committedDate": "2020-06-05T15:39:13Z", "message": "Reslove conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "441e250e2e6996a2b82f99bcd8c8a9624697286e", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/441e250e2e6996a2b82f99bcd8c8a9624697286e", "committedDate": "2020-06-05T15:52:00Z", "message": "# This is a combination of 2 commits.\n# This is the 1st commit message:\n\nExport KogitoSpinner Component from the Common module\n\n# The commit message #2 will be skipped:\n\n# Use uuid v4 to generate random rowKey for DataTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6de70873890fddcc101c41f3ebfc90b883a9515d", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6de70873890fddcc101c41f3ebfc90b883a9515d", "committedDate": "2020-06-05T15:53:35Z", "message": "Reslove conflict"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfd88139bee98e01bdd186a5e11fdb82f2aca1e6", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/cfd88139bee98e01bdd186a5e11fdb82f2aca1e6", "committedDate": "2020-06-03T17:50:15Z", "message": "Use KogitoSpinner component from the Common module, remove unnecessary CSS code"}, "afterCommit": {"oid": "6de70873890fddcc101c41f3ebfc90b883a9515d", "author": {"user": {"login": "yzhao583", "name": "yu zhao"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6de70873890fddcc101c41f3ebfc90b883a9515d", "committedDate": "2020-06-05T15:53:35Z", "message": "Reslove conflict"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 64, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}