{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MjQxNDM1", "number": 221, "title": "KOGITO-2154: Unit test cases for Management Console", "bodyText": "JIRA issue : https://issues.redhat.com/browse/KOGITO-2154\nDescription: Added unit test cases for react components on Management console", "createdAt": "2020-05-18T03:48:45Z", "url": "https://github.com/kiegroup/kogito-apps/pull/221", "merged": true, "mergeCommit": {"oid": "a988825a98a5e6b80ee9299c7c37f00357698dfa"}, "closed": true, "closedAt": "2020-05-27T05:30:11Z", "author": {"login": "Sara4994"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcitmCdgBqjMzNTAxMjkyMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclCWZMgFqTQxODE3OTE2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9909f8d16a85924816b21d167e629774d58d662d", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9909f8d16a85924816b21d167e629774d58d662d", "committedDate": "2020-05-18T03:43:02Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "032b9a7590adc7824849ae57fb06ac6cedc11fe3", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/032b9a7590adc7824849ae57fb06ac6cedc11fe3", "committedDate": "2020-05-19T05:26:16Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "032b9a7590adc7824849ae57fb06ac6cedc11fe3", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/032b9a7590adc7824849ae57fb06ac6cedc11fe3", "committedDate": "2020-05-19T05:26:16Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "bb83a95663a883dc3a826243e61935e28fb9f108", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/bb83a95663a883dc3a826243e61935e28fb9f108", "committedDate": "2020-05-19T07:40:35Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb83a95663a883dc3a826243e61935e28fb9f108", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/bb83a95663a883dc3a826243e61935e28fb9f108", "committedDate": "2020-05-19T07:40:35Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e6e2ef6d26953da966217c128c1eb3c62bf42b08", "committedDate": "2020-05-20T09:15:21Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjI1Mzc2", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-415625376", "createdAt": "2020-05-20T18:53:21Z", "commit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1MzoyMVrOGYZkXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1MzoyMVrOGYZkXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNzkxNw==", "bodyText": "@Sara4994 remove this comment?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r428237917", "createdAt": "2020-05-20T18:53:21Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/tests/DomainExplorerColumnPicker.test.tsx", "diffHunk": "@@ -0,0 +1,340 @@\n+import React from 'react';\n+import { shallow, configure, mount } from 'enzyme';\n+import DomainExplorerColumnPicker from '../DomainExplorerColumnPicker';\n+import Adapter from 'enzyme-adapter-react-16';\n+\n+configure({ adapter: new Adapter() });\n+\n+jest.mock('react-apollo');\n+describe('Domain Explorer Column picker component', () => {\n+  it('Snapshot testing', () => {\n+    const props = {\n+      columnPickerType: 'Travels',\n+      setColumnFilters: jest.fn(),\n+      setTableLoading: jest.fn(),\n+      getQueryTypes: {\n+        data: {\n+          __schema: {\n+            queryType: [\n+              {\n+                name: 'Address',\n+                kind: 'OBJECT',\n+                fields: [\n+                  {\n+                    name: 'city',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  },\n+                  {\n+                    name: 'country',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  },\n+                  {\n+                    name: 'location',\n+                    type: {\n+                      name: 'Test',\n+                      kind: 'OBJECT'\n+                    }\n+                  }\n+                ]\n+              },\n+              {\n+                name: 'Test',\n+                kind: 'OBJECT',\n+                fields: [\n+                  {\n+                    name: 'city',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  },\n+                  {\n+                    name: 'country',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  }\n+                ]\n+              }\n+            ]\n+          }\n+        },\n+        loading: false\n+      },\n+      setDisplayTable: jest.fn(),\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+      setParameters: jest.fn(),\n+      selected: [],\n+      setSelected: jest.fn(),\n+      data: [\n+        {\n+          name: 'id',\n+          type: {\n+            fields: null,\n+            kind: 'SCALAR',\n+            name: 'String',\n+            __typename: '__Type'\n+          }\n+        },\n+        {\n+          name: 'flight',\n+          type: {\n+            name: 'Flight',\n+            fields: [\n+              {\n+                name: 'arrival',\n+                type: {\n+                  name: 'String',\n+                  kind: 'SCALAR'\n+                }\n+              },\n+              {\n+                name: 'departure',\n+                type: {\n+                  name: 'String',\n+                  kind: 'SCALAR'\n+                }\n+              }\n+            ],\n+            kind: 'OBJECT'\n+          }\n+        },\n+        {\n+          name: 'hotel',\n+          type: {\n+            name: 'Hotel',\n+            fields: [\n+              {\n+                name: 'address',\n+                type: {\n+                  name: 'Address',\n+                  kind: 'OBJECT'\n+                }\n+              },\n+              {\n+                name: 'bookingNumber',\n+                type: {\n+                  name: 'String',\n+                  kind: 'SCALAR'\n+                }\n+              }\n+            ],\n+            kind: 'OBJECT'\n+          }\n+        }\n+      ],\n+      getPicker: {\n+        data: {},\n+        loading: false\n+      },\n+      setError: jest.fn(),\n+      setDisplayEmptyState: jest.fn(),\n+      rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+      enableCache: false,\n+      setEnableCache: jest.fn(),\n+      pageSize: 2,\n+      offsetVal: 10,\n+      setOffsetVal: jest.fn(),\n+      setPageSize: jest.fn(),\n+      setIsLoadingMore: jest.fn(),\n+      isLoadingMore: true\n+    };\n+\n+    const wrapper = mount(<DomainExplorerColumnPicker {...props} />);\n+    wrapper.update();\n+    wrapper.setProps({});\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+\n+  it('Test Apply columns button', () => {\n+    const props = {\n+      columnPickerType: 'Travels',\n+      setColumnFilters: jest.fn(),\n+      setTableLoading: jest.fn(),\n+      getQueryTypes: {\n+        data: {},\n+        loading: false\n+      },\n+      setDisplayTable: jest.fn(),\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+      setParameters: jest.fn(),\n+      selected: [],\n+      setSelected: jest.fn(),\n+      data: [],\n+      getPicker: {\n+        data: {},\n+        loading: false\n+      },\n+      setError: jest.fn(),\n+      setDisplayEmptyState: jest.fn(),\n+      rememberedParams: [],\n+      enableCache: false,\n+      setEnableCache: jest.fn(),\n+      pageSize: 2,\n+      offsetVal: 10,\n+      setOffsetVal: jest.fn(),\n+      setPageSize: jest.fn(),\n+      setIsLoadingMore: jest.fn(),\n+      isLoadingMore: true\n+    };\n+\n+    const wrapper = shallow(<DomainExplorerColumnPicker {...props} />);\n+\n+    wrapper.find('#refresh-button').simulate('click');\n+    wrapper.find('#apply-columns').simulate('click');\n+  });\n+  it('Test refresh button', () => {\n+    const props = {\n+      columnPickerType: 'Travels',\n+      setColumnFilters: jest.fn(),\n+      setTableLoading: jest.fn(),\n+      getQueryTypes: {\n+        data: {},\n+        loading: false\n+      },\n+      setDisplayTable: jest.fn(),\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+      setParameters: jest.fn(),\n+      selected: [\"cityhotelAddress\"],\n+      setSelected: jest.fn(),\n+      data: [],\n+      getPicker: {\n+        data: {},\n+        loading: false\n+      },\n+      setError: jest.fn(),\n+      setDisplayEmptyState: jest.fn(),\n+      rememberedParams: [],\n+      enableCache: false,\n+      setEnableCache: jest.fn(),\n+      pageSize: 2,\n+      offsetVal: 10,\n+      setOffsetVal: jest.fn(),\n+      setPageSize: jest.fn(),\n+      setIsLoadingMore: jest.fn(),\n+      isLoadingMore: true\n+    };\n+    const obj = { \n+        target: { id: 'cityhotelAddress' }, \n+        nativeEvent: {\n+            target : { \n+              nextSibling: {\n+                innerText: ''\n+              },\n+              parentElement: {\n+                parentElement : {\n+                  getAttribute: jest.fn(()=> 'cityhotelAddress')\n+                }\n+              }\n+            }\n+          }\n+        }\n+    const wrapper = shallow(<DomainExplorerColumnPicker {...props} />);\n+    wrapper.find('#refresh-button').simulate('click');\n+    wrapper.find('#apply-columns').simulate('click');\n+    wrapper\n+      .find('#columnPicker-dropdown')\n+      .simulate('select', obj );\n+// tslint:disable-next-line\n+    wrapper.find('#columnPicker-dropdown').props()['onToggle']()\n+  });\n+  it('check invalid column picker', () => {\n+    const props = {\n+      columnPickerType: ' ',\n+      setColumnFilters: jest.fn(),\n+      setTableLoading: jest.fn(),\n+      getQueryTypes: {\n+        data: {},\n+        loading: false\n+      },\n+      setDisplayTable: jest.fn(),\n+      parameters: [],\n+      setParameters: jest.fn(),\n+      selected: [],\n+      setSelected: jest.fn(),\n+      data: [],\n+      getPicker: {\n+        data: {},\n+        loading: false\n+      },\n+      setError: jest.fn(),\n+      setDisplayEmptyState: jest.fn(),\n+      rememberedParams: [],\n+      enableCache: false,\n+      setEnableCache: jest.fn(),\n+      pageSize: 2,\n+      offsetVal: 10,\n+      setOffsetVal: jest.fn(),\n+      setPageSize: jest.fn(),\n+      setIsLoadingMore: jest.fn(),\n+      isLoadingMore: true\n+    };\n+    const obj = { \n+      target: { id: 'id' }, \n+      nativeEvent: {\n+          target : { \n+            nextSibling: {\n+              innerText: ''\n+            },\n+            parentElement: {\n+              parentElement : {\n+                getAttribute: jest.fn(()=> 'id')\n+              }\n+            }\n+          }\n+        }\n+      }\n+    const wrapper = shallow(<DomainExplorerColumnPicker {...props} />);\n+    wrapper.update();\n+\n+    wrapper\n+    .find('#columnPicker-dropdown')\n+    .simulate('select', obj );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('check condition remembered params equal to zero', () => {\n+    const props = {\n+      columnPickerType: ' ',\n+      setColumnFilters: jest.fn(),\n+      setTableLoading: jest.fn(),\n+      getQueryTypes: {\n+        data: {},\n+        loading: false\n+      },\n+      setDisplayTable: jest.fn(),\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+      setParameters: jest.fn(),\n+      selected: [],\n+      setSelected: jest.fn(),\n+      data: [],\n+      getPicker: {\n+        data: {},\n+        loading: false\n+      },\n+      setError: jest.fn(),\n+      setDisplayEmptyState: jest.fn(),\n+      rememberedParams: [],\n+      enableCache: false,\n+      setEnableCache: jest.fn(),\n+      pageSize: 2,\n+      offsetVal: 10,\n+      setOffsetVal: jest.fn(),\n+      setPageSize: jest.fn(),\n+      setIsLoadingMore: jest.fn(),\n+      isLoadingMore: true\n+    };\n+    // const paramFields = []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08"}, "originalPosition": 333}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjI2Mjg1", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-415626285", "createdAt": "2020-05-20T18:54:41Z", "commit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1NDo0MVrOGYZnFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1NDo0MVrOGYZnFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzODYxNA==", "bodyText": "@Sara4994  I'm just curious, this remove that ServerErrors component from coverage?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r428238614", "createdAt": "2020-05-20T18:54:41Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Templates/DomainExplorerDashboard/DomainExplorerDashboard.tsx", "diffHunk": "@@ -190,6 +190,7 @@ const DomainExplorerDashboard = props => {\n     return <ServerErrors error={getQuery.error} />;\n   }\n \n+  /* istanbul ignore if */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e6e2ef6d26953da966217c128c1eb3c62bf42b08", "committedDate": "2020-05-20T09:15:21Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "8463bffd5e3407a8cd5e0a658070bd1715ab0539", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8463bffd5e3407a8cd5e0a658070bd1715ab0539", "committedDate": "2020-05-21T16:31:37Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8463bffd5e3407a8cd5e0a658070bd1715ab0539", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8463bffd5e3407a8cd5e0a658070bd1715ab0539", "committedDate": "2020-05-21T16:31:37Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d36cd028d881dd92255f4bfa2c7fc086811d29b6", "committedDate": "2020-05-21T17:01:00Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzU5MTA5", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-416759109", "createdAt": "2020-05-22T09:03:35Z", "commit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowMzozNVrOGZQAug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowMzozNVrOGZQAug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyOTkxNA==", "bodyText": "@Sara4994 remove commented code?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429129914", "createdAt": "2020-05-22T09:03:35Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -221,17 +223,18 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n           }\n         }\n       });\n-\n+      console.log(offsetVal, pageSize)\n       try {\n-        await client\n+        const response = await client\n           .query({\n             query: gql`\n               ${Query.query}\n             `,\n             variables: Query.variables,\n             fetchPolicy: enableCache ? 'cache-first' : 'network-only'\n           })\n-          .then(response => {\n+          \n+          // .then(response => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzU5MjU3", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-416759257", "createdAt": "2020-05-22T09:03:51Z", "commit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowMzo1MVrOGZQBMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowMzo1MVrOGZQBMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMDAzMg==", "bodyText": "@Sara4994 same here :)", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429130032", "createdAt": "2020-05-22T09:03:51Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -252,7 +255,7 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n               setDisplayEmptyState(true);\n               setEnableCache(false);\n             }\n-          });\n+          // });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzYwNTQ5", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-416760549", "createdAt": "2020-05-22T09:06:07Z", "commit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowNjowOFrOGZQFSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowNjowOFrOGZQFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTA4MQ==", "bodyText": "@Sara4994 is needed keep this log as part of testing?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429131081", "createdAt": "2020-05-22T09:06:08Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -221,17 +223,18 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n           }\n         }\n       });\n-\n+      console.log(offsetVal, pageSize)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d36cd028d881dd92255f4bfa2c7fc086811d29b6", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d36cd028d881dd92255f4bfa2c7fc086811d29b6", "committedDate": "2020-05-21T17:01:00Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "1c0310e30bb009973469a7e30be444b4771f8df8", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1c0310e30bb009973469a7e30be444b4771f8df8", "committedDate": "2020-05-22T11:17:16Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c0310e30bb009973469a7e30be444b4771f8df8", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1c0310e30bb009973469a7e30be444b4771f8df8", "committedDate": "2020-05-22T11:17:16Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "c6b2a484225c194870cec11c34e00ad01773fc3b", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c6b2a484225c194870cec11c34e00ad01773fc3b", "committedDate": "2020-05-22T13:13:22Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6b2a484225c194870cec11c34e00ad01773fc3b", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c6b2a484225c194870cec11c34e00ad01773fc3b", "committedDate": "2020-05-22T13:13:22Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "6c0804dcbe6a3284ce4c43d7c3f39beb6c2a6d83", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6c0804dcbe6a3284ce4c43d7c3f39beb6c2a6d83", "committedDate": "2020-05-22T13:28:23Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c0804dcbe6a3284ce4c43d7c3f39beb6c2a6d83", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6c0804dcbe6a3284ce4c43d7c3f39beb6c2a6d83", "committedDate": "2020-05-22T13:28:23Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "3fc4e7abdc82e05999dc93bf02c3538dcfd1f225", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3fc4e7abdc82e05999dc93bf02c3538dcfd1f225", "committedDate": "2020-05-22T17:12:18Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fc4e7abdc82e05999dc93bf02c3538dcfd1f225", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3fc4e7abdc82e05999dc93bf02c3538dcfd1f225", "committedDate": "2020-05-22T17:12:18Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/644de98d4b6d8a43bd94bbe925b44361ba590370", "committedDate": "2020-05-22T17:14:19Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDQzNDg1", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-417443485", "createdAt": "2020-05-25T03:53:05Z", "commit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzo1MzowNVrOGZ0Gyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzo1NTo0MlrOGZ0IRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMTI5MA==", "bodyText": "dupliucated?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429721290", "createdAt": "2020-05-25T03:53:05Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/package.json", "diffHunk": "@@ -36,6 +36,7 @@\n   },\n   \"dependencies\": {\n     \"@kogito-apps/common\": \"1.0.0\",\n+    \"@testing-library/react-hooks\": \"^3.2.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMTM4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"@testing-library/react-hooks\": \"^3.2.1\",\n          \n          \n            \n                \"@testing-library/react-hooks\": \"3.2.1\",", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429721387", "createdAt": "2020-05-25T03:53:41Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/package.json", "diffHunk": "@@ -76,5 +78,9 @@\n       \"yarn run format\",\n       \"yarn run lint\"\n     ]\n+  },\n+  \"devDependencies\": {\n+    \"@testing-library/react-hooks\": \"^3.2.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMTQxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"core-js\": \"^3.6.5\"\n          \n          \n            \n                \"core-js\": \"3.6.5\"", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429721411", "createdAt": "2020-05-25T03:53:50Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/package.json", "diffHunk": "@@ -76,5 +78,9 @@\n       \"yarn run format\",\n       \"yarn run lint\"\n     ]\n+  },\n+  \"devDependencies\": {\n+    \"@testing-library/react-hooks\": \"^3.2.1\",\n+    \"core-js\": \"^3.6.5\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMTY2OQ==", "bodyText": "looks like it ignores the if below, not sure that something we want to skip intentionally?", "url": "https://github.com/kiegroup/kogito-apps/pull/221#discussion_r429721669", "createdAt": "2020-05-25T03:55:42Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Templates/DomainExplorerDashboard/DomainExplorerDashboard.tsx", "diffHunk": "@@ -190,6 +190,7 @@ const DomainExplorerDashboard = props => {\n     return <ServerErrors error={getQuery.error} />;\n   }\n \n+  /* istanbul ignore if */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzODYxNA=="}, "originalCommit": {"oid": "e6e2ef6d26953da966217c128c1eb3c62bf42b08"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "644de98d4b6d8a43bd94bbe925b44361ba590370", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/644de98d4b6d8a43bd94bbe925b44361ba590370", "committedDate": "2020-05-22T17:14:19Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "ef1005b324231c659137cd30a2e0b2747feb2e22", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ef1005b324231c659137cd30a2e0b2747feb2e22", "committedDate": "2020-05-25T05:20:38Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0b1eef51faf9aaefdf7d4f508c7235decac549", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3f0b1eef51faf9aaefdf7d4f508c7235decac549", "committedDate": "2020-05-25T07:20:27Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef1005b324231c659137cd30a2e0b2747feb2e22", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ef1005b324231c659137cd30a2e0b2747feb2e22", "committedDate": "2020-05-25T05:20:38Z", "message": "KOGITO-2154: Unit test cases for Management Console"}, "afterCommit": {"oid": "3f0b1eef51faf9aaefdf7d4f508c7235decac549", "author": {"user": {"login": "Sara4994", "name": null}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3f0b1eef51faf9aaefdf7d4f508c7235decac549", "committedDate": "2020-05-25T07:20:27Z", "message": "KOGITO-2154: Unit test cases for Management Console"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTMyNjAw", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-417932600", "createdAt": "2020-05-26T02:22:04Z", "commit": {"oid": "3f0b1eef51faf9aaefdf7d4f508c7235decac549"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MDY1MjE1", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-418065215", "createdAt": "2020-05-26T08:10:34Z", "commit": {"oid": "3f0b1eef51faf9aaefdf7d4f508c7235decac549"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTc5MTYz", "url": "https://github.com/kiegroup/kogito-apps/pull/221#pullrequestreview-418179163", "createdAt": "2020-05-26T10:45:33Z", "commit": {"oid": "3f0b1eef51faf9aaefdf7d4f508c7235decac549"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 35, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}