{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNzkwNjg2", "number": 512, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOToyMzo1NlrOE0uC6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOToyMzo1NlrOE0uC6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzE1ODE2OnYy", "diffSide": "RIGHT", "path": "persistence-commons/persistence-commons-infinispan/src/main/java/org/kie/kogito/persistence/infinispan/query/InfinispanQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOToyMzo1NlrOHsmFUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo1NTozNlrOHspjew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyMzM0NQ==", "bodyText": "filter can be even complex expression, right? Do all complex expressions (containing OR, AND) come with surrounding parentheses? Looking at getRecursiveString they probably do, could you confirm?", "url": "https://github.com/kiegroup/kogito-apps/pull/512#discussion_r516523345", "createdAt": "2020-11-03T09:23:56Z", "author": {"login": "jstastny-cz"}, "path": "persistence-commons/persistence-commons-infinispan/src/main/java/org/kie/kogito/persistence/infinispan/query/InfinispanQuery.java", "diffHunk": "@@ -138,6 +138,8 @@ protected InfinispanQuery(QueryFactory qf, String rootType) {\n                     return getRecursiveString(filter, OR);\n                 case AND:\n                     return getRecursiveString(filter, AND);\n+                case NOT:\n+                    return format(\"not %s\", filterStringFunction().apply((AttributeFilter<?>) filter.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc61312bf0f2e278e81e2f0677b17d34719fd5e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3OTg5OA==", "bodyText": "@jstastny-cz at this point the support for not operator is for single filter, not complex ones, that need might be something we can revisit in the future if there are use cases for that. For now, I went with a more basic approach that covers the use case needed by the task console.", "url": "https://github.com/kiegroup/kogito-apps/pull/512#discussion_r516579898", "createdAt": "2020-11-03T10:55:01Z", "author": {"login": "cristianonicolai"}, "path": "persistence-commons/persistence-commons-infinispan/src/main/java/org/kie/kogito/persistence/infinispan/query/InfinispanQuery.java", "diffHunk": "@@ -138,6 +138,8 @@ protected InfinispanQuery(QueryFactory qf, String rootType) {\n                     return getRecursiveString(filter, OR);\n                 case AND:\n                     return getRecursiveString(filter, AND);\n+                case NOT:\n+                    return format(\"not %s\", filterStringFunction().apply((AttributeFilter<?>) filter.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyMzM0NQ=="}, "originalCommit": {"oid": "6dc61312bf0f2e278e81e2f0677b17d34719fd5e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4MDIxOQ==", "bodyText": "I guess that's fine, if you need grouping conditions inside of a not, you may use an and/or that will add the parenthesis..", "url": "https://github.com/kiegroup/kogito-apps/pull/512#discussion_r516580219", "createdAt": "2020-11-03T10:55:36Z", "author": {"login": "pefernan"}, "path": "persistence-commons/persistence-commons-infinispan/src/main/java/org/kie/kogito/persistence/infinispan/query/InfinispanQuery.java", "diffHunk": "@@ -138,6 +138,8 @@ protected InfinispanQuery(QueryFactory qf, String rootType) {\n                     return getRecursiveString(filter, OR);\n                 case AND:\n                     return getRecursiveString(filter, AND);\n+                case NOT:\n+                    return format(\"not %s\", filterStringFunction().apply((AttributeFilter<?>) filter.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUyMzM0NQ=="}, "originalCommit": {"oid": "6dc61312bf0f2e278e81e2f0677b17d34719fd5e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1175, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}