{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NDMwNTQx", "number": 464, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo1Mjo1MlrOElC6aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoxNzoyMFrOEqndrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjgwNDkxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/environment/auth/tests/mocks/KogitoAppContextTestingUtils.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjo1Mjo1MlrOHUUyqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjoxMTowOFrOHXXbsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NDIxOA==", "bodyText": "@jstastny-cz I made this class as a helper to simplify the tests that require the KogitoAppContext. I added it inside of the 'mocks' folder because I knew it was making sonarcloud to skip it...", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r491074218", "createdAt": "2020-09-18T16:52:52Z", "author": {"login": "pefernan"}, "path": "ui-packages/packages/common/src/environment/auth/tests/mocks/KogitoAppContextTestingUtils.ts", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as Keycloak from '../../../../utils/KeycloakClient';\n+import * as KogitoAppContext from '../../../context/KogitoAppContext';\n+import { TestUserSystemImpl } from '../../TestUserSystem';\n+\n+export const testIsAuthEnabledMock = jest.spyOn(Keycloak, 'isAuthEnabled');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "761cbd18af32af49bf50010b5fc4f39e09d0b7ea"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MzIxNg==", "bodyText": "imo the cleaner solution would be to new folder like utils and exclude it from the sonar reporting too.", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494263216", "createdAt": "2020-09-24T12:11:08Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/environment/auth/tests/mocks/KogitoAppContextTestingUtils.ts", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as Keycloak from '../../../../utils/KeycloakClient';\n+import * as KogitoAppContext from '../../../context/KogitoAppContext';\n+import { TestUserSystemImpl } from '../../TestUserSystem';\n+\n+export const testIsAuthEnabledMock = jest.spyOn(Keycloak, 'isAuthEnabled');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3NDIxOA=="}, "originalCommit": {"oid": "761cbd18af32af49bf50010b5fc4f39e09d0b7ea"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzM3Mzk3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Atoms/AddTestUser/AddTestUser.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo1NzoxOVrOHXW9LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTo1NzoxOVrOHXW9LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1NTQwNQ==", "bodyText": "These attributes need to be set at top-level element in the custom component. Here it is the Modal, so please move it there and adapt the type attribute to reflect that.", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494255405", "createdAt": "2020-09-24T11:57:19Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Atoms/AddTestUser/AddTestUser.tsx", "diffHunk": "@@ -0,0 +1,242 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React, { useState } from 'react';\n+import { componentOuiaProps, OUIAProps } from '../../../utils/OuiaUtils';\n+import {\n+  ActionGroup,\n+  Alert,\n+  Button,\n+  Checkbox,\n+  Form,\n+  FormGroup,\n+  Modal,\n+  ModalVariant,\n+  Stack,\n+  StackItem,\n+  Text,\n+  TextContent,\n+  TextInput,\n+  TextVariants\n+} from '@patternfly/react-core';\n+import {\n+  AppContext,\n+  EnvironmentMode,\n+  useKogitoAppContext\n+} from '../../../environment/context/KogitoAppContext';\n+import {\n+  TestUserManager,\n+  TestUserSystem\n+} from '../../../environment/auth/Auth';\n+\n+interface IOwnProps {\n+  isOpen: boolean;\n+  toggleModal: () => void;\n+}\n+\n+const AddTestUser: React.FC<IOwnProps & OUIAProps> = ({\n+  isOpen,\n+  toggleModal,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const context: AppContext = useKogitoAppContext();\n+\n+  const [userIdValidated, setUserIdValidated] = useState<any>('default');\n+  const [userIdError, setUserIdError] = useState<string>();\n+\n+  const [userId, setUserId] = useState<string>();\n+\n+  const [groupsValidated, setGroupsValidated] = useState<any>('default');\n+  const [groupsError, setGroupsError] = useState<string>();\n+  const [groups, setGroups] = useState<string>();\n+  const [login, setLogin] = useState<boolean>(true);\n+\n+  const validateUserId = (newUserId: string): boolean => {\n+    setUserId(newUserId);\n+\n+    if (!newUserId || !newUserId.trim()) {\n+      setUserIdValidated('error');\n+      setUserIdError('User Id cannot be empty.');\n+      return false;\n+    }\n+\n+    const testUserSystem: TestUserSystem = context.userSystem as TestUserSystem;\n+    const userManager: TestUserManager = testUserSystem.getUserManager();\n+    const user = userManager.getUser(newUserId);\n+\n+    if (user) {\n+      if (userManager.systemUsers().includes(newUserId)) {\n+        setUserIdValidated('error');\n+        setUserIdError(\n+          `Already exists a system user identified by '${newUserId}'. Please choose another user id.`\n+        );\n+        return false;\n+      }\n+      setUserIdValidated('warning');\n+      setUserIdError(\n+        `Already exists a user identified by '${newUserId}'. Press 'Add' to replace it.`\n+      );\n+      return true;\n+    }\n+\n+    setUserIdValidated('success');\n+    setUserIdError(null);\n+    return true;\n+  };\n+\n+  const checkEmptyArray = (newGroups: string): boolean => {\n+    return (\n+      newGroups.split(',').filter(group => group && group.trim().length > 0)\n+        .length > 0\n+    );\n+  };\n+\n+  const validateGroups = (newGroups: string): boolean => {\n+    setGroups(newGroups);\n+\n+    if (!newGroups || !newGroups.trim() || !checkEmptyArray(newGroups)) {\n+      setGroupsValidated('error');\n+      setGroupsError('User groups cannot be empty.');\n+      return false;\n+    }\n+    setGroupsValidated('success');\n+    setGroupsError(null);\n+    return true;\n+  };\n+\n+  const addUser = () => {\n+    const isUserIdValidated = validateUserId(userId);\n+    const areGroupsValidated = validateGroups(groups);\n+    if (isUserIdValidated && areGroupsValidated) {\n+      const testUserSystem: TestUserSystem = context.userSystem as TestUserSystem;\n+\n+      const userGroups = groups\n+        .split(',')\n+        .map(group => group.trim())\n+        .filter(group => group.length > 0);\n+\n+      testUserSystem.getUserManager().addUser(userId, userGroups);\n+\n+      close();\n+\n+      if (login) {\n+        testUserSystem.su(userId);\n+      }\n+    }\n+  };\n+\n+  const close = () => {\n+    toggleModal();\n+    setUserId(null);\n+    setUserIdValidated('default');\n+    setUserIdError(null);\n+    setGroups(null);\n+    setGroupsValidated('default');\n+    setGroupsError(null);\n+    setLogin(true);\n+  };\n+\n+  if (context.environment.mode !== EnvironmentMode.TEST || !isOpen) {\n+    return null;\n+  }\n+\n+  return (\n+    <Modal\n+      aria-label=\"add-test-user-modal\"\n+      title=\"Add new test user\"\n+      variant={ModalVariant.small}\n+      onClose={close}\n+      isOpen={isOpen}\n+    >\n+      <Stack hasGutter>\n+        <StackItem>\n+          <Alert\n+            title=\"Adds a new user to the user system\"\n+            variant=\"info\"\n+            isInline\n+          >\n+            <TextContent>\n+              <Text component={TextVariants.p}>\n+                Temporarily adds a new user to the user system (only for testing\n+                purposes). Newly added users will be stored in-memory.\n+              </Text>\n+              <Text component={TextVariants.p}>\n+                Refresh the app to clear the test users and leave the user\n+                system in his original state.\n+              </Text>\n+            </TextContent>\n+          </Alert>\n+        </StackItem>\n+        <StackItem isFilled>\n+          <Form {...componentOuiaProps(ouiaId, 'add-test-user-form', ouiaSafe)}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzM4NjM2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowMDo1MlrOHXXEtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowMDo1MlrOHXXEtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1NzMzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              const handleaddUserModalToggle = () => {\n          \n          \n            \n              const handleAddUserModalToggle = () => {", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494257335", "createdAt": "2020-09-24T12:00:52Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "diffHunk": "@@ -1,32 +1,61 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n import React, { useState } from 'react';\n import {\n+  Avatar,\n   Dropdown,\n+  DropdownItem,\n+  DropdownSeparator,\n   DropdownToggle,\n   Toolbar,\n   ToolbarGroup,\n-  ToolbarItem,\n-  DropdownItem,\n-  DropdownSeparator\n+  ToolbarItem\n } from '@patternfly/react-core';\n import accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\n import { css } from '@patternfly/react-styles';\n import AboutModalBox from '../AboutModalBox/AboutModalBox';\n-import {\n-  getUserName,\n-  handleLogout,\n-  isAuthEnabled\n-} from '../../../utils/KeycloakClient';\n import { componentOuiaProps, OUIAProps } from '../../../utils/OuiaUtils';\n+import userImage from '../../../static/avatar.svg';\n+import {\n+  AppContext,\n+  isContextInTestMode,\n+  useKogitoAppContext\n+} from '../../../environment/context/KogitoAppContext';\n+import PageToolbarUsersDropdownGroup from '../PageToolbarUsersDropdownGroup/PageToolbarUsersDropdownGroup';\n+import AddTestUser from '../../Atoms/AddTestUser/AddTestUser';\n \n const PageToolbar: React.FunctionComponent<OUIAProps> = ({\n   ouiaId,\n   ouiaSafe\n }) => {\n-  const [isDropdownOpen, setDropdownOpen] = useState(false);\n-  const [modalToggle, setmodalToggle] = useState(false);\n+  const [isDropdownOpen, setDropdownOpen] = useState<boolean>(false);\n+  const [modalToggle, setmodalToggle] = useState<boolean>(false);\n+  const [addUserToggle, setAddUserToggle] = useState<boolean>(false);\n+\n+  const context: AppContext = useKogitoAppContext();\n \n-  const handleModalToggle = () => {\n-    setmodalToggle(modalToggle ? false : true);\n+  const testMode = isContextInTestMode(context);\n+\n+  const handleAboutModalToggle = () => {\n+    setmodalToggle(!modalToggle);\n+  };\n+\n+  const handleaddUserModalToggle = () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzM4OTQyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowMTo0OFrOHXXGtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODowNzo1M1rOHc6r0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1Nzg0Ng==", "bodyText": "I don't think I get the purpose - why is this called this way?", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494257846", "createdAt": "2020-09-24T12:01:48Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "diffHunk": "@@ -36,26 +65,55 @@ const PageToolbar: React.FunctionComponent<OUIAProps> = ({\n   const onDropdownSelect = () => {\n     setDropdownOpen(!isDropdownOpen);\n   };\n-  const userDropdownItems = [\n-    <DropdownItem key={1} onClick={handleModalToggle}>\n+\n+  const getUserName = () => {\n+    return context && context.getCurrentUser()\n+      ? context.getCurrentUser().id\n+      : 'Anonymous';\n+  };\n+\n+  const handleLogout = () => {\n+    if (context.userSystem) {\n+      context.userSystem.logout();\n+    }\n+  };\n+\n+  const userDropdownItems: React.ReactElement[] = [];\n+\n+  userDropdownItems.push(\n+    <DropdownItem\n+      key={userDropdownItems.length}\n+      onClick={handleAboutModalToggle}\n+    >\n       About\n     </DropdownItem>\n-  ];\n+  );\n \n-  if (isAuthEnabled()) {\n+  if (testMode) {\n     userDropdownItems.push(\n-      <DropdownSeparator key={2} />,\n-      <DropdownItem component=\"button\" key={3} onClick={handleLogout}>\n-        Log out\n-      </DropdownItem>\n+      <PageToolbarUsersDropdownGroup\n+        key={userDropdownItems.length}\n+        toggleAddUsersModal={() => setAddUserToggle(true)}\n+      />\n     );\n   }\n \n+  userDropdownItems.push(<DropdownSeparator key={userDropdownItems.length} />);\n+  userDropdownItems.push(\n+    <DropdownItem key={userDropdownItems.length} onClick={handleLogout}>\n+      Log out\n+    </DropdownItem>\n+  );\n+\n   return (\n     <React.Fragment>\n       <AboutModalBox\n         isOpenProp={modalToggle}\n-        handleModalToggleProp={handleModalToggle}\n+        handleModalToggleProp={handleAboutModalToggle}\n+      />\n+      <AddTestUser", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4MzY2Ng==", "bodyText": "used for testing in dev mode, when auth is configured this does not appear.", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r500083666", "createdAt": "2020-10-06T08:07:53Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "diffHunk": "@@ -36,26 +65,55 @@ const PageToolbar: React.FunctionComponent<OUIAProps> = ({\n   const onDropdownSelect = () => {\n     setDropdownOpen(!isDropdownOpen);\n   };\n-  const userDropdownItems = [\n-    <DropdownItem key={1} onClick={handleModalToggle}>\n+\n+  const getUserName = () => {\n+    return context && context.getCurrentUser()\n+      ? context.getCurrentUser().id\n+      : 'Anonymous';\n+  };\n+\n+  const handleLogout = () => {\n+    if (context.userSystem) {\n+      context.userSystem.logout();\n+    }\n+  };\n+\n+  const userDropdownItems: React.ReactElement[] = [];\n+\n+  userDropdownItems.push(\n+    <DropdownItem\n+      key={userDropdownItems.length}\n+      onClick={handleAboutModalToggle}\n+    >\n       About\n     </DropdownItem>\n-  ];\n+  );\n \n-  if (isAuthEnabled()) {\n+  if (testMode) {\n     userDropdownItems.push(\n-      <DropdownSeparator key={2} />,\n-      <DropdownItem component=\"button\" key={3} onClick={handleLogout}>\n-        Log out\n-      </DropdownItem>\n+      <PageToolbarUsersDropdownGroup\n+        key={userDropdownItems.length}\n+        toggleAddUsersModal={() => setAddUserToggle(true)}\n+      />\n     );\n   }\n \n+  userDropdownItems.push(<DropdownSeparator key={userDropdownItems.length} />);\n+  userDropdownItems.push(\n+    <DropdownItem key={userDropdownItems.length} onClick={handleLogout}>\n+      Log out\n+    </DropdownItem>\n+  );\n+\n   return (\n     <React.Fragment>\n       <AboutModalBox\n         isOpenProp={modalToggle}\n-        handleModalToggleProp={handleModalToggle}\n+        handleModalToggleProp={handleAboutModalToggle}\n+      />\n+      <AddTestUser", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1Nzg0Ng=="}, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzQwNzcxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowNjozNlrOHXXRxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo1MjowMlrOHY2fMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MDY3Ng==", "bodyText": "I would prefer for the PageToolbarUsersDropdownGroup to render just as the DropdownGroup  and add the separator to the userDropdownItems here dynamically (not as part of the component render).", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494260676", "createdAt": "2020-09-24T12:06:36Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "diffHunk": "@@ -36,26 +65,55 @@ const PageToolbar: React.FunctionComponent<OUIAProps> = ({\n   const onDropdownSelect = () => {\n     setDropdownOpen(!isDropdownOpen);\n   };\n-  const userDropdownItems = [\n-    <DropdownItem key={1} onClick={handleModalToggle}>\n+\n+  const getUserName = () => {\n+    return context && context.getCurrentUser()\n+      ? context.getCurrentUser().id\n+      : 'Anonymous';\n+  };\n+\n+  const handleLogout = () => {\n+    if (context.userSystem) {\n+      context.userSystem.logout();\n+    }\n+  };\n+\n+  const userDropdownItems: React.ReactElement[] = [];\n+\n+  userDropdownItems.push(\n+    <DropdownItem\n+      key={userDropdownItems.length}\n+      onClick={handleAboutModalToggle}\n+    >\n       About\n     </DropdownItem>\n-  ];\n+  );\n \n-  if (isAuthEnabled()) {\n+  if (testMode) {\n     userDropdownItems.push(\n-      <DropdownSeparator key={2} />,\n-      <DropdownItem component=\"button\" key={3} onClick={handleLogout}>\n-        Log out\n-      </DropdownItem>\n+      <PageToolbarUsersDropdownGroup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgyMDU5Mw==", "bodyText": "+1", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r495820593", "createdAt": "2020-09-28T09:52:02Z", "author": {"login": "pefernan"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbar/PageToolbar.tsx", "diffHunk": "@@ -36,26 +65,55 @@ const PageToolbar: React.FunctionComponent<OUIAProps> = ({\n   const onDropdownSelect = () => {\n     setDropdownOpen(!isDropdownOpen);\n   };\n-  const userDropdownItems = [\n-    <DropdownItem key={1} onClick={handleModalToggle}>\n+\n+  const getUserName = () => {\n+    return context && context.getCurrentUser()\n+      ? context.getCurrentUser().id\n+      : 'Anonymous';\n+  };\n+\n+  const handleLogout = () => {\n+    if (context.userSystem) {\n+      context.userSystem.logout();\n+    }\n+  };\n+\n+  const userDropdownItems: React.ReactElement[] = [];\n+\n+  userDropdownItems.push(\n+    <DropdownItem\n+      key={userDropdownItems.length}\n+      onClick={handleAboutModalToggle}\n+    >\n       About\n     </DropdownItem>\n-  ];\n+  );\n \n-  if (isAuthEnabled()) {\n+  if (testMode) {\n     userDropdownItems.push(\n-      <DropdownSeparator key={2} />,\n-      <DropdownItem component=\"button\" key={3} onClick={handleLogout}>\n-        Log out\n-      </DropdownItem>\n+      <PageToolbarUsersDropdownGroup", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MDY3Ng=="}, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MzQxMDk5OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Molecules/PageToolbarUsersDropdownGroup/PageToolbarUsersDropdownGroup.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowNzoyM1rOHXXTkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjowNzoyM1rOHXXTkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI2MTEzNg==", "bodyText": "OUIA compliance - I'd suggest to remove the fragment and move DropdownSeparator to higher level so that this component renders just as DropdownGroup", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r494261136", "createdAt": "2020-09-24T12:07:23Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/components/Molecules/PageToolbarUsersDropdownGroup/PageToolbarUsersDropdownGroup.tsx", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React from 'react';\n+import {\n+  AppContext,\n+  isContextInTestMode,\n+  useKogitoAppContext\n+} from '../../../environment/context/KogitoAppContext';\n+import { TestUserSystem } from '../../../environment/auth/Auth';\n+import {\n+  DropdownGroup,\n+  DropdownItem,\n+  DropdownSeparator,\n+  Tooltip\n+} from '@patternfly/react-core';\n+\n+interface IOwnProps {\n+  toggleAddUsersModal: () => void;\n+}\n+\n+const PageToolbarUsersDropdownGroup: React.FC<IOwnProps> = ({\n+  toggleAddUsersModal\n+}) => {\n+  const context: AppContext = useKogitoAppContext();\n+\n+  if (!isContextInTestMode(context)) {\n+    return null;\n+  }\n+  const testUserSystem: TestUserSystem = context.userSystem as TestUserSystem;\n+\n+  const users = testUserSystem.getUserManager().listAllUsers();\n+\n+  return (\n+    <>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430cb92f46087c654727ff6bcd2917b9b6b3a616"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzYxOTYyOnYy", "diffSide": "RIGHT", "path": "task-console/src/main/java/org/kie/kogito/task/console/VertxRouter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyMDo1NVrOHcYkXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyMDo1NVrOHcYkXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDcwMA==", "bodyText": "@pefernan My mistake, The property we should use to enable disable security must be \"quarkus.oidc.tenant-enabled\" instead of \"quarkus.oidc.enabled\". Regarding is the used to enable/disable security at runtime. This change have to be applied to management console too.", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r499524700", "createdAt": "2020-10-05T11:20:55Z", "author": {"login": "nmirasch"}, "path": "task-console/src/main/java/org/kie/kogito/task/console/VertxRouter.java", "diffHunk": "@@ -41,6 +41,10 @@\n     @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n     String dataIndexHttpURL;\n \n+    @Inject\n+    @ConfigProperty(name = \"quarkus.oidc.enabled\", defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "957e84fdbe0c244d80e9d149cfe68a43a6295669"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTIyMjIzOnYy", "diffSide": "RIGHT", "path": "ui-packages/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoxNzoyMFrOHc7B-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoxNzoyMFrOHc7B-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4OTMzOA==", "bodyText": "This would exclude all the utils, which is not desirable imo (as there are ), I think **/tests/utils/** could be better fitting our needs.", "url": "https://github.com/kiegroup/kogito-apps/pull/464#discussion_r500089338", "createdAt": "2020-10-06T08:17:20Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/pom.xml", "diffHunk": "@@ -22,7 +22,7 @@\n       ${path.to.packages}/task-console/src,\n       ${path.to.packages}/trusty/src\n     </sonar.sources>\n-    <sonar.exclusions>**/__mocks__/**,**/mocks/**,**/*.stories.tsx</sonar.exclusions>\n+    <sonar.exclusions>**/__mocks__/**,**/mocks/**,**/utils/**,**/*.stories.tsx</sonar.exclusions>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d180bee244001be4e3c849c55337badd41717803"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 725, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}