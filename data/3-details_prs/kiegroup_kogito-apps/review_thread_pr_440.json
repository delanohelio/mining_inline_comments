{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTYyOTMy", "number": 440, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDowOVrOEgY12g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0Nzo0M1rOEhH6yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzk2ODkwOnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDowOVrOHNOF5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0OTozN1rOHNOSPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDQyMQ==", "bodyText": "Can you please move noOfRetries == 0 to a local variable to improve readability?\nBtw are you sure of this check? I think it should be == 1.\nThe if condition for the recursion is noOfRetries > 0 so the only reason why you can get a 0 here is because this is the init value and it has probably no sense :)", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624421", "createdAt": "2020-09-04T13:44:09Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -149,7 +149,7 @@ public int getNoOfRetries() {\n         return model.predictAsync(perturbedInputs)\n                 .thenCompose(predictionOutputs -> {\n                     try {\n-                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs);\n+                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, noOfRetries == 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzU4Mw==", "bodyText": "sure, of course you're right, the check is strict when you can do more retries, so boolean strict = noOfRetries > 0", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627583", "createdAt": "2020-09-04T13:49:37Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -149,7 +149,7 @@ public int getNoOfRetries() {\n         return model.predictAsync(perturbedInputs)\n                 .thenCompose(predictionOutputs -> {\n                     try {\n-                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs);\n+                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, noOfRetries == 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDQyMQ=="}, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzk3MDE0OnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDoyOFrOHNOGnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0OTo0N1rOHNOSng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDYwNQ==", "bodyText": "New line\nCan you please add a javadoc?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624605", "createdAt": "2020-09-04T13:44:28Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -163,12 +163,12 @@ public int getNoOfRetries() {\n     private List<LimeInputs> getLimeInputs(List<Feature> linearizedTargetInputFeatures,\n                                            List<Output> actualOutputs,\n                                            List<PredictionInput> perturbedInputs,\n-                                           List<PredictionOutput> predictionOutputs) {\n+                                           List<PredictionOutput> predictionOutputs, boolean strict) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzY3OA==", "bodyText": "ok", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627678", "createdAt": "2020-09-04T13:49:47Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -163,12 +163,12 @@ public int getNoOfRetries() {\n     private List<LimeInputs> getLimeInputs(List<Feature> linearizedTargetInputFeatures,\n                                            List<Output> actualOutputs,\n                                            List<PredictionInput> perturbedInputs,\n-                                           List<PredictionOutput> predictionOutputs) {\n+                                           List<PredictionOutput> predictionOutputs, boolean strict) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDYwNQ=="}, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzk3MTEwOnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDo0MVrOHNOHLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0OTo1NlrOHNOS-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDc1MQ==", "bodyText": "New line", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624751", "createdAt": "2020-09-04T13:44:41Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -221,7 +221,7 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n                                      List<PredictionOutput> perturbedOutputs,\n                                      List<Feature> linearizedTargetInputFeatures,\n                                      int o,\n-                                     Output currentOutput) {\n+                                     Output currentOutput, boolean strict) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzc2OA==", "bodyText": "ok", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627768", "createdAt": "2020-09-04T13:49:56Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -221,7 +221,7 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n                                      List<PredictionOutput> perturbedOutputs,\n                                      List<Feature> linearizedTargetInputFeatures,\n                                      int o,\n-                                     Output currentOutput) {\n+                                     Output currentOutput, boolean strict) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDc1MQ=="}, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzk3NDQxOnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NTozMFrOHNOJIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo1MDowNlrOHNOTbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTI0OQ==", "bodyText": "Can you add a test?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483625249", "createdAt": "2020-09-04T13:45:30Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +232,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNzg4Ng==", "bodyText": "ok", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483627886", "createdAt": "2020-09-04T13:50:06Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +232,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTI0OQ=="}, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY2Nzk1OnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0Mzo0MVrOHOQu9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODoxMToxNFrOHORscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjI3Ng==", "bodyText": "why remove public?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484716276", "createdAt": "2020-09-08T07:43:41Z", "author": {"login": "r00ta"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java", "diffHunk": "@@ -21,11 +21,11 @@\n import org.kie.kogito.explainability.model.Output;\n \n /**\n- * Exception for when a dataset encoded for LIME is not (linearly) separable.\n+ * Exception thrown when a dataset encoded for LIME is not (linearly) separable.\n  */\n-public class DatasetNotSeparableException extends LocalExplanationException {\n+class DatasetNotSeparableException extends LocalExplanationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMjAxNw==", "bodyText": "because now this exception is never \"reaching\" the end user / consumer of LimeExplainer (it is only used as part of the retry mechanism); but we can keep it public in case we decide to change the behaviour again in the future.", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484732017", "createdAt": "2020-09-08T08:11:14Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java", "diffHunk": "@@ -21,11 +21,11 @@\n import org.kie.kogito.explainability.model.Output;\n \n /**\n- * Exception for when a dataset encoded for LIME is not (linearly) separable.\n+ * Exception thrown when a dataset encoded for LIME is not (linearly) separable.\n  */\n-public class DatasetNotSeparableException extends LocalExplanationException {\n+class DatasetNotSeparableException extends LocalExplanationException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjI3Ng=="}, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY4MjAyOnYy", "diffSide": "RIGHT", "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0Nzo0M1rOHOQ3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODoxMjoyMFrOHORvGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODQ3Mg==", "bodyText": "return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484718472", "createdAt": "2020-09-08T07:47:43Z", "author": {"login": "r00ta"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +246,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczMjY5Ng==", "bodyText": "sure", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484732696", "createdAt": "2020-09-08T08:12:20Z", "author": {"login": "tteofili"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +246,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODQ3Mg=="}, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 692, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}