{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzUwMTE4", "number": 299, "title": "KOGITO-2422 - Add support for Milestones in Data Index", "bodyText": "Many thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-06-29T11:45:24Z", "url": "https://github.com/kiegroup/kogito-apps/pull/299", "merged": true, "mergeCommit": {"oid": "ca0856117f9082a7d840e4472f681894ce6ac588"}, "closed": true, "closedAt": "2020-07-02T12:33:53Z", "author": {"login": "cristianonicolai"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwAkl-gBqjM0OTI1NTk2MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw9w2mgFqTQ0MTYxNzYyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1edad8e9323fcb29b6bb61b9340629628aa1c734", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1edad8e9323fcb29b6bb61b9340629628aa1c734", "committedDate": "2020-06-29T11:44:24Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "1d328ee4c391b7da93575a6086bf2c159928ea48", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1d328ee4c391b7da93575a6086bf2c159928ea48", "committedDate": "2020-06-29T12:54:07Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d328ee4c391b7da93575a6086bf2c159928ea48", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1d328ee4c391b7da93575a6086bf2c159928ea48", "committedDate": "2020-06-29T12:54:07Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "65b2229b1e814d899887f63dfdbff4f96fb28b26", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/65b2229b1e814d899887f63dfdbff4f96fb28b26", "committedDate": "2020-06-29T12:57:00Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65b2229b1e814d899887f63dfdbff4f96fb28b26", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/65b2229b1e814d899887f63dfdbff4f96fb28b26", "committedDate": "2020-06-29T12:57:00Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "4f0a447cd724d56216a3f13008fd3e7b5eaf7863", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/4f0a447cd724d56216a3f13008fd3e7b5eaf7863", "committedDate": "2020-06-29T12:58:43Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f0a447cd724d56216a3f13008fd3e7b5eaf7863", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/4f0a447cd724d56216a3f13008fd3e7b5eaf7863", "committedDate": "2020-06-29T12:58:43Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "3e5d441998d7d77c6ce4da30c90797f38fae05a7", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3e5d441998d7d77c6ce4da30c90797f38fae05a7", "committedDate": "2020-06-29T16:06:00Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e5d441998d7d77c6ce4da30c90797f38fae05a7", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3e5d441998d7d77c6ce4da30c90797f38fae05a7", "committedDate": "2020-06-29T16:06:00Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a88a21a45092ceff9bcfd482c2b69c51573842ca", "committedDate": "2020-06-30T04:41:04Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTk1Nzcw", "url": "https://github.com/kiegroup/kogito-apps/pull/299#pullrequestreview-440595770", "createdAt": "2020-07-01T07:01:12Z", "commit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwODY4NjI2", "url": "https://github.com/kiegroup/kogito-apps/pull/299#pullrequestreview-440868626", "createdAt": "2020-07-01T13:28:20Z", "commit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzoyODoyMFrOGrl5bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo0NzowMFrOGrmohw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2Mjg2MA==", "bodyText": "can we make it fluent?", "url": "https://github.com/kiegroup/kogito-apps/pull/299#discussion_r448362860", "createdAt": "2020-07-01T13:28:20Z", "author": {"login": "ruromero"}, "path": "data-index/data-index-storage/data-index-storage-api/src/main/java/org/kie/kogito/index/model/Milestone.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.index.model;\n+\n+public class Milestone {\n+\n+    private String id;\n+    private String name;\n+    private String status;\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM3NDkxOQ==", "bodyText": "Please use constants, will allow a better maintenance.", "url": "https://github.com/kiegroup/kogito-apps/pull/299#discussion_r448374919", "createdAt": "2020-07-01T13:47:00Z", "author": {"login": "ruromero"}, "path": "data-index/data-index-storage/data-index-storage-infinispan/src/test/java/org/kie/kogito/index/infinispan/protostream/MilestoneMarshallerTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.kogito.index.infinispan.protostream;\n+\n+import java.io.IOException;\n+\n+import org.infinispan.protostream.MessageMarshaller;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.index.model.Milestone;\n+import org.mockito.InOrder;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.inOrder;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class MilestoneMarshallerTest {\n+\n+    @Test\n+    public void testReadFrom() throws IOException {\n+        MessageMarshaller.ProtoStreamReader reader = mock(MessageMarshaller.ProtoStreamReader.class);\n+        when(reader.readString(\"id\")).thenReturn(\"id\");\n+        when(reader.readString(\"name\")).thenReturn(\"name\");\n+        when(reader.readString(\"status\")).thenReturn(\"status\");\n+\n+        Milestone milestone = new MilestoneMarshaller(null).readFrom(reader);\n+\n+        assertThat(milestone)\n+                .isNotNull()\n+                .hasFieldOrPropertyWithValue(\"id\", \"id\")\n+                .hasFieldOrPropertyWithValue(\"name\", \"name\")\n+                .hasFieldOrPropertyWithValue(\"status\", \"status\");\n+\n+        InOrder inOrder = inOrder(reader);\n+        inOrder.verify(reader).readString(\"id\");\n+        inOrder.verify(reader).readString(\"name\");\n+        inOrder.verify(reader).readString(\"status\");\n+    }\n+\n+    @Test\n+    public void testWriteTo() throws IOException {\n+        Milestone milestone = new Milestone();\n+        milestone.setId(\"id\");\n+        milestone.setName(\"name\");\n+        milestone.setStatus(\"status\");\n+\n+        MessageMarshaller.ProtoStreamWriter writer = mock(MessageMarshaller.ProtoStreamWriter.class);\n+\n+        new MilestoneMarshaller(null).writeTo(writer, milestone);\n+\n+        InOrder inOrder = inOrder(writer);\n+        inOrder.verify(writer).writeString(\"id\", \"id\");\n+        inOrder.verify(writer).writeString(\"name\", \"name\");\n+        inOrder.verify(writer).writeString(\"status\", \"status\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42501105b6a80fb527d1f3bf691e263f117f48ca", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/42501105b6a80fb527d1f3bf691e263f117f48ca", "committedDate": "2020-07-01T14:29:50Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a88a21a45092ceff9bcfd482c2b69c51573842ca", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a88a21a45092ceff9bcfd482c2b69c51573842ca", "committedDate": "2020-06-30T04:41:04Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}, "afterCommit": {"oid": "42501105b6a80fb527d1f3bf691e263f117f48ca", "author": {"user": {"login": "cristianonicolai", "name": "Cristiano Nicolai"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/42501105b6a80fb527d1f3bf691e263f117f48ca", "committedDate": "2020-07-01T14:29:50Z", "message": "KOGITO-2422 - Add support for Milestones in Data Index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE3NjI4", "url": "https://github.com/kiegroup/kogito-apps/pull/299#pullrequestreview-441617628", "createdAt": "2020-07-02T12:12:01Z", "commit": {"oid": "42501105b6a80fb527d1f3bf691e263f117f48ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4859, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}