{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMzQ5OTI3", "number": 262, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1Nzo1N1rOEEmadw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo1NToxN1rOEFwR9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjU5MTI3OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Molecules/ProcessDescriptor/ProcessDescriptor.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1Nzo1N1rOGiUlxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo0MjoxNlrOGiX8GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw==", "bodyText": "@Sara4994 process descriptor should only be used for when we are listing processes, we shouldnt change this compoment to try to adpat to display task related data.\nI think what we discuss was to try to make the table more generic, see #242 (comment)", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438642117", "createdAt": "2020-06-11T08:57:57Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/ProcessDescriptor/ProcessDescriptor.tsx", "diffHunk": "@@ -6,16 +6,11 @@ import {\n   Text,\n   TextVariants\n } from '@patternfly/react-core';\n-import { GraphQL } from '../../../graphql/types';\n-import ProcessInstance = GraphQL.ProcessInstance;\n \n interface IOwnProps {\n-  processInstanceData: Pick<\n-    ProcessInstance,\n-    'id' | 'processName' | 'businessKey'\n-  >;\n+  instanceData: any;\n }\n-const ProcessDescriptor: React.FC<IOwnProps> = ({ processInstanceData }) => {\n+const ProcessDescriptor: React.FC<IOwnProps> = ({ instanceData }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MDU5MQ==", "bodyText": "@cristianonicolai ok i will revert those changes on ProcessDescriptor.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438660591", "createdAt": "2020-06-11T09:31:20Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/ProcessDescriptor/ProcessDescriptor.tsx", "diffHunk": "@@ -6,16 +6,11 @@ import {\n   Text,\n   TextVariants\n } from '@patternfly/react-core';\n-import { GraphQL } from '../../../graphql/types';\n-import ProcessInstance = GraphQL.ProcessInstance;\n \n interface IOwnProps {\n-  processInstanceData: Pick<\n-    ProcessInstance,\n-    'id' | 'processName' | 'businessKey'\n-  >;\n+  instanceData: any;\n }\n-const ProcessDescriptor: React.FC<IOwnProps> = ({ processInstanceData }) => {\n+const ProcessDescriptor: React.FC<IOwnProps> = ({ instanceData }) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Njk4NQ==", "bodyText": "this is done", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438696985", "createdAt": "2020-06-11T10:42:16Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/ProcessDescriptor/ProcessDescriptor.tsx", "diffHunk": "@@ -6,16 +6,11 @@ import {\n   Text,\n   TextVariants\n } from '@patternfly/react-core';\n-import { GraphQL } from '../../../graphql/types';\n-import ProcessInstance = GraphQL.ProcessInstance;\n \n interface IOwnProps {\n-  processInstanceData: Pick<\n-    ProcessInstance,\n-    'id' | 'processName' | 'businessKey'\n-  >;\n+  instanceData: any;\n }\n-const ProcessDescriptor: React.FC<IOwnProps> = ({ processInstanceData }) => {\n+const ProcessDescriptor: React.FC<IOwnProps> = ({ instanceData }) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MjExNw=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjU5ODY1OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1OTo0OVrOGiUqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowNjowOFrOGiaQWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ==", "bodyText": "@Sara4994 please look in how can we handle this using child components as discussed in #242 (comment)", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438643251", "createdAt": "2020-06-11T08:59:49Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NzMwOA==", "bodyText": "@cristianonicolai Yes i have plans to create a child component. Would you mind if i work on that in a separate JIRA, considering we dont have DE on task console yet and focused on management-console alone. now that DE components are moved into common and working fine with MC, i can make some enhancements by considering task-console. Also i would need some more details of how DE will look like on TC, based on that i can enhance DE. wdyt?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438657308", "createdAt": "2020-06-11T09:25:31Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3Nzg4Nw==", "bodyText": "np, but then I suggest to simply move the DE component to common without any changes, then look again to refactor once TC uses it.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438677887", "createdAt": "2020-06-11T10:03:03Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MzY1MA==", "bodyText": "@cristianonicolai  The current state of this PR supports MC only. So we can merge as it is and changes for TC wouldnt take much long, will create a PR as soon as possible", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438683650", "createdAt": "2020-06-11T10:14:16Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNDkzOA==", "bodyText": "I have reverted these changes from DomainExplorerTable.tsx", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438734938", "createdAt": "2020-06-11T12:06:08Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MzI1MQ=="}, "originalCommit": {"oid": "ea4b149476af7176b82e9eda85fefb3a3b041574"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk0MzMxOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo0OTozMFrOGiYI8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowNDoxNVrOGiaM8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMDI3NA==", "bodyText": "just checking - this is the generalization, right? to prepare the component for use in tasks too?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438700274", "createdAt": "2020-06-11T10:49:30Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {\n                 const tempObj = {\n                   id: data.id,\n-                  processName: data.processName,\n+                  name: data[metaDataArray[1]],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczNDA2Ng==", "bodyText": "This is removed now", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438734066", "createdAt": "2020-06-11T12:04:15Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -147,10 +153,10 @@ const DomainExplorerTable = ({\n           if (rest !== '__typename' && !rest.match('/ __typename')) {\n             !tempKeys.includes(k + rest) && tempKeys.push(k + rest);\n             if (rest.hasOwnProperty) {\n-              if (rest === 'processName') {\n+              if (rest === metaDataArray[1]) {\n                 const tempObj = {\n                   id: data.id,\n-                  processName: data.processName,\n+                  name: data[metaDataArray[1]],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMDI3NA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk1NjkxOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/DomainExplorer.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo1NDoxM1rOGiYRcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjowNDowNVrOGiaMpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA==", "bodyText": "The description still mentions the Landing Page.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438702450", "createdAt": "2020-06-11T10:54:13Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/DomainExplorer.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorer from '../DomainExplorer';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('Domain Explorer Landing Page Component', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxOTAzOQ==", "bodyText": "This can be changed", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438719039", "createdAt": "2020-06-11T11:31:14Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/DomainExplorer.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorer from '../DomainExplorer';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('Domain Explorer Landing Page Component', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczMzk5MQ==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438733991", "createdAt": "2020-06-11T12:04:05Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/DomainExplorer.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorer from '../DomainExplorer';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('Domain Explorer Landing Page Component', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMjQ1MA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk2MDkyOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo1NTozN1rOGiYUFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NDozMFrOGiZ7BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzEyNA==", "bodyText": "get rid of the router in snapshots either by using getWrapper instead of mount, or wrapper.find(DomainExplorer) when using mount", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438703124", "createdAt": "2020-06-11T10:55:37Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTQ3Ng==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729476", "createdAt": "2020-06-11T11:54:30Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzEyNA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk2Mjc4OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo1NjoxNFrOGiYVQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NDozNVrOGiZ7Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzQyNw==", "bodyText": "I would mock EmptyStateIcon", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438703427", "createdAt": "2020-06-11T10:56:14Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTUxOA==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729518", "createdAt": "2020-06-11T11:54:35Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwMzQyNw=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk2ODQyOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo1ODowOVrOGiYY3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NDozOVrOGiZ7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNDM1MQ==", "bodyText": "why is here just visa and not the Travels that are supposed to be returned too?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438704351", "createdAt": "2020-06-11T10:58:09Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <TextContent>\n+            <div\n+              className=\"pf-c-content\"\n+            >\n+              <Text\n+                component=\"h2\"\n+              >\n+                <h2\n+                  className=\"\"\n+                  data-pf-content={true}\n+                >\n+                  No domains available\n+                </h2>\n+              </Text>\n+            </div>\n+          </TextContent>\n+        </div>\n+      </EmptyState>\n+    </DomainExplorer>\n+  </Router>\n+</MemoryRouter>\n+`;\n+\n+exports[`Domain Explorer Landing Page Component Snapshot test 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <Title\n+            headingLevel=\"h5\"\n+            size=\"lg\"\n+          >\n+            <h5\n+              className=\"pf-c-title pf-m-lg\"\n+            >\n+              Domains List\n+            </h5>\n+          </Title>\n+          <EmptyStateBody>\n+            <div\n+              className=\"pf-c-empty-state__body\"\n+            >\n+              Select a domain below\n+            </div>\n+          </EmptyStateBody>\n+          <EmptyStateSecondaryActions>\n+            <div\n+              className=\"pf-c-empty-state__secondary\"\n+            >\n+              <Link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTU0Mw==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729543", "createdAt": "2020-06-11T11:54:39Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorer/tests/__snapshots__/DomainExplorer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,260 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Landing Page Component Assertions 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <TextContent>\n+            <div\n+              className=\"pf-c-content\"\n+            >\n+              <Text\n+                component=\"h2\"\n+              >\n+                <h2\n+                  className=\"\"\n+                  data-pf-content={true}\n+                >\n+                  No domains available\n+                </h2>\n+              </Text>\n+            </div>\n+          </TextContent>\n+        </div>\n+      </EmptyState>\n+    </DomainExplorer>\n+  </Router>\n+</MemoryRouter>\n+`;\n+\n+exports[`Domain Explorer Landing Page Component Snapshot test 1`] = `\n+<MemoryRouter\n+  keyLength={0}\n+>\n+  <Router\n+    history={\n+      Object {\n+        \"action\": \"POP\",\n+        \"block\": [Function],\n+        \"canGo\": [Function],\n+        \"createHref\": [Function],\n+        \"entries\": Array [\n+          Object {\n+            \"hash\": \"\",\n+            \"pathname\": \"/\",\n+            \"search\": \"\",\n+            \"state\": undefined,\n+          },\n+        ],\n+        \"go\": [Function],\n+        \"goBack\": [Function],\n+        \"goForward\": [Function],\n+        \"index\": 0,\n+        \"length\": 1,\n+        \"listen\": [Function],\n+        \"location\": Object {\n+          \"hash\": \"\",\n+          \"pathname\": \"/\",\n+          \"search\": \"\",\n+          \"state\": undefined,\n+        },\n+        \"push\": [Function],\n+        \"replace\": [Function],\n+      }\n+    }\n+  >\n+    <DomainExplorer>\n+      <EmptyState\n+        variant=\"full\"\n+      >\n+        <div\n+          className=\"pf-c-empty-state\"\n+        >\n+          <EmptyStateIcon\n+            icon={[Function]}\n+          >\n+            <CubesIcon\n+              aria-hidden=\"true\"\n+              className=\"pf-c-empty-state__icon\"\n+              color=\"currentColor\"\n+              noVerticalAlign={false}\n+              size=\"sm\"\n+              title={null}\n+            >\n+              <svg\n+                aria-hidden=\"true\"\n+                aria-labelledby={null}\n+                className=\"pf-c-empty-state__icon\"\n+                fill=\"currentColor\"\n+                height=\"1em\"\n+                role=\"img\"\n+                style={\n+                  Object {\n+                    \"verticalAlign\": \"-0.125em\",\n+                  }\n+                }\n+                viewBox=\"0 0 512 512\"\n+                width=\"1em\"\n+              >\n+                <path\n+                  d=\"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"\n+                  transform=\"\"\n+                />\n+              </svg>\n+            </CubesIcon>\n+          </EmptyStateIcon>\n+          <Title\n+            headingLevel=\"h5\"\n+            size=\"lg\"\n+          >\n+            <h5\n+              className=\"pf-c-title pf-m-lg\"\n+            >\n+              Domains List\n+            </h5>\n+          </Title>\n+          <EmptyStateBody>\n+            <div\n+              className=\"pf-c-empty-state__body\"\n+            >\n+              Select a domain below\n+            </div>\n+          </EmptyStateBody>\n+          <EmptyStateSecondaryActions>\n+            <div\n+              className=\"pf-c-empty-state__secondary\"\n+            >\n+              <Link", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNDM1MQ=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 199}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk4NTc5OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTowNDoyMlrOGiYj2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0MToxMVrOGjmlYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzE2MQ==", "bodyText": "What is puzzling me is the naming of DomainExplorer and DomainExplorerContainer -> I would expect DomainExplorerContainer to contain the DomainExplorer, but it is not the case.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438707161", "createdAt": "2020-06-11T11:04:22Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.tsx", "diffHunk": "@@ -0,0 +1,228 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  DataToolbar,\n+  DataToolbarContent,\n+  DataToolbarToggleGroup,\n+  DataToolbarGroup,\n+  Card,\n+  Bullseye\n+} from '@patternfly/react-core';\n+import { FilterIcon } from '@patternfly/react-icons';\n+import DomainExplorerColumnPicker from '../../Molecules/DomainExplorerColumnPicker/DomainExplorerColumnPicker';\n+import DomainExplorerTable from '../../Molecules/DomainExplorerTable/DomainExplorerTable';\n+import KogitoSpinner from '../../Atoms/KogitoSpinner/KogitoSpinner';\n+import LoadMore from '../../Atoms/LoadMore/LoadMore';\n+import ServerErrors from '../../Molecules/ServerErrors/ServerErrors';\n+import './DomainExplorerContainer.css';\n+\n+import { GraphQL } from '../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+\n+interface IOwnProps {\n+  domainName: string;\n+  rememberedParams: any;\n+  rememberedSelections: any;\n+  metaData: any;\n+}\n+\n+const DomainExplorerContainer: React.FC<IOwnProps> = ({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4NTUwNw==", "bodyText": "@Sara4994 @jstastny-cz  Perhaps a better naming could be:\n\nRename DomainExplorer to DomainExplorerListDomains\nRename DomainExplorerContainer to DomainExplorer", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r439985507", "createdAt": "2020-06-15T07:41:11Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.tsx", "diffHunk": "@@ -0,0 +1,228 @@\n+import React, { useState, useEffect } from 'react';\n+import {\n+  DataToolbar,\n+  DataToolbarContent,\n+  DataToolbarToggleGroup,\n+  DataToolbarGroup,\n+  Card,\n+  Bullseye\n+} from '@patternfly/react-core';\n+import { FilterIcon } from '@patternfly/react-icons';\n+import DomainExplorerColumnPicker from '../../Molecules/DomainExplorerColumnPicker/DomainExplorerColumnPicker';\n+import DomainExplorerTable from '../../Molecules/DomainExplorerTable/DomainExplorerTable';\n+import KogitoSpinner from '../../Atoms/KogitoSpinner/KogitoSpinner';\n+import LoadMore from '../../Atoms/LoadMore/LoadMore';\n+import ServerErrors from '../../Molecules/ServerErrors/ServerErrors';\n+import './DomainExplorerContainer.css';\n+\n+import { GraphQL } from '../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+\n+interface IOwnProps {\n+  domainName: string;\n+  rememberedParams: any;\n+  rememberedSelections: any;\n+  metaData: any;\n+}\n+\n+const DomainExplorerContainer: React.FC<IOwnProps> = ({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzE2MQ=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk4OTIxOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTowNTo0MFrOGiYl_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1NDowNlrOGiZ6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ==", "bodyText": "aren't we redoing what the MockedProvider can do for us? What is the benefit of this approach?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438707709", "createdAt": "2020-06-11T11:05:40Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwOTcyMA==", "bodyText": "all the snapshots are failing with:\n An error occurred while accessing data. so the mocking needs to be fixed still.\n\nI assume you're moving the tests only, so it is fine just to create a Jira for fixing this test and moving on with the PR.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438709720", "createdAt": "2020-06-11T11:10:15Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTI5OQ==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729299", "createdAt": "2020-06-11T11:54:06Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNzcwOQ=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk5MzEyOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTowNzoxNFrOGiYopA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1Mzo1OFrOGiZ6HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODM4OA==", "bodyText": "getWrapperAsync is a great help here ->\nit('', async()=>{\n  const wrapper = await getWrapperAsync(<></>, 'DomainExplorerContainer')\n  expect(wrapper).toMatchSnapshot();\n}", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438708388", "createdAt": "2020-06-11T11:07:14Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'flight',\n+              type: {\n+                name: 'Flight',\n+                kind: 'OBJECT',\n+                fields: [\n+                  {\n+                    name: 'arrival',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  }\n+                ]\n+              }\n+            },\n+            {\n+              name: 'id',\n+              type: {\n+                name: 'String',\n+                kind: 'SCALAR',\n+                fields: null\n+              }\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryFieldsQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'Travels'\n+            },\n+            {\n+              name: 'visaApplication'\n+            },\n+            {\n+              name: 'Jobs'\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryTypesQuery.mockReturnValue({\n+      loading: false,\n+      data: {}\n+    });\n+    const wrapper = mount(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTI0NQ==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729245", "createdAt": "2020-06-11T11:53:58Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/DomainExplorerContainer.test.tsx", "diffHunk": "@@ -0,0 +1,286 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import { BrowserRouter } from 'react-router-dom';\n+import DomainExplorerContainer from '../DomainExplorerContainer';\n+import { MockedProvider, wait } from '@apollo/react-testing';\n+import { getWrapper } from '../../../../utils/OuiaUtils';\n+import { GraphQL } from '../../../../graphql/types';\n+import useGetQueryTypesQuery = GraphQL.useGetQueryTypesQuery;\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+import useGetColumnPickerAttributesQuery = GraphQL.useGetColumnPickerAttributesQuery;\n+jest.mock('react-apollo');\n+\n+const props = {\n+  domains: ['Travels', 'VisaApplications'],\n+  loadingState: false,\n+  rememberedParams: [{ flight: ['arrival'] }, { flight: ['departure'] }],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {\n+    metadata: [\n+      {\n+        processInstances: [\n+          'id',\n+          'processName',\n+          'state',\n+          'start',\n+          'lastUpdate',\n+          'businessKey'\n+        ]\n+      }\n+    ]\n+  }\n+};\n+\n+const routeComponentPropsMock = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {\n+      parameters: [{ flight: ['arrival'] }, { flight: ['departure'] }]\n+    },\n+    key: 'ugubul'\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const routeComponentPropsMock2 = {\n+  history: { locations: { key: 'ugubul' } } as any,\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  } as any,\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  } as any\n+};\n+const props2 = {\n+  domains: ['Travels', 'VisaApplications'],\n+  location: {\n+    pathname: '/DomainExplorer/Travels',\n+    state: {}\n+  },\n+  match: {\n+    params: {\n+      domainName: 'Travels'\n+    }\n+  },\n+  rememberedParams: [],\n+  rememberedSelections: [],\n+  domainName: 'Travels',\n+  metaData: {}\n+};\n+\n+jest.mock('../../../../graphql/types');\n+\n+describe('Domain Explorer Container component', () => {\n+  it('Snapshot test', async () => {\n+    // @ts-ignore\n+    useGetColumnPickerAttributesQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'flight',\n+              type: {\n+                name: 'Flight',\n+                kind: 'OBJECT',\n+                fields: [\n+                  {\n+                    name: 'arrival',\n+                    type: {\n+                      name: 'String',\n+                      kind: 'SCALAR'\n+                    }\n+                  }\n+                ]\n+              }\n+            },\n+            {\n+              name: 'id',\n+              type: {\n+                name: 'String',\n+                kind: 'SCALAR',\n+                fields: null\n+              }\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryFieldsQuery.mockReturnValue({\n+      loading: false,\n+      data: {\n+        __type: {\n+          fields: [\n+            {\n+              name: 'Travels'\n+            },\n+            {\n+              name: 'visaApplication'\n+            },\n+            {\n+              name: 'Jobs'\n+            }\n+          ]\n+        }\n+      }\n+    });\n+    // @ts-ignore\n+    useGetQueryTypesQuery.mockReturnValue({\n+      loading: false,\n+      data: {}\n+    });\n+    const wrapper = mount(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODM4OA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjk5NDYwOnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/__snapshots__/DomainExplorerContainer.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTowNzo0N1rOGiYpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1Mzo1MFrOGiZ50w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODYyNg==", "bodyText": "remove router from the snapshots", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438708626", "createdAt": "2020-06-11T11:07:47Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/__snapshots__/DomainExplorerContainer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,1706 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Container component Check error response for getPicker query 1`] = `\n+<BrowserRouter>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTE3MQ==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729171", "createdAt": "2020-06-11T11:53:50Z", "author": {"login": "jstastny-cz"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/tests/__snapshots__/DomainExplorerContainer.test.tsx.snap", "diffHunk": "@@ -0,0 +1,1706 @@\n+// Jest Snapshot v1, https://goo.gl/fbAQLP\n+\n+exports[`Domain Explorer Container component Check error response for getPicker query 1`] = `\n+<BrowserRouter>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwODYyNg=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzAwNDY0OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/DomainExplorerLandingPage/tests/DomainExplorerLandingPage.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToxMTozOFrOGiYwLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1MzozOVrOGiZ5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw==", "bodyText": "if using getWrapper no need to use find here.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438710317", "createdAt": "2020-06-11T11:11:38Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerLandingPage/tests/DomainExplorerLandingPage.test.tsx", "diffHunk": "@@ -13,93 +12,13 @@ describe('Domain Explorer Landing Page Component', () => {\n     } as any\n   };\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Jobs',\n-              args: []\n-            },\n-            {\n-              name: 'Travels',\n-              args: []\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: []\n-            }\n-          ]\n-        }\n-      }\n-    });\n     const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n+      <MockedProvider mocks={[]} addTypename={false}>\n+        <Router keyLength={0}>\n+          <DomainExplorerLandingPage {...props} />\n+        </Router>\n+      </MockedProvider>\n     );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n-  });\n-  it('Assertions', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'Travels' } }\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'VisaApplications' } }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n-    );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n+    expect(wrapper.find(DomainExplorerLandingPage)).toMatchSnapshot();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDcxMA==", "bodyText": "Plus since the component is wrapper in ouia, we need to stick to getWrapper to have shorter snapshot (omitting the ouia wrapper part)", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438710710", "createdAt": "2020-06-11T11:12:28Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerLandingPage/tests/DomainExplorerLandingPage.test.tsx", "diffHunk": "@@ -13,93 +12,13 @@ describe('Domain Explorer Landing Page Component', () => {\n     } as any\n   };\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Jobs',\n-              args: []\n-            },\n-            {\n-              name: 'Travels',\n-              args: []\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: []\n-            }\n-          ]\n-        }\n-      }\n-    });\n     const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n+      <MockedProvider mocks={[]} addTypename={false}>\n+        <Router keyLength={0}>\n+          <DomainExplorerLandingPage {...props} />\n+        </Router>\n+      </MockedProvider>\n     );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n-  });\n-  it('Assertions', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'Travels' } }\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'VisaApplications' } }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n-    );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n+    expect(wrapper.find(DomainExplorerLandingPage)).toMatchSnapshot();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTEwMg==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729102", "createdAt": "2020-06-11T11:53:39Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerLandingPage/tests/DomainExplorerLandingPage.test.tsx", "diffHunk": "@@ -13,93 +12,13 @@ describe('Domain Explorer Landing Page Component', () => {\n     } as any\n   };\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Jobs',\n-              args: []\n-            },\n-            {\n-              name: 'Travels',\n-              args: []\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: []\n-            }\n-          ]\n-        }\n-      }\n-    });\n     const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n+      <MockedProvider mocks={[]} addTypename={false}>\n+        <Router keyLength={0}>\n+          <DomainExplorerLandingPage {...props} />\n+        </Router>\n+      </MockedProvider>\n     );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n-  });\n-  it('Assertions', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'TravelsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'Travels' } }\n-            },\n-            {\n-              name: 'visaApplication',\n-              args: [\n-                {\n-                  name: 'where',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsArgument'\n-                  }\n-                },\n-                {\n-                  name: 'orderBy',\n-                  type: {\n-                    kind: 'INPUT_OBJECT',\n-                    name: 'VisaApplicationsOrderBy'\n-                  }\n-                }\n-              ],\n-              type: { ofType: { name: 'VisaApplications' } }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    const wrapper = mount(\n-      <Router keyLength={0}>\n-        <DomainExplorerLandingPage {...props} />\n-      </Router>\n-    );\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(wrapper).toMatchSnapshot();\n+    expect(wrapper.find(DomainExplorerLandingPage)).toMatchSnapshot();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMDMxNw=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzAxNjE0OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToxNjowOFrOGiY3tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1MzoyOVrOGiZ5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMjI0Nw==", "bodyText": "getWrapperAsync is to be used together with MockedProvider", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438712247", "createdAt": "2020-06-11T11:16:08Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -67,87 +45,25 @@ const props2 = {\n     params: {\n       domainName: 'Travels'\n     }\n-  }\n+  },\n+  loadingState: false\n };\n \n-jest.mock('@kogito-apps/common/src/graphql/types');\n describe('Domain Explorer Dashboard component', () => {\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n     const wrapper = mount(\n-      <BrowserRouter>\n-        <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n-      </BrowserRouter>\n+      <MockedProvider mocks={[]} addTypename={false}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTAxNg==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438729016", "createdAt": "2020-06-11T11:53:29Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -67,87 +45,25 @@ const props2 = {\n     params: {\n       domainName: 'Travels'\n     }\n-  }\n+  },\n+  loadingState: false\n };\n \n-jest.mock('@kogito-apps/common/src/graphql/types');\n describe('Domain Explorer Dashboard component', () => {\n   it('Snapshot test', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n     const wrapper = mount(\n-      <BrowserRouter>\n-        <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n-      </BrowserRouter>\n+      <MockedProvider mocks={[]} addTypename={false}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMjI0Nw=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzAyMjUxOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToxODozOVrOGiY8DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1MzoxOVrOGiZ46w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMzM1Nw==", "bodyText": "not getting anything interesting in snapshots when using shallow due to the wrapping router.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438713357", "createdAt": "2020-06-11T11:18:39Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -160,112 +76,19 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n   });\n   it('Mock query testing', async () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n-    const mocks = [\n-      {\n-        request: {\n-          query: GET_QUERY_FIELDS\n-        },\n-        result: {\n-          loading: false,\n-          data: {\n-            __type: {\n-              fields: [\n-                {\n-                  name: 'Travels'\n-                },\n-                {\n-                  name: 'visaApplication'\n-                },\n-                {\n-                  name: 'Jobs'\n-                }\n-              ]\n-            }\n-          }\n-        }\n-      }\n-    ];\n     const wrapper = mount(\n       <BrowserRouter>\n-        <MockedProvider mocks={mocks} addTypename={false}>\n+        <MockedProvider mocks={[]} addTypename={false}>\n           <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n         </MockedProvider>\n       </BrowserRouter>\n     );\n     wrapper.update();\n     wrapper.setProps({});\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetQueryTypesQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetColumnPickerAttributesQuery).toBeCalledWith({\n-      variables: { columnPickerType: 'Travels' }\n-    });\n   });\n   it('Check error response for getPicker query', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODkzOQ==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728939", "createdAt": "2020-06-11T11:53:19Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -160,112 +76,19 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n   });\n   it('Mock query testing', async () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryFieldsQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'Travels'\n-            },\n-            {\n-              name: 'visaApplication'\n-            },\n-            {\n-              name: 'Jobs'\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      data: {\n-        __type: {\n-          fields: [\n-            {\n-              name: 'flight',\n-              type: {\n-                name: 'Flight',\n-                kind: 'OBJECT',\n-                fields: [\n-                  {\n-                    name: 'arrival',\n-                    type: {\n-                      name: 'String',\n-                      kind: 'SCALAR'\n-                    }\n-                  }\n-                ]\n-              }\n-            },\n-            {\n-              name: 'id',\n-              type: {\n-                name: 'String',\n-                kind: 'SCALAR',\n-                fields: null\n-              }\n-            }\n-          ]\n-        }\n-      }\n-    });\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: {}\n-    });\n-    const mocks = [\n-      {\n-        request: {\n-          query: GET_QUERY_FIELDS\n-        },\n-        result: {\n-          loading: false,\n-          data: {\n-            __type: {\n-              fields: [\n-                {\n-                  name: 'Travels'\n-                },\n-                {\n-                  name: 'visaApplication'\n-                },\n-                {\n-                  name: 'Jobs'\n-                }\n-              ]\n-            }\n-          }\n-        }\n-      }\n-    ];\n     const wrapper = mount(\n       <BrowserRouter>\n-        <MockedProvider mocks={mocks} addTypename={false}>\n+        <MockedProvider mocks={[]} addTypename={false}>\n           <DomainExplorerPage {...props} {...routeComponentPropsMock} />\n         </MockedProvider>\n       </BrowserRouter>\n     );\n     wrapper.update();\n     wrapper.setProps({});\n     expect(wrapper.find(DomainExplorerPage)).toMatchSnapshot();\n-    expect(GraphQL.useGetQueryFieldsQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetQueryTypesQuery).toHaveBeenCalled();\n-    expect(GraphQL.useGetColumnPickerAttributesQuery).toBeCalledWith({\n-      variables: { columnPickerType: 'Travels' }\n-    });\n   });\n   it('Check error response for getPicker query', () => {\n-    // @ts-ignore\n-    GraphQL.useGetColumnPickerAttributesQuery.mockReturnValue({\n-      loading: false,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxMzM1Nw=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 260}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzAyOTY3OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToyMTowMVrOGiZAfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1MzoxMVrOGiZ4mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNDQ5NA==", "bodyText": "again, nothing interesting in snapshots.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438714494", "createdAt": "2020-06-11T11:21:01Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -275,13 +98,7 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper).toMatchSnapshot();\n   });\n   it('Check error response for getQueryTypes', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: null,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 275}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODg1OA==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728858", "createdAt": "2020-06-11T11:53:11Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -275,13 +98,7 @@ describe('Domain Explorer Dashboard component', () => {\n     expect(wrapper).toMatchSnapshot();\n   });\n   it('Check error response for getQueryTypes', () => {\n-    // @ts-ignore\n-    GraphQL.useGetQueryTypesQuery.mockReturnValue({\n-      loading: false,\n-      data: null,\n-      error: {}\n-    });\n-    const wrapper = mount(\n+    const wrapper = shallow(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNDQ5NA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 275}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzAzMzcwOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMToyMjoyMVrOGiZDGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMTo1MzowMVrOGiZ4Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNTE2MA==", "bodyText": "this should be async test otherwise we get just loading spinner in snapshots. Use getWrapperAsync for the loading to finish.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438715160", "createdAt": "2020-06-11T11:22:21Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -293,7 +110,9 @@ describe('Domain Explorer Dashboard component', () => {\n   it('check assertions on rememberedParams', () => {\n     const wrapper = mount(\n       <BrowserRouter>\n-        <DomainExplorerPage {...props2} {...routeComponentPropsMock2} />\n+        <MockedProvider mocks={[]} addTypename={false}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyODc1MA==", "bodyText": "will be done as part of https://issues.redhat.com/browse/KOGITO-2431", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438728750", "createdAt": "2020-06-11T11:53:01Z", "author": {"login": "jstastny-cz"}, "path": "packages/management-console/src/components/Templates/DomainExplorerPage/tests/DomainExplorerPage.test.tsx", "diffHunk": "@@ -293,7 +110,9 @@ describe('Domain Explorer Dashboard component', () => {\n   it('check assertions on rememberedParams', () => {\n     const wrapper = mount(\n       <BrowserRouter>\n-        <DomainExplorerPage {...props2} {...routeComponentPropsMock2} />\n+        <MockedProvider mocks={[]} addTypename={false}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcxNTE2MA=="}, "originalCommit": {"oid": "87719a9f8a5679361194bbc50b07c66db96ddba4"}, "originalPosition": 284}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzY1Mzg3OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.css", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDowOTo0NlrOGifKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDo0OToxNVrOGig2Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTMzNQ==", "bodyText": "why does this have both \"common\" and \"domain-explorer\" in the name?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438815335", "createdAt": "2020-06-11T14:09:46Z", "author": {"login": "srambach"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.css", "diffHunk": "@@ -0,0 +1,3 @@\n+.kogito-common--domain-explorer__table-OverFlow {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5e72eb095c13bf7e5c8dee48fd30f62abcea04"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0MjkzOQ==", "bodyText": "it is domain explorer component on common package", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r438842939", "createdAt": "2020-06-11T14:49:15Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Organisms/DomainExplorerContainer/DomainExplorerContainer.css", "diffHunk": "@@ -0,0 +1,3 @@\n+.kogito-common--domain-explorer__table-OverFlow {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgxNTMzNQ=="}, "originalCommit": {"oid": "5e5e72eb095c13bf7e5c8dee48fd30f62abcea04"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTAyODQzOnYy", "diffSide": "LEFT", "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjozMDowOVrOGjku0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNDozNzoxM1rOGkK8ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ==", "bodyText": "@Sara4994 are these changes below needed?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r439955155", "createdAt": "2020-06-15T06:30:09Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -170,14 +172,14 @@ const DomainExplorerTable = ({\n                   )\n                 };\n                 tempValue.push(ele);\n-              } else if (rest === 'start') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d58b22098117e895dd5089fb08ef40079e78d595"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTMwNg==", "bodyText": "@Sara4994 still not sure why these changes are introduced, could we avoid/revert it?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440541306", "createdAt": "2020-06-16T01:53:49Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -170,14 +172,14 @@ const DomainExplorerTable = ({\n                   )\n                 };\n                 tempValue.push(ele);\n-              } else if (rest === 'start') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}, "originalCommit": {"oid": "d58b22098117e895dd5089fb08ef40079e78d595"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MDE3MA==", "bodyText": "@cristianonicolai this one just changed the order of if-else statements to appear same order as on table, just for readability atleast for me when I do changes, I do on right place...", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440570170", "createdAt": "2020-06-16T03:48:53Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -170,14 +172,14 @@ const DomainExplorerTable = ({\n                   )\n                 };\n                 tempValue.push(ele);\n-              } else if (rest === 'start') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}, "originalCommit": {"oid": "d58b22098117e895dd5089fb08ef40079e78d595"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4MTI1OA==", "bodyText": "that's ok then", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440581258", "createdAt": "2020-06-16T04:37:13Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Molecules/DomainExplorerTable/DomainExplorerTable.tsx", "diffHunk": "@@ -170,14 +172,14 @@ const DomainExplorerTable = ({\n                   )\n                 };\n                 tempValue.push(ele);\n-              } else if (rest === 'start') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NTE1NQ=="}, "originalCommit": {"oid": "d58b22098117e895dd5089fb08ef40079e78d595"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDY4ODUxOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Organisms/ProcessListTable/__mocks__/ProcessListTable.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo1MjowN1rOGkIe1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzo1MDowM1rOGkKSNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg4NQ==", "bodyText": "@Sara4994 shoulod this be named ProcessListTable instead?", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440540885", "createdAt": "2020-06-16T01:52:07Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Organisms/ProcessListTable/__mocks__/ProcessListTable.tsx", "diffHunk": "@@ -1,7 +1,7 @@\n import React from 'react';\n \n-const DataListComponent = (): React.ReactElement => {\n+const ProcessListComponent = (): React.ReactElement => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f707dabbc51cadb174b008c7c0f93097893fdb43"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MDQyMA==", "bodyText": "@cristianonicolai oopps that's my bad... Will change this", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440570420", "createdAt": "2020-06-16T03:50:03Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Organisms/ProcessListTable/__mocks__/ProcessListTable.tsx", "diffHunk": "@@ -1,7 +1,7 @@\n import React from 'react';\n \n-const DataListComponent = (): React.ReactElement => {\n+const ProcessListComponent = (): React.ReactElement => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MDg4NQ=="}, "originalCommit": {"oid": "f707dabbc51cadb174b008c7c0f93097893fdb43"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDY5MzY2OnYy", "diffSide": "RIGHT", "path": "packages/common/src/components/Organisms/DomainExplorerListDomains/tests/DomainExplorerListDomains.test.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo1NToxN1rOGkIiGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNDo1MDo0MVrOGkLJJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTcyMg==", "bodyText": "can you provide a more meaningful description for the tests, please.", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440541722", "createdAt": "2020-06-16T01:55:17Z", "author": {"login": "cristianonicolai"}, "path": "packages/common/src/components/Organisms/DomainExplorerListDomains/tests/DomainExplorerListDomains.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorerListDomains from '../DomainExplorerListDomains';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('DomainExplorerListDomains Component', () => {\n+  it('Snapshot test', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f707dabbc51cadb174b008c7c0f93097893fdb43"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4NDQ4NA==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/262#discussion_r440584484", "createdAt": "2020-06-16T04:50:41Z", "author": {"login": "Sara4994"}, "path": "packages/common/src/components/Organisms/DomainExplorerListDomains/tests/DomainExplorerListDomains.test.tsx", "diffHunk": "@@ -0,0 +1,100 @@\n+import React from 'react';\n+import { mount } from 'enzyme';\n+import DomainExplorerListDomains from '../DomainExplorerListDomains';\n+import { GraphQL } from '../../../../graphql/types';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+import useGetQueryFieldsQuery = GraphQL.useGetQueryFieldsQuery;\n+\n+jest.mock('../../../../graphql/types');\n+describe('DomainExplorerListDomains Component', () => {\n+  it('Snapshot test', () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0MTcyMg=="}, "originalCommit": {"oid": "f707dabbc51cadb174b008c7c0f93097893fdb43"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 977, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}