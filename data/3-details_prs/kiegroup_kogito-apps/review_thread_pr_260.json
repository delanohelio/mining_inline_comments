{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjc4NjUx", "number": 260, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoxNDowN1rOEGsC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0NTozOFrOENISvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDQ4NTMyOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/ProcessListPage/ProcessListPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoxNDowN1rOGlo3oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoxNDowN1rOGlo3oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyMDA5Nw==", "bodyText": "@AjayJagan  could be possible reuse this interface to type other interfaces entries like the one defined at ProcessListTableItems for 'filters'?. I mean is try to  avoid that  filters: any; and let to know what exactly can be passed there.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r442120097", "createdAt": "2020-06-18T10:14:07Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/components/Templates/ProcessListPage/ProcessListPage.tsx", "diffHunk": "@@ -28,13 +28,24 @@ import axios from 'axios';\n import ProcessInstanceState = GraphQL.ProcessInstanceState;\n import { setTitle } from '../../../utils/Utils';\n \n-const ProcessListPage: React.FC<InjectedOuiaProps> = ({ ouiaContext }) => {\n+interface MatchProps {\n+  domainName: string;\n+}\n+\n+interface LocationProps {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada69eda75838ba46266549b2730d29fb36e06cc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzI3MzY1OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo1NjoxNFrOGta5rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTowODo1OVrOGtbcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3OTg1NA==", "bodyText": "@AjayJagan Abort  operation?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r450279854", "createdAt": "2020-07-06T14:56:14Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -147,6 +146,25 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n         )\n     );\n   };\n+\n+  const onAbortClick = () => {\n+    handleAbort(\n+      processInstanceData,\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${processInstanceData.processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Skip operation',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8498d3d8972dd44b264d133f2e0e52e6f177f860"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI4ODcyOA==", "bodyText": "changed now :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r450288728", "createdAt": "2020-07-06T15:08:59Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -147,6 +146,25 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n         )\n     );\n   };\n+\n+  const onAbortClick = () => {\n+    handleAbort(\n+      processInstanceData,\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${processInstanceData.processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Skip operation',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3OTg1NA=="}, "originalCommit": {"oid": "8498d3d8972dd44b264d133f2e0e52e6f177f860"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDI3OTgwOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDowMzoxMVrOGt3trg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDozMjoyOVrOGt4pxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MTkxOA==", "bodyText": "@AjayJagan  still Skip operation here :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r450751918", "createdAt": "2020-07-07T10:03:11Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -65,6 +70,33 @@ const ProcessDetailsPage: React.FC<\n     return ouiaPageTypeAndObjectId(ouiaContext, 'process-instances', id);\n   });\n \n+  const onShowMessage = (\n+    title: string,\n+    content: string,\n+    type: TitleType\n+  ): void => {\n+    setTitleType(type);\n+    setModalTitle(title);\n+    setModalContent(content);\n+    handleModalToggle();\n+  };\n+  const onAbortClick = () => {\n+    handleAbort(\n+      data.ProcessInstances[0],\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${data.ProcessInstances[0].processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Skip operation',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092522c04ad186f2658ff8e6a371ee4e4d24f22b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NzMwMg==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r450767302", "createdAt": "2020-07-07T10:32:29Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -65,6 +70,33 @@ const ProcessDetailsPage: React.FC<\n     return ouiaPageTypeAndObjectId(ouiaContext, 'process-instances', id);\n   });\n \n+  const onShowMessage = (\n+    title: string,\n+    content: string,\n+    type: TitleType\n+  ): void => {\n+    setTitleType(type);\n+    setModalTitle(title);\n+    setModalContent(content);\n+    handleModalToggle();\n+  };\n+  const onAbortClick = () => {\n+    handleAbort(\n+      data.ProcessInstances[0],\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${data.ProcessInstances[0].processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Skip operation',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MTkxOA=="}, "originalCommit": {"oid": "092522c04ad186f2658ff8e6a371ee4e4d24f22b"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODMwMDM3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzoyNjoyMVrOGvE6LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozNTozMFrOGvJcTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY4NA==", "bodyText": "I think the update here is not carried out - it works just on root wrapper, but getWrapperAsync returns child-level wrappers.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452016684", "createdAt": "2020-07-09T07:26:21Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,713 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 995}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyMTUwNQ==", "bodyText": "See the snapshot - it is again containing MockedProvider and other wrapping components. Is that a sideeffect of wrapper=wrapper.update() ? ... if so, we might need to do find() on the updated wrapper before taking snapshot.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452021505", "createdAt": "2020-07-09T07:35:17Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,713 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY4NA=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 995}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5MDk1Ng==", "bodyText": "removed the unwanted MockedProvider from the snapshots and testing only what is required", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452090956", "createdAt": "2020-07-09T09:35:30Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,713 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY4NA=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 995}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODMxMTc3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzoyOTo1MVrOGvFBXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozMzoyOFrOGvJXrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxODUyNg==", "bodyText": "Is this necessary? - just simulate click in await act, close the act(()=>{}) and check the wrapper. Then for next click again open act(()=>{}) do the click, close, and check wrapper. This solution seems more complex than it could.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452018526", "createdAt": "2020-07-09T07:29:51Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,713 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n     expect(wrapper).toMatchSnapshot();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .contains('This process has no related sub processes')\n+    ).toBeTruthy();\n+  });\n+\n+  it('snapshot tests with child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks1} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props1} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+\n+    expect(\n+      wrapper\n+        .find(DataListContent)\n+        .at(1)\n+        .props()['id']\n+    ).toEqual(\n+      'kie-datalist-expand-' + mocks1[0].result.data.ProcessInstances[0].id\n+    );\n+  });\n+\n+  it('snapshot tests with error in query', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks3} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n   });\n-  it('snapshot tests with child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props1} />);\n+\n+  it('snapshot tests with an error(status) process instance', async () => {\n+    const wrapper = getWrapper(\n+      <BrowserRouter>\n+        <ProcessListTableItems {...props3} />\n+      </BrowserRouter>,\n+      'ProcessListTableItems'\n+    );\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('ProcessList toggle check', async () => {\n-    const wrapper = mount(\n-      <MockedProvider mocks={mocks} addTypename={false}>\n+\n+  it('snapshot tests with disabled popup', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n         <BrowserRouter>\n-          <ProcessListTableItems {...props} />\n+          <ProcessListTableItems {...props4} />\n         </BrowserRouter>\n-      </MockedProvider>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+\n+  describe('Skip click tests', () => {\n+    const handleSkipSpy = jest.spyOn(Utils, 'handleSkip');\n+    it('Skip button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 1101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4OTc3Mg==", "bodyText": "yes, removed unwanted await", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452089772", "createdAt": "2020-07-09T09:33:28Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,713 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n     expect(wrapper).toMatchSnapshot();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .contains('This process has no related sub processes')\n+    ).toBeTruthy();\n+  });\n+\n+  it('snapshot tests with child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks1} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props1} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+\n+    expect(\n+      wrapper\n+        .find(DataListContent)\n+        .at(1)\n+        .props()['id']\n+    ).toEqual(\n+      'kie-datalist-expand-' + mocks1[0].result.data.ProcessInstances[0].id\n+    );\n+  });\n+\n+  it('snapshot tests with error in query', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks3} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n   });\n-  it('snapshot tests with child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props1} />);\n+\n+  it('snapshot tests with an error(status) process instance', async () => {\n+    const wrapper = getWrapper(\n+      <BrowserRouter>\n+        <ProcessListTableItems {...props3} />\n+      </BrowserRouter>,\n+      'ProcessListTableItems'\n+    );\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('ProcessList toggle check', async () => {\n-    const wrapper = mount(\n-      <MockedProvider mocks={mocks} addTypename={false}>\n+\n+  it('snapshot tests with disabled popup', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n         <BrowserRouter>\n-          <ProcessListTableItems {...props} />\n+          <ProcessListTableItems {...props4} />\n         </BrowserRouter>\n-      </MockedProvider>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+\n+  describe('Skip click tests', () => {\n+    const handleSkipSpy = jest.spyOn(Utils, 'handleSkip');\n+    it('Skip button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxODUyNg=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 1101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODMxNTc3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzozMDo1N1rOGvFD1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozMzoxM1rOGvJXHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxOTE1OQ==", "bodyText": "this shouldn't be in snapshot - use find.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452019159", "createdAt": "2020-07-09T07:30:57Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,9771 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n+<MockedProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4OTYzMA==", "bodyText": "agreed , used find and removed unnecessary snapshot", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452089630", "createdAt": "2020-07-09T09:33:13Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,9771 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n+<MockedProvider", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxOTE1OQ=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQxMDcyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzo1ODo0N1rOGvF-1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozMjo1MVrOGvJWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNDI2Mw==", "bodyText": "can we move the condition check into isDisabled attribute? And have just a single Button component defined:\n<Button isDisabled={statusArray.length > 0 ? false : true} />\n\nor possibly using the spread operator (to have the atribute just when needed)\n<Button { ...(statusArray.length<=0 && { isDisabled:true })}", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452034263", "createdAt": "2020-07-09T07:58:47Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "diffHunk": "@@ -423,18 +405,22 @@ const ProcessListToolbar: React.FC<IOwnProps> = ({\n               onKeyPress={handleEnterClick}\n               placeholder=\"Filter by business key\"\n               value={searchWord}\n-              isDisabled={checkedArray.length === 0}\n+              isDisabled={statusArray.length === 0}\n             />\n           </InputGroup>\n         </DataToolbarFilter>\n         <DataToolbarItem>\n-          <Button\n-            variant=\"primary\"\n-            onClick={onFilterClick}\n-            id=\"Apply-filter-button\"\n-          >\n-            Apply filter\n-          </Button>\n+          {statusArray.length > 0 ? (\n+            <Button\n+              variant=\"primary\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4OTM4NQ==", "bodyText": "changed to a single button", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452089385", "createdAt": "2020-07-09T09:32:51Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "diffHunk": "@@ -423,18 +405,22 @@ const ProcessListToolbar: React.FC<IOwnProps> = ({\n               onKeyPress={handleEnterClick}\n               placeholder=\"Filter by business key\"\n               value={searchWord}\n-              isDisabled={checkedArray.length === 0}\n+              isDisabled={statusArray.length === 0}\n             />\n           </InputGroup>\n         </DataToolbarFilter>\n         <DataToolbarItem>\n-          <Button\n-            variant=\"primary\"\n-            onClick={onFilterClick}\n-            id=\"Apply-filter-button\"\n-          >\n-            Apply filter\n-          </Button>\n+          {statusArray.length > 0 ? (\n+            <Button\n+              variant=\"primary\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNDI2Mw=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 282}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQxMTY2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzo1OTowNVrOGvF_dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOTozMjoyOFrOGvJVVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNDQyMA==", "bodyText": "the same comment as above.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452034420", "createdAt": "2020-07-09T07:59:05Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "diffHunk": "@@ -463,14 +462,20 @@ const ProcessListToolbar: React.FC<IOwnProps> = ({\n       </DataToolbarToggleGroup>\n       <DataToolbarGroup variant=\"icon-button-group\">\n         <DataToolbarItem>\n-          <Button\n-            variant=\"plain\"\n-            onClick={onRefreshClick}\n-            aria-label=\"Refresh list\"\n-            id=\"refresh-button\"\n-          >\n-            <SyncIcon />\n-          </Button>\n+          {statusArray.length > 0 ? (\n+            <Button", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 329}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4OTE3NQ==", "bodyText": "changed to a single button :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452089175", "createdAt": "2020-07-09T09:32:28Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/ProcessListToolbar.tsx", "diffHunk": "@@ -463,14 +462,20 @@ const ProcessListToolbar: React.FC<IOwnProps> = ({\n       </DataToolbarToggleGroup>\n       <DataToolbarGroup variant=\"icon-button-group\">\n         <DataToolbarItem>\n-          <Button\n-            variant=\"plain\"\n-            onClick={onRefreshClick}\n-            aria-label=\"Refresh list\"\n-            id=\"refresh-button\"\n-          >\n-            <SyncIcon />\n-          </Button>\n+          {statusArray.length > 0 ? (\n+            <Button", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNDQyMA=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 329}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQ0MTcxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/tests/__snapshots__/ProcessListToolbar.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNzo0NFrOGvGSSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToyOTo0N1rOGvJPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzOTI0MQ==", "bodyText": "I think that due to using shallow the actual Button is not in snapshot, but just its wrapping component.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452039241", "createdAt": "2020-07-09T08:07:44Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/tests/__snapshots__/ProcessListToolbar.test.tsx.snap", "diffHunk": "@@ -258,7 +523,7 @@ exports[`ProcessListToolbar component tests Snapshot tests 1`] = `\n     >\n       <DataToolbarItem>\n         <Component\n-          onClick={[MockFunction]}\n+          isDisabled={true}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 286}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4NzU3MA==", "bodyText": "added getWrapper here", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452087570", "createdAt": "2020-07-09T09:29:47Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListToolbar/tests/__snapshots__/ProcessListToolbar.test.tsx.snap", "diffHunk": "@@ -258,7 +523,7 @@ exports[`ProcessListToolbar component tests Snapshot tests 1`] = `\n     >\n       <DataToolbarItem>\n         <Component\n-          onClick={[MockFunction]}\n+          isDisabled={true}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzOTI0MQ=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 286}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQ4OTc5OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/tests/ProcessDetailsPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODoyMToyNVrOGvGwpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToyOToyOVrOGvJOUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0NzAxMg==", "bodyText": "is this wait needed here? shouldn't await act handle this?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452047012", "createdAt": "2020-07-09T08:21:25Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/tests/ProcessDetailsPage.test.tsx", "diffHunk": "@@ -269,21 +278,49 @@ describe('Process Details Page component tests', () => {\n     );\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('abort button click', async () => {\n-    const wrapper = await getWrapperAsync(\n-      <MockedProvider mocks={mocks1} addTypename={false}>\n-        <BrowserRouter>\n-          <ProcessDetailsPage {...props} />\n-        </BrowserRouter>\n-      </MockedProvider>,\n-      'ProcessDetailsPage'\n-    );\n-    wrapper\n-      .find('#abort-button')\n-      .first()\n-      .simulate('click');\n-    wrapper.update();\n-    expect(setTitle).toHaveBeenCalled();\n+  describe('abort button click', () => {\n+    it('on successfull abort', async () => {\n+      mockedAxios.delete.mockResolvedValue({});\n+      const wrapper = await getWrapperAsync(\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <BrowserRouter>\n+            <ProcessDetailsPage {...props} />\n+          </BrowserRouter>\n+        </MockedProvider>,\n+        'ProcessDetailsPage'\n+      );\n+      const handleAbortSpy = jest.spyOn(Utils, 'handleAbort');\n+      await act(async () => {\n+        wrapper\n+          .find(Button)\n+          .find('button')\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4NzM3OQ==", "bodyText": "yes you are correct. removed :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452087379", "createdAt": "2020-07-09T09:29:29Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/tests/ProcessDetailsPage.test.tsx", "diffHunk": "@@ -269,21 +278,49 @@ describe('Process Details Page component tests', () => {\n     );\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('abort button click', async () => {\n-    const wrapper = await getWrapperAsync(\n-      <MockedProvider mocks={mocks1} addTypename={false}>\n-        <BrowserRouter>\n-          <ProcessDetailsPage {...props} />\n-        </BrowserRouter>\n-      </MockedProvider>,\n-      'ProcessDetailsPage'\n-    );\n-    wrapper\n-      .find('#abort-button')\n-      .first()\n-      .simulate('click');\n-    wrapper.update();\n-    expect(setTitle).toHaveBeenCalled();\n+  describe('abort button click', () => {\n+    it('on successfull abort', async () => {\n+      mockedAxios.delete.mockResolvedValue({});\n+      const wrapper = await getWrapperAsync(\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <BrowserRouter>\n+            <ProcessDetailsPage {...props} />\n+          </BrowserRouter>\n+        </MockedProvider>,\n+        'ProcessDetailsPage'\n+      );\n+      const handleAbortSpy = jest.spyOn(Utils, 'handleAbort');\n+      await act(async () => {\n+        wrapper\n+          .find(Button)\n+          .find('button')\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0NzAxMg=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODUwNDgzOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODoyNTozNFrOGvG6MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToyOToxNFrOGvJNtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0OTQ1Ng==", "bodyText": "please consider if snapshot tests are needed everywhere. If not, please remove, if yes, try to limit the size of snapshots - by using find() and testing just the portion of snapshot that is interesting to us.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452049456", "createdAt": "2020-07-09T08:25:34Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "diffHunk": "@@ -1,22 +1,517 @@\n import React from 'react';\n import ProcessListPage from '../ProcessListPage';\n-import { getWrapper } from '@kogito-apps/common';\n-import { MemoryRouter as Router } from 'react-router-dom';\n+import { GraphQL, getWrapperAsync } from '@kogito-apps/common';\n import { MockedProvider } from '@apollo/react-testing';\n-\n-jest.mock('../../../Molecules/ProcessListToolbar/ProcessListToolbar');\n+import { BrowserRouter } from 'react-router-dom';\n+import { Button, EmptyStateBody, EmptyState } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n jest.mock('../../../Organisms/ProcessListTable/ProcessListTable');\n+jest.mock('../../../Atoms/ProcessListBulkInstances/ProcessListBulkInstances');\n+jest.mock('../../../Atoms/ProcessListModal/ProcessListModal');\n+\n+const routeComponentPropsMock1 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock2 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: ['MQQ640']\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock3 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const mocks1 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: null,\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: GraphQL.ProcessInstanceState.Active,\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n \n+const mocks2 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: [{ businessKey: { like: 'MQQ640' } }]\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: 'MQQ640',\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: 'ACTIVE',\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: ['rr'],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n+\n+const mocks5 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks4 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: ['wwrr']\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n describe('ProcessListPage component tests', () => {\n-  it('Snapshot tests', () => {\n-    const wrapper = getWrapper(\n-      <Router>\n-        <MockedProvider>\n-          <ProcessListPage />\n+  /* tslint:disable */\n+  it('on FilterClick tests- without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['id']\n+    ).toEqual(mocks1[0].result.data.ProcessInstances[0].id);\n+    expect(wrapper).toMatchSnapshot();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 416}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4NzIyMw==", "bodyText": "removing the snapshot becaue we can chec what is really returned fro the query .. and snapshot does not really make any change there.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452087223", "createdAt": "2020-07-09T09:29:14Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "diffHunk": "@@ -1,22 +1,517 @@\n import React from 'react';\n import ProcessListPage from '../ProcessListPage';\n-import { getWrapper } from '@kogito-apps/common';\n-import { MemoryRouter as Router } from 'react-router-dom';\n+import { GraphQL, getWrapperAsync } from '@kogito-apps/common';\n import { MockedProvider } from '@apollo/react-testing';\n-\n-jest.mock('../../../Molecules/ProcessListToolbar/ProcessListToolbar');\n+import { BrowserRouter } from 'react-router-dom';\n+import { Button, EmptyStateBody, EmptyState } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n jest.mock('../../../Organisms/ProcessListTable/ProcessListTable');\n+jest.mock('../../../Atoms/ProcessListBulkInstances/ProcessListBulkInstances');\n+jest.mock('../../../Atoms/ProcessListModal/ProcessListModal');\n+\n+const routeComponentPropsMock1 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock2 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: ['MQQ640']\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock3 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const mocks1 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: null,\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: GraphQL.ProcessInstanceState.Active,\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n \n+const mocks2 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: [{ businessKey: { like: 'MQQ640' } }]\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: 'MQQ640',\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: 'ACTIVE',\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: ['rr'],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n+\n+const mocks5 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks4 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: ['wwrr']\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n describe('ProcessListPage component tests', () => {\n-  it('Snapshot tests', () => {\n-    const wrapper = getWrapper(\n-      <Router>\n-        <MockedProvider>\n-          <ProcessListPage />\n+  /* tslint:disable */\n+  it('on FilterClick tests- without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['id']\n+    ).toEqual(mocks1[0].result.data.ProcessInstances[0].id);\n+    expect(wrapper).toMatchSnapshot();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0OTQ1Ng=="}, "originalCommit": {"oid": "86990534a482a2d410e8c5f103038a1b79ae10c5"}, "originalPosition": 416}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODk2NjA0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDozMTo0MlrOGvLWGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyMToxNVrOGvMzzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMjEzOA==", "bodyText": "probably a leftover?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452122138", "createdAt": "2020-07-09T10:31:42Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,717 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find(DataListContent);\n     expect(wrapper).toMatchSnapshot();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .contains('This process has no related sub processes')\n+    ).toBeTruthy();\n+  });\n+\n+  it('snapshot tests with child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks1} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props1} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('ProcessListTableItems');\n+    expect(\n+      wrapper\n+        .find(DataListContent)\n+        .at(1)\n+        .props()['id']\n+    ).toEqual(\n+      'kie-datalist-expand-' + mocks1[0].result.data.ProcessInstances[0].id\n+    );\n+  });\n+\n+  it('snapshot tests with error in query', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks3} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n   });\n-  it('snapshot tests with child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props1} />);\n+\n+  it('snapshot tests with an error(status) process instance', async () => {\n+    let wrapper = getWrapper(\n+      <BrowserRouter>\n+        <ProcessListTableItems {...props3} />\n+      </BrowserRouter>,\n+      'ProcessListTableItems'\n+    );\n+    wrapper = wrapper.find('ErrorPopover');\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('ProcessList toggle check', async () => {\n-    const wrapper = mount(\n-      <MockedProvider mocks={mocks} addTypename={false}>\n+\n+  it('snapshot tests with disabled popup', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n         <BrowserRouter>\n-          <ProcessListTableItems {...props} />\n+          <ProcessListTableItems {...props4} />\n         </BrowserRouter>\n-      </MockedProvider>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('DisablePopup');\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+\n+  describe('Skip click tests', () => {\n+    const handleSkipSpy = jest.spyOn(Utils, 'handleSkip');\n+    it('Skip button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(1)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleSkipSpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' was successfully skipped.'\n+      );\n+    });\n+    it('Skip button click failure ', async () => {\n+      mockedAxios.post.mockRejectedValue({ message: '404 error' });\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(1)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleSkipSpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' failed to skip. Message: \"404 error\"'\n+      );\n+    });\n+  });\n+\n+  describe('Retry click tests', () => {\n+    const handleRetrySpy = jest.spyOn(Utils, 'handleRetry');\n+    it('Retry button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(0)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleRetrySpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' was successfully re-executed.'\n+      );\n+    });\n+    it('Retry button click failure ', async () => {\n+      mockedAxios.post.mockRejectedValue({ message: '404 error' });\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(0)\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 1223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NjEyNA==", "bodyText": "removed sorry :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452146124", "createdAt": "2020-07-09T11:21:15Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/ProcessListTableItems.test.tsx", "diffHunk": "@@ -331,104 +373,717 @@ const props1 = {\n             enter: '2019-10-22T04:43:01.144Z',\n             exit: '2019-10-22T04:43:01.144Z',\n             type: 'EndNode'\n-          },\n-          {\n-            nodeId: '2',\n-            name: 'Book flight',\n-            definitionId: 'ServiceTask_1',\n-            id: '2f588da5-a323-4111-9017-3093ef9319d1',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'WorkItemNode'\n-          },\n-          {\n-            nodeId: '3',\n-            name: 'StartProcess',\n-            definitionId: 'StartEvent_1',\n-            id: '6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2',\n-            enter: '2019-10-22T04:43:01.144Z',\n-            exit: '2019-10-22T04:43:01.144Z',\n-            type: 'StartNode'\n           }\n         ],\n         childProcessInstances: []\n       }\n     ]\n   },\n+  initData: initData1,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {},\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 0,\n+  setSelectedNumber: jest.fn()\n+};\n \n+const props2 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Active], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Active,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    lastUpdate: '2019-12-25T03:40:44.089Z',\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n   initData: initData1,\n   setInitData: jest.fn(),\n   setAbortedObj: jest.fn(),\n-  abortedObj: { '8035b580-6ae4-4aa8-9ec0-e18e19809e0b': 'travels' },\n+  abortedObj: {},\n   loadingInitData: false,\n   setIsAllChecked: jest.fn(),\n   selectedNumber: 0,\n   setSelectedNumber: jest.fn()\n };\n \n-const mocks = [\n+const props3 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props4 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    endpoint: null,\n+    serviceUrl: null,\n+    addons: [],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData2,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1': {\n+      id: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props5 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'flightBooking',\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    isChecked: true,\n+    lastUpdate: '2019-10-22T03:40:44.089Z',\n+    processName: 'FlightBooking',\n+    rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b',\n+    roles: [],\n+    state: ProcessInstanceState.Completed,\n+    endpoint: 'http://localhost:4000',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: '2019-10-22T03:40:44.089Z',\n+    serviceUrl: '2019-10-22T03:40:44.089Z',\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'End Event 1',\n+        definitionId: 'EndEvent_1',\n+        id: '7244ba1b-75ec-4789-8c65-499a0c5b1a6f',\n+        enter: '2019-10-22T04:43:01.144Z',\n+        exit: '2019-10-22T04:43:01.144Z',\n+        type: 'EndNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData3,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props6 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData4,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const props7 = {\n+  id: 0,\n+  filters: { status: [ProcessInstanceState.Error], businessKey: [] },\n+  processInstanceData: {\n+    id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+    processId: 'travels',\n+    businessKey: null,\n+    parentProcessInstanceId: null,\n+    parentProcessInstance: null,\n+    processName: 'travels1',\n+    roles: [],\n+    state: ProcessInstanceState.Error,\n+    rootProcessInstanceId: null,\n+    serviceUrl: 'http://localhost:4000',\n+    endpoint: 'http://localhost:4000/',\n+    addons: ['process-management'],\n+    error: {\n+      nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+      message: 'Something went wrong'\n+    },\n+    start: null,\n+    lastUpdate: null,\n+    end: null,\n+    variables:\n+      '{\"flight\":{\"arrival\":\"2019-10-30T22:00:00Z[UTC]\",\"departure\":\"2019-10-22T22:00:00Z[UTC]\",\"flightNumber\":\"MX555\"},\"hotel\":{\"address\":{\"city\":\"Berlin\",\"country\":\"Germany\",\"street\":\"street\",\"zipCode\":\"12345\"},\"bookingNumber\":\"XX-012345\",\"name\":\"Perfect hotel\",\"phone\":\"09876543\"},\"trip\":{\"begin\":\"2019-10-22T22:00:00Z[UTC]\",\"city\":\"Berlin\",\"country\":\"Germany\",\"end\":\"2019-10-30T22:00:00Z[UTC]\",\"visaRequired\":false},\"traveller\":{\"address\":{\"city\":\"Karkow\",\"country\":\"Poland\",\"street\":\"palna\",\"zipCode\":\"200300\"},\"email\":\"rob@redhat.com\",\"firstName\":\"Rob\",\"lastName\":\"Rob\",\"nationality\":\"Polish\"}}',\n+    nodes: [\n+      {\n+        nodeId: '1',\n+        name: 'Book Flight',\n+        definitionId: 'CallActivity_2',\n+        id: '7cdeba99-cd36-4425-980d-e59d44769a3e',\n+        enter: '2019-10-22T04:43:01.143Z',\n+        exit: '2019-10-22T04:43:01.146Z',\n+        type: 'SubProcessNode'\n+      }\n+    ],\n+    childProcessInstances: []\n+  },\n+  initData: initData5,\n+  setInitData: jest.fn(),\n+  setAbortedObj: jest.fn(),\n+  abortedObj: {\n+    'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e': {\n+      id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+    }\n+  },\n+  loadingInitData: false,\n+  setIsAllChecked: jest.fn(),\n+  selectedNumber: 1,\n+  setSelectedNumber: jest.fn()\n+};\n+\n+const mocks1 = [\n   {\n     request: {\n       query: GetChildInstancesDocument,\n       variables: {\n-        rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e'\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n       }\n     },\n     result: {\n       data: {\n         ProcessInstances: [\n           {\n-            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21eabc',\n-            processId: 'Travels',\n-            processName: 'travels',\n-            parentProcessInstanceId: null,\n-            rootProcessInstanceId: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            id: 'c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e',\n+            processId: 'flightBooking',\n+            businessKey: null,\n+            parentProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n+            processName: 'FlightBooking',\n+            rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1',\n             roles: [],\n-            state: ProcessInstanceState.Active,\n-            start: '2019-10-22T03:40:44.089Z',\n-            lastUpdate: '2019-10-22T03:40:44.089Z',\n+            state: ProcessInstanceState.Completed,\n             serviceUrl: 'http://localhost:4000',\n             addons: ['process-management'],\n-            businessKey: null,\n             error: {\n-              nodeDefinitionId: 'a1e139d5-4e77-48c9-84ae-3459188e90433n',\n+              nodeDefinitionId: 'a1e139d5-81c77-48c9-84ae-34578e90433n',\n               message: 'Something went wrong'\n-            }\n+            },\n+            start: '2019-10-22T03:40:44.089Z',\n+            lastUpdate: '2019-10-22T05:40:44.089Z'\n           }\n         ]\n       }\n     }\n   }\n ];\n-/* tslint:disable */\n-const waitForComponentToRender = async (wrapper: any) => {\n-  await act(async () => {\n-    await new Promise(resolve => setTimeout(resolve, 2));\n-    wrapper.update();\n-  });\n-};\n+\n+const mocks2 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GetChildInstancesDocument,\n+      variables: {\n+        rootProcessInstanceId: '8035b580-6ae4-4aa8-9ec0-e18e19809e0b1'\n+      }\n+    },\n+    error: new Error('some error occured')\n+  }\n+];\n \n describe('ProcessListTableItems component tests', () => {\n-  it('snapshot tests for no child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props} />);\n+  it('snapshot tests for no child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find(DataListContent);\n     expect(wrapper).toMatchSnapshot();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .contains('This process has no related sub processes')\n+    ).toBeTruthy();\n+  });\n+\n+  it('snapshot tests with child instances', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks1} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props1} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('ProcessListTableItems');\n+    expect(\n+      wrapper\n+        .find(DataListContent)\n+        .at(1)\n+        .props()['id']\n+    ).toEqual(\n+      'kie-datalist-expand-' + mocks1[0].result.data.ProcessInstances[0].id\n+    );\n+  });\n+\n+  it('snapshot tests with error in query', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks3} addTypename={false}>\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props2} />\n+        </BrowserRouter>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n   });\n-  it('snapshot tests with child instances', () => {\n-    const wrapper = shallow(<ProcessListTableItems {...props1} />);\n+\n+  it('snapshot tests with an error(status) process instance', async () => {\n+    let wrapper = getWrapper(\n+      <BrowserRouter>\n+        <ProcessListTableItems {...props3} />\n+      </BrowserRouter>,\n+      'ProcessListTableItems'\n+    );\n+    wrapper = wrapper.find('ErrorPopover');\n     expect(wrapper).toMatchSnapshot();\n   });\n-  it('ProcessList toggle check', async () => {\n-    const wrapper = mount(\n-      <MockedProvider mocks={mocks} addTypename={false}>\n+\n+  it('snapshot tests with disabled popup', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <MockedProvider mocks={mocks2} addTypename={false}>\n         <BrowserRouter>\n-          <ProcessListTableItems {...props} />\n+          <ProcessListTableItems {...props4} />\n         </BrowserRouter>\n-      </MockedProvider>\n+      </MockedProvider>,\n+      'ProcessListTableItems'\n+    );\n+    await act(async () => {\n+      wrapper.find(DataListToggle).simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('DisablePopup');\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+\n+  describe('Skip click tests', () => {\n+    const handleSkipSpy = jest.spyOn(Utils, 'handleSkip');\n+    it('Skip button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(1)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleSkipSpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' was successfully skipped.'\n+      );\n+    });\n+    it('Skip button click failure ', async () => {\n+      mockedAxios.post.mockRejectedValue({ message: '404 error' });\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(1)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleSkipSpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' failed to skip. Message: \"404 error\"'\n+      );\n+    });\n+  });\n+\n+  describe('Retry click tests', () => {\n+    const handleRetrySpy = jest.spyOn(Utils, 'handleRetry');\n+    it('Retry button click success ', async () => {\n+      mockedAxios.post.mockResolvedValue({});\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(0)\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      expect(handleRetrySpy).toHaveBeenCalled();\n+      expect(\n+        wrapper\n+          .find('MockedProcessListModal')\n+          .at(0)\n+          .props()['modalContent']\n+      ).toEqual(\n+        'The process ' +\n+          props3.processInstanceData.processName +\n+          ' was successfully re-executed.'\n+      );\n+    });\n+    it('Retry button click failure ', async () => {\n+      mockedAxios.post.mockRejectedValue({ message: '404 error' });\n+      let wrapper = getWrapper(\n+        <BrowserRouter>\n+          <ProcessListTableItems {...props3} />\n+        </BrowserRouter>,\n+        'ProcessListTableItems'\n+      );\n+      await act(async () => {\n+        wrapper\n+          .find(DataListItemRow)\n+          .find(Dropdown)\n+          .find(KebabToggle)\n+          .find('button')\n+          .simulate('click');\n+      });\n+      wrapper = wrapper.update();\n+      await act(async () => {\n+        wrapper\n+          .find(DropdownItem)\n+          .at(0)\n+          .simulate('click');\n+        await wait(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMjEzOA=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 1223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODk3MzgxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDozNDoxMFrOGvLa6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyMjo0NFrOGvM2bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMzM3MA==", "bodyText": "can we mock the icon here?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452123370", "createdAt": "2020-07-09T10:34:10Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,531 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n-      Object {\n-        \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\": Object {\n-          \"addons\": Array [],\n-          \"childProcessInstances\": Array [],\n-          \"end\": \"2019-10-22T05:40:44.089Z\",\n-          \"endpoint\": \"http://localhost:4000\",\n-          \"error\": Object {\n-            \"message\": \"Something went wrong\",\n-            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-          },\n-          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-          \"isChecked\": false,\n-          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-          \"nodes\": Array [\n-            Object {\n-              \"definitionId\": \"EndEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-              \"name\": \"End Event 1\",\n-              \"nodeId\": \"1\",\n-              \"type\": \"EndNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"ServiceTask_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-              \"name\": \"Book flight\",\n-              \"nodeId\": \"2\",\n-              \"type\": \"WorkItemNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"StartEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-              \"name\": \"StartProcess\",\n-              \"nodeId\": \"3\",\n-              \"type\": \"StartNode\",\n-            },\n-          ],\n-          \"parentProcessInstance\": null,\n-          \"parentProcessInstanceId\": null,\n-          \"processId\": \"flightBooking\",\n-          \"processName\": \"FlightBooking\",\n-          \"roles\": Array [],\n-          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-          \"start\": \"2019-10-22T03:40:44.089Z\",\n-          \"state\": \"COMPLETED\",\n-          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n+<DataListContent\n+  aria-label=\"Primary Content Details\"\n+  className=\"kogito-management-console__embedded-list pf-m-compact\"\n+  id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  isHidden={false}\n+  key=\".1\"\n+  rowid=\"kie-datalist-item-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+>\n+  <section\n+    aria-label=\"Primary Content Details\"\n+    className=\"pf-c-data-list__expandable-content kogito-management-console__embedded-list pf-m-compact\"\n+    hidden={false}\n+    id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  >\n+    <div\n+      className=\"pf-c-data-list__expandable-content-body\"\n+    >\n+      <Component\n+        body=\"This process has no related sub processes\"\n+        key=\"0\"\n+        title=\"No child process instances\"\n+        type={3}\n+      >\n+        <Bullseye>\n+          <div\n+            className=\"pf-l-bullseye\"\n+          >\n+            <EmptyState\n+              variant=\"full\"\n+            >\n+              <div\n+                className=\"pf-c-empty-state\"\n+              >\n+                <EmptyStateIcon\n+                  color=\"var(--pf-global--info-color--100)\"\n+                  icon={[Function]}\n+                  size=\"sm\"\n+                >\n+                  <InfoCircleIcon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0Njc5OA==", "bodyText": "mocked", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452146798", "createdAt": "2020-07-09T11:22:44Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,531 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n-      Object {\n-        \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\": Object {\n-          \"addons\": Array [],\n-          \"childProcessInstances\": Array [],\n-          \"end\": \"2019-10-22T05:40:44.089Z\",\n-          \"endpoint\": \"http://localhost:4000\",\n-          \"error\": Object {\n-            \"message\": \"Something went wrong\",\n-            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-          },\n-          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-          \"isChecked\": false,\n-          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-          \"nodes\": Array [\n-            Object {\n-              \"definitionId\": \"EndEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-              \"name\": \"End Event 1\",\n-              \"nodeId\": \"1\",\n-              \"type\": \"EndNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"ServiceTask_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-              \"name\": \"Book flight\",\n-              \"nodeId\": \"2\",\n-              \"type\": \"WorkItemNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"StartEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-              \"name\": \"StartProcess\",\n-              \"nodeId\": \"3\",\n-              \"type\": \"StartNode\",\n-            },\n-          ],\n-          \"parentProcessInstance\": null,\n-          \"parentProcessInstanceId\": null,\n-          \"processId\": \"flightBooking\",\n-          \"processName\": \"FlightBooking\",\n-          \"roles\": Array [],\n-          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-          \"start\": \"2019-10-22T03:40:44.089Z\",\n-          \"state\": \"COMPLETED\",\n-          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n+<DataListContent\n+  aria-label=\"Primary Content Details\"\n+  className=\"kogito-management-console__embedded-list pf-m-compact\"\n+  id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  isHidden={false}\n+  key=\".1\"\n+  rowid=\"kie-datalist-item-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+>\n+  <section\n+    aria-label=\"Primary Content Details\"\n+    className=\"pf-c-data-list__expandable-content kogito-management-console__embedded-list pf-m-compact\"\n+    hidden={false}\n+    id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  >\n+    <div\n+      className=\"pf-c-data-list__expandable-content-body\"\n+    >\n+      <Component\n+        body=\"This process has no related sub processes\"\n+        key=\"0\"\n+        title=\"No child process instances\"\n+        type={3}\n+      >\n+        <Bullseye>\n+          <div\n+            className=\"pf-l-bullseye\"\n+          >\n+            <EmptyState\n+              variant=\"full\"\n+            >\n+              <div\n+                className=\"pf-c-empty-state\"\n+              >\n+                <EmptyStateIcon\n+                  color=\"var(--pf-global--info-color--100)\"\n+                  icon={[Function]}\n+                  size=\"sm\"\n+                >\n+                  <InfoCircleIcon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMzM3MA=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODk3NTE4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDozNDozNVrOGvLbug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyMzowM1rOGvM2_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMzU3OA==", "bodyText": "can we mock this icon?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452123578", "createdAt": "2020-07-09T10:34:35Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,531 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n-      Object {\n-        \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\": Object {\n-          \"addons\": Array [],\n-          \"childProcessInstances\": Array [],\n-          \"end\": \"2019-10-22T05:40:44.089Z\",\n-          \"endpoint\": \"http://localhost:4000\",\n-          \"error\": Object {\n-            \"message\": \"Something went wrong\",\n-            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-          },\n-          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-          \"isChecked\": false,\n-          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-          \"nodes\": Array [\n-            Object {\n-              \"definitionId\": \"EndEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-              \"name\": \"End Event 1\",\n-              \"nodeId\": \"1\",\n-              \"type\": \"EndNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"ServiceTask_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-              \"name\": \"Book flight\",\n-              \"nodeId\": \"2\",\n-              \"type\": \"WorkItemNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"StartEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-              \"name\": \"StartProcess\",\n-              \"nodeId\": \"3\",\n-              \"type\": \"StartNode\",\n-            },\n-          ],\n-          \"parentProcessInstance\": null,\n-          \"parentProcessInstanceId\": null,\n-          \"processId\": \"flightBooking\",\n-          \"processName\": \"FlightBooking\",\n-          \"roles\": Array [],\n-          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-          \"start\": \"2019-10-22T03:40:44.089Z\",\n-          \"state\": \"COMPLETED\",\n-          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n+<DataListContent\n+  aria-label=\"Primary Content Details\"\n+  className=\"kogito-management-console__embedded-list pf-m-compact\"\n+  id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  isHidden={false}\n+  key=\".1\"\n+  rowid=\"kie-datalist-item-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+>\n+  <section\n+    aria-label=\"Primary Content Details\"\n+    className=\"pf-c-data-list__expandable-content kogito-management-console__embedded-list pf-m-compact\"\n+    hidden={false}\n+    id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  >\n+    <div\n+      className=\"pf-c-data-list__expandable-content-body\"\n+    >\n+      <Component\n+        body=\"This process has no related sub processes\"\n+        key=\"0\"\n+        title=\"No child process instances\"\n+        type={3}\n+      >\n+        <Bullseye>\n+          <div\n+            className=\"pf-l-bullseye\"\n+          >\n+            <EmptyState\n+              variant=\"full\"\n+            >\n+              <div\n+                className=\"pf-c-empty-state\"\n+              >\n+                <EmptyStateIcon\n+                  color=\"var(--pf-global--info-color--100)\"\n+                  icon={[Function]}\n+                  size=\"sm\"\n+                >\n+                  <InfoCircleIcon\n+                    aria-hidden=\"true\"\n+                    className=\"pf-c-empty-state__icon\"\n+                    color=\"var(--pf-global--info-color--100)\"\n+                    noVerticalAlign={false}\n+                    size=\"sm\"\n+                    title={null}\n+                  >\n+                    <svg\n+                      aria-hidden=\"true\"\n+                      aria-labelledby={null}\n+                      className=\"pf-c-empty-state__icon\"\n+                      fill=\"var(--pf-global--info-color--100)\"\n+                      height=\"1em\"\n+                      role=\"img\"\n+                      style={\n+                        Object {\n+                          \"verticalAlign\": \"-0.125em\",\n+                        }\n+                      }\n+                      viewBox=\"0 0 512 512\"\n+                      width=\"1em\"\n+                    >\n+                      <path\n+                        d=\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"\n+                        transform=\"\"\n+                      />\n+                    </svg>\n+                  </InfoCircleIcon>\n+                </EmptyStateIcon>\n+                <Title\n+                  headingLevel=\"h5\"\n+                  size=\"lg\"\n+                >\n+                  <h5\n+                    className=\"pf-c-title pf-m-lg\"\n+                  >\n+                    No child process instances\n+                  </h5>\n+                </Title>\n+                <EmptyStateBody>\n+                  <div\n+                    className=\"pf-c-empty-state__body\"\n+                  >\n+                    This process has no related sub processes\n+                  </div>\n+                </EmptyStateBody>\n+              </div>\n+            </EmptyState>\n+          </div>\n+        </Bullseye>\n+      </Component>\n+    </div>\n+  </section>\n+</DataListContent>\n+`;\n+\n+exports[`ProcessListTableItems component tests snapshot tests with an error(status) process instance 1`] = `\n+<ErrorPopover\n+  onRetryClick={[Function]}\n+  onSkipClick={[Function]}\n+  processInstanceData={\n+    Object {\n+      \"addons\": Array [\n+        \"process-management\",\n+      ],\n+      \"businessKey\": null,\n+      \"childProcessInstances\": Array [],\n+      \"end\": null,\n+      \"endpoint\": \"http://localhost:4000/\",\n+      \"error\": Object {\n+        \"message\": \"Something went wrong\",\n+        \"nodeDefinitionId\": \"a1e139d5-4e77-48c9-84ae-3459188e90433n\",\n+      },\n+      \"id\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\",\n+      \"lastUpdate\": null,\n+      \"nodes\": Array [\n+        Object {\n+          \"definitionId\": \"CallActivity_2\",\n+          \"enter\": \"2019-10-22T04:43:01.143Z\",\n+          \"exit\": \"2019-10-22T04:43:01.146Z\",\n+          \"id\": \"7cdeba99-cd36-4425-980d-e59d44769a3e\",\n+          \"name\": \"Book Flight\",\n+          \"nodeId\": \"1\",\n+          \"type\": \"SubProcessNode\",\n         },\n-      }\n+      ],\n+      \"parentProcessInstance\": null,\n+      \"parentProcessInstanceId\": null,\n+      \"processId\": \"travels\",\n+      \"processName\": \"travels1\",\n+      \"roles\": Array [],\n+      \"rootProcessInstanceId\": null,\n+      \"serviceUrl\": \"http://localhost:4000\",\n+      \"start\": null,\n+      \"state\": \"ERROR\",\n+      \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"hotel\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"street\\\\\":\\\\\"street\\\\\",\\\\\"zipCode\\\\\":\\\\\"12345\\\\\"},\\\\\"bookingNumber\\\\\":\\\\\"XX-012345\\\\\",\\\\\"name\\\\\":\\\\\"Perfect hotel\\\\\",\\\\\"phone\\\\\":\\\\\"09876543\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n     }\n-    checkedArray={\n+  }\n+>\n+  <Popover\n+    appendTo={[Function]}\n+    aria-label=\"\"\n+    bodyContent={\n+      <div>\n+        Something went wrong\n+      </div>\n+    }\n+    boundary=\"window\"\n+    className=\"\"\n+    closeBtnAriaLabel=\"Close\"\n+    distance={25}\n+    enableFlip={true}\n+    flipBehavior={\n       Array [\n-        \"ACTIVE\",\n+        \"top\",\n+        \"right\",\n+        \"bottom\",\n+        \"left\",\n+        \"top\",\n+        \"right\",\n+        \"bottom\",\n       ]\n     }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={true}\n-  />\n-  <ProcessListModal\n-    checkedArray={\n+    footerContent={\n       Array [\n-        \"COMPLETED\",\n+        <Unknown\n+          className=\"pf-u-mr-sm\"\n+          id=\"skip-button\"\n+          onClick={[Function]}\n+          variant=\"secondary\"\n+        >\n+          Skip\n+        </Unknown>,\n+        <Unknown\n+          className=\"pf-u-mr-sm\"\n+          id=\"retry-button\"\n+          onClick={[Function]}\n+          variant=\"secondary\"\n+        >\n+          Retry\n+        </Unknown>,\n       ]\n     }\n-    handleModalToggle={[Function]}\n-    isModalOpen={false}\n-    modalContent=\"\"\n-  />\n-  <DataListItem\n-    aria-labelledby=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-    isExpanded={false}\n+    headerContent={\n+      <div>\n+        Process error\n+      </div>\n+    }\n+    hideOnOutsideClick={true}\n+    isVisible={null}\n+    maxWidth=\"calc(2rem + 18.75rem)\"\n+    onHidden={[Function]}\n+    onHide={[Function]}\n+    onMount={[Function]}\n+    onShow={[Function]}\n+    onShown={[Function]}\n+    position=\"auto\"\n+    shouldClose={[Function]}\n+    tippyProps={Object {}}\n+    zIndex={300}\n   >\n-    <DataListItemRow>\n-      <DataListToggle\n-        aria-controls=\"kie-datalist-expand\"\n-        id=\"kie-datalist-toggle-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-        isExpanded={false}\n-        onClick={[Function]}\n-      />\n-      <DisablePopup\n-        component={\n-          <DataListCheck\n-            aria-labelledby=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-            isDisabled={true}\n-          />\n-        }\n-        processInstanceData={\n-          Object {\n-            \"addons\": Array [],\n-            \"childProcessInstances\": Array [],\n-            \"end\": \"2019-10-22T05:40:44.089Z\",\n-            \"endpoint\": \"http://localhost:4000\",\n-            \"error\": Object {\n-              \"message\": \"Something went wrong\",\n-              \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n+    <PopoverBase\n+      appendTo={[Function]}\n+      arrow={true}\n+      boundary=\"window\"\n+      content={<React.Fragment />}\n+      distance={25}\n+      flip={true}\n+      flipBehavior={\n+        Array [\n+          \"top\",\n+          \"right\",\n+          \"bottom\",\n+          \"left\",\n+          \"top\",\n+          \"right\",\n+          \"bottom\",\n+        ]\n+      }\n+      hideOnClick={true}\n+      interactive={true}\n+      interactiveBorder={0}\n+      isVisible={null}\n+      lazy={true}\n+      maxWidth=\"calc(2rem + 18.75rem)\"\n+      onCreate={[Function]}\n+      onHidden={[Function]}\n+      onHide={[Function]}\n+      onMount={[Function]}\n+      onShow={[Function]}\n+      onShown={[Function]}\n+      placement=\"auto\"\n+      popperOptions={\n+        Object {\n+          \"modifiers\": Object {\n+            \"hide\": Object {\n+              \"enabled\": true,\n             },\n-            \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-            \"isChecked\": false,\n-            \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-            \"nodes\": Array [\n-              Object {\n-                \"definitionId\": \"EndEvent_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-                \"name\": \"End Event 1\",\n-                \"nodeId\": \"1\",\n-                \"type\": \"EndNode\",\n-              },\n-              Object {\n-                \"definitionId\": \"ServiceTask_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-                \"name\": \"Book flight\",\n-                \"nodeId\": \"2\",\n-                \"type\": \"WorkItemNode\",\n-              },\n-              Object {\n-                \"definitionId\": \"StartEvent_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-                \"name\": \"StartProcess\",\n-                \"nodeId\": \"3\",\n-                \"type\": \"StartNode\",\n-              },\n-            ],\n-            \"parentProcessInstance\": null,\n-            \"parentProcessInstanceId\": null,\n-            \"processId\": \"flightBooking\",\n-            \"processName\": \"FlightBooking\",\n-            \"roles\": Array [],\n-            \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-            \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-            \"start\": \"2019-10-22T03:40:44.089Z\",\n-            \"state\": \"COMPLETED\",\n-            \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n-          }\n+            \"preventOverflow\": Object {\n+              \"enabled\": true,\n+            },\n+          },\n         }\n-      />\n-      <DataListItemCells\n-        dataListCells={\n-          Array [\n-            <DataListCell\n-              id=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-            >\n-              <Link\n-                to=\"/Process/c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-              >\n-                <div>\n-                  <strong>\n-                    <ProcessDescriptor\n-                      processInstanceData={\n-                        Object {\n-                          \"addons\": Array [],\n-                          \"childProcessInstances\": Array [],\n-                          \"end\": \"2019-10-22T05:40:44.089Z\",\n-                          \"endpoint\": \"http://localhost:4000\",\n-                          \"error\": Object {\n-                            \"message\": \"Something went wrong\",\n-                            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-                          },\n-                          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-                          \"isChecked\": false,\n-                          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-                          \"nodes\": Array [\n-                            Object {\n-                              \"definitionId\": \"EndEvent_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-                              \"name\": \"End Event 1\",\n-                              \"nodeId\": \"1\",\n-                              \"type\": \"EndNode\",\n-                            },\n-                            Object {\n-                              \"definitionId\": \"ServiceTask_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-                              \"name\": \"Book flight\",\n-                              \"nodeId\": \"2\",\n-                              \"type\": \"WorkItemNode\",\n-                            },\n-                            Object {\n-                              \"definitionId\": \"StartEvent_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-                              \"name\": \"StartProcess\",\n-                              \"nodeId\": \"3\",\n-                              \"type\": \"StartNode\",\n-                            },\n-                          ],\n-                          \"parentProcessInstance\": null,\n-                          \"parentProcessInstanceId\": null,\n-                          \"processId\": \"flightBooking\",\n-                          \"processName\": \"FlightBooking\",\n-                          \"roles\": Array [],\n-                          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-                          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-                          \"start\": \"2019-10-22T03:40:44.089Z\",\n-                          \"state\": \"COMPLETED\",\n-                          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n-                        }\n-                      }\n-                    />\n-                  </strong>\n-                </div>\n-              </Link>\n-              <EndpointLink\n-                isLinkShown={false}\n-                serviceUrl=\"2019-10-22T03:40:44.089Z\"\n-              />\n-            </DataListCell>,\n-            <DataListCell>\n-              <React.Fragment>\n-                <CheckCircleIcon\n+      }\n+      theme=\"pf-popover\"\n+      trigger=\"click\"\n+      zIndex={300}\n+    >\n+      <Component\n+        isInline={true}\n+        variant=\"link\"\n+      >\n+        <ComponentWithOuia\n+          component={[Function]}\n+          componentProps={\n+            Object {\n+              \"children\": <React.Fragment>\n+                <ErrorCircleOIcon\n                   className=\"pf-u-mr-sm\"\n-                  color=\"var(--pf-global--success-color--100)\"\n+                  color=\"var(--pf-global--danger-color--100)\"\n                   noVerticalAlign={false}\n                   size=\"sm\"\n                   title={null}\n                 />\n-                Completed\n-              </React.Fragment>\n-            </DataListCell>,\n-            <DataListCell>\n-              <t\n-                ago={false}\n-                calendar={false}\n-                decimal={false}\n-                element={null}\n-                filter={[Function]}\n-                fromNow={true}\n-                interval={60000}\n-                local={false}\n-                onChange={[Function]}\n-                titleFormat=\"\"\n-                toNow={false}\n-                unit={null}\n-                unix={false}\n-                utc={false}\n-                withTitle={false}\n+                Error\n+              </React.Fragment>,\n+              \"isInline\": true,\n+              \"variant\": \"link\",\n+            }\n+          }\n+          consumerContext={null}\n+        >\n+          <Button\n+            isInline={true}\n+            ouiaContext={\n+              Object {\n+                \"isOuia\": false,\n+                \"ouiaId\": null,\n+              }\n+            }\n+            variant=\"link\"\n+          >\n+            <button\n+              aria-disabled={null}\n+              aria-label={null}\n+              className=\"pf-c-button pf-m-link pf-m-inline\"\n+              disabled={false}\n+              tabIndex={null}\n+              type=\"button\"\n+            >\n+              <span\n+                className=\"pf-c-button__text\"\n               >\n-                2019-10-22T03:40:44.089Z\n-              </t>\n-            </DataListCell>,\n-            <DataListCell>\n-              <span>\n-                 \n-                <HistoryIcon\n+                <ErrorCircleOIcon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 543}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0Njk0MA==", "bodyText": "mocked", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452146940", "createdAt": "2020-07-09T11:23:03Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/tests/__snapshots__/ProcessListTableItems.test.tsx.snap", "diffHunk": "@@ -1,828 +1,531 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n exports[`ProcessListTableItems component tests snapshot tests for no child instances 1`] = `\n-<Fragment>\n-  <ProcessListModal\n-    abortedMessageObj={\n-      Object {\n-        \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\": Object {\n-          \"addons\": Array [],\n-          \"childProcessInstances\": Array [],\n-          \"end\": \"2019-10-22T05:40:44.089Z\",\n-          \"endpoint\": \"http://localhost:4000\",\n-          \"error\": Object {\n-            \"message\": \"Something went wrong\",\n-            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-          },\n-          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-          \"isChecked\": false,\n-          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-          \"nodes\": Array [\n-            Object {\n-              \"definitionId\": \"EndEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-              \"name\": \"End Event 1\",\n-              \"nodeId\": \"1\",\n-              \"type\": \"EndNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"ServiceTask_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-              \"name\": \"Book flight\",\n-              \"nodeId\": \"2\",\n-              \"type\": \"WorkItemNode\",\n-            },\n-            Object {\n-              \"definitionId\": \"StartEvent_1\",\n-              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-              \"name\": \"StartProcess\",\n-              \"nodeId\": \"3\",\n-              \"type\": \"StartNode\",\n-            },\n-          ],\n-          \"parentProcessInstance\": null,\n-          \"parentProcessInstanceId\": null,\n-          \"processId\": \"flightBooking\",\n-          \"processName\": \"FlightBooking\",\n-          \"roles\": Array [],\n-          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-          \"start\": \"2019-10-22T03:40:44.089Z\",\n-          \"state\": \"COMPLETED\",\n-          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n+<DataListContent\n+  aria-label=\"Primary Content Details\"\n+  className=\"kogito-management-console__embedded-list pf-m-compact\"\n+  id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  isHidden={false}\n+  key=\".1\"\n+  rowid=\"kie-datalist-item-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+>\n+  <section\n+    aria-label=\"Primary Content Details\"\n+    className=\"pf-c-data-list__expandable-content kogito-management-console__embedded-list pf-m-compact\"\n+    hidden={false}\n+    id=\"kie-datalist-expand-8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\"\n+  >\n+    <div\n+      className=\"pf-c-data-list__expandable-content-body\"\n+    >\n+      <Component\n+        body=\"This process has no related sub processes\"\n+        key=\"0\"\n+        title=\"No child process instances\"\n+        type={3}\n+      >\n+        <Bullseye>\n+          <div\n+            className=\"pf-l-bullseye\"\n+          >\n+            <EmptyState\n+              variant=\"full\"\n+            >\n+              <div\n+                className=\"pf-c-empty-state\"\n+              >\n+                <EmptyStateIcon\n+                  color=\"var(--pf-global--info-color--100)\"\n+                  icon={[Function]}\n+                  size=\"sm\"\n+                >\n+                  <InfoCircleIcon\n+                    aria-hidden=\"true\"\n+                    className=\"pf-c-empty-state__icon\"\n+                    color=\"var(--pf-global--info-color--100)\"\n+                    noVerticalAlign={false}\n+                    size=\"sm\"\n+                    title={null}\n+                  >\n+                    <svg\n+                      aria-hidden=\"true\"\n+                      aria-labelledby={null}\n+                      className=\"pf-c-empty-state__icon\"\n+                      fill=\"var(--pf-global--info-color--100)\"\n+                      height=\"1em\"\n+                      role=\"img\"\n+                      style={\n+                        Object {\n+                          \"verticalAlign\": \"-0.125em\",\n+                        }\n+                      }\n+                      viewBox=\"0 0 512 512\"\n+                      width=\"1em\"\n+                    >\n+                      <path\n+                        d=\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"\n+                        transform=\"\"\n+                      />\n+                    </svg>\n+                  </InfoCircleIcon>\n+                </EmptyStateIcon>\n+                <Title\n+                  headingLevel=\"h5\"\n+                  size=\"lg\"\n+                >\n+                  <h5\n+                    className=\"pf-c-title pf-m-lg\"\n+                  >\n+                    No child process instances\n+                  </h5>\n+                </Title>\n+                <EmptyStateBody>\n+                  <div\n+                    className=\"pf-c-empty-state__body\"\n+                  >\n+                    This process has no related sub processes\n+                  </div>\n+                </EmptyStateBody>\n+              </div>\n+            </EmptyState>\n+          </div>\n+        </Bullseye>\n+      </Component>\n+    </div>\n+  </section>\n+</DataListContent>\n+`;\n+\n+exports[`ProcessListTableItems component tests snapshot tests with an error(status) process instance 1`] = `\n+<ErrorPopover\n+  onRetryClick={[Function]}\n+  onSkipClick={[Function]}\n+  processInstanceData={\n+    Object {\n+      \"addons\": Array [\n+        \"process-management\",\n+      ],\n+      \"businessKey\": null,\n+      \"childProcessInstances\": Array [],\n+      \"end\": null,\n+      \"endpoint\": \"http://localhost:4000/\",\n+      \"error\": Object {\n+        \"message\": \"Something went wrong\",\n+        \"nodeDefinitionId\": \"a1e139d5-4e77-48c9-84ae-3459188e90433n\",\n+      },\n+      \"id\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b1\",\n+      \"lastUpdate\": null,\n+      \"nodes\": Array [\n+        Object {\n+          \"definitionId\": \"CallActivity_2\",\n+          \"enter\": \"2019-10-22T04:43:01.143Z\",\n+          \"exit\": \"2019-10-22T04:43:01.146Z\",\n+          \"id\": \"7cdeba99-cd36-4425-980d-e59d44769a3e\",\n+          \"name\": \"Book Flight\",\n+          \"nodeId\": \"1\",\n+          \"type\": \"SubProcessNode\",\n         },\n-      }\n+      ],\n+      \"parentProcessInstance\": null,\n+      \"parentProcessInstanceId\": null,\n+      \"processId\": \"travels\",\n+      \"processName\": \"travels1\",\n+      \"roles\": Array [],\n+      \"rootProcessInstanceId\": null,\n+      \"serviceUrl\": \"http://localhost:4000\",\n+      \"start\": null,\n+      \"state\": \"ERROR\",\n+      \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"hotel\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"street\\\\\":\\\\\"street\\\\\",\\\\\"zipCode\\\\\":\\\\\"12345\\\\\"},\\\\\"bookingNumber\\\\\":\\\\\"XX-012345\\\\\",\\\\\"name\\\\\":\\\\\"Perfect hotel\\\\\",\\\\\"phone\\\\\":\\\\\"09876543\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n     }\n-    checkedArray={\n+  }\n+>\n+  <Popover\n+    appendTo={[Function]}\n+    aria-label=\"\"\n+    bodyContent={\n+      <div>\n+        Something went wrong\n+      </div>\n+    }\n+    boundary=\"window\"\n+    className=\"\"\n+    closeBtnAriaLabel=\"Close\"\n+    distance={25}\n+    enableFlip={true}\n+    flipBehavior={\n       Array [\n-        \"ACTIVE\",\n+        \"top\",\n+        \"right\",\n+        \"bottom\",\n+        \"left\",\n+        \"top\",\n+        \"right\",\n+        \"bottom\",\n       ]\n     }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={true}\n-  />\n-  <ProcessListModal\n-    checkedArray={\n+    footerContent={\n       Array [\n-        \"COMPLETED\",\n+        <Unknown\n+          className=\"pf-u-mr-sm\"\n+          id=\"skip-button\"\n+          onClick={[Function]}\n+          variant=\"secondary\"\n+        >\n+          Skip\n+        </Unknown>,\n+        <Unknown\n+          className=\"pf-u-mr-sm\"\n+          id=\"retry-button\"\n+          onClick={[Function]}\n+          variant=\"secondary\"\n+        >\n+          Retry\n+        </Unknown>,\n       ]\n     }\n-    handleModalToggle={[Function]}\n-    isModalOpen={false}\n-    modalContent=\"\"\n-  />\n-  <DataListItem\n-    aria-labelledby=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-    isExpanded={false}\n+    headerContent={\n+      <div>\n+        Process error\n+      </div>\n+    }\n+    hideOnOutsideClick={true}\n+    isVisible={null}\n+    maxWidth=\"calc(2rem + 18.75rem)\"\n+    onHidden={[Function]}\n+    onHide={[Function]}\n+    onMount={[Function]}\n+    onShow={[Function]}\n+    onShown={[Function]}\n+    position=\"auto\"\n+    shouldClose={[Function]}\n+    tippyProps={Object {}}\n+    zIndex={300}\n   >\n-    <DataListItemRow>\n-      <DataListToggle\n-        aria-controls=\"kie-datalist-expand\"\n-        id=\"kie-datalist-toggle-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-        isExpanded={false}\n-        onClick={[Function]}\n-      />\n-      <DisablePopup\n-        component={\n-          <DataListCheck\n-            aria-labelledby=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-            isDisabled={true}\n-          />\n-        }\n-        processInstanceData={\n-          Object {\n-            \"addons\": Array [],\n-            \"childProcessInstances\": Array [],\n-            \"end\": \"2019-10-22T05:40:44.089Z\",\n-            \"endpoint\": \"http://localhost:4000\",\n-            \"error\": Object {\n-              \"message\": \"Something went wrong\",\n-              \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n+    <PopoverBase\n+      appendTo={[Function]}\n+      arrow={true}\n+      boundary=\"window\"\n+      content={<React.Fragment />}\n+      distance={25}\n+      flip={true}\n+      flipBehavior={\n+        Array [\n+          \"top\",\n+          \"right\",\n+          \"bottom\",\n+          \"left\",\n+          \"top\",\n+          \"right\",\n+          \"bottom\",\n+        ]\n+      }\n+      hideOnClick={true}\n+      interactive={true}\n+      interactiveBorder={0}\n+      isVisible={null}\n+      lazy={true}\n+      maxWidth=\"calc(2rem + 18.75rem)\"\n+      onCreate={[Function]}\n+      onHidden={[Function]}\n+      onHide={[Function]}\n+      onMount={[Function]}\n+      onShow={[Function]}\n+      onShown={[Function]}\n+      placement=\"auto\"\n+      popperOptions={\n+        Object {\n+          \"modifiers\": Object {\n+            \"hide\": Object {\n+              \"enabled\": true,\n             },\n-            \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-            \"isChecked\": false,\n-            \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-            \"nodes\": Array [\n-              Object {\n-                \"definitionId\": \"EndEvent_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-                \"name\": \"End Event 1\",\n-                \"nodeId\": \"1\",\n-                \"type\": \"EndNode\",\n-              },\n-              Object {\n-                \"definitionId\": \"ServiceTask_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-                \"name\": \"Book flight\",\n-                \"nodeId\": \"2\",\n-                \"type\": \"WorkItemNode\",\n-              },\n-              Object {\n-                \"definitionId\": \"StartEvent_1\",\n-                \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-                \"name\": \"StartProcess\",\n-                \"nodeId\": \"3\",\n-                \"type\": \"StartNode\",\n-              },\n-            ],\n-            \"parentProcessInstance\": null,\n-            \"parentProcessInstanceId\": null,\n-            \"processId\": \"flightBooking\",\n-            \"processName\": \"FlightBooking\",\n-            \"roles\": Array [],\n-            \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-            \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-            \"start\": \"2019-10-22T03:40:44.089Z\",\n-            \"state\": \"COMPLETED\",\n-            \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n-          }\n+            \"preventOverflow\": Object {\n+              \"enabled\": true,\n+            },\n+          },\n         }\n-      />\n-      <DataListItemCells\n-        dataListCells={\n-          Array [\n-            <DataListCell\n-              id=\"kie-datalist-item-c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-            >\n-              <Link\n-                to=\"/Process/c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\"\n-              >\n-                <div>\n-                  <strong>\n-                    <ProcessDescriptor\n-                      processInstanceData={\n-                        Object {\n-                          \"addons\": Array [],\n-                          \"childProcessInstances\": Array [],\n-                          \"end\": \"2019-10-22T05:40:44.089Z\",\n-                          \"endpoint\": \"http://localhost:4000\",\n-                          \"error\": Object {\n-                            \"message\": \"Something went wrong\",\n-                            \"nodeDefinitionId\": \"a1e139d5-81c77-48c9-84ae-34578e90433n\",\n-                          },\n-                          \"id\": \"c54ca5b0-b975-46e2-a9a0-6a86bf7ac21e\",\n-                          \"isChecked\": false,\n-                          \"lastUpdate\": \"2019-10-22T03:40:44.089Z\",\n-                          \"nodes\": Array [\n-                            Object {\n-                              \"definitionId\": \"EndEvent_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"7244ba1b-75ec-4789-8c65-499a0c5b1a6f\",\n-                              \"name\": \"End Event 1\",\n-                              \"nodeId\": \"1\",\n-                              \"type\": \"EndNode\",\n-                            },\n-                            Object {\n-                              \"definitionId\": \"ServiceTask_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"2f588da5-a323-4111-9017-3093ef9319d1\",\n-                              \"name\": \"Book flight\",\n-                              \"nodeId\": \"2\",\n-                              \"type\": \"WorkItemNode\",\n-                            },\n-                            Object {\n-                              \"definitionId\": \"StartEvent_1\",\n-                              \"enter\": \"2019-10-22T04:43:01.144Z\",\n-                              \"exit\": \"2019-10-22T04:43:01.144Z\",\n-                              \"id\": \"6ed7aa17-4bb1-48e3-b34a-5a4c5773dff2\",\n-                              \"name\": \"StartProcess\",\n-                              \"nodeId\": \"3\",\n-                              \"type\": \"StartNode\",\n-                            },\n-                          ],\n-                          \"parentProcessInstance\": null,\n-                          \"parentProcessInstanceId\": null,\n-                          \"processId\": \"flightBooking\",\n-                          \"processName\": \"FlightBooking\",\n-                          \"roles\": Array [],\n-                          \"rootProcessInstanceId\": \"8035b580-6ae4-4aa8-9ec0-e18e19809e0b\",\n-                          \"serviceUrl\": \"2019-10-22T03:40:44.089Z\",\n-                          \"start\": \"2019-10-22T03:40:44.089Z\",\n-                          \"state\": \"COMPLETED\",\n-                          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"arrival\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"departure\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\"},\\\\\"trip\\\\\":{\\\\\"begin\\\\\":\\\\\"2019-10-22T22:00:00Z[UTC]\\\\\",\\\\\"city\\\\\":\\\\\"Berlin\\\\\",\\\\\"country\\\\\":\\\\\"Germany\\\\\",\\\\\"end\\\\\":\\\\\"2019-10-30T22:00:00Z[UTC]\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"address\\\\\":{\\\\\"city\\\\\":\\\\\"Karkow\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\",\\\\\"street\\\\\":\\\\\"palna\\\\\",\\\\\"zipCode\\\\\":\\\\\"200300\\\\\"},\\\\\"email\\\\\":\\\\\"rob@redhat.com\\\\\",\\\\\"firstName\\\\\":\\\\\"Rob\\\\\",\\\\\"lastName\\\\\":\\\\\"Rob\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\"}}\",\n-                        }\n-                      }\n-                    />\n-                  </strong>\n-                </div>\n-              </Link>\n-              <EndpointLink\n-                isLinkShown={false}\n-                serviceUrl=\"2019-10-22T03:40:44.089Z\"\n-              />\n-            </DataListCell>,\n-            <DataListCell>\n-              <React.Fragment>\n-                <CheckCircleIcon\n+      }\n+      theme=\"pf-popover\"\n+      trigger=\"click\"\n+      zIndex={300}\n+    >\n+      <Component\n+        isInline={true}\n+        variant=\"link\"\n+      >\n+        <ComponentWithOuia\n+          component={[Function]}\n+          componentProps={\n+            Object {\n+              \"children\": <React.Fragment>\n+                <ErrorCircleOIcon\n                   className=\"pf-u-mr-sm\"\n-                  color=\"var(--pf-global--success-color--100)\"\n+                  color=\"var(--pf-global--danger-color--100)\"\n                   noVerticalAlign={false}\n                   size=\"sm\"\n                   title={null}\n                 />\n-                Completed\n-              </React.Fragment>\n-            </DataListCell>,\n-            <DataListCell>\n-              <t\n-                ago={false}\n-                calendar={false}\n-                decimal={false}\n-                element={null}\n-                filter={[Function]}\n-                fromNow={true}\n-                interval={60000}\n-                local={false}\n-                onChange={[Function]}\n-                titleFormat=\"\"\n-                toNow={false}\n-                unit={null}\n-                unix={false}\n-                utc={false}\n-                withTitle={false}\n+                Error\n+              </React.Fragment>,\n+              \"isInline\": true,\n+              \"variant\": \"link\",\n+            }\n+          }\n+          consumerContext={null}\n+        >\n+          <Button\n+            isInline={true}\n+            ouiaContext={\n+              Object {\n+                \"isOuia\": false,\n+                \"ouiaId\": null,\n+              }\n+            }\n+            variant=\"link\"\n+          >\n+            <button\n+              aria-disabled={null}\n+              aria-label={null}\n+              className=\"pf-c-button pf-m-link pf-m-inline\"\n+              disabled={false}\n+              tabIndex={null}\n+              type=\"button\"\n+            >\n+              <span\n+                className=\"pf-c-button__text\"\n               >\n-                2019-10-22T03:40:44.089Z\n-              </t>\n-            </DataListCell>,\n-            <DataListCell>\n-              <span>\n-                 \n-                <HistoryIcon\n+                <ErrorCircleOIcon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyMzU3OA=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 543}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODk5OTQ0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/tests/__snapshots__/ProcessListTable.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0MjoxNlrOGvLq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyMzoyOVrOGvM3zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNzQ2MA==", "bodyText": "Try mocking ProcessListTableItems to limit the snapshot size.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452127460", "createdAt": "2020-07-09T10:42:16Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/tests/__snapshots__/ProcessListTable.test.tsx.snap", "diffHunk": "@@ -3003,23 +2835,2026 @@ exports[`ProcessListTable component tests Snapshot testing with wrong query para\n   }\n   filters={\n     Object {\n-      \"businessKey\": Array [],\n+      \"businessKey\": Array [\n+        \"MQQ640\",\n+      ],\n       \"status\": Array [\n         \"ACTIVE\",\n       ],\n     }\n   }\n   initData={\n     Object {\n-      \"ProcessInstances\": Array [],\n-    }\n-  }\n-  isFilterClicked={false}\n-  isLoading={false}\n-  isLoadingMore={false}\n-  pageSize={10}\n-  selectedNumber={0}\n-  setAbortedObj={\n+      \"ProcessInstances\": Array [\n+        Object {\n+          \"addons\": Array [\n+            \"process-management\",\n+            \"infinispan-persistence\",\n+            \"prometheus-monitoring\",\n+          ],\n+          \"businessKey\": \"MQQ640\",\n+          \"childProcessInstances\": Array [\n+            Object {\n+              \"businessKey\": null,\n+              \"id\": \"bfde98ed-0cdd-4700-ae87-377f7ec430cd\",\n+              \"processName\": \"HotelBooking\",\n+            },\n+            Object {\n+              \"businessKey\": null,\n+              \"id\": \"e607b2a9-0aca-4788-9623-dd2e156ce9c4\",\n+              \"processName\": \"FlightBooking\",\n+            },\n+          ],\n+          \"end\": null,\n+          \"endpoint\": \"http://localhost:8080/travels\",\n+          \"error\": null,\n+          \"id\": \"201a8a42-043e-375a-9f52-57c804b24db4\",\n+          \"lastUpdate\": \"2020-05-07T06:50:18.502Z\",\n+          \"nodes\": Array [\n+            Object {\n+              \"definitionId\": \"_1A708F87-11C0-42A0-A464-0B7E259C426F\",\n+              \"enter\": \"2020-05-07T06:50:18.429Z\",\n+              \"exit\": \"2020-05-07T06:50:18.439Z\",\n+              \"id\": \"39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea\",\n+              \"name\": \"Book Hotel\",\n+              \"nodeId\": \"17\",\n+              \"type\": \"SubProcessNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_2140F05A-364F-40B3-BB7B-B12927065DF8\",\n+              \"enter\": \"2020-05-07T06:50:18.443Z\",\n+              \"exit\": null,\n+              \"id\": \"1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd\",\n+              \"name\": \"Confirm travel\",\n+              \"nodeId\": \"8\",\n+              \"type\": \"HumanTaskNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_5D0733B5-53FE-40E9-9900-4CC13419C67A\",\n+              \"enter\": \"2020-05-07T06:50:18.442Z\",\n+              \"exit\": \"2020-05-07T06:50:18.443Z\",\n+              \"id\": \"4fc774f5-c429-4b97-8981-bd60d1f59954\",\n+              \"name\": \"Join\",\n+              \"nodeId\": \"7\",\n+              \"type\": \"Join\",\n+            },\n+            Object {\n+              \"definitionId\": \"_F543B3F0-AB44-4A5B-BF17-8D9DEB505815\",\n+              \"enter\": \"2020-05-07T06:50:18.439Z\",\n+              \"exit\": \"2020-05-07T06:50:18.442Z\",\n+              \"id\": \"60309b28-1dbe-49c3-b0d8-8cefb86be8b4\",\n+              \"name\": \"Book Flight\",\n+              \"nodeId\": \"10\",\n+              \"type\": \"SubProcessNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_175DC79D-C2F1-4B28-BE2D-B583DFABF70D\",\n+              \"enter\": \"2020-05-07T06:50:18.428Z\",\n+              \"exit\": \"2020-05-07T06:50:18.439Z\",\n+              \"id\": \"efa5a6c0-9470-4405-8609-620bdbfbb6d9\",\n+              \"name\": \"Book\",\n+              \"nodeId\": \"2\",\n+              \"type\": \"Split\",\n+            },\n+            Object {\n+              \"definitionId\": \"_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F\",\n+              \"enter\": \"2020-05-07T06:50:18.428Z\",\n+              \"exit\": \"2020-05-07T06:50:18.428Z\",\n+              \"id\": \"acc87f1f-e436-4364-b4d3-9069ddb359c9\",\n+              \"name\": \"Join\",\n+              \"nodeId\": \"14\",\n+              \"type\": \"Join\",\n+            },\n+            Object {\n+              \"definitionId\": \"_5EA95D17-59A6-4567-92DF-74D36CE7F35A\",\n+              \"enter\": \"2020-05-07T06:50:18.427Z\",\n+              \"exit\": \"2020-05-07T06:50:18.428Z\",\n+              \"id\": \"6c20729a-3e2b-44c5-af5c-8554f21a7ebf\",\n+              \"name\": \"is visa required\",\n+              \"nodeId\": \"15\",\n+              \"type\": \"Split\",\n+            },\n+            Object {\n+              \"definitionId\": \"_54ABE1ED-61BE-45F9-812C-795A5D4ED35E\",\n+              \"enter\": \"2020-05-07T06:50:18.278Z\",\n+              \"exit\": \"2020-05-07T06:50:18.427Z\",\n+              \"id\": \"3fb92a0a-e88b-45a4-a48b-65f11a679b96\",\n+              \"name\": \"Visa check\",\n+              \"nodeId\": \"5\",\n+              \"type\": \"RuleSetNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_1B11BEC9-402A-4E73-959A-296BD334CAB0\",\n+              \"enter\": \"2020-05-07T06:50:18.276Z\",\n+              \"exit\": \"2020-05-07T06:50:18.278Z\",\n+              \"id\": \"2860e474-dffc-498c-8731-e6b6f0b5d4d4\",\n+              \"name\": \"StartProcess\",\n+              \"nodeId\": \"16\",\n+              \"type\": \"StartNode\",\n+            },\n+          ],\n+          \"parentProcessInstance\": null,\n+          \"parentProcessInstanceId\": null,\n+          \"processId\": \"travels\",\n+          \"processName\": \"travels\",\n+          \"roles\": Array [],\n+          \"serviceUrl\": \"http://localhost:8080\",\n+          \"start\": \"2020-05-07T06:50:18.274Z\",\n+          \"state\": \"ACTIVE\",\n+          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\",\\\\\"seat\\\\\":null,\\\\\"gate\\\\\":null,\\\\\"departure\\\\\":\\\\\"2020-05-08T03:30:00.000+05:30\\\\\",\\\\\"arrival\\\\\":\\\\\"2020-05-09T03:30:00.000+05:30\\\\\"},\\\\\"hotel\\\\\":{\\\\\"name\\\\\":\\\\\"Perfect hotel\\\\\",\\\\\"address\\\\\":{\\\\\"street\\\\\":\\\\\"street\\\\\",\\\\\"city\\\\\":\\\\\"Bengaluru\\\\\",\\\\\"zipCode\\\\\":\\\\\"12345\\\\\",\\\\\"country\\\\\":\\\\\"India\\\\\"},\\\\\"phone\\\\\":\\\\\"09876543\\\\\",\\\\\"bookingNumber\\\\\":\\\\\"XX-012345\\\\\",\\\\\"room\\\\\":null},\\\\\"trip\\\\\":{\\\\\"city\\\\\":\\\\\"Bengaluru\\\\\",\\\\\"country\\\\\":\\\\\"India\\\\\",\\\\\"begin\\\\\":\\\\\"2020-05-08T03:30:00.000+05:30\\\\\",\\\\\"end\\\\\":\\\\\"2020-05-09T03:30:00.000+05:30\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"firstName\\\\\":\\\\\"Ajay\\\\\",\\\\\"lastName\\\\\":\\\\\"Jaganathan\\\\\",\\\\\"email\\\\\":\\\\\"ajaganat@redhat.com\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\",\\\\\"address\\\\\":{\\\\\"street\\\\\":\\\\\"Bangalore\\\\\",\\\\\"city\\\\\":\\\\\"Bangalore\\\\\",\\\\\"zipCode\\\\\":\\\\\"560093\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\"}}}\",\n+        },\n+      ],\n+    }\n+  }\n+  isFilterClicked={false}\n+  isLoading={false}\n+  isLoadingMore={false}\n+  pageSize={10}\n+  selectedNumber={0}\n+  setAbortedObj={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          Object {},\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setFilteredData={[MockFunction]}\n+  setInitData={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          undefined,\n+        ],\n+        Array [\n+          undefined,\n+        ],\n+        Array [\n+          Object {\n+            \"ProcessInstances\": Array [\n+              Object {\n+                \"addons\": Array [\n+                  \"process-management\",\n+                  \"infinispan-persistence\",\n+                  \"prometheus-monitoring\",\n+                ],\n+                \"businessKey\": \"MQQ640\",\n+                \"error\": null,\n+                \"id\": \"201a8a42-043e-375a-9f52-57c804b24db4\",\n+                \"isChecked\": false,\n+                \"isOpen\": false,\n+                \"lastUpdate\": \"2020-05-07T06:50:18.502Z\",\n+                \"parentProcessInstanceId\": null,\n+                \"processId\": \"travels\",\n+                \"processName\": \"travels\",\n+                \"roles\": Array [],\n+                \"rootProcessInstanceId\": null,\n+                \"serviceUrl\": \"http://localhost:8080\",\n+                \"start\": \"2020-05-07T06:50:18.274Z\",\n+                \"state\": \"ACTIVE\",\n+              },\n+            ],\n+          },\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setIsAllChecked={[MockFunction]}\n+  setIsError={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          false,\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setIsLoading={[MockFunction]}\n+  setLimit={[MockFunction]}\n+  setSelectedNumber={[MockFunction]}\n+>\n+  <DataList\n+    aria-label=\"Process instance list\"\n+  >\n+    <ul\n+      aria-label=\"Process instance list\"\n+      className=\"pf-c-data-list\"\n+    >\n+      <ProcessListTableItems", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 671}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0NzE0OQ==", "bodyText": "added the mock for ProcessListTableItems", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452147149", "createdAt": "2020-07-09T11:23:29Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/tests/__snapshots__/ProcessListTable.test.tsx.snap", "diffHunk": "@@ -3003,23 +2835,2026 @@ exports[`ProcessListTable component tests Snapshot testing with wrong query para\n   }\n   filters={\n     Object {\n-      \"businessKey\": Array [],\n+      \"businessKey\": Array [\n+        \"MQQ640\",\n+      ],\n       \"status\": Array [\n         \"ACTIVE\",\n       ],\n     }\n   }\n   initData={\n     Object {\n-      \"ProcessInstances\": Array [],\n-    }\n-  }\n-  isFilterClicked={false}\n-  isLoading={false}\n-  isLoadingMore={false}\n-  pageSize={10}\n-  selectedNumber={0}\n-  setAbortedObj={\n+      \"ProcessInstances\": Array [\n+        Object {\n+          \"addons\": Array [\n+            \"process-management\",\n+            \"infinispan-persistence\",\n+            \"prometheus-monitoring\",\n+          ],\n+          \"businessKey\": \"MQQ640\",\n+          \"childProcessInstances\": Array [\n+            Object {\n+              \"businessKey\": null,\n+              \"id\": \"bfde98ed-0cdd-4700-ae87-377f7ec430cd\",\n+              \"processName\": \"HotelBooking\",\n+            },\n+            Object {\n+              \"businessKey\": null,\n+              \"id\": \"e607b2a9-0aca-4788-9623-dd2e156ce9c4\",\n+              \"processName\": \"FlightBooking\",\n+            },\n+          ],\n+          \"end\": null,\n+          \"endpoint\": \"http://localhost:8080/travels\",\n+          \"error\": null,\n+          \"id\": \"201a8a42-043e-375a-9f52-57c804b24db4\",\n+          \"lastUpdate\": \"2020-05-07T06:50:18.502Z\",\n+          \"nodes\": Array [\n+            Object {\n+              \"definitionId\": \"_1A708F87-11C0-42A0-A464-0B7E259C426F\",\n+              \"enter\": \"2020-05-07T06:50:18.429Z\",\n+              \"exit\": \"2020-05-07T06:50:18.439Z\",\n+              \"id\": \"39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea\",\n+              \"name\": \"Book Hotel\",\n+              \"nodeId\": \"17\",\n+              \"type\": \"SubProcessNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_2140F05A-364F-40B3-BB7B-B12927065DF8\",\n+              \"enter\": \"2020-05-07T06:50:18.443Z\",\n+              \"exit\": null,\n+              \"id\": \"1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd\",\n+              \"name\": \"Confirm travel\",\n+              \"nodeId\": \"8\",\n+              \"type\": \"HumanTaskNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_5D0733B5-53FE-40E9-9900-4CC13419C67A\",\n+              \"enter\": \"2020-05-07T06:50:18.442Z\",\n+              \"exit\": \"2020-05-07T06:50:18.443Z\",\n+              \"id\": \"4fc774f5-c429-4b97-8981-bd60d1f59954\",\n+              \"name\": \"Join\",\n+              \"nodeId\": \"7\",\n+              \"type\": \"Join\",\n+            },\n+            Object {\n+              \"definitionId\": \"_F543B3F0-AB44-4A5B-BF17-8D9DEB505815\",\n+              \"enter\": \"2020-05-07T06:50:18.439Z\",\n+              \"exit\": \"2020-05-07T06:50:18.442Z\",\n+              \"id\": \"60309b28-1dbe-49c3-b0d8-8cefb86be8b4\",\n+              \"name\": \"Book Flight\",\n+              \"nodeId\": \"10\",\n+              \"type\": \"SubProcessNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_175DC79D-C2F1-4B28-BE2D-B583DFABF70D\",\n+              \"enter\": \"2020-05-07T06:50:18.428Z\",\n+              \"exit\": \"2020-05-07T06:50:18.439Z\",\n+              \"id\": \"efa5a6c0-9470-4405-8609-620bdbfbb6d9\",\n+              \"name\": \"Book\",\n+              \"nodeId\": \"2\",\n+              \"type\": \"Split\",\n+            },\n+            Object {\n+              \"definitionId\": \"_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F\",\n+              \"enter\": \"2020-05-07T06:50:18.428Z\",\n+              \"exit\": \"2020-05-07T06:50:18.428Z\",\n+              \"id\": \"acc87f1f-e436-4364-b4d3-9069ddb359c9\",\n+              \"name\": \"Join\",\n+              \"nodeId\": \"14\",\n+              \"type\": \"Join\",\n+            },\n+            Object {\n+              \"definitionId\": \"_5EA95D17-59A6-4567-92DF-74D36CE7F35A\",\n+              \"enter\": \"2020-05-07T06:50:18.427Z\",\n+              \"exit\": \"2020-05-07T06:50:18.428Z\",\n+              \"id\": \"6c20729a-3e2b-44c5-af5c-8554f21a7ebf\",\n+              \"name\": \"is visa required\",\n+              \"nodeId\": \"15\",\n+              \"type\": \"Split\",\n+            },\n+            Object {\n+              \"definitionId\": \"_54ABE1ED-61BE-45F9-812C-795A5D4ED35E\",\n+              \"enter\": \"2020-05-07T06:50:18.278Z\",\n+              \"exit\": \"2020-05-07T06:50:18.427Z\",\n+              \"id\": \"3fb92a0a-e88b-45a4-a48b-65f11a679b96\",\n+              \"name\": \"Visa check\",\n+              \"nodeId\": \"5\",\n+              \"type\": \"RuleSetNode\",\n+            },\n+            Object {\n+              \"definitionId\": \"_1B11BEC9-402A-4E73-959A-296BD334CAB0\",\n+              \"enter\": \"2020-05-07T06:50:18.276Z\",\n+              \"exit\": \"2020-05-07T06:50:18.278Z\",\n+              \"id\": \"2860e474-dffc-498c-8731-e6b6f0b5d4d4\",\n+              \"name\": \"StartProcess\",\n+              \"nodeId\": \"16\",\n+              \"type\": \"StartNode\",\n+            },\n+          ],\n+          \"parentProcessInstance\": null,\n+          \"parentProcessInstanceId\": null,\n+          \"processId\": \"travels\",\n+          \"processName\": \"travels\",\n+          \"roles\": Array [],\n+          \"serviceUrl\": \"http://localhost:8080\",\n+          \"start\": \"2020-05-07T06:50:18.274Z\",\n+          \"state\": \"ACTIVE\",\n+          \"variables\": \"{\\\\\"flight\\\\\":{\\\\\"flightNumber\\\\\":\\\\\"MX555\\\\\",\\\\\"seat\\\\\":null,\\\\\"gate\\\\\":null,\\\\\"departure\\\\\":\\\\\"2020-05-08T03:30:00.000+05:30\\\\\",\\\\\"arrival\\\\\":\\\\\"2020-05-09T03:30:00.000+05:30\\\\\"},\\\\\"hotel\\\\\":{\\\\\"name\\\\\":\\\\\"Perfect hotel\\\\\",\\\\\"address\\\\\":{\\\\\"street\\\\\":\\\\\"street\\\\\",\\\\\"city\\\\\":\\\\\"Bengaluru\\\\\",\\\\\"zipCode\\\\\":\\\\\"12345\\\\\",\\\\\"country\\\\\":\\\\\"India\\\\\"},\\\\\"phone\\\\\":\\\\\"09876543\\\\\",\\\\\"bookingNumber\\\\\":\\\\\"XX-012345\\\\\",\\\\\"room\\\\\":null},\\\\\"trip\\\\\":{\\\\\"city\\\\\":\\\\\"Bengaluru\\\\\",\\\\\"country\\\\\":\\\\\"India\\\\\",\\\\\"begin\\\\\":\\\\\"2020-05-08T03:30:00.000+05:30\\\\\",\\\\\"end\\\\\":\\\\\"2020-05-09T03:30:00.000+05:30\\\\\",\\\\\"visaRequired\\\\\":false},\\\\\"traveller\\\\\":{\\\\\"firstName\\\\\":\\\\\"Ajay\\\\\",\\\\\"lastName\\\\\":\\\\\"Jaganathan\\\\\",\\\\\"email\\\\\":\\\\\"ajaganat@redhat.com\\\\\",\\\\\"nationality\\\\\":\\\\\"Polish\\\\\",\\\\\"address\\\\\":{\\\\\"street\\\\\":\\\\\"Bangalore\\\\\",\\\\\"city\\\\\":\\\\\"Bangalore\\\\\",\\\\\"zipCode\\\\\":\\\\\"560093\\\\\",\\\\\"country\\\\\":\\\\\"Poland\\\\\"}}}\",\n+        },\n+      ],\n+    }\n+  }\n+  isFilterClicked={false}\n+  isLoading={false}\n+  isLoadingMore={false}\n+  pageSize={10}\n+  selectedNumber={0}\n+  setAbortedObj={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          Object {},\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setFilteredData={[MockFunction]}\n+  setInitData={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          undefined,\n+        ],\n+        Array [\n+          undefined,\n+        ],\n+        Array [\n+          Object {\n+            \"ProcessInstances\": Array [\n+              Object {\n+                \"addons\": Array [\n+                  \"process-management\",\n+                  \"infinispan-persistence\",\n+                  \"prometheus-monitoring\",\n+                ],\n+                \"businessKey\": \"MQQ640\",\n+                \"error\": null,\n+                \"id\": \"201a8a42-043e-375a-9f52-57c804b24db4\",\n+                \"isChecked\": false,\n+                \"isOpen\": false,\n+                \"lastUpdate\": \"2020-05-07T06:50:18.502Z\",\n+                \"parentProcessInstanceId\": null,\n+                \"processId\": \"travels\",\n+                \"processName\": \"travels\",\n+                \"roles\": Array [],\n+                \"rootProcessInstanceId\": null,\n+                \"serviceUrl\": \"http://localhost:8080\",\n+                \"start\": \"2020-05-07T06:50:18.274Z\",\n+                \"state\": \"ACTIVE\",\n+              },\n+            ],\n+          },\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setIsAllChecked={[MockFunction]}\n+  setIsError={\n+    [MockFunction] {\n+      \"calls\": Array [\n+        Array [\n+          false,\n+        ],\n+      ],\n+      \"results\": Array [\n+        Object {\n+          \"type\": \"return\",\n+          \"value\": undefined,\n+        },\n+      ],\n+    }\n+  }\n+  setIsLoading={[MockFunction]}\n+  setLimit={[MockFunction]}\n+  setSelectedNumber={[MockFunction]}\n+>\n+  <DataList\n+    aria-label=\"Process instance list\"\n+  >\n+    <ul\n+      aria-label=\"Process instance list\"\n+      className=\"pf-c-data-list\"\n+    >\n+      <ProcessListTableItems", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyNzQ2MA=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 671}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAwNTEzOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0NDoxMlrOGvLucw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyNTo1NFrOGvM8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyODM3MQ==", "bodyText": "could we put a comment what does this condition mean?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452128371", "createdAt": "2020-07-09T10:44:12Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -161,7 +179,10 @@ const ProcessDetailsPage: React.FC<\n                       <Link to={'/'}>Home</Link>\n                     </BreadcrumbItem>\n                     {BreadCrumb.map((item, index) => {\n-                      if (index === 1) {\n+                      if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0ODM2MQ==", "bodyText": "added the comment", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452148361", "createdAt": "2020-07-09T11:25:54Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -161,7 +179,10 @@ const ProcessDetailsPage: React.FC<\n                       <Link to={'/'}>Home</Link>\n                     </BreadcrumbItem>\n                     {BreadCrumb.map((item, index) => {\n-                      if (index === 1) {\n+                      if (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyODM3MQ=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAxMjcxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0NjozNFrOGvLy3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyNjoxOFrOGvM9Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTUwMQ==", "bodyText": "can we mock the icon?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452129501", "createdAt": "2020-07-09T10:46:34Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "diffHunk": "@@ -1,546 +1,6190 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`ProcessListPage component tests Snapshot tests 1`] = `\n-<ProcessListPage\n-  ouiaContext={\n-    Object {\n-      \"isOuia\": false,\n-      \"ouiaId\": null,\n-    }\n-  }\n+exports[`ProcessListPage component tests Snapshot tests for no status selected 1`] = `\n+<EmptyState\n+  variant=\"full\"\n >\n-  <ProcessListModal\n-    abortedMessageObj={Object {}}\n-    checkedArray={\n-      Array [\n-        \"ACTIVE\",\n-      ]\n-    }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={false}\n+  <div\n+    className=\"pf-c-empty-state\"\n   >\n-    <Modal\n-      actions={\n-        Array [\n-          <Unknown\n-            onClick={[Function]}\n-            variant=\"primary\"\n-          >\n-            OK\n-          </Unknown>,\n-        ]\n-      }\n-      appendTo={\n-        <body>\n-          <div />\n-        </body>\n-      }\n-      ariaDescribedById=\"\"\n-      className=\"\"\n-      header={\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"2xl\"\n-        />\n-      }\n-      hideTitle={false}\n-      isFooterLeftAligned={false}\n-      isLarge={false}\n-      isOpen={false}\n-      isSmall={true}\n-      onClose={[Function]}\n-      showClose={true}\n-      title=\"\"\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--warning-color--100)\"\n+      icon={[Function]}\n+      size=\"sm\"\n     >\n-      <Portal\n-        containerInfo={<div />}\n+      <ExclamationTriangleIcon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0ODU3NA==", "bodyText": "added the mock", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452148574", "createdAt": "2020-07-09T11:26:18Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "diffHunk": "@@ -1,546 +1,6190 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`ProcessListPage component tests Snapshot tests 1`] = `\n-<ProcessListPage\n-  ouiaContext={\n-    Object {\n-      \"isOuia\": false,\n-      \"ouiaId\": null,\n-    }\n-  }\n+exports[`ProcessListPage component tests Snapshot tests for no status selected 1`] = `\n+<EmptyState\n+  variant=\"full\"\n >\n-  <ProcessListModal\n-    abortedMessageObj={Object {}}\n-    checkedArray={\n-      Array [\n-        \"ACTIVE\",\n-      ]\n-    }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={false}\n+  <div\n+    className=\"pf-c-empty-state\"\n   >\n-    <Modal\n-      actions={\n-        Array [\n-          <Unknown\n-            onClick={[Function]}\n-            variant=\"primary\"\n-          >\n-            OK\n-          </Unknown>,\n-        ]\n-      }\n-      appendTo={\n-        <body>\n-          <div />\n-        </body>\n-      }\n-      ariaDescribedById=\"\"\n-      className=\"\"\n-      header={\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"2xl\"\n-        />\n-      }\n-      hideTitle={false}\n-      isFooterLeftAligned={false}\n-      isLarge={false}\n-      isOpen={false}\n-      isSmall={true}\n-      onClose={[Function]}\n-      showClose={true}\n-      title=\"\"\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--warning-color--100)\"\n+      icon={[Function]}\n+      size=\"sm\"\n     >\n-      <Portal\n-        containerInfo={<div />}\n+      <ExclamationTriangleIcon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTUwMQ=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAxNDI2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0NzowNFrOGvLztg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyNjozM1rOGvM-BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTcxOA==", "bodyText": "wrong order of update() and find() in the test.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452129718", "createdAt": "2020-07-09T10:47:04Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "diffHunk": "@@ -1,546 +1,6190 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`ProcessListPage component tests Snapshot tests 1`] = `\n-<ProcessListPage\n-  ouiaContext={\n-    Object {\n-      \"isOuia\": false,\n-      \"ouiaId\": null,\n-    }\n-  }\n+exports[`ProcessListPage component tests Snapshot tests for no status selected 1`] = `\n+<EmptyState\n+  variant=\"full\"\n >\n-  <ProcessListModal\n-    abortedMessageObj={Object {}}\n-    checkedArray={\n-      Array [\n-        \"ACTIVE\",\n-      ]\n-    }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={false}\n+  <div\n+    className=\"pf-c-empty-state\"\n   >\n-    <Modal\n-      actions={\n-        Array [\n-          <Unknown\n-            onClick={[Function]}\n-            variant=\"primary\"\n-          >\n-            OK\n-          </Unknown>,\n-        ]\n-      }\n-      appendTo={\n-        <body>\n-          <div />\n-        </body>\n-      }\n-      ariaDescribedById=\"\"\n-      className=\"\"\n-      header={\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"2xl\"\n-        />\n-      }\n-      hideTitle={false}\n-      isFooterLeftAligned={false}\n-      isLarge={false}\n-      isOpen={false}\n-      isSmall={true}\n-      onClose={[Function]}\n-      showClose={true}\n-      title=\"\"\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--warning-color--100)\"\n+      icon={[Function]}\n+      size=\"sm\"\n     >\n-      <Portal\n-        containerInfo={<div />}\n+      <ExclamationTriangleIcon\n+        aria-hidden=\"true\"\n+        className=\"pf-c-empty-state__icon\"\n+        color=\"var(--pf-global--warning-color--100)\"\n+        noVerticalAlign={false}\n+        size=\"sm\"\n+        title={null}\n       >\n-        <ModalContent\n-          actions={\n-            Array [\n-              <Unknown\n-                onClick={[Function]}\n-                variant=\"primary\"\n-              >\n-                OK\n-              </Unknown>,\n-            ]\n-          }\n-          ariaDescribedById=\"\"\n-          className=\"\"\n-          header={\n-            <Title\n-              headingLevel=\"h1\"\n-              size=\"2xl\"\n-            />\n+        <svg\n+          aria-hidden=\"true\"\n+          aria-labelledby={null}\n+          className=\"pf-c-empty-state__icon\"\n+          fill=\"var(--pf-global--warning-color--100)\"\n+          height=\"1em\"\n+          role=\"img\"\n+          style={\n+            Object {\n+              \"verticalAlign\": \"-0.125em\",\n+            }\n           }\n-          hideTitle={false}\n-          id=\"pf-modal-0\"\n-          isFooterLeftAligned={false}\n-          isLarge={false}\n-          isOpen={false}\n-          isSmall={true}\n-          onClose={[Function]}\n-          showClose={true}\n-          title=\"\"\n-        />\n-      </Portal>\n-    </Modal>\n-  </ProcessListModal>\n-  <PageSection\n-    variant=\"light\"\n-  >\n-    <section\n-      className=\"pf-c-page__main-section pf-m-light\"\n+          viewBox=\"0 0 576 512\"\n+          width=\"1em\"\n+        >\n+          <path\n+            d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"\n+            transform=\"\"\n+          />\n+        </svg>\n+      </ExclamationTriangleIcon>\n+    </EmptyStateIcon>\n+    <Title\n+      headingLevel=\"h5\"\n+      size=\"lg\"\n     >\n-      <PageTitle\n-        title=\"Process Instances\"\n+      <h5\n+        className=\"pf-c-title pf-m-lg\"\n       >\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"4xl\"\n-        >\n-          <h1\n-            className=\"pf-c-title pf-m-4xl\"\n-          >\n-            Process Instances\n-          </h1>\n-        </Title>\n-      </PageTitle>\n-      <Component>\n-        <ComponentWithOuia\n-          component={[Function]}\n-          componentProps={\n-            Object {\n-              \"children\": Array [\n-                <BreadcrumbItem>\n-                  <Link\n-                    to=\"/\"\n-                  >\n-                    Home\n-                  </Link>\n-                </BreadcrumbItem>,\n-                <BreadcrumbItem\n-                  isActive={true}\n-                >\n-                  Process instances\n-                </BreadcrumbItem>,\n-              ],\n-            }\n+        No status is selected\n+      </h5>\n+    </Title>\n+    <EmptyStateBody>\n+      <div\n+        className=\"pf-c-empty-state__body\"\n+      >\n+        Try selecting at least one status to see results\n+      </div>\n+    </EmptyStateBody>\n+    <Component\n+      onClick={[Function]}\n+      variant=\"link\"\n+    >\n+      <ComponentWithOuia\n+        component={[Function]}\n+        componentProps={\n+          Object {\n+            \"children\": \"Reset to default\",\n+            \"onClick\": [Function],\n+            \"variant\": \"link\",\n           }\n-          consumerContext={\n+        }\n+        consumerContext={\n+          Object {\n+            \"isOuia\": false,\n+            \"ouiaId\": null,\n+          }\n+        }\n+      >\n+        <Button\n+          onClick={[Function]}\n+          ouiaContext={\n             Object {\n               \"isOuia\": false,\n               \"ouiaId\": null,\n             }\n           }\n+          variant=\"link\"\n         >\n-          <Breadcrumb\n-            ouiaContext={\n-              Object {\n-                \"isOuia\": false,\n-                \"ouiaId\": null,\n-              }\n-            }\n+          <button\n+            aria-disabled={null}\n+            aria-label={null}\n+            className=\"pf-c-button pf-m-link\"\n+            disabled={false}\n+            onClick={[Function]}\n+            tabIndex={null}\n+            type=\"button\"\n           >\n-            <nav\n-              aria-label=\"Breadcrumb\"\n-              className=\"pf-c-breadcrumb\"\n+            <span\n+              className=\"pf-c-button__text\"\n             >\n-              <ol\n-                className=\"pf-c-breadcrumb__list\"\n-              >\n-                <BreadcrumbItem>\n-                  <li\n-                    className=\"pf-c-breadcrumb__item\"\n-                  >\n-                    <Link\n-                      to=\"/\"\n-                    >\n-                      <LinkAnchor\n-                        href=\"/\"\n-                        navigate={[Function]}\n-                      >\n-                        <a\n-                          href=\"/\"\n-                          onClick={[Function]}\n-                        >\n-                          Home\n-                        </a>\n-                      </LinkAnchor>\n-                    </Link>\n-                    <span\n-                      className=\"pf-c-breadcrumb__item-divider\"\n-                    >\n-                      <AngleRightIcon\n-                        color=\"currentColor\"\n-                        noVerticalAlign={false}\n-                        size=\"sm\"\n-                        title={null}\n-                      >\n-                        <svg\n-                          aria-hidden={true}\n-                          aria-labelledby={null}\n-                          fill=\"currentColor\"\n-                          height=\"1em\"\n-                          role=\"img\"\n-                          style={\n+              Reset to default\n+            </span>\n+          </button>\n+        </Button>\n+      </ComponentWithOuia>\n+    </Component>\n+  </div>\n+</EmptyState>\n+`;\n+\n+exports[`ProcessListPage component tests error in query - with businesskey 1`] = `\n+<BrowserRouter>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 287}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0ODc0MQ==", "bodyText": "swapped the order of update", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452148741", "createdAt": "2020-07-09T11:26:33Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/__snapshots__/ProcessListPage.test.tsx.snap", "diffHunk": "@@ -1,546 +1,6190 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n-exports[`ProcessListPage component tests Snapshot tests 1`] = `\n-<ProcessListPage\n-  ouiaContext={\n-    Object {\n-      \"isOuia\": false,\n-      \"ouiaId\": null,\n-    }\n-  }\n+exports[`ProcessListPage component tests Snapshot tests for no status selected 1`] = `\n+<EmptyState\n+  variant=\"full\"\n >\n-  <ProcessListModal\n-    abortedMessageObj={Object {}}\n-    checkedArray={\n-      Array [\n-        \"ACTIVE\",\n-      ]\n-    }\n-    completedMessageObj={Object {}}\n-    handleModalToggle={[Function]}\n-    isAbortModalOpen={false}\n-    isModalOpen={false}\n-    isSingleAbort={false}\n+  <div\n+    className=\"pf-c-empty-state\"\n   >\n-    <Modal\n-      actions={\n-        Array [\n-          <Unknown\n-            onClick={[Function]}\n-            variant=\"primary\"\n-          >\n-            OK\n-          </Unknown>,\n-        ]\n-      }\n-      appendTo={\n-        <body>\n-          <div />\n-        </body>\n-      }\n-      ariaDescribedById=\"\"\n-      className=\"\"\n-      header={\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"2xl\"\n-        />\n-      }\n-      hideTitle={false}\n-      isFooterLeftAligned={false}\n-      isLarge={false}\n-      isOpen={false}\n-      isSmall={true}\n-      onClose={[Function]}\n-      showClose={true}\n-      title=\"\"\n+    <EmptyStateIcon\n+      color=\"var(--pf-global--warning-color--100)\"\n+      icon={[Function]}\n+      size=\"sm\"\n     >\n-      <Portal\n-        containerInfo={<div />}\n+      <ExclamationTriangleIcon\n+        aria-hidden=\"true\"\n+        className=\"pf-c-empty-state__icon\"\n+        color=\"var(--pf-global--warning-color--100)\"\n+        noVerticalAlign={false}\n+        size=\"sm\"\n+        title={null}\n       >\n-        <ModalContent\n-          actions={\n-            Array [\n-              <Unknown\n-                onClick={[Function]}\n-                variant=\"primary\"\n-              >\n-                OK\n-              </Unknown>,\n-            ]\n-          }\n-          ariaDescribedById=\"\"\n-          className=\"\"\n-          header={\n-            <Title\n-              headingLevel=\"h1\"\n-              size=\"2xl\"\n-            />\n+        <svg\n+          aria-hidden=\"true\"\n+          aria-labelledby={null}\n+          className=\"pf-c-empty-state__icon\"\n+          fill=\"var(--pf-global--warning-color--100)\"\n+          height=\"1em\"\n+          role=\"img\"\n+          style={\n+            Object {\n+              \"verticalAlign\": \"-0.125em\",\n+            }\n           }\n-          hideTitle={false}\n-          id=\"pf-modal-0\"\n-          isFooterLeftAligned={false}\n-          isLarge={false}\n-          isOpen={false}\n-          isSmall={true}\n-          onClose={[Function]}\n-          showClose={true}\n-          title=\"\"\n-        />\n-      </Portal>\n-    </Modal>\n-  </ProcessListModal>\n-  <PageSection\n-    variant=\"light\"\n-  >\n-    <section\n-      className=\"pf-c-page__main-section pf-m-light\"\n+          viewBox=\"0 0 576 512\"\n+          width=\"1em\"\n+        >\n+          <path\n+            d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"\n+            transform=\"\"\n+          />\n+        </svg>\n+      </ExclamationTriangleIcon>\n+    </EmptyStateIcon>\n+    <Title\n+      headingLevel=\"h5\"\n+      size=\"lg\"\n     >\n-      <PageTitle\n-        title=\"Process Instances\"\n+      <h5\n+        className=\"pf-c-title pf-m-lg\"\n       >\n-        <Title\n-          headingLevel=\"h1\"\n-          size=\"4xl\"\n-        >\n-          <h1\n-            className=\"pf-c-title pf-m-4xl\"\n-          >\n-            Process Instances\n-          </h1>\n-        </Title>\n-      </PageTitle>\n-      <Component>\n-        <ComponentWithOuia\n-          component={[Function]}\n-          componentProps={\n-            Object {\n-              \"children\": Array [\n-                <BreadcrumbItem>\n-                  <Link\n-                    to=\"/\"\n-                  >\n-                    Home\n-                  </Link>\n-                </BreadcrumbItem>,\n-                <BreadcrumbItem\n-                  isActive={true}\n-                >\n-                  Process instances\n-                </BreadcrumbItem>,\n-              ],\n-            }\n+        No status is selected\n+      </h5>\n+    </Title>\n+    <EmptyStateBody>\n+      <div\n+        className=\"pf-c-empty-state__body\"\n+      >\n+        Try selecting at least one status to see results\n+      </div>\n+    </EmptyStateBody>\n+    <Component\n+      onClick={[Function]}\n+      variant=\"link\"\n+    >\n+      <ComponentWithOuia\n+        component={[Function]}\n+        componentProps={\n+          Object {\n+            \"children\": \"Reset to default\",\n+            \"onClick\": [Function],\n+            \"variant\": \"link\",\n           }\n-          consumerContext={\n+        }\n+        consumerContext={\n+          Object {\n+            \"isOuia\": false,\n+            \"ouiaId\": null,\n+          }\n+        }\n+      >\n+        <Button\n+          onClick={[Function]}\n+          ouiaContext={\n             Object {\n               \"isOuia\": false,\n               \"ouiaId\": null,\n             }\n           }\n+          variant=\"link\"\n         >\n-          <Breadcrumb\n-            ouiaContext={\n-              Object {\n-                \"isOuia\": false,\n-                \"ouiaId\": null,\n-              }\n-            }\n+          <button\n+            aria-disabled={null}\n+            aria-label={null}\n+            className=\"pf-c-button pf-m-link\"\n+            disabled={false}\n+            onClick={[Function]}\n+            tabIndex={null}\n+            type=\"button\"\n           >\n-            <nav\n-              aria-label=\"Breadcrumb\"\n-              className=\"pf-c-breadcrumb\"\n+            <span\n+              className=\"pf-c-button__text\"\n             >\n-              <ol\n-                className=\"pf-c-breadcrumb__list\"\n-              >\n-                <BreadcrumbItem>\n-                  <li\n-                    className=\"pf-c-breadcrumb__item\"\n-                  >\n-                    <Link\n-                      to=\"/\"\n-                    >\n-                      <LinkAnchor\n-                        href=\"/\"\n-                        navigate={[Function]}\n-                      >\n-                        <a\n-                          href=\"/\"\n-                          onClick={[Function]}\n-                        >\n-                          Home\n-                        </a>\n-                      </LinkAnchor>\n-                    </Link>\n-                    <span\n-                      className=\"pf-c-breadcrumb__item-divider\"\n-                    >\n-                      <AngleRightIcon\n-                        color=\"currentColor\"\n-                        noVerticalAlign={false}\n-                        size=\"sm\"\n-                        title={null}\n-                      >\n-                        <svg\n-                          aria-hidden={true}\n-                          aria-labelledby={null}\n-                          fill=\"currentColor\"\n-                          height=\"1em\"\n-                          role=\"img\"\n-                          style={\n+              Reset to default\n+            </span>\n+          </button>\n+        </Button>\n+      </ComponentWithOuia>\n+    </Component>\n+  </div>\n+</EmptyState>\n+`;\n+\n+exports[`ProcessListPage component tests error in query - with businesskey 1`] = `\n+<BrowserRouter>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEyOTcxOA=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 287}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTAxODE1OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo0ODoxOVrOGvL1_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMToyNjo0MFrOGvM-OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzMDMwMQ==", "bodyText": "swap find and update() - update() apparently resets the wrapper to root.", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452130301", "createdAt": "2020-07-09T10:48:19Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "diffHunk": "@@ -1,22 +1,518 @@\n import React from 'react';\n import ProcessListPage from '../ProcessListPage';\n-import { getWrapper } from '@kogito-apps/common';\n-import { MemoryRouter as Router } from 'react-router-dom';\n+import { GraphQL, getWrapperAsync } from '@kogito-apps/common';\n import { MockedProvider } from '@apollo/react-testing';\n-\n-jest.mock('../../../Molecules/ProcessListToolbar/ProcessListToolbar');\n+import { BrowserRouter } from 'react-router-dom';\n+import { Button, EmptyStateBody, EmptyState } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n jest.mock('../../../Organisms/ProcessListTable/ProcessListTable');\n+jest.mock('../../../Atoms/ProcessListBulkInstances/ProcessListBulkInstances');\n+jest.mock('../../../Atoms/ProcessListModal/ProcessListModal');\n+\n+const routeComponentPropsMock1 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock2 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: ['MQQ640']\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock3 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const mocks1 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: null,\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: GraphQL.ProcessInstanceState.Active,\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n \n+const mocks2 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: [{ businessKey: { like: 'MQQ640' } }]\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: 'MQQ640',\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: 'ACTIVE',\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: ['rr'],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n+\n+const mocks5 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks4 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: ['wwrr']\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n describe('ProcessListPage component tests', () => {\n-  it('Snapshot tests', () => {\n-    const wrapper = getWrapper(\n-      <Router>\n-        <MockedProvider>\n-          <ProcessListPage />\n+  /* tslint:disable */\n+  it('on FilterClick tests- without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['id']\n+    ).toEqual(mocks1[0].result.data.ProcessInstances[0].id);\n+  });\n+\n+  it('on FilterClick tests- with businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks2} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock2} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['businessKey']\n+    ).toEqual(mocks2[0].result.data.ProcessInstances[0].businessKey);\n+  });\n+\n+  it('error in query - without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks3} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n         </MockedProvider>\n-      </Router>,\n+      </BrowserRouter>,\n       'ProcessListPage'\n     );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('ServerErrors');\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n     expect(wrapper).toMatchSnapshot();\n   });\n+\n+  it('error in query - with businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks4} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock2} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.find('ServerErrors');\n+    wrapper = wrapper.update();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 488}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0ODc5Mw==", "bodyText": "done :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452148793", "createdAt": "2020-07-09T11:26:40Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessListPage/tests/ProcessListPage.test.tsx", "diffHunk": "@@ -1,22 +1,518 @@\n import React from 'react';\n import ProcessListPage from '../ProcessListPage';\n-import { getWrapper } from '@kogito-apps/common';\n-import { MemoryRouter as Router } from 'react-router-dom';\n+import { GraphQL, getWrapperAsync } from '@kogito-apps/common';\n import { MockedProvider } from '@apollo/react-testing';\n-\n-jest.mock('../../../Molecules/ProcessListToolbar/ProcessListToolbar');\n+import { BrowserRouter } from 'react-router-dom';\n+import { Button, EmptyStateBody, EmptyState } from '@patternfly/react-core';\n+import { act } from 'react-dom/test-utils';\n jest.mock('../../../Organisms/ProcessListTable/ProcessListTable');\n+jest.mock('../../../Atoms/ProcessListBulkInstances/ProcessListBulkInstances');\n+jest.mock('../../../Atoms/ProcessListModal/ProcessListModal');\n+\n+const routeComponentPropsMock1 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock2 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [GraphQL.ProcessInstanceState.Active],\n+        businessKey: ['MQQ640']\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const routeComponentPropsMock3 = {\n+  history: {} as any,\n+  location: {\n+    pathname: '/ProcessInstances',\n+    state: {\n+      filters: {\n+        status: [],\n+        businessKey: []\n+      }\n+    }\n+  } as any,\n+  match: {\n+    params: {}\n+  } as any\n+};\n+\n+const mocks1 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: null,\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: GraphQL.ProcessInstanceState.Active,\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n \n+const mocks2 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: [{ businessKey: { like: 'MQQ640' } }]\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: [\n+          {\n+            id: '201a8a42-043e-375a-9f52-57c804b24db4',\n+            processId: 'travels',\n+            processName: 'travels',\n+            businessKey: 'MQQ640',\n+            rootProcessInstanceId: null,\n+            parentProcessInstanceId: null,\n+            parentProcessInstance: null,\n+            roles: [],\n+            variables:\n+              '{\"flight\":{\"flightNumber\":\"MX555\",\"seat\":null,\"gate\":null,\"departure\":\"2020-05-08T03:30:00.000+05:30\",\"arrival\":\"2020-05-09T03:30:00.000+05:30\"},\"hotel\":{\"name\":\"Perfect hotel\",\"address\":{\"street\":\"street\",\"city\":\"Bengaluru\",\"zipCode\":\"12345\",\"country\":\"India\"},\"phone\":\"09876543\",\"bookingNumber\":\"XX-012345\",\"room\":null},\"trip\":{\"city\":\"Bengaluru\",\"country\":\"India\",\"begin\":\"2020-05-08T03:30:00.000+05:30\",\"end\":\"2020-05-09T03:30:00.000+05:30\",\"visaRequired\":false},\"traveller\":{\"firstName\":\"Ajay\",\"lastName\":\"Jaganathan\",\"email\":\"ajaganat@redhat.com\",\"nationality\":\"Polish\",\"address\":{\"street\":\"Bangalore\",\"city\":\"Bangalore\",\"zipCode\":\"560093\",\"country\":\"Poland\"}}}',\n+            state: 'ACTIVE',\n+            start: '2020-05-07T06:50:18.274Z',\n+            lastUpdate: '2020-05-07T06:50:18.502Z',\n+            end: null,\n+            addons: [\n+              'process-management',\n+              'infinispan-persistence',\n+              'prometheus-monitoring'\n+            ],\n+            endpoint: 'http://localhost:8080/travels',\n+            serviceUrl: 'http://localhost:8080',\n+            error: null,\n+            childProcessInstances: [\n+              {\n+                id: 'bfde98ed-0cdd-4700-ae87-377f7ec430cd',\n+                processName: 'HotelBooking',\n+                businessKey: null\n+              },\n+              {\n+                id: 'e607b2a9-0aca-4788-9623-dd2e156ce9c4',\n+                processName: 'FlightBooking',\n+                businessKey: null\n+              }\n+            ],\n+            nodes: [\n+              {\n+                id: '39d5fe7c-4e37-44ce-8d25-05a4a29ec6ea',\n+                nodeId: '17',\n+                name: 'Book Hotel',\n+                enter: '2020-05-07T06:50:18.429Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_1A708F87-11C0-42A0-A464-0B7E259C426F'\n+              },\n+              {\n+                id: '1d3d7ebe-79ec-4848-b1d6-d7c5a371b4dd',\n+                nodeId: '8',\n+                name: 'Confirm travel',\n+                enter: '2020-05-07T06:50:18.443Z',\n+                exit: null,\n+                type: 'HumanTaskNode',\n+                definitionId: '_2140F05A-364F-40B3-BB7B-B12927065DF8'\n+              },\n+              {\n+                id: '4fc774f5-c429-4b97-8981-bd60d1f59954',\n+                nodeId: '7',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.442Z',\n+                exit: '2020-05-07T06:50:18.443Z',\n+                type: 'Join',\n+                definitionId: '_5D0733B5-53FE-40E9-9900-4CC13419C67A'\n+              },\n+              {\n+                id: '60309b28-1dbe-49c3-b0d8-8cefb86be8b4',\n+                nodeId: '10',\n+                name: 'Book Flight',\n+                enter: '2020-05-07T06:50:18.439Z',\n+                exit: '2020-05-07T06:50:18.442Z',\n+                type: 'SubProcessNode',\n+                definitionId: '_F543B3F0-AB44-4A5B-BF17-8D9DEB505815'\n+              },\n+              {\n+                id: 'efa5a6c0-9470-4405-8609-620bdbfbb6d9',\n+                nodeId: '2',\n+                name: 'Book',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.439Z',\n+                type: 'Split',\n+                definitionId: '_175DC79D-C2F1-4B28-BE2D-B583DFABF70D'\n+              },\n+              {\n+                id: 'acc87f1f-e436-4364-b4d3-9069ddb359c9',\n+                nodeId: '14',\n+                name: 'Join',\n+                enter: '2020-05-07T06:50:18.428Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Join',\n+                definitionId: '_B34ADDEE-DEA5-47C5-A913-F8B85ED5641F'\n+              },\n+              {\n+                id: '6c20729a-3e2b-44c5-af5c-8554f21a7ebf',\n+                nodeId: '15',\n+                name: 'is visa required',\n+                enter: '2020-05-07T06:50:18.427Z',\n+                exit: '2020-05-07T06:50:18.428Z',\n+                type: 'Split',\n+                definitionId: '_5EA95D17-59A6-4567-92DF-74D36CE7F35A'\n+              },\n+              {\n+                id: '3fb92a0a-e88b-45a4-a48b-65f11a679b96',\n+                nodeId: '5',\n+                name: 'Visa check',\n+                enter: '2020-05-07T06:50:18.278Z',\n+                exit: '2020-05-07T06:50:18.427Z',\n+                type: 'RuleSetNode',\n+                definitionId: '_54ABE1ED-61BE-45F9-812C-795A5D4ED35E'\n+              },\n+              {\n+                id: '2860e474-dffc-498c-8731-e6b6f0b5d4d4',\n+                nodeId: '16',\n+                name: 'StartProcess',\n+                enter: '2020-05-07T06:50:18.276Z',\n+                exit: '2020-05-07T06:50:18.278Z',\n+                type: 'StartNode',\n+                definitionId: '_1B11BEC9-402A-4E73-959A-296BD334CAB0'\n+              }\n+            ]\n+          }\n+        ]\n+      }\n+    }\n+  }\n+];\n+\n+const mocks3 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: ['rr'],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n+\n+const mocks5 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesDocument,\n+      variables: {\n+        state: [],\n+        offset: 0,\n+        limit: 10\n+      }\n+    },\n+    result: {\n+      data: {\n+        ProcessInstances: []\n+      }\n+    }\n+  }\n+];\n+\n+const mocks4 = [\n+  {\n+    request: {\n+      query: GraphQL.GetProcessInstancesWithBusinessKeyDocument,\n+      variables: {\n+        state: [GraphQL.ProcessInstanceState.Active],\n+        offset: 0,\n+        limit: 10,\n+        businessKeys: ['wwrr']\n+      }\n+    },\n+    error: new Error('something went wrong')\n+  }\n+];\n describe('ProcessListPage component tests', () => {\n-  it('Snapshot tests', () => {\n-    const wrapper = getWrapper(\n-      <Router>\n-        <MockedProvider>\n-          <ProcessListPage />\n+  /* tslint:disable */\n+  it('on FilterClick tests- without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks1} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['id']\n+    ).toEqual(mocks1[0].result.data.ProcessInstances[0].id);\n+  });\n+\n+  it('on FilterClick tests- with businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks2} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock2} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper.find('MockedProcessListTable').props()['initData'][\n+        'ProcessInstances'\n+      ][0]['businessKey']\n+    ).toEqual(mocks2[0].result.data.ProcessInstances[0].businessKey);\n+  });\n+\n+  it('error in query - without businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks3} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock1} />\n         </MockedProvider>\n-      </Router>,\n+      </BrowserRouter>,\n       'ProcessListPage'\n     );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.update();\n+    wrapper = wrapper.find('ServerErrors');\n+    expect(\n+      wrapper\n+        .find(EmptyStateBody)\n+        .children()\n+        .html()\n+        .includes('An error occurred while accessing data.')\n+    ).toBeTruthy();\n     expect(wrapper).toMatchSnapshot();\n   });\n+\n+  it('error in query - with businesskey', async () => {\n+    let wrapper = await getWrapperAsync(\n+      <BrowserRouter>\n+        <MockedProvider mocks={mocks4} addTypename={false}>\n+          <ProcessListPage {...routeComponentPropsMock2} />\n+        </MockedProvider>\n+      </BrowserRouter>,\n+      'ProcessListPage'\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#apply-filter-button')\n+        .find(Button)\n+        .find('button')\n+        .simulate('click');\n+    });\n+    wrapper = wrapper.find('ServerErrors');\n+    wrapper = wrapper.update();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzMDMwMQ=="}, "originalCommit": {"oid": "daa6e79e506f5405b49e0c74a5e837fb5cab51a0"}, "originalPosition": 488}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAxOTc1OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MDowOVrOGvo2gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MDowOVrOGvo2gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNTU2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      `The process ${data.ProcessInstances[0].processName} was successfully Aborted.`,\n          \n          \n            \n                      `The process ${data.ProcessInstances[0].processName} was successfully aborted.`,", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452605568", "createdAt": "2020-07-10T03:40:09Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -65,6 +70,33 @@ const ProcessDetailsPage: React.FC<\n     return ouiaPageTypeAndObjectId(ouiaContext, 'process-instances', id);\n   });\n \n+  const onShowMessage = (\n+    title: string,\n+    content: string,\n+    type: TitleType\n+  ): void => {\n+    setTitleType(type);\n+    setModalTitle(title);\n+    setModalContent(content);\n+    handleModalToggle();\n+  };\n+  const onAbortClick = () => {\n+    handleAbort(\n+      data.ProcessInstances[0],\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${data.ProcessInstances[0].processName} was successfully Aborted.`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAyMTE1OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MTowMVrOGvo3Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MTowMVrOGvo3Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNTc3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      `The process ${data.ProcessInstances[0].processName} failed to Abort. Message: ${errorMessage}`,\n          \n          \n            \n                      `Failed to abort process ${data.ProcessInstances[0].processName}. Message: ${errorMessage}`,\n          \n      \n    \n    \n  \n\n@nmirasch @srambach wdyt?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452605779", "createdAt": "2020-07-10T03:41:01Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -65,6 +70,33 @@ const ProcessDetailsPage: React.FC<\n     return ouiaPageTypeAndObjectId(ouiaContext, 'process-instances', id);\n   });\n \n+  const onShowMessage = (\n+    title: string,\n+    content: string,\n+    type: TitleType\n+  ): void => {\n+    setTitleType(type);\n+    setModalTitle(title);\n+    setModalContent(content);\n+    handleModalToggle();\n+  };\n+  const onAbortClick = () => {\n+    handleAbort(\n+      data.ProcessInstances[0],\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${data.ProcessInstances[0].processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${data.ProcessInstances[0].processName} failed to Abort. Message: ${errorMessage}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAyNDcwOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MzozM1rOGvo5Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0MzozM1rOGvo5Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjI5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      `The process ${processInstanceData.processName} was successfully Aborted.`,\n          \n          \n            \n                      `The process ${processInstanceData.processName} was successfully aborted.`,", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452606299", "createdAt": "2020-07-10T03:43:33Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -147,6 +146,25 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n         )\n     );\n   };\n+\n+  const onAbortClick = () => {\n+    handleAbort(\n+      processInstanceData,\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${processInstanceData.processName} was successfully Aborted.`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAyNTM1OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0NDowMlrOGvo5xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0NDowMlrOGvo5xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjQwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      `The process ${processInstanceData.processName} failed to Abort. Message: ${errorMessage}`,\n          \n          \n            \n                      `Failed to abort process ${processInstanceData.processName}. Message: ${errorMessage}`,", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452606406", "createdAt": "2020-07-10T03:44:02Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -147,6 +146,25 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n         )\n     );\n   };\n+\n+  const onAbortClick = () => {\n+    handleAbort(\n+      processInstanceData,\n+      () =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${processInstanceData.processName} was successfully Aborted.`,\n+          TitleType.SUCCESS\n+        ),\n+      (errorMessage: string) =>\n+        onShowMessage(\n+          'Abort operation',\n+          `The process ${processInstanceData.processName} failed to Abort. Message: ${errorMessage}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAyNjI4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0NDozNFrOGvo6TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDoyMzoxM1rOGvpaNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjU0MA==", "bodyText": "global settings to avoid these comments? :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452606540", "createdAt": "2020-07-10T03:44:34Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -181,8 +199,10 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n     const copyOfInitData = { ...initData };\n     let copyOfAbortedObject = { ...abortedObj };\n     copyOfInitData.ProcessInstances.map(instanceData => {\n+      /* istanbul ignore else*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNDcxMA==", "bodyText": "removed :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452614710", "createdAt": "2020-07-10T04:23:13Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Molecules/ProcessListTableItems/ProcessListTableItems.tsx", "diffHunk": "@@ -181,8 +199,10 @@ const ProcessListTableItems: React.FC<IOwnProps> = ({\n     const copyOfInitData = { ...initData };\n     let copyOfAbortedObject = { ...abortedObj };\n     copyOfInitData.ProcessInstances.map(instanceData => {\n+      /* istanbul ignore else*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjU0MA=="}, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjAyODEyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/ProcessListTable.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzo0NTozOFrOGvo7Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDoyMzoyM1rOGvpaWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjc5MQ==", "bodyText": "why is it needed?", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452606791", "createdAt": "2020-07-10T03:45:38Z", "author": {"login": "cristianonicolai"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/ProcessListTable.tsx", "diffHunk": "@@ -36,36 +38,69 @@ const ProcessListTable: React.FC<IOwnProps> = ({\n   setLimit,\n   isLoading,\n   setIsError,\n-  checkedArray,\n   abortedObj,\n   setAbortedObj,\n   pageSize,\n-  isFilterClicked,\n   filters,\n   setIsAllChecked,\n   selectedNumber,\n   setSelectedNumber\n }) => {\n+  // @ts-ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNDc0Ng==", "bodyText": "removed :)", "url": "https://github.com/kiegroup/kogito-apps/pull/260#discussion_r452614746", "createdAt": "2020-07-10T04:23:23Z", "author": {"login": "AjayJagan"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessListTable/ProcessListTable.tsx", "diffHunk": "@@ -36,36 +38,69 @@ const ProcessListTable: React.FC<IOwnProps> = ({\n   setLimit,\n   isLoading,\n   setIsError,\n-  checkedArray,\n   abortedObj,\n   setAbortedObj,\n   pageSize,\n-  isFilterClicked,\n   filters,\n   setIsAllChecked,\n   selectedNumber,\n   setSelectedNumber\n }) => {\n+  // @ts-ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNjc5MQ=="}, "originalCommit": {"oid": "2a7afb4a8bab6253c57233db289759fbf7f2a49e"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 973, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}