{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjA1MTM0", "number": 181, "title": "KOGITO-1851- readme for management console(process list and details)", "bodyText": "", "createdAt": "2020-04-14T14:04:06Z", "url": "https://github.com/kiegroup/kogito-apps/pull/181", "merged": true, "mergeCommit": {"oid": "02bafa150f357f3fe72ac9570bd802c9538b2994"}, "closed": true, "closedAt": "2020-04-17T10:49:29Z", "author": {"login": "AjayJagan"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXlJLPgFqTM5Mjk2Njc5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYa4UtgBqjMyNDI5Mzk2MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTY2Nzk2", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-392966796", "createdAt": "2020-04-14T14:12:01Z", "commit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoxMjowMVrOGFQmkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyMjoyN1rOGFUA7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2ODA4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Process instance list\n          \n          \n            \n            ### Process instances", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408168081", "createdAt": "2020-04-14T14:12:01Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2OTI4Ng==", "bodyText": "@AjayJagan perhaps a small introduction about the list itself? how it aggregates processes, the data that is shown, etc.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408169286", "createdAt": "2020-04-14T14:13:33Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3MTIyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n          \n          \n            \n              The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408171221", "createdAt": "2020-04-14T14:16:03Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3MTY0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Multi select checkbox\n          \n          \n            \n            #### Bulk Process Actions", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408171649", "createdAt": "2020-04-14T14:16:39Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Multi select checkbox", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3MzA0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### List\n          \n          \n            \n            #### Process list", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408173046", "createdAt": "2020-04-14T14:18:31Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Multi select checkbox\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### List", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NDE1MA==", "bodyText": "perhaps bring bulk operations content to here.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408174150", "createdAt": "2020-04-14T14:19:53Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Multi select checkbox", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3MTY0OQ=="}, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMzk4Mg==", "bodyText": "It also shows nodes that are in error and in there the user can do retry and skip operations.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r408223982", "createdAt": "2020-04-14T15:22:27Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,127 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instance list\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a human-readable text that might or mightnot be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition.Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Multi select checkbox\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### List\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The is shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :\n+  * Checkbox\n+  * Process name\n+  * State of the process\n+  * when was the process created\n+  * when was the process updated\n+  * a kebab button to provide [process-management](#process-management) functions\n+  \n+  The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.\n+  The child process instance also has a similar sturcture as mentioned above.\n+\n+  **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` missing or the `process management` capability disabled.\n+\n+  **Process name** - It shows the process name of the instance along with the business key (as a blue badge) if available. If business key is absent, then it shows\n+  the spliced process instance id(spliced to 5 chars). When hovered over the process name ,a tooltip with the full process instance id pops up.\n+\n+  **Status** - The process status along with their corresponding icons is shown. For instances in **Error**, a pop over shows up with the corresponding error message. Also there is a provision to either Skip or Retry the error instance.\n+\n+  **Process** **Created** - This shows the time elapsed from the process creation.\n+\n+  **Last** **Updated** - This shows the time elapsed from the last update.\n+\n+  **Kebab** **button** - The kebab button is enabled or disabled based on the process instance status and the contents of the kebab button varies based on the process-management capability provided to the particular instance. It consists of Abort, Skip and Retry.\n+\n+#### Bulk operations\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort seleted*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+#### Process management\n+\n+  There are currently three process management capabilities in the process instance list.\n+  * Abort\n+  * Skip\n+  * Retry\n+\n+  ##### Abort : \n+  An instance which is either in *Active*, *Error*, *Suspended* state can be aborted. Clicking on the abort would open up a box displaying the instance which was aborted.\n+  #### Skip :\n+  A node in *Error* state can be skipped. Clicking on the skip would open up a box displaying the success or failure state of the skip operation.\n+  #### Retry :\n+  A node in *Error* state can be Retriggered. Clicking on the Retry would open up a box displaying the success or failure state of the Retry operation.\n+\n+  ### Process instance Details\n+\n+  ![Processdetails](./docs/processdetails.png?raw=true \"Processdetails\")\n+\n+  The process details page consist of the following :\n+\n+  #### Heading\n+  The heading shows the name of the process instance. The heading also shows the business key(if available) as a blue coloured badge. \n+  In the absence of business key it shows the process instance id as a concatenated string.\n+\n+  #### Process management buttons\n+  The process management buttons consist of the following\n+  * *Abort* - Abort button aborts the process instance. Clicking on abort button results in opening a checkbox to show the process instance which was aborted.\n+\n+  #### Details\n+  The details consist of the following :\n+\n+  * *Name* - shows the name of the travels\n+  * *BusinessKey* - shows the business key if available\n+  * *State* - shows the current state of the process instance\n+  * *Id* - shows the full unique id of the process instance\n+  * *Endpoint* - Shows the endpoint of the backend to which the client is connected\n+  * *Start* - shows the time elapased from the start of the process\n+  * *End* - shows the time elapased from the end of the process(if available)\n+  * *Parent process* - shows if the current process instance has a parent process. Allows navigation to the parent process when clicked on. Shows the unique id when hovered over.\n+  * *Sub processes* - shows if the current process instance has sub processes.Allows navigation to the respective child process when clicked on. Shows the unique id when hovered over\n+\n+  #### Timeline\n+  The timeline shows the timeline of all the nodes of a process.It shows the state of the node(*Active* or *Completed*), the name of ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f36bb1974dd02f042a6e34bc5151aca61dc416"}, "originalPosition": 125}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6352160c0c570b8a48d097f726f27d138fe44de", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d6352160c0c570b8a48d097f726f27d138fe44de", "committedDate": "2020-04-15T05:28:33Z", "message": "Update management-console/README.md\n\nCo-Authored-By: Cristiano Nicolai <cristiano.nicolai@gmail.com>"}, "afterCommit": {"oid": "08afc94b335c73bff8b0748090ba624327e7d1f6", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/08afc94b335c73bff8b0748090ba624327e7d1f6", "committedDate": "2020-04-15T05:51:29Z", "message": "updating readme content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDE3MTEz", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394417113", "createdAt": "2020-04-16T08:38:59Z", "commit": {"oid": "08afc94b335c73bff8b0748090ba624327e7d1f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODozOTowMFrOGGaslQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODozOTowMFrOGGaslQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM4MjAzNw==", "bodyText": "@AjayJagan Abort seleted --> *Abort selected", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409382037", "createdAt": "2020-04-16T08:39:00Z", "author": {"login": "nmirasch"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes the *name* of the process instances, the *enpoint* of the process, the *status* of the process etc. The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort seleted*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08afc94b335c73bff8b0748090ba624327e7d1f6"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDIwNzgx", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394420781", "createdAt": "2020-04-16T08:43:56Z", "commit": {"oid": "08afc94b335c73bff8b0748090ba624327e7d1f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo0Mzo1NlrOGGa4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODo0Mzo1NlrOGGa4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM4NTA4OQ==", "bodyText": "\"The info includes the name of the process instances, the enpoint of the process, the status of the process etc\" -->\n\"The info includes process instance  details like name, status, endpoint, etc...", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409385089", "createdAt": "2020-04-16T08:43:56Z", "author": {"login": "nmirasch"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes the *name* of the process instances, the *enpoint* of the process, the *status* of the process etc. The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08afc94b335c73bff8b0748090ba624327e7d1f6"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ddcd507cefa7d0624ddb818efd8c6b0b6d969aa", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5ddcd507cefa7d0624ddb818efd8c6b0b6d969aa", "committedDate": "2020-04-16T08:42:24Z", "message": "Update README.md"}, "afterCommit": {"oid": "8a2dc66e3adc306094296735ea9f45a9605aa56f", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8a2dc66e3adc306094296735ea9f45a9605aa56f", "committedDate": "2020-04-16T08:47:31Z", "message": "updating readme content"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a2dc66e3adc306094296735ea9f45a9605aa56f", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8a2dc66e3adc306094296735ea9f45a9605aa56f", "committedDate": "2020-04-16T08:47:31Z", "message": "updating readme content"}, "afterCommit": {"oid": "a8d9687c54424553f953eb61ec1e446df3ae5b83", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a8d9687c54424553f953eb61ec1e446df3ae5b83", "committedDate": "2020-04-16T08:49:37Z", "message": "updating readme content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDM3NzQw", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394437740", "createdAt": "2020-04-16T09:05:05Z", "commit": {"oid": "a8d9687c54424553f953eb61ec1e446df3ae5b83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowNTowNVrOGGbu4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTowNTowNVrOGGbu4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5OTAwOQ==", "bodyText": "@AjayJagan The is --> The list?\nthe details shows --> the details shown", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409399009", "createdAt": "2020-04-16T09:05:05Z", "author": {"login": "nmirasch"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### Process list\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The is shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d9687c54424553f953eb61ec1e446df3ae5b83"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8d9687c54424553f953eb61ec1e446df3ae5b83", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a8d9687c54424553f953eb61ec1e446df3ae5b83", "committedDate": "2020-04-16T08:49:37Z", "message": "updating readme content"}, "afterCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/72099b2950b47d065c00a41e3836edf8dccb3367", "committedDate": "2020-04-16T09:07:47Z", "message": "updating readme content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NDcxNTU2", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394471556", "createdAt": "2020-04-16T09:47:57Z", "commit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTo0ODo1N1rOGGdcGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMTowNTowMFrOGGgITg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQyNjk3MQ==", "bodyText": "\"The process instance list shows the list of instances available\".  -> do we need this line again as we have already talked about process instance list above. and how about using \"It has two ways of filtering the list:\"", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409426971", "createdAt": "2020-04-16T09:48:57Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzMTQ1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n          \n          \n            \n            Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and select the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by deselecting the options from the dropdown and clicking on **Apply filter** or by clicking on the '**X**' in the chip.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409431455", "createdAt": "2020-04-16T09:56:07Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MTE4NQ==", "bodyText": "Can we change \"checking the checkbox\" to \"selecting the checkbox\". find it more appropriate.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409461185", "createdAt": "2020-04-16T10:46:46Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2MzYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.\n          \n          \n            \n              The list has a toggle button on the left end, which when toggled would load all the child process instances of that parent process instance.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409463600", "createdAt": "2020-04-16T10:51:12Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### Process list\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The List shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :\n+  * Checkbox\n+  * Process name\n+  * State of the process\n+  * when was the process created\n+  * when was the process updated\n+  * a kebab button to provide [process-management](#process-management) functions\n+  \n+  The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ2NDgxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` missing or the `process management` capability disabled.\n          \n          \n            \n              **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` or the `process management` capability is disabled.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409464812", "createdAt": "2020-04-16T10:53:18Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### Process list\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The List shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :\n+  * Checkbox\n+  * Process name\n+  * State of the process\n+  * when was the process created\n+  * when was the process updated\n+  * a kebab button to provide [process-management](#process-management) functions\n+  \n+  The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.\n+  The child process instance also has a similar sturcture as mentioned above.\n+\n+  **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` missing or the `process management` capability disabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ3MDgyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              A node in *Error* state can be skipped. Clicking on the skip would open up a box displaying the success or failure state of the skip operation.\n          \n          \n            \n              A node in *Error* state can be skipped. Clicking on the skip would open up a box displaying the success or failure status of the skip operation.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409470823", "createdAt": "2020-04-16T11:04:32Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### Process list\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The List shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :\n+  * Checkbox\n+  * Process name\n+  * State of the process\n+  * when was the process created\n+  * when was the process updated\n+  * a kebab button to provide [process-management](#process-management) functions\n+  \n+  The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.\n+  The child process instance also has a similar sturcture as mentioned above.\n+\n+  **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` missing or the `process management` capability disabled.\n+\n+  **Process name** - It shows the process name of the instance along with the business key (as a blue badge) if available. If business key is absent, then it shows\n+  the spliced process instance id(spliced to 5 chars). When hovered over the process name ,a tooltip with the full process instance id pops up.\n+\n+  **Status** - The process status along with their corresponding icons is shown. For instances in **Error**, a pop over shows up with the corresponding error message. Also there is a provision to either Skip or Retry the error instance.\n+\n+  **Process** **Created** - This shows the time elapsed from the process creation.\n+\n+  **Last** **Updated** - This shows the time elapsed from the last update.\n+\n+  **Kebab** **button** - The kebab button is enabled or disabled based on the process instance status and the contents of the kebab button varies based on the process-management capability provided to the particular instance. It consists of Abort, Skip and Retry.\n+\n+#### Bulk operations\n+\n+  \n+\n+#### Process management\n+\n+  There are currently three process management capabilities in the process instance list.\n+  * Abort\n+  * Skip\n+  * Retry\n+\n+  ##### Abort : \n+  An instance which is either in *Active*, *Error*, *Suspended* state can be aborted. Clicking on the abort would open up a box displaying the instance which was aborted.\n+  #### Skip :\n+  A node in *Error* state can be skipped. Clicking on the skip would open up a box displaying the success or failure state of the skip operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ3MTA1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              A node in *Error* state can be Retriggered. Clicking on the Retry would open up a box displaying the success or failure state of the Retry operation.\n          \n          \n            \n              A node in *Error* state can be Retriggered. Clicking on the Retry would open up a box displaying the success or failure status of the Retry operation.", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r409471054", "createdAt": "2020-04-16T11:05:00Z", "author": {"login": "Sara4994"}, "path": "management-console/README.md", "diffHunk": "@@ -60,4 +60,130 @@ mvn package -Dui.deps -Dui\n The native build of the application bundling in the React JS frontend does not differ from the instructions above. The only thing that's new is again the invocation of UI specific profiles.\n ```\n mvn package -Dui -Dnative\n-```\n\\ No newline at end of file\n+```\n+\n+## Working with management-console features\n+\n+### Process instances\n+The process instances page shows the list of process instances available. The list is an expandable list , which shows all the child process instance of the particular process instance when expanded. Each row in the list contains the information about the process instances. The info includes details like *name*, *status*, *endpoint* etc... The list also provides many ways to [filter](#filters) out the process instances and also to perform [process-management](#process-management) operations to the processes. The details of them are mentioned below.\n+\n+#### Filters\n+\n+![Filters](./docs/filters.png?raw=true \"Filters\")\n+\n+The process instance list shows the list of instances available.It consists of two filters to filter the list:\n+* filter by status (a checkbox based filter)\n+* search by Business key (a textbox based filter)\n+These two filters can be used in combination to filter the list.\n+\n+##### a) Filter by status :\n+![Status](./docs/status.png?raw=true \"Status\")\n+\n+\n+\n+There are five status in total :\n+ * Active\n+ * Completed\n+ * Aborted\n+ * Suspended\n+ * Error\n+ \n+Initially the process instance list loads all the active instances available.To search using different filters, click on the dropdown with the **Status** tag and check the necessary status from the drowdown. Click on **Apply filter** to load the new list.Also there is a **chip array** below the filters to show the current filters applied. The filters for status can be removed by either by unchecking the status in the dropdown and clicking on **Apply filter** or clicking on the '**X**' in the chip.\n+\n+##### b) Filter by business key :\n+  ![Businesskeysearch](./docs/businesskeysearch.gif \"Businessekeysearch\")\n+\n+  The business key is a business relevant identifier that might or might not be present in the process instance. The business key, if available would appear as a **blue coloured badge** near the process name in the list. We can enter the business key or parts of business key in the textbox and either click **Apply filter** or press **Enter** key to apply the filter. Similar to the Status filter, the chips with the typed keywords would appear below the textbox. The search for business key works on a *OR* based condition. Also to remove a filter based on the keyword, click on the '**X**' in the chip to remove and the list will reload to show the applied filter. The search supports [Wild cards](https://en.wikipedia.org/wiki/Wildcard_character \"Wild cards\") in its keywords. For example, consider a process having a business key as *WIOO2E*. This business key can be searched by entering *W\\** or *\\*OO\\** or *WIOO2E*. \n+\n+#### Bulk Process Actions\n+![Multiselect](./docs/multiselect.gif \"Multiselect\")\n+\n+  The multi select is used to select multiple process instances while performing bulk [process-management](#process-management) actions.The multi select checkbox by default selects all the parent and child process instances(if loaded). It also has drop-down actions to select none (removes all selections), select only parent process instances, select all the process instances (both parent and child). The multi-select works in correlation with the **Aborted** **selected** button which is present in the top-right corner.This is a part of the [bulk operations](#bulk-operations) performed in the list.\n+\n+  ![Bulkoperations](./docs/bulkoperations.gif \"Bulkoperations\")\n+  \n+  The process instance list allows the user to select multiple process instances and perform bulk process management operations.It consist of *Abort selected*.The user can select individual process instances by checking the checkbox present in the list or use the [multi select checkbox](#multi-select-checkbox) to select the process instances.Then clicking on the *Abort selected* will open a box to show the instances being aborted and the instances being skipped(An instance which is already in *Completed* or *Aborted* cannot be Aborted again, hence the instances are skipped).\n+\n+In addition to these , there is a **reload** button(a sync-icon), to reload the list and a **Reset to default** button which resets all the filters to its original state(Active status and no business key filter).\n+\n+**Note :** all the filters are applied only to the parent process instances.\n+\n+#### Process list\n+\n+![Processlist](./docs/processlist.png?raw=true \"Processlist\")\n+\n+  The List shows details of the process instances. Initially it loads only the parent process instances. The following are the details shows in the list :\n+  * Checkbox\n+  * Process name\n+  * State of the process\n+  * when was the process created\n+  * when was the process updated\n+  * a kebab button to provide [process-management](#process-management) functions\n+  \n+  The list has a toggle button on the left end, which when toggled would load all the child process instances of the parent process instance.\n+  The child process instance also has a similar sturcture as mentioned above.\n+\n+  **Checkbox** - A checkbox to select the process instance to perform [process-management](#process-management) operations. Checkboxes which are disabled either do not have `kogito.service.url` missing or the `process management` capability disabled.\n+\n+  **Process name** - It shows the process name of the instance along with the business key (as a blue badge) if available. If business key is absent, then it shows\n+  the spliced process instance id(spliced to 5 chars). When hovered over the process name ,a tooltip with the full process instance id pops up.\n+\n+  **Status** - The process status along with their corresponding icons is shown. For instances in **Error**, a pop over shows up with the corresponding error message. Also there is a provision to either Skip or Retry the error instance.\n+\n+  **Process** **Created** - This shows the time elapsed from the process creation.\n+\n+  **Last** **Updated** - This shows the time elapsed from the last update.\n+\n+  **Kebab** **button** - The kebab button is enabled or disabled based on the process instance status and the contents of the kebab button varies based on the process-management capability provided to the particular instance. It consists of Abort, Skip and Retry.\n+\n+#### Bulk operations\n+\n+  \n+\n+#### Process management\n+\n+  There are currently three process management capabilities in the process instance list.\n+  * Abort\n+  * Skip\n+  * Retry\n+\n+  ##### Abort : \n+  An instance which is either in *Active*, *Error*, *Suspended* state can be aborted. Clicking on the abort would open up a box displaying the instance which was aborted.\n+  #### Skip :\n+  A node in *Error* state can be skipped. Clicking on the skip would open up a box displaying the success or failure state of the skip operation.\n+  #### Retry :\n+  A node in *Error* state can be Retriggered. Clicking on the Retry would open up a box displaying the success or failure state of the Retry operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367"}, "originalPosition": 98}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72099b2950b47d065c00a41e3836edf8dccb3367", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/72099b2950b47d065c00a41e3836edf8dccb3367", "committedDate": "2020-04-16T09:07:47Z", "message": "updating readme content"}, "afterCommit": {"oid": "cd92caf7784d3e9648a779a0e877d9777c84c3b4", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/cd92caf7784d3e9648a779a0e877d9777c84c3b4", "committedDate": "2020-04-16T11:17:38Z", "message": "updating readme content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTM3MTQz", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394537143", "createdAt": "2020-04-16T11:22:22Z", "commit": {"oid": "cd92caf7784d3e9648a779a0e877d9777c84c3b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzQ1OTA1", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394745905", "createdAt": "2020-04-16T15:24:32Z", "commit": {"oid": "cd92caf7784d3e9648a779a0e877d9777c84c3b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODAyMzI1", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-394802325", "createdAt": "2020-04-16T16:28:08Z", "commit": {"oid": "cd92caf7784d3e9648a779a0e877d9777c84c3b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd92caf7784d3e9648a779a0e877d9777c84c3b4", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/cd92caf7784d3e9648a779a0e877d9777c84c3b4", "committedDate": "2020-04-16T11:17:38Z", "message": "updating readme content"}, "afterCommit": {"oid": "6a290b66520f8840e596c889db09ea390a8fd7ec", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6a290b66520f8840e596c889db09ea390a8fd7ec", "committedDate": "2020-04-17T04:17:40Z", "message": "updating readme content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTc2NDM4", "url": "https://github.com/kiegroup/kogito-apps/pull/181#pullrequestreview-395176438", "createdAt": "2020-04-17T05:49:14Z", "commit": {"oid": "6a290b66520f8840e596c889db09ea390a8fd7ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNTo0OToxNFrOGHAuxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNTo0OToxNFrOGHAuxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAwNTE4OA==", "bodyText": "@AjayJagan I think your content should come first, then domain explorer would be a ### Domain Explorer section", "url": "https://github.com/kiegroup/kogito-apps/pull/181#discussion_r410005188", "createdAt": "2020-04-17T05:49:14Z", "author": {"login": "cristianonicolai"}, "path": "management-console/README.md", "diffHunk": "@@ -108,4 +107,126 @@ To check the list of processes, you may have to expand each row of the table by\n \n To get to know more about a process, you can always click on any process instance to direct to process details page and there you can see details about the process as well as the timeline and process variables.\n \n-![navigate](./docs/navigate.gif \"navigate\")\n\\ No newline at end of file\n+![navigate](./docs/navigate.gif \"navigate\")\n+\n+## Working with management-console features", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a290b66520f8840e596c889db09ea390a8fd7ec"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2866958f718c3ba707e0170a5cfd855084005ee", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c2866958f718c3ba707e0170a5cfd855084005ee", "committedDate": "2020-04-17T05:58:45Z", "message": "updating readme content"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a290b66520f8840e596c889db09ea390a8fd7ec", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6a290b66520f8840e596c889db09ea390a8fd7ec", "committedDate": "2020-04-17T04:17:40Z", "message": "updating readme content"}, "afterCommit": {"oid": "c2866958f718c3ba707e0170a5cfd855084005ee", "author": {"user": {"login": "AjayJagan", "name": "Ajay Jaganathan"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c2866958f718c3ba707e0170a5cfd855084005ee", "committedDate": "2020-04-17T05:58:45Z", "message": "updating readme content"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 239, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}