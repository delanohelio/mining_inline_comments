{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODM2Mzcz", "number": 414, "title": "KOGITO-2085: Task Inbox component", "bodyText": "KOGITO-2085: Task Inbox component\n\nAdding Query\nAdding Pagination\nCode refactors, fixed testing, added mocked data\n\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-08-26T11:19:08Z", "url": "https://github.com/kiegroup/kogito-apps/pull/414", "merged": true, "mergeCommit": {"oid": "5929f493f1bb571e68c93308789d6e2c80cf3773"}, "closed": true, "closedAt": "2020-09-01T07:53:10Z", "author": {"login": "pefernan"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC7QHSgBqjM2OTgxMzcxNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEYei2gBqjM3MTE0NzMyMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0f15df631c2a354266a01f141f023636e2952aa", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a0f15df631c2a354266a01f141f023636e2952aa", "committedDate": "2020-08-26T15:19:24Z", "message": "- Fixed testing & dev env"}, "afterCommit": {"oid": "c5544a2740da6d6bd23084d17e7045d72225fd7f", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c5544a2740da6d6bd23084d17e7045d72225fd7f", "committedDate": "2020-08-27T07:16:59Z", "message": "- Fixed testing & dev env"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5544a2740da6d6bd23084d17e7045d72225fd7f", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c5544a2740da6d6bd23084d17e7045d72225fd7f", "committedDate": "2020-08-27T07:16:59Z", "message": "- Fixed testing & dev env"}, "afterCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ac65e75876fbf22cc9e0d1707f9f13e188babfb2", "committedDate": "2020-08-27T08:59:15Z", "message": "- Fixed testing & dev env"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NDY4MDkw", "url": "https://github.com/kiegroup/kogito-apps/pull/414#pullrequestreview-477468090", "createdAt": "2020-08-28T08:07:50Z", "commit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowNzo1MFrOHIu4Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODowNzo1MFrOHIu4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxODcxMA==", "bodyText": "@pefernan getTasksForUser? would describe better the query", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r478918710", "createdAt": "2020-08-28T08:07:50Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/common/src/graphql/queries.tsx", "diffHunk": "@@ -271,3 +271,47 @@ const GET_USER_TASK = gql`\n     }\n   }\n `;\n+\n+const GET_TASKS_FOR_USER = gql`\n+  query getTaskForUser(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NTU3NTc2", "url": "https://github.com/kiegroup/kogito-apps/pull/414#pullrequestreview-477557576", "createdAt": "2020-08-28T08:54:50Z", "commit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NDIxMzM5", "url": "https://github.com/kiegroup/kogito-apps/pull/414#pullrequestreview-475421339", "createdAt": "2020-08-26T12:06:47Z", "commit": {"oid": "9dc5381cfbe27b2f736e340908c89c8ca37e6fe8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjowNjo0N1rOHHI84g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODo0ODozN1rOHJwFeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0ODczOA==", "bodyText": "does this mean that a user should see the task assigned to a different user at all times? Or is this just for an admin user? I would expect some differentiation in that case.", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r477248738", "createdAt": "2020-08-26T12:06:47Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/common/src/graphql/queries.tsx", "diffHunk": "@@ -271,3 +271,47 @@ const GET_USER_TASK = gql`\n     }\n   }\n `;\n+\n+const GET_TASKS_FOR_USER = gql`\n+  query getTaskForUser(\n+    $user: String\n+    $groups: [String!]\n+    $offset: Int\n+    $limit: Int\n+  ) {\n+    UserTaskInstances(\n+      where: {\n+        or: [\n+          { actualOwner: { equal: $user } }\n+          { potentialUsers: { contains: $user } }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc5381cfbe27b2f736e340908c89c8ca37e6fe8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1NTE3Mw==", "bodyText": "whitespace formatting does not seem to be in sync with the rest of the file", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479955173", "createdAt": "2020-08-31T07:45:41Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/server/server.js", "diffHunk": "@@ -56,17 +61,31 @@ function timeout(ms) {\n const resolvers = {\n   Query: {\n     UserTaskInstances: async (parent, args) => {\n-      const result = data.UserTaskInstances.filter(datum => {\n-        console.log('args', args['where']);\n-        if (args['where'].id && args['where'].id.equal) {\n-          return datum.id == args['where'].id.equal;\n-        }\n+      let result = data.UserTaskInstances.filter(datum => {\n+        console.log('args', args)\n+\n         if (args['where'].state && args['where'].state.in) {\n           return args['where'].state.in.includes(datum.state);\n+        } else {\n+          // searching for tasks assigned to current user\n+          return true;\n         }\n+\n         return false;\n       });\n+\n       await timeout(2000);\n+\n+      if(args.pagination) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2NzQ4NQ==", "bodyText": "It's named column, but is rather a fragment,  I would expect for this to return DataTableColumn.", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479967485", "createdAt": "2020-08-31T08:10:19Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Atoms/TaskStateColumn/TaskStateColumn.tsx", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React from 'react';\n+import {\n+  BanIcon,\n+  CheckCircleIcon,\n+  OnRunningIcon\n+} from '@patternfly/react-icons';\n+\n+import { GraphQL } from '@kogito-apps/common';\n+import UserTaskInstance = GraphQL.UserTaskInstance;\n+\n+interface IOwnProps {\n+  task: UserTaskInstance;\n+}\n+\n+const TaskStateColumn: React.FC<IOwnProps> = ({ task }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk2NzgwNg==", "bodyText": "It's named column, but is rather a fragment, I would expect for this to return DataTableColumn.", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479967806", "createdAt": "2020-08-31T08:10:53Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Atoms/TaskDescriptionColumn/TaskDescriptionColumn.tsx", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React, { useContext } from 'react';\n+import { ItemDescriptor, GraphQL } from '@kogito-apps/common';\n+import { Link } from 'react-router-dom';\n+import TaskConsoleContext, {\n+  IContext\n+} from '../../../context/TaskConsoleContext/TaskConsoleContext';\n+import UserTaskInstance = GraphQL.UserTaskInstance;\n+\n+interface IOwnProps {\n+  task: UserTaskInstance;\n+}\n+\n+const TaskDescriptionColumn: React.FC<IOwnProps> = ({ task }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3MTY4MQ==", "bodyText": "can we mock LoadMore too?", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479971681", "createdAt": "2020-08-31T08:18:37Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Organisms/TaskInbox/tests/TaskInbox.test.tsx", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React from 'react';\n+import userTasks from './mocks/testdata';\n+import {\n+  DataTable,\n+  DefaultUser,\n+  getWrapperAsync,\n+  KogitoEmptyState,\n+  LoadMore,\n+  ServerErrors,\n+  User\n+} from '@kogito-apps/common';\n+import { MockedProvider } from '@apollo/react-testing';\n+import { gql } from 'apollo-boost';\n+import TaskInbox from '../TaskInbox';\n+import TaskConsoleContextProvider from '../../../../context/TaskConsoleContext/TaskConsoleContextProvider';\n+import { MemoryRouter as Router } from 'react-router';\n+import { act } from 'react-dom/test-utils';\n+\n+const GET_TASKS_FOR_USER = gql`\n+  query getTaskForUser(\n+    $user: String\n+    $groups: [String!]\n+    $offset: Int\n+    $limit: Int\n+  ) {\n+    UserTaskInstances(\n+      where: {\n+        or: [\n+          { actualOwner: { equal: $user } }\n+          { potentialUsers: { contains: $user } }\n+          { potentialGroups: { containsAny: $groups } }\n+        ]\n+      }\n+      pagination: { offset: $offset, limit: $limit }\n+    ) {\n+      id\n+      name\n+      referenceName\n+      description\n+      priority\n+      processInstanceId\n+      processId\n+      rootProcessInstanceId\n+      rootProcessId\n+      state\n+      actualOwner\n+      adminGroups\n+      adminUsers\n+      completed\n+      started\n+      excludedUsers\n+      potentialGroups\n+      potentialUsers\n+      inputs\n+      outputs\n+      referenceName\n+      lastUpdate\n+      endpoint\n+    }\n+  }\n+`;\n+\n+const MockedComponent = (): React.ReactElement => {\n+  return <></>;\n+};\n+\n+jest.mock('@kogito-apps/common', () => ({\n+  ...jest.requireActual('@kogito-apps/common'),\n+  DataTable: () => {\n+    return <MockedComponent />;\n+  },\n+  KogitoEmptyState: () => {\n+    return <MockedComponent />;\n+  },\n+  KogitoSpinner: () => {\n+    return <MockedComponent />;\n+  },\n+  ServerErrors: () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3MzU1OQ==", "bodyText": "can we use JSX here instead of objects?", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479973559", "createdAt": "2020-08-31T08:22:19Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Organisms/TaskInbox/TaskInbox.tsx", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React, { useContext, useEffect, useState } from 'react';\n+import { Bullseye } from '@patternfly/react-core';\n+import Moment from 'react-moment';\n+import {\n+  KogitoSpinner,\n+  DataTable,\n+  LoadMore,\n+  GraphQL,\n+  DataTableColumn,\n+  ServerErrors,\n+  KogitoEmptyStateType,\n+  KogitoEmptyState\n+} from '@kogito-apps/common';\n+import TaskConsoleContext, {\n+  IContext\n+} from '../../../context/TaskConsoleContext/TaskConsoleContext';\n+import TaskDescriptionColumn from '../../Atoms/TaskDescriptionColumn/TaskDescriptionColumn';\n+import UserTaskInstance = GraphQL.UserTaskInstance;\n+import TaskStateColumn from '../../Atoms/TaskStateColumn/TaskStateColumn';\n+\n+const UserTaskLoadingComponent = (\n+  <Bullseye>\n+    <KogitoSpinner spinnerText=\"Loading user tasks...\" />\n+  </Bullseye>\n+);\n+\n+const TaskInbox: React.FC = props => {\n+  const [defaultPageSize] = useState<number>(10);\n+  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n+  const [isLoading, setIsLoading] = useState<boolean>(false);\n+  const [queryOffset, setOffset] = useState<number>(0);\n+  const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n+  const [isLoadingMore, setIsLoadingMore] = useState<boolean>(false);\n+  const [tableData, setTableData] = useState<any[]>([]);\n+\n+  const context: IContext<UserTaskInstance> = useContext(TaskConsoleContext);\n+\n+  const [\n+    getUserTasks,\n+    { loading, error, data, refetch, networkStatus }\n+  ] = GraphQL.useGetTaskForUserLazyQuery({\n+    fetchPolicy: 'network-only',\n+    notifyOnNetworkStatusChange: true,\n+    variables: {\n+      user: context.getUser().id,\n+      groups: context.getUser().groups,\n+      offset: queryOffset,\n+      limit: pageSize\n+    }\n+  });\n+\n+  const onGetMoreInstances = (_queryOffset, _pageSize, _loadMore) => {\n+    setIsLoadingMore(_loadMore);\n+\n+    if (_queryOffset !== queryOffset) {\n+      setOffset(_queryOffset);\n+    }\n+\n+    if (_pageSize !== pageSize) {\n+      setPageSize(_pageSize);\n+    }\n+\n+    getUserTasks({\n+      variables: {\n+        user: context.getUser().id,\n+        groups: context.getUser().groups,\n+        offset: _queryOffset,\n+        limit: _pageSize\n+      }\n+    });\n+  };\n+\n+  useEffect(() => {\n+    onGetMoreInstances(queryOffset, pageSize, false);\n+  }, []);\n+\n+  useEffect(() => {\n+    if (isLoadingMore === undefined || !isLoadingMore) {\n+      setIsLoading(loading);\n+    }\n+    if (!loading && data !== undefined) {\n+      const newData = tableData.concat(data.UserTaskInstances);\n+      setTableData(newData);\n+      if (queryOffset > 0 && tableData.length > 0) {\n+        setIsLoadingMore(false);\n+      }\n+      if (!isLoaded) {\n+        setIsLoaded(true);\n+      }\n+    }\n+  }, [data]);\n+\n+  if (error) {\n+    return <ServerErrors error={error} variant={'large'} />;\n+  }\n+\n+  if (!isLoaded) {\n+    return UserTaskLoadingComponent;\n+  }\n+\n+  if (tableData.length === 0) {\n+    return (\n+      <KogitoEmptyState\n+        type={KogitoEmptyStateType.Search}\n+        title=\"No results found\"\n+        body=\"Try using different filters\"\n+      />\n+    );\n+  }\n+\n+  const columns: DataTableColumn[] = [\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3NjczMA==", "bodyText": "should we reuse the one from queries.tsx by importing them?", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479976730", "createdAt": "2020-08-31T08:28:28Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Organisms/TaskInbox/tests/TaskInbox.test.tsx", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import React from 'react';\n+import userTasks from './mocks/testdata';\n+import {\n+  DataTable,\n+  DefaultUser,\n+  getWrapperAsync,\n+  KogitoEmptyState,\n+  LoadMore,\n+  ServerErrors,\n+  User\n+} from '@kogito-apps/common';\n+import { MockedProvider } from '@apollo/react-testing';\n+import { gql } from 'apollo-boost';\n+import TaskInbox from '../TaskInbox';\n+import TaskConsoleContextProvider from '../../../../context/TaskConsoleContext/TaskConsoleContextProvider';\n+import { MemoryRouter as Router } from 'react-router';\n+import { act } from 'react-dom/test-utils';\n+\n+const GET_TASKS_FOR_USER = gql`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4NzA2NQ==", "bodyText": "changes to yarn.lock without any change in package.json.", "url": "https://github.com/kiegroup/kogito-apps/pull/414#discussion_r479987065", "createdAt": "2020-08-31T08:48:37Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/yarn.lock", "diffHunk": "@@ -3,9 +3,9 @@\n \n \n \"@apollo/protobufjs@^1.0.3\":\n-  version \"1.0.4\"\n-  resolved \"https://registry.yarnpkg.com/@apollo/protobufjs/-/protobufjs-1.0.4.tgz#cf01747a55359066341f31b5ce8db17df44244e0\"\n-  integrity sha512-EE3zx+/D/wur/JiLp6VCiw1iYdyy1lCJMf8CGPkLeDt5QJrN4N8tKFx33Ah4V30AUQzMk7Uz4IXKZ1LOj124gA==\n+  version \"1.0.5\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDcxNzUx", "url": "https://github.com/kiegroup/kogito-apps/pull/414#pullrequestreview-478471751", "createdAt": "2020-08-31T09:52:46Z", "commit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c094263b1320d92a69aa06632b43476203c9236", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9c094263b1320d92a69aa06632b43476203c9236", "committedDate": "2020-08-31T12:04:09Z", "message": "KOGITO-2085: Task Inbox component\n\n- Adding Query\n- Adding Pagination\n- Code refactors, fixed testing, added mocked data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d101f723751a1b8b1a65a474b9b171cfe2b7ccd", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9d101f723751a1b8b1a65a474b9b171cfe2b7ccd", "committedDate": "2020-08-31T12:04:09Z", "message": "- Fixed testing & dev env"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac65e75876fbf22cc9e0d1707f9f13e188babfb2", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ac65e75876fbf22cc9e0d1707f9f13e188babfb2", "committedDate": "2020-08-27T08:59:15Z", "message": "- Fixed testing & dev env"}, "afterCommit": {"oid": "3ae38254ccf0ccc32e1c8ae8b6e53095e376fe55", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3ae38254ccf0ccc32e1c8ae8b6e53095e376fe55", "committedDate": "2020-08-31T14:23:32Z", "message": "- Code improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NjY1ODcz", "url": "https://github.com/kiegroup/kogito-apps/pull/414#pullrequestreview-478665873", "createdAt": "2020-08-31T14:29:05Z", "commit": {"oid": "3ae38254ccf0ccc32e1c8ae8b6e53095e376fe55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12d2bc83a0d1a4a2eb96facd07dddbac7cc6814d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/12d2bc83a0d1a4a2eb96facd07dddbac7cc6814d", "committedDate": "2020-08-31T20:03:45Z", "message": "- Code improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ae38254ccf0ccc32e1c8ae8b6e53095e376fe55", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3ae38254ccf0ccc32e1c8ae8b6e53095e376fe55", "committedDate": "2020-08-31T14:23:32Z", "message": "- Code improvements"}, "afterCommit": {"oid": "12d2bc83a0d1a4a2eb96facd07dddbac7cc6814d", "author": {"user": {"login": "pefernan", "name": "Pere Fern\u00e1ndez"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/12d2bc83a0d1a4a2eb96facd07dddbac7cc6814d", "committedDate": "2020-08-31T20:03:45Z", "message": "- Code improvements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4719, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}