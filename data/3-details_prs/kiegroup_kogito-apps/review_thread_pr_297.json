{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDc2OTY4", "number": 297, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0Mjo1MVrOEJHl9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0NjoyOVrOEJHqwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTk3MDQ2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0Mjo1MVrOGpfcLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwOTowMzozNVrOGqLRmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1OTkxOQ==", "bodyText": "I think we can mock the KogitoPageLayout from '@kogito-apps/common' here and just check the props passed to the mock. The rendering of those should be tested in KogitoPageLayout tests - we'll reduce the snapshot size here.", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446159919", "createdAt": "2020-06-26T12:42:51Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "diffHunk": "@@ -0,0 +1,61 @@\n+import React from 'react';\n+import PageLayout from '../PageLayout';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+\n+const props: any = {\n+  location: {\n+    pathname: '/'\n+  },\n+  history: []\n+};\n+\n+jest.mock('../../DataListContainerExpandable/DataListContainerExpandable.tsx');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3ODEwNg==", "bodyText": "I would maybe argue for sticking to following way of mocking - so that we don't depend on inner structure of the imported package:\nconst MockedComponent = (): React.ReactElement => {\n  return <></>;\n};\njest.mock('@kogito-apps/common', () => ({\n  ...jest.requireActual('@kogito-apps/common'),\n  KogitoPageLayout: () => {\n    return <MockedComponent />;\n  }\n}));", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446878106", "createdAt": "2020-06-29T09:03:35Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "diffHunk": "@@ -0,0 +1,61 @@\n+import React from 'react';\n+import PageLayout from '../PageLayout';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+\n+const props: any = {\n+  location: {\n+    pathname: '/'\n+  },\n+  history: []\n+};\n+\n+jest.mock('../../DataListContainerExpandable/DataListContainerExpandable.tsx');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1OTkxOQ=="}, "originalCommit": {"oid": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTk4MjcyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0NjoyOVrOGpfjiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo0NjoyOVrOGpfjiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2MTgwMA==", "bodyText": "if you do the mock above this won't work anymore - easiest solution might be creating a second file in tests where we could test the navigation with real KogitoPageLayout impl.", "url": "https://github.com/kiegroup/kogito-apps/pull/297#discussion_r446161800", "createdAt": "2020-06-26T12:46:29Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Templates/PageLayout/tests/PageLayout.test.tsx", "diffHunk": "@@ -0,0 +1,61 @@\n+import React from 'react';\n+import PageLayout from '../PageLayout';\n+import { getWrapper } from '@kogito-apps/common';\n+import { MemoryRouter as Router } from 'react-router-dom';\n+\n+const props: any = {\n+  location: {\n+    pathname: '/'\n+  },\n+  history: []\n+};\n+\n+jest.mock('../../DataListContainerExpandable/DataListContainerExpandable.tsx');\n+\n+function testRoute(route: string) {\n+  props.location.pathname = route;\n+\n+  const wrapper = getWrapper(\n+    <Router keyLength={0}>\n+      <PageLayout {...props} />\n+    </Router>,\n+    'PageLayout'\n+  );\n+\n+  expect(wrapper).toMatchSnapshot();\n+\n+  return wrapper;\n+}\n+\n+describe('PageLayout tests', () => {\n+  it('test default route', () => {\n+    testRoute('/');\n+  });\n+\n+  it('test UserTasks route', () => {\n+    testRoute('/UserTasks');\n+  });\n+\n+  it('test UserTasksFilters route', () => {\n+    testRoute('/UserTasksFilters');\n+  });\n+\n+  it('test TaskDetails route', () => {\n+    testRoute('/Task/taskID');\n+  });\n+\n+  it('test UserTasksTable route', () => {\n+    testRoute('/UserTasksTable');\n+  });\n+\n+  it('Brand click testing', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e004a8cd3fa792b9a344465ae6f7b6ed3dcb17"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 779, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}