{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDYwNTcx", "number": 131, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToyNDozMVrODtKYYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNDozNTozMVrODu9vhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjgyNTkyOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToyNDozMVrOF-bRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToyNzo0MVrOF-ba9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwMjgyMA==", "bodyText": "Please change this text to An error occurred while accessing data.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401002820", "createdAt": "2020-03-31T15:24:31Z", "author": {"login": "srambach"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,59 @@\n+import React from 'react';\n+\n+import {\n+    DataToolbar,\n+    DataToolbarContent,\n+    DataToolbarToggleGroup,\n+    DataToolbarGroup,\n+    PageSection,\n+    Breadcrumb,\n+    BreadcrumbItem,\n+    Card,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover, PopoverPosition,\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const history = useHistory();\n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        Below error occured on graphql while accessing data. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ca94767fba6c47cbd7323b9e00409a78ac1a215"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwNTMwMw==", "bodyText": "@srambach done", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401005303", "createdAt": "2020-03-31T15:27:41Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,59 @@\n+import React from 'react';\n+\n+import {\n+    DataToolbar,\n+    DataToolbarContent,\n+    DataToolbarToggleGroup,\n+    DataToolbarGroup,\n+    PageSection,\n+    Breadcrumb,\n+    BreadcrumbItem,\n+    Card,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover, PopoverPosition,\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const history = useHistory();\n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        Below error occured on graphql while accessing data. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAwMjgyMA=="}, "originalCommit": {"oid": "2ca94767fba6c47cbd7323b9e00409a78ac1a215"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTEzNTMzOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Molecules/DataListItemComponent/DataListItemComponent.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNTozNjo1M1rOF-xcAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDo1NToxNFrOF-7Vvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ==", "bodyText": "@Sara4994 would it be something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>\n          \n          \n            \n                            <Link to={{pathname:'/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401366019", "createdAt": "2020-04-01T05:36:53Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Molecules/DataListItemComponent/DataListItemComponent.tsx", "diffHunk": "@@ -526,7 +526,7 @@ const DataListItemComponent: React.FC<IOwnProps> = ({\n           <DataListItemCells\n             dataListCells={[\n               <DataListCell key={1}>\n-                <Link to={'/ProcessInstances/' + processInstanceData.id}>\n+                <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d84b68f4a795f61876568cc6a7dc8cc5368b99c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NzE5Mg==", "bodyText": "that would also mean that we need to add a line here https://github.com/kiegroup/kogito-apps/blob/master/management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java#L43\nto handle the new path in the UI.\nAs well as updating this test https://github.com/kiegroup/kogito-apps/blob/master/management-console/src/test/java/org/kie/kogito/mgmt/VertxRouterTest.java#L17", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401367192", "createdAt": "2020-04-01T05:41:02Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Molecules/DataListItemComponent/DataListItemComponent.tsx", "diffHunk": "@@ -526,7 +526,7 @@ const DataListItemComponent: React.FC<IOwnProps> = ({\n           <DataListItemCells\n             dataListCells={[\n               <DataListCell key={1}>\n-                <Link to={'/ProcessInstances/' + processInstanceData.id}>\n+                <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ=="}, "originalCommit": {"oid": "0d84b68f4a795f61876568cc6a7dc8cc5368b99c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyODI1NQ==", "bodyText": "@cristianonicolai done", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r401528255", "createdAt": "2020-04-01T10:55:14Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/DataListItemComponent/DataListItemComponent.tsx", "diffHunk": "@@ -526,7 +526,7 @@ const DataListItemComponent: React.FC<IOwnProps> = ({\n           <DataListItemCells\n             dataListCells={[\n               <DataListCell key={1}>\n-                <Link to={'/ProcessInstances/' + processInstanceData.id}>\n+                <Link to={{pathname:'/ProcessInstances/Process/' + processInstanceData.id, state:{ prev: location.pathname}}}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2NjAxOQ=="}, "originalCommit": {"oid": "0d84b68f4a795f61876568cc6a7dc8cc5368b99c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODE2MzA5OnYy", "diffSide": "LEFT", "path": "packages/management-console/src/components/Molecules/NoDataComponent/NoDataComponent.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNzo0Mjo1OVrOGAIlOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNzoyOFrOGAVbHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc4NQ==", "bodyText": "@Sara4994 shouldn't this stay for when users hit url directly without a previous state?", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402793785", "createdAt": "2020-04-03T07:42:59Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Molecules/NoDataComponent/NoDataComponent.tsx", "diffHunk": "@@ -18,8 +18,6 @@ const NoDataComponent = (props) => {\n     let prevPath;\n     if (props.location.state !== undefined) {\n         prevPath = props.location.state.prev;\n-    } else {\n-        prevPath = '/ProcessInstances'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcd5ae856f299811876c81836046f142a035c520"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNDE4OQ==", "bodyText": "@cristianonicolai yep removed by mistake, added it back. thanks", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403004189", "createdAt": "2020-04-03T13:27:28Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/NoDataComponent/NoDataComponent.tsx", "diffHunk": "@@ -18,8 +18,6 @@ const NoDataComponent = (props) => {\n     let prevPath;\n     if (props.location.state !== undefined) {\n         prevPath = props.location.state.prev;\n-    } else {\n-        prevPath = '/ProcessInstances'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc5Mzc4NQ=="}, "originalCommit": {"oid": "bcd5ae856f299811876c81836046f142a035c520"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODM4MzI4OnYy", "diffSide": "RIGHT", "path": "management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoyMTo1NFrOGAKeDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjoxOTozNVrOGBJLqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw==", "bodyText": "@Sara4994 The new route \"/Process*\" includes \"/ProcessInstances*. Here I think we have to remove the line: router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx)); and let just the new route.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402824717", "createdAt": "2020-04-03T08:21:54Z", "author": {"login": "nmirasch"}, "path": "management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java", "diffHunk": "@@ -41,6 +41,7 @@ public void init() {\n     void setupRouter(@Observes Router router) {\n         router.route(\"/\").handler(ctx -> ctx.response().putHeader(\"location\", \"/ProcessInstances/\").setStatusCode(302).end());\n         router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));\n+        router.route(\"/Process*\").handler(ctx -> handle(ctx));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDIzNg==", "bodyText": "@nmirasch but actually these two are different routes that directs us to two different pages, '/ProcessInstances' will take us to process list page and '/Process' will take us to process details page. should we still remove the line: router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));?", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403010236", "createdAt": "2020-04-03T13:37:01Z", "author": {"login": "Sara4994"}, "path": "management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java", "diffHunk": "@@ -41,6 +41,7 @@ public void init() {\n     void setupRouter(@Observes Router router) {\n         router.route(\"/\").handler(ctx -> ctx.response().putHeader(\"location\", \"/ProcessInstances/\").setStatusCode(302).end());\n         router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));\n+        router.route(\"/Process*\").handler(ctx -> handle(ctx));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1MjIwMw==", "bodyText": "@Sara4994 point is that /Process* will also match the same urls, because of the pattern matching, so the line with /ProcessInstances* should be removed or you can simply update that one.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403852203", "createdAt": "2020-04-06T06:19:35Z", "author": {"login": "cristianonicolai"}, "path": "management-console/src/main/java/org/kie/kogito/mgmt/VertxRouter.java", "diffHunk": "@@ -41,6 +41,7 @@ public void init() {\n     void setupRouter(@Observes Router router) {\n         router.route(\"/\").handler(ctx -> ctx.response().putHeader(\"location\", \"/ProcessInstances/\").setStatusCode(302).end());\n         router.route(\"/ProcessInstances*\").handler(ctx -> handle(ctx));\n+        router.route(\"/Process*\").handler(ctx -> handle(ctx));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDcxNw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODM5MDI5OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwODoyMzowMlrOGAKhww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzozNzozOVrOGAV0WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNTY2Nw==", "bodyText": "@Sara4994 maybe remove the comment :)", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r402825667", "createdAt": "2020-04-03T08:23:02Z", "author": {"login": "nmirasch"}, "path": "packages/management-console/src/index.tsx", "diffHunk": "@@ -1,15 +1,36 @@\n import '@patternfly/patternfly/patternfly.css';\n import React from 'react';\n import ReactDOM from 'react-dom';\n-import ApolloClient from 'apollo-boost';\n+import { ApolloClient } from 'apollo-client';\n+// import ApolloClient from 'apollo-boost';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxMDY0OA==", "bodyText": "@nmirasch this is done :)", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403010648", "createdAt": "2020-04-03T13:37:39Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/index.tsx", "diffHunk": "@@ -1,15 +1,36 @@\n import '@patternfly/patternfly/patternfly.css';\n import React from 'react';\n import ReactDOM from 'react-dom';\n-import ApolloClient from 'apollo-boost';\n+import { ApolloClient } from 'apollo-client';\n+// import ApolloClient from 'apollo-boost';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNTY2Nw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU2MDcwOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzoyNjo1NVrOGAVZpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo0NzozOFrOGAYwgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw==", "bodyText": "We can left align the text and make it more readable by adding className=\"pf-u-text-align-left\" to the ClipboardCopy.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403003813", "createdAt": "2020-04-03T13:26:55Z", "author": {"login": "srambach"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occured while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>\n+                    </EmptyStateBody>\n+                    {displayError &&<EmptyStateBody>\n+                        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} isExpanded={true}>{JSON.stringify(props.message)}</ClipboardCopy>             ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0ODAxNQ==", "bodyText": "@srambach done:)", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403048015", "createdAt": "2020-04-03T14:32:13Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occured while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>\n+                    </EmptyStateBody>\n+                    {displayError &&<EmptyStateBody>\n+                        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} isExpanded={true}>{JSON.stringify(props.message)}</ClipboardCopy>             ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1NTYzOQ==", "bodyText": "Sorry, one more thing - I missed that \"occurred\" is still spelled incorrectly. 2 rs.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403055639", "createdAt": "2020-04-03T14:42:58Z", "author": {"login": "srambach"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occured while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>\n+                    </EmptyStateBody>\n+                    {displayError &&<EmptyStateBody>\n+                        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} isExpanded={true}>{JSON.stringify(props.message)}</ClipboardCopy>             ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1ODgxOQ==", "bodyText": "@srambach done )", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403058819", "createdAt": "2020-04-03T14:47:38Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occured while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>\n+                    </EmptyStateBody>\n+                    {displayError &&<EmptyStateBody>\n+                        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} isExpanded={true}>{JSON.stringify(props.message)}</ClipboardCopy>             ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwMzgxMw=="}, "originalCommit": {"oid": "421db7e105d66363e3a1c75f1a805aadb0137e73"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTk5MzY5OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTowODowM1rOGAZoGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMToxNjozNVrOGA_Fww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzA1MA==", "bodyText": "The \"See more details\" needs to be coded as a link or button. Otherwise, it is not accessible using the keyboard. <Button variant=\"link\" isInline onClick={() => setDisplayError(!displayError)}>See more details</Button> should work for you I think. We don't need the <strong> tag and don't need to set the text color or cursor with a new class since that will come from the link. So that CSS can also be removed.", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403073050", "createdAt": "2020-04-03T15:08:03Z", "author": {"login": "srambach"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occurred while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a97d9cda0a730c115ab9616c1947de99d95f256a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4Njg1MQ==", "bodyText": "@srambach done. Thanks \ud83d\udc4d", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403686851", "createdAt": "2020-04-05T11:16:35Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Molecules/ServerErrorsComponent/ServerErrorsComponent.tsx", "diffHunk": "@@ -0,0 +1,51 @@\n+import React,{useState} from 'react';\n+\n+import {\n+    PageSection,\n+    Bullseye,\n+    EmptyState,\n+    EmptyStateIcon,\n+    EmptyStateVariant,\n+    Button,\n+    EmptyStateBody,\n+    Title,\n+    Popover,\n+    ClipboardCopy,\n+    ClipboardCopyVariant\n+} from '@patternfly/react-core';\n+import {\n+    ExclamationCircleIcon\n+} from '@patternfly/react-icons';\n+import './ServerErrorsComponent.css';\n+import {useHistory} from 'react-router-dom';\n+\n+const ServerErrorsComponent = (props) => {\n+    const [displayError, setDisplayError] = useState(false)\n+    const history = useHistory();\n+    \n+    return (\n+        <PageSection variant=\"light\">\n+            <Bullseye>\n+                <EmptyState variant={EmptyStateVariant.full}>\n+                    <EmptyStateIcon\n+                        icon={ExclamationCircleIcon}\n+                        size=\"md\"\n+                        color=\"var(--pf-global--danger-color--100)\" />\n+                    <Title headingLevel=\"h1\" size=\"4xl\">Error fetching data</Title>\n+                    <EmptyStateBody>\n+                        An error occurred while accessing data. <strong className=\"kogito-management-console--Server-Errors__text-color\" onClick={() => setDisplayError(!displayError)}> See more details</strong>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3MzA1MA=="}, "originalCommit": {"oid": "a97d9cda0a730c115ab9616c1947de99d95f256a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTcyNjEzOnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNDozNDo1MlrOGBHhcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNToyODozNVrOGBIRZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTAwOQ==", "bodyText": "@Sara4994 remove comment out code please", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403825009", "createdAt": "2020-04-06T04:34:52Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -122,7 +124,8 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n             }\n           });\n       } catch (error) {\n-        return error;\n+        setError(error)\n+        // return error;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6737121ceaa4d164027c98c42bd2a4837ebb15"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzNzI4Nw==", "bodyText": "@cristianonicolai done", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403837287", "createdAt": "2020-04-06T05:28:35Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Organisms/DomainExplorerColumnPicker/DomainExplorerColumnPicker.tsx", "diffHunk": "@@ -122,7 +124,8 @@ const DomainExplorerColumnPicker: React.FC<IOwnProps> = ({\n             }\n           });\n       } catch (error) {\n-        return error;\n+        setError(error)\n+        // return error;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTAwOQ=="}, "originalCommit": {"oid": "ec6737121ceaa4d164027c98c42bd2a4837ebb15"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTcyNjc2OnYy", "diffSide": "RIGHT", "path": "packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNDozNTozMVrOGBHh1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNToyODo0N1rOGBIRsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTExMA==", "bodyText": "please remove comment out code", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403825110", "createdAt": "2020-04-06T04:35:31Z", "author": {"login": "cristianonicolai"}, "path": "packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -128,94 +140,162 @@ const ProcessDetailsPage = ({ match }) => {\n \n   return (\n     <>\n-      <PageSection variant=\"light\">\n-        <ProcessBulkModalComponent\n-          isModalLarge={false}\n-          isModalOpen={isAbortModalOpen}\n-          handleModalToggle={handleAbortModalToggle}\n-          checkedArray={data && [data.ProcessInstances[0].state]}\n-          modalTitle={\n-            titleType === 'success'\n-              ? setTitle('success', 'Abort operation')\n-              : setTitle('failure', 'Abort operation')\n-          }\n-          isSingleAbort={true}\n-          abortedMessageObj={\n-            data && {\n-              [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n-            }\n-          }\n-          completedMessageObj={{}}\n-          isAbortModalOpen={isAbortModalOpen}\n-        />\n-        <PageTitleComponent title=\"Process Details\" />\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Breadcrumb>\n-                <BreadcrumbItem>\n-                  <Link to={'/'}>Home</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem>\n-                  <Link to={'/ProcessInstances/'}>Process Instances</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem isActive>\n-                  {data.ProcessInstances[0].processName}\n-                </BreadcrumbItem>\n-              </Breadcrumb>\n-            </GridItem>\n-          </Grid>\n-        ) : (\n-          ''\n-        )}\n-      </PageSection>\n-      <PageSection>\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Split\n-                gutter={'md'}\n-                component={'div'}\n-                className=\"pf-u-align-items-center\"\n-              >\n-                <SplitItem isFilled={true}>\n-                  <Title headingLevel=\"h1\" size=\"4xl\">\n-                    <ProcessDescriptor\n-                      processInstanceData={data.ProcessInstances[0]}\n+      {!error ?\n+        (<>\n+          <PageSection variant=\"light\">\n+            <ProcessBulkModalComponent\n+              isModalLarge={false}\n+              isModalOpen={isAbortModalOpen}\n+              handleModalToggle={handleAbortModalToggle}\n+              checkedArray={data && [data.ProcessInstances[0].state]}\n+              modalTitle={\n+                titleType === 'success'\n+                  ? setTitle('success', 'Abort operation')\n+                  : setTitle('failure', 'Abort operation')\n+              }\n+              isSingleAbort={true}\n+              abortedMessageObj={\n+                data && {\n+                  [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n+                }\n+              }\n+              completedMessageObj={{}}\n+              isAbortModalOpen={isAbortModalOpen}\n+            />\n+            <PageTitleComponent title=\"Process Details\" />\n+            {!loading ?\n+              (<Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Breadcrumb>\n+                    <BreadcrumbItem>\n+                      <Link to={'/'}>Home</Link>\n+                    </BreadcrumbItem>\n+                    {BreadCrumb.map((item, index) => {\n+                      return (\n+                        <BreadcrumbItem key={index}>\n+                          <Link to={BreadCrumbRoute[index]}>\n+                            {item.replace(/([A-Z])/g, ' $1').trim()}\n+                          </Link>\n+                        </BreadcrumbItem>\n+                      );\n+                      // }\n+                    })}\n+                    <BreadcrumbItem isActive>\n+                      {data.ProcessInstances[0].processName}\n+                    </BreadcrumbItem>\n+                  </Breadcrumb>\n+                </GridItem>\n+              </Grid>\n+              ) : ''}\n+          </PageSection>\n+          <PageSection>\n+            {!loading ? (\n+              <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Split\n+                    gutter={'md'}\n+                    component={'div'}\n+                    className=\"pf-u-align-items-center\"\n+                  >\n+                    <SplitItem isFilled={true}>\n+                      <Title headingLevel=\"h1\" size=\"4xl\">\n+                        <ProcessDescriptor\n+                          processInstanceData={data.ProcessInstances[0]}\n+                        />\n+                      </Title>\n+                    </SplitItem>\n+                    <SplitItem>\n+                      <OverflowMenu breakpoint=\"lg\">\n+                        <OverflowMenuContent isPersistent>\n+                          <OverflowMenuGroup groupType=\"button\" isPersistent>\n+                            {abortButton()}\n+                          </OverflowMenuGroup>\n+                        </OverflowMenuContent>\n+                      </OverflowMenu>\n+                    </SplitItem>\n+                  </Split>\n+                </GridItem>\n+                {currentPage && <GridItem>\n+                  <ProcessDetails data={data} from={currentPage} />\n+                </GridItem>}\n+                <GridItem>\n+                  <ProcessDetailsProcessVariables data={data} />\n+                </GridItem>\n+                <GridItem>\n+                  <ProcessDetailsTimeline data={data.ProcessInstances} />\n+                </GridItem>\n+              </Grid>\n+            ) : (\n+                <Card>\n+                  <Bullseye>\n+                    <SpinnerComponent spinnerText=\"Loading process details...\" />\n+                  </Bullseye>\n+                </Card>\n+              )}\n+          </PageSection>\n+          </>):(<ServerErrorsComponent message={error.message} />)}\n+      </>);\n+      {/* {!error ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6737121ceaa4d164027c98c42bd2a4837ebb15"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzNzM2MQ==", "bodyText": "@cristianonicolai  done", "url": "https://github.com/kiegroup/kogito-apps/pull/131#discussion_r403837361", "createdAt": "2020-04-06T05:28:47Z", "author": {"login": "Sara4994"}, "path": "packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -128,94 +140,162 @@ const ProcessDetailsPage = ({ match }) => {\n \n   return (\n     <>\n-      <PageSection variant=\"light\">\n-        <ProcessBulkModalComponent\n-          isModalLarge={false}\n-          isModalOpen={isAbortModalOpen}\n-          handleModalToggle={handleAbortModalToggle}\n-          checkedArray={data && [data.ProcessInstances[0].state]}\n-          modalTitle={\n-            titleType === 'success'\n-              ? setTitle('success', 'Abort operation')\n-              : setTitle('failure', 'Abort operation')\n-          }\n-          isSingleAbort={true}\n-          abortedMessageObj={\n-            data && {\n-              [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n-            }\n-          }\n-          completedMessageObj={{}}\n-          isAbortModalOpen={isAbortModalOpen}\n-        />\n-        <PageTitleComponent title=\"Process Details\" />\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Breadcrumb>\n-                <BreadcrumbItem>\n-                  <Link to={'/'}>Home</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem>\n-                  <Link to={'/ProcessInstances/'}>Process Instances</Link>\n-                </BreadcrumbItem>\n-                <BreadcrumbItem isActive>\n-                  {data.ProcessInstances[0].processName}\n-                </BreadcrumbItem>\n-              </Breadcrumb>\n-            </GridItem>\n-          </Grid>\n-        ) : (\n-          ''\n-        )}\n-      </PageSection>\n-      <PageSection>\n-        {!loading ? (\n-          <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n-            <GridItem span={12}>\n-              <Split\n-                gutter={'md'}\n-                component={'div'}\n-                className=\"pf-u-align-items-center\"\n-              >\n-                <SplitItem isFilled={true}>\n-                  <Title headingLevel=\"h1\" size=\"4xl\">\n-                    <ProcessDescriptor\n-                      processInstanceData={data.ProcessInstances[0]}\n+      {!error ?\n+        (<>\n+          <PageSection variant=\"light\">\n+            <ProcessBulkModalComponent\n+              isModalLarge={false}\n+              isModalOpen={isAbortModalOpen}\n+              handleModalToggle={handleAbortModalToggle}\n+              checkedArray={data && [data.ProcessInstances[0].state]}\n+              modalTitle={\n+                titleType === 'success'\n+                  ? setTitle('success', 'Abort operation')\n+                  : setTitle('failure', 'Abort operation')\n+              }\n+              isSingleAbort={true}\n+              abortedMessageObj={\n+                data && {\n+                  [data.ProcessInstances[0].id]: data.ProcessInstances[0]\n+                }\n+              }\n+              completedMessageObj={{}}\n+              isAbortModalOpen={isAbortModalOpen}\n+            />\n+            <PageTitleComponent title=\"Process Details\" />\n+            {!loading ?\n+              (<Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Breadcrumb>\n+                    <BreadcrumbItem>\n+                      <Link to={'/'}>Home</Link>\n+                    </BreadcrumbItem>\n+                    {BreadCrumb.map((item, index) => {\n+                      return (\n+                        <BreadcrumbItem key={index}>\n+                          <Link to={BreadCrumbRoute[index]}>\n+                            {item.replace(/([A-Z])/g, ' $1').trim()}\n+                          </Link>\n+                        </BreadcrumbItem>\n+                      );\n+                      // }\n+                    })}\n+                    <BreadcrumbItem isActive>\n+                      {data.ProcessInstances[0].processName}\n+                    </BreadcrumbItem>\n+                  </Breadcrumb>\n+                </GridItem>\n+              </Grid>\n+              ) : ''}\n+          </PageSection>\n+          <PageSection>\n+            {!loading ? (\n+              <Grid gutter=\"md\" span={12} lg={6} xl={4}>\n+                <GridItem span={12}>\n+                  <Split\n+                    gutter={'md'}\n+                    component={'div'}\n+                    className=\"pf-u-align-items-center\"\n+                  >\n+                    <SplitItem isFilled={true}>\n+                      <Title headingLevel=\"h1\" size=\"4xl\">\n+                        <ProcessDescriptor\n+                          processInstanceData={data.ProcessInstances[0]}\n+                        />\n+                      </Title>\n+                    </SplitItem>\n+                    <SplitItem>\n+                      <OverflowMenu breakpoint=\"lg\">\n+                        <OverflowMenuContent isPersistent>\n+                          <OverflowMenuGroup groupType=\"button\" isPersistent>\n+                            {abortButton()}\n+                          </OverflowMenuGroup>\n+                        </OverflowMenuContent>\n+                      </OverflowMenu>\n+                    </SplitItem>\n+                  </Split>\n+                </GridItem>\n+                {currentPage && <GridItem>\n+                  <ProcessDetails data={data} from={currentPage} />\n+                </GridItem>}\n+                <GridItem>\n+                  <ProcessDetailsProcessVariables data={data} />\n+                </GridItem>\n+                <GridItem>\n+                  <ProcessDetailsTimeline data={data.ProcessInstances} />\n+                </GridItem>\n+              </Grid>\n+            ) : (\n+                <Card>\n+                  <Bullseye>\n+                    <SpinnerComponent spinnerText=\"Loading process details...\" />\n+                  </Bullseye>\n+                </Card>\n+              )}\n+          </PageSection>\n+          </>):(<ServerErrorsComponent message={error.message} />)}\n+      </>);\n+      {/* {!error ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgyNTExMA=="}, "originalCommit": {"oid": "ec6737121ceaa4d164027c98c42bd2a4837ebb15"}, "originalPosition": 204}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1043, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}