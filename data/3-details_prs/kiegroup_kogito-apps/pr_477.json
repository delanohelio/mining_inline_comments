{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTk3MDIw", "number": 477, "title": "KOGITO-3557 - Enable keycloak on trusty-ui", "bodyText": "JIRA: https://issues.redhat.com/browse/KOGITO-3557\nThis PR aims to enable keycloak on trusty-ui service.\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-10-06T14:38:32Z", "url": "https://github.com/kiegroup/kogito-apps/pull/477", "merged": true, "mergeCommit": {"oid": "fa0b6cd485ca5bd1b3a46f8fc47719a3cc74db22"}, "closed": true, "closedAt": "2020-11-23T11:04:48Z", "author": {"login": "r00ta"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP5YhEAH2gAyNDk4NTk3MDIwOjM3MGI2ZWRmOGJkOTQwZDU1ZjQ5ZWNiNDVjNzQyM2Q3YzhjMDY4YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddFKzjAFqTUzMTMyOTIwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "370b6edf8bd940d55f49ecb45c7423d7c8c068be", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/370b6edf8bd940d55f49ecb45c7423d7c8c068be", "committedDate": "2020-10-06T14:37:28Z", "message": "enable keycloak on trusty-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/a9e68cae29eb4e41da31dbdc4c0b60d4625f0078", "committedDate": "2020-10-06T14:39:58Z", "message": "add log plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjExNDAx", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-503611401", "createdAt": "2020-10-07T07:51:30Z", "commit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzo1MTozMVrOHdm3Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowODoxOFrOHdnfAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNzUxNA==", "bodyText": "In the rest of the tests, we use the @QuarkusTestResource annotation like this:\n@QuarkusTestResource(KeycloakQuarkusTestResource.class)\nAs far I could see, the main difference between @testprofile and @QuarkusTestResource is that @testprofile is isolated to the running test suite where @QuarkusTestResource is per package (having this annotation affects all the tests). For me, I would prefer to having it per test suite using @testprofile, but there are two problems:\n\nIt does not allow having multiple test profiles (to specify what resources the test needs individually). Therefore, to use it, we would need to create a profile class in every single test (or module)\nThis annotation is not supported by native tests\n\nDid you use this annotation for some other reason? I would prefer all the tests use the same things to have expected behaviour. What do you think about this?", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r500807514", "createdAt": "2020-10-07T07:51:31Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/KeycloakTrustyUIServiceIT.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.kie.kogito;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.QuarkusTestProfile;\n+import io.quarkus.test.junit.TestProfile;\n+import org.apache.http.HttpStatus;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.keycloak.representations.AccessTokenResponse;\n+import org.kie.kogito.testcontainers.KogitoKeycloakContainer;\n+import org.kie.kogito.testcontainers.quarkus.KeycloakQuarkusTestResource;\n+\n+import static io.restassured.RestAssured.given;\n+\n+@QuarkusTest\n+@TestProfile(KeycloakTrustyUIServiceIT.ITKeycloakProfile.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNzY4Nw==", "bodyText": "We don't need to implement this method.", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r500807687", "createdAt": "2020-10-07T07:51:46Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/KeycloakTrustyUIServiceIT.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.kie.kogito;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.QuarkusTestProfile;\n+import io.quarkus.test.junit.TestProfile;\n+import org.apache.http.HttpStatus;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.keycloak.representations.AccessTokenResponse;\n+import org.kie.kogito.testcontainers.KogitoKeycloakContainer;\n+import org.kie.kogito.testcontainers.quarkus.KeycloakQuarkusTestResource;\n+\n+import static io.restassured.RestAssured.given;\n+\n+@QuarkusTest\n+@TestProfile(KeycloakTrustyUIServiceIT.ITKeycloakProfile.class)\n+class KeycloakTrustyUIServiceIT {\n+\n+    private static final String VALID_USER = \"jdoe\";\n+    private static final String TRUSTY_UI_ENDPOINT = \"/\";\n+\n+    @ConfigProperty(name = KeycloakQuarkusTestResource.KOGITO_KEYCLOAK_PROPERTY)\n+    String keycloakURL;\n+\n+    @Test\n+    void shouldReturnUnauthorized() {\n+        given().get(TRUSTY_UI_ENDPOINT)\n+                .then().statusCode(HttpStatus.SC_UNAUTHORIZED);\n+    }\n+\n+    @Test\n+    void shouldReturnOkWhenValidUser() {\n+        given().auth().oauth2(getAccessToken(VALID_USER)).get(TRUSTY_UI_ENDPOINT)\n+                .then().statusCode(HttpStatus.SC_OK);\n+    }\n+\n+    private String getAccessToken(String userName) {\n+        return given().param(\"grant_type\", \"password\")\n+                .param(\"username\", userName)\n+                .param(\"password\", userName)\n+                .param(\"client_id\", KogitoKeycloakContainer.CLIENT_ID)\n+                .param(\"client_secret\", KogitoKeycloakContainer.CLIENT_SECRET)\n+                .when()\n+                .post(keycloakURL + \"/protocol/openid-connect/token\")\n+                .as(AccessTokenResponse.class).getToken();\n+    }\n+\n+    public static class ITKeycloakProfile implements QuarkusTestProfile {\n+\n+        @Override\n+        public Map<String, String> getConfigOverrides() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNzcyNQ==", "bodyText": "We don't need to implement this method.", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r500807725", "createdAt": "2020-10-07T07:51:49Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/KeycloakTrustyUIServiceIT.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.kie.kogito;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.QuarkusTestProfile;\n+import io.quarkus.test.junit.TestProfile;\n+import org.apache.http.HttpStatus;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.keycloak.representations.AccessTokenResponse;\n+import org.kie.kogito.testcontainers.KogitoKeycloakContainer;\n+import org.kie.kogito.testcontainers.quarkus.KeycloakQuarkusTestResource;\n+\n+import static io.restassured.RestAssured.given;\n+\n+@QuarkusTest\n+@TestProfile(KeycloakTrustyUIServiceIT.ITKeycloakProfile.class)\n+class KeycloakTrustyUIServiceIT {\n+\n+    private static final String VALID_USER = \"jdoe\";\n+    private static final String TRUSTY_UI_ENDPOINT = \"/\";\n+\n+    @ConfigProperty(name = KeycloakQuarkusTestResource.KOGITO_KEYCLOAK_PROPERTY)\n+    String keycloakURL;\n+\n+    @Test\n+    void shouldReturnUnauthorized() {\n+        given().get(TRUSTY_UI_ENDPOINT)\n+                .then().statusCode(HttpStatus.SC_UNAUTHORIZED);\n+    }\n+\n+    @Test\n+    void shouldReturnOkWhenValidUser() {\n+        given().auth().oauth2(getAccessToken(VALID_USER)).get(TRUSTY_UI_ENDPOINT)\n+                .then().statusCode(HttpStatus.SC_OK);\n+    }\n+\n+    private String getAccessToken(String userName) {\n+        return given().param(\"grant_type\", \"password\")\n+                .param(\"username\", userName)\n+                .param(\"password\", userName)\n+                .param(\"client_id\", KogitoKeycloakContainer.CLIENT_ID)\n+                .param(\"client_secret\", KogitoKeycloakContainer.CLIENT_SECRET)\n+                .when()\n+                .post(keycloakURL + \"/protocol/openid-connect/token\")\n+                .as(AccessTokenResponse.class).getToken();\n+    }\n+\n+    public static class ITKeycloakProfile implements QuarkusTestProfile {\n+\n+        @Override\n+        public Map<String, String> getConfigOverrides() {\n+            return Collections.emptyMap();\n+        }\n+\n+        @Override\n+        public Set<Class<?>> getEnabledAlternatives() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNjcyNw==", "bodyText": "The native profile is failing. If I run this:\nmvn clean install -Pnative\n\nIt fails because the uberJar is not true. I need to add this plugin in the native maven profile:\n<plugin>\n  <groupId>io.quarkus</groupId>\n  <artifactId>quarkus-maven-plugin</artifactId>\n  <configuration>\n    <uberJar>true</uberJar>\n  </configuration>\n  <executions>\n    <execution>\n      <goals>\n        <goal>native-image</goal>\n      </goals>\n      <configuration>\n        <additionalBuildArgs>--allow-incomplete-classpath</additionalBuildArgs>\n      </configuration>\n    </execution>\n  </executions>\n</plugin>\nAnd also remove the \"quarkus.package.type\":\n<properties>\n   <quarkus.package.type>native</quarkus.package.type>\n</properties>", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r500816727", "createdAt": "2020-10-07T08:06:46Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/NativeStaticContentTestIT.java", "diffHunk": "@@ -19,7 +19,7 @@\n import io.quarkus.test.junit.NativeImageTest;\n \n @NativeImageTest\n-public class StaticContentTestIT extends StaticContentTest {\n+public class NativeStaticContentTestIT extends StaticContentTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNzY2NA==", "bodyText": "The native maven profile is not running this test. For enabling it, I followed the same conventions as in Kogito Examples and then the test failed:\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running org.kie.kogito.NativeStaticContentTestIT\nExecuting [/home/jcarvaja/sources/kogito/kogito-apps/trusty-ui/target/trusty-ui-1.0.0-SNAPSHOT-runner, -Dquarkus.http.port=8080, -Dquarkus.http.ssl-port=8444, -Dtest.url=http://localhost:8080, -Dquarkus.log.file.path=target/target/quarkus.log]\n__  ____  __  _____   ___  __ ____  ______ \n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \n2020-10-07 10:47:27,852 ERROR [io.qua.application] (main) Failed to start application (with profile prod): io.vertx.core.file.FileSystemException: java.nio.file.NoSuchFileException: META-INF/resources/index.html\n\tat io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:865)\n\nAlso, the Keycloak resource is not starting because of native test is not compatible with @testprofile (see here). Therefore, we would need to annotate this class using:\n@QuarkusTestResource(KeycloakQuarkusTestResource.class)", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r500817664", "createdAt": "2020-10-07T08:08:18Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/NativeStaticContentTestIT.java", "diffHunk": "@@ -19,7 +19,7 @@\n import io.quarkus.test.junit.NativeImageTest;\n \n @NativeImageTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e68cae29eb4e41da31dbdc4c0b60d4625f0078"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1910afc58f47df7b879157d9bcbd9ef8f4f0088", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d1910afc58f47df7b879157d9bcbd9ef8f4f0088", "committedDate": "2020-10-07T09:29:57Z", "message": "fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "227a369e7b6ddf8713b0d647a62aaf3c9eb5f303", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/227a369e7b6ddf8713b0d647a62aaf3c9eb5f303", "committedDate": "2020-10-08T06:32:55Z", "message": "use QuarkusTestResource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTkxMjU3", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-504591257", "createdAt": "2020-10-08T09:24:25Z", "commit": {"oid": "227a369e7b6ddf8713b0d647a62aaf3c9eb5f303"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyNDoyNlrOHeVrLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyNDoyNlrOHeVrLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3NDQ0Ng==", "bodyText": "@r00ta There is something I miss here  in the oidc configuration to let keycloak manage the login page\n%keycloak.quarkus.oidc.application-type=web-app", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r501574446", "createdAt": "2020-10-08T09:24:26Z", "author": {"login": "nmirasch"}, "path": "trusty-ui/src/main/resources/application.properties", "diffHunk": "@@ -1,2 +1,19 @@\n quarkus.http.cors=true\n kogito.trusty.http.url=${KOGITO_TRUSTY_HTTP_URL:http://localhost:8180}\n+\n+#oidc\n+quarkus.oidc.enabled=true\n+quarkus.oidc.tenant-enabled=false\n+\n+# HTTP Security Configuration\n+quarkus.http.auth.permission.authenticated.paths=/*\n+quarkus.http.auth.permission.authenticated.policy=permit\n+\n+#enabled with the profile: 'keycloak' (-Dquarkus.profile=keycloak)\n+%keycloak.quarkus.oidc.tenant-enabled=true\n+%keycloak.quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/kogito\n+%keycloak.quarkus.oidc.client-id=kogito-trusty-ui-service\n+%keycloak.quarkus.oidc.credentials.secret=secret", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "227a369e7b6ddf8713b0d647a62aaf3c9eb5f303"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edb1486e73639b7e3071275a91b8f9b96640aa4e", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/edb1486e73639b7e3071275a91b8f9b96640aa4e", "committedDate": "2020-10-20T11:46:26Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-3557-keycloak-trusty-ui"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ff0bc5e70b01c113ae4bdc8ce72dda7d9d8ca3a", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/0ff0bc5e70b01c113ae4bdc8ce72dda7d9d8ca3a", "committedDate": "2020-10-20T12:30:01Z", "message": "fix IT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNjMwNzEz", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-513630713", "createdAt": "2020-10-21T12:40:41Z", "commit": {"oid": "0ff0bc5e70b01c113ae4bdc8ce72dda7d9d8ca3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMjo0MDo0MlrOHlpwSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMjo0MDo0MlrOHlpwSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI0MzQ2Nw==", "bodyText": "This test is still not being executed when using the native maven profile.", "url": "https://github.com/kiegroup/kogito-apps/pull/477#discussion_r509243467", "createdAt": "2020-10-21T12:40:42Z", "author": {"login": "Sgitario"}, "path": "trusty-ui/src/test/java/org/kie/kogito/NativeStaticContentTestIT.java", "diffHunk": "@@ -19,7 +19,7 @@\n import io.quarkus.test.junit.NativeImageTest;\n \n @NativeImageTest\n-public class StaticContentTestIT extends StaticContentTest {\n+public class NativeStaticContentTestIT extends StaticContentTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ff0bc5e70b01c113ae4bdc8ce72dda7d9d8ca3a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjAxMzU2", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-517601356", "createdAt": "2020-10-27T11:30:57Z", "commit": {"oid": "0ff0bc5e70b01c113ae4bdc8ce72dda7d9d8ca3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0da030a66dc9ae8e77b44b716b6d3f6125696b82", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/0da030a66dc9ae8e77b44b716b6d3f6125696b82", "committedDate": "2020-11-10T13:50:29Z", "message": "update trusty-ui readme with keycloack instructions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8507be1cf29709620757a0d162526a18cff31c3f", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8507be1cf29709620757a0d162526a18cff31c3f", "committedDate": "2020-11-10T14:46:56Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-3557-keycloak-trusty-ui"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTI3MjU2", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-529127256", "createdAt": "2020-11-12T14:16:16Z", "commit": {"oid": "8507be1cf29709620757a0d162526a18cff31c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzI5MjA3", "url": "https://github.com/kiegroup/kogito-apps/pull/477#pullrequestreview-531329207", "createdAt": "2020-11-16T13:42:22Z", "commit": {"oid": "8507be1cf29709620757a0d162526a18cff31c3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4823, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}