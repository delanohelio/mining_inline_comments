{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTYyOTMy", "number": 440, "title": "KOGITO-3262 - allow usage of hardly separable datasets", "bodyText": "Currently DatasetNotSeparableException is thrown when the dataset of LIME perturbed inputs is not separable for a given Output, however this behviour prevents the generation of explanations for other Outputs not having the same issue.\nThis is especially inconvenient when there are fixed outputs that are always returned as part of a result (e.g. the DMN for fraud scoring seems to do that for blocked merchants).\nThis PR solves this by keeping the retrying mechanism to seek a separable dataset, but allowing the generation of a not (easily) separable dataset in the end which then will be normally fed into LIME, with a warning message.\nSuch datasets are expected to generate poorly informative explanations (e.g. all scores equals or very close to zero).\nSee https://issues.redhat.com/browse/KOGITO-3262\nSee also related issue https://issues.redhat.com/browse/KOGITO-3259 and PR #439\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-09-04T10:41:13Z", "url": "https://github.com/kiegroup/kogito-apps/pull/440", "merged": true, "mergeCommit": {"oid": "d315c83bfad0a0e82438f8fb84b8fa8c7b519079"}, "closed": true, "closedAt": "2020-09-10T12:50:00Z", "author": {"login": "tteofili"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFijW9gH2gAyNDc5NTYyOTMyOmJjYjMyYTFiOGRhMjkzY2JiMzNjZDRkMWEzYWE3YzkyMGJhNTZiZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHgQW2AFqTQ4NTg5MzU4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bcb32a1b8da293cbb33cd4d1a3aa7c920ba56beb", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/bcb32a1b8da293cbb33cd4d1a3aa7c920ba56beb", "committedDate": "2020-09-04T10:22:15Z", "message": "KOGITO-3262 - allow usage of hardly separable datasets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/7d54f224963735f506b8ecca46eb55652877ec87", "committedDate": "2020-09-04T12:07:19Z", "message": "KOGITO-3262 - fixed log formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjYzNTM1", "url": "https://github.com/kiegroup/kogito-apps/pull/440#pullrequestreview-482663535", "createdAt": "2020-09-04T13:44:09Z", "commit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NDowOVrOHNOF5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzo0NTozMFrOHNOJIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDQyMQ==", "bodyText": "Can you please move noOfRetries == 0 to a local variable to improve readability?\nBtw are you sure of this check? I think it should be == 1.\nThe if condition for the recursion is noOfRetries > 0 so the only reason why you can get a 0 here is because this is the init value and it has probably no sense :)", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624421", "createdAt": "2020-09-04T13:44:09Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -149,7 +149,7 @@ public int getNoOfRetries() {\n         return model.predictAsync(perturbedInputs)\n                 .thenCompose(predictionOutputs -> {\n                     try {\n-                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs);\n+                        List<LimeInputs> limeInputsList = getLimeInputs(linearizedTargetInputFeatures, actualOutputs, perturbedInputs, predictionOutputs, noOfRetries == 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDYwNQ==", "bodyText": "New line\nCan you please add a javadoc?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624605", "createdAt": "2020-09-04T13:44:28Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -163,12 +163,12 @@ public int getNoOfRetries() {\n     private List<LimeInputs> getLimeInputs(List<Feature> linearizedTargetInputFeatures,\n                                            List<Output> actualOutputs,\n                                            List<PredictionInput> perturbedInputs,\n-                                           List<PredictionOutput> predictionOutputs) {\n+                                           List<PredictionOutput> predictionOutputs, boolean strict) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNDc1MQ==", "bodyText": "New line", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483624751", "createdAt": "2020-09-04T13:44:41Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -221,7 +221,7 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n                                      List<PredictionOutput> perturbedOutputs,\n                                      List<Feature> linearizedTargetInputFeatures,\n                                      int o,\n-                                     Output currentOutput) {\n+                                     Output currentOutput, boolean strict) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYyNTI0OQ==", "bodyText": "Can you add a test?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r483625249", "createdAt": "2020-09-04T13:45:30Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +232,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d54f224963735f506b8ecca46eb55652877ec87"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/32d7af68e9c14fa1f8c20744a7c697f4fb3dc216", "committedDate": "2020-09-04T14:32:29Z", "message": "KOGITO-3262 - added missing test covering fixed outputs, minor fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODc0OTQ4", "url": "https://github.com/kiegroup/kogito-apps/pull/440#pullrequestreview-483874948", "createdAt": "2020-09-08T07:43:40Z", "commit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0Mzo0MVrOHOQu9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0Nzo0M1rOHOQ3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNjI3Ng==", "bodyText": "why remove public?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484716276", "createdAt": "2020-09-08T07:43:41Z", "author": {"login": "r00ta"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/DatasetNotSeparableException.java", "diffHunk": "@@ -21,11 +21,11 @@\n import org.kie.kogito.explainability.model.Output;\n \n /**\n- * Exception for when a dataset encoded for LIME is not (linearly) separable.\n+ * Exception thrown when a dataset encoded for LIME is not (linearly) separable.\n  */\n-public class DatasetNotSeparableException extends LocalExplanationException {\n+class DatasetNotSeparableException extends LocalExplanationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODQ3Mg==", "bodyText": "return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);?", "url": "https://github.com/kiegroup/kogito-apps/pull/440#discussion_r484718472", "createdAt": "2020-09-08T07:47:43Z", "author": {"login": "r00ta"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/local/lime/LimeExplainer.java", "diffHunk": "@@ -232,16 +246,21 @@ private LimeInputs prepareInputs(List<PredictionInput> perturbedInputs,\n             Long max = rawClassesBalance.values().stream().max(Long::compareTo).orElse(1L);\n             double separationRatio = (double) max / (double) perturbedInputs.size();\n \n-            // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n-            if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n-                boolean classification = rawClassesBalance.size() == 2;\n-\n-                List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n-\n-                // if dataset creation process succeeds use it to train the linear model\n-                return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+            List<Output> outputs = perturbedOutputs.stream().map(po -> po.getOutputs().get(o)).collect(Collectors.toList());\n+            boolean classification = rawClassesBalance.size() == 2;\n+            if (strict) {\n+                // check if the dataset is separable and also if the linear model should fit a regressor or a classifier\n+                if (rawClassesBalance.size() > 1 && separationRatio < SEPARABLE_DATASET_RATIO) {\n+\n+                    // if dataset creation process succeeds use it to train the linear model\n+                    return new LimeInputs(classification, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);\n+                } else {\n+                    throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                }\n             } else {\n-                throw new DatasetNotSeparableException(currentOutput, rawClassesBalance);\n+                LOGGER.warn(\"Using an hardly separable dataset for output '{}' of type '{}' with value '{}' ({})\",\n+                            currentOutput.getName(), currentOutput.getType(), currentOutput.getValue(), rawClassesBalance);\n+                return new LimeInputs(rawClassesBalance.size() == 2, linearizedTargetInputFeatures, currentOutput, perturbedInputs, outputs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d7af68e9c14fa1f8c20744a7c697f4fb3dc216"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a53e543346b8a13dbb4b71f7f967510d295f2ad", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5a53e543346b8a13dbb4b71f7f967510d295f2ad", "committedDate": "2020-09-08T08:16:28Z", "message": "KOGITO-3262 - review based fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTg5MDg2", "url": "https://github.com/kiegroup/kogito-apps/pull/440#pullrequestreview-485189086", "createdAt": "2020-09-09T16:21:00Z", "commit": {"oid": "5a53e543346b8a13dbb4b71f7f967510d295f2ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODkzNTg0", "url": "https://github.com/kiegroup/kogito-apps/pull/440#pullrequestreview-485893584", "createdAt": "2020-09-10T12:49:32Z", "commit": {"oid": "5a53e543346b8a13dbb4b71f7f967510d295f2ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}