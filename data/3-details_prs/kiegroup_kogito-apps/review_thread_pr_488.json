{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDY2OTMx", "number": 488, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjo1ODowMVrOEvaVvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1NToxMlrOE8R7MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTUwMDc2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjo1ODowMVrOHkYQXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowMjowOVrOHkYbjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwODE5MQ==", "bodyText": "@Sara4994 we need to avoid this absolute reference  just:      /svg/process/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r507908191", "createdAt": "2020-10-19T16:58:01Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -379,3 +380,18 @@ export const getTriggerableNodes = async (\n     return [];\n   }\n };\n+\n+export const getSvg = async (data, setSvg) => {\n+  try {\n+    await axios\n+      .get(\n+        `http://localhost:4000/svg/process/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4669344861b6db8ed8c93e03811d52fc6e45e4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxMTA1Mg==", "bodyText": "@nmirasch  yep that's my bad, I was trying something else and forgot to remove this part. it is removed now", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r507911052", "createdAt": "2020-10-19T17:02:09Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -379,3 +380,18 @@ export const getTriggerableNodes = async (\n     return [];\n   }\n };\n+\n+export const getSvg = async (data, setSvg) => {\n+  try {\n+    await axios\n+      .get(\n+        `http://localhost:4000/svg/process/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwODE5MQ=="}, "originalCommit": {"oid": "4c4669344861b6db8ed8c93e03811d52fc6e45e4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTU1NTU5OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo0NDo0N1rOHnGqsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzo1ODo1MVrOHqdHkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc2NTc0NA==", "bodyText": "@Sara4994 just to confirm, I guess when we merge this #489 This part will be updated to use unification setTitle, is that correct?", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r510765744", "createdAt": "2020-10-23T09:44:47Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "diffHunk": "@@ -0,0 +1,70 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+\n+interface IOwnProps {\n+  errorString: string;\n+  errorModalOpen: boolean;\n+  handleErrorModal: () => void;\n+  label: string;\n+  title: JSX.Element;\n+}\n+const ProcessDetailsErrorModal: React.FC<IOwnProps & OUIAProps> = ({\n+  errorString,\n+  errorModalOpen,\n+  handleErrorModal,\n+  label,\n+  title,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const errorModalContent = (): JSX.Element => {\n+    return (\n+      <ModalBoxBody>\n+        <TextContent>\n+          <Text>{errorString}</Text>\n+        </TextContent>\n+      </ModalBoxBody>\n+    );\n+  };\n+  const errorModalAction: JSX.Element[] = [\n+    <Button\n+      key=\"confirm-selection\"\n+      variant=\"primary\"\n+      onClick={handleErrorModal}\n+    >\n+      OK\n+    </Button>\n+  ];\n+\n+  return (\n+    <Modal\n+      variant={ModalVariant.small}\n+      aria-labelledby={label}\n+      aria-label={label}\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgzMTY3MQ==", "bodyText": "@nmirasch  yes once #489 gets merge I will do a rebase \ud83d\udc4d", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r510831671", "createdAt": "2020-10-23T11:56:30Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "diffHunk": "@@ -0,0 +1,70 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+\n+interface IOwnProps {\n+  errorString: string;\n+  errorModalOpen: boolean;\n+  handleErrorModal: () => void;\n+  label: string;\n+  title: JSX.Element;\n+}\n+const ProcessDetailsErrorModal: React.FC<IOwnProps & OUIAProps> = ({\n+  errorString,\n+  errorModalOpen,\n+  handleErrorModal,\n+  label,\n+  title,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const errorModalContent = (): JSX.Element => {\n+    return (\n+      <ModalBoxBody>\n+        <TextContent>\n+          <Text>{errorString}</Text>\n+        </TextContent>\n+      </ModalBoxBody>\n+    );\n+  };\n+  const errorModalAction: JSX.Element[] = [\n+    <Button\n+      key=\"confirm-selection\"\n+      variant=\"primary\"\n+      onClick={handleErrorModal}\n+    >\n+      OK\n+    </Button>\n+  ];\n+\n+  return (\n+    <Modal\n+      variant={ModalVariant.small}\n+      aria-labelledby={label}\n+      aria-label={label}\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc2NTc0NA=="}, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI3OTMxNA==", "bodyText": "@nmirasch done", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514279314", "createdAt": "2020-10-29T13:58:51Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "diffHunk": "@@ -0,0 +1,70 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+\n+interface IOwnProps {\n+  errorString: string;\n+  errorModalOpen: boolean;\n+  handleErrorModal: () => void;\n+  label: string;\n+  title: JSX.Element;\n+}\n+const ProcessDetailsErrorModal: React.FC<IOwnProps & OUIAProps> = ({\n+  errorString,\n+  errorModalOpen,\n+  handleErrorModal,\n+  label,\n+  title,\n+  ouiaId,\n+  ouiaSafe\n+}) => {\n+  const errorModalContent = (): JSX.Element => {\n+    return (\n+      <ModalBoxBody>\n+        <TextContent>\n+          <Text>{errorString}</Text>\n+        </TextContent>\n+      </ModalBoxBody>\n+    );\n+  };\n+  const errorModalAction: JSX.Element[] = [\n+    <Button\n+      key=\"confirm-selection\"\n+      variant=\"primary\"\n+      onClick={handleErrorModal}\n+    >\n+      OK\n+    </Button>\n+  ];\n+\n+  return (\n+    <Modal\n+      variant={ModalVariant.small}\n+      aria-labelledby={label}\n+      aria-label={label}\n+      title=\"\"\n+      header={\n+        <Title headingLevel=\"h1\" size={TitleSizes['2xl']}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc2NTc0NA=="}, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTY1MDAzOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDoxMToyNFrOHnHj2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoyNzoyOVrOHqecfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MDM3Nw==", "bodyText": "@Sara4994 I like the idea of have a generic component to show the error modal. We can do it more generic passing the buttons, or the label/related actions relationship, and this component  can be used across the whole console to show errors. Wdyt?\nHere the candidate I'm thinking on..\n\n  \n    \n      kogito-apps/ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx\n    \n    \n         Line 233\n      in\n      1100f8e\n    \n    \n    \n    \n\n        \n          \n           <Modal", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r510780377", "createdAt": "2020-10-23T10:11:24Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "diffHunk": "@@ -0,0 +1,70 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+\n+interface IOwnProps {\n+  errorString: string;\n+  errorModalOpen: boolean;\n+  handleErrorModal: () => void;\n+  label: string;\n+  title: JSX.Element;\n+}\n+const ProcessDetailsErrorModal: React.FC<IOwnProps & OUIAProps> = ({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b906c58c96a39dea6e9816ae0c76466fcfea619"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMTA1Mw==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514301053", "createdAt": "2020-10-29T14:27:29Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/components/Atoms/ProcessDetailsErrorModal/ProcessDetailsErrorModal.tsx", "diffHunk": "@@ -0,0 +1,70 @@\n+import React from 'react';\n+import {\n+  Modal,\n+  Title,\n+  TitleSizes,\n+  ModalVariant,\n+  Button,\n+  ModalBoxBody,\n+  TextContent,\n+  Text\n+} from '@patternfly/react-core';\n+import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+\n+interface IOwnProps {\n+  errorString: string;\n+  errorModalOpen: boolean;\n+  handleErrorModal: () => void;\n+  label: string;\n+  title: JSX.Element;\n+}\n+const ProcessDetailsErrorModal: React.FC<IOwnProps & OUIAProps> = ({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4MDM3Nw=="}, "originalCommit": {"oid": "4b906c58c96a39dea6e9816ae0c76466fcfea619"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTgzNjQxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/utils/tests/Utils.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMTowODo0NFrOHnJT4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToyNTo0OVrOHqhS7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwOTA1OA==", "bodyText": "@Sara4994 I miss here to verify here that setSvg is called. And add 'handle api to get svg fail' verifying seSvgError call", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r510809058", "createdAt": "2020-10-23T11:08:44Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/utils/tests/Utils.test.tsx", "diffHunk": "@@ -656,4 +657,40 @@ describe('uitility function testing', () => {\n       expect(result).toStrictEqual([]);\n     });\n   });\n+  describe('test utility of svg panel', () => {\n+    it('handle api to get svg', async () => {\n+      mockedAxios.get.mockResolvedValue({\n+        data:\n+          '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"800\" height=\"300\" viewBox=\"0 0 1748 632\"></g></g></svg>',\n+        status: 200,\n+        statusText: 'OK'\n+      });\n+      const data = {\n+        ProcessInstances: [\n+          {\n+            callbackEndpoint:\n+              'http://localhost:8080/management/jobs/travels/instances/9865268c-64d7-3a44-8972-7325b295f7cc/timers/58180644-2fdf-4261-83f2-f4e783d308a3_0',\n+            executionCounter: 0,\n+            executionResponse: null,\n+            expirationTime: '2020-10-16T10:17:22.879Z',\n+            id: '58180644-2fdf-4261-83f2-f4e783d308a3_0',\n+            lastUpdate: '2020-10-07T07:41:31.467Z',\n+            priority: 0,\n+            processId: 'travels',\n+            processInstanceId: '9865268c-64d7-3a44-8972-7325b295f7cc',\n+            repeatInterval: null,\n+            repeatLimit: null,\n+            retries: 0,\n+            rootProcessId: null,\n+            rootProcessInstanceId: null,\n+            scheduledId: null,\n+            status: 'SCHEDULED'\n+          }\n+        ]\n+      };\n+      const setSvg = jest.fn();\n+      const setSvgError = jest.fn();\n+      await getSvg(data, setSvg, setSvgError);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0Nzc1OA==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514347758", "createdAt": "2020-10-29T15:25:49Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/utils/tests/Utils.test.tsx", "diffHunk": "@@ -656,4 +657,40 @@ describe('uitility function testing', () => {\n       expect(result).toStrictEqual([]);\n     });\n   });\n+  describe('test utility of svg panel', () => {\n+    it('handle api to get svg', async () => {\n+      mockedAxios.get.mockResolvedValue({\n+        data:\n+          '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"800\" height=\"300\" viewBox=\"0 0 1748 632\"></g></g></svg>',\n+        status: 200,\n+        statusText: 'OK'\n+      });\n+      const data = {\n+        ProcessInstances: [\n+          {\n+            callbackEndpoint:\n+              'http://localhost:8080/management/jobs/travels/instances/9865268c-64d7-3a44-8972-7325b295f7cc/timers/58180644-2fdf-4261-83f2-f4e783d308a3_0',\n+            executionCounter: 0,\n+            executionResponse: null,\n+            expirationTime: '2020-10-16T10:17:22.879Z',\n+            id: '58180644-2fdf-4261-83f2-f4e783d308a3_0',\n+            lastUpdate: '2020-10-07T07:41:31.467Z',\n+            priority: 0,\n+            processId: 'travels',\n+            processInstanceId: '9865268c-64d7-3a44-8972-7325b295f7cc',\n+            repeatInterval: null,\n+            repeatLimit: null,\n+            retries: 0,\n+            rootProcessId: null,\n+            rootProcessInstanceId: null,\n+            scheduledId: null,\n+            status: 'SCHEDULED'\n+          }\n+        ]\n+      };\n+      const setSvg = jest.fn();\n+      const setSvgError = jest.fn();\n+      await getSvg(data, setSvg, setSvgError);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwOTA1OA=="}, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTg1MTAyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsProcessDiagram/ProcessDetailsProcessDiagram.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMToxMzo1OVrOHnJc9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToyMDoxOFrOHqrEQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxMTM4MA==", "bodyText": "@Sara4994  Maybe Process Diagram is closer to what we had in v7", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r510811380", "createdAt": "2020-10-23T11:13:59Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsProcessDiagram/ProcessDetailsProcessDiagram.tsx", "diffHunk": "@@ -1,23 +1,61 @@\n-import { Card, CardBody, CardHeader, Title } from '@patternfly/react-core';\n import React from 'react';\n-import { url } from './Url';\n+import { UncontrolledReactSVGPanZoom } from 'react-svg-pan-zoom';\n import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+import {\n+  ReactSvgPanZoomLoader,\n+  SvgLoaderSelectElement\n+} from 'react-svg-pan-zoom-loader';\n+import { Title, Card, CardHeader, CardBody } from '@patternfly/react-core';\n \n-const ProcessDetailsProcessDiagram: React.FC<OUIAProps> = ({\n+interface svgType {\n+  src: string;\n+}\n+interface svgProp {\n+  props: svgType;\n+}\n+interface IOwnProps {\n+  svg: svgProp;\n+}\n+\n+const ProcessDetailsProcessDiagram: React.FC<IOwnProps & OUIAProps> = ({\n+  svg,\n   ouiaId,\n   ouiaSafe\n }) => {\n   return (\n-    <Card {...componentOuiaProps(ouiaId, 'process-diagram', ouiaSafe)}>\n-      <CardHeader>\n-        <Title headingLevel=\"h3\" size=\"xl\">\n-          Process Diagram\n-        </Title>\n-      </CardHeader>\n-      <CardBody>\n-        <img src={url} />\n-      </CardBody>\n-    </Card>\n+    <>\n+      <Card {...componentOuiaProps(ouiaId, 'process-diagram', ouiaSafe)}>\n+        <CardHeader>\n+          <Title headingLevel=\"h3\" size=\"xl\">\n+            Process Visualization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwNzg0Mw==", "bodyText": "@Sara4994 I think you changed the title at error message but not at the panel, change that here too, please", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514507843", "createdAt": "2020-10-29T19:20:18Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Organisms/ProcessDetailsProcessDiagram/ProcessDetailsProcessDiagram.tsx", "diffHunk": "@@ -1,23 +1,61 @@\n-import { Card, CardBody, CardHeader, Title } from '@patternfly/react-core';\n import React from 'react';\n-import { url } from './Url';\n+import { UncontrolledReactSVGPanZoom } from 'react-svg-pan-zoom';\n import { OUIAProps, componentOuiaProps } from '@kogito-apps/common';\n+import {\n+  ReactSvgPanZoomLoader,\n+  SvgLoaderSelectElement\n+} from 'react-svg-pan-zoom-loader';\n+import { Title, Card, CardHeader, CardBody } from '@patternfly/react-core';\n \n-const ProcessDetailsProcessDiagram: React.FC<OUIAProps> = ({\n+interface svgType {\n+  src: string;\n+}\n+interface svgProp {\n+  props: svgType;\n+}\n+interface IOwnProps {\n+  svg: svgProp;\n+}\n+\n+const ProcessDetailsProcessDiagram: React.FC<IOwnProps & OUIAProps> = ({\n+  svg,\n   ouiaId,\n   ouiaSafe\n }) => {\n   return (\n-    <Card {...componentOuiaProps(ouiaId, 'process-diagram', ouiaSafe)}>\n-      <CardHeader>\n-        <Title headingLevel=\"h3\" size=\"xl\">\n-          Process Diagram\n-        </Title>\n-      </CardHeader>\n-      <CardBody>\n-        <img src={url} />\n-      </CardBody>\n-    </Card>\n+    <>\n+      <Card {...componentOuiaProps(ouiaId, 'process-diagram', ouiaSafe)}>\n+        <CardHeader>\n+          <Title headingLevel=\"h3\" size=\"xl\">\n+            Process Visualization", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxMTM4MA=="}, "originalCommit": {"oid": "e4d3a7b151f89abf36eac9dbdae367bd3b405cec"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzczNTY0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1Nzo1OFrOHqqTzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjo0NzoxMlrOHrDAfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTQzNw==", "bodyText": "?", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514495437", "createdAt": "2020-10-29T18:57:58Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -75,12 +78,24 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<\n   const [errorModalOpen, setErrorModalOpen] = useState(false);\n   const [confirmationModal, setConfirmationModal] = useState(false);\n   const [variableError, setVariableError] = useState();\n+  const [svg, setSvg] = React.useState(null);\n+  const [svgError, setSvgError] = useState<string>('');\n   let currentPage = JSON.parse(window.localStorage.getItem('state'));\n+  const [svgErrorModalOpen, setSvgErrorModalOpen] = useState<boolean>(false);\n+\n+  const handleSvgErrorModal = () => {\n+    setSvgErrorModalOpen(!svgErrorModalOpen);\n+  };\n \n   const { loading, error, data } = GraphQL.useGetProcessInstanceByIdQuery({\n     variables: { id },\n     fetchPolicy: 'network-only'\n   });\n+  useEffect(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25715c5ebea9639061271c5ac8c81fc64092d67e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkwMDA5Mg==", "bodyText": "my bad.. removed..", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514900092", "createdAt": "2020-10-30T06:47:12Z", "author": {"login": "Sara4994"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -75,12 +78,24 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<\n   const [errorModalOpen, setErrorModalOpen] = useState(false);\n   const [confirmationModal, setConfirmationModal] = useState(false);\n   const [variableError, setVariableError] = useState();\n+  const [svg, setSvg] = React.useState(null);\n+  const [svgError, setSvgError] = useState<string>('');\n   let currentPage = JSON.parse(window.localStorage.getItem('state'));\n+  const [svgErrorModalOpen, setSvgErrorModalOpen] = useState<boolean>(false);\n+\n+  const handleSvgErrorModal = () => {\n+    setSvgErrorModalOpen(!svgErrorModalOpen);\n+  };\n \n   const { loading, error, data } = GraphQL.useGetProcessInstanceByIdQuery({\n     variables: { id },\n     fetchPolicy: 'network-only'\n   });\n+  useEffect(() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTQzNw=="}, "originalCommit": {"oid": "25715c5ebea9639061271c5ac8c81fc64092d67e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzc2OTgyOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOTowNjo1OFrOHqqofQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOTowNjo1OFrOHqqofQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwMDczMw==", "bodyText": "Not sure if is a good idea show this error or if the good aproach would be do the best and just hide the panel when the svg woudn't be able to be generated/retrieved.", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514500733", "createdAt": "2020-10-29T19:06:58Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -398,3 +399,18 @@ export const jobCancel = async (\n     onJobCancelFailure(JSON.stringify(error.message));\n   }\n };\n+\n+export const getSvg = async (data, setSvg, setSvgError): Promise<void> => {\n+  try {\n+    await axios\n+      .get(\n+        `/svg/process/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}`\n+      )\n+      .then(res => {\n+        const temp = <SVG src={res.data} />;\n+        setSvg(temp);\n+      });\n+  } catch (error) {\n+    setSvgError(error.message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25715c5ebea9639061271c5ac8c81fc64092d67e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzc4MjQ0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxMDo0NlrOHqqwcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxMDo0NlrOHqqwcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwMjc3MQ==", "bodyText": "here we need to clear previous content on svg before load the new one.", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r514502771", "createdAt": "2020-10-29T19:10:46Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -124,11 +139,21 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<\n   };\n \n   useEffect(() => {\n-    if (data) {\n-      setUpdateJson(JSON.parse(data.ProcessInstances[0].variables));\n-    }\n+    const handleSvgApi = async () => {\n+      if (data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25715c5ebea9639061271c5ac8c81fc64092d67e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODgxNjcxOnYy", "diffSide": "RIGHT", "path": "management-console/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTowNjowNVrOHrch-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxMToxMjo1OVrOHruOgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxODI2NA==", "bodyText": "@Sara4994 the addon have been renamed to process-svg-quarkus-addon", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r515318264", "createdAt": "2020-10-30T19:06:05Z", "author": {"login": "nmirasch"}, "path": "management-console/pom.xml", "diffHunk": "@@ -39,6 +39,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>security-commons</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>svg-process-addon</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d439f1fcc3992fe1fb0e4e381f11e8ca52593241"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYwODE5NA==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r515608194", "createdAt": "2020-11-01T11:12:59Z", "author": {"login": "Sara4994"}, "path": "management-console/pom.xml", "diffHunk": "@@ -39,6 +39,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>security-commons</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>svg-process-addon</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxODI2NA=="}, "originalCommit": {"oid": "d439f1fcc3992fe1fb0e4e381f11e8ca52593241"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzU5OTE1OnYy", "diffSide": "LEFT", "path": "ui-packages/packages/common/package.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozOToyNVrOHuJROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTozOToyNVrOHuJROw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0ODQxMQ==", "bodyText": "@Sara4994 we need the lint && yarn run lint", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r518148411", "createdAt": "2020-11-05T15:39:25Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/common/package.json", "diffHunk": "@@ -18,7 +18,7 @@\n     \"precommit\": \"lint-staged\",\n     \"build\": \"tsc -m commonjs --outDir ./dist && webpack --config webpack.prod.js\",\n     \"build:watch\": \"tsc -m commonjs --outDir ./dist -w && webpack --config webpack.dev.js --watch\",\n-    \"build:prod\": \"yarn run clean && yarn run lint && yarn run build\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b4030cefd2fcf027b8d5e42e9aa3a071be73da"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzYxODkzOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0MzozM1rOHuJdrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0MzozM1rOHuJdrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1MTU5Nw==", "bodyText": "@Sara4994 the rest call have changed to 'processes' instead of 'process' here we need:\n/svg/processes/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r518151597", "createdAt": "2020-11-05T15:43:33Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -402,3 +403,21 @@ export const jobCancel = async (\n     refetch();\n   }\n };\n+\n+export const getSvg = async (data, setSvg, setSvgError): Promise<void> => {\n+  try {\n+    await axios\n+      .get(\n+        `/svg/process/${data.ProcessInstances[0].processId}/instances/${data.ProcessInstances[0].id}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b4030cefd2fcf027b8d5e42e9aa3a071be73da"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzYyNDA0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NDoyOFrOHuJgpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0NDoyOFrOHuJgpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1MjM1Nw==", "bodyText": "Do we need this comment?", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r518152357", "createdAt": "2020-11-05T15:44:28Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/src/utils/Utils.tsx", "diffHunk": "@@ -323,7 +324,7 @@ export const handleVariableUpdate = async (\n     setVariableError(error.message);\n   }\n };\n-\n+// function containing Api call to reschedule job", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b4030cefd2fcf027b8d5e42e9aa3a071be73da"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzY0NDQ3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/server/server.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0ODo0MlrOHuJtbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNTo0ODo0MlrOHuJtbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NTYyOQ==", "bodyText": "@Sara4994 the rest call have changed to 'processes' instead of 'process' here we need:\napp.get('/svg/processes/:processId/instances/:id', controller.dispatchSVG);", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r518155629", "createdAt": "2020-11-05T15:48:42Z", "author": {"login": "nmirasch"}, "path": "ui-packages/packages/management-console/server/server.js", "diffHunk": "@@ -70,6 +70,7 @@ app.post('/management/processes/:processId/instances/:processInstanceId/nodes/:n\n );\n app.get('/management/processes/:processId/nodes', controller.getTriggerableNodes)\n app.delete('/jobs/:jobId',controller.callJobCancel);\n+app.get('/svg/process/:processId/instances/:id', controller.dispatchSVG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24b4030cefd2fcf027b8d5e42e9aa3a071be73da"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjQxNzEwOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1MToxMFrOH4ToSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1MToxMFrOH4ToSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMzkxMw==", "bodyText": "reduce the duplication (milestones and process-variables Flex elements are duplicated in both if branches) - I think we can first build an array of the Flex components and conditionally add just those that should be there.\nsth like\nflexes = [];\nif(svq!=null && svg.props.src) {\n  flexes.push(<Flex ....);\n}\nflexes.push(<Flex_milestones>);\nflexes.push(<Flex_process-variables);\n\nand render all items of the array afterwards.", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r528803913", "createdAt": "2020-11-23T15:51:10Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/ProcessDetailsPage/ProcessDetailsPage.tsx", "diffHunk": "@@ -368,6 +387,99 @@ const ProcessDetailsPage: React.FC<RouteComponentProps<\n     }\n   }\n \n+  const renderPanels = () => {\n+    if (svg !== null && svg.props.src) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0118f2493140e77f4f639b28de6f30b2bd0789e7"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjQyNTExOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/server/MockData/controllers.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1Mjo0OFrOH4TtFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1Mjo0OFrOH4TtFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNTE0MA==", "bodyText": "white-space formatting", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r528805140", "createdAt": "2020-11-23T15:52:48Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/server/MockData/controllers.js", "diffHunk": "@@ -180,5 +182,22 @@ module.exports = controller = {\n       jobData[0].lastUpdate = new Date().toISOString();\n       res.status(200).send(jobData[0]);\n     }\n+  },\n+  dispatchSVG: (req, res) => {\n+    try{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0118f2493140e77f4f639b28de6f30b2bd0789e7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjQzNjk2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/server/MockData/controllers.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1NToxMlrOH4T0Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo1NToxMlrOH4T0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwNjk2Mw==", "bodyText": "I would move the svg files closer to this file, it is used just for the mock server, right? can we move it directly under packages/management-console/server/MockData/ ? Or a subdir like static if you like.", "url": "https://github.com/kiegroup/kogito-apps/pull/488#discussion_r528806963", "createdAt": "2020-11-23T15:55:12Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/server/MockData/controllers.js", "diffHunk": "@@ -180,5 +182,22 @@ module.exports = controller = {\n       jobData[0].lastUpdate = new Date().toISOString();\n       res.status(200).send(jobData[0]);\n     }\n+  },\n+  dispatchSVG: (req, res) => {\n+    try{\n+    if(processSvg.includes(req.params.id)){\n+      if(req.params.processId === 'travels') {\n+        res.sendFile(path.resolve(__dirname+'../../../src/static/travels.svg'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0118f2493140e77f4f639b28de6f30b2bd0789e7"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1143, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}