{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMTc2NDAx", "number": 357, "title": "FAI-240: Model definition endpoint - trusty-service", "bodyText": "See https://issues.redhat.com/browse/FAI-240\nThis PR relates to the receipt of ModelEvents published from the tracing addon in kogito-runtimes.\nThis is part of an ensemble:\n\nkiegroup/kogito-runtimes#667\n#357\n\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-07-31T14:03:41Z", "url": "https://github.com/kiegroup/kogito-apps/pull/357", "merged": true, "mergeCommit": {"oid": "39e51af3e3c408e5c728f422d09dc8feb9769cbb"}, "closed": true, "closedAt": "2020-08-04T11:54:09Z", "author": {"login": "manstis"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6XuZXgFqTQ1OTI2MjAwNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7i6vmgFqTQ2MDYzMzc3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MjYyMDA2", "url": "https://github.com/kiegroup/kogito-apps/pull/357#pullrequestreview-459262006", "createdAt": "2020-07-31T15:25:00Z", "commit": {"oid": "35104de4cc2f7203fc2b3bad70a5f46b0780c098"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToyNTowMFrOG6MlLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToyNTozMVrOG6MmbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NjcxOQ==", "bodyText": "I think it could be protected or even private so we can avoid unexpected usages :)", "url": "https://github.com/kiegroup/kogito-apps/pull/357#discussion_r463676719", "createdAt": "2020-07-31T15:25:00Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/ModelEventConsumer.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito.trusty.service.messaging;\n+\n+import java.util.Optional;\n+import java.util.concurrent.CompletionStage;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import io.cloudevents.v1.AttributesImpl;\n+import io.cloudevents.v1.CloudEventImpl;\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.eclipse.microprofile.reactive.messaging.Message;\n+import org.kie.kogito.decision.DecisionModelType;\n+import org.kie.kogito.tracing.decision.event.model.ModelEvent;\n+import org.kie.kogito.trusty.service.ITrustyService;\n+\n+@ApplicationScoped\n+public class ModelEventConsumer extends BaseEventConsumer<ModelEvent> {\n+\n+    private static final TypeReference<CloudEventImpl<ModelEvent>> CLOUD_EVENT_TYPE_REF = new TypeReference<>() {\n+    };\n+\n+    public ModelEventConsumer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35104de4cc2f7203fc2b3bad70a5f46b0780c098"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NzAzNw==", "bodyText": "Same as above", "url": "https://github.com/kiegroup/kogito-apps/pull/357#discussion_r463677037", "createdAt": "2020-07-31T15:25:31Z", "author": {"login": "danielezonca"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/TraceEventConsumer.java", "diffHunk": "@@ -27,49 +27,38 @@\n import io.cloudevents.v1.CloudEventImpl;\n import org.eclipse.microprofile.reactive.messaging.Incoming;\n import org.eclipse.microprofile.reactive.messaging.Message;\n-import org.kie.kogito.tracing.decision.event.CloudEventUtils;\n import org.kie.kogito.tracing.decision.event.trace.TraceEvent;\n import org.kie.kogito.tracing.decision.event.trace.TraceEventType;\n import org.kie.kogito.trusty.service.ITrustyService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n @ApplicationScoped\n-public class TraceEventConsumer {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(TraceEventConsumer.class);\n+public class TraceEventConsumer extends BaseEventConsumer<TraceEvent> {\n \n     private static final TypeReference<CloudEventImpl<TraceEvent>> CLOUD_EVENT_TYPE_REF = new TypeReference<>() {\n     };\n \n-    private final ITrustyService service;\n+    public TraceEventConsumer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35104de4cc2f7203fc2b3bad70a5f46b0780c098"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDc3MzA4", "url": "https://github.com/kiegroup/kogito-apps/pull/357#pullrequestreview-459477308", "createdAt": "2020-07-31T21:05:06Z", "commit": {"oid": "41bedc71d93b73516cb627f7b8ace9ebc6faa3d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTowNTowNlrOG6Wmeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTowNTowNlrOG6Wmeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0MDg5MA==", "bodyText": "Simple enough; but I put it in a separate class to (1) be consistent, (2) in case it becomes more complex later.", "url": "https://github.com/kiegroup/kogito-apps/pull/357#discussion_r463840890", "createdAt": "2020-07-31T21:05:06Z", "author": {"login": "manstis"}, "path": "trusty/trusty-service/src/main/java/org/kie/kogito/trusty/service/messaging/ModelEventConverter.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito.trusty.service.messaging;\n+\n+import org.kie.kogito.tracing.decision.event.model.ModelEvent;\n+\n+public class ModelEventConverter {\n+\n+    public static String toModel(final ModelEvent event) {\n+        return event.getDefinition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41bedc71d93b73516cb627f7b8ace9ebc6faa3d8"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDc4NDYy", "url": "https://github.com/kiegroup/kogito-apps/pull/357#pullrequestreview-459478462", "createdAt": "2020-07-31T21:07:42Z", "commit": {"oid": "41bedc71d93b73516cb627f7b8ace9ebc6faa3d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTowNzo0MlrOG6WtsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTowNzo0MlrOG6WtsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0MjczNg==", "bodyText": "@r00ta FYI, I updated the test topic name to be consistent with the non-test topic naming.", "url": "https://github.com/kiegroup/kogito-apps/pull/357#discussion_r463842736", "createdAt": "2020-07-31T21:07:42Z", "author": {"login": "manstis"}, "path": "trusty/trusty-service/src/test/resources/application.properties", "diffHunk": "@@ -8,9 +8,16 @@ quarkus.infinispan-client.auth-server-name=infinispan\n quarkus.infinispan-client.client-intelligence=BASIC\n quarkus.infinispan-client.sasl-mechanism=DIGEST-MD5\n kogito.persistence.type=infinispan\n+\n # Kafka Tracing\n mp.messaging.incoming.kogito-tracing.group.id=trusty-service\n mp.messaging.incoming.kogito-tracing.connector=smallrye-kafka\n-mp.messaging.incoming.kogito-tracing.topic=trusty-service-test\n+mp.messaging.incoming.kogito-tracing.topic=kogito-tracing-test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41bedc71d93b73516cb627f7b8ace9ebc6faa3d8"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35eedeb6cc57dc087dc002aab33fe4017d4b617c", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/35eedeb6cc57dc087dc002aab33fe4017d4b617c", "committedDate": "2020-08-03T20:08:20Z", "message": "FAI-240: Model definition endpoint - trusty-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0073dfa06b7c537c7eb0e5e448b8c6c2bf6d8328", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/0073dfa06b7c537c7eb0e5e448b8c6c2bf6d8328", "committedDate": "2020-08-03T20:08:20Z", "message": "Refactor to common BaseEventConsumer class.."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f314e6f60c44746463a8b6c980a30aaeb2de32", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/76f314e6f60c44746463a8b6c980a30aaeb2de32", "committedDate": "2020-08-03T20:08:20Z", "message": "Make zero parameter constructors private following peer review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0fd8b569eae297f5cb66f72f1d5534baa071cdd", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/c0fd8b569eae297f5cb66f72f1d5534baa071cdd", "committedDate": "2020-08-03T20:08:21Z", "message": "Increase test coverage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e71e7820d171f9cb8d30ac1d2f339eff174f7031", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/e71e7820d171f9cb8d30ac1d2f339eff174f7031", "committedDate": "2020-08-03T09:36:25Z", "message": "Increase test coverage"}, "afterCommit": {"oid": "c0fd8b569eae297f5cb66f72f1d5534baa071cdd", "author": {"user": null}, "url": "https://github.com/kiegroup/kogito-apps/commit/c0fd8b569eae297f5cb66f72f1d5534baa071cdd", "committedDate": "2020-08-03T20:08:21Z", "message": "Increase test coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzQ4NDU3", "url": "https://github.com/kiegroup/kogito-apps/pull/357#pullrequestreview-460348457", "createdAt": "2020-08-03T21:19:39Z", "commit": {"oid": "c0fd8b569eae297f5cb66f72f1d5534baa071cdd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjMzNzc3", "url": "https://github.com/kiegroup/kogito-apps/pull/357#pullrequestreview-460633777", "createdAt": "2020-08-04T09:08:33Z", "commit": {"oid": "c0fd8b569eae297f5cb66f72f1d5534baa071cdd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4961, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}