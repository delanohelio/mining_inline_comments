{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDczODk5", "number": 515, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxMTo0NVrOE1PbsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMjoyMlrOE1Pvog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjYyODMzOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/JobsManagementFilters.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxMTo0NVrOHtZ0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxMTo0NVrOHtZ0jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3MTAyMQ==", "bodyText": "please also add OUIAProps interface and component attributes.", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517371021", "createdAt": "2020-11-04T14:11:45Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/JobsManagementFilters.tsx", "diffHunk": "@@ -0,0 +1,118 @@\n+import React, { useState } from 'react';\n+import {\n+  Button,\n+  Select,\n+  SelectOption,\n+  SelectVariant,\n+  ToolbarFilter,\n+  ToolbarGroup,\n+  ToolbarItem\n+} from '@patternfly/react-core';\n+import { GraphQL } from '@kogito-apps/common';\n+interface IOwnProps {\n+  selectedStatus: GraphQL.JobStatus[];\n+  setSelectedStatus: (\n+    selectedStatus: (status: GraphQL.JobStatus[]) => GraphQL.JobStatus[]\n+  ) => void;\n+  chips: GraphQL.JobStatus[];\n+  setChips: (\n+    chips:\n+      | ((chip: GraphQL.JobStatus[]) => GraphQL.JobStatus[])\n+      | GraphQL.JobStatus[]\n+  ) => void;\n+  setValues: (\n+    values:\n+      | ((value: GraphQL.JobStatus[]) => GraphQL.JobStatus[])\n+      | GraphQL.JobStatus[]\n+  ) => void;\n+}\n+\n+const JobsManagementFilters: React.FC<IOwnProps> = ({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY0Mjk4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNDo1MlrOHtZ9LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNDo1MlrOHtZ9LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3MzIyOA==", "bodyText": "can we also check that the chip was deleted? by checking bouth count before and after deletion and also by looking for the chip here?", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517373228", "createdAt": "2020-11-04T14:14:52Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY0Nzk0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNTo1OVrOHtaAKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNTo1OVrOHtaAKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3Mzk5Mw==", "bodyText": "again, can we check the result here?", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517373993", "createdAt": "2020-11-04T14:15:59Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onToggle']();\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()['isOpen']\n+    ).toEqual(true);\n+    const event: any = { target: { innerText: GraphQL.JobStatus.Scheduled } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY0OTExOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNjoxNVrOHtaA5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNjoxNVrOHtaA5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3NDE4MA==", "bodyText": "can we check that the filter is shown?", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517374180", "createdAt": "2020-11-04T14:16:15Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY1MDY4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNjozOVrOHtaB7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoxNjozOVrOHtaB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3NDQ0Nw==", "bodyText": "can we check that applied filter is shown?", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517374447", "createdAt": "2020-11-04T14:16:39Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Organisms/JobsManagementFilters/tests/JobsManagementFilters.test.tsx", "diffHunk": "@@ -0,0 +1,143 @@\n+import { GraphQL } from '@kogito-apps/common';\n+import { Toolbar, ToolbarContent } from '@patternfly/react-core';\n+import { mount } from 'enzyme';\n+import React from 'react';\n+import { act } from 'react-dom/test-utils';\n+import JobsManagementFilters from '../JobsManagementFilters';\n+\n+describe('Jobs management filters component tests', () => {\n+  const props = {\n+    selectedStatus: [GraphQL.JobStatus.Scheduled],\n+    setSelectedStatus: jest.fn(),\n+    chips: [GraphQL.JobStatus.Scheduled],\n+    setChips: jest.fn(),\n+    setValues: jest.fn()\n+  };\n+  it('Snapshot with default props', () => {\n+    const wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    expect(wrapper).toMatchSnapshot();\n+  });\n+  it('test toolbarFilter props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const type = 'Status';\n+    const id = GraphQL.JobStatus.Scheduled;\n+    await act(async () => {\n+      wrapper\n+        .find('ToolbarFilter')\n+        .props()\n+        ['deleteChip'](type, id);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+  });\n+  it('test apply filter button', () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    wrapper\n+      .find('#apply-filter')\n+      .first()\n+      .simulate('click');\n+    wrapper = wrapper.update();\n+    expect(props.setChips).toHaveBeenCalled();\n+    expect(props.setValues).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onToggle']();\n+    });\n+    wrapper = wrapper.update();\n+    expect(\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()['isOpen']\n+    ).toEqual(true);\n+    const event: any = { target: { innerText: GraphQL.JobStatus.Scheduled } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();\n+  });\n+  it('test select component props', async () => {\n+    let wrapper = mount(\n+      <Toolbar\n+        id=\"data-toolbar-with-chip-groups\"\n+        className=\"pf-m-toggle-group-container\"\n+        collapseListedFiltersBreakpoint=\"md\"\n+        clearAllFilters={jest.fn()}\n+        clearFiltersButtonText=\"Reset to default\"\n+      >\n+        <ToolbarContent>\n+          <JobsManagementFilters {...props} />\n+        </ToolbarContent>\n+      </Toolbar>\n+    );\n+    const event2: any = { target: { innerText: GraphQL.JobStatus.Executed } };\n+    await act(async () => {\n+      wrapper\n+        .find('#status-select')\n+        .first()\n+        .props()\n+        ['onSelect'](event2);\n+    });\n+    wrapper = wrapper.update();\n+    expect(props.setSelectedStatus).toHaveBeenCalled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY3NjAxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMTo0MVrOHtaQxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMTo0MVrOHtaQxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3ODI0Nw==", "bodyText": "could we make this array rather a function or constant that can be reused in all three places? To prevent any potential issue when changing the default array.", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517378247", "createdAt": "2020-11-04T14:21:41Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "diffHunk": "@@ -43,6 +42,22 @@ const JobsManagementPage: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {\n   const [modalTitle, setModalTitle] = useState<JSX.Element>(null);\n   const [modalContent, setModalContent] = useState<string>('');\n   const [selectedJob, setSelectedJob] = useState<any>({});\n+  const [selectedStatus, setSelectedStatus] = useState<GraphQL.JobStatus[]>([\n+    GraphQL.JobStatus.Scheduled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY3OTM4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMjoyMlrOHtaS0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMjoyMlrOHtaS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3ODc3MQ==", "bodyText": "here again a function or constant can be used instead of explicit array (to be sure we're consistent across usages)", "url": "https://github.com/kiegroup/kogito-apps/pull/515#discussion_r517378771", "createdAt": "2020-11-04T14:22:22Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/management-console/src/components/Templates/JobsManagementPage/JobsManagementPage.tsx", "diffHunk": "@@ -83,14 +98,29 @@ const JobsManagementPage: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {\n     window.location.reload();\n   };\n \n+  const onReset = (): void => {\n+    setSelectedStatus([GraphQL.JobStatus.Scheduled]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496049cca2b28e790eac09f814279c9ea248c9d5"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1178, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}