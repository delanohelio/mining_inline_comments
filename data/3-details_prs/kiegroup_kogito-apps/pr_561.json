{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODE3NzE0", "number": 561, "title": "FAI-273 - make PDP work with any model", "bodyText": "This PR modifies the PartialDependencePlotExplainer so that it can be used with any kind of model, not just models relying on numeric features only (as it is up to now).\nSee https://issues.redhat.com/browse/FAI-273\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-12-03T14:26:56Z", "url": "https://github.com/kiegroup/kogito-apps/pull/561", "merged": true, "mergeCommit": {"oid": "930d5236ba5f113218debaebe227061eeae7b8f0"}, "closed": true, "closedAt": "2021-02-11T17:17:29Z", "author": {"login": "tteofili"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdij-qfgH2gAyNTMxODE3NzE0OmM0MjMwZTU5ZGNkZjg1YTUzN2I5MWZkMmJiNWUyZGIzODRkNDVmMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd1zTC9gH2gAyNTMxODE3NzE0OjUyNWFkZTBkYjg1MGRhMDM2MjRkOTkxYzA3MjAxMTEyZWI5ZGViZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c4230e59dcdf85a537b91fd2bb5e2db384d45f29", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c4230e59dcdf85a537b91fd2bb5e2db384d45f29", "committedDate": "2020-12-03T14:25:47Z", "message": "FAI-273 - make PDP work with any model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6afc9703cfd99f6203963d02df31b4c21426161a", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6afc9703cfd99f6203963d02df31b4c21426161a", "committedDate": "2020-12-03T15:32:30Z", "message": "FAI-273 - removed unused method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d254152c7668cd51ac7f162197077cee1bf98c0", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6d254152c7668cd51ac7f162197077cee1bf98c0", "committedDate": "2020-12-14T09:04:51Z", "message": "FAI-273 - distinct x values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78532d057210e77998913752531fcec2c29e74c", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e78532d057210e77998913752531fcec2c29e74c", "committedDate": "2020-12-15T07:10:55Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "182e5e281f6281ee982c01f97ee8720937dfed40", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/182e5e281f6281ee982c01f97ee8720937dfed40", "committedDate": "2021-01-11T08:39:35Z", "message": "FAI-273 - performance improvements, reduced complexity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe60b37efc941f54a21def2e4c4b93cf64291bee", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/fe60b37efc941f54a21def2e4c4b93cf64291bee", "committedDate": "2021-01-11T08:39:54Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beff96a4f4e790ef9d0a3eaf6857fa5a97adf5b2", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/beff96a4f4e790ef9d0a3eaf6857fa5a97adf5b2", "committedDate": "2021-01-11T08:48:50Z", "message": "FAI-273 - minor improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9b57959a69b903c6cbdb0cac7023d999a7b2692", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/b9b57959a69b903c6cbdb0cac7023d999a7b2692", "committedDate": "2021-01-11T09:02:17Z", "message": "FAI-273 - minor improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2f561429a85ac263af7d5c202c5cfa65bb7a3f4", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/f2f561429a85ac263af7d5c202c5cfa65bb7a3f4", "committedDate": "2021-01-13T15:45:34Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "284c49ff4ad9aa564c8a8546188256cbf3040281", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/284c49ff4ad9aa564c8a8546188256cbf3040281", "committedDate": "2021-01-15T14:44:11Z", "message": "FAi-273 - supported nested features"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e5d6fbd09487372b3983ed03ba70e9fff9c849f", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9e5d6fbd09487372b3983ed03ba70e9fff9c849f", "committedDate": "2021-01-15T14:50:38Z", "message": "Merge branch 'FAI-273' of github.com:tteofili/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f1663a19333583eff5d43bbfca6e6094e64b5a2", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5f1663a19333583eff5d43bbfca6e6094e64b5a2", "committedDate": "2021-01-15T15:19:59Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3bff8d83b4f1af3ef281d0dcad80976ede622c6", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/f3bff8d83b4f1af3ef281d0dcad80976ede622c6", "committedDate": "2021-01-15T16:01:02Z", "message": "FAI-273 - minor improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3650d0d880201697f6cee4c7911bc4b1eb9c51b6", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/3650d0d880201697f6cee4c7911bc4b1eb9c51b6", "committedDate": "2021-01-19T12:22:54Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2feff602fef3590a92a455dcf6f0f2d24a4cd557", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/2feff602fef3590a92a455dcf6f0f2d24a4cd557", "committedDate": "2021-01-20T10:56:38Z", "message": "FAI-273 - ignoring malformed outputs, optimized imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/05581d3b0df5cf569c55c7dade8e0a35ba7650ba", "committedDate": "2021-01-20T10:57:07Z", "message": "FAI-273 - added missing pdp tests for dmn models"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyNjkzNzky", "url": "https://github.com/kiegroup/kogito-apps/pull/561#pullrequestreview-572693792", "createdAt": "2021-01-20T22:12:24Z", "commit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQyMjoxMjoyNFrOIXVjEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQyMjoxNzoyOFrOIXVtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTM0MTIwMA==", "bodyText": "Please use explicit import", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r561341200", "createdAt": "2021-01-20T22:12:24Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/global/pdp/PartialDependencePlotExplainer.java", "diffHunk": "@@ -15,35 +15,20 @@\n  */\n package org.kie.kogito.explainability.global.pdp;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.TimeoutException;\n-import java.util.stream.Collectors;\n-\n import org.kie.kogito.explainability.Config;\n import org.kie.kogito.explainability.global.GlobalExplainer;\n-import org.kie.kogito.explainability.model.DataDistribution;\n-import org.kie.kogito.explainability.model.Feature;\n-import org.kie.kogito.explainability.model.FeatureDistribution;\n-import org.kie.kogito.explainability.model.FeatureFactory;\n-import org.kie.kogito.explainability.model.Output;\n-import org.kie.kogito.explainability.model.PartialDependenceGraph;\n-import org.kie.kogito.explainability.model.Prediction;\n-import org.kie.kogito.explainability.model.PredictionInput;\n-import org.kie.kogito.explainability.model.PredictionInputsDataDistribution;\n-import org.kie.kogito.explainability.model.PredictionOutput;\n-import org.kie.kogito.explainability.model.PredictionProvider;\n-import org.kie.kogito.explainability.model.PredictionProviderMetadata;\n-import org.kie.kogito.explainability.model.Value;\n-import org.kie.kogito.explainability.utils.DataUtils;\n+import org.kie.kogito.explainability.model.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTM0MTkyNw==", "bodyText": "Please log error (don't use jboss logmanager! :P )", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r561341927", "createdAt": "2021-01-20T22:13:49Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/global/pdp/PartialDependencePlotExplainer.java", "diffHunk": "@@ -136,6 +109,67 @@ public PartialDependencePlotExplainer() {\n         return pdps;\n     }\n \n+    private PartialDependenceGraph getPartialDependenceGraph(PredictionProvider model,\n+                                                             List<PredictionInput> trainingData,\n+                                                             List<Value<?>> xsValues,\n+                                                             List<Feature> featureXSvalues, int outputIndex)\n+            throws InterruptedException, ExecutionException, TimeoutException {\n+        Output outputDecision = null;\n+        Feature feature = null;\n+        // each feature value of the feature under analysis should have a corresponding output value (composed by the marginal impacts of the other features)\n+        List<Value<?>> marginalImpacts = new ArrayList<>(featureXSvalues.size());\n+        for (int i = 0; i < featureXSvalues.size(); i++) {\n+            // initialize an empty feature to use in the generated PDP\n+            if (feature == null) {\n+                feature = FeatureFactory.copyOf(featureXSvalues.get(i), new Value<>(null));\n+            }\n+            List<PredictionInput> predictionInputs = prepareInputs(featureXSvalues.get(i), trainingData);\n+            List<PredictionOutput> predictionOutputs = getOutputs(model, predictionInputs);\n+            // prediction requests are batched per value of feature 'Xs' under analysis\n+            for (PredictionOutput predictionOutput : predictionOutputs) {\n+                Output output = predictionOutput.getOutputs().get(outputIndex);\n+                if (outputDecision == null) {\n+                    outputDecision = new Output(output.getName(), output.getType());\n+                }\n+                // update marginal impacts\n+                updateMarginalImpact(marginalImpacts, i, output);\n+            }\n+        }\n+        // collapse impacts ?\n+        return new PartialDependenceGraph(feature, outputDecision, xsValues, marginalImpacts);\n+    }\n+\n+    private void updateMarginalImpact(List<Value<?>> marginalImpacts, int i, Output output) {\n+        if (Type.NUMBER.equals(output.getType())) {\n+            double v = output.getValue().asNumber();\n+            if (marginalImpacts.size() > i) {\n+                marginalImpacts.set(i, new Value<>(marginalImpacts.get(i).asNumber() + v / (double) seriesLength));\n+            } else {\n+                marginalImpacts.add(i, new Value<>(v / (double) seriesLength));\n+            }\n+        } else {\n+            String categoricalOutput = output.getValue().asString();\n+            if (marginalImpacts.size() <= i) {\n+                Map<String, Long> classCount = new HashMap<>();\n+                classCount.put(categoricalOutput, 1L);\n+                marginalImpacts.add(new Value<>(classCount));\n+            } else {\n+                Value<?> value = marginalImpacts.get(i);\n+                try {\n+                    Map<String, Long> classCount = (Map<String, Long>) value.getUnderlyingObject();\n+                    if (classCount.containsKey(categoricalOutput)) {\n+                        classCount.put(categoricalOutput, classCount.get(categoricalOutput) + 1);\n+                    } else {\n+                        classCount.put(categoricalOutput, 1L);\n+                    }\n+                    marginalImpacts.set(i, new Value<>(classCount));\n+                } catch (ClassCastException cce) {\n+                    // ignore malformed output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTM0MzM1MA==", "bodyText": "Explicit imports", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r561343350", "createdAt": "2021-01-20T22:16:39Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-integrationtests/explainability-integrationtests-opennlp/src/test/java/org/kie/kogito/explainability/explainability/integrationtests/opennlp/OpenNLPPDPExplainerTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.explainability.explainability.integrationtests.opennlp;\n+\n+import opennlp.tools.langdetect.Language;\n+import opennlp.tools.langdetect.LanguageDetector;\n+import opennlp.tools.langdetect.LanguageDetectorME;\n+import opennlp.tools.langdetect.LanguageDetectorModel;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.explainability.Config;\n+import org.kie.kogito.explainability.global.pdp.PartialDependencePlotExplainer;\n+import org.kie.kogito.explainability.local.lime.LimeConfig;\n+import org.kie.kogito.explainability.local.lime.LimeExplainer;\n+import org.kie.kogito.explainability.model.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTM0Mzc2Mg==", "bodyText": "Why this check? What about other types?", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r561343762", "createdAt": "2021-01-20T22:17:28Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-integrationtests/explainability-integrationtests-dmn/src/test/java/org/kie/kogito/explainability/explainability/integrationtests/dmn/DecisionModelWrapper.java", "diffHunk": "@@ -56,7 +56,14 @@\n             DMNResult dmnResult = decisionModel.evaluateAll(context);\n             List<Output> outputs = new LinkedList<>();\n             for (DMNDecisionResult decisionResult : dmnResult.getDecisionResults()) {\n-                Output output = new Output(decisionResult.getDecisionName(), Type.TEXT, new Value<>(decisionResult.getResult()), 1d);\n+                Value<Object> value = new Value<>(decisionResult.getResult());\n+                Type type;\n+                if (Double.isNaN(value.asNumber())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05581d3b0df5cf569c55c7dade8e0a35ba7650ba"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4c8712e7e69f86393e1bc2165c551b3d642d692", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/c4c8712e7e69f86393e1bc2165c551b3d642d692", "committedDate": "2021-01-21T07:25:29Z", "message": "FAI-273 - dropped System.err"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "207c2764e02bcb223527133e3ef460f8681cc45c", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/207c2764e02bcb223527133e3ef460f8681cc45c", "committedDate": "2021-01-21T12:20:12Z", "message": "FAI-273 - minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92197f0f72e18ec656ae9fb2e37b39fa14d50da9", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/92197f0f72e18ec656ae9fb2e37b39fa14d50da9", "committedDate": "2021-01-22T09:21:38Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e38727817aa871272743586fc58d6fd7c7917b2", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1e38727817aa871272743586fc58d6fd7c7917b2", "committedDate": "2021-01-25T08:11:25Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "723c82efd11bab5b12430e4995468be56935827d", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/723c82efd11bab5b12430e4995468be56935827d", "committedDate": "2021-01-27T09:53:22Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NzQzMzI4", "url": "https://github.com/kiegroup/kogito-apps/pull/561#pullrequestreview-577743328", "createdAt": "2021-01-27T20:46:27Z", "commit": {"oid": "1e38727817aa871272743586fc58d6fd7c7917b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMDo0NjoyN1rOIba0Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMDo0NjoyN1rOIba0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTYyMTg1MQ==", "bodyText": "Import to fix", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r565621851", "createdAt": "2021-01-27T20:46:27Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-integrationtests/explainability-integrationtests-opennlp/src/test/java/org/kie/kogito/explainability/explainability/integrationtests/opennlp/OpenNLPPDPExplainerTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.explainability.explainability.integrationtests.opennlp;\n+\n+import opennlp.tools.langdetect.Language;\n+import opennlp.tools.langdetect.LanguageDetector;\n+import opennlp.tools.langdetect.LanguageDetectorME;\n+import opennlp.tools.langdetect.LanguageDetectorModel;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.explainability.Config;\n+import org.kie.kogito.explainability.global.pdp.PartialDependencePlotExplainer;\n+import org.kie.kogito.explainability.model.Feature;\n+import org.kie.kogito.explainability.model.FeatureFactory;\n+import org.kie.kogito.explainability.model.Output;\n+import org.kie.kogito.explainability.model.PartialDependenceGraph;\n+import org.kie.kogito.explainability.model.Prediction;\n+import org.kie.kogito.explainability.model.PredictionInput;\n+import org.kie.kogito.explainability.model.PredictionOutput;\n+import org.kie.kogito.explainability.model.PredictionProvider;\n+import org.kie.kogito.explainability.model.Type;\n+import org.kie.kogito.explainability.model.Value;\n+\n+import java.io.InputStream;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e38727817aa871272743586fc58d6fd7c7917b2"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6d1da8471bb1d3b3ae604667065e3006d529344", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/b6d1da8471bb1d3b3ae604667065e3006d529344", "committedDate": "2021-01-28T07:10:14Z", "message": "Merge branch 'FAI-273' of github.com:tteofili/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5393ae59a34ca5b7af9ad6c64cf77414c0a442f", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e5393ae59a34ca5b7af9ad6c64cf77414c0a442f", "committedDate": "2021-01-28T07:10:21Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "289bd08c54c6b9ad0e9c147ea94601aea14c637c", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/289bd08c54c6b9ad0e9c147ea94601aea14c637c", "committedDate": "2021-01-28T07:19:13Z", "message": "FAI-273 - fixed import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed9915e357ed17afc98d082e4e88e5ad93789e8", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/eed9915e357ed17afc98d082e4e88e5ad93789e8", "committedDate": "2021-01-28T09:35:28Z", "message": "FAI-273 - fixed imports, enhanced marginal impacts calculations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b011212cc3cd09440351e68c6621fc1dcdf4cfc7", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/b011212cc3cd09440351e68c6621fc1dcdf4cfc7", "committedDate": "2021-01-28T09:51:01Z", "message": "FAI-273 - minor javadoc fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b0f74fe293122b59011450519610cdf05d4fd9b", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/7b0f74fe293122b59011450519610cdf05d4fd9b", "committedDate": "2021-01-29T08:53:48Z", "message": "FAI-273 - added utility method to persist pdg to csv"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MTI0ODU3", "url": "https://github.com/kiegroup/kogito-apps/pull/561#pullrequestreview-579124857", "createdAt": "2021-01-29T10:26:11Z", "commit": {"oid": "7b0f74fe293122b59011450519610cdf05d4fd9b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMDoyNjoxMVrOIcd_og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMDoyNzoyMlrOIceCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcyMjQ2Ng==", "bodyText": "Please use a different variable name instead of i :)", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r566722466", "createdAt": "2021-01-29T10:26:11Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/global/pdp/PartialDependencePlotExplainer.java", "diffHunk": "@@ -136,6 +126,90 @@ public PartialDependencePlotExplainer() {\n         return pdps;\n     }\n \n+    private PartialDependenceGraph getPartialDependenceGraph(PredictionProvider model,\n+                                                             List<PredictionInput> trainingData,\n+                                                             List<Value<?>> xsValues,\n+                                                             List<Feature> featureXSvalues, int outputIndex)\n+            throws InterruptedException, ExecutionException, TimeoutException {\n+        Output outputDecision = null;\n+        Feature feature = null;\n+        // each feature value of the feature under analysis should have a corresponding output value (composed by the marginal impacts of the other features)\n+        List<Map<Value<?>, Long>> valueCounts = new ArrayList<>(featureXSvalues.size());\n+        for (int i = 0; i < featureXSvalues.size(); i++) {\n+            // initialize an empty feature to use in the generated PDP\n+            if (feature == null) {\n+                feature = FeatureFactory.copyOf(featureXSvalues.get(i), new Value<>(null));\n+            }\n+            List<PredictionInput> predictionInputs = prepareInputs(featureXSvalues.get(i), trainingData);\n+            List<PredictionOutput> predictionOutputs = getOutputs(model, predictionInputs);\n+            // prediction requests are batched per value of feature 'Xs' under analysis\n+            for (PredictionOutput predictionOutput : predictionOutputs) {\n+                Output output = predictionOutput.getOutputs().get(outputIndex);\n+                if (outputDecision == null) {\n+                    outputDecision = new Output(output.getName(), output.getType());\n+                }\n+                // update output value counts\n+                updateValueCounts(valueCounts, i, output);\n+            }\n+        }\n+\n+        if (outputDecision != null) {\n+            List<Value<?>> yValues = collapseMarginalImpacts(valueCounts, outputDecision.getType());\n+            return new PartialDependenceGraph(feature, outputDecision, xsValues, yValues);\n+        } else {\n+            throw new RuntimeException(\"cannot produce PDP for null decision\");\n+        }\n+    }\n+\n+    /**\n+     * Collapse value counts into marginal impacts.\n+     * For numbers ({@code Type.NUMBER.equals(type))} this is just the average of each value at each feature value.\n+     * For all other types the final {@link Value} is just the most frequent.\n+     *\n+     * @param valueCounts the frequency of each value at each position\n+     * @param type        the type of the output\n+     * @return the marginal impacts\n+     */\n+    private List<Value<?>> collapseMarginalImpacts(List<Map<Value<?>, Long>> valueCounts, Type type) {\n+        List<Value<?>> yValues = new ArrayList<>();\n+        if (Type.NUMBER.equals(type)) {\n+            List<Double> doubles = valueCounts.stream()\n+                    .map(v -> v.entrySet().stream()\n+                            .map(e -> e.getKey().asNumber() * e.getValue() / config.getSeriesLength()).mapToDouble(d -> d).sum()).collect(Collectors.toList());\n+            yValues = doubles.stream().map(Value::new).collect(Collectors.toList());\n+        } else {\n+            for (Map<Value<?>, Long> item : valueCounts) {\n+                long max = 0;\n+                String output = null;\n+                for (Map.Entry<Value<?>, Long> entry : item.entrySet()) {\n+                    if (entry.getValue() > max) {\n+                        max = entry.getValue();\n+                        output = entry.getKey().asString();\n+                    }\n+                }\n+                yValues.add(new Value<>(output));\n+            }\n+        }\n+        return yValues;\n+    }\n+\n+    private void updateValueCounts(List<Map<Value<?>, Long>> valueCounts, int i, Output output) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0f74fe293122b59011450519610cdf05d4fd9b"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjcyMzE5NA==", "bodyText": "What about use apache-commons-csv?", "url": "https://github.com/kiegroup/kogito-apps/pull/561#discussion_r566723194", "createdAt": "2021-01-29T10:27:22Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/utils/DataUtils.java", "diffHunk": "@@ -433,4 +439,24 @@ private static void linearizeFeature(List<Feature> flattenedFeatures, Feature f)\n                     .collect(Collectors.toList());\n         }\n     }\n+\n+    /**\n+     * Persist a {@link PartialDependenceGraph} into a CSV file.\n+     * @param partialDependenceGraph the PDP to persist\n+     * @param path the path to the CSV file to be created\n+     * @throws IOException whether any IO error occurs while writing the CSV\n+     */\n+    public static void toCSV(PartialDependenceGraph partialDependenceGraph, Path path) throws IOException {\n+        try (OutputStream outputStream = Files.newOutputStream(path)) {\n+            List<Value<?>> xAxis = partialDependenceGraph.getX();\n+            List<Value<?>> yAxis = partialDependenceGraph.getY();\n+            outputStream.write(\"feature,output\\n\".getBytes(StandardCharsets.UTF_8));\n+            for (int i = 0; i < xAxis.size(); i++) {\n+                String line = xAxis.get(i).asString().replaceAll(\",\", \"\") + ',' +\n+                        yAxis.get(i).asString().replaceAll(\",\", \"\") + '\\n';\n+                outputStream.write(line.getBytes(StandardCharsets.UTF_8));\n+            }\n+            outputStream.flush();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0f74fe293122b59011450519610cdf05d4fd9b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50af56ab7341fb04c46e763e35a487b95a161882", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/50af56ab7341fb04c46e763e35a487b95a161882", "committedDate": "2021-01-29T10:56:35Z", "message": "Merge branch 'FAI-273' of github.com:tteofili/kogito-apps into FAI-273"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cdec91e1d5e743daaa4689c417ce84f4b02fa7f", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5cdec91e1d5e743daaa4689c417ce84f4b02fa7f", "committedDate": "2021-01-29T11:00:08Z", "message": "FAi-273 - minor improvements to PDPExplainer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525ade0db850da03624d991c07201112eb9debeb", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/525ade0db850da03624d991c07201112eb9debeb", "committedDate": "2021-02-01T09:01:11Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-273"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4598, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}