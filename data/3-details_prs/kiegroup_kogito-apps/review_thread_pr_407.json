{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjY2MDQ2", "number": 407, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMToyNTo0N1rOEcBfZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjoxNVrOEjB8nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODIwMDA0OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/components/Organisms/DataTable/DataTable.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMToyNTo0N1rOHGTizg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzo1MToyM1rOHJPcdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MzcxMA==", "bodyText": "I see here you are identifying the column by the target inner text, I think it reffers to the column label. Why not using the index to calculate the DataTableColumn from the cols and maybe pass that to the setOrderByObj func? Let's sync up today.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r476373710", "createdAt": "2020-08-25T11:25:47Z", "author": {"login": "pefernan"}, "path": "ui-packages/packages/common/src/components/Organisms/DataTable/DataTable.tsx", "diffHunk": "@@ -116,6 +125,12 @@ const DataTable: React.FC<IOwnProps> = ({\n     }\n   }, [columnList]);\n \n+  const onSort = (event, index, direction) => {\n+    const sortingColumn = event.target.innerText.toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0f210064f78f64d1df12610d65b7a1de714952"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MjI3OA==", "bodyText": "@pefernan Thanks, I will do the change", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r479452278", "createdAt": "2020-08-28T17:51:23Z", "author": {"login": "yzhao583"}, "path": "ui-packages/packages/common/src/components/Organisms/DataTable/DataTable.tsx", "diffHunk": "@@ -116,6 +125,12 @@ const DataTable: React.FC<IOwnProps> = ({\n     }\n   }, [columnList]);\n \n+  const onSort = (event, index, direction) => {\n+    const sortingColumn = event.target.innerText.toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3MzcxMA=="}, "originalCommit": {"oid": "bf0f210064f78f64d1df12610d65b7a1de714952"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjcxNzI2OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/task-console/src/components/Templates/DataListContainer/DataListContainer.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoxMTozNVrOHNCSgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo1NjoyMVrOHPTfhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTA0MQ==", "bodyText": "there is no test for the component.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r483431041", "createdAt": "2020-09-04T07:11:35Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Templates/DataListContainer/DataListContainer.tsx", "diffHunk": "@@ -0,0 +1,94 @@\n+import { Card, Grid, GridItem, PageSection } from '@patternfly/react-core';\n+import React, { useState, useEffect } from 'react';\n+import UserTaskPageHeader from '../../Molecules/UserTaskPageHeader/UserTaskPageHeader';\n+import DataToolbarComponent from '../../Molecules/DataListToolbar/DataListToolbar';\n+import './DataList.css';\n+import TaskList from '../../Organisms/TaskList/TaskList';\n+import {\n+  ouiaPageTypeAndObjectId,\n+  KogitoEmptyState,\n+  KogitoEmptyStateType,\n+  GraphQL,\n+  OUIAProps,\n+  componentOuiaProps\n+} from '@kogito-apps/common';\n+\n+const DataListContainer: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89b516d04c021e67d249ae90fd9f44cd22d4947d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMDA1NA==", "bodyText": "@jstastny-cz Thanks for the review! This is not a new component, and it will be deprecated soon. We will submit a PR to do the clean up once the Task Inbox is up.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r485810054", "createdAt": "2020-09-09T17:56:21Z", "author": {"login": "yzhao583"}, "path": "ui-packages/packages/task-console/src/components/Templates/DataListContainer/DataListContainer.tsx", "diffHunk": "@@ -0,0 +1,94 @@\n+import { Card, Grid, GridItem, PageSection } from '@patternfly/react-core';\n+import React, { useState, useEffect } from 'react';\n+import UserTaskPageHeader from '../../Molecules/UserTaskPageHeader/UserTaskPageHeader';\n+import DataToolbarComponent from '../../Molecules/DataListToolbar/DataListToolbar';\n+import './DataList.css';\n+import TaskList from '../../Organisms/TaskList/TaskList';\n+import {\n+  ouiaPageTypeAndObjectId,\n+  KogitoEmptyState,\n+  KogitoEmptyStateType,\n+  GraphQL,\n+  OUIAProps,\n+  componentOuiaProps\n+} from '@kogito-apps/common';\n+\n+const DataListContainer: React.FC<OUIAProps> = ({ ouiaId, ouiaSafe }) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTA0MQ=="}, "originalCommit": {"oid": "89b516d04c021e67d249ae90fd9f44cd22d4947d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjcyMjcxOnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoxMzoyNVrOHNCVjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzo1NzowMFrOHPThAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTgyMg==", "bodyText": "I think the loading hasn't yet finished here, see the snapshot - it's in loading.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r483431822", "createdAt": "2020-09-04T07:13:25Z", "author": {"login": "jstastny-cz"}, "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "diffHunk": "@@ -113,4 +114,32 @@ describe('UserTaskDataTableContainer component tests', () => {\n     expect(wrapper).toMatchSnapshot();\n     expect(GraphQL.useGetUserTasksByStatesQuery).toBeCalled();\n   });\n+\n+  it('The onSorting function should work correctly', async () => {\n+    GraphQL.useGetUserTasksByStatesQuery = jest.fn().mockReturnValue({\n+      loading: false,\n+      error: undefined,\n+      refetch: jest.fn(),\n+      networkStatus: 1\n+    });\n+\n+    const wrapper = await getWrapperAsync(\n+      <Router>\n+        <MockedProvider>\n+          <UserTaskDataTableContainer />\n+        </MockedProvider>\n+      </Router>,\n+      'UserTaskDataTableContainer'\n+    );\n+\n+    act(() => {\n+      wrapper\n+        .find(DataTable)\n+        .props()\n+        .onSorting(1, 'desc');\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89b516d04c021e67d249ae90fd9f44cd22d4947d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMDQzMg==", "bodyText": "@jstastny-cz Oh thanks! I will update this.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r485810432", "createdAt": "2020-09-09T17:57:00Z", "author": {"login": "yzhao583"}, "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "diffHunk": "@@ -113,4 +114,32 @@ describe('UserTaskDataTableContainer component tests', () => {\n     expect(wrapper).toMatchSnapshot();\n     expect(GraphQL.useGetUserTasksByStatesQuery).toBeCalled();\n   });\n+\n+  it('The onSorting function should work correctly', async () => {\n+    GraphQL.useGetUserTasksByStatesQuery = jest.fn().mockReturnValue({\n+      loading: false,\n+      error: undefined,\n+      refetch: jest.fn(),\n+      networkStatus: 1\n+    });\n+\n+    const wrapper = await getWrapperAsync(\n+      <Router>\n+        <MockedProvider>\n+          <UserTaskDataTableContainer />\n+        </MockedProvider>\n+      </Router>,\n+      'UserTaskDataTableContainer'\n+    );\n+\n+    act(() => {\n+      wrapper\n+        .find(DataTable)\n+        .props()\n+        .onSorting(1, 'desc');\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTgyMg=="}, "originalCommit": {"oid": "89b516d04c021e67d249ae90fd9f44cd22d4947d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTIyOTE4OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwOTozNjoxNFrOHPra6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxODoxOToyM1rOHQASDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMjA5MQ==", "bodyText": "@yzhao583 looks like the KogitoSpiner isn't used on the test,", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r486202091", "createdAt": "2020-09-10T09:36:14Z", "author": {"login": "pefernan"}, "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "diffHunk": "@@ -1,8 +1,14 @@\n import React from 'react';\n import UserTaskDataTableContainer from '../UserTaskDataTableContainer';\n-import { getWrapperAsync, GraphQL } from '@kogito-apps/common';\n+import {\n+  getWrapperAsync,\n+  GraphQL,\n+  DataTable,\n+  KogitoSpinner", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e790c0eb5cfd68f55444ee2d37bf2d7765425954"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU0Mzg4NQ==", "bodyText": "@pefernan Opps, sorry my bad. Updated.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r486543885", "createdAt": "2020-09-10T18:19:23Z", "author": {"login": "yzhao583"}, "path": "ui-packages/packages/task-console/src/components/Templates/UserTaskDataTableContainer/tests/UserTaskDataTableContainer.test.tsx", "diffHunk": "@@ -1,8 +1,14 @@\n import React from 'react';\n import UserTaskDataTableContainer from '../UserTaskDataTableContainer';\n-import { getWrapperAsync, GraphQL } from '@kogito-apps/common';\n+import {\n+  getWrapperAsync,\n+  GraphQL,\n+  DataTable,\n+  KogitoSpinner", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMjA5MQ=="}, "originalCommit": {"oid": "e790c0eb5cfd68f55444ee2d37bf2d7765425954"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTY3NTE3OnYy", "diffSide": "RIGHT", "path": "ui-packages/packages/common/src/graphql/types.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTowMjoxNVrOHRKfBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MjoxNVrOHRl1Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTYyMA==", "bodyText": "@yzhao583 this changes should be also present on queries.tsx, otherwise they will be lost next time we run yarn codegen. I sent you instructions on the chat!", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r487759620", "createdAt": "2020-09-14T09:02:15Z", "author": {"login": "pefernan"}, "path": "ui-packages/packages/common/src/graphql/types.tsx", "diffHunk": "@@ -1677,8 +1678,11 @@ export namespace GraphQL {\n     GetInputFieldsFromTypeQueryVariables\n   >;\n   export const GetUserTasksByStatesDocument = gql`\n-    query getUserTasksByStates($state: [String!]) {\n-      UserTaskInstances(where: { state: { in: $state } }) {\n+    query getUserTasksByStates(\n+      $state: [String!]\n+      $orderBy: UserTaskInstanceOrderBy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2402199442be54ecd6372022b3a1d5655930b044"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIwNzcxOQ==", "bodyText": "@pefernan Thanks, the PR has been updated, please kindly review again.", "url": "https://github.com/kiegroup/kogito-apps/pull/407#discussion_r488207719", "createdAt": "2020-09-14T20:42:15Z", "author": {"login": "yzhao583"}, "path": "ui-packages/packages/common/src/graphql/types.tsx", "diffHunk": "@@ -1677,8 +1678,11 @@ export namespace GraphQL {\n     GetInputFieldsFromTypeQueryVariables\n   >;\n   export const GetUserTasksByStatesDocument = gql`\n-    query getUserTasksByStates($state: [String!]) {\n-      UserTaskInstances(where: { state: { in: $state } }) {\n+    query getUserTasksByStates(\n+      $state: [String!]\n+      $orderBy: UserTaskInstanceOrderBy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTYyMA=="}, "originalCommit": {"oid": "2402199442be54ecd6372022b3a1d5655930b044"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 639, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}