{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Njg3ODM5", "number": 461, "title": "KOGITO-3372 - Validate explainability requests and add tests", "bodyText": "https://issues.redhat.com/browse/KOGITO-3372\nSome fields of the explainability rest requests are mandatory, this PR aims to generate a bad request in such cases instead of making the application to crash with status 500.\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-09-17T13:56:13Z", "url": "https://github.com/kiegroup/kogito-apps/pull/461", "merged": true, "mergeCommit": {"oid": "9803ca6cf6b2156205d97b7a465472d1b5e810b0"}, "closed": true, "closedAt": "2020-09-21T13:06:40Z", "author": {"login": "r00ta"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJxXvbAH2gAyNDg4Njg3ODM5OjEwMjcyMTVjMmVkNTM1NDJmNTRiM2EzYzg5Nzg4ZGU5OWY4MWRlY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdK_A_pgH2gAyNDg4Njg3ODM5OmI2MTBlN2NkMzZmMTU3MmQ4YmQwMzliNWZiZjcwYzA2YTQzYzJlOWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1027215c2ed53542f54b3a3c89788de99f81deca", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/1027215c2ed53542f54b3a3c89788de99f81deca", "committedDate": "2020-09-17T13:53:50Z", "message": "validate explainability requests add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c70ab5556bac2ad3dce3bbf51b89a278fc04c2e", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/6c70ab5556bac2ad3dce3bbf51b89a278fc04c2e", "committedDate": "2020-09-17T13:57:38Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjI4OTYx", "url": "https://github.com/kiegroup/kogito-apps/pull/461#pullrequestreview-490628961", "createdAt": "2020-09-17T14:02:38Z", "commit": {"oid": "6c70ab5556bac2ad3dce3bbf51b89a278fc04c2e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMjozOFrOHTjzeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowNToxMFrOHTj7xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MTYwOA==", "bodyText": "What about use StringUtils? If you don't want to add the dependency please at least move the method to a local StringUtils class", "url": "https://github.com/kiegroup/kogito-apps/pull/461#discussion_r490271608", "createdAt": "2020-09-17T14:02:38Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-service-rest/src/main/java/org/kie/kogito/explainability/rest/ExplainabilityApiV1.java", "diffHunk": "@@ -53,6 +55,10 @@ public ExplainabilityApiV1(\n         this.predictionProviderFactory = predictionProviderFactory;\n     }\n \n+    private boolean isNullOrEmpty(String s) {\n+        return s == null || s == \"\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c70ab5556bac2ad3dce3bbf51b89a278fc04c2e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MzczNA==", "bodyText": "What about move it to a util class?", "url": "https://github.com/kiegroup/kogito-apps/pull/461#discussion_r490273734", "createdAt": "2020-09-17T14:05:10Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-service-rest/src/main/java/org/kie/kogito/explainability/rest/ExplainabilityApiV1.java", "diffHunk": "@@ -64,12 +70,41 @@ public ExplainabilityApiV1(\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n     public Uni<Response> explain(ExplainabilityRequestDto requestDto) {\n+        RequestValidationResult validationResult = validateRequest(requestDto);\n+        if (!validationResult.isValid()) {\n+            return Uni.createFrom().completionStage(\n+                    CompletableFuture.completedFuture(Response.status(400).entity(validationResult.getMessage()).build())\n+            );\n+        }\n+\n         ExplainabilityRequest request = ExplainabilityRequest.from(requestDto);\n         PredictionProvider provider = predictionProviderFactory.createPredictionProvider(request);\n         CompletionStage<Response> result = explanationService.explainAsync(request, provider)\n                 .thenApply(x -> Response.ok(x).build());\n \n         return Uni.createFrom().completionStage(result);\n     }\n+\n+    private RequestValidationResult validateRequest(ExplainabilityRequestDto requestDto) {\n+        if (requestDto == null) {\n+            return new RequestValidationResult(false, \"The request can not be empty.\");\n+        }\n+\n+        if (requestDto.getExecutionId() == null) {\n+            return new RequestValidationResult(false, \"The executionId must be included in the request.\");\n+        }\n+\n+        ModelIdentifierDto modelIdentifierDto = requestDto.getModelIdentifier();\n+\n+        if (modelIdentifierDto == null || isNullOrEmpty(modelIdentifierDto.getResourceType()) || isNullOrEmpty(modelIdentifierDto.getResourceId())) {\n+            return new RequestValidationResult(false, \"The model identifier information is required in the request.\");\n+        }\n+\n+        if (isNullOrEmpty(requestDto.getServiceUrl())) {\n+            return new RequestValidationResult(false, \"The service url information of the application that evaluated the decision is not provided in the request.\");\n+        }\n+\n+        return new RequestValidationResult(true, null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c70ab5556bac2ad3dce3bbf51b89a278fc04c2e"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53bf44affe63e57666922dff9c46cff35ed86948", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/53bf44affe63e57666922dff9c46cff35ed86948", "committedDate": "2020-09-17T15:10:23Z", "message": "refactoring using validators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "affa4c6fe0ad091c4d70789db828ae8b94618720", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/affa4c6fe0ad091c4d70789db828ae8b94618720", "committedDate": "2020-09-17T15:11:26Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb6f1e6ad2dffd97a5c62ae30fcd525015db853", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9fb6f1e6ad2dffd97a5c62ae30fcd525015db853", "committedDate": "2020-09-17T15:14:47Z", "message": "remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTY3NjU1", "url": "https://github.com/kiegroup/kogito-apps/pull/461#pullrequestreview-491167655", "createdAt": "2020-09-18T05:49:44Z", "commit": {"oid": "9fb6f1e6ad2dffd97a5c62ae30fcd525015db853"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTo0OTo0NFrOHT-9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTo0OTo0NFrOHT-9Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNjUxNA==", "bodyText": "As far I know, the annotation @Valid works fine with reactive endpoints, so if we annotate the requestDto field with @Valid, it should raise 400 Invalid Request directly.", "url": "https://github.com/kiegroup/kogito-apps/pull/461#discussion_r490716514", "createdAt": "2020-09-18T05:49:44Z", "author": {"login": "Sgitario"}, "path": "explainability/explainability-service-rest/src/main/java/org/kie/kogito/explainability/rest/ExplainabilityApiV1.java", "diffHunk": "@@ -64,6 +72,16 @@ public ExplainabilityApiV1(\n     @Consumes(MediaType.APPLICATION_JSON)\n     @Produces(MediaType.APPLICATION_JSON)\n     public Uni<Response> explain(ExplainabilityRequestDto requestDto) {\n+        Set<ConstraintViolation<ExplainabilityRequestDto>> violations = validator.validate(requestDto);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb6f1e6ad2dffd97a5c62ae30fcd525015db853"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d3e4a9361d303615dc6899a03b15f2fb667988", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/84d3e4a9361d303615dc6899a03b15f2fb667988", "committedDate": "2020-09-18T13:22:40Z", "message": "refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4707faea06a2db8006201aa27d0d3f7484ed3f76", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/4707faea06a2db8006201aa27d0d3f7484ed3f76", "committedDate": "2020-09-18T14:42:46Z", "message": "remove unused imports, refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNjIxMDQ2", "url": "https://github.com/kiegroup/kogito-apps/pull/461#pullrequestreview-491621046", "createdAt": "2020-09-18T16:38:38Z", "commit": {"oid": "4707faea06a2db8006201aa27d0d3f7484ed3f76"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjozODozOFrOHUUV2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjozODozOFrOHUUV2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA2Njg0MQ==", "bodyText": "I think this service is a leftover", "url": "https://github.com/kiegroup/kogito-apps/pull/461#discussion_r491066841", "createdAt": "2020-09-18T16:38:38Z", "author": {"login": "Sgitario"}, "path": "explainability/explainability-service-rest/src/main/java/org/kie/kogito/explainability/rest/ExplainabilityApiV1.java", "diffHunk": "@@ -44,13 +46,16 @@\n \n     protected ExplanationService explanationService;\n     protected PredictionProviderFactory predictionProviderFactory;\n+    protected Validator validator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4707faea06a2db8006201aa27d0d3f7484ed3f76"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzYwNzQ3", "url": "https://github.com/kiegroup/kogito-apps/pull/461#pullrequestreview-491760747", "createdAt": "2020-09-18T20:26:48Z", "commit": {"oid": "4707faea06a2db8006201aa27d0d3f7484ed3f76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5161aa4928ed2929c2e3d3af82f4633741df735", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/e5161aa4928ed2929c2e3d3af82f4633741df735", "committedDate": "2020-09-21T06:51:37Z", "message": "remove unused dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b610e7cd36f1572d8bd039b5fbf70c06a43c2e9a", "author": {"user": {"login": "r00ta", "name": "Jacopo Rota"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/b610e7cd36f1572d8bd039b5fbf70c06a43c2e9a", "committedDate": "2020-09-21T08:21:35Z", "message": "Merge branch 'master' into KOGITO-3372-fix-explainability-bad-requests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4788, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}