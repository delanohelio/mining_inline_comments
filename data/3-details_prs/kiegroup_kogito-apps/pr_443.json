{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5OTk3ODcw", "number": 443, "title": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)", "bodyText": "Fix for health checks:\n\ndisabling kafka configurations when the profile is not enabled\ncreating the topic for jobs in case it does not exist (in the best case the operator should provide beforehand the topic creation IMO)\ninfinispan health check retuning ok in case it is not enabled\nbonus: fixed the exception being thrown on JobRepositoryDelegate\n\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-09-04T19:16:54Z", "url": "https://github.com/kiegroup/kogito-apps/pull/443", "merged": true, "mergeCommit": {"oid": "d4ff61b72f2871a69cb20e9d3f9bef66efe7465b"}, "closed": true, "closedAt": "2020-09-09T15:54:47Z", "author": {"login": "tiagodolphine"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFqd90ABqjM3MzEyNzIxNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHMCF1gH2gAyNDc5OTk3ODcwOjhlZmMzYzJlYTgzYWZmNWJlNTJiM2UxMjY3YjA0NGU1OTgxNDdjM2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec63857ec03d158dc105909ab68c4490f2a304ec", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ec63857ec03d158dc105909ab68c4490f2a304ec", "committedDate": "2020-09-04T19:12:22Z", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)"}, "afterCommit": {"oid": "06abee37ad65117df11e64e0aeb3cbbf08f4b726", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/06abee37ad65117df11e64e0aeb3cbbf08f4b726", "committedDate": "2020-09-04T19:35:12Z", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5222e30a194acab82d32b24b2872f49c75522867", "committedDate": "2020-09-05T11:34:33Z", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties\n\nFix JobRepositoryDelegate"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06abee37ad65117df11e64e0aeb3cbbf08f4b726", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/06abee37ad65117df11e64e0aeb3cbbf08f4b726", "committedDate": "2020-09-04T19:35:12Z", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties"}, "afterCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/5222e30a194acab82d32b24b2872f49c75522867", "committedDate": "2020-09-05T11:34:33Z", "message": "KOGITO-3175 Jobs service health check fix (kafka + infinispan)\n\nInserting topic config into test properties\n\nFix JobRepositoryDelegate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjY3Mzgw", "url": "https://github.com/kiegroup/kogito-apps/pull/443#pullrequestreview-483267380", "createdAt": "2020-09-07T06:19:20Z", "commit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoxOToyMVrOHNxfCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjozODo0NVrOHNx6ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNDI5OQ==", "bodyText": "I think this is a leftover.", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484204299", "createdAt": "2020-09-07T06:19:21Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/impl/InMemoryJobRepository.java", "diffHunk": "@@ -27,6 +27,7 @@\n import java.util.stream.Stream;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Default;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNDUzMA==", "bodyText": "The import \"Default\" has to be deleted as it's not used any longer.", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484204530", "createdAt": "2020-09-07T06:20:04Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/impl/JobRepositoryDelegate.java", "diffHunk": "@@ -36,7 +37,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@Default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUwNw==", "bodyText": "I think it's clearer using the .orElse() method:\n.orElse(() -> HealthCheckResponse.up(\"Default persistence\"));", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205507", "createdAt": "2020-09-07T06:22:40Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanConfiguration.java", "diffHunk": "@@ -46,12 +48,12 @@ private Caches() {\n \n     @Produces\n     @Readiness\n-    public InfinispanHealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n-                                                               Optional<String> persistence,\n-                                                       Instance<RemoteCacheManager> cacheManagerInstance) {\n+    public HealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n+                                                     Optional<String> persistence,\n+                                             Instance<RemoteCacheManager> cacheManagerInstance) {\n         return persistence\n                 .filter(\"infinispan\"::equals)\n-                .map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n-                .orElse(null);\n+                .<HealthCheck>map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n+                .orElseGet(() -> () -> HealthCheckResponse.up(\"Default persistence\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTYyMA==", "bodyText": "The format added some whitespaces here.", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205620", "createdAt": "2020-09-07T06:22:57Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanConfiguration.java", "diffHunk": "@@ -46,12 +48,12 @@ private Caches() {\n \n     @Produces\n     @Readiness\n-    public InfinispanHealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n-                                                               Optional<String> persistence,\n-                                                       Instance<RemoteCacheManager> cacheManagerInstance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTc0NA==", "bodyText": "Leftover", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484205744", "createdAt": "2020-09-07T06:23:16Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanJobRepository.java", "diffHunk": "@@ -22,6 +22,7 @@\n import java.util.stream.Collectors;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Default;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjg3MQ==", "bodyText": "I was told that if we enable the events, then the topics must be created in Data Index (see comment).\nSo, as I understood, we don't need to create any topic here, just to wait until data index component creates it.", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484206871", "createdAt": "2020-09-07T06:26:20Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/stream/KafkaConfiguration.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.kogito.jobs.service.stream;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.Instance;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.runtime.StartupEvent;\n+import io.vertx.kafka.admin.NewTopic;\n+import io.vertx.mutiny.core.Vertx;\n+import io.vertx.mutiny.kafka.admin.KafkaAdminClient;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.kie.kogito.jobs.service.stream.KafkaJobStreams.PUBLISH_EVENTS_CONFIG_KEY;\n+\n+@Startup\n+@ApplicationScoped\n+public class KafkaConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNzI2MA==", "bodyText": "Is this correct? I would say that the correct property is \"quarkus.kafka.bootstrap-servers\"", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484207260", "createdAt": "2020-09-07T06:27:22Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/resources/application.properties", "diffHunk": "@@ -67,18 +67,23 @@ kogito.jobs-service.loadJobIntervalInMinutes=10\n kogito.jobs-service.loadJobFromCurrentTimeIntervalInMinutes=60\n kogito.jobs-service.forceExecuteExpiredJobs=true\n \n+#Removing beans related to Kafka from CDI when eventing is not enabled\n+quarkus.arc.exclude-types=io.smallrye.reactive.messaging.health.*,org.kie.kogito.jobs.service.stream.KafkaConfiguration\n+\n #Configure Events Publishing on Job Service using profile\n #disabled by default\n kogito.jobs-service.events-support=false\n+kogito.jobs-events-topic=kogito-jobs-events\n \n #enabled with the profile: 'events-support' (-Dquarkus.profile=events-support)\n %events-support.quarkus.kafka.health.enabled=true\n-%events-support.quarkus.kafka.bootstrap-servers=localhost:9092\n+%events-support.kafka.bootstrap-servers=localhost:9092", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIxMTMyMw==", "bodyText": "Also, maybe it should say \"In Memory Persistence\"? What do you think?", "url": "https://github.com/kiegroup/kogito-apps/pull/443#discussion_r484211323", "createdAt": "2020-09-07T06:38:45Z", "author": {"login": "Sgitario"}, "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/repository/infinispan/InfinispanConfiguration.java", "diffHunk": "@@ -46,12 +48,12 @@ private Caches() {\n \n     @Produces\n     @Readiness\n-    public InfinispanHealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n-                                                               Optional<String> persistence,\n-                                                       Instance<RemoteCacheManager> cacheManagerInstance) {\n+    public HealthCheck infinispanHealthCheck(@ConfigProperty(name = PERSISTENCE_CONFIG_KEY)\n+                                                     Optional<String> persistence,\n+                                             Instance<RemoteCacheManager> cacheManagerInstance) {\n         return persistence\n                 .filter(\"infinispan\"::equals)\n-                .map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n-                .orElse(null);\n+                .<HealthCheck>map(p -> new InfinispanHealthCheck(cacheManagerInstance))\n+                .orElseGet(() -> () -> HealthCheckResponse.up(\"Default persistence\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNTUwNw=="}, "originalCommit": {"oid": "5222e30a194acab82d32b24b2872f49c75522867"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41e13119f42419f57431d73696740e73902776a6", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/41e13119f42419f57431d73696740e73902776a6", "committedDate": "2020-09-08T17:41:46Z", "message": "Applying PR comments + IT for KafkaConfiguration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Njc2NDAz", "url": "https://github.com/kiegroup/kogito-apps/pull/443#pullrequestreview-484676403", "createdAt": "2020-09-09T05:44:05Z", "commit": {"oid": "41e13119f42419f57431d73696740e73902776a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODIxNzg2", "url": "https://github.com/kiegroup/kogito-apps/pull/443#pullrequestreview-484821786", "createdAt": "2020-09-09T09:21:24Z", "commit": {"oid": "41e13119f42419f57431d73696740e73902776a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTc2NDk1", "url": "https://github.com/kiegroup/kogito-apps/pull/443#pullrequestreview-484976495", "createdAt": "2020-09-09T12:54:22Z", "commit": {"oid": "41e13119f42419f57431d73696740e73902776a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8efc3c2ea83aff5be52b3e1267b044e598147c3e", "author": {"user": {"login": "tiagodolphine", "name": "Tiago Dolphine"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/8efc3c2ea83aff5be52b3e1267b044e598147c3e", "committedDate": "2020-09-09T13:15:51Z", "message": "Removing used import from JobRepositoryDelegate"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4764, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}