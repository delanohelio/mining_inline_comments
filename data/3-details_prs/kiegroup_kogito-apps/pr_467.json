{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNDU4NjUy", "number": 467, "title": "FAI-243 - improved type dependent perturbations", "bodyText": "Added more appropriate perturbations depending on the specific feature Type.\nsee https://issues.redhat.com/browse/FAI-243\nMany thanks for submitting your Pull Request \u2764\ufe0f!\nPlease make sure that your PR meets the following requirements:\n\n You have read the contributors guide\n Pull Request title is properly formatted: KOGITO-XYZ Subject\n Pull Request title contains the target branch if not targeting master: [0.9.x] KOGITO-XYZ Subject\n Pull Request contains link to the JIRA issue\n Pull Request contains link to any dependent or related Pull Request\n Pull Request contains description of the issue\n Pull Request does not include fixes for issues other than the main ticket", "createdAt": "2020-09-24T13:44:35Z", "url": "https://github.com/kiegroup/kogito-apps/pull/467", "merged": true, "mergeCommit": {"oid": "6c364e9186142adfb7b377a9c771594e085e6f27"}, "closed": true, "closedAt": "2020-10-12T13:43:40Z", "author": {"login": "tteofili"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMBZKdgH2gAyNDkyNDU4NjUyOmQ5MmI0YzFhM2MwNDI5OWIxZGNlNGI0NzM3NWRiYTExMzkzMGM0MGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRz8bzgFqTUwNjYxNjUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d92b4c1a3c04299b1dce4b47375dba113930c40a", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d92b4c1a3c04299b1dce4b47375dba113930c40a", "committedDate": "2020-09-24T13:41:43Z", "message": "FAI-243 - improved type dependent perturbations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1d1bd66b1e1e1b370c9188a947859d861f76507", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/b1d1bd66b1e1e1b370c9188a947859d861f76507", "committedDate": "2020-09-24T14:46:00Z", "message": "FAI-243 - dropped unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec816a9cbe4347da51dacc844b16ecb0bd443afd", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/ec816a9cbe4347da51dacc844b16ecb0bd443afd", "committedDate": "2020-09-25T13:13:34Z", "message": "FAI-243 - more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDMyODI0", "url": "https://github.com/kiegroup/kogito-apps/pull/467#pullrequestreview-497432824", "createdAt": "2020-09-28T11:47:47Z", "commit": {"oid": "ec816a9cbe4347da51dacc844b16ecb0bd443afd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo1NTozNlrOHY6Scw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0Njo1OFrOHZpO6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4Mjg2Nw==", "bodyText": "Can you please explain when this else should happen? It seems to me just a way to ignore the actual value and replace it with a empty one", "url": "https://github.com/kiegroup/kogito-apps/pull/467#discussion_r495882867", "createdAt": "2020-09-28T11:55:36Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/model/Type.java", "diffHunk": "@@ -86,8 +88,21 @@\n \n         @Override\n         public Value<?> perturb(Value<?> value, PerturbationContext perturbationContext) {\n-            ByteBuffer byteBuffer = ByteBuffer.allocate(0);\n-            return new Value<>(byteBuffer);\n+            if (value.getUnderlyingObject() instanceof ByteBuffer) {\n+                ByteBuffer currentBuffer = (ByteBuffer) value.getUnderlyingObject();\n+                byte[] copy = new byte[currentBuffer.array().length];\n+                int maxPerturbationSize = Math.min(copy.length, Math.max((int) (copy.length * 0.5), perturbationContext.getNoOfPerturbations()));\n+                System.arraycopy(currentBuffer.array(), 0, copy, 0, currentBuffer.array().length);\n+                int[] indexes = perturbationContext.getRandom().ints(0, copy.length)\n+                        .limit(maxPerturbationSize).toArray();\n+                for (int i = 0; i < indexes.length; i++) {\n+                    copy[i] = 0;\n+                }\n+                return new Value<>(ByteBuffer.wrap(copy));\n+            } else {\n+                ByteBuffer byteBuffer = ByteBuffer.allocate(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec816a9cbe4347da51dacc844b16ecb0bd443afd"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjAxMA==", "bodyText": "Are you sure about this code? I think you should iterate over indexes with a for each instead of the current code.\nIn other words: let assume that copy contains 5 elements and maxPerturbationSize is 2, then indexes could be [2, 4] but the for loop will set to 0 the first and the second entries.\nAm I wrong?", "url": "https://github.com/kiegroup/kogito-apps/pull/467#discussion_r496652010", "createdAt": "2020-09-29T11:46:58Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/model/Type.java", "diffHunk": "@@ -86,8 +88,21 @@\n \n         @Override\n         public Value<?> perturb(Value<?> value, PerturbationContext perturbationContext) {\n-            ByteBuffer byteBuffer = ByteBuffer.allocate(0);\n-            return new Value<>(byteBuffer);\n+            if (value.getUnderlyingObject() instanceof ByteBuffer) {\n+                ByteBuffer currentBuffer = (ByteBuffer) value.getUnderlyingObject();\n+                byte[] copy = new byte[currentBuffer.array().length];\n+                int maxPerturbationSize = Math.min(copy.length, Math.max((int) (copy.length * 0.5), perturbationContext.getNoOfPerturbations()));\n+                System.arraycopy(currentBuffer.array(), 0, copy, 0, currentBuffer.array().length);\n+                int[] indexes = perturbationContext.getRandom().ints(0, copy.length)\n+                        .limit(maxPerturbationSize).toArray();\n+                for (int i = 0; i < indexes.length; i++) {\n+                    copy[i] = 0;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec816a9cbe4347da51dacc844b16ecb0bd443afd"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f5cce205afd2e04e48d705e0c2f863cb6d12440", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/9f5cce205afd2e04e48d705e0c2f863cb6d12440", "committedDate": "2020-10-01T07:40:32Z", "message": "FAI-243 - better type test coverage, fixed bug in Type#encode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c75f682ce6fdfbad6f8140f3bf9e8986410ea1f", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/4c75f682ce6fdfbad6f8140f3bf9e8986410ea1f", "committedDate": "2020-10-01T07:40:42Z", "message": "Merge branch 'master' of github.com:kiegroup/kogito-apps into FAI-243"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8a8f6d98d81e8fc84b0f77e3a38911071bc3f8", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/4e8a8f6d98d81e8fc84b0f77e3a38911071bc3f8", "committedDate": "2020-10-05T10:21:34Z", "message": "FAI-243 - provided Type dependent random value generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2db6174130a1bfa565ce0171b060d5ecce88f34", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/d2db6174130a1bfa565ce0171b060d5ecce88f34", "committedDate": "2020-10-05T10:38:18Z", "message": "FAI-243 - added typed random value generation test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTM0ODk2", "url": "https://github.com/kiegroup/kogito-apps/pull/467#pullrequestreview-501934896", "createdAt": "2020-10-05T10:50:04Z", "commit": {"oid": "d2db6174130a1bfa565ce0171b060d5ecce88f34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDo1MDowNVrOHcXm7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDo1MDowNVrOHcXm7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUwODk3NA==", "bodyText": "What about use PerturbationContext instead of Random? In this way we can better decouple and be more \"futureproof\": for example we will probably add data distribution (or sort of) in the future to PerturbationContext so that the generation will be guided.", "url": "https://github.com/kiegroup/kogito-apps/pull/467#discussion_r499508974", "createdAt": "2020-10-05T10:50:05Z", "author": {"login": "danielezonca"}, "path": "explainability/explainability-core/src/main/java/org/kie/kogito/explainability/model/Type.java", "diffHunk": "@@ -416,4 +556,16 @@ public String toString() {\n      * @return a list of vectors\n      */\n     public abstract List<double[]> encode(Value<?> target, Value<?>... values);\n+\n+    /**\n+     * Generate a random {@code Value} (depending on the underlying {@code Type}).\n+     *\n+     * @param random random instance\n+     * @return a random Value\n+     */\n+    public abstract Value<?> randomValue(Random random);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2db6174130a1bfa565ce0171b060d5ecce88f34"}, "originalPosition": 340}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b687bba0bdbf8a678f5f2bcd4f4d4ddbaf36730", "author": {"user": {"login": "tteofili", "name": "Tommaso Teofili"}}, "url": "https://github.com/kiegroup/kogito-apps/commit/0b687bba0bdbf8a678f5f2bcd4f4d4ddbaf36730", "committedDate": "2020-10-05T11:30:38Z", "message": "FAI-243 - use PC instead of Random in Type#randomValue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTg1NzQy", "url": "https://github.com/kiegroup/kogito-apps/pull/467#pullrequestreview-501985742", "createdAt": "2020-10-05T12:04:05Z", "commit": {"oid": "0b687bba0bdbf8a678f5f2bcd4f4d4ddbaf36730"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjE2NTA4", "url": "https://github.com/kiegroup/kogito-apps/pull/467#pullrequestreview-506616508", "createdAt": "2020-10-12T13:25:07Z", "commit": {"oid": "0b687bba0bdbf8a678f5f2bcd4f4d4ddbaf36730"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4799, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}