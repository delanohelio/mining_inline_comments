{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTY1NTM4", "number": 3151, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1Mjo1MVrOE1WtGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1ODowM1rOE1W06w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzgxOTc4OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationvalidators/ProposerSlashingStateTransitionValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1Mjo1MVrOHtlang==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxOToxNDoyMVrOHtmJ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MDk5MA==", "bodyText": "(nit) We can simplify:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            !Objects.equals(\n          \n          \n            \n                                proposerSlashing.getHeader_1().getMessage(),\n          \n          \n            \n                                proposerSlashing.getHeader_2().getMessage()),\n          \n          \n            \n                            !Objects.equals(\n          \n          \n            \n                                header1.getMessage(),\n          \n          \n            \n                                header2.getMessage()),", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517560990", "createdAt": "2020-11-04T18:52:51Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationvalidators/ProposerSlashingStateTransitionValidator.java", "diffHunk": "@@ -45,7 +45,9 @@\n                 ProposerSlashingInvalidReason.PROPOSER_INDICES_DIFFERENT),\n         () ->\n             check(\n-                !Objects.equals(proposerSlashing.getHeader_1(), proposerSlashing.getHeader_2()),\n+                !Objects.equals(\n+                    proposerSlashing.getHeader_1().getMessage(),\n+                    proposerSlashing.getHeader_2().getMessage()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f19619d5e802fa10d8797cfeab9c789191d82169"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3MzA5OA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517573098", "createdAt": "2020-11-04T19:14:21Z", "author": {"login": "cemozerr"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationvalidators/ProposerSlashingStateTransitionValidator.java", "diffHunk": "@@ -45,7 +45,9 @@\n                 ProposerSlashingInvalidReason.PROPOSER_INDICES_DIFFERENT),\n         () ->\n             check(\n-                !Objects.equals(proposerSlashing.getHeader_1(), proposerSlashing.getHeader_2()),\n+                !Objects.equals(\n+                    proposerSlashing.getHeader_1().getMessage(),\n+                    proposerSlashing.getHeader_2().getMessage()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MDk5MA=="}, "originalCommit": {"oid": "f19619d5e802fa10d8797cfeab9c789191d82169"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzgzOTc5OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/ProposerSlashingValidatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODo1ODowM1rOHtlm3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxOToxNzoyNlrOHtmQbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2NDEyNg==", "bodyText": "(nit) I'd declare the second header as a variable, and assert that the 2 headers are not equal, just so we're being really explicit and verifying our assumptions:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ProposerSlashing slashing =\n          \n          \n            \n                    new ProposerSlashing(\n          \n          \n            \n                        new SignedBeaconBlockHeader(\n          \n          \n            \n                            signedBeaconBlockHeader.getMessage(), BLSSignature.random(100)),\n          \n          \n            \n                        signedBeaconBlockHeader);\n          \n          \n            \n                final SignedBeaconBlockHeader header2 = new SignedBeaconBlockHeader(signedBeaconBlockHeader.getMessage(), BLSSignature.random(100);\n          \n          \n            \n                assertThat(header2).isNotEqualTo(signedBeaconBlockHeader);\n          \n          \n            \n                ProposerSlashing slashing =\n          \n          \n            \n                    new ProposerSlashing(\n          \n          \n            \n                        header2,\n          \n          \n            \n                        signedBeaconBlockHeader);", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517564126", "createdAt": "2020-11-04T18:58:03Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/ProposerSlashingValidatorTest.java", "diffHunk": "@@ -117,4 +119,26 @@ public void shouldIgnoreProposerSlashingForTheSameProposer() throws Exception {\n     assertThat(proposerSlashingValidator.validate(slashing1)).isEqualTo(ACCEPT);\n     assertThat(proposerSlashingValidator.validate(slashing2)).isEqualTo(IGNORE);\n   }\n+\n+  @Test\n+  public void shouldRejectProposerSlashingForTwoSignedHeadersWithSameMessageButDifferentSignature()\n+      throws Exception {\n+    beaconChainUtil.initializeStorage();\n+    beaconChainUtil.createAndImportBlockAtSlot(6);\n+    stateTransitionValidator = new ProposerSlashingStateTransitionValidator();\n+    SignedBeaconBlockHeader signedBeaconBlockHeader =\n+        dataStructureUtil.randomSignedBeaconBlockHeader();\n+    ProposerSlashing slashing =\n+        new ProposerSlashing(\n+            new SignedBeaconBlockHeader(\n+                signedBeaconBlockHeader.getMessage(), BLSSignature.random(100)),\n+            signedBeaconBlockHeader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f19619d5e802fa10d8797cfeab9c789191d82169"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3NDc2NQ==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/3151#discussion_r517574765", "createdAt": "2020-11-04T19:17:26Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/ProposerSlashingValidatorTest.java", "diffHunk": "@@ -117,4 +119,26 @@ public void shouldIgnoreProposerSlashingForTheSameProposer() throws Exception {\n     assertThat(proposerSlashingValidator.validate(slashing1)).isEqualTo(ACCEPT);\n     assertThat(proposerSlashingValidator.validate(slashing2)).isEqualTo(IGNORE);\n   }\n+\n+  @Test\n+  public void shouldRejectProposerSlashingForTwoSignedHeadersWithSameMessageButDifferentSignature()\n+      throws Exception {\n+    beaconChainUtil.initializeStorage();\n+    beaconChainUtil.createAndImportBlockAtSlot(6);\n+    stateTransitionValidator = new ProposerSlashingStateTransitionValidator();\n+    SignedBeaconBlockHeader signedBeaconBlockHeader =\n+        dataStructureUtil.randomSignedBeaconBlockHeader();\n+    ProposerSlashing slashing =\n+        new ProposerSlashing(\n+            new SignedBeaconBlockHeader(\n+                signedBeaconBlockHeader.getMessage(), BLSSignature.random(100)),\n+            signedBeaconBlockHeader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2NDEyNg=="}, "originalCommit": {"oid": "f19619d5e802fa10d8797cfeab9c789191d82169"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}