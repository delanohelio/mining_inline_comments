{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDcxODMz", "number": 2045, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxNzoyMFrOECEi2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowODoxOVrOECZfdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjA3MDY2OnYy", "diffSide": "RIGHT", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxNzoyMFrOGeTS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTowMDoxMVrOGeWyAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNjU4OA==", "bodyText": "not a huge fan of this any ideas @ajsutton", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434426588", "createdAt": "2020-06-03T09:17:20Z", "author": {"login": "rolfyone"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -50,16 +50,13 @@ public Eth1DepositManager(\n     this.minimumGenesisTimeBlockFinder = minimumGenesisTimeBlockFinder;\n   }\n \n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MzcxNA==", "bodyText": "Will look through the PR properly in the morning, but yeah that's definitely wrong.  Need to find which future is being ignored and shove a .finish call on it at least to report any exceptions.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434483714", "createdAt": "2020-06-03T11:00:11Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -50,16 +50,13 @@ public Eth1DepositManager(\n     this.minimumGenesisTimeBlockFinder = minimumGenesisTimeBlockFinder;\n   }\n \n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNjU4OA=="}, "originalCommit": {"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTE4OTIyOnYy", "diffSide": "RIGHT", "path": "config/config.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDo0Nzo0NVrOGeyJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzoxNDozMlrOGe0XcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMjA2Mw==", "bodyText": "Can we make this a --X option? It should get removed again once we're happy it all works so not something that is part of the \"official\" CLI.  I'd probably omit it from config.yaml as well - the default value is just provided by the code anyway (I think config.yaml is just used by run.sh now actually).", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434932063", "createdAt": "2020-06-04T00:47:45Z", "author": {"login": "ajsutton"}, "path": "config/config.yaml", "diffHunk": "@@ -29,6 +29,7 @@ Xinterop-enabled: True\n # deposit\n eth1-deposit-contract-address: \"0x77f7bED277449F51505a4C54550B074030d989bC\"\n eth1-endpoint: \"http://localhost:8545\"\n+eth1-deposits-from-storage-enabled: False", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2ODQzMw==", "bodyText": "yep.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434968433", "createdAt": "2020-06-04T03:14:32Z", "author": {"login": "rolfyone"}, "path": "config/config.yaml", "diffHunk": "@@ -29,6 +29,7 @@ Xinterop-enabled: True\n # deposit\n eth1-deposit-contract-address: \"0x77f7bED277449F51505a4C54550B074030d989bC\"\n eth1-endpoint: \"http://localhost:8545\"\n+eth1-deposits-from-storage-enabled: False", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMjA2Mw=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTIxNjI2OnYy", "diffSide": "RIGHT", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTowNTo0OFrOGeyaDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowNjo1OVrOGe1HIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg==", "bodyText": "If the head block isn't after the start block number, we appear to not do anything and so never start tracking head. So even when the chain progresses past our start block we won't process any new blocks.\nI suspect we need a depositProcessingController.startSubscription(startBlockNumber) in the else case for this outer if.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936332", "createdAt": "2020-06-04T01:05:48Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();\n+    if (headBlock.getNumber().compareTo(startBlockNumber) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2OTMxMg==", "bodyText": "good catch.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434969312", "createdAt": "2020-06-04T03:18:19Z", "author": {"login": "rolfyone"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();\n+    if (headBlock.getNumber().compareTo(startBlockNumber) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDY0MQ==", "bodyText": "So turns out I lied about the right solution.  If min genesis has already happened we need to run depositProcessingController.startSubscription(startBlockNumber) but if it hasn't we need to run preGenesisSubscription(startBlockNumber).", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434980641", "createdAt": "2020-06-04T04:06:59Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();\n+    if (headBlock.getNumber().compareTo(startBlockNumber) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTIxOTE5OnYy", "diffSide": "RIGHT", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTowNzo1NFrOGeyb8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTowNzo1NFrOGeyb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjgxOA==", "bodyText": "We've got this logic in at least three places - probably worth either extracting a method for it or calculating up-front and passing the value down.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936818", "createdAt": "2020-06-04T01:07:54Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTIyNzEyOnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToxMzoyMlrOGeyg6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMzozMTo1MFrOGe0nhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ==", "bodyText": "Switch java.util.function.Supplier instead of the google version.  It's only the package that needs to change.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.google.common.base.Supplier;\n          \n          \n            \n            import java.util.function.Supplier;", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434938091", "createdAt": "2020-06-04T01:13:22Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.common.base.Supplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2OTgxOA==", "bodyText": "what about the Suppliers? use that from google still?", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434969818", "createdAt": "2020-06-04T03:20:29Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.common.base.Supplier;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk3MjU0OQ==", "bodyText": "Yep that still comes from the google package.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434972549", "createdAt": "2020-06-04T03:31:50Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.common.base.Supplier;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTI0MjU4OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyMzowOVrOGeyqRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyMzowOVrOGeyqRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDQ4Ng==", "bodyText": "nit: Couldn't we just have depositsComplete() return the ReplayDepositsResult?", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940486", "createdAt": "2020-06-04T01:23:09Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTI0NDg0OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNDo0NFrOGeyrtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNDo0NFrOGeyrtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (result.getBlockNumber().isPresent()) {\n          \n          \n            \n                  startingBlock =\n          \n          \n            \n                      Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n          \n          \n            \n                } else {\n          \n          \n            \n                  startingBlock = Optional.of(BigInteger.valueOf(-1L));\n          \n          \n            \n                }\n          \n          \n            \n                startingBlock =\n          \n          \n            \n                    result\n          \n          \n            \n                        .getBlockNumber()\n          \n          \n            \n                        .map(number -> number.plus(UnsignedLong.ONE).bigIntegerValue())\n          \n          \n            \n                        .or(() -> Optional.of(BigInteger.valueOf(-1)));", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940852", "createdAt": "2020-06-04T01:24:44Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTI0ODQ2OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNjozMFrOGeytxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNzo0MFrOGeyu6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ==", "bodyText": "This probably works out but the thread safety is questionable and it's causing IntelliJ to flag warnings.  Better would be to only load the current value of startingBlock once.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;\n          \n          \n            \n                return startingBlock.map(block -> block.compareTo(blockNumber) < 0).orElse(false)", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941381", "createdAt": "2020-06-04T01:26:30Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }\n+    return result;\n+  }\n+\n+  private boolean shouldProcessEvent(final BigInteger blockNumber) {\n+    return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTY3Mg==", "bodyText": "I'd be tempted to make this take an UnsignedLong as parameter and do the .bigIntegerValue() once in here instead of in the two places it's called.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941672", "createdAt": "2020-06-04T01:27:40Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }\n+    return result;\n+  }\n+\n+  private boolean shouldProcessEvent(final BigInteger blockNumber) {\n+    return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTUwMjYzOnYy", "diffSide": "RIGHT", "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowODoxOVrOGe1IXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowODoxOVrOGe1IXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDk1Ng==", "bodyText": "nit: can use replayDepositsResult.getBockNumberOrZero() here too.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434980956", "createdAt": "2020-06-04T04:08:19Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -94,9 +124,11 @@ public void stop() {\n   }\n \n   private SafeFuture<EthBlock.Block> sendDepositsUpToMinGenesis(\n-      final EthBlock.Block minGenesisTimeBlock) {\n+      final EthBlock.Block minGenesisTimeBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389616db8b7289cf2d56ec43379977d351eb5d1"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3698, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}