{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzkxNDIy", "number": 1327, "title": "StatusLogger controls output colour", "bodyText": "PR Description\nChoice of the output colour is now the sole preview of the StatusLogger.\nThis is achieved by:\n\nhaving contextual status/update methods instead of the generic log operations\nreplacing some usages of StatusLogger with the Log4j2 Logger\nremoving the printEnabled input parameter from some objects, defaulting them to being logged\n\nThe StatusLogger is split into two classes, each with their own responsibilities:\n\nEventLogger logs frequently occurring events, conceptually similar to metrics\nStatusLogger logs user information / action events.\n\nFixed Issue(s)", "createdAt": "2020-03-09T05:21:21Z", "url": "https://github.com/ConsenSys/teku/pull/1327", "merged": true, "mergeCommit": {"oid": "a51a5e71316791aafbe5f2ddf3caf8701658057c"}, "closed": true, "closedAt": "2020-03-11T02:56:29Z", "author": {"login": "CjHare"}, "timelineItems": {"totalCount": 49, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcL2wzrAH2gAyMzg1MzkxNDIyOjI5OWZjMmVkMTgyNjQxNjZkNWRlZTUwYzFjOTliN2NhNTFjZDVmYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMdrHjgH2gAyMzg1MzkxNDIyOmY3NmM2NDdlZDM2MTdmZDEyMGNkNmNlYmNjMjEyOGU5NTExMWIxNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "299fc2ed18264166d5dee50c1c99b7ca51cd5fb6", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/299fc2ed18264166d5dee50c1c99b7ca51cd5fb6", "committedDate": "2020-03-09T05:07:26Z", "message": "Partial cherry picking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95471decf32321a88c436e2bf915fc9fb89f1a52", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/95471decf32321a88c436e2bf915fc9fb89f1a52", "committedDate": "2020-03-09T05:09:29Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd067b9c58824a3b5d504346e6e7368005c67f3", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/5cd067b9c58824a3b5d504346e6e7368005c67f3", "committedDate": "2020-03-09T05:14:37Z", "message": "Next cherry picked"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfbeacd0fba331dac98c083d932c126a5f7e3e97", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/dfbeacd0fba331dac98c083d932c126a5f7e3e97", "committedDate": "2020-03-09T05:17:39Z", "message": "final changeset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9869f9cd5ab985003c336c840e0db3b27435e430", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/9869f9cd5ab985003c336c840e0db3b27435e430", "committedDate": "2020-03-09T05:35:32Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4a136425b5f85fb21133a839b312b5f7eef5210", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/a4a136425b5f85fb21133a839b312b5f7eef5210", "committedDate": "2020-03-09T05:36:03Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ebe4425b436cfc2f44042724fb4f9927de1389", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/d6ebe4425b436cfc2f44042724fb4f9927de1389", "committedDate": "2020-03-09T05:37:14Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee0361e072c7667eb842b4207a0434401543469", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/bee0361e072c7667eb842b4207a0434401543469", "committedDate": "2020-03-09T05:39:03Z", "message": "SpotlessApply"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c20a18352ce01988e7d59b0cb066a463ac175388", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/c20a18352ce01988e7d59b0cb066a463ac175388", "committedDate": "2020-03-09T05:40:29Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e730b4001a6efc0d7ebe2f9a6262e4a3e707ecb", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/9e730b4001a6efc0d7ebe2f9a6262e4a3e707ecb", "committedDate": "2020-03-09T05:41:28Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79f75f5ba7651e4ca1ec6cd35dceb7c8ef65f060", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/79f75f5ba7651e4ca1ec6cd35dceb7c8ef65f060", "committedDate": "2020-03-09T05:42:28Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39255a000323a001647432d8996539172e93e88", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/f39255a000323a001647432d8996539172e93e88", "committedDate": "2020-03-09T05:43:25Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b91dd0e8f594a03bd3fa4e7555e637ee19e6f3", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/c5b91dd0e8f594a03bd3fa4e7555e637ee19e6f3", "committedDate": "2020-03-09T05:44:23Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ecb92279a676452f4cfd3b69e0d7a73d14abfe5", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/8ecb92279a676452f4cfd3b69e0d7a73d14abfe5", "committedDate": "2020-03-09T05:45:21Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3dd8773dc96f96bc4d87cab19323a2853bbd1cb", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/e3dd8773dc96f96bc4d87cab19323a2853bbd1cb", "committedDate": "2020-03-09T05:46:16Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd7e402b3c6cfbe600623e2328ab8f52c047ab9", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/7dd7e402b3c6cfbe600623e2328ab8f52c047ab9", "committedDate": "2020-03-09T05:47:15Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea0b78df228d47b046c501a97c8623e0895f0a1c", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/ea0b78df228d47b046c501a97c8623e0895f0a1c", "committedDate": "2020-03-09T05:51:14Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0f142217e0863cab2d269951c9e7e770d71fe2c", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/e0f142217e0863cab2d269951c9e7e770d71fe2c", "committedDate": "2020-03-09T05:52:21Z", "message": "Fixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a0b6cd1e46a0f951445cbe03c8aa8678ab2d594", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/3a0b6cd1e46a0f951445cbe03c8aa8678ab2d594", "committedDate": "2020-03-09T06:00:30Z", "message": "Mockito to test path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwOTMxMDY0", "url": "https://github.com/ConsenSys/teku/pull/1327#pullrequestreview-370931064", "createdAt": "2020-03-09T06:01:22Z", "commit": {"oid": "3a0b6cd1e46a0f951445cbe03c8aa8678ab2d594"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMToyMlrOFzbq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMToyMlrOFzbq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3NTA0NQ==", "bodyText": "We've generally just used the static mockito methods so not needed the mockito-junit-jupiter dependency.  Would be good to remain consistent.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389475045", "createdAt": "2020-03-09T06:01:22Z", "author": {"login": "ajsutton"}, "path": "artemis/build.gradle", "diffHunk": "@@ -38,6 +38,8 @@ dependencies {\n \n   testImplementation 'com.squareup.okhttp3:okhttp'\n   testImplementation 'org.awaitility:awaitility'\n+  testImplementation 'org.mockito:mockito-core'\n+  testImplementation 'org.mockito:mockito-junit-jupiter'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a0b6cd1e46a0f951445cbe03c8aa8678ab2d594"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784001f7607b08db7dc18673172833ac2f75e643", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/784001f7607b08db7dc18673172833ac2f75e643", "committedDate": "2020-03-09T06:08:03Z", "message": "Static mockito"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93c4646fd0084dd6b7ed9aa2a3289b09928cefbe", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/93c4646fd0084dd6b7ed9aa2a3289b09928cefbe", "committedDate": "2020-03-09T06:19:01Z", "message": "Adding deposit exceptions back to status logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/7e87f65e1670e30ce26646b30a68eb46902b151b", "committedDate": "2020-03-09T06:19:11Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into context-logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1bedf22aa5275882167b473575e4d9602bc24f", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/1e1bedf22aa5275882167b473575e4d9602bc24f", "committedDate": "2020-03-09T06:27:23Z", "message": "Storing geneisis to Stdout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwOTM2ODA4", "url": "https://github.com/ConsenSys/teku/pull/1327#pullrequestreview-370936808", "createdAt": "2020-03-09T06:23:45Z", "commit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjoyMzo0NVrOFzb-Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjo1Mjo1MlrOFzcYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3OTk1MA==", "bodyText": "Since we're touching this anyway we should fix them to include the full stack trace.  So probably:\n} catch (fail CompletionException | IllegalArgumentException e) {\n    LOG.fatal(\"Startup failed\", e);\n}", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389479950", "createdAt": "2020-03-09T06:23:45Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/BeaconNode.java", "diffHunk": "@@ -101,9 +100,9 @@ public void start() {\n       serviceController.startAll();\n \n     } catch (final CompletionException e) {\n-      STATUS_LOG.log(Level.FATAL, e.toString());\n+      LOG.fatal(e.toString());\n     } catch (final IllegalArgumentException e) {\n-      STATUS_LOG.log(Level.FATAL, e.getMessage());\n+      LOG.fatal(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4MDUwMA==", "bodyText": "These are the kinds of messages we almost certainly want going to STDOUT when in \"interactive\" mode rather than being hidden in a log file.  The spec failure suggests a block or attestation failed to process and the unexpected error definitely needs to be brought to the users attention.\nIs there a plan for how to display this kind of output which isn't the routine status updates, but should still go to the \"UI\"?", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389480500", "createdAt": "2020-03-09T06:26:18Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/BeaconNode.java", "diffHunk": "@@ -118,10 +117,10 @@ public void stop() {\n final class EventBusExceptionHandler\n     implements SubscriberExceptionHandler, ChannelExceptionHandler {\n \n-  private final StatusLogger logger;\n+  private final Logger log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4MDkzOA==", "bodyText": "We use the static methods, not the annotations.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Mock private Logger log;\n          \n          \n            \n              private Logger log = Mockito.mock(Logger.class);\n          \n      \n    \n    \n  \n\ntypically with mock as a static import.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389480938", "createdAt": "2020-03-09T06:28:19Z", "author": {"login": "ajsutton"}, "path": "artemis/src/test/java/tech/pegasys/artemis/EventBusExceptionHandlerTest.java", "diffHunk": "@@ -41,6 +46,8 @@\n   private final SafeFuture<Throwable> handledException = new SafeFuture<>();\n   private final SafeFuture<Throwable> unhandledExceptionFuture = new SafeFuture<>();\n \n+  @Mock private Logger log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4MzUxNA==", "bodyText": "This is likely to trigger too often - there are multiple places in the codebase that will call process_slots but they aren't necessarily moving the canonical view of the chain forward.  Previously printEnabled appears to have always been false so this never printed. I suspect printEnabled should have been true some times but got broken somewhere along the way.  We probably want to print epoch events from BeaconChainController.processSlot where the slot events are currently printing as that is the canonical view moving forward.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389483514", "createdAt": "2020-03-09T06:39:45Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/StateTransition.java", "diffHunk": "@@ -226,15 +224,14 @@ public void process_slots(MutableBeaconState state, UnsignedLong slot, boolean p\n             .plus(UnsignedLong.ONE)\n             .mod(UnsignedLong.valueOf(SLOTS_PER_EPOCH))\n             .equals(UnsignedLong.ZERO)) {\n-          STATUS_LOG.log(\n-              Level.INFO, \"******* Epoch Event *******\", printEnabled, StatusLogger.Color.BLUE);\n+          STATUS_LOG.epochEvent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4MzY5Mg==", "bodyText": "We should include full stack traces whenever we move to a normal log4j logger.  Just make sure to include a string as the first arg and not just use LOG.warn(e) which will only print the message.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389483692", "createdAt": "2020-03-09T06:40:33Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/StateTransition.java", "diffHunk": "@@ -226,15 +224,14 @@ public void process_slots(MutableBeaconState state, UnsignedLong slot, boolean p\n             .plus(UnsignedLong.ONE)\n             .mod(UnsignedLong.valueOf(SLOTS_PER_EPOCH))\n             .equals(UnsignedLong.ZERO)) {\n-          STATUS_LOG.log(\n-              Level.INFO, \"******* Epoch Event *******\", printEnabled, StatusLogger.Color.BLUE);\n+          STATUS_LOG.epochEvent();\n           process_epoch(state);\n           reportExceptions(CompletableFuture.runAsync(() -> recordMetrics(state)));\n         }\n         state.setSlot(state.getSlot().plus(UnsignedLong.ONE));\n       }\n     } catch (IllegalArgumentException e) {\n-      STATUS_LOG.log(Level.WARN, e.getMessage());\n+      LOG.warn(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NDA3Nw==", "bodyText": "These are both really important messages that should go to STDOUT. I'd probably keep the colours too.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389484077", "createdAt": "2020-03-09T06:42:18Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/StartupUtil.java", "diffHunk": "@@ -91,21 +92,19 @@ public static void setupInitialState(\n     BeaconState initialState;\n     if (startState != null) {\n       try {\n-        STATUS_LOG.log(\n-            Level.INFO, \"Loading initial state from \" + startState, StatusLogger.Color.GREEN);\n+        LOG.log(Level.INFO, \"Loading initial state from \" + startState);\n         initialState = StartupUtil.loadBeaconStateFromFile(startState);\n       } catch (final IOException e) {\n         throw new IllegalStateException(\"Failed to load initial state\", e);\n       }\n     } else {\n-      STATUS_LOG.log(\n+      LOG.log(\n           Level.INFO,\n           \"Starting with mocked start interoperability mode with genesis time \"\n               + genesisTime\n               + \" and \"\n               + validatorKeyPairs.size()\n-              + \" validators\",\n-          Color.GREEN);\n+              + \" validators\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NDc1Nw==", "bodyText": "I'm not a huge fan of making this singleton mutable.  Why is this needed?\nIf it is needed, it would need to be thread safe which it isn't currently.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389484757", "createdAt": "2020-03-09T06:45:23Z", "author": {"login": "ajsutton"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java", "diffHunk": "@@ -13,84 +13,85 @@\n \n package tech.pegasys.teku.logging;\n \n-import org.apache.logging.log4j.Level;\n+import static tech.pegasys.teku.logging.ColorConsolePrinter.print;\n+\n+import com.google.common.primitives.UnsignedLong;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.logging.ColorConsolePrinter.Color;\n \n public class StatusLogger {\n \n   public static final StatusLogger STATUS_LOG = new StatusLogger(\"stdout\");\n \n-  public enum Color {\n-    RED,\n-    BLUE,\n-    PURPLE,\n-    WHITE,\n-    GREEN\n-  }\n+  private final Logger logger;\n+  private boolean enabled;\n \n-  private static final String resetCode = \"\\u001B[0m\";\n+  private StatusLogger(final String name) {\n+    this.logger = LogManager.getLogger(name);\n+  }\n \n-  private final Logger logger;\n+  public void setEnabled(final boolean enabled) {\n+    this.enabled = enabled;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NTE5OA==", "bodyText": "nit: Worth being consistent in whether or not the constant strings have a concatenation break in them so the spacing lines up.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                info(\"Node slot:                             \" + nodeSlot);\n          \n          \n            \n                info(\"Head block slot:\" + \"                       \" + bestSlot);\n          \n          \n            \n                info(\"Justified epoch:\" + \"                       \" + justifiedEpoch);\n          \n          \n            \n                info(\"Finalized epoch:\" + \"                       \" + finalizedEpoch);\n          \n          \n            \n                info(\"Node slot:                             \" + nodeSlot);\n          \n          \n            \n                info(\"Head block slot:                       \" + bestSlot);\n          \n          \n            \n                info(\"Justified epoch:                       \" + justifiedEpoch);\n          \n          \n            \n                info(\"Finalized epoch:                       \" + finalizedEpoch);", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389485198", "createdAt": "2020-03-09T06:46:59Z", "author": {"login": "ajsutton"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java", "diffHunk": "@@ -13,84 +13,85 @@\n \n package tech.pegasys.teku.logging;\n \n-import org.apache.logging.log4j.Level;\n+import static tech.pegasys.teku.logging.ColorConsolePrinter.print;\n+\n+import com.google.common.primitives.UnsignedLong;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.logging.ColorConsolePrinter.Color;\n \n public class StatusLogger {\n \n   public static final StatusLogger STATUS_LOG = new StatusLogger(\"stdout\");\n \n-  public enum Color {\n-    RED,\n-    BLUE,\n-    PURPLE,\n-    WHITE,\n-    GREEN\n-  }\n+  private final Logger logger;\n+  private boolean enabled;\n \n-  private static final String resetCode = \"\\u001B[0m\";\n+  private StatusLogger(final String name) {\n+    this.logger = LogManager.getLogger(name);\n+  }\n \n-  private final Logger logger;\n+  public void setEnabled(final boolean enabled) {\n+    this.enabled = enabled;\n+  }\n \n-  protected StatusLogger(String className) {\n-    this.logger = LogManager.getLogger(className);\n+  public void genesisEvent(final Bytes32 hashTreeRoot, final Bytes32 genesisBlockRoot) {\n+    info(\"******* Eth2Genesis Event*******\", Color.WHITE);\n+    info(\"Initial state root is \" + hashTreeRoot.toHexString());\n+    info(\"Genesis block root is \" + genesisBlockRoot.toHexString());\n   }\n \n-  public void log(Level level, String message) {\n-    this.logger.log(level, message);\n+  public void epochEvent() {\n+    info(\"******* Epoch Event *******\", Color.PURPLE);\n   }\n \n-  public void log(Level level, String message, boolean printEnabled) {\n-    if (printEnabled) {\n-      this.logger.log(level, message);\n-    }\n+  public void slotEvent(\n+      final UnsignedLong nodeSlot,\n+      final UnsignedLong bestSlot,\n+      final UnsignedLong justifiedEpoch,\n+      final UnsignedLong finalizedEpoch) {\n+    info(\"******* Slot Event *******\", Color.WHITE);\n+    info(\"Node slot:                             \" + nodeSlot);\n+    info(\"Head block slot:\" + \"                       \" + bestSlot);\n+    info(\"Justified epoch:\" + \"                       \" + justifiedEpoch);\n+    info(\"Finalized epoch:\" + \"                       \" + finalizedEpoch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NTU5NA==", "bodyText": "This is a really, really useful thing to have printed to stdout.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389485594", "createdAt": "2020-03-09T06:48:39Z", "author": {"login": "ajsutton"}, "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/libp2p/LibP2PNetwork.java", "diffHunk": "@@ -149,11 +151,11 @@ public LibP2PNetwork(\n     if (!state.compareAndSet(State.IDLE, State.RUNNING)) {\n       return SafeFuture.failedFuture(new IllegalStateException(\"Network already started\"));\n     }\n-    STATUS_LOG.log(Level.INFO, \"Starting libp2p network...\");\n+    LOG.info(\"Starting libp2p network...\");\n     return SafeFuture.of(host.start())\n         .thenApply(\n             i -> {\n-              STATUS_LOG.log(Level.INFO, \"Listening for connections on: \" + getNodeAddress());\n+              LOG.info(\"Listening for connections on: {}\", getNodeAddress());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NjQxMw==", "bodyText": "Fatal error probably should go to stdout.  The user would want to know that we won't be running their validator so they will be losing money.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389486413", "createdAt": "2020-03-09T06:51:54Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/KeystoresValidatorKeyProvider.java", "diffHunk": "@@ -82,7 +84,7 @@ private String loadPassword(final Path passwordFile) {\n           format(\n               \"Unexpected IO error while reading keystore password file [%s]: %s\",\n               passwordFile, e.getMessage());\n-      STATUS_LOG.log(Level.FATAL, errorMessage);\n+      LOG.fatal(errorMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NjU0Nw==", "bodyText": "Probably should be noted on stdout.  The user will lose money as a result of failing to perform their validator duties.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389486547", "createdAt": "2020-03-09T06:52:29Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/ValidatorCoordinator.java", "diffHunk": "@@ -212,7 +214,7 @@ public void onAttestationEvent(BroadcastAttestationEvent event) throws IllegalAr\n       // Save headState to check for slashings\n       //      this.headState = headState;\n     } catch (IllegalArgumentException e) {\n-      STATUS_LOG.log(Level.WARN, \"Can not produce attestations or create a block\" + e.toString());\n+      LOG.warn(\"Can not produce attestations or create a block\" + e.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NjY0OQ==", "bodyText": "Should go to std out, this will cause the user to lose money.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r389486649", "createdAt": "2020-03-09T06:52:52Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/ValidatorCoordinator.java", "diffHunk": "@@ -283,9 +285,9 @@ private void createBlockIfNecessary(\n               deposits);\n \n       this.eventBus.post(new ProposedBlockEvent(newBlock));\n-      STATUS_LOG.log(Level.DEBUG, \"Local validator produced a new block\");\n+      LOG.debug(\"Local validator produced a new block\");\n     } catch (SlotProcessingException | EpochProcessingException | StateTransitionException e) {\n-      STATUS_LOG.log(Level.ERROR, \"Error during block creation \" + e.toString());\n+      LOG.error(\"Error during block creation \" + e.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70bd9ee8c9d9d0bd11a16b7f6fea92eea72cf342", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/70bd9ee8c9d9d0bd11a16b7f6fea92eea72cf342", "committedDate": "2020-03-09T07:21:58Z", "message": "Full exception message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8fe6cf955e39d791fc26b51874f008253d8f859", "author": {"user": {"login": "CjHare", "name": "CJ Hare"}}, "url": "https://github.com/ConsenSys/teku/commit/e8fe6cf955e39d791fc26b51874f008253d8f859", "committedDate": "2020-03-09T07:24:49Z", "message": "Update artemis/src/test/java/tech/pegasys/artemis/EventBusExceptionHandlerTest.java\n\nCo-Authored-By: Adrian Sutton <adrian@symphonious.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ae63037225ff9e8d132dfcd16ff6c028ba45ef2", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/0ae63037225ff9e8d132dfcd16ff6c028ba45ef2", "committedDate": "2020-03-09T07:25:59Z", "message": "Mocking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8da6cd751974078fe244f3b5eb3bee198fccf839", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/8da6cd751974078fe244f3b5eb3bee198fccf839", "committedDate": "2020-03-09T23:11:21Z", "message": "Becon node exception logged to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2755070a7ed60908dfa2ed6f08e9e561fd1f04f2", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/2755070a7ed60908dfa2ed6f08e9e561fd1f04f2", "committedDate": "2020-03-09T23:32:22Z", "message": "Moving Epoch printing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d26cbc6920fb6d0d6747c36f757809f0928d603e", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/d26cbc6920fb6d0d6747c36f757809f0928d603e", "committedDate": "2020-03-09T23:34:40Z", "message": "Logging stacktrace on warn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be1a8a0e80cd0437600e1e8b7212535e37f6f91", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/0be1a8a0e80cd0437600e1e8b7212535e37f6f91", "committedDate": "2020-03-10T00:53:38Z", "message": "Removing currently unused enabled flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6934bb9e3e737324d37dd315c5b189fb61506c36", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/6934bb9e3e737324d37dd315c5b189fb61506c36", "committedDate": "2020-03-10T02:21:23Z", "message": "LibP2P listening address to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f85f3b47d10143021544e16a3727f7f2632c610", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/9f85f3b47d10143021544e16a3727f7f2632c610", "committedDate": "2020-03-10T02:33:26Z", "message": "Block creation failure to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74c04f857d1c62e46c93a1e3cc31c3c11411209", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/e74c04f857d1c62e46c93a1e3cc31c3c11411209", "committedDate": "2020-03-10T02:43:26Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into context-logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e1758295a87b598912295ef85669681e48c236", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/f0e1758295a87b598912295ef85669681e48c236", "committedDate": "2020-03-10T02:54:56Z", "message": "Fixing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7ee7207c815118a512968b3c34de1bcf5baaa6c", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/e7ee7207c815118a512968b3c34de1bcf5baaa6c", "committedDate": "2020-03-10T03:03:04Z", "message": "Attestation faliure to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8087539ba786dd2ad945470b285580abac6c2cc", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/c8087539ba786dd2ad945470b285580abac6c2cc", "committedDate": "2020-03-10T03:44:40Z", "message": "Startup failures to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "692a630395a319adb630c79dfc2cfe626a9e4ad5", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/692a630395a319adb630c79dfc2cfe626a9e4ad5", "committedDate": "2020-03-10T03:47:15Z", "message": "Consistent method names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a74001c70c5525e22e4b015f38eb33c0e56706d0", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/a74001c70c5525e22e4b015f38eb33c0e56706d0", "committedDate": "2020-03-10T03:47:58Z", "message": "Removing unused field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f016b61e59f9a16957279a2735a66678f4244e8e", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/f016b61e59f9a16957279a2735a66678f4244e8e", "committedDate": "2020-03-10T04:23:53Z", "message": "Typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4acc636a5923b9a97bc6f660bc91a6150ad6aafc", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/4acc636a5923b9a97bc6f660bc91a6150ad6aafc", "committedDate": "2020-03-10T04:40:17Z", "message": "EventLogger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c226b159c9ed800b75e6ddbb875ed5bcdfd371d", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/2c226b159c9ed800b75e6ddbb875ed5bcdfd371d", "committedDate": "2020-03-10T04:40:25Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into context-logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1faf0ad757c288ffb6ec058259864964960dd8df", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/1faf0ad757c288ffb6ec058259864964960dd8df", "committedDate": "2020-03-10T04:54:03Z", "message": "Supplier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe91e8280061ae8ae42e8896c5f0714de3fd6d3b", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/fe91e8280061ae8ae42e8896c5f0714de3fd6d3b", "committedDate": "2020-03-10T23:27:29Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into context-logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf790f16e8d6385421fdcb27c60a3970b00a6288", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/bf790f16e8d6385421fdcb27c60a3970b00a6288", "committedDate": "2020-03-10T23:55:23Z", "message": "Removing duplicate logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe5353f64927c78121d42b382d3405e956ebf554", "author": {"user": null}, "url": "https://github.com/ConsenSys/teku/commit/fe5353f64927c78121d42b382d3405e956ebf554", "committedDate": "2020-03-11T00:56:48Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into context-logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDMwMTE3", "url": "https://github.com/ConsenSys/teku/pull/1327#pullrequestreview-372430117", "createdAt": "2020-03-11T01:53:32Z", "commit": {"oid": "fe5353f64927c78121d42b382d3405e956ebf554"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTo1MzozMlrOF0mx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjowMDozMFrOF0m4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwNTY1Ng==", "bodyText": "We should include the full stack trace here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.error(\"Failed to record data to {} : {}\", file, e.getMessage());\n          \n          \n            \n                  LOG.error(\"Failed to record data to \" + file, e);", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r390705656", "createdAt": "2020-03-11T01:53:32Z", "author": {"login": "ajsutton"}, "path": "data/recorder/src/main/java/tech/pegasys/artemis/data/recorder/SSZTransitionRecorder.java", "diffHunk": "@@ -69,14 +71,13 @@ private void store(final Path file, SimpleOffsetSerializable data) {\n     try {\n       Files.write(file, serialize(data).toArrayUnsafe());\n     } catch (final IOException e) {\n-      STATUS_LOG.log(Level.ERROR, \"Failed to record data to \" + file + \": \" + e.getMessage());\n+      LOG.error(\"Failed to record data to {} : {}\", file, e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe5353f64927c78121d42b382d3405e956ebf554"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwNjAyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.warn(e.getMessage(), e);\n          \n          \n            \n                  LOG.warn(\"Failed to process slots\"), e);\n          \n      \n    \n    \n  \n\nJust to provide context rather than repeating the exception message.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r390706021", "createdAt": "2020-03-11T01:55:12Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/StateTransition.java", "diffHunk": "@@ -226,15 +223,13 @@ public void process_slots(MutableBeaconState state, UnsignedLong slot, boolean p\n             .plus(UnsignedLong.ONE)\n             .mod(UnsignedLong.valueOf(SLOTS_PER_EPOCH))\n             .equals(UnsignedLong.ZERO)) {\n-          STATUS_LOG.log(\n-              Level.INFO, \"******* Epoch Event *******\", printEnabled, StatusLogger.Color.BLUE);\n           process_epoch(state);\n           reportExceptions(CompletableFuture.runAsync(() -> recordMetrics(state)));\n         }\n         state.setSlot(state.getSlot().plus(UnsignedLong.ONE));\n       }\n     } catch (IllegalArgumentException e) {\n-      STATUS_LOG.log(Level.WARN, e.getMessage());\n+      LOG.warn(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe5353f64927c78121d42b382d3405e956ebf554"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwNjQ2Ng==", "bodyText": "I'd still prefer these to go to stdout.  Where genesis comes from is a really important piece of information.", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r390706466", "createdAt": "2020-03-11T01:57:04Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/StartupUtil.java", "diffHunk": "@@ -91,21 +92,19 @@ public static void setupInitialState(\n     BeaconState initialState;\n     if (startState != null) {\n       try {\n-        STATUS_LOG.log(\n-            Level.INFO, \"Loading initial state from \" + startState, StatusLogger.Color.GREEN);\n+        LOG.log(Level.INFO, \"Loading initial state from \" + startState);\n         initialState = StartupUtil.loadBeaconStateFromFile(startState);\n       } catch (final IOException e) {\n         throw new IllegalStateException(\"Failed to load initial state\", e);\n       }\n     } else {\n-      STATUS_LOG.log(\n+      LOG.log(\n           Level.INFO,\n           \"Starting with mocked start interoperability mode with genesis time \"\n               + genesisTime\n               + \" and \"\n               + validatorKeyPairs.size()\n-              + \" validators\",\n-          Color.GREEN);\n+              + \" validators\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ4NDA3Nw=="}, "originalCommit": {"oid": "7e87f65e1670e30ce26646b30a68eb46902b151b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwNzQwNQ==", "bodyText": "Need to include the exception\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.error(\"Failed to clear old database\");\n          \n          \n            \n                  LOG.error(\"Failed to clear old database\", e);", "url": "https://github.com/ConsenSys/teku/pull/1327#discussion_r390707405", "createdAt": "2020-03-11T02:00:30Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/MapDbDatabase.java", "diffHunk": "@@ -77,7 +74,7 @@ public static Database createOnDisk(final File directory, final boolean startFro\n         Files.deleteIfExists(databaseFile.toPath());\n       }\n     } catch (IOException e) {\n-      STATUS_LOG.log(Level.ERROR, \"Failed to clear old database\");\n+      LOG.error(\"Failed to clear old database\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe5353f64927c78121d42b382d3405e956ebf554"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f76c647ed3617fd120cd6cebcc2128e95111b166", "author": {"user": {"login": "CjHare", "name": "CJ Hare"}}, "url": "https://github.com/ConsenSys/teku/commit/f76c647ed3617fd120cd6cebcc2128e95111b166", "committedDate": "2020-03-11T02:27:31Z", "message": "Update data/recorder/src/main/java/tech/pegasys/artemis/data/recorder/SSZTransitionRecorder.java\n\nCo-Authored-By: Adrian Sutton <adrian@symphonious.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3939, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}