{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMzYyNjY4", "number": 3369, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNToxOTo0NVrOFBmiew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxNjo1OVrOFB_coQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjI0MzE1OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNToxOTo0NVrOIAWZog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNToxOTo0NVrOIAWZog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzNzkyMg==", "bodyText": "So, turns out this should have taken into account whether it was the validator or not too.  Result should be the same as the default log file but with _%d{yyyy-MM-dd} inserted before the .log extension.", "url": "https://github.com/ConsenSys/teku/pull/3369#discussion_r537237922", "createdAt": "2020-12-07T05:19:45Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/options/LoggingOptions.java", "diffHunk": "@@ -160,4 +161,15 @@ public static String getDefaultLogFileGivenDataDir(String dataPath, boolean isVa\n       return dataPath + SEP + \"logs\" + SEP + \"teku.log\";\n     }\n   }\n+\n+  public static String getLogPatternGivenDataDir(\n+      final String dataPath, final String logFileNamePattern) {\n+    if (logFileNamePattern.equals(DEFAULT_LOG_PATH_PATTERN)) {\n+      return StringUtils.joinWith(SEP, dataPath, \"logs\", DEFAULT_LOG_FILE_NAME_PATTERN);\n+    }\n+    if (!logFileNamePattern.contains(SEP)) {\n+      return StringUtils.joinWith(SEP, dataPath, \"logs\", logFileNamePattern);\n+    }\n+    return logFileNamePattern;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b3a1b25c71d904d8feef179bf8fba1109f25cc"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjMyNDE3OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/util/LoggingPathBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxNjo1OVrOIA7FhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMToxNjo1OVrOIA7FhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzODk4MQ==", "bodyText": "Nice. That's going to fix a very common problem for people who just specify the filename instead of the whole path.", "url": "https://github.com/ConsenSys/teku/pull/3369#discussion_r537838981", "createdAt": "2020-12-07T21:16:59Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/util/LoggingPathBuilder.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.cli.util;\n+\n+import java.util.Optional;\n+import org.apache.commons.lang3.StringUtils;\n+import tech.pegasys.teku.util.cli.VersionProvider;\n+\n+public class LoggingPathBuilder {\n+  public static final String SEP = System.getProperty(\"file.separator\");\n+  private String defaultPath = VersionProvider.defaultStoragePath();\n+  private Optional<String> dataPath = Optional.empty();\n+  private String fromCommandLine;\n+  private String defaultBasename;\n+\n+  public LoggingPathBuilder defaultBasename(final String defaultBasename) {\n+    this.defaultBasename = defaultBasename;\n+    return this;\n+  }\n+\n+  public LoggingPathBuilder dataPath(final String dataPath) {\n+    this.dataPath = Optional.of(dataPath);\n+    return this;\n+  }\n+\n+  public LoggingPathBuilder fromCommandLine(final String path) {\n+    this.fromCommandLine = path;\n+    return this;\n+  }\n+\n+  public String build() {\n+    if (StringUtils.isNotEmpty(fromCommandLine)) {\n+      if (fromCommandLine.contains(SEP)) {\n+        return fromCommandLine;\n+      } else {\n+        return StringUtils.joinWith(SEP, dataPath.orElse(defaultPath), \"logs\", fromCommandLine);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f762ad8a4ef279003d1feed225654a1c652e122f"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2916, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}