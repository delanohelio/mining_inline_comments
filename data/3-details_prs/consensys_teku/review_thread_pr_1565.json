{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTUzMDA0", "number": 1565, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowOToyMlrODwiAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxNDo1NlrODwjQmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjE1MzI3OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/artemis/storage/client/RecentChainDataTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowOToyMlrOGDlzkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowOToyMlrOGDlzkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxODMyMA==", "bodyText": "It's unclear to me what's the difference between the two tests here and specifically what they are testing. I've removed both of their bestState and newState lines, kept only a random beacon state generation instead, and that resulted in both tests passing as well.", "url": "https://github.com/ConsenSys/teku/pull/1565#discussion_r406418320", "createdAt": "2020-04-09T19:09:22Z", "author": {"login": "cemozerr"}, "path": "storage/src/test/java/tech/pegasys/artemis/storage/client/RecentChainDataTest.java", "diffHunk": "@@ -189,7 +189,33 @@ public void getStateBySlot_returnGenesisBlockWhenItIsTheBestState() {\n     when(store.getBlockState(GENESIS_BLOCK_ROOT)).thenReturn(newState);\n     when(store.getBlock(GENESIS_BLOCK_ROOT)).thenReturn(GENESIS_BLOCK);\n \n-    assertThat(storageClient.getBlockBySlot(UnsignedLong.ZERO)).contains(GENESIS_BLOCK);\n+    assertThat(storageClient.getStateInEffectAtSlot(UnsignedLong.ZERO)).contains(newState);\n+  }\n+\n+  @Test\n+  public void getStateInEffectAtSlot_returnStateFromLastBlockWhenSlotsAreEmpty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657849ac7ffd32de781c80bec062a6088abe412d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjM1OTMxOnYy", "diffSide": "RIGHT", "path": "validator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/ValidatorApiHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxNDo1NlrOGDn2OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMDoxNDo1NlrOGDn2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1MTc2OQ==", "bodyText": "It might make more sense to move slot processing into combinedChainDataClient.", "url": "https://github.com/ConsenSys/teku/pull/1565#discussion_r406451769", "createdAt": "2020-04-09T20:14:56Z", "author": {"login": "mbaxter"}, "path": "validator/coordinator/src/main/java/tech/pegasys/artemis/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -101,7 +107,20 @@ public ValidatorApiHandler(\n         .getStateAtSlot(slot)\n         .thenApply(\n             optionalState ->\n-                optionalState.map(state -> getValidatorDutiesFromState(state, epoch, publicKeys)));\n+                optionalState\n+                    .map(state -> processSlots(state, slot))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "657849ac7ffd32de781c80bec062a6088abe412d"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1589, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}