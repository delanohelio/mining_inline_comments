{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODU1MDc5", "number": 1106, "title": "Optimize: parallel attestations validation on block import ", "bodyText": "PR Description\nBLS signature validation is heavy and takes ~95% of block import. The most easy and straightforward optimization is to parallelize block attestations validation\nAlso add a couple of tests to check blocks with attestations import\nResults\nBlocks import speed increased on ~50%\nBefore\nBenchmark                              (validatorsCount)  Mode  Cnt  Score   Error  Units\nTransitionBenchmark.Block.importBlock               1024    ss   50  0,351 \u00b1 0,009   s/op\nTransitionBenchmark.Block.importBlock               3072    ss   50  0,529 \u00b1 0,005   s/op\n\nAfter\nBenchmark                              (validatorsCount)  Mode  Cnt  Score   Error  Units\nTransitionBenchmark.Block.importBlock               1024    ss   50  0,226 \u00b1 0,009   s/op\nTransitionBenchmark.Block.importBlock               3072    ss   50  0,352 \u00b1 0,004   s/op", "createdAt": "2020-01-22T13:30:54Z", "url": "https://github.com/ConsenSys/teku/pull/1106", "merged": true, "mergeCommit": {"oid": "280980239731251e8ca4f794538e1a6ff35c78bd"}, "closed": true, "closedAt": "2020-01-22T15:58:15Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb80qudgH2gAyMzY1ODU1MDc5OjQ4NzNmMGJiY2NlMjQ1YWQ4NzFmN2NkMGNkYzliYmE3MTE3NDNlMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb89lAggFqTM0Njk1MjA4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4873f0bbcce245ad871f7cd0cdc9bba711743e20", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/4873f0bbcce245ad871f7cd0cdc9bba711743e20", "committedDate": "2020-01-22T12:12:07Z", "message": "Parallelize block attestations validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d84868dc6a4338cb1431b506eea66fd9d203bacb", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/d84868dc6a4338cb1431b506eea66fd9d203bacb", "committedDate": "2020-01-22T12:31:52Z", "message": "Move test helper attestation aggregation methods from the jmh-benchmark module to test-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/32172ed5f9efafa88f29b48da2e62830917ac159", "committedDate": "2020-01-22T13:27:42Z", "message": "For block import test: increase the number of validators to have non-empty committee, speed up chain setup by disabling deposits verify, add tests importing blocks with attestations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjkwNjgx", "url": "https://github.com/ConsenSys/teku/pull/1106#pullrequestreview-346690681", "createdAt": "2020-01-22T15:45:51Z", "commit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTUyMDgx", "url": "https://github.com/ConsenSys/teku/pull/1106#pullrequestreview-346952081", "createdAt": "2020-01-22T22:34:29Z", "commit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjozNDoyOVrOFgtZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjozNDoyOVrOFgtZiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ==", "bodyText": "Not critical, but would we be better off using allMatch(is_valid_indexed_attestation(...)) here? I suspect the stream bails out if one thread throws an exception anyway but allMatch makes it a bit more explicit and then we can just check the result instead of catching the exception.\nCould even use .filter(!is_valid_indexed_attestation).findAny() and include actual information about which attestation we found was invalid...", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r369842569", "createdAt": "2020-01-22T22:34:29Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}