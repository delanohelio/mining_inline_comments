{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTY0NjQ4", "number": 2326, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMTowOTowMlrOEMcHIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMDoyMFrOEMehvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDc4OTQ3OnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMTowOTowMlrOGujEAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzozODo1NlrOGu8vzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2MjE0NA==", "bodyText": "May be it makes sense to add some randomness here to make connection manager more reliable? I.e. take 50% of peers by score and 50% of random peers.\nIt occurred several times from my former experience that strictly selecting peers by their score may lead to connectivity problems due to different reasons", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451462144", "createdAt": "2020-07-08T11:09:02Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -103,9 +109,16 @@ public ConnectionManager(\n   private void connectToKnownPeers() {\n     final int maxAttempts = targetPeerCountRange.getPeersToAdd(network.getPeerCount());\n     LOG.trace(\"Connecting to up to {} known peers\", maxAttempts);\n+    if (maxAttempts == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     discoveryService\n         .streamKnownPeers()\n         .filter(this::isPeerValid)\n+        .sorted(\n+            Comparator.comparing((Function<DiscoveryPeer, Integer>) peerScorer::scoreCandidatePeer)\n+                .reversed())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4Mjk1OQ==", "bodyText": "Seems like a good idea, logged #2332 to follow up and do that.", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451882959", "createdAt": "2020-07-08T23:38:56Z", "author": {"login": "ajsutton"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -103,9 +109,16 @@ public ConnectionManager(\n   private void connectToKnownPeers() {\n     final int maxAttempts = targetPeerCountRange.getPeersToAdd(network.getPeerCount());\n     LOG.trace(\"Connecting to up to {} known peers\", maxAttempts);\n+    if (maxAttempts == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     discoveryService\n         .streamKnownPeers()\n         .filter(this::isPeerValid)\n+        .sorted(\n+            Comparator.comparing((Function<DiscoveryPeer, Integer>) peerScorer::scoreCandidatePeer)\n+                .reversed())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2MjE0NA=="}, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDgxMDk1OnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToxNTo1M1rOGujQ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToxNTo1M1rOGujQ6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTQ0OQ==", "bodyText": "The same note on randomness here", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465449", "createdAt": "2020-07-08T11:15:53Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -148,9 +161,14 @@ private void attemptConnection(final PeerAddress discoveryPeer) {\n \n   private void onPeerConnected(final Peer peer) {\n     final int peersToDrop = targetPeerCountRange.getPeersToDrop(network.getPeerCount());\n+    if (peersToDrop == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     network\n         .streamPeers()\n         .filter(candidate -> !staticPeers.contains(candidate.getAddress()))\n+        .sorted(Comparator.comparing(peerScorer::scoreExistingPeer))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDgxMzYyOnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToxNjo0NlrOGujSgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzo0MDo0N1rOGu8yCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTg1Nw==", "bodyText": "May be consider including this feature to public Pubsub API?", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465857", "createdAt": "2020-07-08T11:16:46Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4MzUyOA==", "bodyText": "Yeah seems like a good idea.  Will merge it here now, raise a PR to jvm-libp2p and will then use the libp2p version once we pull in its next release.", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451883528", "createdAt": "2020-07-08T23:40:47Z", "author": {"login": "ajsutton"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTg1Nw=="}, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTE4NTI3OnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMDoyMFrOGum6rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMDoyMFrOGum6rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyNTI5Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451525292", "createdAt": "2020-07-08T13:00:20Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()\n+        .submitOnEventThread(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3527, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}