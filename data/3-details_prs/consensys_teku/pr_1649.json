{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDI5NDA3", "number": 1649, "title": "Add beacon block hash tree root benchmarks", "bodyText": "PR Description\nAdds beacon block hash tree root benchmarks.", "createdAt": "2020-04-22T17:23:20Z", "url": "https://github.com/ConsenSys/teku/pull/1649", "merged": true, "mergeCommit": {"oid": "55164167f1e660f5e43cbfac71cc94d12285a373"}, "closed": true, "closedAt": "2020-04-22T18:03:25Z", "author": {"login": "cemozerr"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaLo98gH2gAyNDA3NDI5NDA3OjVkYjQ5ZWE3ZmExM2IwNmIwM2YyNGIwMzZiZTcxODg0MTY4MjBhMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaL5rSAH2gAyNDA3NDI5NDA3OjI4Yjc5ZjViMDdkYmYzNGZjZDA3MGY1MDFlMmQ3Mjc4ZDkzZjc5Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5db49ea7fa13b06b03f24b036be7188416820a28", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/5db49ea7fa13b06b03f24b036be7188416820a28", "committedDate": "2020-04-22T17:21:49Z", "message": "Add beacon block hash tree root benchmarks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDE4OTY1", "url": "https://github.com/ConsenSys/teku/pull/1649#pullrequestreview-398418965", "createdAt": "2020-04-22T17:30:35Z", "commit": {"oid": "5db49ea7fa13b06b03f24b036be7188416820a28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzozMDozNVrOGKCXCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzozMDozNVrOGKCXCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3NzYwOQ==", "bodyText": "I would also add this annotation to get more precise results\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Warmup(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n          \n          \n            \n              @Warmup(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n          \n          \n            \n              @OutputTimeUnit(TimeUnit.MICROSECONDS)\n          \n      \n    \n    \n  \n\nYou may also annotate the whole class to not duplicate params for every method", "url": "https://github.com/ConsenSys/teku/pull/1649#discussion_r413177609", "createdAt": "2020-04-22T17:30:35Z", "author": {"login": "Nashatyrev"}, "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/BeaconBlockBenchmark.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.benchmarks;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+import tech.pegasys.artemis.bls.BLSPublicKey;\n+import tech.pegasys.artemis.datastructures.blocks.BeaconBlock;\n+import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.config.Constants;\n+\n+public class BeaconBlockBenchmark {\n+\n+  private static final BLSPublicKey pubkey = BLSPublicKey.random(0);\n+  private static final DataStructureUtil dataStructureUtil =\n+      new DataStructureUtil(0).withPubKeyGenerator(() -> pubkey);\n+  private static final BeaconBlock fullBeaconBlock =\n+      dataStructureUtil.randomBeaconBlock(100, Bytes32.random(), true);\n+  private static final BeaconBlock sparseBeaconBlock =\n+      dataStructureUtil.randomBeaconBlock(100, Bytes32.random(), false);\n+\n+  public BeaconBlockBenchmark() {\n+    Constants.setConstants(\"mainnet\");\n+  }\n+\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @Warmup(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5db49ea7fa13b06b03f24b036be7188416820a28"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDIwMjQ3", "url": "https://github.com/ConsenSys/teku/pull/1649#pullrequestreview-398420247", "createdAt": "2020-04-22T17:31:59Z", "commit": {"oid": "5db49ea7fa13b06b03f24b036be7188416820a28"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b79f5b07dbf34fcd070f501e2d7278d93f7928", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/28b79f5b07dbf34fcd070f501e2d7278d93f7928", "committedDate": "2020-04-22T17:40:04Z", "message": "Put annotations on top of class decleration"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4101, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}