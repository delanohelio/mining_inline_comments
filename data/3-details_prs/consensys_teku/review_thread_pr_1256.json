{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNDQ3MjUy", "number": 1256, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyNToxMVrODkaT_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyNzowMVrODkcm0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTA2NDI4OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyNToxMVrOFwuBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjowOTo0MVrOFw2D7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMDA4NQ==", "bodyText": "i just added the same thing in my PR :) well, very similar - isStoreAvailable, I figured we'd mostly only be wanting to access it to check if its set, rather than to use directly... just an observation, no change required.", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386630085", "createdAt": "2020-03-02T20:25:11Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -171,11 +171,32 @@ private boolean isFinalized(final UnsignedLong slot) {\n   }\n \n   public Optional<Bytes32> getBestBlockRoot() {\n-    final Store store = recentChainData.getStore();\n-    if (store == null) {\n+    if (getStore() == null) {\n       LOG.trace(\"No block found because the store is not set\");\n       return Optional.empty();\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public Store getStore() {\n+    return recentChainData.getStore();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2MTcwOQ==", "bodyText": "Great point. \ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386761709", "createdAt": "2020-03-03T02:09:41Z", "author": {"login": "mark-terry"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -171,11 +171,32 @@ private boolean isFinalized(final UnsignedLong slot) {\n   }\n \n   public Optional<Bytes32> getBestBlockRoot() {\n-    final Store store = recentChainData.getStore();\n-    if (store == null) {\n+    if (getStore() == null) {\n       LOG.trace(\"No block found because the store is not set\");\n       return Optional.empty();\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public Store getStore() {\n+    return recentChainData.getStore();\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMDA4NQ=="}, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTA3MzkxOnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyODowMlrOFwuHug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTozODo1MlrOFw47OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMTYxMA==", "bodyText": "should probably add Unit Test to CombinedChainDataClientTest", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386631610", "createdAt": "2020-03-02T20:28:02Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -171,11 +171,32 @@ private boolean isFinalized(final UnsignedLong slot) {\n   }\n \n   public Optional<Bytes32> getBestBlockRoot() {\n-    final Store store = recentChainData.getStore();\n-    if (store == null) {\n+    if (getStore() == null) {\n       LOG.trace(\"No block found because the store is not set\");\n       return Optional.empty();\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public Store getStore() {\n+    return recentChainData.getStore();\n+  }\n+\n+  public Optional<Bytes32> getBlockRootBySlot(final UnsignedLong slot) {\n+    return recentChainData.getBlockRootBySlot(slot);\n+  }\n+\n+  public SafeFuture<Optional<SignedBeaconBlock>> getBlockBySlot(final UnsignedLong slot) {\n+    final Optional<Bytes32> blockRootBySlot = getBlockRootBySlot(slot);\n+    final Optional<Bytes32> bestBlockRoot = getBestBlockRoot();\n+\n+    if (blockRootBySlot.isPresent()) {\n+      return SafeFuture.completedFuture(\n+          Optional.ofNullable(getStore().getSignedBlock(blockRootBySlot.get())));\n+    } else if (bestBlockRoot.isPresent()) {\n+      return getBlockAtSlotExact(slot, bestBlockRoot.get());\n+    } else {\n+      return SafeFuture.completedFuture(Optional.empty());\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwODYzMw==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386808633", "createdAt": "2020-03-03T05:38:52Z", "author": {"login": "mark-terry"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -171,11 +171,32 @@ private boolean isFinalized(final UnsignedLong slot) {\n   }\n \n   public Optional<Bytes32> getBestBlockRoot() {\n-    final Store store = recentChainData.getStore();\n-    if (store == null) {\n+    if (getStore() == null) {\n       LOG.trace(\"No block found because the store is not set\");\n       return Optional.empty();\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public Store getStore() {\n+    return recentChainData.getStore();\n+  }\n+\n+  public Optional<Bytes32> getBlockRootBySlot(final UnsignedLong slot) {\n+    return recentChainData.getBlockRootBySlot(slot);\n+  }\n+\n+  public SafeFuture<Optional<SignedBeaconBlock>> getBlockBySlot(final UnsignedLong slot) {\n+    final Optional<Bytes32> blockRootBySlot = getBlockRootBySlot(slot);\n+    final Optional<Bytes32> bestBlockRoot = getBestBlockRoot();\n+\n+    if (blockRootBySlot.isPresent()) {\n+      return SafeFuture.completedFuture(\n+          Optional.ofNullable(getStore().getSignedBlock(blockRootBySlot.get())));\n+    } else if (bestBlockRoot.isPresent()) {\n+      return getBlockAtSlotExact(slot, bestBlockRoot.get());\n+    } else {\n+      return SafeFuture.completedFuture(Optional.empty());\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMTYxMA=="}, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTQ0MDE3OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconBlockHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoyNzowMVrOFwxodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzo1MDowN1rOFwzjpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4OTE0MA==", "bodyText": "is doReturn better than the other way?", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386689140", "createdAt": "2020-03-02T22:27:01Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconBlockHandlerTest.java", "diffHunk": "@@ -174,75 +186,91 @@ public void shouldReturnBlockWhenEpochQuery() throws Exception {\n     final String epochNum = \"1\";\n     final Map<String, List<String>> params = Map.of(EPOCH, List.of(epochNum));\n \n-    when(context.queryParamMap()).thenReturn(params);\n-    when(context.queryParam(any())).thenReturn(epochNum);\n-    when(storageClient.getBlockRootBySlot(any())).thenReturn(Optional.of(blockRoot));\n-    when(storageClient.getStore()).thenReturn(store);\n-    when(store.getSignedBlock(any())).thenReturn(signedBeaconBlock);\n-    when(historicalChainData.getFinalizedBlockAtSlot(any()))\n-        .thenReturn(SafeFuture.completedFuture(empty()));\n+    doReturn(params).when(context).queryParamMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyMDY3Nw==", "bodyText": "We prefer when(context.queryParamMap()).thenReturn(...) if at all possible because it's actually type safe. This includes if you have to declare the mock as a generic type and use SuppressWarnings because mock(Supplier.class) is untyped. Otherwise if the return type changes, the compiler won't flag it.\nBut sometimes it's unavoidable  (e.g. if something returns a SafeFuture<?> you can't ever have something that satisfies that because it can't know what ? is to see if you satisfied it, and I think there are a few other corner cases as well.", "url": "https://github.com/ConsenSys/teku/pull/1256#discussion_r386720677", "createdAt": "2020-03-02T23:50:07Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconBlockHandlerTest.java", "diffHunk": "@@ -174,75 +186,91 @@ public void shouldReturnBlockWhenEpochQuery() throws Exception {\n     final String epochNum = \"1\";\n     final Map<String, List<String>> params = Map.of(EPOCH, List.of(epochNum));\n \n-    when(context.queryParamMap()).thenReturn(params);\n-    when(context.queryParam(any())).thenReturn(epochNum);\n-    when(storageClient.getBlockRootBySlot(any())).thenReturn(Optional.of(blockRoot));\n-    when(storageClient.getStore()).thenReturn(store);\n-    when(store.getSignedBlock(any())).thenReturn(signedBeaconBlock);\n-    when(historicalChainData.getFinalizedBlockAtSlot(any()))\n-        .thenReturn(SafeFuture.completedFuture(empty()));\n+    doReturn(params).when(context).queryParamMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4OTE0MA=="}, "originalCommit": {"oid": "c4f61551d39144dbb924300774db07fbce54db98"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2709, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}