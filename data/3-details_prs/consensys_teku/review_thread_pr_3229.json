{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzAzMTMw", "number": 3229, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDowNTo0NFrOE5Q0yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDowNjo0OVrOE5Q1bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDc5OTQ2OnYy", "diffSide": "RIGHT", "path": "validator/client/src/integration-test/java/tech/pegasys/teku/validator/client/signer/ExternalSignerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDowNTo0NFrOHznp_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDo0NjozMFrOHzoKYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4OTE0OQ==", "bodyText": "Can we add this as a constant in HttpStatusCodes and use that constant rather than hard coding the 412 number?", "url": "https://github.com/ConsenSys/teku/pull/3229#discussion_r523889149", "createdAt": "2020-11-16T04:05:44Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/integration-test/java/tech/pegasys/teku/validator/client/signer/ExternalSignerIntegrationTest.java", "diffHunk": "@@ -119,6 +118,36 @@ void failsSigningWhenSigningServiceReturnsInvalidSignatureResponse() {\n             \"External signer returned an invalid signature: Illegal character 'I' found at index 0 in hex binary representation\");\n   }\n \n+  @Test\n+  void failsSigningBlockWhenSigningServiceRefusesToSignDueToSlashingCondition() {\n+    final BeaconBlock block = dataStructureUtil.randomBeaconBlock(10);\n+    client.when(request()).respond(response().withStatusCode(412));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1479dc64c09c4d4b5b661b3d163deab664e49e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg5NTczNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/3229#discussion_r523895737", "createdAt": "2020-11-16T04:38:18Z", "author": {"login": "usmansaleem"}, "path": "validator/client/src/integration-test/java/tech/pegasys/teku/validator/client/signer/ExternalSignerIntegrationTest.java", "diffHunk": "@@ -119,6 +118,36 @@ void failsSigningWhenSigningServiceReturnsInvalidSignatureResponse() {\n             \"External signer returned an invalid signature: Illegal character 'I' found at index 0 in hex binary representation\");\n   }\n \n+  @Test\n+  void failsSigningBlockWhenSigningServiceRefusesToSignDueToSlashingCondition() {\n+    final BeaconBlock block = dataStructureUtil.randomBeaconBlock(10);\n+    client.when(request()).respond(response().withStatusCode(412));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4OTE0OQ=="}, "originalCommit": {"oid": "0b1479dc64c09c4d4b5b661b3d163deab664e49e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg5NzQ0MQ==", "bodyText": "done ... both in the test and external signer.", "url": "https://github.com/ConsenSys/teku/pull/3229#discussion_r523897441", "createdAt": "2020-11-16T04:46:30Z", "author": {"login": "usmansaleem"}, "path": "validator/client/src/integration-test/java/tech/pegasys/teku/validator/client/signer/ExternalSignerIntegrationTest.java", "diffHunk": "@@ -119,6 +118,36 @@ void failsSigningWhenSigningServiceReturnsInvalidSignatureResponse() {\n             \"External signer returned an invalid signature: Illegal character 'I' found at index 0 in hex binary representation\");\n   }\n \n+  @Test\n+  void failsSigningBlockWhenSigningServiceRefusesToSignDueToSlashingCondition() {\n+    final BeaconBlock block = dataStructureUtil.randomBeaconBlock(10);\n+    client.when(request()).respond(response().withStatusCode(412));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4OTE0OQ=="}, "originalCommit": {"oid": "0b1479dc64c09c4d4b5b661b3d163deab664e49e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDgwMTA4OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/signer/ExternalSigner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDowNjo0OVrOHznq1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDowNjo0OVrOHznq1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4OTM2Ng==", "bodyText": "Would be good to sue a constant here (and actually switch the 200 below to a HttpStatusCodes constant too.", "url": "https://github.com/ConsenSys/teku/pull/3229#discussion_r523889366", "createdAt": "2020-11-16T04:06:49Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/signer/ExternalSigner.java", "diffHunk": "@@ -175,12 +187,18 @@ private String createSigningRequestBody(\n   }\n \n   private BLSSignature getBlsSignature(\n-      final HttpResponse<String> response, final Throwable throwable) {\n+      final HttpResponse<String> response,\n+      final Throwable throwable,\n+      final Supplier<String> slashableMessage) {\n     if (throwable != null) {\n       throw new ExternalSignerException(\n           \"External signer failed to sign due to \" + throwable.getMessage(), throwable);\n     }\n \n+    if (response.statusCode() == 412) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1479dc64c09c4d4b5b661b3d163deab664e49e"}, "originalPosition": 111}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3029, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}