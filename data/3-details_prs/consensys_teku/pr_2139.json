{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzk3NTMx", "number": 2139, "title": "Implement operation pools", "bodyText": "PR Description\nImplement pools for including SignedVoluntaryExits, ProposerSlashings, and AttesterSlashings that are received over the wire into blocks.\nFixed Issue(s)\n\n\nFixes #1838\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-06-12T17:13:58Z", "url": "https://github.com/ConsenSys/teku/pull/2139", "merged": true, "mergeCommit": {"oid": "b465b3e1355d805ebbc7fb4d73040e57a147e2b8"}, "closed": true, "closedAt": "2020-06-15T15:46:03Z", "author": {"login": "cemozerr"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqmG_oAH2gAyNDMzNzk3NTMxOmZmMWU5YjJlNGIwY2QzZjFmYTFlOGQxMzBlZDFkMjU5Y2MzMjc2NTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrh-xBgH2gAyNDMzNzk3NTMxOmEyZDJhMmU2YjcwMWRlZjk3NTY1NjAyMmNlYTQ4ZWNlZmYxY2ZjNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff1e9b2e4b0cd3f1fa1e8d130ed1d259cc327651", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/ff1e9b2e4b0cd3f1fa1e8d130ed1d259cc327651", "committedDate": "2020-06-12T17:14:56Z", "message": "Implement operation pool for storing operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fac60ccf9fc42d27532f01a41b8a67c5957ce732", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/fac60ccf9fc42d27532f01a41b8a67c5957ce732", "committedDate": "2020-06-12T17:14:56Z", "message": "Implement operation pools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39226dd45a3dbae3941c661df289111cef828a1b", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/39226dd45a3dbae3941c661df289111cef828a1b", "committedDate": "2020-06-12T17:14:56Z", "message": "Integrate operation pools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908cd74ed0c04e5b1b67791149db6dd7aa5fbc04", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/908cd74ed0c04e5b1b67791149db6dd7aa5fbc04", "committedDate": "2020-06-12T17:14:56Z", "message": "Further integrate gossip consumers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b2204dee49489ef5e354f1d13de2a661ad97ea", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/21b2204dee49489ef5e354f1d13de2a661ad97ea", "committedDate": "2020-06-12T17:14:56Z", "message": "Add attester slashing consumer to topic handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03ae43fdc545f42635e05670a2d2b38d210ba620", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/03ae43fdc545f42635e05670a2d2b38d210ba620", "committedDate": "2020-06-12T17:14:56Z", "message": "Start fixing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04a62b9697aef38daf2ca1c4e1a0df04ae92e3a0", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/04a62b9697aef38daf2ca1c4e1a0df04ae92e3a0", "committedDate": "2020-06-12T17:14:56Z", "message": "Fix test issue and run spotless"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a679c5d09640740eb4f73cc7b8b3d9e5eeb368f4", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a679c5d09640740eb4f73cc7b8b3d9e5eeb368f4", "committedDate": "2020-06-12T17:10:59Z", "message": "Fix test issue and run spotless"}, "afterCommit": {"oid": "04a62b9697aef38daf2ca1c4e1a0df04ae92e3a0", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/04a62b9697aef38daf2ca1c4e1a0df04ae92e3a0", "committedDate": "2020-06-12T17:14:56Z", "message": "Fix test issue and run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b71f8cf0ce338a01bcd0f93ed8451f337068a51a", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/b71f8cf0ce338a01bcd0f93ed8451f337068a51a", "committedDate": "2020-06-12T17:16:14Z", "message": "Remove redundant interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e924d63ff415e459e2f97c7bf5a95264406f3366", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/e924d63ff415e459e2f97c7bf5a95264406f3366", "committedDate": "2020-06-12T17:27:18Z", "message": "Remove verified block operations from pools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71b977d38740ea87771339e2d647ae6a206f4f5f", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/71b977d38740ea87771339e2d647ae6a206f4f5f", "committedDate": "2020-06-12T17:33:07Z", "message": "Run spotless & small fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ffdb6dacdf6bb3e38c9d919e809da766b70d327", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/0ffdb6dacdf6bb3e38c9d919e809da766b70d327", "committedDate": "2020-06-12T17:34:35Z", "message": "Remove redundant validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df628ab80c9708a40f38523affd385dc628cd257", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/df628ab80c9708a40f38523affd385dc628cd257", "committedDate": "2020-06-12T17:51:40Z", "message": "Fix block factory tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f918acc2ac97502d7d06c585fabaabb74e58573e", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/f918acc2ac97502d7d06c585fabaabb74e58573e", "committedDate": "2020-06-12T19:52:39Z", "message": "Add tests & make small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1aa3b45e1a91deb7fee9b231cab8bacc27b473a", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/e1aa3b45e1a91deb7fee9b231cab8bacc27b473a", "committedDate": "2020-06-12T19:55:44Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3206b84cc1994ba493b356a3b576c6dfe3231b66", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/3206b84cc1994ba493b356a3b576c6dfe3231b66", "committedDate": "2020-06-12T20:07:57Z", "message": "Add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b17a5a74719b3caf81eda11261136cb4299f1076", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/b17a5a74719b3caf81eda11261136cb4299f1076", "committedDate": "2020-06-12T20:08:55Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17613874d19c10aa12796d49631f8325c686429b", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/17613874d19c10aa12796d49631f8325c686429b", "committedDate": "2020-06-12T20:11:44Z", "message": "Improve test function names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb15a64ab633b13b6b8d3da806e8e8978f7bbf0b", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/bb15a64ab633b13b6b8d3da806e8e8978f7bbf0b", "committedDate": "2020-06-12T20:15:30Z", "message": "Change interface method argument name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/4317929f19713a5d20cb4c590776e8d348ea08e3", "committedDate": "2020-06-12T20:15:59Z", "message": "Change interface method name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDEwODkz", "url": "https://github.com/ConsenSys/teku/pull/2139#pullrequestreview-430010893", "createdAt": "2020-06-12T20:12:15Z", "commit": {"oid": "b17a5a74719b3caf81eda11261136cb4299f1076"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMDoxMjoxNlrOGjQYig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMDo0Nzo0N1rOGjROoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyMTc3MA==", "bodyText": "This this intended to always be a single method?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface OperationStateTransitionValidator<T> {\n          \n          \n            \n            @FunctionalInterface\n          \n          \n            \n            public interface OperationStateTransitionValidator<T> {", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439621770", "createdAt": "2020-06-12T20:12:16Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationvalidators/OperationStateTransitionValidator.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.operationvalidators;\n+\n+import java.util.Optional;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+\n+public interface OperationStateTransitionValidator<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17a5a74719b3caf81eda11261136cb4299f1076"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyMzQ3Nw==", "bodyText": "There's an @Mock annotation you can use that works with generics:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @SuppressWarnings(\"unchecked\")\n          \n          \n            \n              private final GossipedOperationConsumer<ValidateableAttestation> gossipedAttestationConsumer =\n          \n          \n            \n                  mock(GossipedOperationConsumer.class);\n          \n          \n            \n              @Mock\n          \n          \n            \n              private GossipedOperationConsumer<ValidateableAttestation> gossipedAttestationConsumer;\n          \n      \n    \n    \n  \n\nIf you go with this, you need to annotate the test class with @ExtendWith(MockitoExtension.class) I think.", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439623477", "createdAt": "2020-06-12T20:16:40Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/AggregateGossipManagerTest.java", "diffHunk": "@@ -40,8 +40,10 @@\n   private final GossipNetwork gossipNetwork = mock(GossipNetwork.class);\n   private final GossipEncoding gossipEncoding = GossipEncoding.SSZ_SNAPPY;\n   private final TopicChannel topicChannel = mock(TopicChannel.class);\n-  private final GossipedAttestationConsumer gossipedAttestationConsumer =\n-      mock(GossipedAttestationConsumer.class);\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private final GossipedOperationConsumer<ValidateableAttestation> gossipedAttestationConsumer =\n+      mock(GossipedOperationConsumer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b17a5a74719b3caf81eda11261136cb4299f1076"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyNzQ1MA==", "bodyText": "I think you could simplify this by keeping maxNumberOfElements as an instance var:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operationValidator) {\n          \n          \n            \n                this.clazz = clazz;\n          \n          \n            \n                this.operationValidator = operationValidator;\n          \n          \n            \n              }\n          \n          \n            \n              public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operationValidator) {\n          \n          \n            \n                this.operationValidator = operationValidator;\n          \n          \n            \n                this.maxNumberOfElements = maxNumberOfElementsInBlock.get(clazz);\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nOr even cutting out clazz altogether:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operationValidator) {\n          \n          \n            \n                this.clazz = clazz;\n          \n          \n            \n                this.operationValidator = operationValidator;\n          \n          \n            \n              }\n          \n          \n            \n              public OperationPool(OperationStateTransitionValidator<T> operationValidator, final int maxElements) {\n          \n          \n            \n                this.operationValidator = operationValidator;\n          \n          \n            \n                this.maxNumberOfElements = maxElements;\n          \n          \n            \n              }", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439627450", "createdAt": "2020-06-12T20:26:56Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.statetransition;\n+\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n+import tech.pegasys.teku.core.operationvalidators.OperationStateTransitionValidator;\n+import tech.pegasys.teku.datastructures.operations.AttesterSlashing;\n+import tech.pegasys.teku.datastructures.operations.ProposerSlashing;\n+import tech.pegasys.teku.datastructures.operations.SignedVoluntaryExit;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZMutableList;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+public class OperationPool<T> {\n+\n+  private static Map<Class<?>, Integer> maxNumberOfElementsInBlock =\n+      Map.of(\n+          SignedVoluntaryExit.class, Constants.MAX_VOLUNTARY_EXITS,\n+          ProposerSlashing.class, Constants.MAX_PROPOSER_SLASHINGS,\n+          AttesterSlashing.class, Constants.MAX_ATTESTER_SLASHINGS);\n+\n+  private Set<T> operations = new HashSet<>();\n+  private OperationStateTransitionValidator<T> operationValidator;\n+  private Class<T> clazz;\n+\n+  public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operationValidator) {\n+    this.clazz = clazz;\n+    this.operationValidator = operationValidator;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYyODA1Ng==", "bodyText": "Do you want to remove the element even if it wasn't included?  What if its valid for a different fork?", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439628056", "createdAt": "2020-06-12T20:28:27Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.statetransition;\n+\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n+import tech.pegasys.teku.core.operationvalidators.OperationStateTransitionValidator;\n+import tech.pegasys.teku.datastructures.operations.AttesterSlashing;\n+import tech.pegasys.teku.datastructures.operations.ProposerSlashing;\n+import tech.pegasys.teku.datastructures.operations.SignedVoluntaryExit;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZMutableList;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+public class OperationPool<T> {\n+\n+  private static Map<Class<?>, Integer> maxNumberOfElementsInBlock =\n+      Map.of(\n+          SignedVoluntaryExit.class, Constants.MAX_VOLUNTARY_EXITS,\n+          ProposerSlashing.class, Constants.MAX_PROPOSER_SLASHINGS,\n+          AttesterSlashing.class, Constants.MAX_ATTESTER_SLASHINGS);\n+\n+  private Set<T> operations = new HashSet<>();\n+  private OperationStateTransitionValidator<T> operationValidator;\n+  private Class<T> clazz;\n+\n+  public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operationValidator) {\n+    this.clazz = clazz;\n+    this.operationValidator = operationValidator;\n+  }\n+\n+  public SSZList<T> getItemsForBlock(BeaconState stateAtBlockSlot) {\n+    SSZMutableList<T> itemsToPutInBlock =\n+        SSZList.createMutable(clazz, maxNumberOfElementsInBlock.get(clazz));\n+    Iterator<T> iter = operations.iterator();\n+    int count = 0;\n+    int numberOfElementsToGet = maxNumberOfElementsInBlock.get(clazz);\n+    while (count < numberOfElementsToGet && iter.hasNext()) {\n+      T item = iter.next();\n+      if (operationValidator.validate(stateAtBlockSlot, item).isEmpty()) {\n+        itemsToPutInBlock.add(item);\n+        count++;\n+      }\n+      iter.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzMDk0MQ==", "bodyText": "We should probably verify that the consumer gets called where expected.", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439630941", "createdAt": "2020-06-12T20:35:52Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/AttesterSlashingTopicHandlerTest.java", "diffHunk": "@@ -46,7 +51,7 @@\n \n   private AttesterSlashingTopicHandler topicHandler =\n       new AttesterSlashingTopicHandler(\n-          gossipEncoding, dataStructureUtil.randomForkInfo(), validator);\n+          gossipEncoding, dataStructureUtil.randomForkInfo(), validator, consumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzMTkzOA==", "bodyText": "We should set these to a no-op value rather than leaving them null.", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439631938", "createdAt": "2020-06-12T20:38:18Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/testFixtures/java/tech/pegasys/teku/networking/eth2/Eth2NetworkFactory.java", "diffHunk": "@@ -89,7 +94,10 @@ public void stopAll() {\n     protected AsyncRunner asyncRunner;\n     protected EventBus eventBus;\n     protected RecentChainData recentChainData;\n-    protected GossipedAttestationConsumer gossipedAttestationConsumer;\n+    protected GossipedOperationConsumer<ValidateableAttestation> gossipedAttestationConsumer;\n+    protected GossipedOperationConsumer<AttesterSlashing> gossipedAttesterSlashingConsumer;\n+    protected GossipedOperationConsumer<ProposerSlashing> gossipedProposerSlashingConsumer;\n+    protected GossipedOperationConsumer<SignedVoluntaryExit> gossipedVoluntaryExitConsumer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzMjYyOQ==", "bodyText": "We should either set these to a no-op value by default, or validate() that they get set if we want them to be required.  I'd think setting them with no-op values is probably fine.", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439632629", "createdAt": "2020-06-12T20:40:11Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/Eth2NetworkBuilder.java", "diffHunk": "@@ -50,7 +54,10 @@\n   private Eth2Config eth2Config;\n   private EventBus eventBus;\n   private RecentChainData recentChainData;\n-  private GossipedAttestationConsumer gossipedAttestationConsumer;\n+  private GossipedOperationConsumer<ValidateableAttestation> gossipedAttestationConsumer;\n+  private GossipedOperationConsumer<AttesterSlashing> gossipedAttesterSlashingConsumer;\n+  private GossipedOperationConsumer<ProposerSlashing> gossipedProposerSlashingConsumer;\n+  private GossipedOperationConsumer<SignedVoluntaryExit> gossipedVoluntaryExitConsumer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzNTYxNw==", "bodyText": "We should probably check that these actually get included.", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439635617", "createdAt": "2020-06-12T20:47:47Z", "author": {"login": "mbaxter"}, "path": "validator/coordinator/src/test/java/tech/pegasys/teku/validator/coordinator/BlockFactoryTest.java", "diffHunk": "@@ -73,6 +90,9 @@\n   void setUp() {\n     when(depositProvider.getDeposits(any(), any())).thenReturn(deposits);\n     when(attestationsPool.getAttestationsForBlock(any())).thenReturn(attestations);\n+    when(attesterSlashingPool.getItemsForBlock(any())).thenReturn(attesterSlashings);\n+    when(proposerSlashingPool.getItemsForBlock(any())).thenReturn(proposerSlashings);\n+    when(voluntaryExitPool.getItemsForBlock(any())).thenReturn(voluntaryExits);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDQ2NTg1", "url": "https://github.com/ConsenSys/teku/pull/2139#pullrequestreview-430046585", "createdAt": "2020-06-12T21:26:51Z", "commit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyNjo1MVrOGjSDLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMToyNjo1MVrOGjSDLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY0OTA3MA==", "bodyText": "We probably want to limit the size of this right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Set<T> operations = new HashSet<>();\n          \n          \n            \n              private Set<T> operations = LimitedSet.create(...);", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439649070", "createdAt": "2020-06-12T21:26:51Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.statetransition;\n+\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n+import tech.pegasys.teku.core.operationvalidators.OperationStateTransitionValidator;\n+import tech.pegasys.teku.datastructures.operations.AttesterSlashing;\n+import tech.pegasys.teku.datastructures.operations.ProposerSlashing;\n+import tech.pegasys.teku.datastructures.operations.SignedVoluntaryExit;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZMutableList;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+public class OperationPool<T> {\n+\n+  private static Map<Class<?>, Integer> maxNumberOfElementsInBlock =\n+      Map.of(\n+          SignedVoluntaryExit.class, Constants.MAX_VOLUNTARY_EXITS,\n+          ProposerSlashing.class, Constants.MAX_PROPOSER_SLASHINGS,\n+          AttesterSlashing.class, Constants.MAX_ATTESTER_SLASHINGS);\n+\n+  private Set<T> operations = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317929f19713a5d20cb4c590776e8d348ea08e3"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df62ef05e22ac6761aead91397b3628d56b0a2d6", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/df62ef05e22ac6761aead91397b3628d56b0a2d6", "committedDate": "2020-06-12T21:27:58Z", "message": "Make variables final and test valid operation does get forwarded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9609f3b817d64701f0c557e00783c294719429c", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/f9609f3b817d64701f0c557e00783c294719429c", "committedDate": "2020-06-12T21:40:04Z", "message": "Use limited set for pools and check block factory includes new operations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce707aa3fc679a0437c51b4c2766309601d65072", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/ce707aa3fc679a0437c51b4c2766309601d65072", "committedDate": "2020-06-12T21:46:06Z", "message": "Validate gossiped operation consumers get set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a500f8e07e032ed60da64fe1b95bba3d02bae8b7", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a500f8e07e032ed60da64fe1b95bba3d02bae8b7", "committedDate": "2020-06-12T21:49:17Z", "message": "Add noop consumers for Eth2NetworkFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bde15f7165f0fb3dadb11f17097d4cfc33b7fc5", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/2bde15f7165f0fb3dadb11f17097d4cfc33b7fc5", "committedDate": "2020-06-12T21:51:58Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "476baae17d9131595764ac1fa2817103c184979b", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/476baae17d9131595764ac1fa2817103c184979b", "committedDate": "2020-06-12T21:52:11Z", "message": "Merge branch 'master' into implementOperationPools"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDU3NjM1", "url": "https://github.com/ConsenSys/teku/pull/2139#pullrequestreview-430057635", "createdAt": "2020-06-12T21:56:08Z", "commit": {"oid": "476baae17d9131595764ac1fa2817103c184979b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMTo1NjowOVrOGjSmLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMTo1NjowOVrOGjSmLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1ODAyOA==", "bodyText": "We should also verify this isn't called in the other cases :D", "url": "https://github.com/ConsenSys/teku/pull/2139#discussion_r439658028", "createdAt": "2020-06-12T21:56:09Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/topics/AttesterSlashingTopicHandlerTest.java", "diffHunk": "@@ -60,6 +66,7 @@ public void handleMessage_validSlashing() {\n     Bytes serialized = gossipEncoding.encode(slashing);\n     final ValidationResult result = topicHandler.handleMessage(serialized);\n     assertThat(result).isEqualTo(ValidationResult.Valid);\n+    verify(consumer).forward(slashing);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476baae17d9131595764ac1fa2817103c184979b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5abe7448b48ef2474afdbf412b5a7a2c1a6c41b0", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/5abe7448b48ef2474afdbf412b5a7a2c1a6c41b0", "committedDate": "2020-06-15T14:44:38Z", "message": "Add more checks to tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzI3NjUw", "url": "https://github.com/ConsenSys/teku/pull/2139#pullrequestreview-430727650", "createdAt": "2020-06-15T14:58:54Z", "commit": {"oid": "5abe7448b48ef2474afdbf412b5a7a2c1a6c41b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2d2a2e6b701def975656022cea48eceff1cfc48", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a2d2a2e6b701def975656022cea48eceff1cfc48", "committedDate": "2020-06-15T15:00:15Z", "message": "Merge branch 'master' into implementOperationPools"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3922, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}