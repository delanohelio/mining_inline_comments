{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MDI1NTI2", "number": 2799, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyNzo1OFrOEjznlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyOTozOVrOEjzqkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTgxMzMyOnYy", "diffSide": "RIGHT", "path": "validator/api/src/main/java/tech/pegasys/teku/validator/api/AttesterDuties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyNzo1OFrOHSYAwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyNzo1OFrOHSYAwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyOTgyNg==", "bodyText": "nit: can we make these java doc comments:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // the committee index of the committee that includes the specified validator\n          \n          \n            \n              /** the committee index of the committee that includes the specified validator */\n          \n      \n    \n    \n  \n\nMostly just because it shows up as an explanation in more places which makes it more useful.", "url": "https://github.com/ConsenSys/teku/pull/2799#discussion_r489029826", "createdAt": "2020-09-15T22:27:58Z", "author": {"login": "ajsutton"}, "path": "validator/api/src/main/java/tech/pegasys/teku/validator/api/AttesterDuties.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.validator.api;\n+\n+import java.util.Objects;\n+import tech.pegasys.teku.bls.BLSPublicKey;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+\n+public class AttesterDuties {\n+\n+  private final BLSPublicKey publicKey;\n+  private final int validatorIndex;\n+  private final int committeeLength;\n+  // the committee index of the committee that includes the specified validator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e136b9de139c903abac02303c2e8f44880fda192"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTgyMDk4OnYy", "diffSide": "RIGHT", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMjoyOTozOVrOHSYF5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzowMDowMFrOHSZfxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAzMTE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (epoch.isGreaterThan(combinedChainDataClient.getCurrentEpoch().plus(UInt64.ONE))) {\n          \n          \n            \n                if (epoch.isGreaterThan(combinedChainDataClient.getCurrentEpoch().plus(Constants.MIN_SEED_LOOKAHEAD))) {\n          \n      \n    \n    \n  \n\nis probably more accurate.  We should do better at using that constant rather than hard coding 1 all the time...", "url": "https://github.com/ConsenSys/teku/pull/2799#discussion_r489031143", "createdAt": "2020-09-15T22:29:39Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -134,14 +135,21 @@ public ValidatorApiHandler(\n   }\n \n   @Override\n-  public SafeFuture<Optional<List<ValidatorDuties>>> getAttestationDuties(\n+  public SafeFuture<Optional<List<AttesterDuties>>> getAttestationDuties(\n       final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n     if (isSyncActive()) {\n       return NodeSyncingException.failedFuture();\n     }\n     if (validatorIndexes.isEmpty()) {\n       return SafeFuture.completedFuture(Optional.of(emptyList()));\n     }\n+    if (epoch.isGreaterThan(combinedChainDataClient.getCurrentEpoch().plus(UInt64.ONE))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e136b9de139c903abac02303c2e8f44880fda192"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1NDE0OA==", "bodyText": "i had never associated that variable with this, its more of a max_lookahead i would have been looking for than that name...", "url": "https://github.com/ConsenSys/teku/pull/2799#discussion_r489054148", "createdAt": "2020-09-15T23:00:00Z", "author": {"login": "rolfyone"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -134,14 +135,21 @@ public ValidatorApiHandler(\n   }\n \n   @Override\n-  public SafeFuture<Optional<List<ValidatorDuties>>> getAttestationDuties(\n+  public SafeFuture<Optional<List<AttesterDuties>>> getAttestationDuties(\n       final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n     if (isSyncActive()) {\n       return NodeSyncingException.failedFuture();\n     }\n     if (validatorIndexes.isEmpty()) {\n       return SafeFuture.completedFuture(Optional.of(emptyList()));\n     }\n+    if (epoch.isGreaterThan(combinedChainDataClient.getCurrentEpoch().plus(UInt64.ONE))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAzMTE0Mw=="}, "originalCommit": {"oid": "e136b9de139c903abac02303c2e8f44880fda192"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3261, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}