{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzQ4MDY1", "number": 2199, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxOTo0NFrOEICrGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzozODo0NFrOEIK1Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODY3ODY1OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjoxOTo0NFrOGnw3dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyNToyMFrOGn5RGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0ODI3Ng==", "bodyText": "nit: It might be a good idea to make this a class level constant.", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444348276", "createdAt": "2020-06-23T16:19:44Z", "author": {"login": "cemozerr"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "diffHunk": "@@ -40,25 +40,33 @@\n   private final File dbVersionFile;\n   private final StateStorageMode stateStorageMode;\n   private final DatabaseVersion createDatabaseVersion;\n+  private final long stateStorageFrequency;\n \n   public VersionedDatabaseFactory(\n       final MetricsSystem metricsSystem,\n       final String dataPath,\n       final StateStorageMode dataStorageMode) {\n-    this(metricsSystem, dataPath, dataStorageMode, DatabaseVersion.DEFAULT_VERSION.getValue());\n+    this(\n+        metricsSystem,\n+        dataPath,\n+        dataStorageMode,\n+        DatabaseVersion.DEFAULT_VERSION.getValue(),\n+        2048L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a7a16a143476b0143ab6a47fb9fee3c47936af1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NTkxMg==", "bodyText": "most of the time when i do that it gets removed anyway, but I'm happy to :/", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444485912", "createdAt": "2020-06-23T20:25:20Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "diffHunk": "@@ -40,25 +40,33 @@\n   private final File dbVersionFile;\n   private final StateStorageMode stateStorageMode;\n   private final DatabaseVersion createDatabaseVersion;\n+  private final long stateStorageFrequency;\n \n   public VersionedDatabaseFactory(\n       final MetricsSystem metricsSystem,\n       final String dataPath,\n       final StateStorageMode dataStorageMode) {\n-    this(metricsSystem, dataPath, dataStorageMode, DatabaseVersion.DEFAULT_VERSION.getValue());\n+    this(\n+        metricsSystem,\n+        dataPath,\n+        dataStorageMode,\n+        DatabaseVersion.DEFAULT_VERSION.getValue(),\n+        2048L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0ODI3Ng=="}, "originalCommit": {"oid": "6a7a16a143476b0143ab6a47fb9fee3c47936af1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTg1NTY2OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactoryTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjoyMToyMlrOGn8oBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzozNTo0NVrOGn-FQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MDkzMg==", "bodyText": "i wonder if i need a factory constructor that doesn't take this new parameter @ajsutton but it'd only really be in tests like this that its made use of...", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444540932", "createdAt": "2020-06-23T22:21:22Z", "author": {"login": "rolfyone"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactoryTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void createDatabase_fromExistingDataDir() throws Exception {\n   public void createDatabase_asV4Database() throws Exception {\n     final DatabaseFactory dbFactory =\n         new VersionedDatabaseFactory(\n-            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\");\n+            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\", 1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed965b50c31c7562e423fc6a54e2248098a8fce"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MDg4Ng==", "bodyText": "hmm, hard to say.  I don't think 1 is a particularly good default to embed so I'd probably leave it but wouldn't block it either way.", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444560886", "createdAt": "2020-06-23T23:22:35Z", "author": {"login": "ajsutton"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactoryTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void createDatabase_fromExistingDataDir() throws Exception {\n   public void createDatabase_asV4Database() throws Exception {\n     final DatabaseFactory dbFactory =\n         new VersionedDatabaseFactory(\n-            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\");\n+            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\", 1L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MDkzMg=="}, "originalCommit": {"oid": "3ed965b50c31c7562e423fc6a54e2248098a8fce"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NDgwMA==", "bodyText": "It might make sense to have 1 as a default for some of the test factories we have (eg InMemoryStorageSystem) but I'm not sure if doing it at that level actually provides much benefit.", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444564800", "createdAt": "2020-06-23T23:35:45Z", "author": {"login": "ajsutton"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactoryTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void createDatabase_fromExistingDataDir() throws Exception {\n   public void createDatabase_asV4Database() throws Exception {\n     final DatabaseFactory dbFactory =\n         new VersionedDatabaseFactory(\n-            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\");\n+            new StubMetricsSystem(), dataDir.toString(), DATA_STORAGE_MODE, \"4\", 1L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU0MDkzMg=="}, "originalCommit": {"oid": "3ed965b50c31c7562e423fc6a54e2248098a8fce"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDAxNTA3OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4FinalizedRocksDbDao.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzozODo0NVrOGn-Iaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzozODo0NVrOGn-Iaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NTYxMQ==", "bodyText": "The risk with this is that if we happen to have an empty slot where the state would have been stored we'd wind up with a significantly bigger gap than we expected.  It would be easy to have skipped slots at a few archive points in a row creating a huge gap.\nWe could probably start with this but I think we need to be smarter and effectively store the state in effect at our archive slot even if it didn't have a block.", "url": "https://github.com/ConsenSys/teku/pull/2199#discussion_r444565611", "createdAt": "2020-06-23T23:38:45Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/dataaccess/V4FinalizedRocksDbDao.java", "diffHunk": "@@ -76,7 +80,9 @@ public void addFinalizedBlock(final SignedBeaconBlock block) {\n \n     @Override\n     public void addFinalizedState(final Bytes32 blockRoot, final BeaconState state) {\n-      transaction.put(V4SchemaFinalized.FINALIZED_STATES_BY_ROOT, blockRoot, state);\n+      if (state.getSlot().mod(stateStorageFrequency).equals(UnsignedLong.ZERO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e198f78cbacc448ffad0bfb9c81722de67d8e263"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3623, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}