{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NzkzMDYw", "number": 2895, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1MDo1NVrOEq7x8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1MDo1NVrOEq7x8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDU1MDkxOnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/peer/DisconnectReason.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1MDo1NVrOHdbNzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1OTowMlrOHdbbWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNjY1Mw==", "bodyText": "values() always iterates the enum in declared order and it's a sequential stream so findAny would always find the first of them.  So unless I'm missing something I think we're just doing extra work here (always iterating every value instead of short circuiting) for no benefit.", "url": "https://github.com/ConsenSys/teku/pull/2895#discussion_r500616653", "createdAt": "2020-10-06T21:50:55Z", "author": {"login": "ajsutton"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/peer/DisconnectReason.java", "diffHunk": "@@ -36,9 +37,11 @@\n   }\n \n   public static Optional<DisconnectReason> fromReasonCode(final UInt64 reasonCode) {\n+    // Pull the min matching value so that we deterministically map code to reason even if some\n+    // reasons share the same code\n     return Stream.of(values())\n         .filter(reason -> reason.getReasonCode().equals(reasonCode))\n-        .findAny();\n+        .min(Comparator.comparing(Enum::name));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4400fea9e384d112ff5b23f4af9027a8e31b475d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYyMDEyMw==", "bodyText": "Yeah - when testing, it seemed to be deterministic either way.  But I wasn't sure if the behavior was guaranteed or not.\nAccording to this article they are deterministically ordered.  So, I can just revert this.", "url": "https://github.com/ConsenSys/teku/pull/2895#discussion_r500620123", "createdAt": "2020-10-06T21:59:02Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/peer/DisconnectReason.java", "diffHunk": "@@ -36,9 +37,11 @@\n   }\n \n   public static Optional<DisconnectReason> fromReasonCode(final UInt64 reasonCode) {\n+    // Pull the min matching value so that we deterministically map code to reason even if some\n+    // reasons share the same code\n     return Stream.of(values())\n         .filter(reason -> reason.getReasonCode().equals(reasonCode))\n-        .findAny();\n+        .min(Comparator.comparing(Enum::name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNjY1Mw=="}, "originalCommit": {"oid": "4400fea9e384d112ff5b23f4af9027a8e31b475d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3312, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}