{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTE5NjY4", "number": 3355, "title": "Add voluntary exit acceptance test", "bodyText": "PR Description\nAdd voluntary exit acceptance test.\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-03T21:12:17Z", "url": "https://github.com/ConsenSys/teku/pull/3355", "merged": true, "mergeCommit": {"oid": "3d36cfc010c33edf8c3ea43c5d3813d4a502d20b"}, "closed": true, "closedAt": "2020-12-08T20:07:05Z", "author": {"login": "cemozerr"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdipkGeAH2gAyNTMyMTE5NjY4Ojc5OTc1ZDc2YWJjNTU3YzUzNjAzMTRmZGU5NzViMTM0ODA3ZWEzNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkPoHTAH2gAyNTMyMTE5NjY4Ojg5MzE2YTlkNzM3ODZkMzQxZmNlYWNjZThkZWU0ZTQyN2Q1NzFjZTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "79975d76abc557c5360314fde975b134807ea341", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/79975d76abc557c5360314fde975b134807ea341", "committedDate": "2020-12-03T20:56:12Z", "message": "Add voluntary exit acceptance test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dae296e427dd33f74094c18b801ef2ae66af137c", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/dae296e427dd33f74094c18b801ef2ae66af137c", "committedDate": "2020-12-03T21:12:57Z", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb8d985d01cd8f0eec70539db80bc0a103591880", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/bb8d985d01cd8f0eec70539db80bc0a103591880", "committedDate": "2020-12-03T22:18:56Z", "message": "Activate status logger and test validator exit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b72a9a83d9ce9a84ffe1255cad0637553ff1c691", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/b72a9a83d9ce9a84ffe1255cad0637553ff1c691", "committedDate": "2020-12-03T22:38:53Z", "message": "Clean up PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6efcfb9b1a545be5febec111671faf06f14b8cbc", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/6efcfb9b1a545be5febec111671faf06f14b8cbc", "committedDate": "2020-12-03T22:39:45Z", "message": "Fix minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e39dfcd0a6bb260536492dd0bd36e690531202f", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/3e39dfcd0a6bb260536492dd0bd36e690531202f", "committedDate": "2020-12-03T22:44:59Z", "message": "Try fix gradle import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTI4MjIw", "url": "https://github.com/ConsenSys/teku/pull/3355#pullrequestreview-544528220", "createdAt": "2020-12-03T22:51:25Z", "commit": {"oid": "3e39dfcd0a6bb260536492dd0bd36e690531202f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjo1MToyNVrOH-4xyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjo1MzowMlrOH-43KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNDAxMA==", "bodyText": "We should push all this logic into the DSL rather than doing it directly in the test.  The AT itself should be just high level steps like\nkeys = depositSender.sendValidatorDeposits(..)\ncreateValidatorNode(beaconNode, keys)\nsendVoluntaryExit(beaconNode, keys)", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r535704010", "createdAt": "2020-12-03T22:51:25Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import static tech.pegasys.teku.util.config.Constants.MAX_EFFECTIVE_BALANCE;\n+\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n+import org.apache.commons.compress.archivers.tar.TarArchiveOutputStream;\n+import org.apache.commons.compress.utils.IOUtils;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuDepositSender;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeyGenerator;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystoreGenerator;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void test() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    int numberOfValidators = 4;\n+    final TekuDepositSender depositSender = createTekuDepositSender();\n+    final List<ValidatorKeyGenerator.ValidatorKeys> validatorKeys =\n+        depositSender.generateValidatorKeys(numberOfValidators);\n+    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n+\n+    final String validatorKeysPassword = \"validatorsKeysPassword\";\n+    final Path validatorInfoDirectoryPath = Path.of(\"./validatorInfo\");\n+    final String keysDirectory = \"keys\";\n+    final String passwordsDirectory = \"passwords\";\n+    final Path keysOutputPath = validatorInfoDirectoryPath.resolve(keysDirectory);\n+    final Path passwordsOutputPath = validatorInfoDirectoryPath.resolve(passwordsDirectory);\n+    final ValidatorKeystoreGenerator keystoreGenerator =\n+        new ValidatorKeystoreGenerator(\n+            validatorKeysPassword, keysOutputPath, passwordsOutputPath, (__) -> {});\n+\n+    // create temporary tar file which will be copied to docker containers\n+    File validatorInfoTar = File.createTempFile(\"validatorInfo\", \".tar\");\n+    validatorInfoTar.deleteOnExit();\n+\n+    // create keystores using the validator keys generated by deposit sender\n+    keystoreGenerator.generateKeystoreAndPasswordFiles(\n+        validatorKeys.stream()\n+            .map(ValidatorKeyGenerator.ValidatorKeys::getValidatorKey)\n+            .collect(Collectors.toList()));\n+\n+    // copy keystores directory to tar file and delete the now redundant directory\n+    copyDirectoryToTarFile(validatorInfoDirectoryPath, validatorInfoTar.toPath());\n+    FileUtils.deleteDirectory(validatorInfoDirectoryPath.toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e39dfcd0a6bb260536492dd0bd36e690531202f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNTM4NQ==", "bodyText": "Why did we need this instead of just swift which is reasonable sane now or just minimal?", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r535705385", "createdAt": "2020-12-03T22:53:02Z", "author": {"login": "ajsutton"}, "path": "util/src/main/resources/tech/pegasys/teku/util/config/less-swift.yaml", "diffHunk": "@@ -0,0 +1,161 @@\n+# Teku specific Swift preset:\n+# Made for quick acceptance tests.\n+# Copy of the minimal preset but\n+# SECONDS_PER_SLOT is 1 instead of 6 and\n+# SLOTS_PER_EPOCH is 4 instead of 8\n+# MIN_GENESIS_ACTIVE_VALIDATOR_COUNT is 4 instead of 64\n+\n+CONFIG_NAME: \"less-swift\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e39dfcd0a6bb260536492dd0bd36e690531202f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb2180d7533ff8a21ae908dbb00d1e42efddc2c1", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/cb2180d7533ff8a21ae908dbb00d1e42efddc2c1", "committedDate": "2020-12-04T13:10:51Z", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ba4545012710673f22537d7db7f5bb5a74b20bf", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/6ba4545012710673f22537d7db7f5bb5a74b20bf", "committedDate": "2020-12-05T03:24:24Z", "message": "Merge branch 'master' into addVoluntaryExitAcceptanceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0f11ffac2605e90f8a56339fc86fc6fcb52ea9a", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/d0f11ffac2605e90f8a56339fc86fc6fcb52ea9a", "committedDate": "2020-12-05T03:49:42Z", "message": "Push internal logic to DSL and use --confirmation-enabled=false flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8ecdbdded64d7e69b606489ff4f1a9711945d00", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/c8ecdbdded64d7e69b606489ff4f1a9711945d00", "committedDate": "2020-12-05T04:00:56Z", "message": "Change less-swift config to allow immediate validator exits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893961e952d56e548365352f04fa0b8240f74d94", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/893961e952d56e548365352f04fa0b8240f74d94", "committedDate": "2020-12-05T04:05:46Z", "message": "Add commons io to acceptance test build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33711f65cd7b7079ef7dba2bd6ee54d9a16e6ef2", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/33711f65cd7b7079ef7dba2bd6ee54d9a16e6ef2", "committedDate": "2020-12-05T04:14:23Z", "message": "Try fix gradle error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7781239a34f6f6ba74de9b32304792c6510eeb55", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/7781239a34f6f6ba74de9b32304792c6510eeb55", "committedDate": "2020-12-05T04:28:47Z", "message": "Try fix apache-commons-io gradle import error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a107f405fd6559b562740d175a9d10dff1fe4546", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a107f405fd6559b562740d175a9d10dff1fe4546", "committedDate": "2020-12-05T04:38:36Z", "message": "Try another fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53339e77e2d9433fb9804b91733e15c97e322bc1", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/53339e77e2d9433fb9804b91733e15c97e322bc1", "committedDate": "2020-12-05T14:55:31Z", "message": "Try another fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3943dee29babf5f027a05db57bffe0aeb0ab16e4", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/3943dee29babf5f027a05db57bffe0aeb0ab16e4", "committedDate": "2020-12-05T15:04:18Z", "message": "Add bls as dependency to acceptance test test fixtures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a964c80128f4e9043670ca394ed661ec79aa3e", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/73a964c80128f4e9043670ca394ed661ec79aa3e", "committedDate": "2020-12-05T15:09:50Z", "message": "Try another gradle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/fbf7599664ad195e7b215c8617288d78300e00b7", "committedDate": "2020-12-05T16:45:05Z", "message": "Set shard committee period to 1 so that constants tests dont fail"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODAyOTQx", "url": "https://github.com/ConsenSys/teku/pull/3355#pullrequestreview-545802941", "createdAt": "2020-12-07T03:08:36Z", "commit": {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzowODozNlrOIAUILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMzoyODo0MFrOIAUexw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMDY4NQ==", "bodyText": "nit: Probably just leave this unset by default. It will be a lot less confusing than having the rest api timeout.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537200685", "createdAt": "2020-12-07T03:08:36Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuVoluntaryExit.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance.dsl;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class TekuVoluntaryExit extends Node {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private final TekuVoluntaryExit.Config config;\n+  private boolean started = false;\n+  private Set<File> configFiles;\n+\n+  private TekuVoluntaryExit(final Network network, final TekuVoluntaryExit.Config config) {\n+    super(network, TEKU_DOCKER_IMAGE, LOG);\n+    this.config = config;\n+\n+    container\n+        .withWorkingDirectory(WORKING_DIRECTORY)\n+        .withCommand(\n+            \"voluntary-exit\", \"--confirmation-enabled=false\", \"--config-file\", CONFIG_FILE_PATH);\n+  }\n+\n+  public static TekuVoluntaryExit create(\n+      final Network network, Consumer<TekuVoluntaryExit.Config> configOptions) {\n+\n+    final TekuVoluntaryExit.Config config = new TekuVoluntaryExit.Config();\n+    configOptions.accept(config);\n+\n+    final TekuVoluntaryExit node = new TekuVoluntaryExit(network, config);\n+\n+    return node;\n+  }\n+\n+  public void start() throws Exception {\n+    assertThat(started).isFalse();\n+    LOG.debug(\"Start voluntary exit command line process {}\", nodeAlias);\n+    started = true;\n+    final Map<File, String> configFiles = config.write();\n+    this.configFiles = configFiles.keySet();\n+    configFiles.forEach(\n+        (localFile, targetPath) ->\n+            container.withCopyFileToContainer(\n+                MountableFile.forHostPath(localFile.getAbsolutePath()), targetPath));\n+    container.start();\n+  }\n+\n+  @Override\n+  public void stop() {\n+    if (!started) {\n+      return;\n+    }\n+    LOG.debug(\"Shutting down\");\n+    configFiles.forEach(\n+        configFile -> {\n+          if (!configFile.delete() && configFile.exists()) {\n+            throw new RuntimeException(\"Failed to delete config file: \" + configFile);\n+          }\n+        });\n+    container.stop();\n+  }\n+\n+  public static class Config {\n+    private Map<String, Object> configMap = new HashMap<>();\n+\n+    public Config() {\n+      configMap.put(\"log-destination\", \"console\");\n+      configMap.put(\"beacon-node-api-endpoint\", \"http://notvalid.restapi.com\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwMTAyOQ==", "bodyText": "nit: I'd be tempted to make this withBeaconNode and just pass beaconNode then have the internals of the DSL get the right rest API URL.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537201029", "createdAt": "2020-12-07T03:09:49Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final List<BLSKeyPair> validatorKeys = createKeysAndSendDeposits(eth1Node, 4);\n+\n+    final File validatorInfoTar = createValidatorKeystores(validatorKeys, \"keys\", \"passwords\");\n+\n+    final TekuNode beaconNode =\n+        createTekuNode(config -> config.withNetwork(\"less-swift\").withDepositsFrom(eth1Node));\n+\n+    final TekuValidatorNode validatorClient =\n+        createValidatorNode(\n+            config ->\n+                config\n+                    .withNetwork(\"less-swift\")\n+                    .withInteropModeDisabled()\n+                    .withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\")\n+                    .withBeaconNodeEndpoint(beaconNode.getBeaconRestApiUrl()));\n+    validatorClient.copyContentsToWorkingDirectory(validatorInfoTar);\n+\n+    final TekuVoluntaryExit voluntaryExitProcess =\n+        createVoluntaryExit(\n+            config ->\n+                config\n+                    .withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\")\n+                    .withBeaconNodeEndpoint(beaconNode.getBeaconRestApiUrl()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIwNjQ3MQ==", "bodyText": "I think this should be encapsulated by the DSL better.  I'd say createKeysAndSendDeposits should be pushed into TekuDepositSender rather than the test base class, and it then returns a custom ValidatorKeys object.  So this becomes something like:\nfinal ValidatorKeys validatorKeys = createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n\nand then instead of withValidatorKeys(\"/opt/teku/keys:/opt/teku/passwords\"),  both the validator node and the validator exit node would just have withValidatorKeys(validatorKeys) and ValidatorKeys then has a method to get the keys as a tarball (which it can cache to avoid creating the keystores twice) and the copying into docker just becomes a part of that then.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537206471", "createdAt": "2020-12-07T03:28:40Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import java.io.File;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.bls.BLSKeyPair;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final List<BLSKeyPair> validatorKeys = createKeysAndSendDeposits(eth1Node, 4);\n+\n+    final File validatorInfoTar = createValidatorKeystores(validatorKeys, \"keys\", \"passwords\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf7599664ad195e7b215c8617288d78300e00b7"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "325894a146d5329f74a7b3f39da8037d65471f18", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/325894a146d5329f74a7b3f39da8037d65471f18", "committedDate": "2020-12-07T19:46:24Z", "message": "Encapsulate keystore generation in DSL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/d028d28838dc0c1f82899b7f1ee51e7896b8e683", "committedDate": "2020-12-07T19:48:02Z", "message": "Run spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTcwMzE5", "url": "https://github.com/ConsenSys/teku/pull/3355#pullrequestreview-546570319", "createdAt": "2020-12-07T21:55:59Z", "commit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMTo1NTo1OVrOIA8g_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjowMDo0MVrOIA8rzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MjM5Nw==", "bodyText": "Not sure we needed this change.  It could be a combined beacon and validator client so TekuNode seems like a reasonable name.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537862397", "createdAt": "2020-12-07T21:55:59Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/GenesisStateAcceptanceTest.java", "diffHunk": "@@ -33,11 +33,11 @@ public void shouldCreateTheSameGenesisState() throws Exception {\n \n     createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n \n-    final TekuNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));\n+    final TekuBeaconNode firstTeku = createTekuNode(config -> config.withDepositsFrom(eth1Node));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MzI0MQ==", "bodyText": "nit: Would be nice if this could just be a chained call.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537863241", "createdAt": "2020-12-07T21:57:21Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/acceptance-test/java/tech/pegasys/teku/test/acceptance/VoluntaryExitAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.test.acceptance;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.test.acceptance.dsl.AcceptanceTestBase;\n+import tech.pegasys.teku.test.acceptance.dsl.BesuNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuBeaconNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuValidatorNode;\n+import tech.pegasys.teku.test.acceptance.dsl.TekuVoluntaryExit;\n+import tech.pegasys.teku.test.acceptance.dsl.tools.deposits.ValidatorKeystores;\n+\n+public class VoluntaryExitAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  void shouldChangeValidatorStatusAfterSubmittingVoluntaryExit() throws Exception {\n+    final BesuNode eth1Node = createBesuNode();\n+    eth1Node.start();\n+\n+    final ValidatorKeystores validatorKeystores =\n+        createTekuDepositSender().sendValidatorDeposits(eth1Node, 4);\n+\n+    final TekuBeaconNode beaconNode =\n+        createTekuNode(config -> config.withNetwork(\"less-swift\").withDepositsFrom(eth1Node));\n+\n+    final TekuValidatorNode validatorClient =\n+        createValidatorNode(\n+            config ->\n+                config\n+                    .withNetwork(\"less-swift\")\n+                    .withInteropModeDisabled()\n+                    .withBeaconNode(beaconNode));\n+    validatorClient.withValidatorKeystores(validatorKeystores);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2Mzk4Nw==", "bodyText": "Do we still need this now that we have createTekuDepositSender().sendValidatorDeposits?", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537863987", "createdAt": "2020-12-07T21:58:43Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/AcceptanceTestBase.java", "diffHunk": "@@ -64,6 +75,15 @@ protected TekuDepositSender createTekuDepositSender() {\n     return addNode(new TekuDepositSender(network));\n   }\n \n+  protected List<BLSKeyPair> createKeysAndSendDeposits(\n+      final BesuNode eth1Node, final int numberOfValidators) throws Exception {\n+    final TekuDepositSender depositSender = createTekuDepositSender();\n+    final List<ValidatorKeys> validatorKeys =\n+        depositSender.generateValidatorKeys(numberOfValidators);\n+    depositSender.sendValidatorDeposits(eth1Node, validatorKeys, MAX_EFFECTIVE_BALANCE);\n+    return validatorKeys.stream().map(ValidatorKeys::getValidatorKey).collect(Collectors.toList());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NDI3MQ==", "bodyText": "Does this need to be public now? Ideally it wouldn't be accessible from the ATs itself.", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537864271", "createdAt": "2020-12-07T21:59:13Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/Node.java", "diffHunk": "@@ -111,4 +111,14 @@ protected void copyDirectoryToTar(final String sourcePath, final File localTarge\n       throw new RuntimeException(\"Failed to copy directory from \" + nodeAlias, e);\n     }\n   }\n+\n+  /**\n+   * Copies contents of the given directory into node's working directory.\n+   *\n+   * @param tarFile\n+   * @throws IOException\n+   */\n+  public void copyContentsToWorkingDirectory(File tarFile) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2NTE2Ng==", "bodyText": "Do we need this?", "url": "https://github.com/ConsenSys/teku/pull/3355#discussion_r537865166", "createdAt": "2020-12-07T22:00:41Z", "author": {"login": "ajsutton"}, "path": "acceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuValidatorNode.java", "diffHunk": "@@ -101,8 +113,18 @@ public Config() {\n       configMap.put(\"beacon-node-api-endpoint\", \"http://notvalid.restapi.com\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d028d28838dc0c1f82899b7f1ee51e7896b8e683"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/4ab15b3cd74b2dc9cb9fac3f1a149e9af5c27a1f", "committedDate": "2020-12-08T19:48:02Z", "message": "Incorporate feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "defc797a44e97901f0e97b12e8141d2065453d0e", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/defc797a44e97901f0e97b12e8141d2065453d0e", "committedDate": "2020-12-08T19:48:55Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89316a9d73786d341fceacce8dee4e427d571ce0", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/89316a9d73786d341fceacce8dee4e427d571ce0", "committedDate": "2020-12-08T19:50:54Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into addVoluntaryExitAcceptanceTest\n\n# Conflicts:\n#\tacceptance-tests/src/testFixtures/java/tech/pegasys/teku/test/acceptance/dsl/TekuDepositSender.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4346, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}