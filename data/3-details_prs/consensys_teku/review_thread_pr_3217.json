{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNzk1MjQ1", "number": 3217, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxOTo0NTo1NFrOE4zsZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxOTo0NTo1NFrOE4zsZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDAyNjYwOnYy", "diffSide": "RIGHT", "path": "data/signingrecord/src/main/java/tech/pegasys/teku/data/signingrecord/ValidatorSigningRecord.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxOTo0NTo1NFrOHy8uIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTowNjowNVrOHy_jcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE4NTY5OQ==", "bodyText": "(nit) You could probably condense to one statement like:\nLOG.error(\"Refusing to sign attestation:  source epoch ({}) is {}, target epoch ({}) is {}.  Previously signed source epoch {}, target epoch {}\", sourceEpoch, sourceEpochIsSafe ? \"safe\" :  \"unsafe\", targetEpoch, targetEpochIsSafe ? \"safe\" :  \"unsafe\", attestationSourceEpoch, attestationTargetEpoch);\n\nI'd also use string interpolation ({}) instead of concatenating.", "url": "https://github.com/ConsenSys/teku/pull/3217#discussion_r523185699", "createdAt": "2020-11-13T19:45:54Z", "author": {"login": "mbaxter"}, "path": "data/signingrecord/src/main/java/tech/pegasys/teku/data/signingrecord/ValidatorSigningRecord.java", "diffHunk": "@@ -119,9 +119,36 @@ public Bytes toBytes() {\n               + genesisValidatorsRoot);\n       return Optional.empty();\n     }\n-    if (isSafeSourceEpoch(sourceEpoch) && isSafeTargetEpoch(targetEpoch)) {\n+\n+    boolean sourceEpochIsSafe = isSafeSourceEpoch(sourceEpoch);\n+    boolean targetEpochIsSafe = isSafeTargetEpoch(targetEpoch);\n+    if (sourceEpochIsSafe && targetEpochIsSafe) {\n       return Optional.of(\n           new ValidatorSigningRecord(genesisValidatorsRoot, blockSlot, sourceEpoch, targetEpoch));\n+    } else {\n+      if (!sourceEpochIsSafe && targetEpochIsSafe) {\n+        LOG.error(\n+            \"Refusing to sign attestation because source epoch \"\n+                + sourceEpoch\n+                + \" is less than the previously signed source epoch \"\n+                + attestationSourceEpoch);\n+      } else if (sourceEpochIsSafe) {\n+        LOG.error(\n+            \"Refusing to sign attestation because target epoch \"\n+                + targetEpoch\n+                + \" is less than or equal to the previously signed target epoch \"\n+                + attestationTargetEpoch);\n+      } else {\n+        LOG.error(\n+            \"Refusing to sign attestation because source epoch \"\n+                + sourceEpoch\n+                + \" is less than the previously signed source epoch \"\n+                + attestationSourceEpoch\n+                + \" and target epoch \"\n+                + targetEpoch\n+                + \" is less than or equal to the previously signed target epoch \"\n+                + attestationTargetEpoch);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae42a47afcfda1037f648271c19610a1c9f70f64"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzMjExMg==", "bodyText": "That's pretty neat. Thank you", "url": "https://github.com/ConsenSys/teku/pull/3217#discussion_r523232112", "createdAt": "2020-11-13T21:06:05Z", "author": {"login": "cemozerr"}, "path": "data/signingrecord/src/main/java/tech/pegasys/teku/data/signingrecord/ValidatorSigningRecord.java", "diffHunk": "@@ -119,9 +119,36 @@ public Bytes toBytes() {\n               + genesisValidatorsRoot);\n       return Optional.empty();\n     }\n-    if (isSafeSourceEpoch(sourceEpoch) && isSafeTargetEpoch(targetEpoch)) {\n+\n+    boolean sourceEpochIsSafe = isSafeSourceEpoch(sourceEpoch);\n+    boolean targetEpochIsSafe = isSafeTargetEpoch(targetEpoch);\n+    if (sourceEpochIsSafe && targetEpochIsSafe) {\n       return Optional.of(\n           new ValidatorSigningRecord(genesisValidatorsRoot, blockSlot, sourceEpoch, targetEpoch));\n+    } else {\n+      if (!sourceEpochIsSafe && targetEpochIsSafe) {\n+        LOG.error(\n+            \"Refusing to sign attestation because source epoch \"\n+                + sourceEpoch\n+                + \" is less than the previously signed source epoch \"\n+                + attestationSourceEpoch);\n+      } else if (sourceEpochIsSafe) {\n+        LOG.error(\n+            \"Refusing to sign attestation because target epoch \"\n+                + targetEpoch\n+                + \" is less than or equal to the previously signed target epoch \"\n+                + attestationTargetEpoch);\n+      } else {\n+        LOG.error(\n+            \"Refusing to sign attestation because source epoch \"\n+                + sourceEpoch\n+                + \" is less than the previously signed source epoch \"\n+                + attestationSourceEpoch\n+                + \" and target epoch \"\n+                + targetEpoch\n+                + \" is less than or equal to the previously signed target epoch \"\n+                + attestationTargetEpoch);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE4NTY5OQ=="}, "originalCommit": {"oid": "ae42a47afcfda1037f648271c19610a1c9f70f64"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3020, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}