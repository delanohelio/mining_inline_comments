{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTIwNjI0", "number": 1109, "title": "Optimize: get_attestation_deltas: flatten nested loops", "bodyText": "PR Description\nStateless optimization of epoch transition get_attestation_deltas method : flatten nested loops of depth 3\nResults:\nBefore:\nBenchmark                              (validatorsCount)  Mode  Cnt  Score   Error  Units\nTransitionBenchmark.Epoch.importBlock               1024    ss   10  0,484 \u00b1 0,009   s/op\nTransitionBenchmark.Epoch.importBlock               3072    ss   10  2,544 \u00b1 0,053   s/op\nTransitionBenchmark.Epoch.importBlock              10240    ss   10 28,404 \u00b1 3,693   s/op\n\nAfter:\nBenchmark                              (validatorsCount)  Mode  Cnt  Score   Error  Units\nTransitionBenchmark.Epoch.importBlock               1024    ss   10  0,288 \u00b1 0,029   s/op\nTransitionBenchmark.Epoch.importBlock               3072    ss   10  0,772 \u00b1 0,040   s/op\nTransitionBenchmark.Epoch.importBlock              10240    ss   10  5,040 \u00b1 0,052   s/op", "createdAt": "2020-01-22T15:36:18Z", "url": "https://github.com/ConsenSys/teku/pull/1109", "merged": true, "mergeCommit": {"oid": "a14ac4c5b8a745223d48fcecf0e675816e166791"}, "closed": true, "closedAt": "2020-01-23T07:52:17Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb83iGygH2gAyMzY1OTIwNjI0OmZjZTliYjZkNDcwNTgwYWJhMjk4NmQ3ZTIwOGVlMzlkMzEyNzA4NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9Eo-SgH2gAyMzY1OTIwNjI0OjgwNjMxMmFjYTEwYjIyODM3NTU3MTY3NDYwM2VmODhmYWMzNzY1MTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fce9bb6d470580aba2986d7e208ee39d31270852", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/fce9bb6d470580aba2986d7e208ee39d31270852", "committedDate": "2020-01-22T15:32:25Z", "message": "Optimize: get_attestation_deltas: flatten nested loops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/e61ac7b84fb81964b7da154022a9a7b5250ac344", "committedDate": "2020-01-22T15:58:58Z", "message": "Merge branch 'master' into optimize-get-attestation-deltas-main"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzAyNjUw", "url": "https://github.com/ConsenSys/teku/pull/1109#pullrequestreview-346702650", "createdAt": "2020-01-22T16:00:09Z", "commit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMDowOVrOFghirw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMDowOVrOFghirw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0ODMwMw==", "bodyText": "(nit): might be a good idea to remove the empty line", "url": "https://github.com/ConsenSys/teku/pull/1109#discussion_r369648303", "createdAt": "2020-01-22T16:00:09Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/EpochProcessorUtil.java", "diffHunk": "@@ -347,30 +349,41 @@ private static UnsignedLong get_base_reward(BeaconState state, int index) {\n     }\n \n     // Proposer and inclusion delay micro-rewards\n-    for (Integer index : get_unslashed_attesting_indices(state, matching_source_attestations)) {\n-      matching_source_attestations.stream()\n-          .filter(\n-              a ->\n-                  get_attesting_indices(state, a.getData(), a.getAggregation_bits())\n-                      .contains(index))\n-          .min(Comparator.comparing(PendingAttestation::getInclusion_delay))\n-          .ifPresent(\n-              attestation -> {\n-                UnsignedLong proposer_reward =\n-                    get_base_reward(state, index)\n-                        .dividedBy(UnsignedLong.valueOf(PROPOSER_REWARD_QUOTIENT));\n-                rewards.set(\n-                    attestation.getProposer_index().intValue(),\n-                    rewards.get(attestation.getProposer_index().intValue()).plus(proposer_reward));\n-                UnsignedLong max_attester_reward =\n-                    get_base_reward(state, index).minus(proposer_reward);\n-                rewards.set(\n-                    index,\n-                    rewards\n-                        .get(index)\n-                        .plus(max_attester_reward.dividedBy(attestation.getInclusion_delay())));\n-              });\n-    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f634f4b4c4025a22d40e9b9ba3a566e605aac23d", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/f634f4b4c4025a22d40e9b9ba3a566e605aac23d", "committedDate": "2020-01-22T16:05:56Z", "message": "Remove empty line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzA5MDMx", "url": "https://github.com/ConsenSys/teku/pull/1109#pullrequestreview-346709031", "createdAt": "2020-01-22T16:08:02Z", "commit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowODowMlrOFgh1Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowODowMlrOFgh1Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MzA3OQ==", "bodyText": "Do you mind explaining why you call the get_unslashed_attesting_indices here with single attestations instead of all of them together? I'm worried that this might be straying from the spec definition?", "url": "https://github.com/ConsenSys/teku/pull/1109#discussion_r369653079", "createdAt": "2020-01-22T16:08:02Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/EpochProcessorUtil.java", "diffHunk": "@@ -347,30 +349,41 @@ private static UnsignedLong get_base_reward(BeaconState state, int index) {\n     }\n \n     // Proposer and inclusion delay micro-rewards\n-    for (Integer index : get_unslashed_attesting_indices(state, matching_source_attestations)) {\n-      matching_source_attestations.stream()\n-          .filter(\n-              a ->\n-                  get_attesting_indices(state, a.getData(), a.getAggregation_bits())\n-                      .contains(index))\n-          .min(Comparator.comparing(PendingAttestation::getInclusion_delay))\n-          .ifPresent(\n-              attestation -> {\n-                UnsignedLong proposer_reward =\n-                    get_base_reward(state, index)\n-                        .dividedBy(UnsignedLong.valueOf(PROPOSER_REWARD_QUOTIENT));\n-                rewards.set(\n-                    attestation.getProposer_index().intValue(),\n-                    rewards.get(attestation.getProposer_index().intValue()).plus(proposer_reward));\n-                UnsignedLong max_attester_reward =\n-                    get_base_reward(state, index).minus(proposer_reward);\n-                rewards.set(\n-                    index,\n-                    rewards\n-                        .get(index)\n-                        .plus(max_attester_reward.dividedBy(attestation.getInclusion_delay())));\n-              });\n-    }\n+\n+    // map (unslashed attester index) -> (list of source attestations)\n+    Map<Integer, List<PendingAttestation>> validator_source_attestations =\n+        matching_source_attestations.stream()\n+            .flatMap(\n+                a ->\n+                    get_unslashed_attesting_indices(state, Collections.singletonList(a)).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f3515aa877d53d30d65132dac0c9daab3c0ad1", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/90f3515aa877d53d30d65132dac0c9daab3c0ad1", "committedDate": "2020-01-22T16:44:02Z", "message": "Merge branch 'master' into optimize-get-attestation-deltas-main"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a028f8c7befc33c96bd5fb3216f3ff4944109a25", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/a028f8c7befc33c96bd5fb3216f3ff4944109a25", "committedDate": "2020-01-22T16:54:35Z", "message": "Merge branch 'master' into optimize-get-attestation-deltas-main"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTU4NDk0", "url": "https://github.com/ConsenSys/teku/pull/1109#pullrequestreview-346958494", "createdAt": "2020-01-22T22:47:44Z", "commit": {"oid": "a028f8c7befc33c96bd5fb3216f3ff4944109a25"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjo0Nzo0NFrOFgtt8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjo0Nzo0NFrOFgtt8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0Nzc5NA==", "bodyText": "It takes a bit of time to get your head around what both versions are actually doing but they are equivalent.\nThe spec version finds all the validators (by index) included in any of the matching_source_attestations, then for each validator finds the list of attestations they were included in.\nThe new version builds a map of validator to attestations they were included in by iterating each attestation from matching_source_attestations and converting to a pair of (validator, attestation) then grouping them by validator (lines 359 to 361).\nThe majority of the method is unchanged except for indenting, for each validator find the attestation with minimum inclusion delay and apply rewards based on that (lines 355-372 in the old and 363-385 in the new).", "url": "https://github.com/ConsenSys/teku/pull/1109#discussion_r369847794", "createdAt": "2020-01-22T22:47:44Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/EpochProcessorUtil.java", "diffHunk": "@@ -347,30 +349,41 @@ private static UnsignedLong get_base_reward(BeaconState state, int index) {\n     }\n \n     // Proposer and inclusion delay micro-rewards\n-    for (Integer index : get_unslashed_attesting_indices(state, matching_source_attestations)) {\n-      matching_source_attestations.stream()\n-          .filter(\n-              a ->\n-                  get_attesting_indices(state, a.getData(), a.getAggregation_bits())\n-                      .contains(index))\n-          .min(Comparator.comparing(PendingAttestation::getInclusion_delay))\n-          .ifPresent(\n-              attestation -> {\n-                UnsignedLong proposer_reward =\n-                    get_base_reward(state, index)\n-                        .dividedBy(UnsignedLong.valueOf(PROPOSER_REWARD_QUOTIENT));\n-                rewards.set(\n-                    attestation.getProposer_index().intValue(),\n-                    rewards.get(attestation.getProposer_index().intValue()).plus(proposer_reward));\n-                UnsignedLong max_attester_reward =\n-                    get_base_reward(state, index).minus(proposer_reward);\n-                rewards.set(\n-                    index,\n-                    rewards\n-                        .get(index)\n-                        .plus(max_attester_reward.dividedBy(attestation.getInclusion_delay())));\n-              });\n-    }\n+\n+    // map (unslashed attester index) -> (list of source attestations)\n+    Map<Integer, List<PendingAttestation>> validator_source_attestations =\n+        matching_source_attestations.stream()\n+            .flatMap(\n+                a ->\n+                    get_unslashed_attesting_indices(state, Collections.singletonList(a)).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MzA3OQ=="}, "originalCommit": {"oid": "e61ac7b84fb81964b7da154022a9a7b5250ac344"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "806312aca10b228375571674603ef88fac376514", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/806312aca10b228375571674603ef88fac376514", "committedDate": "2020-01-23T06:48:41Z", "message": "Merge branch 'master' into optimize-get-attestation-deltas-main"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4227, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}