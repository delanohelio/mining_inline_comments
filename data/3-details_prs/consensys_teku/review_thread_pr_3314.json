{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MzQxMjEw", "number": 3314, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjowMTozN1rOE9Z-Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjoxMTowOFrOE9aIbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODI0MTYzOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/blockvalidator/SimpleBlockValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjowMTozN1rOH6FLww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODowODo1M1rOH6Pz-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NDM4Nw==", "bodyText": "nit: Can we make this throw BlockProcessingException specifically.  It shouldn't ever happen but if it does it should be the same as the signature being invalid to ensure it gets handled correctly.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow();\n          \n          \n            \n                    ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow(() -> new BlockProcessingException(\"Public key not found for validator \" + proposerIndex));", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530664387", "createdAt": "2020-11-25T22:01:37Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/blockvalidator/SimpleBlockValidator.java", "diffHunk": "@@ -120,13 +122,14 @@ public SimpleBlockValidator(\n \n   private void verify_block_signature(final BeaconState state, SignedBeaconBlock signed_block)\n       throws BlockProcessingException {\n-    final Validator proposer =\n-        state.getValidators().get(get_beacon_proposer_index(state, signed_block.getSlot()));\n+    final int proposerIndex = get_beacon_proposer_index(state, signed_block.getSlot());\n+    final BLSPublicKey proposerPublicKey =\n+        ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzODUyMA==", "bodyText": "Let it be, thought that exception would still indicate internal logic malfunction cause get_beacon_proposer_index should normally return existing validator index", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530838520", "createdAt": "2020-11-26T08:08:53Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/blockvalidator/SimpleBlockValidator.java", "diffHunk": "@@ -120,13 +122,14 @@ public SimpleBlockValidator(\n \n   private void verify_block_signature(final BeaconState state, SignedBeaconBlock signed_block)\n       throws BlockProcessingException {\n-    final Validator proposer =\n-        state.getValidators().get(get_beacon_proposer_index(state, signed_block.getSlot()));\n+    final int proposerIndex = get_beacon_proposer_index(state, signed_block.getSlot());\n+    final BLSPublicKey proposerPublicKey =\n+        ValidatorsUtil.getValidatorPubKey(state, UInt64.valueOf(proposerIndex)).orElseThrow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NDM4Nw=="}, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODI2Mjg2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/ProposerSlashingSignatureVerifier.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjowOToyMVrOH6FXug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODozODo1MVrOH6Q5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA==", "bodyText": "nit: Would be good to just return false here if the pub key isn't available. Little surprised we've gotten away with the current version actually as we don't appear to check the proposer index ahead of time.", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530667450", "createdAt": "2020-11-25T22:09:21Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/ProposerSlashingSignatureVerifier.java", "diffHunk": "@@ -40,11 +39,7 @@ public boolean verifySignature(\n     final BeaconBlockHeader header1 = proposerSlashing.getHeader_1().getMessage();\n     final BeaconBlockHeader header2 = proposerSlashing.getHeader_2().getMessage();\n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                header1.getProposerIndex(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, header1.getProposerIndex()).orElseThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0OTYzNw==", "bodyText": "Done. Looks like the slashing index is checked just here (i.e. when validating gossiped slashing) : \n  \n    \n      teku/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/ProposerSlashingValidator.java\n    \n    \n         Line 77\n      in\n      ae994ca\n    \n    \n    \n    \n\n        \n          \n           Optional<OperationInvalidReason> invalidReason = transitionValidator.validate(state, slashing); \n        \n    \n  \n\n\nBut is not checked when validating block slashings", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530849637", "createdAt": "2020-11-26T08:29:05Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/ProposerSlashingSignatureVerifier.java", "diffHunk": "@@ -40,11 +39,7 @@ public boolean verifySignature(\n     final BeaconBlockHeader header1 = proposerSlashing.getHeader_1().getMessage();\n     final BeaconBlockHeader header2 = proposerSlashing.getHeader_2().getMessage();\n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                header1.getProposerIndex(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, header1.getProposerIndex()).orElseThrow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA=="}, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1NjIzNQ==", "bodyText": "Created the issue on this: #3319", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530856235", "createdAt": "2020-11-26T08:38:51Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/ProposerSlashingSignatureVerifier.java", "diffHunk": "@@ -40,11 +39,7 @@ public boolean verifySignature(\n     final BeaconBlockHeader header1 = proposerSlashing.getHeader_1().getMessage();\n     final BeaconBlockHeader header2 = proposerSlashing.getHeader_2().getMessage();\n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                header1.getProposerIndex(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, header1.getProposerIndex()).orElseThrow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2NzQ1MA=="}, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODI2NjQ1OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/VoluntaryExitSignatureVerifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjoxMDo0MlrOH6FZww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo0OToyNVrOH6RRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2Nzk3MQ==", "bodyText": "Returning false here would be good too.", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530667971", "createdAt": "2020-11-25T22:10:42Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/VoluntaryExitSignatureVerifier.java", "diffHunk": "@@ -34,11 +33,7 @@ public boolean verifySignature(\n     final VoluntaryExit exit = signedExit.getMessage();\n \n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                exit.getValidator_index(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, exit.getValidator_index()).orElseThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MjQ5Mg==", "bodyText": "The similar issue as with ProposerSlashingSignatureVerifier`. Also added to the issue #3319", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530862492", "createdAt": "2020-11-26T08:49:25Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/operationsignatureverifiers/VoluntaryExitSignatureVerifier.java", "diffHunk": "@@ -34,11 +33,7 @@ public boolean verifySignature(\n     final VoluntaryExit exit = signedExit.getMessage();\n \n     BLSPublicKey publicKey =\n-        BeaconStateCache.getTransitionCaches(state)\n-            .getValidatorsPubKeys()\n-            .get(\n-                exit.getValidator_index(),\n-                idx -> state.getValidators().get(toIntExact(idx.longValue())).getPubkey());\n+        ValidatorsUtil.getValidatorPubKey(state, exit.getValidator_index()).orElseThrow();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2Nzk3MQ=="}, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODI2NzM1OnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/Validator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjoxMTowOFrOH6FaSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQyMjoxMTowOFrOH6FaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2ODEwNw==", "bodyText": "nit: Can just use\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                fixedPartsList.addAll(Collections.singleton(getPubkey()));\n          \n          \n            \n                fixedPartsList.add(getPubkey());", "url": "https://github.com/ConsenSys/teku/pull/3314#discussion_r530668107", "createdAt": "2020-11-25T22:11:08Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/Validator.java", "diffHunk": "@@ -127,7 +129,7 @@ public int getSSZFieldCount() {\n   @Override\n   public List<Bytes> get_fixed_parts() {\n     List<Bytes> fixedPartsList = new ArrayList<>();\n-    fixedPartsList.addAll(getPubkey().get_fixed_parts());\n+    fixedPartsList.addAll(Collections.singleton(getPubkey()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9fc54ab10669681a35c1b2620f96584690c1cc7"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2886, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}