{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNTUyMTE3", "number": 2070, "title": "Apply changes from the validator spec", "bodyText": "PR Description\nUpdate the calculation used for subnet IDs.\nAdd requirement that Eth1Data votes must not reduce the number of deposits.\nFixed Issue(s)\nfixes #2034", "createdAt": "2020-06-08T01:13:10Z", "url": "https://github.com/ConsenSys/teku/pull/2070", "merged": true, "mergeCommit": {"oid": "d4453d306b16106d1f9a406554e3a1a5213bb6b5"}, "closed": true, "closedAt": "2020-06-08T22:03:22Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpF4zmgH2gAyNDMwNTUyMTE3OjQ0ODM4M2JkOTliMDg1NTI5YWJlNGJjMDMwODY2OWM3YjE2YWJjMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpXHXFAH2gAyNDMwNTUyMTE3OmU5YWE5ZTBkYTk2MDc0MTk4MWVhOWY2MTFjOGJmYjk3M2UxNWYzOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "448383bd99b085529abe4bc0308669c7b16abc05", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/448383bd99b085529abe4bc0308669c7b16abc05", "committedDate": "2020-06-08T01:08:33Z", "message": "Use new subnet ID calculation.\nAdd requirement that Eth1Data votes must not reduce the number of deposits."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/3a9fdd562ddd9ef740e4ce4a1c057e201e419606", "committedDate": "2020-06-08T01:52:07Z", "message": "Fix integration tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mjk4NjI1", "url": "https://github.com/ConsenSys/teku/pull/2070#pullrequestreview-426298625", "createdAt": "2020-06-08T14:27:36Z", "commit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyNzozNlrOGghNdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyNzozNlrOGghNdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1MTczMw==", "bodyText": "I'm confused with how we can be sure that these random attestations have the same subnetId?", "url": "https://github.com/ConsenSys/teku/pull/2070#discussion_r436751733", "createdAt": "2020-06-08T14:27:36Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/test/java/tech/pegasys/teku/networking/eth2/gossip/AttestationGossipManagerTest.java", "diffHunk": "@@ -52,39 +52,43 @@\n   private final GossipEncoding gossipEncoding = GossipEncoding.SSZ_SNAPPY;\n   private final TopicChannel topicChannel = mock(TopicChannel.class);\n   private AttestationGossipManager attestationGossipManager;\n+  private final AttestationSubnetSubscriptions attestationSubnetSubscriptions =\n+      new AttestationSubnetSubscriptions(\n+          gossipNetwork,\n+          gossipEncoding,\n+          attestationValidator,\n+          recentChainData,\n+          gossipedAttestationConsumer);\n \n   @BeforeEach\n   public void setup() {\n     BeaconChainUtil.create(0, recentChainData).initializeStorage();\n     doReturn(topicChannel).when(gossipNetwork).subscribe(contains(\"committee_index\"), any());\n-    AttestationSubnetSubscriptions attestationSubnetSubscriptions =\n-        new AttestationSubnetSubscriptions(\n-            gossipNetwork,\n-            gossipEncoding,\n-            attestationValidator,\n-            recentChainData,\n-            gossipedAttestationConsumer);\n     attestationGossipManager =\n         new AttestationGossipManager(gossipEncoding, attestationSubnetSubscriptions);\n   }\n \n   @Test\n   public void onNewAttestation_afterMatchingAssignment() {\n+    final Attestation attestation = dataStructureUtil.randomAttestation();\n+    final Attestation attestation2 =\n+        new Attestation(\n+            dataStructureUtil.randomBitlist(),\n+            dataStructureUtil.randomAttestationData(UnsignedLong.valueOf(13)),\n+            dataStructureUtil.randomSignature());\n+    final int subnetId = computeSubnetId(attestation);\n+    // Sanity check the attestations are for the same subnet\n+    assertThat(computeSubnetId(attestation2)).isEqualTo(subnetId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzE2NTgy", "url": "https://github.com/ConsenSys/teku/pull/2070#pullrequestreview-426316582", "createdAt": "2020-06-08T14:46:32Z", "commit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDo0NjozMlrOGgiCAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDo0NjozMlrOGgiCAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NTE4Nw==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Not point aggregating for historic slots and we can't calculate the subnet ID\n          \n          \n            \n                    // No point aggregating for historic slots and we can't calculate the subnet ID", "url": "https://github.com/ConsenSys/teku/pull/2070#discussion_r436765187", "createdAt": "2020-06-08T14:46:32Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -24,22 +23,40 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n import tech.pegasys.teku.datastructures.validator.SubnetSubscription;\n import tech.pegasys.teku.networking.eth2.Eth2Network;\n+import tech.pegasys.teku.storage.client.RecentChainData;\n import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n \n public class AttestationTopicSubscriber implements SlotEventsChannel {\n   private final Map<Integer, UnsignedLong> subnetIdToUnsubscribeSlot = new HashMap<>();\n   private final Set<Integer> persistentSubnetIdSet = new HashSet<>();\n   private final Eth2Network eth2Network;\n+  private final RecentChainData recentChainData;\n \n-  public AttestationTopicSubscriber(final Eth2Network eth2Network) {\n+  public AttestationTopicSubscriber(\n+      final Eth2Network eth2Network, final RecentChainData recentChainData) {\n     this.eth2Network = eth2Network;\n+    this.recentChainData = recentChainData;\n   }\n \n   public synchronized void subscribeToCommitteeForAggregation(\n       final int committeeIndex, final UnsignedLong aggregationSlot) {\n-    final int subnetId = committeeIndexToSubnetId(committeeIndex);\n+    recentChainData\n+        .getBestState()\n+        // Not point aggregating for historic slots and we can't calculate the subnet ID", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzE4OTk3", "url": "https://github.com/ConsenSys/teku/pull/2070#pullrequestreview-426318997", "createdAt": "2020-06-08T14:49:06Z", "commit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzM3Nzc4", "url": "https://github.com/ConsenSys/teku/pull/2070#pullrequestreview-426337778", "createdAt": "2020-06-08T15:07:07Z", "commit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTowNzowN1rOGgi_Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTowNzowN1rOGgi_Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MDg0Ng==", "bodyText": "Not sure I understand this line - don't we set up subscriptions at the beginning of each epoch, so wouldn't we expect that the aggregationSlot will be in the future?  Should this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .filter(state -> state.getSlot().compareTo(aggregationSlot) <= 0)\n          \n          \n            \n                    .filter(state -> state.getSlot().compareTo(aggregationSlot) > 0)\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/ConsenSys/teku/pull/2070#discussion_r436780846", "createdAt": "2020-06-08T15:07:07Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -24,22 +23,40 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.Set;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n import tech.pegasys.teku.datastructures.validator.SubnetSubscription;\n import tech.pegasys.teku.networking.eth2.Eth2Network;\n+import tech.pegasys.teku.storage.client.RecentChainData;\n import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n \n public class AttestationTopicSubscriber implements SlotEventsChannel {\n   private final Map<Integer, UnsignedLong> subnetIdToUnsubscribeSlot = new HashMap<>();\n   private final Set<Integer> persistentSubnetIdSet = new HashSet<>();\n   private final Eth2Network eth2Network;\n+  private final RecentChainData recentChainData;\n \n-  public AttestationTopicSubscriber(final Eth2Network eth2Network) {\n+  public AttestationTopicSubscriber(\n+      final Eth2Network eth2Network, final RecentChainData recentChainData) {\n     this.eth2Network = eth2Network;\n+    this.recentChainData = recentChainData;\n   }\n \n   public synchronized void subscribeToCommitteeForAggregation(\n       final int committeeIndex, final UnsignedLong aggregationSlot) {\n-    final int subnetId = committeeIndexToSubnetId(committeeIndex);\n+    recentChainData\n+        .getBestState()\n+        // Not point aggregating for historic slots and we can't calculate the subnet ID\n+        .filter(state -> state.getSlot().compareTo(aggregationSlot) <= 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9fdd562ddd9ef740e4ce4a1c057e201e419606"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752952786557054cb670d24d0aa5c9b981bb3f90", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/752952786557054cb670d24d0aa5c9b981bb3f90", "committedDate": "2020-06-08T21:03:47Z", "message": "Merge branch '0.12.1-integration' of github.com:PegaSysEng/teku into validator-changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9aa9e0da960741981ea9f611c8bfb973e15f392", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/e9aa9e0da960741981ea9f611c8bfb973e15f392", "committedDate": "2020-06-08T21:12:50Z", "message": "Fix typo."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3861, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}