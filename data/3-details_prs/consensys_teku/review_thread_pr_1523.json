{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzY1MDky", "number": 1523, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NToxMFrODtzaIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozOFrODtzb5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzU0Nzg3OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NToxMFrOF_cDcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDowOTo1NVrOF_7org==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {\n          \n          \n            \n              void shouldGetNotFoundAtFutureEpochWhenBlockIsMissing() throws Exception {", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402064242", "createdAt": "2020-04-02T05:45:10Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtNextEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(3);\n+    assertThat(result.get(0).slot).isEqualTo(TWENTY_FOUR);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6055058c1108c4bafed2a6b2c128e30b048a3b6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NjQyOQ==", "bodyText": "actually isn't the \"when block is missing\" bit irrelevant - block will always be missing for future epoch, right?", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402066429", "createdAt": "2020-04-02T05:52:54Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtNextEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(3);\n+    assertThat(result.get(0).slot).isEqualTo(TWENTY_FOUR);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg=="}, "originalCommit": {"oid": "f6055058c1108c4bafed2a6b2c128e30b048a3b6"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MTY3OA==", "bodyText": "yep fair point", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402581678", "createdAt": "2020-04-02T20:09:55Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtNextEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(3);\n+    assertThat(result.get(0).slot).isEqualTo(TWENTY_FOUR);\n+  }\n+\n+  @Test\n+  void shouldGetCommitteesAtFutureEpochWhenBlockIsMissing() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDI0Mg=="}, "originalCommit": {"oid": "f6055058c1108c4bafed2a6b2c128e30b048a3b6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzU1MjM4OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozOFrOF_cGGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNTo0NzozOFrOF_cGGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2NDkyMA==", "bodyText": "would it be clearer if instead of sixteen we had requestedEpoch * slots_per_epoch", "url": "https://github.com/ConsenSys/teku/pull/1523#discussion_r402064920", "createdAt": "2020-04-02T05:47:38Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetCommitteesWithDataIntegrationTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+import okhttp3.Response;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.api.schema.Committee;\n+import tech.pegasys.artemis.beaconrestapi.AbstractDataBackedRestAPIIntegrationTest;\n+import tech.pegasys.artemis.beaconrestapi.RestApiConstants;\n+import tech.pegasys.artemis.beaconrestapi.handlers.beacon.GetCommittees;\n+\n+public class GetCommitteesWithDataIntegrationTest extends AbstractDataBackedRestAPIIntegrationTest {\n+\n+  public static final UnsignedLong TWENTY = UnsignedLong.valueOf(20L);\n+  public static final UnsignedLong SIXTEEN = UnsignedLong.valueOf(16L);\n+  public static final UnsignedLong TWENTY_FOUR = UnsignedLong.valueOf(24L);\n+\n+  @Test\n+  void shouldGetCommitteesAtCurrentEpochWhenBlockIsMissing() throws Exception {\n+    withBlockDataAtSlot(NINE, TEN, TWENTY);\n+\n+    List<Committee> result = getCommitteesByEpoch(2);\n+    assertThat(result.get(0).slot).isEqualTo(SIXTEEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6055058c1108c4bafed2a6b2c128e30b048a3b6"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1806, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}