{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzAxOTI0", "number": 1827, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo0MjozNlrOD-WNAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1NTowMlrOD-Wd8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzAyMDgxOnYy", "diffSide": "RIGHT", "path": "bls/src/main/java/tech/pegasys/teku/bls/hashToG2/Helper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo0MjozNlrOGYZM6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDo0ODoxNlrOGYdQiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzMTkxMw==", "bodyText": "(nit) Might be a good idea to make the methods that are directly used in production public, and either mark the other methods private or keep them package-private and annotate them with @VisibleForTesting.  This just makes it easier to see which methods are internal-only vs used externally.", "url": "https://github.com/ConsenSys/teku/pull/1827#discussion_r428231913", "createdAt": "2020-05-20T18:42:36Z", "author": {"login": "mbaxter"}, "path": "bls/src/main/java/tech/pegasys/teku/bls/hashToG2/Helper.java", "diffHunk": "@@ -54,14 +58,25 @@ static boolean isOnCurve(JacobianPoint p) {\n   /**\n    * Tests whether the given point lies in the G2 group.\n    *\n-   * <p>Once the GLV patent has expired we can replace the qChain with the endomorphism here:\n-   * https://eprint.iacr.org/2019/814.pdf\n-   *\n    * @param p a JacobianPoint\n    * @return true if the point is in G2, false otherwise\n    */\n   static boolean isInG2(JacobianPoint p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0c316a80d7379d04ec35dc19717868fa7d17c8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI5ODM3OQ==", "bodyText": "I'll be doing another pass through everything for the v0.12 update, and will consider holding my nose and adding @VisibleForTesting to everything. Very little can be marked private currently as just about every method has a corresponding unit test.\nThis is another reason I try not to write too much Java \ud83d\ude1b.", "url": "https://github.com/ConsenSys/teku/pull/1827#discussion_r428298379", "createdAt": "2020-05-20T20:48:16Z", "author": {"login": "benjaminion"}, "path": "bls/src/main/java/tech/pegasys/teku/bls/hashToG2/Helper.java", "diffHunk": "@@ -54,14 +58,25 @@ static boolean isOnCurve(JacobianPoint p) {\n   /**\n    * Tests whether the given point lies in the G2 group.\n    *\n-   * <p>Once the GLV patent has expired we can replace the qChain with the endomorphism here:\n-   * https://eprint.iacr.org/2019/814.pdf\n-   *\n    * @param p a JacobianPoint\n    * @return true if the point is in G2, false otherwise\n    */\n   static boolean isInG2(JacobianPoint p) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzMTkxMw=="}, "originalCommit": {"oid": "2f0c316a80d7379d04ec35dc19717868fa7d17c8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzA2NDE2OnYy", "diffSide": "RIGHT", "path": "bls/src/test/java/tech/pegasys/teku/bls/hashToG2/HelperTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1NTowMlrOGYZnzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDo1MDowNFrOGYdT7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzODc5Nw==", "bodyText": "(optional) Might be worth running this a few times, although looks like we have another test that basically does this already.", "url": "https://github.com/ConsenSys/teku/pull/1827#discussion_r428238797", "createdAt": "2020-05-20T18:55:02Z", "author": {"login": "mbaxter"}, "path": "bls/src/test/java/tech/pegasys/teku/bls/hashToG2/HelperTest.java", "diffHunk": "@@ -206,8 +212,32 @@ void clearH2Test() {\n   }\n \n   @Test\n-  void pointIsInG2() {\n+  void clearH2TestCompare() {\n+    // Check that the implementation of clear_h2() matches the slower method for an arbitrary point\n     JacobianPoint a =\n+        new JacobianPoint(\n+            new FP2Immutable(\n+                \"0x0c8977fab5175ac2f09e5f39e29d016f11c094ef10f237d2a5e23f482d0bfb4466688527cd31685bfe481725c31462cc\",\n+                \"0x0b305838069012861bb63501841c91bd5bc7e1359d44cd196681fb14c03e544c22205bced326d490eb886aaa3ed52918\"),\n+            new FP2Immutable(\n+                \"0x172cf997b3501882861c07e852fadbf5753eb8a3e1d2ce375e6aed07cf9c1b5ff1cbf1124c6e3b0cf4607c683eafd1a4\",\n+                \"0x0d9dacf241a753d55cff6d45b568b716a2ad68ba29d23f92dea6e7cf6ed54e96cdac4a2b95213f93439b946ebc63349c\"),\n+            new FP2Immutable(\n+                \"0x05594bb289f0ebfd8fa3f020c6e1eaf4c49b97d8ccaf3470a3a02da4b3e7104778105bd6c7e0caf97206c77a8b501d4d\",\n+                \"0x0625151f905fad40eb0e2b9b0a46d9afe531256c6d5e39897a27d94700f037a761a741d11275180bd18e620289e02a16\"));\n+    assertEquals(clear_h2_slow(a), clear_h2(a));\n+  }\n+\n+  @Test\n+  void G2MapToInfinityTest() {\n+    // The generator point of G2 is certainly in G2\n+    JacobianPoint g2Generator = new JacobianPoint(ECP2.generator());\n+    assertTrue(g2_map_to_infinity(g2Generator).isInfinity());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f0c316a80d7379d04ec35dc19717868fa7d17c8"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI5OTI0NQ==", "bodyText": "Yes, this is just a quick unit test to catch if it get's broken somehow. The smoke test exercises things more thoroughly.", "url": "https://github.com/ConsenSys/teku/pull/1827#discussion_r428299245", "createdAt": "2020-05-20T20:50:04Z", "author": {"login": "benjaminion"}, "path": "bls/src/test/java/tech/pegasys/teku/bls/hashToG2/HelperTest.java", "diffHunk": "@@ -206,8 +212,32 @@ void clearH2Test() {\n   }\n \n   @Test\n-  void pointIsInG2() {\n+  void clearH2TestCompare() {\n+    // Check that the implementation of clear_h2() matches the slower method for an arbitrary point\n     JacobianPoint a =\n+        new JacobianPoint(\n+            new FP2Immutable(\n+                \"0x0c8977fab5175ac2f09e5f39e29d016f11c094ef10f237d2a5e23f482d0bfb4466688527cd31685bfe481725c31462cc\",\n+                \"0x0b305838069012861bb63501841c91bd5bc7e1359d44cd196681fb14c03e544c22205bced326d490eb886aaa3ed52918\"),\n+            new FP2Immutable(\n+                \"0x172cf997b3501882861c07e852fadbf5753eb8a3e1d2ce375e6aed07cf9c1b5ff1cbf1124c6e3b0cf4607c683eafd1a4\",\n+                \"0x0d9dacf241a753d55cff6d45b568b716a2ad68ba29d23f92dea6e7cf6ed54e96cdac4a2b95213f93439b946ebc63349c\"),\n+            new FP2Immutable(\n+                \"0x05594bb289f0ebfd8fa3f020c6e1eaf4c49b97d8ccaf3470a3a02da4b3e7104778105bd6c7e0caf97206c77a8b501d4d\",\n+                \"0x0625151f905fad40eb0e2b9b0a46d9afe531256c6d5e39897a27d94700f037a761a741d11275180bd18e620289e02a16\"));\n+    assertEquals(clear_h2_slow(a), clear_h2(a));\n+  }\n+\n+  @Test\n+  void G2MapToInfinityTest() {\n+    // The generator point of G2 is certainly in G2\n+    JacobianPoint g2Generator = new JacobianPoint(ECP2.generator());\n+    assertTrue(g2_map_to_infinity(g2Generator).isInfinity());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzODc5Nw=="}, "originalCommit": {"oid": "2f0c316a80d7379d04ec35dc19717868fa7d17c8"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3645, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}