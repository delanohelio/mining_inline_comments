{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NDQxNDQ0", "number": 3281, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MTo0MVrOE8ESwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MzowN1rOE8ETgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDIwMzUyOnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MTo0MVrOH3_Myg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MTo0MVrOH3_Myg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ2OTE5NA==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                checkArgument(\n          \n          \n            \n                    attestationData.getSlot().equals(slot),\n          \n          \n            \n                    \"Unsigned attestation slot ( \"\n          \n          \n            \n                        + attestationData.getSlot()\n          \n          \n            \n                        + \") does not match expected slot \"\n          \n          \n            \n                        + slot);\n          \n          \n            \n                checkArgument(\n          \n          \n            \n                    attestationData.getSlot().equals(slot),\n          \n          \n            \n                    \"Unsigned attestation slot (%s) does not match expected slot %s\",\n          \n          \n            \n                     attestationData.getSlot(),\n          \n          \n            \n                     slot);", "url": "https://github.com/ConsenSys/teku/pull/3281#discussion_r528469194", "createdAt": "2020-11-23T04:41:41Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/AttestationProductionDuty.java", "diffHunk": "@@ -140,6 +141,12 @@ public String getProducedType() {\n       final ForkInfo forkInfo,\n       final AttestationData attestationData,\n       final ValidatorWithCommitteePositionAndIndex validator) {\n+    checkArgument(\n+        attestationData.getSlot().equals(slot),\n+        \"Unsigned attestation slot ( \"\n+            + attestationData.getSlot()\n+            + \") does not match expected slot \"\n+            + slot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDIwNTQ3OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MzowN1rOH3_N4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNDo0MzowN1rOH3_N4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ2OTQ3NA==", "bodyText": "Can use same %s format trick as above to avoid creating the string until its actually needed.\nI'd probably extract the unsignedBlock.orElseThrow below to a variable and then you can just use it directly here as well rather than needing an ifPresent block.", "url": "https://github.com/ConsenSys/teku/pull/3281#discussion_r528469474", "createdAt": "2020-11-23T04:43:07Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/duties/BlockProductionDuty.java", "diffHunk": "@@ -96,6 +97,14 @@ public String getProducedType() {\n \n   public SafeFuture<SignedBeaconBlock> signBlock(\n       final ForkInfo forkInfo, final Optional<BeaconBlock> unsignedBlock) {\n+    unsignedBlock.ifPresent(\n+        beaconBlock ->\n+            checkArgument(\n+                beaconBlock.getSlot().equals(slot),\n+                \"Unsigned block slot ( \"\n+                    + beaconBlock.getSlot()\n+                    + \") does not match expected slot \"\n+                    + slot));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89a6d1ff3540d2022f29f8df0edcb47cb8a67f0"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2867, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}