{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzMzODM3", "number": 1318, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyMjoyNVrODmV9yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyMjoyNVrODmV9yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTMyMzYxOnYy", "diffSide": "RIGHT", "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/discovery/ConnectionManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyMjoyNVrOFztOtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNToyMjoyNVrOFztOtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc2Mjc0MA==", "bodyText": "Stale comment:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Should disconnect one peer to get back down to our target of max 1 peer.\n          \n          \n            \n                // Should not disconnect static peers", "url": "https://github.com/ConsenSys/teku/pull/1318#discussion_r389762740", "createdAt": "2020-03-09T15:22:25Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/discovery/ConnectionManagerTest.java", "diffHunk": "@@ -362,6 +362,26 @@ public void shouldDisconnectPeersWhenPeerCountExceedsLimit() {\n     assertThat(peer1.isConnected()).isTrue();\n   }\n \n+  @Test\n+  public void shouldNotDisconnectStaticPeersWhenPeerCountExceedsLimit() {\n+    final StubPeer peer1 = new StubPeer(new MockNodeId(1));\n+    final StubPeer peer2 = new StubPeer(new MockNodeId(2));\n+    final ConnectionManager manager = createManager(new TargetPeerRange(1, 1), PEER1, PEER2);\n+    when(network.connect(PEER1)).thenReturn(SafeFuture.completedFuture(peer1));\n+    when(network.connect(PEER2)).thenReturn(SafeFuture.completedFuture(peer2));\n+    manager.start().join();\n+\n+    final PeerConnectedSubscriber<Peer> peerConnectedSubscriber = getPeerConnectedSubscriber();\n+\n+    when(network.streamPeers()).thenReturn(Stream.of(peer2, peer1));\n+    when(network.getPeerCount()).thenReturn(2);\n+    peerConnectedSubscriber.onConnected(peer1);\n+\n+    // Should disconnect one peer to get back down to our target of max 1 peer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f601e72f1febf53966045cccecc242b9b6546f8b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2503, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}