{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODE5NDg3", "number": 1625, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxMjo1MVrODzx0Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxNzo0N1rODzx-gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjIwMTM5OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/ValidatorClientService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxMjo1MVrOGIZfUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxMjo1MVrOGIZfUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ1OTQwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final ValidatorTimingChannel validatorClient =\n          \n          \n            \n                final ValidatorTimingChannel validatorTimingChannel =", "url": "https://github.com/ConsenSys/teku/pull/1625#discussion_r411459409", "createdAt": "2020-04-20T15:12:51Z", "author": {"login": "mbaxter"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/ValidatorClientService.java", "diffHunk": "@@ -48,10 +48,14 @@ public static ValidatorClientService create(final ServiceConfig config) {\n         ValidatorLoader.initializeValidators(config.getConfig());\n     final ValidatorDutyFactory validatorDutyFactory =\n         new ValidatorDutyFactory(forkProvider, validatorApiChannel);\n-    final ScheduledDuties scheduledDuties = new ScheduledDuties(validatorDutyFactory);\n-    final DutyScheduler validatorClient =\n+    final ValidatorTimingChannel validatorClient =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "622a558f7519e16b2d826bd1e776626a64be7093"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjIyMzQ2OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/EpochDutiesScheduler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxNjo0N1rOGIZsXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMToyMjo1N1rOGIoQlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ2Mjc0OQ==", "bodyText": "Do we need to make sure to refresh the fork info when a reorg occurs?", "url": "https://github.com/ConsenSys/teku/pull/1625#discussion_r411462749", "createdAt": "2020-04-20T15:16:47Z", "author": {"login": "mbaxter"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/EpochDutiesScheduler.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.artemis.bls.BLSPublicKey;\n+import tech.pegasys.artemis.datastructures.operations.Attestation;\n+import tech.pegasys.artemis.datastructures.util.CommitteeUtil;\n+import tech.pegasys.artemis.util.async.AsyncRunner;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.api.ValidatorApiChannel;\n+import tech.pegasys.artemis.validator.api.ValidatorDuties;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+class EpochDutiesScheduler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  private final AsyncRunner asyncRunner;\n+  private final ValidatorApiChannel validatorApiChannel;\n+  private final ForkProvider forkProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "622a558f7519e16b2d826bd1e776626a64be7093"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcwMTM5OA==", "bodyText": "I don't think so.  The Fork data includes both \"current\" and \"previous\" forks and which epoch \"current\" takes effect.  Forks would be scheduled well in advance (and would require upgraded client software) so even if the reorg activated or deactivated a fork, the actual Fork data would still be the same - just a question of whether we are now before or after the appropriate epoch.", "url": "https://github.com/ConsenSys/teku/pull/1625#discussion_r411701398", "createdAt": "2020-04-20T21:22:57Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/EpochDutiesScheduler.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.artemis.bls.BLSPublicKey;\n+import tech.pegasys.artemis.datastructures.operations.Attestation;\n+import tech.pegasys.artemis.datastructures.util.CommitteeUtil;\n+import tech.pegasys.artemis.util.async.AsyncRunner;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.api.ValidatorApiChannel;\n+import tech.pegasys.artemis.validator.api.ValidatorDuties;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+class EpochDutiesScheduler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  private final AsyncRunner asyncRunner;\n+  private final ValidatorApiChannel validatorApiChannel;\n+  private final ForkProvider forkProvider;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ2Mjc0OQ=="}, "originalCommit": {"oid": "622a558f7519e16b2d826bd1e776626a64be7093"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjIyNzg3OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/DutyScheduler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxNzo0N1rOGIZvMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxNzo0N1rOGIZvMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ2MzQ3NQ==", "bodyText": "Nice refactor :D", "url": "https://github.com/ConsenSys/teku/pull/1625#discussion_r411463475", "createdAt": "2020-04-20T15:17:47Z", "author": {"login": "mbaxter"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/DutyScheduler.java", "diffHunk": "@@ -16,232 +16,65 @@\n import static com.google.common.primitives.UnsignedLong.ONE;\n import static tech.pegasys.artemis.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n \n-import com.google.common.base.Throwables;\n import com.google.common.primitives.UnsignedLong;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicReference;\n-import java.util.function.Consumer;\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.Logger;\n-import tech.pegasys.artemis.bls.BLSPublicKey;\n-import tech.pegasys.artemis.datastructures.operations.Attestation;\n-import tech.pegasys.artemis.datastructures.util.CommitteeUtil;\n-import tech.pegasys.artemis.util.async.AsyncRunner;\n-import tech.pegasys.artemis.util.async.SafeFuture;\n-import tech.pegasys.artemis.util.config.Constants;\n-import tech.pegasys.artemis.validator.api.NodeSyncingException;\n-import tech.pegasys.artemis.validator.api.ValidatorApiChannel;\n-import tech.pegasys.artemis.validator.api.ValidatorDuties;\n+import java.util.NavigableMap;\n+import java.util.TreeMap;\n+import java.util.function.BiConsumer;\n import tech.pegasys.artemis.validator.api.ValidatorTimingChannel;\n-import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n \n public class DutyScheduler implements ValidatorTimingChannel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "622a558f7519e16b2d826bd1e776626a64be7093"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1675, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}