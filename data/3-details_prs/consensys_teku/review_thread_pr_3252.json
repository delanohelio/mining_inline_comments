{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzk0OTgx", "number": 3252, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNzo0NlrOE6uvHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjo0OTo1OVrOE6zMmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDE4NTg4OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNzo0NlrOH1-lmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozMzoyOVrOH1-zQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MjAwOQ==", "bodyText": "I thought we needed to set this when we check the signatures in AttestationValidator and AggregateAttestationValidator from AttestationManager", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526362009", "createdAt": "2020-11-18T19:27:46Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -434,6 +440,7 @@ private static AttestationProcessingResult indexAndValidateAttestation(\n     return is_valid_indexed_attestation(targetState, indexedAttestation)\n         .ifSuccessful(\n             () -> {\n+              attestation.setValidIndexedAttestation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d7eaf32a429c1a8a224712276b18fc88d714760"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NTUwNg==", "bodyText": "You're right I completely missed that.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526365506", "createdAt": "2020-11-18T19:33:29Z", "author": {"login": "cemozerr"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -434,6 +440,7 @@ private static AttestationProcessingResult indexAndValidateAttestation(\n     return is_valid_indexed_attestation(targetState, indexedAttestation)\n         .ifSuccessful(\n             () -> {\n+              attestation.setValidIndexedAttestation();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MjAwOQ=="}, "originalCommit": {"oid": "4d7eaf32a429c1a8a224712276b18fc88d714760"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDMwODA4OnYy", "diffSide": "RIGHT", "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo1ODo0NlrOH1_vSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDoxNDoyMVrOH2ASWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MDg3NQ==", "bodyText": "Would is make sense to pass the ValidatableAttestation to a new version of is_valid_indexed_attestation?  This new method could return early if the isValidIndexedAttestation is already set, and otherwise delegate to the existing method that accepts the plain attestation, then set isValidIndexedAttestation.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526380875", "createdAt": "2020-11-18T19:58:46Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java", "diffHunk": "@@ -186,6 +186,8 @@ private InternalValidationResult singleAttestationChecks(final Attestation attes\n               if (!is_valid_indexed_attestation(state, indexedAttestation).isSuccessful()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996a68046c95310f3d7577d01d78c299545ad3e6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4OTg0OQ==", "bodyText": "Makes sense.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526389849", "createdAt": "2020-11-18T20:14:21Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/validation/AttestationValidator.java", "diffHunk": "@@ -186,6 +186,8 @@ private InternalValidationResult singleAttestationChecks(final Attestation attes\n               if (!is_valid_indexed_attestation(state, indexedAttestation).isSuccessful()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MDg3NQ=="}, "originalCommit": {"oid": "996a68046c95310f3d7577d01d78c299545ad3e6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQzODM2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMjozNlrOH2BBmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0MTozM1rOH2BUzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMTk0Ng==", "bodyText": "Instead of short-circuiting here, I think you can just use the new is_valid_indexed_attestation method in indexAndValidateAttestation", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526401946", "createdAt": "2020-11-18T20:32:36Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,13 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (validateableAttestation.isValidIndexedAttestation()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a292950f78fdaa4026244615f931fd715601a070"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwNjg2MQ==", "bodyText": "Done, but I again had to check for target state being empty to return unknown block. So I again had to short circuit.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526406861", "createdAt": "2020-11-18T20:41:33Z", "author": {"login": "cemozerr"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,13 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (validateableAttestation.isValidIndexedAttestation()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMTk0Ng=="}, "originalCommit": {"oid": "a292950f78fdaa4026244615f931fd715601a070"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ5MTUwOnYy", "diffSide": "LEFT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODowOFrOH2BidQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToxMDoyNVrOH2CR-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDM1Nw==", "bodyText": "Looks like you can cut indexAndValidateAttestation altogether now.  Just wondering if we need the call to attestation.saveCommitteeShufflingSeed(targetState); that's in that method?", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526410357", "createdAt": "2020-11-18T20:48:08Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,15 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "582bda4f5f7b528aa27e96454b00de0bd140460c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMjUyMA==", "bodyText": "Good catch. Added that method call to an ifSuccesful block right after this one.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526422520", "createdAt": "2020-11-18T21:10:25Z", "author": {"login": "cemozerr"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +385,15 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDM1Nw=="}, "originalCommit": {"oid": "582bda4f5f7b528aa27e96454b00de0bd140460c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDkxNjczOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMjo0OTo1OVrOH2Fiag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1Mjo1NFrOH2HAgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3NTg4Mg==", "bodyText": "(nit) Might be a little cleaner to move this try / catch into is_valid_indexed_attestation", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526475882", "createdAt": "2020-11-18T22:49:59Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +383,20 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (maybeTargetState.isEmpty()) {\n+                return AttestationProcessingResult.UNKNOWN_BLOCK;\n+              } else {\n+                try {\n+                  return is_valid_indexed_attestation(\n+                      maybeTargetState.get(), validateableAttestation);\n+                } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a07e6b762a93760136d6c53860591ade156c7ae9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5OTk2OA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/3252#discussion_r526499968", "createdAt": "2020-11-18T23:52:54Z", "author": {"login": "cemozerr"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -385,7 +383,20 @@ public static AttestationProcessingResult on_attestation(\n     Attestation attestation = validateableAttestation.getAttestation();\n \n     return validateOnAttestation(store, attestation, forkChoiceStrategy)\n-        .ifSuccessful(() -> indexAndValidateAttestation(validateableAttestation, maybeTargetState))\n+        .ifSuccessful(\n+            () -> {\n+              if (maybeTargetState.isEmpty()) {\n+                return AttestationProcessingResult.UNKNOWN_BLOCK;\n+              } else {\n+                try {\n+                  return is_valid_indexed_attestation(\n+                      maybeTargetState.get(), validateableAttestation);\n+                } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ3NTg4Mg=="}, "originalCommit": {"oid": "a07e6b762a93760136d6c53860591ade156c7ae9"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}