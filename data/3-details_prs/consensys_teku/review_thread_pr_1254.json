{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMTkwMzU4", "number": 1254, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzowMzo1OFrODkKUBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1OTozNFrODk0Fbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjQ0MjkzOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzowMzo1OFrOFwVPBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzowMzo1OFrOFwVPBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyMzg3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  description = \"Request a list of the Committee assignments for a given epoch.\",\n          \n          \n            \n                  description = \"Request a list of the committee assignments for a given epoch.\",", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386223878", "createdAt": "2020-03-02T07:03:58Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",\n+      tags = {TAG_BEACON},\n+      queryParams = {\n+        @OpenApiParam(\n+            name = EPOCH,\n+            description = \"The epoch for which committees will be returned.\",\n+            required = true),\n+      },\n+      description = \"Request a list of the Committee assignments for a given epoch.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjQ0OTQ0OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzowNzo0NlrOFwVS3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDozOTowNFrOFw4Icw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNDg2Mw==", "bodyText": "committee assignments?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386224863", "createdAt": "2020-03-02T07:07:46Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNTI3MQ==", "bodyText": "will people reading this know what committee indices are?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386225271", "createdAt": "2020-03-02T07:09:34Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNDg2Mw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY0NDk0Ng==", "bodyText": "Committee indices is the correct term from the spec.  A committee assignment is the set of committee indices in the committee.", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386644946", "createdAt": "2020-03-02T20:56:03Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNDg2Mw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2MjU1Mw==", "bodyText": "so should i leave this comment as-is? or change the 'get the committees' to 'get the committee assignments'?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386762553", "createdAt": "2020-03-03T02:12:47Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNDg2Mw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc5NTYzNQ==", "bodyText": "It's probably fine as-is but suspect Get the committee assignments for a given epoch is all that's actually required and probably the most accurate.  @benjaminion ?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386795635", "createdAt": "2020-03-03T04:39:04Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconCommitteesHandler.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiUtils.validateQueryParameter;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiParam;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.CommitteesResponse;\n+import tech.pegasys.artemis.datastructures.state.CommitteeAssignment;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.CombinedChainDataClient;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+\n+public class BeaconCommitteesHandler implements Handler {\n+\n+  public static final String ROUTE = \"/beacon/committees\";\n+\n+  private final CombinedChainDataClient combinedClient;\n+  private final JsonProvider jsonProvider;\n+\n+  public BeaconCommitteesHandler(\n+      CombinedChainDataClient combinedClient, JsonProvider jsonProvider) {\n+    this.combinedClient = combinedClient;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get the committees for all slots and committee indices in a given epoch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNDg2Mw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTk2NDAwOnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo0MTozNFrOFw2j-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjowODowMVrOFw5WmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2OTkxMw==", "bodyText": "You can just use thenApply here and not need to wrap in a completedFuture.", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386769913", "createdAt": "2020-03-03T02:41:34Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,4 +185,49 @@ private boolean isFinalized(final UnsignedLong slot) {\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public boolean isStoreAvailable() {\n+    return (recentChainData.getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong startingSlot = compute_start_slot_at_epoch(epoch);\n+\n+    SafeFuture<Optional<BeaconState>> future =\n+        getStateAtSlot(startingSlot, recentChainData.getBestBlockRoot());\n+    if (future != null) {\n+      return future\n+          .thenCompose(\n+              optionalState ->\n+                  completedFuture(getCommitteesFromStateWithCache(optionalState, startingSlot)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNTY0MA==", "bodyText": "sounds less messy", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386815640", "createdAt": "2020-03-03T06:08:01Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,4 +185,49 @@ private boolean isFinalized(final UnsignedLong slot) {\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public boolean isStoreAvailable() {\n+    return (recentChainData.getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong startingSlot = compute_start_slot_at_epoch(epoch);\n+\n+    SafeFuture<Optional<BeaconState>> future =\n+        getStateAtSlot(startingSlot, recentChainData.getBestBlockRoot());\n+    if (future != null) {\n+      return future\n+          .thenCompose(\n+              optionalState ->\n+                  completedFuture(getCommitteesFromStateWithCache(optionalState, startingSlot)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2OTkxMw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTk3NzQ2OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/artemis/storage/CombinedChainDataClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo0OTo1NFrOFw2sHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo0OTo1NFrOFw2sHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc3MTk5Nw==", "bodyText": "AssertJ?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386771997", "createdAt": "2020-03-03T02:49:54Z", "author": {"login": "mark-terry"}, "path": "storage/src/test/java/tech/pegasys/artemis/storage/CombinedChainDataClientTest.java", "diffHunk": "@@ -231,6 +235,16 @@ public void getBlockInEffectAtSlot_returnPreviousBlockWhenSlotWasEmpty() {\n         .isCompletedWithValue(Optional.of(block));\n   }\n \n+  @Test\n+  public void getCommitteesFromStateWithCache_shouldReturnCommitteeAssignments() {\n+    BeaconStateWithCache stateWithCache =\n+        BeaconStateWithCache.fromBeaconState(DataStructureUtil.randomBeaconState(11233));\n+    List<CommitteeAssignment> data =\n+        client.getCommitteesFromStateWithCache(\n+            Optional.of(stateWithCache), stateWithCache.getSlot());\n+    assertEquals(8, data.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d324f43a774eead142352599bc07d20c791131c7"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTk4MDQ5OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo1MTozN1rOFw2t9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo1MTozN1rOFw2t9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc3MjQ2OQ==", "bodyText": "When is this null?  If the store is null?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386772469", "createdAt": "2020-03-03T02:51:37Z", "author": {"login": "mark-terry"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,4 +185,49 @@ private boolean isFinalized(final UnsignedLong slot) {\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public boolean isStoreAvailable() {\n+    return (recentChainData.getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong startingSlot = compute_start_slot_at_epoch(epoch);\n+\n+    SafeFuture<Optional<BeaconState>> future =\n+        getStateAtSlot(startingSlot, recentChainData.getBestBlockRoot());\n+    if (future != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d324f43a774eead142352599bc07d20c791131c7"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTk4NzIzOnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjo1NTo0NVrOFw2x-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjoxMzoxNFrOFw5bQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc3MzQ5Nw==", "bodyText": "Committees are always calculated for one epoch ahead.  So if you want to calculate committees for epoch you need to get the state for epoch - 1.  The exception is epoch 0 which uses genesisState (as does epoch 1).\nSo you are actually able to calculate committees up to one epoch ahead of the current one.", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386773497", "createdAt": "2020-03-03T02:55:45Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,4 +185,49 @@ private boolean isFinalized(final UnsignedLong slot) {\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public boolean isStoreAvailable() {\n+    return (recentChainData.getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong startingSlot = compute_start_slot_at_epoch(epoch);\n+\n+    SafeFuture<Optional<BeaconState>> future =\n+        getStateAtSlot(startingSlot, recentChainData.getBestBlockRoot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNjgzMw==", "bodyText": "ok i've done that and now i think our testing may be inadequate as no tests broke, suggesting that there's too much mocking to see this pretty significant change.", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r386816833", "createdAt": "2020-03-03T06:13:14Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,4 +185,49 @@ private boolean isFinalized(final UnsignedLong slot) {\n     }\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n+\n+  public boolean isStoreAvailable() {\n+    return (recentChainData.getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong startingSlot = compute_start_slot_at_epoch(epoch);\n+\n+    SafeFuture<Optional<BeaconState>> future =\n+        getStateAtSlot(startingSlot, recentChainData.getBestBlockRoot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc3MzQ5Nw=="}, "originalCommit": {"oid": "f04b92cf1db69ea3587ab549a57257a1d248d77b"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI4Njg3OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1OTozNFrOFxWT7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTo0NTowNlrOFxXqlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDA5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);\n          \n          \n            \n                final UnsignedLong epochToCalculateCommittees = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r387290094", "createdAt": "2020-03-03T20:59:34Z", "author": {"login": "macfarla"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,6 +187,47 @@ private boolean isFinalized(final UnsignedLong slot) {\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n \n+  public boolean isStoreAvailable() {\n+    return (getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bde02d21215e8682824b2265d990c872dc3fc1c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDIxOA==", "bodyText": "names are hard. still don't love it", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r387290218", "createdAt": "2020-03-03T20:59:50Z", "author": {"login": "macfarla"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,6 +187,47 @@ private boolean isFinalized(final UnsignedLong slot) {\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n \n+  public boolean isStoreAvailable() {\n+    return (getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDA5NA=="}, "originalCommit": {"oid": "2bde02d21215e8682824b2265d990c872dc3fc1c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxMjI3OA==", "bodyText": "also I don't get why we need to get committees at epoch - 1. Is it self-explanatory or do we need to make it clear?", "url": "https://github.com/ConsenSys/teku/pull/1254#discussion_r387312278", "createdAt": "2020-03-03T21:45:06Z", "author": {"login": "macfarla"}, "path": "storage/src/main/java/tech/pegasys/artemis/storage/CombinedChainDataClient.java", "diffHunk": "@@ -178,6 +187,47 @@ private boolean isFinalized(final UnsignedLong slot) {\n     return Optional.ofNullable(recentChainData.getBestBlockRoot());\n   }\n \n+  public boolean isStoreAvailable() {\n+    return (getStore() != null);\n+  }\n+\n+  /**\n+   * Gets a list of CommitteeAssignments for a specified epoch.\n+   *\n+   * @param epoch - the current or historic epoch\n+   * @return list of CommitteeAssignments\n+   */\n+  public SafeFuture<List<CommitteeAssignment>> getCommitteeAssignmentAtEpoch(UnsignedLong epoch) {\n+    final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDA5NA=="}, "originalCommit": {"oid": "2bde02d21215e8682824b2265d990c872dc3fc1c"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2706, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}