{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMTg4Mjky", "number": 2923, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTowNzowOFrOErymhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTowNzowOFrOErymhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzUzMjg2OnYy", "diffSide": "RIGHT", "path": "sync/src/main/java/tech/pegasys/teku/sync/multipeer/BatchImporter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTowNzowOFrOHewbWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMToyMDoyNlrOHew0uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAxMjc2MQ==", "bodyText": "All blocks in the batch will have come from the same source so we can probably skip the map here.  Otherwise all the other checks and penalties don't work out anyway.", "url": "https://github.com/ConsenSys/teku/pull/2923#discussion_r502012761", "createdAt": "2020-10-08T21:07:08Z", "author": {"login": "ajsutton"}, "path": "sync/src/main/java/tech/pegasys/teku/sync/multipeer/BatchImporter.java", "diffHunk": "@@ -46,19 +50,23 @@ public BatchImporter(final BlockImporter blockImporter, final AsyncRunner asyncR\n    * @return a future reporting the result of the import\n    */\n   public SafeFuture<BatchImportResult> importBatch(final Batch batch) {\n-    // Copy the blocks as we're going to use them from off the event thread.\n+    // Copy the data from batch as we're going to use them from off the event thread.\n     final List<SignedBeaconBlock> blocks = new ArrayList<>(batch.getBlocks());\n+    final Map<SignedBeaconBlock, SyncSource> blockToSource =\n+        blocks.stream().collect(Collectors.toUnmodifiableMap(b -> b, batch::getBlockSource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27ff128663993eb42744dac1bcb6de1ef1f54ae"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAxOTI1Ng==", "bodyText": "Makes sense - will simplify.", "url": "https://github.com/ConsenSys/teku/pull/2923#discussion_r502019256", "createdAt": "2020-10-08T21:20:26Z", "author": {"login": "mbaxter"}, "path": "sync/src/main/java/tech/pegasys/teku/sync/multipeer/BatchImporter.java", "diffHunk": "@@ -46,19 +50,23 @@ public BatchImporter(final BlockImporter blockImporter, final AsyncRunner asyncR\n    * @return a future reporting the result of the import\n    */\n   public SafeFuture<BatchImportResult> importBatch(final Batch batch) {\n-    // Copy the blocks as we're going to use them from off the event thread.\n+    // Copy the data from batch as we're going to use them from off the event thread.\n     final List<SignedBeaconBlock> blocks = new ArrayList<>(batch.getBlocks());\n+    final Map<SignedBeaconBlock, SyncSource> blockToSource =\n+        blocks.stream().collect(Collectors.toUnmodifiableMap(b -> b, batch::getBlockSource));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAxMjc2MQ=="}, "originalCommit": {"oid": "d27ff128663993eb42744dac1bcb6de1ef1f54ae"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3162, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}