{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5ODY2MTMx", "number": 2613, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzo0MjowOVrOEZwSrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzo0MjowOVrOEZwSrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDQxMDcwOnYy", "diffSide": "RIGHT", "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzo0MjowOVrOHCwMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMzo1NzoxNFrOHCwwxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0ODg2MA==", "bodyText": "is it worth investigating if we can explicitly make a call to update the accessed time of what we actually want to use?", "url": "https://github.com/ConsenSys/teku/pull/2613#discussion_r472648860", "createdAt": "2020-08-19T03:42:09Z", "author": {"login": "rolfyone"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "diffHunk": "@@ -47,10 +45,12 @@ public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operat\n \n   public SSZList<T> getItemsForBlock(BeaconState stateAtBlockSlot) {\n     SSZMutableList<T> itemsToPutInBlock =\n-        SSZList.createMutable(clazz, maxNumberOfElementsInBlock.get(clazz));\n+        SSZList.createMutable(clazz, MAX_NUMBER_OF_ELEMENTS_IN_BLOCK.get(clazz));\n+    // Note that iterating through all items does not affect their access time so we are effectively\n+    // evicting the oldest entries when the size is exceeded as we only ever access via iteration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45bf758e3bf1a61b494116030ea1c190c7d686f3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY1ODExOA==", "bodyText": "We used to deliberately use evict oldest policy here so this is actually what we wanted.", "url": "https://github.com/ConsenSys/teku/pull/2613#discussion_r472658118", "createdAt": "2020-08-19T03:57:14Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/OperationPool.java", "diffHunk": "@@ -47,10 +45,12 @@ public OperationPool(Class<T> clazz, OperationStateTransitionValidator<T> operat\n \n   public SSZList<T> getItemsForBlock(BeaconState stateAtBlockSlot) {\n     SSZMutableList<T> itemsToPutInBlock =\n-        SSZList.createMutable(clazz, maxNumberOfElementsInBlock.get(clazz));\n+        SSZList.createMutable(clazz, MAX_NUMBER_OF_ELEMENTS_IN_BLOCK.get(clazz));\n+    // Note that iterating through all items does not affect their access time so we are effectively\n+    // evicting the oldest entries when the size is exceeded as we only ever access via iteration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY0ODg2MA=="}, "originalCommit": {"oid": "45bf758e3bf1a61b494116030ea1c190c7d686f3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3318, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}