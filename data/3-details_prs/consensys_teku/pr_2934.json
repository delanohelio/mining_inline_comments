{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNjY5MTI0", "number": 2934, "title": "Database V6: store all in a single Rocks DB instance by default ", "bodyText": "PR Description\nRocksDB appears pretty hungry of native memory and creating 2 database instances it very expensive: this just doubles native memory consumption.\nThis PR bumps the DB version to 6 and stores both Hot and Finalized in a single RocksDB instance. However there is an option in VersionedDatabaseFactory to specify a separate data dir for Finalized data and in this case the second RocksDB instance would be created.\nThis should reduce native memory consumption by ~500Mb\nI'm not sure if we need the CLI option to set archive DB path to another location at the moment. Please let me know if you think this is a wanted feature and I will add it then.\nFixed Issue(s)\nRelates to #2303\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-10-09T15:32:56Z", "url": "https://github.com/ConsenSys/teku/pull/2934", "merged": true, "mergeCommit": {"oid": "43405d7aceec0ba80103472446ce697f3988eb71"}, "closed": true, "closedAt": "2020-10-14T13:27:55Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQ33_3AH2gAyNTAwNjY5MTI0OjVhNWFhN2RlOTdiMDMyYTVjNzBiOGI1NTU2YjNmN2ZjYzY0NzVhYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdScxs1AH2gAyNTAwNjY5MTI0OmRiNGM2YmRhMzViNWVmMThmOGMxZjhmODg2ZjY1ZjY0MzBlMTIwY2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5a5aa7de97b032a5c70b8b5556b3f7fcc6475ac1", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/5a5aa7de97b032a5c70b8b5556b3f7fcc6475ac1", "committedDate": "2020-10-09T15:25:58Z", "message": "Refactor DB Schema interfaces, add V6 database version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45210ce6aeb9cbfcc5fb31752f80f9ee3758fb3e", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/45210ce6aeb9cbfcc5fb31752f80f9ee3758fb3e", "committedDate": "2020-10-12T12:30:50Z", "message": "Give methods more canonical names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b234a2912b9ac4a0007925849846b5c496781384", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/b234a2912b9ac4a0007925849846b5c496781384", "committedDate": "2020-10-12T13:00:23Z", "message": "Name members and params more consistently in VersionedDatabaseFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf140bae62b45aa970b56d51dc8f6f258cc311e8", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/bf140bae62b45aa970b56d51dc8f6f258cc311e8", "committedDate": "2020-10-12T14:14:40Z", "message": "Apply spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ec7d2a41ce3e1238dfb4a374c24532e3d5f1d8", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/f5ec7d2a41ce3e1238dfb4a374c24532e3d5f1d8", "committedDate": "2020-10-12T14:14:58Z", "message": "Create V6 DB metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "560f7f761d0260e4a601137c12ef9cdc46d85317", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/560f7f761d0260e4a601137c12ef9cdc46d85317", "committedDate": "2020-10-12T14:34:35Z", "message": "Fix warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d004e277b9949cf59e3a9e9394767d0566168477", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/d004e277b9949cf59e3a9e9394767d0566168477", "committedDate": "2020-10-12T15:06:39Z", "message": "Allow creating older DB versions (at least for testing)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5251bc397838db1c6349f7d9dfea755f749f3e9c", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/5251bc397838db1c6349f7d9dfea755f749f3e9c", "committedDate": "2020-10-12T15:28:39Z", "message": "Fit column IDs to one byte"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5c9220d398a2569084d19faa4c5063229f74b1a", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/a5c9220d398a2569084d19faa4c5063229f74b1a", "committedDate": "2020-10-12T15:29:18Z", "message": "In tests close DB on clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630283955448061b63e3a342be14deca1472098f", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/630283955448061b63e3a342be14deca1472098f", "committedDate": "2020-10-12T15:29:47Z", "message": "Adjust tests to DB V6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0613eb8a6112440e107e821f144d393981c7b6ee", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/0613eb8a6112440e107e821f144d393981c7b6ee", "committedDate": "2020-10-12T15:33:24Z", "message": "Spotless apply"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50816ec339b1afb33d9f74ac473483105f0c8750", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/50816ec339b1afb33d9f74ac473483105f0c8750", "committedDate": "2020-10-12T15:46:10Z", "message": "Adjust DB version for test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db12cddc412b133071a73713a08c12c026577e72", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/db12cddc412b133071a73713a08c12c026577e72", "committedDate": "2020-10-12T16:10:11Z", "message": "Add V6 DB tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/df96affcdd2444a3f0d2434595910a9925c79c12", "committedDate": "2020-10-12T17:17:04Z", "message": "Merge branch 'master' into feature/rocksdb-single-db"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTYzNTIw", "url": "https://github.com/ConsenSys/teku/pull/2934#pullrequestreview-506963520", "createdAt": "2020-10-12T22:53:13Z", "commit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjo1MzoxM1rOHgPsVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMzoxOTo0NlrOHgQJ3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MzU5MA==", "bodyText": "I think this might be a little simpler if we just use a boolean here - something like: shouldDefaultToSeparateDbs", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r503573590", "createdAt": "2020-10-12T22:53:13Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "diffHunk": "@@ -72,10 +78,30 @@ public VersionedDatabaseFactory(\n       final String createDatabaseVersion,\n       final long stateStorageFrequency,\n       final Eth1Address eth1Address) {\n+    this(\n+        metricsSystem,\n+        dataPath,\n+        Optional.empty(),\n+        dataStorageMode,\n+        createDatabaseVersion,\n+        stateStorageFrequency,\n+        eth1Address);\n+  }\n+\n+  public VersionedDatabaseFactory(\n+      final MetricsSystem metricsSystem,\n+      final String dataPath,\n+      final Optional<String> maybeArchiveDataPath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NDg4Mw==", "bodyText": "We want all the dbs to be in the data directory:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                this.v6ArchiveDirectory =\n          \n          \n            \n                    maybeArchiveDataPath.map(p -> Paths.get(p).resolve(ARCHIVE_PATH).toFile());\n          \n          \n            \n                final String archiveDirPath =  shouldCreateSeparateDbs ? ARCHIVE_PATH : DB_PATH\n          \n          \n            \n                this.v6ArchiveDirectory = this.dataDirectory.toPath().resolve(archiveDirPath).toFile();", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r503574883", "createdAt": "2020-10-12T22:57:27Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "diffHunk": "@@ -72,10 +78,30 @@ public VersionedDatabaseFactory(\n       final String createDatabaseVersion,\n       final long stateStorageFrequency,\n       final Eth1Address eth1Address) {\n+    this(\n+        metricsSystem,\n+        dataPath,\n+        Optional.empty(),\n+        dataStorageMode,\n+        createDatabaseVersion,\n+        stateStorageFrequency,\n+        eth1Address);\n+  }\n+\n+  public VersionedDatabaseFactory(\n+      final MetricsSystem metricsSystem,\n+      final String dataPath,\n+      final Optional<String> maybeArchiveDataPath,\n+      final StateStorageMode dataStorageMode,\n+      final String createDatabaseVersion,\n+      final long stateStorageFrequency,\n+      final Eth1Address eth1Address) {\n     this.metricsSystem = metricsSystem;\n     this.dataDirectory = Paths.get(dataPath).toFile();\n     this.dbDirectory = this.dataDirectory.toPath().resolve(DB_PATH).toFile();\n-    this.archiveDirectory = this.dataDirectory.toPath().resolve(ARCHIVE_PATH).toFile();\n+    this.v5ArchiveDirectory = this.dataDirectory.toPath().resolve(ARCHIVE_PATH).toFile();\n+    this.v6ArchiveDirectory =\n+        maybeArchiveDataPath.map(p -> Paths.get(p).resolve(ARCHIVE_PATH).toFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3NjQyMg==", "bodyText": "Any existing metadata should override preferences wrt single / multiple dbs:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      v6ArchiveDirectory.map(\n          \n          \n            \n                          dir ->\n          \n          \n            \n                              metaData\n          \n          \n            \n                                  .getSeparateDbConfiguration()\n          \n          \n            \n                                  .get()\n          \n          \n            \n                                  .getArchiveDbConfiguration()\n          \n          \n            \n                                  .withDatabaseDir(dir.toPath()));\n          \n          \n            \n                      v6ArchiveDirectory\n          \n          \n            \n                      .filter(__ -> !metaData.isSingleDB())\n          \n          \n            \n                      .map(dir ->\n          \n          \n            \n                              metaData\n          \n          \n            \n                                  .getSeparateDbConfiguration()\n          \n          \n            \n                                  .get()\n          \n          \n            \n                                  .getArchiveDbConfiguration()\n          \n          \n            \n                                  .withDatabaseDir(dir.toPath()));", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r503576422", "createdAt": "2020-10-12T23:02:27Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/VersionedDatabaseFactory.java", "diffHunk": "@@ -164,13 +208,61 @@ private Database createV4Database() {\n    */\n   private Database createV5Database() {\n     try {\n-      final DatabaseMetadata metaData =\n-          DatabaseMetadata.init(getMetadataFile(), DatabaseMetadata.v5Defaults());\n+      final V5DatabaseMetadata metaData =\n+          V5DatabaseMetadata.init(getMetadataFile(), V5DatabaseMetadata.v5Defaults());\n       DatabaseNetwork.init(getNetworkFile(), Constants.GENESIS_FORK_VERSION, eth1Address);\n       return RocksDbDatabase.createV4(\n           metricsSystem,\n           metaData.getHotDbConfiguration().withDatabaseDir(dbDirectory.toPath()),\n-          metaData.getArchiveDbConfiguration().withDatabaseDir(archiveDirectory.toPath()),\n+          metaData.getArchiveDbConfiguration().withDatabaseDir(v5ArchiveDirectory.toPath()),\n+          stateStorageMode,\n+          stateStorageFrequency);\n+    } catch (final IOException e) {\n+      throw new DatabaseStorageException(\"Failed to read metadata\", e);\n+    }\n+  }\n+\n+  private Database createV6Database() {\n+    try {\n+      final V6DatabaseMetadata defaultMetaData;\n+      if (v6ArchiveDirectory.isPresent()) {\n+        defaultMetaData = V6DatabaseMetadata.separateDBDefault();\n+      } else {\n+        defaultMetaData = V6DatabaseMetadata.singleDBDefault();\n+      }\n+\n+      final V6DatabaseMetadata metaData =\n+          V6DatabaseMetadata.init(getMetadataFile(), defaultMetaData);\n+      if (defaultMetaData.isSingleDB() != metaData.isSingleDB()) {\n+        throw new DatabaseStorageException(\n+            \"The database was originally created as \"\n+                + (metaData.isSingleDB() ? \"Single\" : \"Separate\")\n+                + \" but now accessed as \"\n+                + (defaultMetaData.isSingleDB() ? \"Single\" : \"Separate\"));\n+      }\n+\n+      DatabaseNetwork.init(getNetworkFile(), Constants.GENESIS_FORK_VERSION, eth1Address);\n+\n+      final RocksDbConfiguration hotOrSingleDBConfiguration =\n+          metaData.isSingleDB()\n+              ? metaData.getSingleDbConfiguration().get().getConfiguration()\n+              : metaData.getSeparateDbConfiguration().get().getHotDbConfiguration();\n+\n+      final Optional<RocksDbConfiguration> finalizedConfiguration =\n+          v6ArchiveDirectory.map(\n+              dir ->\n+                  metaData\n+                      .getSeparateDbConfiguration()\n+                      .get()\n+                      .getArchiveDbConfiguration()\n+                      .withDatabaseDir(dir.toPath()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MDEzMQ==", "bodyText": "Looks like these are being serialized - there's probably a flag to turn off this behavior", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r503580131", "createdAt": "2020-10-12T23:15:52Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/metadata/V6DatabaseMetadata.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.server.metadata;\n+\n+import static com.fasterxml.jackson.dataformat.yaml.YAMLGenerator.Feature.WRITE_DOC_START_MARKER;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonProperty.Access;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Optional;\n+import tech.pegasys.teku.storage.server.rocksdb.RocksDbConfiguration;\n+\n+/**\n+ * Defines the configuration for a database. The configuration used when a database is created is\n+ * written to a metadata.yaml file and reloaded to ensure we continue using compatible values for\n+ * the lifetime of that database.\n+ *\n+ * <p>To preserve backwards compatibility always ensure that the value assigned in field\n+ * declarations is compatible with existing databases. These values will be used if the field didn't\n+ * exist at the time the database was created, so typically should match the default.\n+ *\n+ * <p>If the value to use for new databases, differs from the original, set it in a factory function\n+ *\n+ * <p>Values that are safe to change for existing databases are marked with {@link\n+ * Access#WRITE_ONLY}. They will not be written to the metadata file but if present, the value will\n+ * be loaded providing a simple way to experiment with different values without it being fixed at\n+ * database creation.\n+ */\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class V6DatabaseMetadata {\n+\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  public static class SingleDBMetadata {\n+    @JsonProperty(\"configuration\")\n+    private RocksDbConfiguration configuration;\n+\n+    public SingleDBMetadata() {}\n+\n+    public SingleDBMetadata(RocksDbConfiguration configuration) {\n+      this.configuration = configuration;\n+    }\n+\n+    public RocksDbConfiguration getConfiguration() {\n+      return configuration;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return \"SingleDBMetadata{\" + \"configuration=\" + configuration + '}';\n+    }\n+  }\n+\n+  @JsonIgnoreProperties(ignoreUnknown = true)\n+  public static class SeparateDBMetadata {\n+    @JsonProperty(\"hotDbConfiguration\")\n+    private RocksDbConfiguration hotDbConfiguration;\n+\n+    @JsonProperty(\"archiveDbConfiguration\")\n+    private RocksDbConfiguration archiveDbConfiguration;\n+\n+    public SeparateDBMetadata() {}\n+\n+    public SeparateDBMetadata(\n+        RocksDbConfiguration hotDbConfiguration, RocksDbConfiguration archiveDbConfiguration) {\n+      this.hotDbConfiguration = hotDbConfiguration;\n+      this.archiveDbConfiguration = archiveDbConfiguration;\n+    }\n+\n+    public RocksDbConfiguration getHotDbConfiguration() {\n+      return hotDbConfiguration;\n+    }\n+\n+    public RocksDbConfiguration getArchiveDbConfiguration() {\n+      return archiveDbConfiguration;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return \"SeparateDBMetadata{\"\n+          + \"hotDbConfiguration=\"\n+          + hotDbConfiguration\n+          + \", archiveDbConfiguration=\"\n+          + archiveDbConfiguration\n+          + '}';\n+    }\n+  }\n+\n+  @JsonProperty(\"singleDb\")\n+  private SingleDBMetadata singleDb;\n+\n+  @JsonProperty(\"separateDb\")\n+  private SeparateDBMetadata separateDb;\n+\n+  public V6DatabaseMetadata() {}\n+\n+  private V6DatabaseMetadata(RocksDbConfiguration singleDbConfiguration) {\n+    this.singleDb = new SingleDBMetadata(singleDbConfiguration);\n+  }\n+\n+  private V6DatabaseMetadata(\n+      RocksDbConfiguration hotDbConfiguration, RocksDbConfiguration archiveDbConfiguration) {\n+    this.separateDb = new SeparateDBMetadata(hotDbConfiguration, archiveDbConfiguration);\n+  }\n+\n+  public static V6DatabaseMetadata singleDBDefault() {\n+    return new V6DatabaseMetadata(RocksDbConfiguration.v6SingleDefaults());\n+  }\n+\n+  public static V6DatabaseMetadata separateDBDefault() {\n+    return new V6DatabaseMetadata(\n+        RocksDbConfiguration.v5HotDefaults(), RocksDbConfiguration.v5ArchiveDefaults());\n+  }\n+\n+  public Optional<SingleDBMetadata> getSingleDbConfiguration() {\n+    return Optional.ofNullable(singleDb);\n+  }\n+\n+  public Optional<SeparateDBMetadata> getSeparateDbConfiguration() {\n+    return Optional.ofNullable(separateDb);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MTE0OA==", "bodyText": "Nice refactor :D", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r503581148", "createdAt": "2020-10-12T23:19:46Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/rocksdb/schema/SchemaFinalized.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.server.rocksdb.schema;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+\n+public interface SchemaFinalized extends Schema {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df96affcdd2444a3f0d2434595910a9925c79c12"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b023b894453f925fb7632eeb8d99d6486202bf8", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/1b023b894453f925fb7632eeb8d99d6486202bf8", "committedDate": "2020-10-13T07:26:53Z", "message": "Fix V6DatabaseMetadata JSON serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b77526701fd96abf35f6a1c1ab94ebd2b661542c", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/b77526701fd96abf35f6a1c1ab94ebd2b661542c", "committedDate": "2020-10-13T07:27:31Z", "message": "Merge remote-tracking branch 'origin/feature/rocksdb-single-db' into feature/rocksdb-single-db"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTA2MjI2", "url": "https://github.com/ConsenSys/teku/pull/2934#pullrequestreview-507506226", "createdAt": "2020-10-13T14:35:44Z", "commit": {"oid": "1b023b894453f925fb7632eeb8d99d6486202bf8"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozNTo0NFrOHgqA7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxMjoyM1rOHgunLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwNDg0NA==", "bodyText": "(nit) Maybe something like \"serialization\" would be more descriptive\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package tech.pegasys.teku.util.annotations;\n          \n          \n            \n            package tech.pegasys.teku.util.serialization;", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r504004844", "createdAt": "2020-10-13T14:35:44Z", "author": {"login": "mbaxter"}, "path": "util/src/main/java/tech/pegasys/teku/util/annotations/JsonExplicit.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.util.annotations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b023b894453f925fb7632eeb8d99d6486202bf8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwNTA1Ng==", "bodyText": "nice", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r504005056", "createdAt": "2020-10-13T14:36:00Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/metadata/V6DatabaseMetadata.java", "diffHunk": "@@ -42,9 +45,12 @@\n  * database creation.\n  */\n @JsonIgnoreProperties(ignoreUnknown = true)\n+@JsonExplicit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b023b894453f925fb7632eeb8d99d6486202bf8"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA3ODcyMQ==", "bodyText": "There's a helper class that provides various db versions called StorageSystemArgumentsProvider - we should add the v6 dbs to that class.", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r504078721", "createdAt": "2020-10-13T16:10:09Z", "author": {"login": "mbaxter"}, "path": "storage/src/testFixtures/java/tech/pegasys/teku/storage/server/rocksdb/InMemoryRocksDbDatabaseFactory.java", "diffHunk": "@@ -36,7 +38,22 @@ public static Database createV4(\n         new StubMetricsSystem(), hotDb, coldDb, storageMode, stateStorageFrequency);\n   }\n \n+  public static Database createV6(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77526701fd96abf35f6a1c1ab94ebd2b661542c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4MDE3Mg==", "bodyText": "Probably a good idea to create another test that uses separate dbs.", "url": "https://github.com/ConsenSys/teku/pull/2934#discussion_r504080172", "createdAt": "2020-10-13T16:12:23Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/rocksdb/V6RocksDbDatabaseTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.server.rocksdb;\n+\n+import java.io.File;\n+import tech.pegasys.teku.storage.server.DatabaseVersion;\n+import tech.pegasys.teku.storage.storageSystem.FileBackedStorageSystemBuilder;\n+import tech.pegasys.teku.storage.storageSystem.StorageSystem;\n+import tech.pegasys.teku.storage.store.StoreConfig;\n+import tech.pegasys.teku.util.config.StateStorageMode;\n+\n+public class V6RocksDbDatabaseTest extends AbstractRocksDbDatabaseWithHotStatesTest {\n+\n+  @Override\n+  protected StorageSystem createStorageSystem(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77526701fd96abf35f6a1c1ab94ebd2b661542c"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "762fffc2b843467af11be5e6c451311f5bae1d8f", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/762fffc2b843467af11be5e6c451311f5bae1d8f", "committedDate": "2020-10-14T11:24:03Z", "message": "Rename package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108d7a69cb9a1c1a14595b7b2eadfc78d071d946", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/108d7a69cb9a1c1a14595b7b2eadfc78d071d946", "committedDate": "2020-10-14T11:32:06Z", "message": "Add V6 database factories for DB test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edde6573d92ff38a0501a7337bf89f60d8d265b2", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/edde6573d92ff38a0501a7337bf89f60d8d265b2", "committedDate": "2020-10-14T12:42:15Z", "message": "Add a V6 db test with a separate archive directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db4c6bda35b5ef18f8c1f8f886f65f6430e120cf", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/db4c6bda35b5ef18f8c1f8f886f65f6430e120cf", "committedDate": "2020-10-14T12:59:30Z", "message": "Merge branch 'master' into feature/rocksdb-single-db"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}