{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzU5MTc0", "number": 3382, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDozNjoyMFrOFELlAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozNDozMlrOFEPp0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTI4MzIyOnYy", "diffSide": "RIGHT", "path": "eth-reference-tests/src/referenceTest/java/tech/pegasys/teku/reference/phase0/ManualReferenceTestRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDozNjoyMFrOIEMBMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToxNDowM1rOIGFsow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjEzMA==", "bodyText": "Looks like the changes to this file were for debugging - should we revert this?", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541262130", "createdAt": "2020-12-11T20:36:20Z", "author": {"login": "mbaxter"}, "path": "eth-reference-tests/src/referenceTest/java/tech/pegasys/teku/reference/phase0/ManualReferenceTestRunner.java", "diffHunk": "@@ -30,7 +29,7 @@\n  * <p>The test case is disabled as the tests run via the generated classes in CI, but it still runs\n  * without removing the @Disabled in IntelliJ.\n  */\n-@Disabled\n+// @Disabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI1NTcxNQ==", "bodyText": "Ouch", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r543255715", "createdAt": "2020-12-15T11:14:03Z", "author": {"login": "Nashatyrev"}, "path": "eth-reference-tests/src/referenceTest/java/tech/pegasys/teku/reference/phase0/ManualReferenceTestRunner.java", "diffHunk": "@@ -30,7 +29,7 @@\n  * <p>The test case is disabled as the tests run via the generated classes in CI, but it still runs\n  * without removing the @Disabled in IntelliJ.\n  */\n-@Disabled\n+// @Disabled", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI2MjEzMA=="}, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTUyMDI3OnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/test/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMToxNjoxMlrOIEOUiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTozMzoxNlrOIGGZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI5OTg1MQ==", "bodyText": "(nit) Probably worth asserting on the message to make sure we're throwing the error we expect", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541299851", "createdAt": "2020-12-11T21:16:12Z", "author": {"login": "mbaxter"}, "path": "ethereum/datastructures/src/test/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializerTest.java", "diffHunk": "@@ -87,8 +88,7 @@ public void deserialize_extraDataAppended() {\n     final Bytes checkpointData = SimpleOffsetSerializer.serialize(checkpoint);\n     final Bytes encoded = Bytes.concatenate(checkpointData, extraData);\n     assertThatThrownBy(() -> SimpleOffsetSerializer.deserialize(encoded, Checkpoint.class))\n-        .isInstanceOf(IllegalStateException.class)\n-        .hasMessageContaining(\"Unread data detected\");\n+        .isInstanceOf(SSZDeserializeException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2NzE3Ng==", "bodyText": "Done: c7632ce. Also differentiate the exception messages to be more exact on the reason", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r543267176", "createdAt": "2020-12-15T11:33:16Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/datastructures/src/test/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializerTest.java", "diffHunk": "@@ -87,8 +88,7 @@ public void deserialize_extraDataAppended() {\n     final Bytes checkpointData = SimpleOffsetSerializer.serialize(checkpoint);\n     final Bytes encoded = Bytes.concatenate(checkpointData, extraData);\n     assertThatThrownBy(() -> SimpleOffsetSerializer.deserialize(encoded, Checkpoint.class))\n-        .isInstanceOf(IllegalStateException.class)\n-        .hasMessageContaining(\"Unread data detected\");\n+        .isInstanceOf(SSZDeserializeException.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI5OTg1MQ=="}, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTY4NTY3OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/SSZTypes/Bitlist.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0NTo1M1rOIEP9Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTozNDozOVrOIGGctQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyNjY4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  int lastByteWithLeadingBit = lastByte ^ (1 << (length % 8));\n          \n          \n            \n                  int lastByteWithLeadingBit = lastByte ^ leadingBit;", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541326686", "createdAt": "2020-12-11T21:45:53Z", "author": {"login": "mbaxter"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/SSZTypes/Bitlist.java", "diffHunk": "@@ -141,6 +133,41 @@ public static Bitlist fromBytes(Bytes bytes, long maxSize) {\n     return new Bitlist(bitlistSize, byteArray, maxSize);\n   }\n \n+  public static Bytes sszTruncateLeadingBit(Bytes bytes, int length) {\n+    Bytes bytesWithoutLast = bytes.slice(0, bytes.size() - 1);\n+    if (length % 8 == 0) {\n+      return bytesWithoutLast;\n+    } else {\n+      int lastByte = 0xFF & bytes.get(bytes.size() - 1);\n+      int leadingBit = 1 << (length % 8);\n+      int lastByteWithoutLeadingBit = lastByte ^ leadingBit;\n+      return Bytes.concatenate(bytesWithoutLast, Bytes.of(lastByteWithoutLeadingBit));\n+    }\n+  }\n+\n+  public static Bytes sszAppendLeadingBit(Bytes bytes, int length) {\n+    checkArgument(length <= bytes.size() * 8 && length > (bytes.size() - 1) * 8);\n+    if (length % 8 == 0) {\n+      return Bytes.wrap(bytes, Bytes.of(1));\n+    } else {\n+      int lastByte = 0xFF & bytes.get(bytes.size() - 1);\n+      int leadingBit = 1 << (length % 8);\n+      checkArgument((-leadingBit & lastByte) == 0, \"Bits higher than length should be 0\");\n+      int lastByteWithLeadingBit = lastByte ^ (1 << (length % 8));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2ODAyMQ==", "bodyText": "Good catch, thanks \ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r543268021", "createdAt": "2020-12-15T11:34:39Z", "author": {"login": "Nashatyrev"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/SSZTypes/Bitlist.java", "diffHunk": "@@ -141,6 +133,41 @@ public static Bitlist fromBytes(Bytes bytes, long maxSize) {\n     return new Bitlist(bitlistSize, byteArray, maxSize);\n   }\n \n+  public static Bytes sszTruncateLeadingBit(Bytes bytes, int length) {\n+    Bytes bytesWithoutLast = bytes.slice(0, bytes.size() - 1);\n+    if (length % 8 == 0) {\n+      return bytesWithoutLast;\n+    } else {\n+      int lastByte = 0xFF & bytes.get(bytes.size() - 1);\n+      int leadingBit = 1 << (length % 8);\n+      int lastByteWithoutLeadingBit = lastByte ^ leadingBit;\n+      return Bytes.concatenate(bytesWithoutLast, Bytes.of(lastByteWithoutLeadingBit));\n+    }\n+  }\n+\n+  public static Bytes sszAppendLeadingBit(Bytes bytes, int length) {\n+    checkArgument(length <= bytes.size() * 8 && length > (bytes.size() - 1) * 8);\n+    if (length % 8 == 0) {\n+      return Bytes.wrap(bytes, Bytes.of(1));\n+    } else {\n+      int lastByte = 0xFF & bytes.get(bytes.size() - 1);\n+      int leadingBit = 1 << (length % 8);\n+      checkArgument((-leadingBit & lastByte) == 0, \"Bits higher than length should be 0\");\n+      int lastByteWithLeadingBit = lastByte ^ (1 << (length % 8));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMyNjY4Ng=="}, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTcwNzY2OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTo0OTo0M1rOIEQLKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTozODo0NlrOIGGmmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMDIxOQ==", "bodyText": "nit - these nodes aren't necessarily terminal leaf nodes:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static TreeNode createTree(List<? extends TreeNode> leafNodes) {\n          \n          \n            \n              public static TreeNode createTree(List<? extends TreeNode> children) {", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541330219", "createdAt": "2020-12-11T21:49:43Z", "author": {"login": "mbaxter"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java", "diffHunk": "@@ -77,7 +77,7 @@ public static TreeNode createDefaultTree(long maxLength, TreeNode defaultNode) {\n   }\n \n   /** Creates a binary tree of width `nextPowerOf2(leafNodes.size())` with specific leaf nodes */\n-  public static TreeNode createTree(List<TreeNode> leafNodes) {\n+  public static TreeNode createTree(List<? extends TreeNode> leafNodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3MDU1Mw==", "bodyText": "Yep, still trying to find the correct term for such nodes, but right children is closer than leaf here", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r543270553", "createdAt": "2020-12-15T11:38:46Z", "author": {"login": "Nashatyrev"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/tree/TreeUtil.java", "diffHunk": "@@ -77,7 +77,7 @@ public static TreeNode createDefaultTree(long maxLength, TreeNode defaultNode) {\n   }\n \n   /** Creates a binary tree of width `nextPowerOf2(leafNodes.size())` with specific leaf nodes */\n-  public static TreeNode createTree(List<TreeNode> leafNodes) {\n+  public static TreeNode createTree(List<? extends TreeNode> leafNodes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMzMDIxOQ=="}, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTg0Nzk5OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/CollectionViewType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjoxNToyOFrOIERkZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjoxNToyOFrOIERkZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM1MzA2MQ==", "bodyText": "(nit) Probably worth adding a non-empty error string?", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541353061", "createdAt": "2020-12-11T22:15:28Z", "author": {"login": "mbaxter"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/CollectionViewType.java", "diffHunk": "@@ -123,6 +138,123 @@ private int sszSerializeVariableVector(\n     return variableOffset;\n   }\n \n+  protected DeserializedData sszDeserializeVector(SszReader reader) {\n+    if (getElementType().isFixedSize()) {\n+      Optional<SszSuperNodeHint> sszSuperNodeHint = getHints().getHint(SszSuperNodeHint.class);\n+      if (sszSuperNodeHint.isPresent()) {\n+        return sszDeserializeSupernode(reader, sszSuperNodeHint.get().getDepth());\n+      } else {\n+        return sszDeserializeFixed(reader);\n+      }\n+    } else {\n+      return sszDeserializeVariable(reader);\n+    }\n+  }\n+\n+  private DeserializedData sszDeserializeSupernode(SszReader reader, int supernodeDepth) {\n+    SszNodeTemplate template = elementSszSupernodeTemplate.get();\n+    int sszSize = reader.getAvailableBytes();\n+    if (sszSize % template.getSszLength() != 0) {\n+      throw new SSZDeserializeException(\"Ssz length is not multiple of element length\");\n+    }\n+    int elementsCount = sszSize / template.getSszLength();\n+    List<SszSuperNode> sszNodes =\n+        chunks(sszSize, (1 << supernodeDepth) * template.getSszLength())\n+            .mapToObj(reader::read)\n+            .map(bb -> new SszSuperNode(supernodeDepth, template, bb))\n+            .collect(Collectors.toList());\n+    TreeNode tree =\n+        TreeUtil.createTree(\n+            sszNodes,\n+            new SszSuperNode(supernodeDepth, template, Bytes.EMPTY),\n+            treeDepth() - supernodeDepth);\n+    return new DeserializedData(tree, elementsCount);\n+  }\n+\n+  private DeserializedData sszDeserializeFixed(SszReader reader) {\n+    int bytesSize = reader.getAvailableBytes();\n+    if (getElementType() instanceof BasicViewType) {\n+      checkSsz(bytesSize % getElementType().getFixedPartSize() == 0, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTkzODAyOnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozMTo0NFrOIESd2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozMTo0NFrOIESd2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM2Nzc3MQ==", "bodyText": "Looks like this can be private:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public static ViewRead deserialize(Bytes bytes, ViewType sszViewType) {\n          \n          \n            \n              private static ViewRead deserialize(Bytes bytes, ViewType sszViewType) {", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541367771", "createdAt": "2020-12-11T22:31:44Z", "author": {"login": "mbaxter"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "diffHunk": "@@ -229,6 +236,12 @@ public static Bytes serializeVariableCompositeList(\n     }\n   }\n \n+  public static ViewRead deserialize(Bytes bytes, ViewType sszViewType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTk1MDkxOnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozNDozMlrOIESmEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTo1MzozNlrOIGHKkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM2OTg3NA==", "bodyText": "Does this mean we can remove all of the tree-backed classes from SimpleOffsetSerializer.setConstants()?", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r541369874", "createdAt": "2020-12-11T22:34:32Z", "author": {"login": "mbaxter"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "diffHunk": "@@ -210,14 +212,19 @@ public static Bytes serializeVariableCompositeList(\n   public static <T> T deserialize(Bytes bytes, Class<T> classInfo) {\n     MutableInt bytePointer = new MutableInt(0);\n     if (!isPrimitive(classInfo)) {\n-      return SSZ.decode(\n-          bytes,\n-          reader -> {\n-            final T result =\n-                deserializeContainerErrorWrapper(classInfo, reader, bytePointer, bytes.size());\n-            assertAllDataRead(reader);\n-            return result;\n-          });\n+      Optional<ViewType> maybeViewType = ViewType.getType(classInfo);\n+      if (maybeViewType.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3OTc2MQ==", "bodyText": "Seems there are classLengthBounds which are still actual. I was going to do the final cleanup in a subsequent PR while removing old SSZ code", "url": "https://github.com/ConsenSys/teku/pull/3382#discussion_r543279761", "createdAt": "2020-12-15T11:53:36Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/util/SimpleOffsetSerializer.java", "diffHunk": "@@ -210,14 +212,19 @@ public static Bytes serializeVariableCompositeList(\n   public static <T> T deserialize(Bytes bytes, Class<T> classInfo) {\n     MutableInt bytePointer = new MutableInt(0);\n     if (!isPrimitive(classInfo)) {\n-      return SSZ.decode(\n-          bytes,\n-          reader -> {\n-            final T result =\n-                deserializeContainerErrorWrapper(classInfo, reader, bytePointer, bytes.size());\n-            assertAllDataRead(reader);\n-            return result;\n-          });\n+      Optional<ViewType> maybeViewType = ViewType.getType(classInfo);\n+      if (maybeViewType.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM2OTg3NA=="}, "originalCommit": {"oid": "469784f6895380f352c4fa3ef824e432a57f7a84"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2933, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}