{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NTU0MTYw", "number": 3201, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMTo1MToyMlrOE38-yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNDo0MDoxOVrOE3_oRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTA2MjUxOnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMTo1MToyMlrOHxmIvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMTo1NDo0NVrOHxmM0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2NzEwMQ==", "bodyText": "This isn't enough.  We also need the options to specify external signers:\n\nvalidators-external-signer-public-keys\n--validators-external-signer-url\n--validators-external-signer-timeout", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521767101", "createdAt": "2020-11-12T01:51:22Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.cli.options;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import picocli.CommandLine;\n+import tech.pegasys.teku.config.TekuConfiguration;\n+\n+public class ValidatorKeysOptions {\n+\n+  @CommandLine.Option(\n+      names = {\"--validator-keys\"},\n+      paramLabel = \"<KEY_DIR>:<PASS_DIR> | <KEY_FILE>:<PASS_FILE>\",\n+      description =\n+          \"<KEY_DIR>:<PASS_DIR> will find <KEY_DIR>/**.json, and expect to find <PASS_DIR>/**.txt.\\n\"\n+              + \"<KEY_FILE>:<PASS_FILE> will expect that the file <KEY_FILE> exists, \"\n+              + \"and the file containing the password for it is <PASS_FILE>.\\n\"\n+              + \"The path separator is operating system dependent, and should be ';' in windows rather than ':'.\",\n+      split = \",\",\n+      arity = \"1..*\")\n+  private List<String> validatorKeys = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ac9a15552f8510f547b4c99996f0df53e17a09"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2ODE0NQ==", "bodyText": "May as well move the old validators-key-files and validators-key-password-files options into here too just for consistency.  They're hidden and will be removed soon but its tidier to keep all the key loading options in one place.", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521768145", "createdAt": "2020-11-12T01:54:45Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.cli.options;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import picocli.CommandLine;\n+import tech.pegasys.teku.config.TekuConfiguration;\n+\n+public class ValidatorKeysOptions {\n+\n+  @CommandLine.Option(\n+      names = {\"--validator-keys\"},\n+      paramLabel = \"<KEY_DIR>:<PASS_DIR> | <KEY_FILE>:<PASS_FILE>\",\n+      description =\n+          \"<KEY_DIR>:<PASS_DIR> will find <KEY_DIR>/**.json, and expect to find <PASS_DIR>/**.txt.\\n\"\n+              + \"<KEY_FILE>:<PASS_FILE> will expect that the file <KEY_FILE> exists, \"\n+              + \"and the file containing the password for it is <PASS_FILE>.\\n\"\n+              + \"The path separator is operating system dependent, and should be ';' in windows rather than ':'.\",\n+      split = \",\",\n+      arity = \"1..*\")\n+  private List<String> validatorKeys = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2NzEwMQ=="}, "originalCommit": {"oid": "04ac9a15552f8510f547b4c99996f0df53e17a09"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTA2NjE2OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMTo1MzoxNFrOHxmK5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNDoxMzo1M1rOHxp4pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2NzY1Mg==", "bodyText": "Probably worth making SlashingProtector an interface so we can just supply a FORBID_ALL option here (validator exit shouldn't ask to sign any attestations or blocks so if it does, slashing protector should reject the request)", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521767652", "createdAt": "2020-11-12T01:53:14Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -179,10 +164,10 @@ private void initialise() {\n     }\n     genesisRoot = maybeRoot.get();\n \n-    // get the validator\n-    final Path slashProtectionPath = getSlashingProtectionPath(dataOptions);\n+    // slashing protection won't be looked at, but it is required to create a validator loader.\n+    // No files will be created in the path\n     final SlashingProtector slashingProtector =\n-        new SlashingProtector(new SyncDataAccessor(), slashProtectionPath);\n+        new SlashingProtector(new SyncDataAccessor(), Path.of(\".\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ac9a15552f8510f547b4c99996f0df53e17a09"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgyODUxOQ==", "bodyText": "hopefully i encapsulated pretty much what you're saying here.", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521828519", "createdAt": "2020-11-12T04:13:53Z", "author": {"login": "rolfyone"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -179,10 +164,10 @@ private void initialise() {\n     }\n     genesisRoot = maybeRoot.get();\n \n-    // get the validator\n-    final Path slashProtectionPath = getSlashingProtectionPath(dataOptions);\n+    // slashing protection won't be looked at, but it is required to create a validator loader.\n+    // No files will be created in the path\n     final SlashingProtector slashingProtector =\n-        new SlashingProtector(new SyncDataAccessor(), slashProtectionPath);\n+        new SlashingProtector(new SyncDataAccessor(), Path.of(\".\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2NzY1Mg=="}, "originalCommit": {"oid": "04ac9a15552f8510f547b4c99996f0df53e17a09"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTQ5NjM5OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNDo0MDoxOVrOHxqSHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNDo1MzoyMlrOHxqewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNTAzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"\\nThese validators won't be able to be re-activated, and withdrawals aren't likely to be possible until Phase 2 of eth2 Mainnet.\");\n          \n          \n            \n                    \"\\nThese validators won't be able to be re-activated, and withdrawals are unlikely to be possible until Phase 2 of eth2 Mainnet.\");", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521835036", "createdAt": "2020-11-12T04:40:19Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -98,10 +84,33 @@\n \n   @Override\n   public void run() {\n+    SUB_COMMAND_LOG.display(\"Loading configuration...\");\n     initialise();\n+    confirmExits();\n     getValidatorIndices(blsPublicKeyValidatorMap).forEach(this::submitExitForValidator);\n   }\n \n+  private void confirmExits() {\n+    SUB_COMMAND_LOG.display(\"Exits are going to be generated for validators: \");\n+    SUB_COMMAND_LOG.display(getValidatorAbbreviatedKeys());\n+    SUB_COMMAND_LOG.display(\n+        \"\\nThese validators won't be able to be re-activated, and withdrawals aren't likely to be possible until Phase 2 of eth2 Mainnet.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bbb7e188d03e47a3969fc86021a76f9ed6da66f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNTM1MA==", "bodyText": "Also, can't hard code \\n - should separate calls to display for each line.", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521835350", "createdAt": "2020-11-12T04:41:40Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -98,10 +84,33 @@\n \n   @Override\n   public void run() {\n+    SUB_COMMAND_LOG.display(\"Loading configuration...\");\n     initialise();\n+    confirmExits();\n     getValidatorIndices(blsPublicKeyValidatorMap).forEach(this::submitExitForValidator);\n   }\n \n+  private void confirmExits() {\n+    SUB_COMMAND_LOG.display(\"Exits are going to be generated for validators: \");\n+    SUB_COMMAND_LOG.display(getValidatorAbbreviatedKeys());\n+    SUB_COMMAND_LOG.display(\n+        \"\\nThese validators won't be able to be re-activated, and withdrawals aren't likely to be possible until Phase 2 of eth2 Mainnet.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNTAzNg=="}, "originalCommit": {"oid": "5bbb7e188d03e47a3969fc86021a76f9ed6da66f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNzc4Ng==", "bodyText": "that was for an extra line, i could put in a blank display call?", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521837786", "createdAt": "2020-11-12T04:51:40Z", "author": {"login": "rolfyone"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -98,10 +84,33 @@\n \n   @Override\n   public void run() {\n+    SUB_COMMAND_LOG.display(\"Loading configuration...\");\n     initialise();\n+    confirmExits();\n     getValidatorIndices(blsPublicKeyValidatorMap).forEach(this::submitExitForValidator);\n   }\n \n+  private void confirmExits() {\n+    SUB_COMMAND_LOG.display(\"Exits are going to be generated for validators: \");\n+    SUB_COMMAND_LOG.display(getValidatorAbbreviatedKeys());\n+    SUB_COMMAND_LOG.display(\n+        \"\\nThese validators won't be able to be re-activated, and withdrawals aren't likely to be possible until Phase 2 of eth2 Mainnet.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNTAzNg=="}, "originalCommit": {"oid": "5bbb7e188d03e47a3969fc86021a76f9ed6da66f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzODI3NA==", "bodyText": "Yeah a blank call would work.  \\n isn't the line separator on all systems.", "url": "https://github.com/ConsenSys/teku/pull/3201#discussion_r521838274", "createdAt": "2020-11-12T04:53:22Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/subcommand/VoluntaryExitCommand.java", "diffHunk": "@@ -98,10 +84,33 @@\n \n   @Override\n   public void run() {\n+    SUB_COMMAND_LOG.display(\"Loading configuration...\");\n     initialise();\n+    confirmExits();\n     getValidatorIndices(blsPublicKeyValidatorMap).forEach(this::submitExitForValidator);\n   }\n \n+  private void confirmExits() {\n+    SUB_COMMAND_LOG.display(\"Exits are going to be generated for validators: \");\n+    SUB_COMMAND_LOG.display(getValidatorAbbreviatedKeys());\n+    SUB_COMMAND_LOG.display(\n+        \"\\nThese validators won't be able to be re-activated, and withdrawals aren't likely to be possible until Phase 2 of eth2 Mainnet.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgzNTAzNg=="}, "originalCommit": {"oid": "5bbb7e188d03e47a3969fc86021a76f9ed6da66f"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3013, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}