{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjU5NDky", "number": 2803, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMToyNToxMFrOEj2ecQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMToyNzo0NVrOEj2gWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDI4MTQ1OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/GetProposerDuties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMToyNToxMFrOHScszw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjowNDo1NlrOHSdXUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwNjYzOQ==", "bodyText": "Unless this came from the standard spec I'd suggest:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Request beacon node to provide all validators that are supposed to propose a block in the given epoch.\",\n          \n          \n            \n                      \"Request beacon node to provide all validators that are scheduled to propose a block in the given epoch.\",", "url": "https://github.com/ConsenSys/teku/pull/2803#discussion_r489106639", "createdAt": "2020-09-16T01:25:10Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/GetProposerDuties.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.validator;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TG_V1_VALIDATOR;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.SyncDataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.response.v1.validator.GetProposerDutiesResponse;\n+import tech.pegasys.teku.api.response.v1.validator.ProposerDuty;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetProposerDuties extends AbstractHandler implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/validator/duties/proposer/:epoch\";\n+  private final ValidatorDataProvider validatorDataProvider;\n+  private final SyncDataProvider syncDataProvider;\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetProposerDuties(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.validatorDataProvider = dataProvider.getValidatorDataProvider();\n+    this.syncDataProvider = dataProvider.getSyncDataProvider();\n+    this.chainDataProvider = dataProvider.getChainDataProvider();\n+  }\n+\n+  GetProposerDuties(\n+      final ChainDataProvider chainDataProvider,\n+      final SyncDataProvider syncDataProvider,\n+      final ValidatorDataProvider validatorDataProvider,\n+      final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+    this.validatorDataProvider = validatorDataProvider;\n+    this.syncDataProvider = syncDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get proposer duties\",\n+      tags = {TG_V1_VALIDATOR},\n+      description =\n+          \"Request beacon node to provide all validators that are supposed to propose a block in the given epoch.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdd1a1e206a1a6d63d7e518f0c19602cb54470d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNzUyMg==", "bodyText": "it was a cut and paste, but i still think i'll change it. might raise a PR to fix the api version too.", "url": "https://github.com/ConsenSys/teku/pull/2803#discussion_r489117522", "createdAt": "2020-09-16T02:04:56Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/GetProposerDuties.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.validator;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.EPOCH;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TG_V1_VALIDATOR;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.api.ChainDataProvider;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.SyncDataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.response.v1.validator.GetProposerDutiesResponse;\n+import tech.pegasys.teku.api.response.v1.validator.ProposerDuty;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class GetProposerDuties extends AbstractHandler implements Handler {\n+  private static final Logger LOG = LogManager.getLogger();\n+  public static final String ROUTE = \"/eth/v1/validator/duties/proposer/:epoch\";\n+  private final ValidatorDataProvider validatorDataProvider;\n+  private final SyncDataProvider syncDataProvider;\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public GetProposerDuties(final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.validatorDataProvider = dataProvider.getValidatorDataProvider();\n+    this.syncDataProvider = dataProvider.getSyncDataProvider();\n+    this.chainDataProvider = dataProvider.getChainDataProvider();\n+  }\n+\n+  GetProposerDuties(\n+      final ChainDataProvider chainDataProvider,\n+      final SyncDataProvider syncDataProvider,\n+      final ValidatorDataProvider validatorDataProvider,\n+      final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.chainDataProvider = chainDataProvider;\n+    this.validatorDataProvider = validatorDataProvider;\n+    this.syncDataProvider = syncDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get proposer duties\",\n+      tags = {TG_V1_VALIDATOR},\n+      description =\n+          \"Request beacon node to provide all validators that are supposed to propose a block in the given epoch.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwNjYzOQ=="}, "originalCommit": {"oid": "2fdd1a1e206a1a6d63d7e518f0c19602cb54470d"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDI4NjMyOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostDuties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMToyNzo0NVrOHScvtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMToyNzo0NVrOHScvtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwNzM4MA==", "bodyText": "Should we add a note about what to use instead?", "url": "https://github.com/ConsenSys/teku/pull/2803#discussion_r489107380", "createdAt": "2020-09-16T01:27:45Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostDuties.java", "diffHunk": "@@ -54,6 +54,7 @@ public PostDuties(final ValidatorDataProvider provider, final JsonProvider jsonP\n   }\n \n   @OpenApi(\n+      deprecated = true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdd1a1e206a1a6d63d7e518f0c19602cb54470d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3266, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}