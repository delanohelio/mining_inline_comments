{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NzgxNTkx", "number": 3044, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo1Mzo0NVrOEwewfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo1ODoyMlrOEwe2zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjcxMDM5OnYy", "diffSide": "RIGHT", "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo1Mzo0NVrOHmE6hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo1Mzo0NVrOHmE6hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY4ODQ1NQ==", "bodyText": "should probably ticket this...", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509688455", "createdAt": "2020-10-21T20:53:45Z", "author": {"login": "rolfyone"}, "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "diffHunk": "@@ -237,6 +274,7 @@ public UInt64 getCurrentEpoch() {\n         .thenApply(stateInternal -> stateInternal.map(BeaconState::new));\n   }\n \n+  // TODO: remove once old API's are removed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b3e5c7891c24b7adae1c2144fea62133df6b1b2"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjcyNjU0OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDo1ODoyMlrOHmFEkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0NTo1MVrOHmHSSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MTAyNw==", "bodyText": "this was wrapped because the tests in the API were attempting to use the api level objects (the api.schema.BeaconState)\nis there a reason we need the internal object?", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509691027", "createdAt": "2020-10-21T20:58:22Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -22,20 +22,22 @@\n import java.util.Optional;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.api.response.v1.beacon.GetStateFinalityCheckpointsResponse;\n-import tech.pegasys.teku.api.schema.BeaconState;\n+import tech.pegasys.teku.api.schema.Checkpoint;\n import tech.pegasys.teku.beaconrestapi.AbstractBeaconHandlerTest;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n-  final BeaconState state = new BeaconState(dataStructureUtil.randomBeaconState());\n+  final BeaconState state = dataStructureUtil.randomBeaconState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd15ebc61199e58433701c39b5b91d8e8e4e4b78"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MjUwMw==", "bodyText": "we were unnecessarily serializing the whole beacon state object to only get the checkpoint information. seemed like wasted CPU cycles.", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509692503", "createdAt": "2020-10-21T21:00:26Z", "author": {"login": "cemozerr"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -22,20 +22,22 @@\n import java.util.Optional;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.api.response.v1.beacon.GetStateFinalityCheckpointsResponse;\n-import tech.pegasys.teku.api.schema.BeaconState;\n+import tech.pegasys.teku.api.schema.Checkpoint;\n import tech.pegasys.teku.beaconrestapi.AbstractBeaconHandlerTest;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n-  final BeaconState state = new BeaconState(dataStructureUtil.randomBeaconState());\n+  final BeaconState state = dataStructureUtil.randomBeaconState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MTAyNw=="}, "originalCommit": {"oid": "cd15ebc61199e58433701c39b5b91d8e8e4e4b78"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NDk5NQ==", "bodyText": "its more that the api level then may have dependencies on internal structures, to be honest i'd far prefer its only using api level objects unless explicitly needing the internal ones for a test...", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509694995", "createdAt": "2020-10-21T21:04:03Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -22,20 +22,22 @@\n import java.util.Optional;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.api.response.v1.beacon.GetStateFinalityCheckpointsResponse;\n-import tech.pegasys.teku.api.schema.BeaconState;\n+import tech.pegasys.teku.api.schema.Checkpoint;\n import tech.pegasys.teku.beaconrestapi.AbstractBeaconHandlerTest;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n-  final BeaconState state = new BeaconState(dataStructureUtil.randomBeaconState());\n+  final BeaconState state = dataStructureUtil.randomBeaconState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MTAyNw=="}, "originalCommit": {"oid": "cd15ebc61199e58433701c39b5b91d8e8e4e4b78"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5NzUzNg==", "bodyText": "But we still get the internal beacon state object in ChainDataProvider. So are we trying to keep the internal only there?", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509697536", "createdAt": "2020-10-21T21:07:30Z", "author": {"login": "cemozerr"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -22,20 +22,22 @@\n import java.util.Optional;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.api.response.v1.beacon.GetStateFinalityCheckpointsResponse;\n-import tech.pegasys.teku.api.schema.BeaconState;\n+import tech.pegasys.teku.api.schema.Checkpoint;\n import tech.pegasys.teku.beaconrestapi.AbstractBeaconHandlerTest;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n-  final BeaconState state = new BeaconState(dataStructureUtil.randomBeaconState());\n+  final BeaconState state = dataStructureUtil.randomBeaconState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MTAyNw=="}, "originalCommit": {"oid": "cd15ebc61199e58433701c39b5b91d8e8e4e4b78"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNzMwNw==", "bodyText": "I switched to making the FinalityCheckpointsResponse object in ChainDataProvider so that the rest API handler does not touch the internal object.", "url": "https://github.com/ConsenSys/teku/pull/3044#discussion_r509727307", "createdAt": "2020-10-21T21:45:51Z", "author": {"login": "cemozerr"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -22,20 +22,22 @@\n import java.util.Optional;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.api.response.v1.beacon.GetStateFinalityCheckpointsResponse;\n-import tech.pegasys.teku.api.schema.BeaconState;\n+import tech.pegasys.teku.api.schema.Checkpoint;\n import tech.pegasys.teku.beaconrestapi.AbstractBeaconHandlerTest;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n-  final BeaconState state = new BeaconState(dataStructureUtil.randomBeaconState());\n+  final BeaconState state = dataStructureUtil.randomBeaconState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY5MTAyNw=="}, "originalCommit": {"oid": "cd15ebc61199e58433701c39b5b91d8e8e4e4b78"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}