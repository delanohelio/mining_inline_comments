{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjY2NDEx", "number": 1529, "title": "Make RocksDB database the default db format", "bodyText": "PR Description\nMake RocksDB database (v2) the default db format.  Update startup acceptance test to copy entire data directory before restarting.", "createdAt": "2020-04-03T16:21:08Z", "url": "https://github.com/ConsenSys/teku/pull/1529", "merged": true, "mergeCommit": {"oid": "d726203c352f258f05b030d5f5f7bd538a5ffb09"}, "closed": true, "closedAt": "2020-04-04T19:22:38Z", "author": {"login": "mbaxter"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUDWvHgH2gAyMzk4MjY2NDExOjBkYjVhMmQzZmY1MWFiNDI2NWRiZDNiNmI2MDMyYTEzZjBhYzZmYjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUIu1lAH2gAyMzk4MjY2NDExOjYwMjdmMzcwNzEwYmYyNTg2MjQ1NGJkNjdkYzkxOTgwOTg2OTQ2ZTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0db5a2d3ff51ab4265dbd3b6b6032a13f0ac6fb9", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/0db5a2d3ff51ab4265dbd3b6b6032a13f0ac6fb9", "committedDate": "2020-04-03T16:19:07Z", "message": "Make v2 database the default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDEwNTQ1", "url": "https://github.com/ConsenSys/teku/pull/1529#pullrequestreview-387410545", "createdAt": "2020-04-03T16:34:17Z", "commit": {"oid": "0db5a2d3ff51ab4265dbd3b6b6032a13f0ac6fb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abe8fdd80a6821352db0239c7f7848ef7cdd9152", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/abe8fdd80a6821352db0239c7f7848ef7cdd9152", "committedDate": "2020-04-03T20:22:06Z", "message": "Copy entire data directory when testing restart"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTgwNjEy", "url": "https://github.com/ConsenSys/teku/pull/1529#pullrequestreview-387580612", "createdAt": "2020-04-03T21:06:36Z", "commit": {"oid": "abe8fdd80a6821352db0239c7f7848ef7cdd9152"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTowNjozNlrOGApq0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTowNjozNlrOGApq0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzNTg4OA==", "bodyText": "I'm a bit confused here. Are you not supposed to copy the current entry instead of the whole archiveStream you're iterating on?", "url": "https://github.com/ConsenSys/teku/pull/1529#discussion_r403335888", "createdAt": "2020-04-03T21:06:36Z", "author": {"login": "cemozerr"}, "path": "util/src/main/java/tech/pegasys/artemis/util/file/FileUtil.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.file;\n+\n+import com.google.common.io.MoreFiles;\n+import com.google.common.io.RecursiveDeleteOption;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import org.apache.commons.compress.archivers.ArchiveEntry;\n+import org.apache.commons.compress.archivers.ArchiveException;\n+import org.apache.commons.compress.archivers.ArchiveInputStream;\n+import org.apache.commons.compress.archivers.ArchiveStreamFactory;\n+import org.apache.commons.compress.utils.IOUtils;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public abstract class FileUtil {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  public static void unTar(final File inputTarFile, final File outputDir)\n+      throws IOException, ArchiveException {\n+    final InputStream fileStream = new FileInputStream(inputTarFile);\n+    try (final ArchiveInputStream archiveStream =\n+        new ArchiveStreamFactory().createArchiveInputStream(\"tar\", fileStream)) {\n+      ArchiveEntry entry;\n+      while ((entry = archiveStream.getNextEntry()) != null) {\n+        final File outputFile = new File(outputDir, entry.getName());\n+        if (entry.isDirectory() && !outputFile.exists()) {\n+          // Create directory\n+          if (!outputFile.mkdirs()) {\n+            throw new IllegalStateException(\n+                \"Couldn't create directory \" + outputFile.getAbsolutePath());\n+          }\n+        } else if (!entry.isDirectory()) {\n+          // Create file\n+          try (final OutputStream outputFileStream = new FileOutputStream(outputFile)) {\n+            IOUtils.copy(archiveStream, outputFileStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abe8fdd80a6821352db0239c7f7848ef7cdd9152"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6027f370710bf25862454bd67dc91980986946e6", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/6027f370710bf25862454bd67dc91980986946e6", "committedDate": "2020-04-03T22:34:58Z", "message": "Add extra logic to make sure intermediate directories are created"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4209, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}