{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MjQyOTg3", "number": 2663, "title": "[Issue-2608] Rework hot state checkpoint selection", "bodyText": "PR Description\nRework how hot states are selected for persistence when the persistence frequency is greater than 1 to better handle skipped epochs.\nRather than persisting states only if they are within a targeted epoch, we should persist any state that spans a targeted epoch. This means we will store states at a more regular cadence even if some epochs are skipped altogether.  For example, say that frequency = 2 (every other epoch) and we completely skip epochs 2,4,6, etc.  For the epoch 2 boundary, in this case we should persist the first state in epoch 3.  For the epoch 4 boundary, we should save the first state in epoch 5, etc.\nFixed Issue(s)\nFollow-up to #2608\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-08-26T22:41:49Z", "url": "https://github.com/ConsenSys/teku/pull/2663", "merged": true, "mergeCommit": {"oid": "b9e2fbe6ae6a7a9d544d7e4737d05accdfcd5389"}, "closed": true, "closedAt": "2020-08-27T17:40:14Z", "author": {"login": "mbaxter"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCze3EgH2gAyNDc0MjQyOTg3OmQ0NTU4YjZjNzllN2U5OTQ4Mzc1OTAxN2M2ZGIxZWQ0MmRlZGIxZmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDDQ1vgH2gAyNDc0MjQyOTg3OjdmMDk4NGE5ZDllOWM1YWM3MGM3NGNiYzYwZmE3OTZiZDY5Yjg4Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d4558b6c79e7e99483759017c6db1ed42dedb1fd", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/d4558b6c79e7e99483759017c6db1ed42dedb1fd", "committedDate": "2020-08-26T22:23:57Z", "message": "Rework hot state checkpoint selection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MjUxNjg3", "url": "https://github.com/ConsenSys/teku/pull/2663#pullrequestreview-476251687", "createdAt": "2020-08-27T00:51:34Z", "commit": {"oid": "d4558b6c79e7e99483759017c6db1ed42dedb1fd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDo1MTozNFrOHHriPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDo1MTozNFrOHHriPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzgxNTM1Nw==", "bodyText": "Probably more understandable written as:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .map(e -> e.dividedBy(n))\n          \n          \n            \n                    .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch))\n          \n          \n            \n                    .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch.dividedBy(n)))\n          \n      \n    \n    \n  \n\nOtherwise parentEpoch is a misleading name and it's hard to see the symmetry of dividing both epochs.", "url": "https://github.com/ConsenSys/teku/pull/2663#discussion_r477815357", "createdAt": "2020-08-27T00:51:34Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/BlockTree.java", "diffHunk": "@@ -89,19 +89,22 @@ public boolean contains(final Bytes32 blockRoot) {\n   }\n \n   /**\n-   * Returns true if the block root is at an internal epoch boundary. The rootHash is not considered\n-   * an epoch boundary. A block is at an epoch boundary if it is the first block within an epoch.\n+   * Returns true if the block root is at an epoch boundary where the epoch boundary spanned by this\n+   * block is a multiple of n. The rootHash is not considered an epoch boundary. A block is at an\n+   * epoch boundary if it is the first block at or after an epoch start slot.\n    *\n    * @param blockRoot The block root to check.\n    * @return True if the block root is at an internal epoch boundary.\n    */\n-  public boolean isRootAtEpochBoundary(Bytes32 blockRoot) {\n+  public boolean isRootAtNthEpochBoundary(Bytes32 blockRoot, final int n) {\n+    checkArgument(n > 0, \"Parameter n must be greater than 0\");\n     assertBlockIsInTree(blockRoot);\n     return hashTree\n         .getParent(blockRoot)\n         .filter(this::contains)\n         .map(this::getEpoch)\n-        .map(parentEpoch -> getEpoch(blockRoot).isGreaterThan(parentEpoch))\n+        .map(e -> e.dividedBy(n))\n+        .map(parentEpoch -> getEpoch(blockRoot).dividedBy(n).isGreaterThan(parentEpoch))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4558b6c79e7e99483759017c6db1ed42dedb1fd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f82c37440a76b9c7a986d6ca811d39e8fb0d79", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/f8f82c37440a76b9c7a986d6ca811d39e8fb0d79", "committedDate": "2020-08-27T16:46:45Z", "message": "Clarify epoch boundary calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f0984a9d9e9c5ac70c74cbc60fa796bd69b8869", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/7f0984a9d9e9c5ac70c74cbc60fa796bd69b8869", "committedDate": "2020-08-27T16:47:07Z", "message": "Merge branch 'master' into issue-2608/tweak-hot-state-selection"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3534, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}