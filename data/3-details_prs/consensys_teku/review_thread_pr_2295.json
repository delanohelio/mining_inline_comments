{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMjg0MTg5", "number": 2295, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNDo1MlrOELDZKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNDo1MlrOELDZKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDI1Mzg2OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/DefaultRpcPayloadEncoder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMTowNDo1MlrOGsc-eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMToxNTowM1rOGsdNYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTI3Mw==", "bodyText": "nit: shouldn't we be casting to (Bytes) here since the clazz is Bytes.class anyway? or does the compiler not allow that? or lastly is that just unnecessary?", "url": "https://github.com/ConsenSys/teku/pull/2295#discussion_r449265273", "createdAt": "2020-07-02T21:04:52Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/DefaultRpcPayloadEncoder.java", "diffHunk": "@@ -22,22 +22,28 @@\n import tech.pegasys.teku.networking.eth2.rpc.core.encodings.RpcPayloadEncoder;\n import tech.pegasys.teku.ssz.sos.SimpleOffsetSerializable;\n \n-public class SimpleOffsetSszEncoder<T> implements RpcPayloadEncoder<T> {\n+public class DefaultRpcPayloadEncoder<T> implements RpcPayloadEncoder<T> {\n   private static final Logger LOG = LogManager.getLogger();\n   private final Class<T> clazz;\n \n-  public SimpleOffsetSszEncoder(final Class<T> clazz) {\n+  public DefaultRpcPayloadEncoder(final Class<T> clazz) {\n     this.clazz = clazz;\n   }\n \n   @Override\n   public Bytes encode(final T message) {\n-    return SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n+    return message instanceof Bytes\n+        ? (Bytes) message\n+        : SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public T decode(final Bytes message) throws RpcException {\n     try {\n+      if (clazz.equals(Bytes.class)) {\n+        return (T) message;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9d08d969513de41f214577cd840e070182fceee"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NjE5MA==", "bodyText": "we're basically bypassing the decoder if its already bytes. the compiler wasn't happy! This is the other half of the encode bypass basically. If we don't bypass it here, then we attempt to go and decode it, and it fails.", "url": "https://github.com/ConsenSys/teku/pull/2295#discussion_r449266190", "createdAt": "2020-07-02T21:07:12Z", "author": {"login": "rolfyone"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/DefaultRpcPayloadEncoder.java", "diffHunk": "@@ -22,22 +22,28 @@\n import tech.pegasys.teku.networking.eth2.rpc.core.encodings.RpcPayloadEncoder;\n import tech.pegasys.teku.ssz.sos.SimpleOffsetSerializable;\n \n-public class SimpleOffsetSszEncoder<T> implements RpcPayloadEncoder<T> {\n+public class DefaultRpcPayloadEncoder<T> implements RpcPayloadEncoder<T> {\n   private static final Logger LOG = LogManager.getLogger();\n   private final Class<T> clazz;\n \n-  public SimpleOffsetSszEncoder(final Class<T> clazz) {\n+  public DefaultRpcPayloadEncoder(final Class<T> clazz) {\n     this.clazz = clazz;\n   }\n \n   @Override\n   public Bytes encode(final T message) {\n-    return SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n+    return message instanceof Bytes\n+        ? (Bytes) message\n+        : SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public T decode(final Bytes message) throws RpcException {\n     try {\n+      if (clazz.equals(Bytes.class)) {\n+        return (T) message;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTI3Mw=="}, "originalCommit": {"oid": "d9d08d969513de41f214577cd840e070182fceee"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2Nzk1OA==", "bodyText": "Oh yeah I understand that. I mean, on line 45, can we not do:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (T) message;\n          \n          \n            \n                    return (Bytes) message;", "url": "https://github.com/ConsenSys/teku/pull/2295#discussion_r449267958", "createdAt": "2020-07-02T21:11:59Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/DefaultRpcPayloadEncoder.java", "diffHunk": "@@ -22,22 +22,28 @@\n import tech.pegasys.teku.networking.eth2.rpc.core.encodings.RpcPayloadEncoder;\n import tech.pegasys.teku.ssz.sos.SimpleOffsetSerializable;\n \n-public class SimpleOffsetSszEncoder<T> implements RpcPayloadEncoder<T> {\n+public class DefaultRpcPayloadEncoder<T> implements RpcPayloadEncoder<T> {\n   private static final Logger LOG = LogManager.getLogger();\n   private final Class<T> clazz;\n \n-  public SimpleOffsetSszEncoder(final Class<T> clazz) {\n+  public DefaultRpcPayloadEncoder(final Class<T> clazz) {\n     this.clazz = clazz;\n   }\n \n   @Override\n   public Bytes encode(final T message) {\n-    return SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n+    return message instanceof Bytes\n+        ? (Bytes) message\n+        : SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public T decode(final Bytes message) throws RpcException {\n     try {\n+      if (clazz.equals(Bytes.class)) {\n+        return (T) message;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTI3Mw=="}, "originalCommit": {"oid": "d9d08d969513de41f214577cd840e070182fceee"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2OTA5MA==", "bodyText": "No because the compiler doesn't know that T is Bytes.  We do because we can make the leap from Class<T> clazz being equal to Bytes.class to knowing that T is Bytes but the compiler can't.", "url": "https://github.com/ConsenSys/teku/pull/2295#discussion_r449269090", "createdAt": "2020-07-02T21:15:03Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/encodings/ssz/DefaultRpcPayloadEncoder.java", "diffHunk": "@@ -22,22 +22,28 @@\n import tech.pegasys.teku.networking.eth2.rpc.core.encodings.RpcPayloadEncoder;\n import tech.pegasys.teku.ssz.sos.SimpleOffsetSerializable;\n \n-public class SimpleOffsetSszEncoder<T> implements RpcPayloadEncoder<T> {\n+public class DefaultRpcPayloadEncoder<T> implements RpcPayloadEncoder<T> {\n   private static final Logger LOG = LogManager.getLogger();\n   private final Class<T> clazz;\n \n-  public SimpleOffsetSszEncoder(final Class<T> clazz) {\n+  public DefaultRpcPayloadEncoder(final Class<T> clazz) {\n     this.clazz = clazz;\n   }\n \n   @Override\n   public Bytes encode(final T message) {\n-    return SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n+    return message instanceof Bytes\n+        ? (Bytes) message\n+        : SimpleOffsetSerializer.serialize((SimpleOffsetSerializable) message);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public T decode(final Bytes message) throws RpcException {\n     try {\n+      if (clazz.equals(Bytes.class)) {\n+        return (T) message;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI2NTI3Mw=="}, "originalCommit": {"oid": "d9d08d969513de41f214577cd840e070182fceee"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3507, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}