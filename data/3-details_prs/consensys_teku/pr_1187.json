{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDAyNTIw", "number": 1187, "title": "#1163 /beacon/finalized_checkpoint added OpenAPI and unit test", "bodyText": "Signed-off-by: Sally MacFarlane sally.macfarlane@consensys.net\nAdd OpenAPI info and unit test for /beacon/finalized_checkpoint\nFixed Issue(s)\nFixes #1163", "createdAt": "2020-02-18T03:44:26Z", "url": "https://github.com/ConsenSys/teku/pull/1187", "merged": true, "mergeCommit": {"oid": "2ff27df7f07b904ef274a9754dd663ea34e91087"}, "closed": true, "closedAt": "2020-02-18T07:48:06Z", "author": {"login": "macfarla"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFZj_5gH2gAyMzc2NDAyNTIwOmFhMWYzOTI1NWFkZWNkMDAzZTI2YTQ0ZjlhOGIxZjhiMTExZjIzOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFcVw2gFqTM2MDEwNDE0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aa1f39255adecd003e26a44f9a8b1f8b111f2397", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/aa1f39255adecd003e26a44f9a8b1f8b111f2397", "committedDate": "2020-02-18T03:42:39Z", "message": "added OpenAPI and unit test\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/fda5b4cc3a9e1af5f69486485714815af34e90aa", "committedDate": "2020-02-18T03:48:32Z", "message": "class\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDc2OTc4", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360076978", "createdAt": "2020-02-18T05:22:20Z", "commit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyMjoyMFrOFq1bwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyMjoyMFrOFq1bwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1OTk2OA==", "bodyText": "I've been asked to kill off @NotNull annotations, so we should do that here too.", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380459968", "createdAt": "2020-02-18T05:22:20Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandler.java", "diffHunk": "@@ -13,36 +13,46 @@\n \n package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n \n-import java.util.HashMap;\n-import java.util.Map;\n-import tech.pegasys.artemis.beaconrestapi.handlerinterfaces.BeaconRestApiHandler;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import org.jetbrains.annotations.NotNull;\n import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.provider.JsonProvider;\n import tech.pegasys.artemis.storage.ChainStorageClient;\n import tech.pegasys.artemis.storage.Store;\n \n-public class FinalizedCheckpointHandler implements BeaconRestApiHandler {\n+public class FinalizedCheckpointHandler implements Handler {\n \n   private final ChainStorageClient client;\n \n   public FinalizedCheckpointHandler(ChainStorageClient client) {\n     this.client = client;\n   }\n \n-  @Override\n-  public String getPath() {\n-    return \"/beacon/finalized_checkpoint\";\n-  }\n+  public static final String ROUTE = \"/beacon/finalized_checkpoint\";\n \n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Finalized checkpoint.\",\n+      tags = {\"Node\"},\n+      description = \"Requests that the beacon node give finalized checkpoint info.\",\n+      responses = {\n+        @OpenApiResponse(status = \"200\", content = @OpenApiContent(from = Checkpoint.class)),\n+      })\n   @Override\n-  public Object handleRequest(RequestParams params) {\n+  public void handle(@NotNull Context ctx) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDc3MTY2", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360077166", "createdAt": "2020-02-18T05:23:11Z", "commit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyMzoxMlrOFq1cZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyMzoxMlrOFq1cZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ2MDEzNQ==", "bodyText": "@OpenApiResponse(status = \"204\") as a response to satisfy below where we're returning SC_NO_CONTENT.", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380460135", "createdAt": "2020-02-18T05:23:12Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandler.java", "diffHunk": "@@ -13,36 +13,46 @@\n \n package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n \n-import java.util.HashMap;\n-import java.util.Map;\n-import tech.pegasys.artemis.beaconrestapi.handlerinterfaces.BeaconRestApiHandler;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import org.jetbrains.annotations.NotNull;\n import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.provider.JsonProvider;\n import tech.pegasys.artemis.storage.ChainStorageClient;\n import tech.pegasys.artemis.storage.Store;\n \n-public class FinalizedCheckpointHandler implements BeaconRestApiHandler {\n+public class FinalizedCheckpointHandler implements Handler {\n \n   private final ChainStorageClient client;\n \n   public FinalizedCheckpointHandler(ChainStorageClient client) {\n     this.client = client;\n   }\n \n-  @Override\n-  public String getPath() {\n-    return \"/beacon/finalized_checkpoint\";\n-  }\n+  public static final String ROUTE = \"/beacon/finalized_checkpoint\";\n \n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Finalized checkpoint.\",\n+      tags = {\"Node\"},\n+      description = \"Requests that the beacon node give finalized checkpoint info.\",\n+      responses = {\n+        @OpenApiResponse(status = \"200\", content = @OpenApiContent(from = Checkpoint.class)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDc3NTc5", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360077579", "createdAt": "2020-02-18T05:24:54Z", "commit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyNDo1NFrOFq1dsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNToyNDo1NFrOFq1dsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ2MDQ2Nw==", "bodyText": "we should have a test that shows the 'no content' response.", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380460467", "createdAt": "2020-02-18T05:24:54Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandlerTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import io.javalin.http.Context;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.ChainStorageClient;\n+import tech.pegasys.artemis.storage.Store;\n+\n+public class FinalizedCheckpointHandlerTest {\n+  private Context mockContext = Mockito.mock(Context.class);\n+  private ChainStorageClient mockClient = Mockito.mock(ChainStorageClient.class);\n+  private Store mockStore = Mockito.mock(Store.class);\n+\n+  private final Checkpoint checkpoint = DataStructureUtil.randomCheckpoint(99);\n+\n+  @Test\n+  public void shouldReturnCheckpoint() throws Exception {\n+    when(mockClient.getStore()).thenReturn(mockStore);\n+    when(mockStore.getFinalizedCheckpoint()).thenReturn(checkpoint);\n+\n+    FinalizedCheckpointHandler handler = new FinalizedCheckpointHandler(mockClient);\n+    handler.handle(mockContext);\n+\n+    verify(mockContext).result(JsonProvider.objectToJSON(checkpoint));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDg3NTg4", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360087588", "createdAt": "2020-02-18T06:04:52Z", "commit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjowNDo1M1rOFq1-Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjowNDo1M1rOFq1-Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ2ODgyMg==", "bodyText": "adrian commented elsewhere to avoid using the 'mock' prefix on mock objects, because apparently its not named in that format elsewhere in Teku. I hate it, but passing on the message.", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380468822", "createdAt": "2020-02-18T06:04:53Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandlerTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import io.javalin.http.Context;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.ChainStorageClient;\n+import tech.pegasys.artemis.storage.Store;\n+\n+public class FinalizedCheckpointHandlerTest {\n+  private Context mockContext = Mockito.mock(Context.class);\n+  private ChainStorageClient mockClient = Mockito.mock(ChainStorageClient.class);\n+  private Store mockStore = Mockito.mock(Store.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fda5b4cc3a9e1af5f69486485714815af34e90aa"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5fd8551eb5b551d905cf66c3a9510a9ea312ab6", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/b5fd8551eb5b551d905cf66c3a9510a9ea312ab6", "committedDate": "2020-02-18T06:24:15Z", "message": "PR review\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDk0Mjkw", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360094290", "createdAt": "2020-02-18T06:27:42Z", "commit": {"oid": "b5fd8551eb5b551d905cf66c3a9510a9ea312ab6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjoyNzo0MlrOFq2Tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjoyNzo0MlrOFq2Tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ3NDIyNg==", "bodyText": "So, yes, but check FinalizedCheckpointHandler, not GenesisTimeHandler :)", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380474226", "createdAt": "2020-02-18T06:27:42Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandlerTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import io.javalin.http.Context;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+import tech.pegasys.artemis.storage.ChainStorageClient;\n+import tech.pegasys.artemis.storage.Store;\n+\n+public class FinalizedCheckpointHandlerTest {\n+  private Context context = Mockito.mock(Context.class);\n+  private ChainStorageClient client = Mockito.mock(ChainStorageClient.class);\n+  private Store store = Mockito.mock(Store.class);\n+\n+  private final Checkpoint checkpoint = DataStructureUtil.randomCheckpoint(99);\n+\n+  @Test\n+  public void shouldReturnCheckpoint() throws Exception {\n+    when(client.getStore()).thenReturn(store);\n+    when(store.getFinalizedCheckpoint()).thenReturn(checkpoint);\n+\n+    FinalizedCheckpointHandler handler = new FinalizedCheckpointHandler(client);\n+    handler.handle(context);\n+\n+    verify(context).result(JsonProvider.objectToJSON(checkpoint));\n+  }\n+\n+  @Test\n+  public void shouldReturnNoContentWhenStoreIsNull() throws Exception {\n+    GenesisTimeHandler handler = new GenesisTimeHandler(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fd8551eb5b551d905cf66c3a9510a9ea312ab6"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDk1NjY1", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360095665", "createdAt": "2020-02-18T06:32:07Z", "commit": {"oid": "b5fd8551eb5b551d905cf66c3a9510a9ea312ab6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjozMjowOFrOFq2aKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNjozMjowOFrOFq2aKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ3NTk0Ng==", "bodyText": "This needs a return or you'll carry on and throw a NullPointerException on line 55.", "url": "https://github.com/ConsenSys/teku/pull/1187#discussion_r380475946", "createdAt": "2020-02-18T06:32:08Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/FinalizedCheckpointHandler.java", "diffHunk": "@@ -13,36 +13,46 @@\n \n package tech.pegasys.artemis.beaconrestapi.beaconhandlers;\n \n-import java.util.HashMap;\n-import java.util.Map;\n-import tech.pegasys.artemis.beaconrestapi.handlerinterfaces.BeaconRestApiHandler;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n import tech.pegasys.artemis.datastructures.state.Checkpoint;\n+import tech.pegasys.artemis.provider.JsonProvider;\n import tech.pegasys.artemis.storage.ChainStorageClient;\n import tech.pegasys.artemis.storage.Store;\n \n-public class FinalizedCheckpointHandler implements BeaconRestApiHandler {\n+public class FinalizedCheckpointHandler implements Handler {\n \n   private final ChainStorageClient client;\n \n   public FinalizedCheckpointHandler(ChainStorageClient client) {\n     this.client = client;\n   }\n \n-  @Override\n-  public String getPath() {\n-    return \"/beacon/finalized_checkpoint\";\n-  }\n+  public static final String ROUTE = \"/beacon/finalized_checkpoint\";\n \n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Finalized checkpoint.\",\n+      tags = {\"Node\"},\n+      description = \"Requests that the beacon node give finalized checkpoint info.\",\n+      responses = {\n+        @OpenApiResponse(status = \"200\", content = @OpenApiContent(from = Checkpoint.class)),\n+        @OpenApiResponse(status = \"204\")\n+      })\n   @Override\n-  public Object handleRequest(RequestParams params) {\n+  public void handle(Context ctx) throws Exception {\n     Store store = client.getStore();\n     if (store == null) {\n-      return null;\n+      ctx.status(SC_NO_CONTENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5fd8551eb5b551d905cf66c3a9510a9ea312ab6"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83c8d50e780ab8eda53553b524599f06d941ab43", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/83c8d50e780ab8eda53553b524599f06d941ab43", "committedDate": "2020-02-18T06:32:26Z", "message": "fixed type\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd513474c7670cdde285463566f72ca671c79f02", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/bd513474c7670cdde285463566f72ca671c79f02", "committedDate": "2020-02-18T06:33:41Z", "message": "return\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8fa5060e316fa47373c42e153e03110c776d43", "author": {"user": {"login": "macfarla", "name": "Sally MacFarlane"}}, "url": "https://github.com/ConsenSys/teku/commit/8d8fa5060e316fa47373c42e153e03110c776d43", "committedDate": "2020-02-18T06:36:06Z", "message": "fixed test\n\nSigned-off-by: Sally MacFarlane <sally.macfarlane@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMTA0MTQ1", "url": "https://github.com/ConsenSys/teku/pull/1187#pullrequestreview-360104145", "createdAt": "2020-02-18T06:56:49Z", "commit": {"oid": "8d8fa5060e316fa47373c42e153e03110c776d43"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}