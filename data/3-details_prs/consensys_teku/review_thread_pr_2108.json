{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjAyMjA1", "number": 2108, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDozNTo0NVrOEEUxbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDozNTo0NVrOEEUxbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTcwMDk0OnYy", "diffSide": "RIGHT", "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/DutySchedulerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDozNTo0NlrOGh38JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTozOTozOVrOGiDo7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3MjcwOA==", "bodyText": "nit: this could make the check more explicit/legible\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                verifyNoMoreInteractions(validatorApiChannel);\n          \n          \n            \n                verify(validatorApiChannel, once()).getDuties(UnsignedLong.valueOf(5), VALIDATOR_KEYS);", "url": "https://github.com/ConsenSys/teku/pull/2108#discussion_r438172708", "createdAt": "2020-06-10T14:35:46Z", "author": {"login": "cemozerr"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/DutySchedulerTest.java", "diffHunk": "@@ -194,6 +194,27 @@ public void shouldRefetchDutiesAfterReorg() {\n     verifyNoMoreInteractions(validatorApiChannel);\n   }\n \n+  @Test\n+  public void shouldRefetchDutiesAfterBlockImportedFromTwoOrMoreEpochsBefore() {\n+    when(validatorApiChannel.getDuties(any(), any())).thenReturn(new SafeFuture<>());\n+    dutyScheduler.onSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(5)));\n+\n+    verify(validatorApiChannel).getDuties(UnsignedLong.valueOf(5), VALIDATOR_KEYS);\n+    verify(validatorApiChannel).getDuties(UnsignedLong.valueOf(6), VALIDATOR_KEYS);\n+    verifyNoMoreInteractions(validatorApiChannel);\n+\n+    dutyScheduler.onBlockImportedForSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(4)));\n+\n+    // Duties are invalidated but not yet re-requested as we might be importing a batch of blocks\n+    verifyNoMoreInteractions(validatorApiChannel);\n+\n+    dutyScheduler.onSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(5)).plus(ONE));\n+    // Re-requests epoch 6 which may have been changed by the new block\n+    verify(validatorApiChannel, times(2)).getDuties(UnsignedLong.valueOf(6), VALIDATOR_KEYS);\n+    // Epoch 5 is unchanged so not re-requested\n+    verifyNoMoreInteractions(validatorApiChannel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea410d6fe7419a976b6e576b111525da08691f9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2NDM5OQ==", "bodyText": "The verifyNoMoreInteractions is a lot more strict though - it will pick up if any other epoch is requested which is what I'm looking for.", "url": "https://github.com/ConsenSys/teku/pull/2108#discussion_r438364399", "createdAt": "2020-06-10T19:39:39Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/DutySchedulerTest.java", "diffHunk": "@@ -194,6 +194,27 @@ public void shouldRefetchDutiesAfterReorg() {\n     verifyNoMoreInteractions(validatorApiChannel);\n   }\n \n+  @Test\n+  public void shouldRefetchDutiesAfterBlockImportedFromTwoOrMoreEpochsBefore() {\n+    when(validatorApiChannel.getDuties(any(), any())).thenReturn(new SafeFuture<>());\n+    dutyScheduler.onSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(5)));\n+\n+    verify(validatorApiChannel).getDuties(UnsignedLong.valueOf(5), VALIDATOR_KEYS);\n+    verify(validatorApiChannel).getDuties(UnsignedLong.valueOf(6), VALIDATOR_KEYS);\n+    verifyNoMoreInteractions(validatorApiChannel);\n+\n+    dutyScheduler.onBlockImportedForSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(4)));\n+\n+    // Duties are invalidated but not yet re-requested as we might be importing a batch of blocks\n+    verifyNoMoreInteractions(validatorApiChannel);\n+\n+    dutyScheduler.onSlot(compute_start_slot_at_epoch(UnsignedLong.valueOf(5)).plus(ONE));\n+    // Re-requests epoch 6 which may have been changed by the new block\n+    verify(validatorApiChannel, times(2)).getDuties(UnsignedLong.valueOf(6), VALIDATOR_KEYS);\n+    // Epoch 5 is unchanged so not re-requested\n+    verifyNoMoreInteractions(validatorApiChannel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3MjcwOA=="}, "originalCommit": {"oid": "2ea410d6fe7419a976b6e576b111525da08691f9"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3570, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}