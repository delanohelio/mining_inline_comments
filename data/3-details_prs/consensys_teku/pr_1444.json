{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMjY3ODE1", "number": 1444, "title": "Fuzz utils", "bodyText": "Fuzzing harnesses suitable for use with beacon_fuzz\nPR Description\nImplements harnesses that exercise relevant state transition functions.\nThey read SSZ-encoded bytes (generally a BeaconState + Operation, perform the operation, then output the resulting SSZ-encoded BeaconState).\nFixed Issue(s)\nJava-side of the implementation that fixes sigp/beacon-fuzz#16\nTODO\n\nFull integration testing (when beacon-fuzz supports v0.10.1)\nAbility to disable BLS signature verification (could be a separate PR)\nSquash and neaten commits", "createdAt": "2020-03-23T09:38:15Z", "url": "https://github.com/ConsenSys/teku/pull/1444", "merged": true, "mergeCommit": {"oid": "1dc9801674819f2445d4d595209d3d893c2a96a2"}, "closed": true, "closedAt": "2020-08-21T15:34:37Z", "author": {"login": "gnattishness"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA2QOjAFqTQ3MTk1MTg4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBGmK-gFqTQ3MjU5MDMwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTUxODg0", "url": "https://github.com/ConsenSys/teku/pull/1444#pullrequestreview-471951884", "createdAt": "2020-08-20T20:12:43Z", "commit": {"oid": "f58c17095bb04bdd53863e94d2e2272826ce1ee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDoxMjo0M1rOHERrKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDoxMjo0M1rOHERrKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ==", "bodyText": "Would you mind clearing out some of these TODO comments?  We should either implement the TODO's now or cut them.", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474245931", "createdAt": "2020-08-20T20:12:43Z", "author": {"login": "mbaxter"}, "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.fuzz;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.bls.BLSConstants;\n+import tech.pegasys.teku.core.BlockProcessorUtil;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.core.StateTransitionException;\n+import tech.pegasys.teku.core.exceptions.BlockProcessingException;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n+import tech.pegasys.teku.datastructures.util.SimpleOffsetSerializer;\n+import tech.pegasys.teku.fuzz.input.AttestationFuzzInput;\n+import tech.pegasys.teku.fuzz.input.AttesterSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockHeaderFuzzInput;\n+import tech.pegasys.teku.fuzz.input.DepositFuzzInput;\n+import tech.pegasys.teku.fuzz.input.ProposerSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.VoluntaryExitFuzzInput;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.sos.ReflectionInformation;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+// TODO a Java FuzzHarness interface? - that way type safety can be checked at compile time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58c17095bb04bdd53863e94d2e2272826ce1ee5"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff40d0b36c3da6b87a18ca0859b584a3841b771d", "author": {"user": {"login": "gnattishness", "name": "Nat"}}, "url": "https://github.com/ConsenSys/teku/commit/ff40d0b36c3da6b87a18ca0859b584a3841b771d", "committedDate": "2020-08-21T01:20:45Z", "message": "Implement FuzzUtil - fuzzing target endpoints.\n\nThanks @mbaxter and @cemozerr for their assistance and contributions.\n(More detailed attribution below).\n\nCreates a FuzzUtil package that exercises relevant state transition\noperations, given XXXFuzzInput classes. A functional API that can\nbe targeted for fuzz-testing (including by beacon-fuzz differential\nfuzzing framework).\n\nAdds XXXFuzzInput classes that represent SSZ containers consistent with\nother clients. For block processing operations, these are in the form of\nContainer + BeaconState.\n\nThanks @mbaxter for:\n    - Moving the harnesses to a standalone package.\n    - Fix up XXXFuzzInput de/serialization and equality methods.\n    - Help with merge conflicts due to this long-lived PR!\n    - Make unit tests using reference test input.\n    - General assistance and advice!\n\nThanks @cemozerr for assistance with disabling BLS."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTkwMzAw", "url": "https://github.com/ConsenSys/teku/pull/1444#pullrequestreview-472590300", "createdAt": "2020-08-21T15:32:17Z", "commit": {"oid": "ff40d0b36c3da6b87a18ca0859b584a3841b771d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}