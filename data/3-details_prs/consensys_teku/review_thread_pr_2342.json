{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjE1NDA0", "number": 2342, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODoxODowOVrOENL2nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODoyMjo0MVrOENL8Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjYxMTQ4OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODoxODowOVrOGvuUAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTowMzozMFrOGwFk_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5NTA0Mg==", "bodyText": "Are we enforced now to specify any internal classes this way?", "url": "https://github.com/ConsenSys/teku/pull/2342#discussion_r452695042", "createdAt": "2020-07-10T08:18:09Z", "author": {"login": "Nashatyrev"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -94,10 +93,10 @@ public synchronized void subscribeToPersistentSubnets(\n   public synchronized void onSlot(final UnsignedLong slot) {\n     boolean shouldUpdateENR = false;\n \n-    final Iterator<Entry<Integer, UnsignedLong>> iterator =\n+    final Iterator<Map.Entry<Integer, UnsignedLong>> iterator =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e5caeab24daa4c93871b2c8f83203ad1cd52244"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NjIyMg==", "bodyText": "Not all internal classes - error prone has a rule to prevent importing classes or methods with overly generic names.  It used to mostly hit me on Builder but has apparently been expanded to include Entry and valueOf.  I can live with it but it would be very easy to convince me to just disable the whole rule as I can't think of a time when it wasn't obvious which Builder was meant in context.", "url": "https://github.com/ConsenSys/teku/pull/2342#discussion_r453076222", "createdAt": "2020-07-10T21:03:30Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/AttestationTopicSubscriber.java", "diffHunk": "@@ -94,10 +93,10 @@ public synchronized void subscribeToPersistentSubnets(\n   public synchronized void onSlot(final UnsignedLong slot) {\n     boolean shouldUpdateENR = false;\n \n-    final Iterator<Entry<Integer, UnsignedLong>> iterator =\n+    final Iterator<Map.Entry<Integer, UnsignedLong>> iterator =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5NTA0Mg=="}, "originalCommit": {"oid": "7e5caeab24daa4c93871b2c8f83203ad1cd52244"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjYyNTk1OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/view/AbstractImmutableContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODoyMjo0MVrOGvuc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTowNjozNlrOGwFpdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5NzMyOA==", "bodyText": "Is it something which is enforced now?", "url": "https://github.com/ConsenSys/teku/pull/2342#discussion_r452697328", "createdAt": "2020-07-10T08:22:41Z", "author": {"login": "Nashatyrev"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/view/AbstractImmutableContainer.java", "diffHunk": "@@ -28,16 +28,17 @@\n /** Handy base class for immutable containers */\n public abstract class AbstractImmutableContainer extends ContainerViewReadImpl {\n \n-  public AbstractImmutableContainer(ContainerViewType<? extends AbstractImmutableContainer> type) {\n+  protected AbstractImmutableContainer(\n+      ContainerViewType<? extends AbstractImmutableContainer> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e5caeab24daa4c93871b2c8f83203ad1cd52244"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3NzM2Nw==", "bodyText": "Yes. It's technically right that there's no point having a public constructor for an abstract class but I'm not sure I care. If it gets annoying I'd be happy to disable it.  I just generally try to minimise the number of rules we disable unless there's a real reason to.", "url": "https://github.com/ConsenSys/teku/pull/2342#discussion_r453077367", "createdAt": "2020-07-10T21:06:36Z", "author": {"login": "ajsutton"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/view/AbstractImmutableContainer.java", "diffHunk": "@@ -28,16 +28,17 @@\n /** Handy base class for immutable containers */\n public abstract class AbstractImmutableContainer extends ContainerViewReadImpl {\n \n-  public AbstractImmutableContainer(ContainerViewType<? extends AbstractImmutableContainer> type) {\n+  protected AbstractImmutableContainer(\n+      ContainerViewType<? extends AbstractImmutableContainer> type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY5NzMyOA=="}, "originalCommit": {"oid": "7e5caeab24daa4c93871b2c8f83203ad1cd52244"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3534, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}