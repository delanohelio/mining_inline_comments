{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzE3NjQ5", "number": 1719, "title": "Handle requests from peers which have disconnected prior to processing", "bodyText": "PR Description\nCleanly handle when peers send us a request and disconnect before we begin processing the request.  Previously this resulted in a NullPointerException because we couldn't find the peer the request came from.  Now most requests are simply ignored but Goodbye requests still increment the disconnect reason metric correctly.", "createdAt": "2020-05-05T05:42:58Z", "url": "https://github.com/ConsenSys/teku/pull/1719", "merged": true, "mergeCommit": {"oid": "5e6923f9597a73a56c449453825141c3b40a8e94"}, "closed": true, "closedAt": "2020-05-05T21:33:14Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceNZpDgH2gAyNDEzMzE3NjQ5OjgxZTY5YjlkMWU2YTNmNDVlY2ViMjIyNDJjMjg3ZGI2MWNlMjFhOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcebAO1AFqTQwNjE3MDU3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "81e69b9d1e6a3f45eceb22242c287db61ce21a97", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/81e69b9d1e6a3f45eceb22242c287db61ce21a97", "committedDate": "2020-05-05T05:40:35Z", "message": "Handle requests from peers which disconnect before we get to processing the request."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56032389699463847b05c12fa4e46c2a60885ae7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/56032389699463847b05c12fa4e46c2a60885ae7", "committedDate": "2020-05-05T05:42:49Z", "message": "Improve log message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODcwOTg4", "url": "https://github.com/ConsenSys/teku/pull/1719#pullrequestreview-405870988", "createdAt": "2020-05-05T14:55:12Z", "commit": {"oid": "56032389699463847b05c12fa4e46c2a60885ae7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODc1NzI3", "url": "https://github.com/ConsenSys/teku/pull/1719#pullrequestreview-405875727", "createdAt": "2020-05-05T15:00:04Z", "commit": {"oid": "56032389699463847b05c12fa4e46c2a60885ae7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTowMDowNFrOGQtnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTowMDowNFrOGQtnjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3NzgwNg==", "bodyText": "This isn't really a server error - what about completing with a PeerDisconnectedException?  And then we could update completeWithError to only attempt writing the message to our peer if it gets an RcpException.", "url": "https://github.com/ConsenSys/teku/pull/1719#discussion_r420177806", "createdAt": "2020-05-05T15:00:04Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/core/PeerRequiredLocalMessageHandler.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.networking.eth2.rpc.core;\n+\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.teku.networking.eth2.peers.Eth2Peer;\n+\n+public abstract class PeerRequiredLocalMessageHandler<I, O> implements LocalMessageHandler<I, O> {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  @Override\n+  public void onIncomingMessage(\n+      final Optional<Eth2Peer> maybePeer, final I message, final ResponseCallback<O> callback) {\n+    maybePeer.ifPresentOrElse(\n+        peer -> onIncomingMessage(peer, message, callback),\n+        () -> {\n+          LOG.trace(\n+              \"Ignoring message of type {} because peer has disconnected\", message.getClass());\n+          callback.completeWithError(\n+              new RpcException(RpcResponseStatus.SERVER_ERROR_CODE, \"Peer disconnected\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56032389699463847b05c12fa4e46c2a60885ae7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f5d53070010171c852e33e7ad3f4d96abd6757", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/f0f5d53070010171c852e33e7ad3f4d96abd6757", "committedDate": "2020-05-05T21:20:39Z", "message": "Separate rpc error responses from unexpected errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47ca6883d45aeea2387c373dddcf7215fd672a94", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/47ca6883d45aeea2387c373dddcf7215fd672a94", "committedDate": "2020-05-05T21:22:19Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into handle-requests-from-disconnected-peers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MTcwNTcw", "url": "https://github.com/ConsenSys/teku/pull/1719#pullrequestreview-406170570", "createdAt": "2020-05-05T21:31:30Z", "commit": {"oid": "47ca6883d45aeea2387c373dddcf7215fd672a94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4163, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}