{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1Mzg2MDg0", "number": 2425, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjoxMzoyMFrOERhQdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNjo0M1rOERhzOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODA2MTM0OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjoxMzoyMFrOG2RvMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzo1MzoyNFrOG2VW7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Njg5Ng==", "bodyText": "Not sure I'm getting what is this filter for? Why not just join?", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459566896", "createdAt": "2020-07-23T16:13:20Z", "author": {"login": "Nashatyrev"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -712,8 +718,10 @@ protected void assertHotBlocksAndStates(\n \n       final List<BeaconState> hotStates =\n           currentStore.getBlockRoots().stream()\n-              .map(currentStore::getBlockState)\n-              .filter(Objects::nonNull)\n+              .map(currentStore::retrieveBlockState)\n+              .filter(SafeFuture::isDone)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8970bca6a492d0d7a100a25562c53451aa39cbd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5MjUxNg==", "bodyText": "I was thinking that we could avoid blocking in this way, and if some futures were skipped because they haven't resolved the assertions below should fail.  But on second thought, I think that's a bad assumption - will rework.", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459592516", "createdAt": "2020-07-23T16:55:36Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -712,8 +718,10 @@ protected void assertHotBlocksAndStates(\n \n       final List<BeaconState> hotStates =\n           currentStore.getBlockRoots().stream()\n-              .map(currentStore::getBlockState)\n-              .filter(Objects::nonNull)\n+              .map(currentStore::retrieveBlockState)\n+              .filter(SafeFuture::isDone)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Njg5Ng=="}, "originalCommit": {"oid": "b8970bca6a492d0d7a100a25562c53451aa39cbd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxMzEyOA==", "bodyText": "May be just set the test timeout?", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459613128", "createdAt": "2020-07-23T17:30:39Z", "author": {"login": "Nashatyrev"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -712,8 +718,10 @@ protected void assertHotBlocksAndStates(\n \n       final List<BeaconState> hotStates =\n           currentStore.getBlockRoots().stream()\n-              .map(currentStore::getBlockState)\n-              .filter(Objects::nonNull)\n+              .map(currentStore::retrieveBlockState)\n+              .filter(SafeFuture::isDone)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Njg5Ng=="}, "originalCommit": {"oid": "b8970bca6a492d0d7a100a25562c53451aa39cbd"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyNjIyMQ==", "bodyText": "Ended up just adding an assert inside of the map function", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459626221", "createdAt": "2020-07-23T17:53:24Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -712,8 +718,10 @@ protected void assertHotBlocksAndStates(\n \n       final List<BeaconState> hotStates =\n           currentStore.getBlockRoots().stream()\n-              .map(currentStore::getBlockState)\n-              .filter(Objects::nonNull)\n+              .map(currentStore::retrieveBlockState)\n+              .filter(SafeFuture::isDone)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2Njg5Ng=="}, "originalCommit": {"oid": "b8970bca6a492d0d7a100a25562c53451aa39cbd"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODE1MDM0OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdatesFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjozNjo0M1rOG2Snsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo1ODo0MFrOG2Tadw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTM2Mg==", "bodyText": "Don't you think that Factory is a bit misleading here? May be a Builder would be more appropriate?", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459581362", "createdAt": "2020-07-23T16:36:43Z", "author": {"login": "Nashatyrev"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdatesFactory.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.hashtree.HashTree;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.CheckpointAndBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.storage.events.FinalizedChainData;\n+import tech.pegasys.teku.storage.store.Store.Transaction;\n+\n+public class StoreTransactionUpdatesFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4756e2c92ca530b50d6ef345e26faf1f5bf7916"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NzY3Ng==", "bodyText": "Yeah - I was unsure of the naming as well.  But I think \"builder\" implies that you can set various properties when externally it just looks like a factory:  StoreTransactionUpdatesFactory.create(...)", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459587676", "createdAt": "2020-07-23T16:47:26Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdatesFactory.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.hashtree.HashTree;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.CheckpointAndBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.storage.events.FinalizedChainData;\n+import tech.pegasys.teku.storage.store.Store.Transaction;\n+\n+public class StoreTransactionUpdatesFactory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTM2Mg=="}, "originalCommit": {"oid": "b4756e2c92ca530b50d6ef345e26faf1f5bf7916"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU5NDM1OQ==", "bodyText": "Yeah I just used to the Factory pattern is when it's create() method is an instance method so you could supply another factory implementation. Anyway since it's now package private there wouldn't be much confusion I think", "url": "https://github.com/ConsenSys/teku/pull/2425#discussion_r459594359", "createdAt": "2020-07-23T16:58:40Z", "author": {"login": "Nashatyrev"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdatesFactory.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.hashtree.HashTree;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.CheckpointAndBlock;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.storage.events.FinalizedChainData;\n+import tech.pegasys.teku.storage.store.Store.Transaction;\n+\n+public class StoreTransactionUpdatesFactory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4MTM2Mg=="}, "originalCommit": {"oid": "b4756e2c92ca530b50d6ef345e26faf1f5bf7916"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3427, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}