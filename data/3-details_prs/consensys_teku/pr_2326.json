{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTY0NjQ4", "number": 2326, "title": "Prioritise based on attestation subnets when connecting and disconnecting peers", "bodyText": "PR Description\nTo be able to publish attestations, Teku needs to ensure it has at least one peer connected that is subscribed to each attestation subnet.  To help do that when connecting to or disconnecting from peer, we rank the peers based on the subnets they are subscribed to and how many other peers we have already subscribed to that subnet.\nWhen connecting, we only have the persistent subnets advertised in the peer's ENR to base the decision off but once connected we use the peer's actual subscriptions, which includes persistent and short term subscriptions. This ensures that the subscriptions we score a peer on are always up to date even if we don't have their latest ENR and avoids issues with peers advertising a lot of subnets in their ENR but not actually subscribing to them.\nThe scoring system is designed to give high scores to peers that subscribe to subnets with no or few subscribers and very quickly reduce the score boost for subnets that have more peers. It's a pretty arbitrary algorithm but seems to give reasonable results and is definitely better than randomly picking peers.\nTo fully ensure we have all subnets covered, we should also continue attempting to connect to peers even if we have reached our peer limit if there are subnets with limited subscribers and discovered peers claim to subscribe to those subnets.  Potentially we could also retry sending attestations for a short period if we don't have a peer to send them to when first produced. Those changes are for follow up PRs.\nFixed Issue(s)\nPart of #1963\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-07-08T04:55:07Z", "url": "https://github.com/ConsenSys/teku/pull/2326", "merged": true, "mergeCommit": {"oid": "ff8db8acb8aab4bf77b9ee61ed0a780d384c3c08"}, "closed": true, "closedAt": "2020-07-09T00:34:04Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcywrizAH2gAyNDQ1OTY0NjQ4OjkzOTA2NWM4MTE4YmJmYTUzNDZiZWQ3ZTMyNzA5MDI5YTU1MWVlNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczDNr4gH2gAyNDQ1OTY0NjQ4OjFhYjMwODI2MTM4N2EyNWUxMWFjY2M2ZjUyZWU3Mzc4OTliZjBkZDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "939065c8118bbfa5346bed7e32709029a551ee60", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/939065c8118bbfa5346bed7e32709029a551ee60", "committedDate": "2020-07-08T02:05:18Z", "message": "Introduce peer scoring based on subnet subscriptions and choose which peers to disconnect when peer limit is exceeded based on that."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1335c818ded3257ac76bbc3f212d51e96e64fab2", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1335c818ded3257ac76bbc3f212d51e96e64fab2", "committedDate": "2020-07-08T03:15:31Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into subnet-scores"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3417702c507f54af5abac7f11220e0c08bcad3e5", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/3417702c507f54af5abac7f11220e0c08bcad3e5", "committedDate": "2020-07-08T04:39:35Z", "message": "Connect to highest scoring peers first."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d7da5d5ebad38b051bf8c89619c3d114bce5984", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/9d7da5d5ebad38b051bf8c89619c3d114bce5984", "committedDate": "2020-07-08T04:58:30Z", "message": "Fix import."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43047bc0fed28b6642afe4780b99493096777482", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/43047bc0fed28b6642afe4780b99493096777482", "committedDate": "2020-07-08T05:02:24Z", "message": "Another import."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NjQwNzYy", "url": "https://github.com/ConsenSys/teku/pull/2326#pullrequestreview-444640762", "createdAt": "2020-07-08T11:09:02Z", "commit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMTowOTowMlrOGujEAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToxNjo0NlrOGujSgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2MjE0NA==", "bodyText": "May be it makes sense to add some randomness here to make connection manager more reliable? I.e. take 50% of peers by score and 50% of random peers.\nIt occurred several times from my former experience that strictly selecting peers by their score may lead to connectivity problems due to different reasons", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451462144", "createdAt": "2020-07-08T11:09:02Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -103,9 +109,16 @@ public ConnectionManager(\n   private void connectToKnownPeers() {\n     final int maxAttempts = targetPeerCountRange.getPeersToAdd(network.getPeerCount());\n     LOG.trace(\"Connecting to up to {} known peers\", maxAttempts);\n+    if (maxAttempts == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     discoveryService\n         .streamKnownPeers()\n         .filter(this::isPeerValid)\n+        .sorted(\n+            Comparator.comparing((Function<DiscoveryPeer, Integer>) peerScorer::scoreCandidatePeer)\n+                .reversed())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTQ0OQ==", "bodyText": "The same note on randomness here", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465449", "createdAt": "2020-07-08T11:15:53Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/connection/ConnectionManager.java", "diffHunk": "@@ -148,9 +161,14 @@ private void attemptConnection(final PeerAddress discoveryPeer) {\n \n   private void onPeerConnected(final Peer peer) {\n     final int peersToDrop = targetPeerCountRange.getPeersToDrop(network.getPeerCount());\n+    if (peersToDrop == 0) {\n+      return;\n+    }\n+    final PeerScorer peerScorer = peerScorerFactory.create();\n     network\n         .streamPeers()\n         .filter(candidate -> !staticPeers.contains(candidate.getAddress()))\n+        .sorted(Comparator.comparing(peerScorer::scoreExistingPeer))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ2NTg1Nw==", "bodyText": "May be consider including this feature to public Pubsub API?", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451465857", "createdAt": "2020-07-08T11:16:46Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NzM5MDYz", "url": "https://github.com/ConsenSys/teku/pull/2326#pullrequestreview-444739063", "createdAt": "2020-07-08T13:00:20Z", "commit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMDoyMFrOGum6rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzowMDoyMFrOGum6rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTUyNTI5Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/2326#discussion_r451525292", "createdAt": "2020-07-08T13:00:20Z", "author": {"login": "Nashatyrev"}, "path": "networking/p2p/src/main/java/tech/pegasys/teku/networking/p2p/libp2p/gossip/LibP2PGossipNetwork.java", "diffHunk": "@@ -50,4 +60,24 @@ public TopicChannel subscribe(final String topic, final TopicHandler topicHandle\n     PubsubSubscription subscription = gossip.subscribe(gossipHandler, libP2PTopic);\n     return new LibP2PTopicChannel(gossipHandler, subscription);\n   }\n+\n+  @Override\n+  public Map<String, Collection<NodeId>> getSubscribersByTopic() {\n+    return gossip\n+        .getRouter()\n+        .submitOnEventThread(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43047bc0fed28b6642afe4780b99493096777482"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ab308261387a25e11accc6f52ee737899bf0dd7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1ab308261387a25e11accc6f52ee737899bf0dd7", "committedDate": "2020-07-08T23:40:53Z", "message": "Merge branch 'master' into subnet-scores"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3819, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}