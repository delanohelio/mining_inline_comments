{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODk5OTg1", "number": 1124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTo1Mzo1NlrODcCm_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDowNjo1NlrODcC1oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzI5NDcxOnYy", "diffSide": "RIGHT", "path": "events/src/main/java/tech/pegasys/artemis/events/EventDeliverer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTo1Mzo1NlrOFj38NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDo0Mzo1M1rOFj5UeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2MTAxMg==", "bodyText": "Why do you do this call? It seems a bit unnecessary, to make sure the number of arguments is correct?", "url": "https://github.com/ConsenSys/teku/pull/1124#discussion_r373161012", "createdAt": "2020-01-30T19:53:56Z", "author": {"login": "cemozerr"}, "path": "events/src/main/java/tech/pegasys/artemis/events/EventDeliverer.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import tech.pegasys.artemis.util.events.Subscribers;\n+\n+abstract class EventDeliverer<T> implements InvocationHandler {\n+  private final Subscribers<T> subscribers = Subscribers.create(true);\n+\n+  void subscribe(T subscriber) {\n+    subscribers.subscribe(subscriber);\n+  }\n+\n+  @Override\n+  public Object invoke(final Object proxy, final Method method, final Object[] args) {\n+    if (method.getDeclaringClass().equals(Object.class)) {\n+      try {\n+        return method.invoke(this, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb3891ef238d77668e10a33e5d9e01aa1b4e0af"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2NDk1OQ==", "bodyText": "So there are two sources of methods for an interface - those declared by the interface itself and those inherited from Object.  We only want to post events for the methods declared by the interface itself because the methods from Object require return values which we don't handle.\nSo for any method that's declared in the Object class we invoke the method on this which is the generated proxy object. Thus it winds up executing the default implementation fo those methods from Object.", "url": "https://github.com/ConsenSys/teku/pull/1124#discussion_r373164959", "createdAt": "2020-01-30T20:02:06Z", "author": {"login": "ajsutton"}, "path": "events/src/main/java/tech/pegasys/artemis/events/EventDeliverer.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import tech.pegasys.artemis.util.events.Subscribers;\n+\n+abstract class EventDeliverer<T> implements InvocationHandler {\n+  private final Subscribers<T> subscribers = Subscribers.create(true);\n+\n+  void subscribe(T subscriber) {\n+    subscribers.subscribe(subscriber);\n+  }\n+\n+  @Override\n+  public Object invoke(final Object proxy, final Method method, final Object[] args) {\n+    if (method.getDeclaringClass().equals(Object.class)) {\n+      try {\n+        return method.invoke(this, args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2MTAxMg=="}, "originalCommit": {"oid": "1fb3891ef238d77668e10a33e5d9e01aa1b4e0af"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4MzYwOA==", "bodyText": "Gotcha, makes sense.", "url": "https://github.com/ConsenSys/teku/pull/1124#discussion_r373183608", "createdAt": "2020-01-30T20:43:53Z", "author": {"login": "cemozerr"}, "path": "events/src/main/java/tech/pegasys/artemis/events/EventDeliverer.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.events;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import tech.pegasys.artemis.util.events.Subscribers;\n+\n+abstract class EventDeliverer<T> implements InvocationHandler {\n+  private final Subscribers<T> subscribers = Subscribers.create(true);\n+\n+  void subscribe(T subscriber) {\n+    subscribers.subscribe(subscriber);\n+  }\n+\n+  @Override\n+  public Object invoke(final Object proxy, final Method method, final Object[] args) {\n+    if (method.getDeclaringClass().equals(Object.class)) {\n+      try {\n+        return method.invoke(this, args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2MTAxMg=="}, "originalCommit": {"oid": "1fb3891ef238d77668e10a33e5d9e01aa1b4e0af"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzMzMjE3OnYy", "diffSide": "RIGHT", "path": "events/src/test/java/tech/pegasys/artemis/events/EventChannelsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDowNjo1NlrOFj4Tug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDowNjo1NlrOFj4Tug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2NzAzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldGetPublisherBeforeSubscriber() {\n          \n          \n            \n              public void shouldBeAbleToGetPublisherBeforeSubscriber() {", "url": "https://github.com/ConsenSys/teku/pull/1124#discussion_r373167034", "createdAt": "2020-01-30T20:06:56Z", "author": {"login": "mbaxter"}, "path": "events/src/test/java/tech/pegasys/artemis/events/EventChannelsTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.events;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+\n+import org.junit.jupiter.api.Test;\n+\n+class EventChannelsTest {\n+  private final EventChannels channels = new EventChannels(EventChannel::create);\n+\n+  @Test\n+  public void shouldGetPublisherBeforeSubscriber() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb3891ef238d77668e10a33e5d9e01aa1b4e0af"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2821, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}