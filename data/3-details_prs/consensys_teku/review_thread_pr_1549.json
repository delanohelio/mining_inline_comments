{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDU0NTYx", "number": 1549, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToyNDo0OFrODvtTiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0NTowNlrODvttnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzUxOTQ3OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToyNDo0OFrOGCSsnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTowMzozNVrOGCWCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NjY3MQ==", "bodyText": "Probably worth going back to importing BitView directly here instead of needing the prefix everywhere (suspect IntelliJ did this to you).", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405056671", "createdAt": "2020-04-07T19:24:48Z", "author": {"login": "ajsutton"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java", "diffHunk": "@@ -11,31 +11,27 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.type;\n+package tech.pegasys.artemis.ssz.backing.type;\n \n import static com.google.common.base.Preconditions.checkArgument;\n \n import java.nio.ByteOrder;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n import org.apache.tuweni.bytes.MutableBytes32;\n-import tech.pegasys.artemis.util.SSZTypes.Bytes4;\n-import tech.pegasys.artemis.util.backing.ViewRead;\n-import tech.pegasys.artemis.util.backing.tree.TreeNode;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes32View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes4View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.UInt64View;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bytes4;\n+import tech.pegasys.artemis.ssz.backing.ViewRead;\n+import tech.pegasys.artemis.ssz.backing.tree.TreeNode;\n \n /** The collection of commonly used basic types */\n public class BasicViewTypes {\n \n-  public static final BasicViewType<BitView> BIT_TYPE =\n+  public static final BasicViewType<BasicViews.BitView> BIT_TYPE =\n       new BasicViewType<>(1) {\n         @Override\n-        public BitView createFromBackingNode(TreeNode node, int idx) {\n-          return new BitView((node.hashTreeRoot().get(idx / 8) & (1 << (idx % 8))) != 0);\n+        public BasicViews.BitView createFromBackingNode(TreeNode node, int idx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d93dd831286e78d6bad3d505aed8bb245d113f1d"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTQxOA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405111418", "createdAt": "2020-04-07T21:03:35Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/type/BasicViewTypes.java", "diffHunk": "@@ -11,31 +11,27 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.type;\n+package tech.pegasys.artemis.ssz.backing.type;\n \n import static com.google.common.base.Preconditions.checkArgument;\n \n import java.nio.ByteOrder;\n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n import org.apache.tuweni.bytes.MutableBytes32;\n-import tech.pegasys.artemis.util.SSZTypes.Bytes4;\n-import tech.pegasys.artemis.util.backing.ViewRead;\n-import tech.pegasys.artemis.util.backing.tree.TreeNode;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes32View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.Bytes4View;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.UInt64View;\n+import tech.pegasys.artemis.ssz.backing.view.BasicViews;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bytes4;\n+import tech.pegasys.artemis.ssz.backing.ViewRead;\n+import tech.pegasys.artemis.ssz.backing.tree.TreeNode;\n \n /** The collection of commonly used basic types */\n public class BasicViewTypes {\n \n-  public static final BasicViewType<BitView> BIT_TYPE =\n+  public static final BasicViewType<BasicViews.BitView> BIT_TYPE =\n       new BasicViewType<>(1) {\n         @Override\n-        public BitView createFromBackingNode(TreeNode node, int idx) {\n-          return new BitView((node.hashTreeRoot().get(idx / 8) & (1 << (idx % 8))) != 0);\n+        public BasicViews.BitView createFromBackingNode(TreeNode node, int idx) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1NjY3MQ=="}, "originalCommit": {"oid": "d93dd831286e78d6bad3d505aed8bb245d113f1d"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU3MzgxOnYy", "diffSide": "RIGHT", "path": "bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0MToxMVrOGCTPJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTowMzo0MFrOGCWCvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NTUwOA==", "bodyText": "Would be good to restore the static import for hashToG2.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405065508", "createdAt": "2020-04-07T19:41:11Z", "author": {"login": "ajsutton"}, "path": "bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java", "diffHunk": "@@ -56,7 +55,7 @@\n    * @return The Signature, not null\n    */\n   public static Signature sign(SecretKey secretKey, Bytes message) {\n-    G2Point hashInGroup2 = new G2Point(hashToG2(message));\n+    G2Point hashInGroup2 = new G2Point(HashToCurve.hashToG2(message));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTQ4Ng==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405111486", "createdAt": "2020-04-07T21:03:40Z", "author": {"login": "cemozerr"}, "path": "bls/src/main/java/tech/pegasys/artemis/bls/mikuli/BLS12381.java", "diffHunk": "@@ -56,7 +55,7 @@\n    * @return The Signature, not null\n    */\n   public static Signature sign(SecretKey secretKey, Bytes message) {\n-    G2Point hashInGroup2 = new G2Point(hashToG2(message));\n+    G2Point hashInGroup2 = new G2Point(HashToCurve.hashToG2(message));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NTUwOA=="}, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU4MjgwOnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0NDowMFrOGCTU4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTowNjowMlrOGCWHzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2Njk3OQ==", "bodyText": "nit: May as well keep the import for LeafNodeImpl.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405066979", "createdAt": "2020-04-07T19:44:00Z", "author": {"login": "ajsutton"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java", "diffHunk": "@@ -32,7 +31,7 @@\n public interface TreeNode {\n \n   static TreeNode createLeafNode(Bytes32 val) {\n-    return new LeafNodeImpl(val);\n+    return new TreeNodeImpl.LeafNodeImpl(val);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMjc4MA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405112780", "createdAt": "2020-04-07T21:06:02Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/tree/TreeNode.java", "diffHunk": "@@ -32,7 +31,7 @@\n public interface TreeNode {\n \n   static TreeNode createLeafNode(Bytes32 val) {\n-    return new LeafNodeImpl(val);\n+    return new TreeNodeImpl.LeafNodeImpl(val);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2Njk3OQ=="}, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU4NDk5OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0NDo0MlrOGCTWTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTowOTozMlrOGCWPPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzM0Mw==", "bodyText": "nit: Import ListContainerRead and UInt64View directly.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405067343", "createdAt": "2020-04-07T19:44:42Z", "author": {"login": "ajsutton"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java", "diffHunk": "@@ -36,17 +34,18 @@\n       extends ContainerViewWriteImpl {\n     private final VectorViewType<ElementReadType> vectorType;\n \n-    public ListContainerWrite(ListContainerRead<ElementReadType> backingImmutableView) {\n+    public ListContainerWrite(\n+        ListViewReadImpl.ListContainerRead<ElementReadType> backingImmutableView) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExNDY4Ng==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405114686", "createdAt": "2020-04-07T21:09:32Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ListViewWriteImpl.java", "diffHunk": "@@ -36,17 +34,18 @@\n       extends ContainerViewWriteImpl {\n     private final VectorViewType<ElementReadType> vectorType;\n \n-    public ListContainerWrite(ListContainerRead<ElementReadType> backingImmutableView) {\n+    public ListContainerWrite(\n+        ListViewReadImpl.ListContainerRead<ElementReadType> backingImmutableView) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzM0Mw=="}, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzU4NjIwOnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOTo0NTowNlrOGCTXJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMToxNDo0M1rOGCWZZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzU1Nw==", "bodyText": "nit: Direct import for ByteView and BitView.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405067557", "createdAt": "2020-04-07T19:45:06Z", "author": {"login": "ajsutton"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java", "diffHunk": "@@ -11,38 +11,37 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.view;\n+package tech.pegasys.artemis.ssz.backing.view;\n \n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.MutableBytes;\n-import tech.pegasys.artemis.util.SSZTypes.Bitlist;\n-import tech.pegasys.artemis.util.SSZTypes.Bitvector;\n-import tech.pegasys.artemis.util.backing.ListViewRead;\n-import tech.pegasys.artemis.util.backing.ListViewWrite;\n-import tech.pegasys.artemis.util.backing.VectorViewRead;\n-import tech.pegasys.artemis.util.backing.VectorViewWrite;\n-import tech.pegasys.artemis.util.backing.type.BasicViewTypes;\n-import tech.pegasys.artemis.util.backing.type.ListViewType;\n-import tech.pegasys.artemis.util.backing.type.VectorViewType;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitlist;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitvector;\n+import tech.pegasys.artemis.ssz.backing.ListViewRead;\n+import tech.pegasys.artemis.ssz.backing.ListViewWrite;\n+import tech.pegasys.artemis.ssz.backing.VectorViewRead;\n+import tech.pegasys.artemis.ssz.backing.VectorViewWrite;\n+import tech.pegasys.artemis.ssz.backing.type.BasicViewTypes;\n+import tech.pegasys.artemis.ssz.backing.type.ListViewType;\n+import tech.pegasys.artemis.ssz.backing.type.VectorViewType;\n \n /** Handy view tool methods */\n public class ViewUtils {\n \n   /** Creates immutable vector of bytes with size `bytes.size()` from {@link Bytes} value */\n-  public static VectorViewRead<ByteView> createVectorFromBytes(Bytes bytes) {\n-    VectorViewType<ByteView> type = new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n+  public static VectorViewRead<BasicViews.ByteView> createVectorFromBytes(Bytes bytes) {\n+    VectorViewType<BasicViews.ByteView> type =\n+        new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n     // TODO optimize\n-    VectorViewWrite<ByteView> ret = type.getDefault().createWritableCopy();\n+    VectorViewWrite<BasicViews.ByteView> ret = type.getDefault().createWritableCopy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExNzI4NA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1549#discussion_r405117284", "createdAt": "2020-04-07T21:14:43Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/artemis/ssz/backing/view/ViewUtils.java", "diffHunk": "@@ -11,38 +11,37 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.artemis.util.backing.view;\n+package tech.pegasys.artemis.ssz.backing.view;\n \n import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.MutableBytes;\n-import tech.pegasys.artemis.util.SSZTypes.Bitlist;\n-import tech.pegasys.artemis.util.SSZTypes.Bitvector;\n-import tech.pegasys.artemis.util.backing.ListViewRead;\n-import tech.pegasys.artemis.util.backing.ListViewWrite;\n-import tech.pegasys.artemis.util.backing.VectorViewRead;\n-import tech.pegasys.artemis.util.backing.VectorViewWrite;\n-import tech.pegasys.artemis.util.backing.type.BasicViewTypes;\n-import tech.pegasys.artemis.util.backing.type.ListViewType;\n-import tech.pegasys.artemis.util.backing.type.VectorViewType;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.BitView;\n-import tech.pegasys.artemis.util.backing.view.BasicViews.ByteView;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitlist;\n+import tech.pegasys.artemis.ssz.SSZTypes.Bitvector;\n+import tech.pegasys.artemis.ssz.backing.ListViewRead;\n+import tech.pegasys.artemis.ssz.backing.ListViewWrite;\n+import tech.pegasys.artemis.ssz.backing.VectorViewRead;\n+import tech.pegasys.artemis.ssz.backing.VectorViewWrite;\n+import tech.pegasys.artemis.ssz.backing.type.BasicViewTypes;\n+import tech.pegasys.artemis.ssz.backing.type.ListViewType;\n+import tech.pegasys.artemis.ssz.backing.type.VectorViewType;\n \n /** Handy view tool methods */\n public class ViewUtils {\n \n   /** Creates immutable vector of bytes with size `bytes.size()` from {@link Bytes} value */\n-  public static VectorViewRead<ByteView> createVectorFromBytes(Bytes bytes) {\n-    VectorViewType<ByteView> type = new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n+  public static VectorViewRead<BasicViews.ByteView> createVectorFromBytes(Bytes bytes) {\n+    VectorViewType<BasicViews.ByteView> type =\n+        new VectorViewType<>(BasicViewTypes.BYTE_TYPE, bytes.size());\n     // TODO optimize\n-    VectorViewWrite<ByteView> ret = type.getDefault().createWritableCopy();\n+    VectorViewWrite<BasicViews.ByteView> ret = type.getDefault().createWritableCopy();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA2NzU1Nw=="}, "originalCommit": {"oid": "1d8c33fd629d02fdfa9ec5dae6cdd97011df00c4"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3835, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}