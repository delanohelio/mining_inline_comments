{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0OTY1NjA5", "number": 2155, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzoxODoyMFrOEFz84w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzozNDo1MlrOEF0R6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTI5NTA3OnYy", "diffSide": "RIGHT", "path": "logging/src/main/java/tech/pegasys/teku/logging/EventLogger.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzoxODoyMFrOGkOTQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1ODowNFrOGkR8BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYzNjIyNw==", "bodyText": "Drift Event probably isn't the right wording here.  Probably just \"Skipped Slots\"?  I don't think we always need Event in there and possibly should just remove them all as redundant.", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440636227", "createdAt": "2020-06-16T07:18:20Z", "author": {"login": "ajsutton"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/EventLogger.java", "diffHunk": "@@ -56,6 +56,14 @@ public void epochEvent(\n     info(epochEventLog, Color.GREEN);\n   }\n \n+  public void nodeSlotDriftEvent(final UnsignedLong oldSlot, final UnsignedLong newSlot) {\n+    final String driftEventLog =\n+        String.format(\n+            \"Drift Event *** Current slot: %s, previous slot: %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MDEyNA==", "bodyText": "skipped slots is too long... unless i move all the messages ?", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440690124", "createdAt": "2020-06-16T08:49:25Z", "author": {"login": "rolfyone"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/EventLogger.java", "diffHunk": "@@ -56,6 +56,14 @@ public void epochEvent(\n     info(epochEventLog, Color.GREEN);\n   }\n \n+  public void nodeSlotDriftEvent(final UnsignedLong oldSlot, final UnsignedLong newSlot) {\n+    final String driftEventLog =\n+        String.format(\n+            \"Drift Event *** Current slot: %s, previous slot: %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYzNjIyNw=="}, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NTgxMw==", "bodyText": "I replaced with 'Miss Slots' - thoughts?", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440695813", "createdAt": "2020-06-16T08:58:04Z", "author": {"login": "rolfyone"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/EventLogger.java", "diffHunk": "@@ -56,6 +56,14 @@ public void epochEvent(\n     info(epochEventLog, Color.GREEN);\n   }\n \n+  public void nodeSlotDriftEvent(final UnsignedLong oldSlot, final UnsignedLong newSlot) {\n+    final String driftEventLog =\n+        String.format(\n+            \"Drift Event *** Current slot: %s, previous slot: %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYzNjIyNw=="}, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTMxMTI5OnYy", "diffSide": "RIGHT", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzoyMzo1MVrOGkOdyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1MzozMlrOGkRwTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYzODkyMQ==", "bodyText": "We bail out if we're prior to geneesis time so can just do that check before the calculatedSlot calculation.", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440638921", "createdAt": "2020-06-16T07:23:51Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -513,12 +520,46 @@ public void onTick(Date date) {\n     on_tick(transaction, currentTime);\n     transaction.commit().join();\n \n-    if (nextSlotDue) {\n-      if (syncService.isSyncActive()) {\n-        processSlotWhileSyncing();\n-      } else {\n-        processSlot();\n-      }\n+    if (nextSlotDue && syncService.isSyncActive()) {\n+      processSlotWhileSyncing();\n+      return;\n+    }\n+\n+    final UnsignedLong genesisTime = recentChainData.getGenesisTime();\n+    final UnsignedLong calculatedSlot =\n+        currentTime.compareTo(genesisTime) < 0\n+            ? ZERO\n+            : ForkChoiceUtil.getCurrentSlot(currentTime, genesisTime);\n+    if (currentTime.compareTo(genesisTime) < 0) {\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MjgxNA==", "bodyText": "fair point.", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440692814", "createdAt": "2020-06-16T08:53:32Z", "author": {"login": "rolfyone"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -513,12 +520,46 @@ public void onTick(Date date) {\n     on_tick(transaction, currentTime);\n     transaction.commit().join();\n \n-    if (nextSlotDue) {\n-      if (syncService.isSyncActive()) {\n-        processSlotWhileSyncing();\n-      } else {\n-        processSlot();\n-      }\n+    if (nextSlotDue && syncService.isSyncActive()) {\n+      processSlotWhileSyncing();\n+      return;\n+    }\n+\n+    final UnsignedLong genesisTime = recentChainData.getGenesisTime();\n+    final UnsignedLong calculatedSlot =\n+        currentTime.compareTo(genesisTime) < 0\n+            ? ZERO\n+            : ForkChoiceUtil.getCurrentSlot(currentTime, genesisTime);\n+    if (currentTime.compareTo(genesisTime) < 0) {\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYzODkyMQ=="}, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTM0ODg4OnYy", "diffSide": "RIGHT", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzozNDo1MlrOGkO1Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1MTowNFrOGkRqBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NDkxMA==", "bodyText": "I think I'm following how this all works but it's not easy. Will  take another look in the morning - I suspect that extracting some private methods would help a lot to give names to the various comparisons being done.", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440644910", "createdAt": "2020-06-16T07:34:52Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -513,12 +520,46 @@ public void onTick(Date date) {\n     on_tick(transaction, currentTime);\n     transaction.commit().join();\n \n-    if (nextSlotDue) {\n-      if (syncService.isSyncActive()) {\n-        processSlotWhileSyncing();\n-      } else {\n-        processSlot();\n-      }\n+    if (nextSlotDue && syncService.isSyncActive()) {\n+      processSlotWhileSyncing();\n+      return;\n+    }\n+\n+    final UnsignedLong genesisTime = recentChainData.getGenesisTime();\n+    final UnsignedLong calculatedSlot =\n+        currentTime.compareTo(genesisTime) < 0\n+            ? ZERO\n+            : ForkChoiceUtil.getCurrentSlot(currentTime, genesisTime);\n+    if (currentTime.compareTo(genesisTime) < 0) {\n+      return;\n+    }\n+\n+    // tolerate 1 slot difference, not more\n+    if (calculatedSlot.compareTo(nodeSlot.getValue().plus(ONE)) > 0) {\n+      EVENT_LOG.nodeSlotDriftEvent(nodeSlot.getValue(), calculatedSlot);\n+      nodeSlot.setValue(calculatedSlot);\n+    }\n+\n+    final UnsignedLong epoch = compute_epoch_at_slot(nodeSlot.getValue());\n+    final UnsignedLong nodeSlotStartTime =\n+        ForkChoiceUtil.getSlotStartTime(nodeSlot.getValue(), genesisTime);\n+    if (onTickSlotStart == null || calculatedSlot.compareTo(onTickSlotStart) > 0) {\n+      onTickSlotStart = nodeSlot.getValue();\n+      processSlotStart(epoch);\n+    }\n+\n+    if ((onTickSlotAttestation == null || calculatedSlot.compareTo(onTickSlotAttestation) > 0)\n+        && currentTime.compareTo(nodeSlotStartTime.plus(UnsignedLong.valueOf(oneThirdSlotSeconds)))\n+            >= 0) {\n+      onTickSlotAttestation = nodeSlot.getValue();\n+      processSlotAttestation(epoch);\n+    }\n+    if ((onTickSlotAggregate == null || calculatedSlot.compareTo(onTickSlotAggregate) > 0)\n+        && currentTime.compareTo(\n+                nodeSlotStartTime.plus(UnsignedLong.valueOf(oneThirdSlotSeconds * 2)))\n+            >= 0) {\n+      onTickSlotAggregate = nodeSlot.getValue();\n+      processSlotAggregate();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MTIwNA==", "bodyText": "yep that's why i was considering refactoring, i don't really like it overly, but the next step would be to refactor...", "url": "https://github.com/ConsenSys/teku/pull/2155#discussion_r440691204", "createdAt": "2020-06-16T08:51:04Z", "author": {"login": "rolfyone"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -513,12 +520,46 @@ public void onTick(Date date) {\n     on_tick(transaction, currentTime);\n     transaction.commit().join();\n \n-    if (nextSlotDue) {\n-      if (syncService.isSyncActive()) {\n-        processSlotWhileSyncing();\n-      } else {\n-        processSlot();\n-      }\n+    if (nextSlotDue && syncService.isSyncActive()) {\n+      processSlotWhileSyncing();\n+      return;\n+    }\n+\n+    final UnsignedLong genesisTime = recentChainData.getGenesisTime();\n+    final UnsignedLong calculatedSlot =\n+        currentTime.compareTo(genesisTime) < 0\n+            ? ZERO\n+            : ForkChoiceUtil.getCurrentSlot(currentTime, genesisTime);\n+    if (currentTime.compareTo(genesisTime) < 0) {\n+      return;\n+    }\n+\n+    // tolerate 1 slot difference, not more\n+    if (calculatedSlot.compareTo(nodeSlot.getValue().plus(ONE)) > 0) {\n+      EVENT_LOG.nodeSlotDriftEvent(nodeSlot.getValue(), calculatedSlot);\n+      nodeSlot.setValue(calculatedSlot);\n+    }\n+\n+    final UnsignedLong epoch = compute_epoch_at_slot(nodeSlot.getValue());\n+    final UnsignedLong nodeSlotStartTime =\n+        ForkChoiceUtil.getSlotStartTime(nodeSlot.getValue(), genesisTime);\n+    if (onTickSlotStart == null || calculatedSlot.compareTo(onTickSlotStart) > 0) {\n+      onTickSlotStart = nodeSlot.getValue();\n+      processSlotStart(epoch);\n+    }\n+\n+    if ((onTickSlotAttestation == null || calculatedSlot.compareTo(onTickSlotAttestation) > 0)\n+        && currentTime.compareTo(nodeSlotStartTime.plus(UnsignedLong.valueOf(oneThirdSlotSeconds)))\n+            >= 0) {\n+      onTickSlotAttestation = nodeSlot.getValue();\n+      processSlotAttestation(epoch);\n+    }\n+    if ((onTickSlotAggregate == null || calculatedSlot.compareTo(onTickSlotAggregate) > 0)\n+        && currentTime.compareTo(\n+                nodeSlotStartTime.plus(UnsignedLong.valueOf(oneThirdSlotSeconds * 2)))\n+            >= 0) {\n+      onTickSlotAggregate = nodeSlot.getValue();\n+      processSlotAggregate();\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NDkxMA=="}, "originalCommit": {"oid": "671110ad8107d1f8d147cd6ff47432066256f908"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3606, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}