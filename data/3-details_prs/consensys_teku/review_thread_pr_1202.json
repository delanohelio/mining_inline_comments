{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDQxMDQ5", "number": 1202, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzo1OToxNlrODhRBBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowODoyN1rODhRHfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA4Mzg4OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzo1OToxNlrOFr8Cdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDozNDo0M1rOFr8rOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA==", "bodyText": "sounds bad", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381616758", "createdAt": "2020-02-19T23:59:16Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -59,9 +61,11 @@ public BeaconRestApi(\n         requestedPortNumber,\n         Javalin.create(\n             config -> {\n-              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions()));\n+              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions(new JsonProvider())));\n               config.defaultContentType = \"application/json\";\n             }));\n+    // TODO because of the static function in getOpenAiOptions, had to pass a new jsonProvider here,\n+    // which means we have 2 instances of the JsonProvider, not 1.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNDI4Mg==", "bodyText": "it's not awful, but it could be cleaner. I had a go with fixing this with Adrian, but failed. i'll have another pass.", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381624282", "createdAt": "2020-02-20T00:24:57Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -59,9 +61,11 @@ public BeaconRestApi(\n         requestedPortNumber,\n         Javalin.create(\n             config -> {\n-              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions()));\n+              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions(new JsonProvider())));\n               config.defaultContentType = \"application/json\";\n             }));\n+    // TODO because of the static function in getOpenAiOptions, had to pass a new jsonProvider here,\n+    // which means we have 2 instances of the JsonProvider, not 1.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA=="}, "originalCommit": {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyNzE5Mg==", "bodyText": "refactored the constructors to not cascade so that i can fix this issue.", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381627192", "createdAt": "2020-02-20T00:34:43Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -59,9 +61,11 @@ public BeaconRestApi(\n         requestedPortNumber,\n         Javalin.create(\n             config -> {\n-              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions()));\n+              config.registerPlugin(new OpenApiPlugin(getOpenApiOptions(new JsonProvider())));\n               config.defaultContentType = \"application/json\";\n             }));\n+    // TODO because of the static function in getOpenAiOptions, had to pass a new jsonProvider here,\n+    // which means we have 2 instances of the JsonProvider, not 1.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjc1OA=="}, "originalCommit": {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA4NDM1OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMzo1OTozOFrOFr8Cyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxNDowNVrOFr8Tjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjg0Mw==", "bodyText": "stray comment", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381616843", "createdAt": "2020-02-19T23:59:38Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -112,6 +119,8 @@ private static OpenApiOptions getOpenApiOptions() {\n                     .url(\"https://www.apache.org/licenses/LICENSE-2.0.html\"));\n     OpenApiOptions options =\n         new OpenApiOptions(applicationInfo)\n+            //            .jacksonMapper(factory.getObjectMapper())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMTEzNQ==", "bodyText": "good point - if you enable that, bad things happen :D", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381621135", "createdAt": "2020-02-20T00:14:05Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -112,6 +119,8 @@ private static OpenApiOptions getOpenApiOptions() {\n                     .url(\"https://www.apache.org/licenses/LICENSE-2.0.html\"));\n     OpenApiOptions options =\n         new OpenApiOptions(applicationInfo)\n+            //            .jacksonMapper(factory.getObjectMapper())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxNjg0Mw=="}, "originalCommit": {"oid": "b8280c3e7ad80f64b0f5e3cab702b2a054d47ae0"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5NTc4OnYy", "diffSide": "RIGHT", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNTo1MlrOFr8KIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNTo1MlrOFr8KIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n          \n          \n            \n              public void unsignedLongShouldSerializeToJson() throws JsonProcessingException {", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618723", "createdAt": "2020-02-20T00:05:52Z", "author": {"login": "macfarla"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5NjAwOnYy", "diffSide": "RIGHT", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjowMFrOFr8KTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjowMFrOFr8KTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc2NA==", "bodyText": "why is this called Q", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618764", "createdAt": "2020-02-20T00:06:00Z", "author": {"login": "macfarla"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5NjE2OnYy", "diffSide": "RIGHT", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjowNlrOFr8Kag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxNTozM1rOFr8VIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc5NA==", "bodyText": "private final", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618794", "createdAt": "2020-02-20T00:06:06Z", "author": {"login": "macfarla"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMTUzOQ==", "bodyText": "that'll be in a lot of places, i'll fix them.", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381621539", "createdAt": "2020-02-20T00:15:33Z", "author": {"login": "rolfyone"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODc5NA=="}, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5NzI0OnYy", "diffSide": "RIGHT", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjo0NVrOFr8LHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjo0NVrOFr8LHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxODk3Mg==", "bodyText": "prob can remove empty lines they aren't doing much", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381618972", "createdAt": "2020-02-20T00:06:45Z", "author": {"login": "macfarla"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n+    UnsignedLong data = DataStructureUtil.randomUnsignedLong(1111);\n+\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, data.toString());\n+  }\n+\n+  @Test\n+  public void vectorShouldSerializeToJson() throws JsonProcessingException {\n+    SSZVector<String> data = new SSZVector<String>(List.of(\"One\", \"Two\"), String.class);\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, \"[\" + Q + \"One\" + Q + \",\" + Q + \"Two\" + Q + \"]\");\n+  }\n+\n+  @Test\n+  public void stringShouldSerializeToJson() throws JsonProcessingException {\n+    JsonProvider provider = new JsonProvider();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5NzQ4OnYy", "diffSide": "RIGHT", "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowNjo1M1rOFr8LRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDoxODoyMFrOFr8YWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTAxNQ==", "bodyText": "prob can remove empty lines they aren't doing much", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619015", "createdAt": "2020-02-20T00:06:53Z", "author": {"login": "macfarla"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n+    UnsignedLong data = DataStructureUtil.randomUnsignedLong(1111);\n+\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, data.toString());\n+  }\n+\n+  @Test\n+  public void vectorShouldSerializeToJson() throws JsonProcessingException {\n+    SSZVector<String> data = new SSZVector<String>(List.of(\"One\", \"Two\"), String.class);\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, \"[\" + Q + \"One\" + Q + \",\" + Q + \"Two\" + Q + \"]\");\n+  }\n+\n+  @Test\n+  public void stringShouldSerializeToJson() throws JsonProcessingException {\n+    JsonProvider provider = new JsonProvider();\n+\n+    String data = \"test\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyMjM2Mg==", "bodyText": "that's an instance where i left the jsonProvider for no reason, i'll fix that too.", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381622362", "createdAt": "2020-02-20T00:18:20Z", "author": {"login": "rolfyone"}, "path": "data/provider/src/test/java/tech/pegasys/artemis/provider/JsonProviderTest.java", "diffHunk": "@@ -13,19 +13,60 @@\n \n package tech.pegasys.artemis.provider;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n+import com.fasterxml.jackson.core.JsonProcessingException;\n import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import org.apache.tuweni.bytes.Bytes32;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.artemis.datastructures.state.BeaconState;\n import tech.pegasys.artemis.datastructures.util.DataStructureUtil;\n+import tech.pegasys.artemis.util.SSZTypes.SSZVector;\n \n class JsonProviderTest {\n+  JsonProvider jsonProvider = new JsonProvider();\n+  private static final String Q = \"\\\"\";\n \n   @Test\n-  void beaconStateJsonTest() {\n+  public void bytes32ShouldSerializeToJsonAndBack() throws JsonProcessingException {\n+    Bytes32 data = Bytes32.random();\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(Q + data.toHexString().toLowerCase() + Q, serialized);\n+\n+    Bytes32 deserialize = jsonProvider.jsonToObject(serialized, Bytes32.class);\n+    assertEquals(data, deserialize);\n+  }\n+\n+  @Test\n+  public void UnsignedLongShouldSerializeToJson() throws JsonProcessingException {\n+    UnsignedLong data = DataStructureUtil.randomUnsignedLong(1111);\n+\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, data.toString());\n+  }\n+\n+  @Test\n+  public void vectorShouldSerializeToJson() throws JsonProcessingException {\n+    SSZVector<String> data = new SSZVector<String>(List.of(\"One\", \"Two\"), String.class);\n+    String serialized = jsonProvider.objectToJSON(data);\n+    assertEquals(serialized, \"[\" + Q + \"One\" + Q + \",\" + Q + \"Two\" + Q + \"]\");\n+  }\n+\n+  @Test\n+  public void stringShouldSerializeToJson() throws JsonProcessingException {\n+    JsonProvider provider = new JsonProvider();\n+\n+    String data = \"test\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTAxNQ=="}, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjA5OTg1OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconChainHeadHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowODoxMVrOFr8MwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowODoxMVrOFr8MwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTM5Mw==", "bodyText": "private final", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619393", "createdAt": "2020-02-20T00:08:11Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/BeaconChainHeadHandlerTest.java", "diffHunk": "@@ -29,6 +29,7 @@\n import tech.pegasys.artemis.storage.ChainStorageClient;\n \n public class BeaconChainHeadHandlerTest {\n+  JsonProvider jsonProvider = new JsonProvider();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MjEwMDQ1OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/VersionHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowODoyN1rOFr8NGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMDowODoyN1rOFr8NGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYxOTQ4Mw==", "bodyText": "private final", "url": "https://github.com/ConsenSys/teku/pull/1202#discussion_r381619483", "createdAt": "2020-02-20T00:08:27Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/beaconhandlers/VersionHandler.java", "diffHunk": "@@ -25,7 +25,12 @@\n \n public class VersionHandler implements Handler {\n \n+  public VersionHandler(JsonProvider jsonProvider) {\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n   public static final String ROUTE = \"/node/version/\";\n+  JsonProvider jsonProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120f1cfa1ccb3a97e37a8595a94390eda6d9a9ec"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2640, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}