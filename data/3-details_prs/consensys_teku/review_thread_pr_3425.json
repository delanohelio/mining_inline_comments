{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDIxNDgw", "number": 3425, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjozMjozMFrOFLEusw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMzoxMzo1OVrOFLFWsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MTU2MTQ3OnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/operations/AttestationData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjozMjozMFrOIODg4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjozMjozMFrOIODg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwODU0NQ==", "bodyText": "nit: I don't know what's going on with the spacing around those * characters.  Personally I don't feel we need to explicit tell people these are getters and setters, I think they can probably work that out easily enough... :)", "url": "https://github.com/ConsenSys/teku/pull/3425#discussion_r551608545", "createdAt": "2021-01-04T22:32:30Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/operations/AttestationData.java", "diffHunk": "@@ -120,25 +131,25 @@ public UInt64 getEarliestSlotForForkChoice() {\n     return getSlot().plus(UInt64.ONE).max(getTarget().getEpochStartSlot());\n   }\n \n-  /** ******************* * GETTERS & SETTERS * * ******************* */\n+  /** ****************** * GETTERS & SETTERS * * ******************* */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1522731cae9d9673623509fff59f39bc6875932"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MTU2MjM0OnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/operations/AttestationData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMjozMjo1MlrOIODhYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODozNTozN1rOIOioTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwODY3NQ==", "bodyText": "It looks like these fields are still required at the moment, but is the ultimate plan to be able to remove them and just use the ssh type descriptor?", "url": "https://github.com/ConsenSys/teku/pull/3425#discussion_r551608675", "createdAt": "2021-01-04T22:32:52Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/operations/AttestationData.java", "diffHunk": "@@ -66,7 +77,7 @@\n   @SuppressWarnings(\"unused\")\n   private final Checkpoint target = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1522731cae9d9673623509fff59f39bc6875932"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExODM0OA==", "bodyText": "Right. It appeared a bit tricky to completely isolate the classes from the legacy ssz, so they are subject to be removed all at once at the final stage", "url": "https://github.com/ConsenSys/teku/pull/3425#discussion_r552118348", "createdAt": "2021-01-05T18:35:37Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/operations/AttestationData.java", "diffHunk": "@@ -66,7 +77,7 @@\n   @SuppressWarnings(\"unused\")\n   private final Checkpoint target = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwODY3NQ=="}, "originalCommit": {"oid": "a1522731cae9d9673623509fff59f39bc6875932"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MTY2Mzg1OnYy", "diffSide": "RIGHT", "path": "ssz/src/test/java/tech/pegasys/teku/ssz/backing/ContainersGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMzoxMzo1OVrOIOEchQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQyMzoxMzo1OVrOIOEchQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyMzgxMw==", "bodyText": "I think I'd move this to a new module just for this generator. Then it can live in the main source tree for that module and we should be able to easily create a Gradle task that regenerates the classes.\nI like having the generated classes checked in given they won't change much - it may be worth having a task in Gradle that tests the generated source hasn't been changed.  It would run the generator, outputting the result to a temp directory and then compare what was generated with what's in the actual source.  That way we'll avoid issues of people modifying the generated source and then those changes being lost on the next regeneration.  Just need to ensure the generated code complies with spotless or it will wind up with different formatting - hopefully that's not too hard (if it is we could potentially do the comparison completely ignoring whitespace and it would still be effective).\nIn terms of template placing, I like that they can be treated as actual java source code so I'd keep them in the same source tree as the generator (so that would wind up being the main tree in the new module).", "url": "https://github.com/ConsenSys/teku/pull/3425#discussion_r551623813", "createdAt": "2021-01-04T23:13:59Z", "author": {"login": "ajsutton"}, "path": "ssz/src/test/java/tech/pegasys/teku/ssz/backing/ContainersGenerator.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.ssz.backing;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+public class ContainersGenerator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1522731cae9d9673623509fff59f39bc6875932"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1808, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}