{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0MDY2ODMy", "number": 2394, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMzoyNTo0MVrOEQcuRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozMjozMFrOEQeDGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjgzMjcxOnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMzoyNTo0MVrOG0mvQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNDowODo0M1rOG0nXew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgxMzgyNg==", "bodyText": "I suspect rather than this being a public method, we should just expose a method like getExactStateAtSlot(slot) which gets the block from the previous block and automatically processes empty slots as needed.  Saves having to reimplement that logic in multiple places.", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457813826", "createdAt": "2020-07-21T03:25:41Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -183,6 +197,21 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b7426a0e90831638ca9896d9dcc574cc8836bf"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgyNDEyMw==", "bodyText": "yep fair call, it'll clean up the provider a bit.", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457824123", "createdAt": "2020-07-21T04:08:43Z", "author": {"login": "rolfyone"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -183,6 +197,21 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgxMzgyNg=="}, "originalCommit": {"oid": "10b7426a0e90831638ca9896d9dcc574cc8836bf"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzA0MDcwOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToyODoxMFrOG0opBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToyODoxMFrOG0opBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NDk5OA==", "bodyText": "Same as above probably just:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).get().get();\n          \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).join().orElseThrow();", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457844998", "createdAt": "2020-07-21T05:28:10Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateWithDataIntegrationTest.java", "diffHunk": "@@ -68,16 +68,7 @@ private BeaconState getBeaconStateFromResponse(Response response) throws Excepti\n   private tech.pegasys.teku.datastructures.state.BeaconState getInternalState(\n       final UnsignedLong slot) {\n     try {\n-      return combinedChainDataClient\n-          .getBlockAndStateInEffectAtSlot(slot)\n-          .thenApply(\n-              maybeBlockAndState ->\n-                  maybeBlockAndState.map(\n-                      blockAndState ->\n-                          combinedChainDataClient.regenerateBeaconState(\n-                              blockAndState.getState(), slot)))\n-          .get()\n-          .get();\n+      return combinedChainDataClient.getStateAtSlotExact(slot).get().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzA0Mzg1OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToyOTo0OFrOG0oq6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNToyOTo0OFrOG0oq6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NTQ4MA==", "bodyText": "nit: Probably just\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).get().get().hash_tree_root();\n          \n          \n            \n                  return combinedChainDataClient.getStateAtSlotExact(slot).join().orElseThrow().hash_tree_root();\n          \n      \n    \n    \n  \n\nand probably then lose the try/catch.", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457845480", "createdAt": "2020-07-21T05:29:48Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/beacon/GetStateRootIntegrationTest.java", "diffHunk": "@@ -39,6 +45,47 @@ public void shouldReturnNoContentIfPreForkChoice_queryBySlot() throws Exception\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnStateRootIfBlockPresent() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX);\n+    final Response response = getBySlot(6);\n+    assertThat(response.code()).isEqualTo(SC_OK);\n+    final Bytes32 expectedRoot = getStateRootAtSlot(SIX);\n+    assertThat(getBytes32FromResponseBody(response)).isEqualTo(expectedRoot);\n+  }\n+\n+  @Test\n+  public void shouldNotReturnStateRootForFutureSlot() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX);\n+    final Response response = getBySlot(7);\n+    assertThat(response.code()).isEqualTo(SC_NOT_FOUND);\n+  }\n+\n+  @Test\n+  public void shouldReturnStateRootIfBlockMissed() throws Exception {\n+    startRestAPIAtGenesis();\n+    createBlocksAtSlotsAndMapToApiResult(SIX, EIGHT);\n+    final Response response = getBySlot(7);\n+    assertThat(response.code()).isEqualTo(SC_OK);\n+    final Bytes32 expectedRoot = getStateRootAtSlot(SEVEN);\n+    assertThat(getBytes32FromResponseBody(response)).isEqualTo(expectedRoot);\n+  }\n+\n+  private Bytes32 getBytes32FromResponseBody(final Response response) throws IOException {\n+    final String bytes32String = jsonProvider.jsonToObject(response.body().string(), String.class);\n+    return Bytes32.fromHexString(bytes32String);\n+  }\n+\n+  private Bytes32 getStateRootAtSlot(final UnsignedLong slot) {\n+    try {\n+      return combinedChainDataClient.getStateAtSlotExact(slot).get().get().hash_tree_root();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NzA0OTg0OnYy", "diffSide": "RIGHT", "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozMjozMFrOG0ouRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNTozMjozMFrOG0ouRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg0NjM0Mg==", "bodyText": "Probably return Optional<BeacaonState> here and Optional.empty() instead of the nulls and then use flatMapinstead ofmap` above.", "url": "https://github.com/ConsenSys/teku/pull/2394#discussion_r457846342", "createdAt": "2020-07-21T05:32:30Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -183,6 +205,21 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb5755a4e9d04ee85e0ace54b0bd13c4a4b4747"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3421, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}