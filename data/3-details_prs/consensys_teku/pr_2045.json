{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDcxODMz", "number": 2045, "title": "load eth1 deposits from storage on startup", "bodyText": "Signed-off-by: Paul Harris paul.harris@consensys.net\nAddresses #1412", "createdAt": "2020-06-03T09:16:31Z", "url": "https://github.com/ConsenSys/teku/pull/2045", "merged": true, "mergeCommit": {"oid": "56a83649f322fbf671ce4e785b60ee85764a6cc2"}, "closed": true, "closedAt": "2020-06-04T05:42:19Z", "author": {"login": "rolfyone"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnl2iRgH2gAyNDI3MDcxODMzOjEzMjhjMzAyYmM2Y2QzZmI1NDdhNjNlYzZhNGRkZDg4YzdkN2FmM2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn3LkygH2gAyNDI3MDcxODMzOjQ4MDkyNTRjOWIwNDA5MzZhMmJiOTE4ZWU1MGJiMjU5ODIyZGY1Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a", "committedDate": "2020-06-03T09:15:11Z", "message": "initial commit of startup change for deposit storage\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMzY4ODc3", "url": "https://github.com/ConsenSys/teku/pull/2045#pullrequestreview-423368877", "createdAt": "2020-06-03T09:17:20Z", "commit": {"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxNzoyMFrOGeTS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxNzoyMFrOGeTS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNjU4OA==", "bodyText": "not a huge fan of this any ideas @ajsutton", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434426588", "createdAt": "2020-06-03T09:17:20Z", "author": {"login": "rolfyone"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -50,16 +50,13 @@ public Eth1DepositManager(\n     this.minimumGenesisTimeBlockFinder = minimumGenesisTimeBlockFinder;\n   }\n \n+  @SuppressWarnings(\"FutureReturnValueIgnored\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1328c302bc6cd3fb547a63ec6a4ddd88c7d7af3a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bc1e1e04efddc0d50cb3e50cccb5062577b4404", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/5bc1e1e04efddc0d50cb3e50cccb5062577b4404", "committedDate": "2020-06-03T21:01:04Z", "message": "from changelist, got missed in commit.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4cea2302baced5a9b19c536bf8dc64f0a8ab59", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/1b4cea2302baced5a9b19c536bf8dc64f0a8ab59", "committedDate": "2020-06-03T21:35:41Z", "message": "removed suppressWarnings annotations\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f0cd14e8627a9f83ccfdd9f9c58287a7af66b2c", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/8f0cd14e8627a9f83ccfdd9f9c58287a7af66b2c", "committedDate": "2020-06-03T23:19:19Z", "message": "add eth1-deposits-from-storage-enabled option, and disable by default.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/2bcc3fc7cc75ce632a698162a68964de66cfd2d4", "committedDate": "2020-06-03T23:20:01Z", "message": "Merge remote-tracking branch 'upstream/master' into 1412-startup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDI4OTU4", "url": "https://github.com/ConsenSys/teku/pull/2045#pullrequestreview-424028958", "createdAt": "2020-06-04T00:47:44Z", "commit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMDo0Nzo0NVrOGeyJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMToyNzo0MFrOGeyu6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzMjA2Mw==", "bodyText": "Can we make this a --X option? It should get removed again once we're happy it all works so not something that is part of the \"official\" CLI.  I'd probably omit it from config.yaml as well - the default value is just provided by the code anyway (I think config.yaml is just used by run.sh now actually).", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434932063", "createdAt": "2020-06-04T00:47:45Z", "author": {"login": "ajsutton"}, "path": "config/config.yaml", "diffHunk": "@@ -29,6 +29,7 @@ Xinterop-enabled: True\n # deposit\n eth1-deposit-contract-address: \"0x77f7bED277449F51505a4C54550B074030d989bC\"\n eth1-endpoint: \"http://localhost:8545\"\n+eth1-deposits-from-storage-enabled: False", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjMzMg==", "bodyText": "If the head block isn't after the start block number, we appear to not do anything and so never start tracking head. So even when the chain progresses past our start block we won't process any new blocks.\nI suspect we need a depositProcessingController.startSubscription(startBlockNumber) in the else case for this outer if.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936332", "createdAt": "2020-06-04T01:05:48Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();\n+    if (headBlock.getNumber().compareTo(startBlockNumber) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzNjgxOA==", "bodyText": "We've got this logic in at least three places - probably worth either extracting a method for it or calculating up-front and passing the value down.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434936818", "createdAt": "2020-06-04T01:07:54Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -69,23 +70,55 @@ public void stop() {\n     depositProcessingController.stopIfSubscribed();\n   }\n \n-  private SafeFuture<Void> headBeforeMinGenesisMode(EthBlock.Block headBlock) {\n+  private SafeFuture<Void> processStart(\n+      final EthBlock.Block headBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzODA5MQ==", "bodyText": "Switch java.util.function.Supplier instead of the google version.  It's only the package that needs to change.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.google.common.base.Supplier;\n          \n          \n            \n            import java.util.function.Supplier;", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434938091", "createdAt": "2020-06-04T01:13:22Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.google.common.base.Supplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDQ4Ng==", "bodyText": "nit: Couldn't we just have depositsComplete() return the ReplayDepositsResult?", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940486", "createdAt": "2020-06-04T01:23:09Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MDg1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (result.getBlockNumber().isPresent()) {\n          \n          \n            \n                  startingBlock =\n          \n          \n            \n                      Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n          \n          \n            \n                } else {\n          \n          \n            \n                  startingBlock = Optional.of(BigInteger.valueOf(-1L));\n          \n          \n            \n                }\n          \n          \n            \n                startingBlock =\n          \n          \n            \n                    result\n          \n          \n            \n                        .getBlockNumber()\n          \n          \n            \n                        .map(number -> number.plus(UnsignedLong.ONE).bigIntegerValue())\n          \n          \n            \n                        .or(() -> Optional.of(BigInteger.valueOf(-1)));", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434940852", "createdAt": "2020-06-04T01:24:44Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ==", "bodyText": "This probably works out but the thread safety is questionable and it's causing IntelliJ to flag warnings.  Better would be to only load the current value of startingBlock once.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;\n          \n          \n            \n                return startingBlock.map(block -> block.compareTo(blockNumber) < 0).orElse(false)", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941381", "createdAt": "2020-06-04T01:26:30Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }\n+    return result;\n+  }\n+\n+  private boolean shouldProcessEvent(final BigInteger blockNumber) {\n+    return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTY3Mg==", "bodyText": "I'd be tempted to make this take an UnsignedLong as parameter and do the .bigIntegerValue() once in here instead of in the two places it's called.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434941672", "createdAt": "2020-06-04T01:27:40Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/server/DepositStorage.java", "diffHunk": "@@ -52,27 +60,41 @@ public void stop() {}\n   }\n \n   private ReplayDepositsResult replayDeposits() {\n-    isSyncingFromDatabase = true;\n+    if (!eth1DepositsFromStorageEnabled) {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+      return new ReplayDepositsResult(UnsignedLong.ZERO, false);\n+    }\n+\n     final DepositSequencer depositSequencer =\n         new DepositSequencer(eth1EventsChannel, database.getMinGenesisTimeBlock());\n     try (Stream<DepositsFromBlockEvent> eventStream = database.streamDepositsFromBlocks()) {\n       eventStream.forEach(depositSequencer::depositEvent);\n     }\n     depositSequencer.depositsComplete();\n-    isSyncingFromDatabase = false;\n-    return depositSequencer.done();\n+    ReplayDepositsResult result = depositSequencer.done();\n+    if (result.getBlockNumber().isPresent()) {\n+      startingBlock =\n+          Optional.of(result.getBlockNumber().get().plus(UnsignedLong.ONE).bigIntegerValue());\n+    } else {\n+      startingBlock = Optional.of(BigInteger.valueOf(-1L));\n+    }\n+    return result;\n+  }\n+\n+  private boolean shouldProcessEvent(final BigInteger blockNumber) {\n+    return startingBlock.isPresent() && startingBlock.get().compareTo(blockNumber) < 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0MTM4MQ=="}, "originalCommit": {"oid": "2bcc3fc7cc75ce632a698162a68964de66cfd2d4"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1389616db8b7289cf2d56ec43379977d351eb5d1", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/1389616db8b7289cf2d56ec43379977d351eb5d1", "committedDate": "2020-06-04T04:03:55Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDg3Nzk0", "url": "https://github.com/ConsenSys/teku/pull/2045#pullrequestreview-424087794", "createdAt": "2020-06-04T04:08:19Z", "commit": {"oid": "1389616db8b7289cf2d56ec43379977d351eb5d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowODoxOVrOGe1IXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNDowODoxOVrOGe1IXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4MDk1Ng==", "bodyText": "nit: can use replayDepositsResult.getBockNumberOrZero() here too.", "url": "https://github.com/ConsenSys/teku/pull/2045#discussion_r434980956", "createdAt": "2020-06-04T04:08:19Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/Eth1DepositManager.java", "diffHunk": "@@ -94,9 +124,11 @@ public void stop() {\n   }\n \n   private SafeFuture<EthBlock.Block> sendDepositsUpToMinGenesis(\n-      final EthBlock.Block minGenesisTimeBlock) {\n+      final EthBlock.Block minGenesisTimeBlock, final ReplayDepositsResult replayDepositsResult) {\n+    BigInteger startBlockNumber =\n+        replayDepositsResult.getBlockNumber().orElse(UnsignedLong.ZERO).bigIntegerValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389616db8b7289cf2d56ec43379977d351eb5d1"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2c242cce889cc5c71f1b6a90fcf3aa9c184cfb3", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/b2c242cce889cc5c71f1b6a90fcf3aa9c184cfb3", "committedDate": "2020-06-04T04:48:40Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b254b1e52283afd37797f537d0395a0311fbdc07", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/b254b1e52283afd37797f537d0395a0311fbdc07", "committedDate": "2020-06-04T04:49:55Z", "message": "Merge remote-tracking branch 'upstream/master' into 1412-startup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTAwNTYy", "url": "https://github.com/ConsenSys/teku/pull/2045#pullrequestreview-424100562", "createdAt": "2020-06-04T04:51:45Z", "commit": {"oid": "b254b1e52283afd37797f537d0395a0311fbdc07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4809254c9b040936a2bb918ee50bb259822df528", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/4809254c9b040936a2bb918ee50bb259822df528", "committedDate": "2020-06-04T05:26:33Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}