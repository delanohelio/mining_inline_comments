{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTcxNTUz", "number": 2881, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyMDozMFrOEqni1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyMTo0NVrOEqnlAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTIzNTQwOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyMDozMFrOHc7J5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNjoyMFrOHdN3cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5MTM2NA==", "bodyText": "From my perspective I would Ignore only the cases when we are 100% sure this is not the remote peer guilt.\nI'm almost sure there are still cases when other exceptions could be thrown beside DecodingException and this could be the attack target and in this case the peer would not be banned. IMHO it's better to unfairly ban a honest peer than keep being DoSed by a malicious peer.", "url": "https://github.com/ConsenSys/teku/pull/2881#discussion_r500091364", "createdAt": "2020-10-06T08:20:30Z", "author": {"login": "Nashatyrev"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "diffHunk": "@@ -62,15 +62,20 @@ protected abstract void processMessage(\n       final TWrapped message, InternalValidationResult internalValidationResult);\n \n   protected ValidationResult handleMessageProcessingError(Throwable err) {\n+    final ValidationResult response;\n     if (Throwables.getRootCause(err) instanceof DecodingException) {\n       LOG.trace(\"Received malformed gossip message on {}\", getTopic());\n+      response = ValidationResult.Invalid;\n     } else if (Throwables.getRootCause(err) instanceof RejectedExecutionException) {\n       LOG.warn(\n           \"Discarding gossip message for topic {} because the executor queue is full\", getTopic());\n+      response = ValidationResult.Ignore;\n     } else {\n       LOG.warn(\"Encountered exception while processing message for topic {}\", getTopic(), err);\n+      response = ValidationResult.Ignore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20c853176370c80a1bc9df970deadfbf834e7e1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NzkzOA==", "bodyText": "Yeah, on second thought this makes a lot of sense \ud83d\udc4d  And we do log a warning, so we should be able to detect any cases where we're being too strict.", "url": "https://github.com/ConsenSys/teku/pull/2881#discussion_r500397938", "createdAt": "2020-10-06T15:36:20Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "diffHunk": "@@ -62,15 +62,20 @@ protected abstract void processMessage(\n       final TWrapped message, InternalValidationResult internalValidationResult);\n \n   protected ValidationResult handleMessageProcessingError(Throwable err) {\n+    final ValidationResult response;\n     if (Throwables.getRootCause(err) instanceof DecodingException) {\n       LOG.trace(\"Received malformed gossip message on {}\", getTopic());\n+      response = ValidationResult.Invalid;\n     } else if (Throwables.getRootCause(err) instanceof RejectedExecutionException) {\n       LOG.warn(\n           \"Discarding gossip message for topic {} because the executor queue is full\", getTopic());\n+      response = ValidationResult.Ignore;\n     } else {\n       LOG.warn(\"Encountered exception while processing message for topic {}\", getTopic(), err);\n+      response = ValidationResult.Ignore;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5MTM2NA=="}, "originalCommit": {"oid": "a20c853176370c80a1bc9df970deadfbf834e7e1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTI0MDk2OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoyMTo0NVrOHc7NKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTozNjozMlrOHdN4Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5MjIwMw==", "bodyText": "BTW I'd fix this check since there are cases when DecodingException is not the innermost. E.g.:\n    } catch (SSZException e) {\n      throw new DecodingException(\"Failed to deserialize value\", e);\n    } catch (Exception e) {\n      throw new DecodingException(\"Encountered exception while deserializing value\", e);\n    }", "url": "https://github.com/ConsenSys/teku/pull/2881#discussion_r500092203", "createdAt": "2020-10-06T08:21:45Z", "author": {"login": "Nashatyrev"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "diffHunk": "@@ -62,15 +62,20 @@ protected abstract void processMessage(\n       final TWrapped message, InternalValidationResult internalValidationResult);\n \n   protected ValidationResult handleMessageProcessingError(Throwable err) {\n+    final ValidationResult response;\n     if (Throwables.getRootCause(err) instanceof DecodingException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20c853176370c80a1bc9df970deadfbf834e7e1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5ODExNA==", "bodyText": "good catch!", "url": "https://github.com/ConsenSys/teku/pull/2881#discussion_r500398114", "createdAt": "2020-10-06T15:36:32Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/Eth2TopicHandler.java", "diffHunk": "@@ -62,15 +62,20 @@ protected abstract void processMessage(\n       final TWrapped message, InternalValidationResult internalValidationResult);\n \n   protected ValidationResult handleMessageProcessingError(Throwable err) {\n+    final ValidationResult response;\n     if (Throwables.getRootCause(err) instanceof DecodingException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5MjIwMw=="}, "originalCommit": {"oid": "a20c853176370c80a1bc9df970deadfbf834e7e1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3303, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}