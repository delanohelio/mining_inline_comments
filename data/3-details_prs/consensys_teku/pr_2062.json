{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTQxNjEy", "number": 2062, "title": "Minimize fork choice dependencies on store", "bodyText": "PR Description\nMinimize fork choice dependencies on store\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-06-05T15:48:24Z", "url": "https://github.com/ConsenSys/teku/pull/2062", "merged": true, "mergeCommit": {"oid": "d906f11ea4d08cfa58afca364fd95445f6318f11"}, "closed": true, "closedAt": "2020-06-11T16:03:18Z", "author": {"login": "cemozerr"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnwK1EAH2gAyNDI4NTQxNjEyOjgxOTlmNDE4MzZkMTU3YjAyODY3ODhjZjg0YWYwMTBiNWI2YTMzNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqQOqiAH2gAyNDI4NTQxNjEyOmY3MzA5YjU1ZDNjMmNkMGRlZjE5NTliM2I1ODQ3ZWU5M2E4Y2RlMTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8199f41836d157b0286788cf84af010b5b6a3356", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/8199f41836d157b0286788cf84af010b5b6a3356", "committedDate": "2020-06-03T21:16:24Z", "message": "Switch head block slot retrieving source from Store to ProtoArray"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e922872c9e3baf4d6c198f8def875e76815558ea", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/e922872c9e3baf4d6c198f8def875e76815558ea", "committedDate": "2020-06-05T15:45:23Z", "message": "Refactor block slot and root look up to not use Store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a165dd87ef3dde9695ffee78f6538d288a3a44a", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/7a165dd87ef3dde9695ffee78f6538d288a3a44a", "committedDate": "2020-06-05T19:37:18Z", "message": "Remove redundant parent root field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1060e90a5d06d7d59ac675fb1e7636adc70fd381", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/1060e90a5d06d7d59ac675fb1e7636adc70fd381", "committedDate": "2020-06-05T21:11:12Z", "message": "Run spotless & fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fef7512a09156f5e26895cefa706f8a7ebc633fe", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/fef7512a09156f5e26895cefa706f8a7ebc633fe", "committedDate": "2020-06-05T21:16:12Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into minimiseForkChoiceDependenciesOnStore\n\n# Conflicts:\n#\tethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/ForkChoice.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a23d0654735553452a4787ede5af8877edfb823d", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a23d0654735553452a4787ede5af8877edfb823d", "committedDate": "2020-06-08T14:59:22Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a917252d3c1b69d735526b01bfb47c866f2b07bf", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/a917252d3c1b69d735526b01bfb47c866f2b07bf", "committedDate": "2020-06-08T15:55:02Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66553074294534bf91e804530739fb4cd2136af3", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/66553074294534bf91e804530739fb4cd2136af3", "committedDate": "2020-06-08T15:55:17Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d5b9c75d9be3ba8ce5fef472f931f4b1195988", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/08d5b9c75d9be3ba8ce5fef472f931f4b1195988", "committedDate": "2020-06-08T16:58:00Z", "message": "Refactor test utils and fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8260412c28a1804be4468db6aa0f367977c67cd3", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/8260412c28a1804be4468db6aa0f367977c67cd3", "committedDate": "2020-06-08T17:02:59Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717e09beae1006620bf11b9404b748d5c62fe869", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/717e09beae1006620bf11b9404b748d5c62fe869", "committedDate": "2020-06-08T21:24:13Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/cd7aec30801173c9f8bca144f82f449c304fb9a2", "committedDate": "2020-06-08T22:18:09Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NzEwODU2", "url": "https://github.com/ConsenSys/teku/pull/2062#pullrequestreview-426710856", "createdAt": "2020-06-09T00:32:04Z", "commit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDozMjowNFrOGg0zFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo0NDozNlrOGg0-9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3MjY2MQ==", "bodyText": "Rather than throwing UnknownBlockRootException which is then caught as a routine result in each place that calls this - would be better to return Optional from here.\nreturn forkChoiceStrategy\n        .blockSlot(root)\n        .flatMap(\n            blockSlot -> {\n              if (blockSlot.compareTo(slot) > 0) {\n                return get_ancestor(\n                    forkChoiceStrategy,\n                    forkChoiceStrategy.blockParentRoot(root).orElseThrow(),\n                    slot);\n              } else if (blockSlot.equals(slot)) {\n                return Optional.of(root);\n              } else {\n                // root is older than the queried slot, thus a skip slot. Return earliest root prior\n                // to slot.\n                return Optional.of(root);\n              }\n            });", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437072661", "createdAt": "2020-06-09T00:32:04Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -76,18 +76,27 @@ public static UnsignedLong compute_slots_since_epoch_start(UnsignedLong slot) {\n   /**\n    * Get the ancestor of ``block`` with slot number ``slot``.\n    *\n-   * @param store\n+   * @param forkChoiceStrategy\n    * @param root\n    * @param slot\n    * @return\n    * @see\n    *     <a>https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/fork-choice.md#get_ancestor</a>\n    */\n-  private static Bytes32 get_ancestor(ReadOnlyStore store, Bytes32 root, UnsignedLong slot) {\n-    BeaconBlock block = store.getBlock(root);\n-    if (block.getSlot().compareTo(slot) > 0) {\n-      return get_ancestor(store, block.getParent_root(), slot);\n-    } else if (block.getSlot().equals(slot)) {\n+  private static Bytes32 get_ancestor(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3MjkyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  return get_ancestor(forkChoiceStrategy, new_justified_checkpoint.getRoot(), justified_slot)\n          \n          \n            \n                      .equals(store.getJustifiedCheckpoint().getRoot());\n          \n          \n            \n                } catch (UnknownBlockRootException e) {\n          \n          \n            \n                  return false;\n          \n          \n            \n                }\n          \n          \n            \n            return get_ancestor(forkChoiceStrategy, new_justified_checkpoint.getRoot(), justified_slot)\n          \n          \n            \n                    .map(ancestorRoot -> ancestorRoot.equals(store.getJustifiedCheckpoint().getRoot()))\n          \n          \n            \n                    .orElse(false);", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437072922", "createdAt": "2020-06-09T00:32:57Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -112,8 +123,12 @@ private static boolean should_update_justified_checkpoint(\n \n     UnsignedLong justified_slot =\n         compute_start_slot_at_epoch(store.getJustifiedCheckpoint().getEpoch());\n-    return get_ancestor(store, new_justified_checkpoint.getRoot(), justified_slot)\n-        .equals(store.getJustifiedCheckpoint().getRoot());\n+    try {\n+      return get_ancestor(forkChoiceStrategy, new_justified_checkpoint.getRoot(), justified_slot)\n+          .equals(store.getJustifiedCheckpoint().getRoot());\n+    } catch (UnknownBlockRootException e) {\n+      return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3MzQxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  boolean isFinalizedAncestorOfJustified;\n          \n          \n            \n                  try {\n          \n          \n            \n                    Bytes32 ancestorOfJustifiedAtFinalizedSlot =\n          \n          \n            \n                        get_ancestor(\n          \n          \n            \n                            forkChoiceStrategy, store.getJustifiedCheckpoint().getRoot(), finalized_slot);\n          \n          \n            \n                    isFinalizedAncestorOfJustified =\n          \n          \n            \n                        ancestorOfJustifiedAtFinalizedSlot.equals(store.getFinalizedCheckpoint().getRoot());\n          \n          \n            \n                  } catch (UnknownBlockRootException e) {\n          \n          \n            \n                    isFinalizedAncestorOfJustified = false;\n          \n          \n            \n                  }\n          \n          \n            \n                  boolean isFinalizedAncestorOfJustified =\n          \n          \n            \n                      get_ancestor(forkChoiceStrategy, store.getJustifiedCheckpoint().getRoot(), finalized_slot)\n          \n          \n            \n                          .map(\n          \n          \n            \n                              ancestorOfJustifiedAtFinalizedSlot ->\n          \n          \n            \n                                  ancestorOfJustifiedAtFinalizedSlot.equals(\n          \n          \n            \n                                      store.getFinalizedCheckpoint().getRoot()))\n          \n          \n            \n                          .orElse(false);", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437073414", "createdAt": "2020-06-09T00:35:03Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -213,13 +232,24 @@ public static BlockImportResult on_block(\n       UnsignedLong finalized_slot = store.getFinalizedCheckpoint().getEpochStartSlot();\n       // Update justified if new justified is later than store justified\n       // or if store justified is not in chain with finalized checkpoint\n+\n+      boolean isFinalizedAncestorOfJustified;\n+      try {\n+        Bytes32 ancestorOfJustifiedAtFinalizedSlot =\n+            get_ancestor(\n+                forkChoiceStrategy, store.getJustifiedCheckpoint().getRoot(), finalized_slot);\n+        isFinalizedAncestorOfJustified =\n+            ancestorOfJustifiedAtFinalizedSlot.equals(store.getFinalizedCheckpoint().getRoot());\n+      } catch (UnknownBlockRootException e) {\n+        isFinalizedAncestorOfJustified = false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3MzcwOA==", "bodyText": "We should restore the order of these checks as finding the ancestor is a lot more expensive than checking the epochs.  So probably make isFinalizedAncestorOfJustified a method that's called here rather than a variable. Then we benefit from short circuiting.", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437073708", "createdAt": "2020-06-09T00:36:12Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -213,13 +232,24 @@ public static BlockImportResult on_block(\n       UnsignedLong finalized_slot = store.getFinalizedCheckpoint().getEpochStartSlot();\n       // Update justified if new justified is later than store justified\n       // or if store justified is not in chain with finalized checkpoint\n+\n+      boolean isFinalizedAncestorOfJustified;\n+      try {\n+        Bytes32 ancestorOfJustifiedAtFinalizedSlot =\n+            get_ancestor(\n+                forkChoiceStrategy, store.getJustifiedCheckpoint().getRoot(), finalized_slot);\n+        isFinalizedAncestorOfJustified =\n+            ancestorOfJustifiedAtFinalizedSlot.equals(store.getFinalizedCheckpoint().getRoot());\n+      } catch (UnknownBlockRootException e) {\n+        isFinalizedAncestorOfJustified = false;\n+      }\n+\n       if (state\n                   .getCurrent_justified_checkpoint()\n                   .getEpoch()\n                   .compareTo(store.getJustifiedCheckpoint().getEpoch())\n               > 0\n-          || !get_ancestor(store, store.getJustifiedCheckpoint().getRoot(), finalized_slot)\n-              .equals(store.getFinalizedCheckpoint().getRoot())) {\n+          || !isFinalizedAncestorOfJustified) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NDM1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  final Bytes32 ancestorAtFinalizedSlot =\n          \n          \n            \n                      get_ancestor(forkChoiceStrategy, block.getParent_root(), finalizedSlot);\n          \n          \n            \n                  return ancestorAtFinalizedSlot.equals(finalizedCheckpoint.getRoot());\n          \n          \n            \n                } catch (UnknownBlockRootException e) {\n          \n          \n            \n                  return false;\n          \n          \n            \n                }\n          \n          \n            \n               return get_ancestor(forkChoiceStrategy, block.getParent_root(), finalizedSlot)\n          \n          \n            \n                    .map(\n          \n          \n            \n                        ancestorAtFinalizedSlot ->\n          \n          \n            \n                            ancestorAtFinalizedSlot.equals(finalizedCheckpoint.getRoot()))\n          \n          \n            \n                    .orElse(false);\n          \n      \n    \n    \n  \n\nI'm feeling like there's a pattern here so we could just extract a hasAncestorAtSlot(BeaconBlock block, UnsignedLong slot, Bytes32 expectedBlockRoot) method.", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437074350", "createdAt": "2020-06-09T00:39:04Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -235,41 +265,54 @@ public static BlockImportResult on_block(\n   }\n \n   private static Optional<BlockImportResult> checkOnBlockConditions(\n-      final BeaconBlock block, final BeaconState preState, final ReadOnlyStore store) {\n+      final BeaconBlock block,\n+      final BeaconState preState,\n+      final ReadOnlyStore store,\n+      final ForkChoiceStrategy forkChoiceStrategy) {\n+    final UnsignedLong blockSlot = block.getSlot();\n     if (preState == null) {\n       return Optional.of(BlockImportResult.FAILED_UNKNOWN_PARENT);\n     }\n-    if (preState.getSlot().compareTo(block.getSlot()) >= 0) {\n+    if (preState.getSlot().compareTo(blockSlot) >= 0) {\n       return Optional.of(BlockImportResult.FAILED_INVALID_ANCESTRY);\n     }\n-    if (blockIsFromFuture(block, store)) {\n+    if (blockIsFromFuture(store, blockSlot)) {\n       return Optional.of(BlockImportResult.FAILED_BLOCK_IS_FROM_FUTURE);\n     }\n-    if (!blockDescendsFromLatestFinalizedBlock(block, store)) {\n+    if (!blockDescendsFromLatestFinalizedBlock(block, store, forkChoiceStrategy)) {\n       return Optional.of(BlockImportResult.FAILED_INVALID_ANCESTRY);\n     }\n     return Optional.empty();\n   }\n \n-  private static boolean blockIsFromFuture(BeaconBlock block, ReadOnlyStore store) {\n-    return get_current_slot(store).compareTo(block.getSlot()) < 0;\n+  private static boolean blockIsFromFuture(ReadOnlyStore store, final UnsignedLong blockSlot) {\n+    return get_current_slot(store).compareTo(blockSlot) < 0;\n   }\n \n   private static boolean blockDescendsFromLatestFinalizedBlock(\n-      final BeaconBlock block, final ReadOnlyStore store) {\n+      final BeaconBlock block,\n+      final ReadOnlyStore store,\n+      final ForkChoiceStrategy forkChoiceStrategy) {\n     final Checkpoint finalizedCheckpoint = store.getFinalizedCheckpoint();\n+    // TODO: throw specific error here\n+    final UnsignedLong blockSlot = block.getSlot();\n \n     // Make sure this block's slot is after the latest finalized slot\n     final UnsignedLong finalizedEpochStartSlot = finalizedCheckpoint.getEpochStartSlot();\n-    if (block.getSlot().compareTo(finalizedEpochStartSlot) <= 0) {\n+    if (blockSlot.compareTo(finalizedEpochStartSlot) <= 0) {\n       return false;\n     }\n \n     // Make sure this block descends from the finalized block\n-    final UnsignedLong finalizedSlot = store.getBlock(finalizedCheckpoint.getRoot()).getSlot();\n-    final Bytes32 ancestorAtFinalizedSlot =\n-        get_ancestor(store, block.getParent_root(), finalizedSlot);\n-    return ancestorAtFinalizedSlot.equals(finalizedCheckpoint.getRoot());\n+    final UnsignedLong finalizedSlot =\n+        forkChoiceStrategy.blockSlot(finalizedCheckpoint.getRoot()).orElseThrow();\n+    try {\n+      final Bytes32 ancestorAtFinalizedSlot =\n+          get_ancestor(forkChoiceStrategy, block.getParent_root(), finalizedSlot);\n+      return ancestorAtFinalizedSlot.equals(finalizedCheckpoint.getRoot());\n+    } catch (UnknownBlockRootException e) {\n+      return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTIzMQ==", "bodyText": "If the previous checks that the roots are known mean we can safely call get here, can we replace one or more of them with a check that the returned blockSlot is empty?  Otherwise, do we need to handle blockSlot returning empty?", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437075231", "createdAt": "2020-06-09T00:42:44Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -381,21 +426,21 @@ private static AttestationProcessingResult validateOnAttestation(\n       return AttestationProcessingResult.INVALID;\n     }\n \n-    if (!store.getBlockRoots().contains(target.getRoot())) {\n+    if (!forkChoiceStrategy.contains(target.getRoot())) {\n       // Attestations target must be for a known block. If a target block is unknown, delay\n       // consideration until the block is found\n       return AttestationProcessingResult.UNKNOWN_BLOCK;\n     }\n \n-    if (!store.getBlockRoots().contains(attestation.getData().getBeacon_block_root())) {\n+    if (!forkChoiceStrategy.contains(attestation.getData().getBeacon_block_root())) {\n       // Attestations must be for a known block. If block is unknown, delay consideration until the\n       // block is found\n       return AttestationProcessingResult.UNKNOWN_BLOCK;\n     }\n \n-    if (store\n-            .getBlock(attestation.getData().getBeacon_block_root())\n-            .getSlot()\n+    if (forkChoiceStrategy\n+            .blockSlot(attestation.getData().getBeacon_block_root())\n+            .get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTMyNw==", "bodyText": "If we return Optional we can get rid of this.", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437075327", "createdAt": "2020-06-09T00:43:05Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/UnknownBlockRootException.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core;\n+\n+public class UnknownBlockRootException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTcwMw==", "bodyText": "When we were finding head we already knew the root and slot.  Can we find a way to just return it instead of having to do a second lookup?", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r437075703", "createdAt": "2020-06-09T00:44:36Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/ForkChoice.java", "diffHunk": "@@ -53,14 +52,20 @@ public synchronized Bytes32 processHead() {\n     StoreTransaction transaction = recentChainData.startStoreTransaction();\n     Bytes32 headBlockRoot = protoArrayForkChoiceStrategy.findHead(transaction);\n     transaction.commit(() -> {}, \"Failed to persist validator vote changes.\");\n-    BeaconBlock headBlock = recentChainData.getStore().getBlock(headBlockRoot);\n-    recentChainData.updateBestBlock(headBlockRoot, headBlock.getSlot());\n+    recentChainData.updateBestBlock(\n+        headBlockRoot,\n+        protoArrayForkChoiceStrategy\n+            .blockSlot(headBlockRoot)\n+            .orElseThrow(\n+                () ->\n+                    new IllegalStateException(\"Unable to retrieve the slot of fork choice head\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7aec30801173c9f8bca144f82f449c304fb9a2"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06a4bc91cb67caf5572851d9ad33e240c65bc0c7", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/06a4bc91cb67caf5572851d9ad33e240c65bc0c7", "committedDate": "2020-06-09T15:27:14Z", "message": "Refactor ancestor checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77e19afa6090b585da603d25c7c1338948a7f23d", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/77e19afa6090b585da603d25c7c1338948a7f23d", "committedDate": "2020-06-09T15:33:19Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e63ebfeecd65453c7bfadfdbece14be46763bef", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/5e63ebfeecd65453c7bfadfdbece14be46763bef", "committedDate": "2020-06-09T17:01:01Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b218d614c9451fc253725447dd9f1b1bfdfe1396", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/b218d614c9451fc253725447dd9f1b1bfdfe1396", "committedDate": "2020-06-10T16:06:09Z", "message": "Do not throw NPE when asked for not existing ProtoNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d4ad44a15a10e8d7a6eaab11336709a573b5530", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/9d4ad44a15a10e8d7a6eaab11336709a573b5530", "committedDate": "2020-06-10T16:08:56Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "543c42aa6bb7fb23690487c64b7d0706d3baed8e", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/543c42aa6bb7fb23690487c64b7d0706d3baed8e", "committedDate": "2020-06-10T16:13:57Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into minimiseForkChoiceDependenciesOnStore\n\n# Conflicts:\n#\tethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDY4Mjcy", "url": "https://github.com/ConsenSys/teku/pull/2062#pullrequestreview-428468272", "createdAt": "2020-06-10T22:21:08Z", "commit": {"oid": "543c42aa6bb7fb23690487c64b7d0706d3baed8e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjoyMTowOFrOGiIO7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMjoyMTowOFrOGiIO7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzOTY2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .map(ancestorAtFinalizedSlot -> ancestorAtFinalizedSlot.equals(ancestorRoot))\n          \n          \n            \n                    .map(ancestorAtSlot -> ancestorAtSlot.equals(ancestorRoot))", "url": "https://github.com/ConsenSys/teku/pull/2062#discussion_r438439661", "createdAt": "2020-06-10T22:21:08Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -233,42 +249,69 @@ public static BlockImportResult on_block(\n     return BlockImportResult.successful(record);\n   }\n \n+  private static boolean isFinalizedAncestorOfJustified(\n+      ForkChoiceStrategy forkChoiceStrategy, ReadOnlyStore store) {\n+    UnsignedLong finalizedSlot = store.getFinalizedCheckpoint().getEpochStartSlot();\n+    return hasAncestorAtSlot(\n+        forkChoiceStrategy,\n+        store.getJustifiedCheckpoint().getRoot(),\n+        finalizedSlot,\n+        store.getFinalizedCheckpoint().getRoot());\n+  }\n+\n   private static Optional<BlockImportResult> checkOnBlockConditions(\n-      final BeaconBlock block, final BeaconState preState, final ReadOnlyStore store) {\n+      final BeaconBlock block,\n+      final BeaconState preState,\n+      final ReadOnlyStore store,\n+      final ForkChoiceStrategy forkChoiceStrategy) {\n+    final UnsignedLong blockSlot = block.getSlot();\n     if (preState == null) {\n       return Optional.of(BlockImportResult.FAILED_UNKNOWN_PARENT);\n     }\n-    if (preState.getSlot().compareTo(block.getSlot()) >= 0) {\n+    if (preState.getSlot().compareTo(blockSlot) >= 0) {\n       return Optional.of(BlockImportResult.FAILED_INVALID_ANCESTRY);\n     }\n-    if (blockIsFromFuture(block, store)) {\n+    if (blockIsFromFuture(store, blockSlot)) {\n       return Optional.of(BlockImportResult.FAILED_BLOCK_IS_FROM_FUTURE);\n     }\n-    if (!blockDescendsFromLatestFinalizedBlock(block, store)) {\n+    if (!blockDescendsFromLatestFinalizedBlock(block, store, forkChoiceStrategy)) {\n       return Optional.of(BlockImportResult.FAILED_INVALID_ANCESTRY);\n     }\n     return Optional.empty();\n   }\n \n-  private static boolean blockIsFromFuture(BeaconBlock block, ReadOnlyStore store) {\n-    return get_current_slot(store).compareTo(block.getSlot()) < 0;\n+  private static boolean blockIsFromFuture(ReadOnlyStore store, final UnsignedLong blockSlot) {\n+    return get_current_slot(store).compareTo(blockSlot) < 0;\n+  }\n+\n+  private static boolean hasAncestorAtSlot(\n+      ForkChoiceStrategy forkChoiceStrategy,\n+      Bytes32 root,\n+      UnsignedLong slot,\n+      Bytes32 ancestorRoot) {\n+    return get_ancestor(forkChoiceStrategy, root, slot)\n+        .map(ancestorAtFinalizedSlot -> ancestorAtFinalizedSlot.equals(ancestorRoot))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543c42aa6bb7fb23690487c64b7d0706d3baed8e"}, "originalPosition": 168}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfdce8bf62d161e10928cbfb119023d50522805", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/1cfdce8bf62d161e10928cbfb119023d50522805", "committedDate": "2020-06-11T14:59:06Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7020a266096ffb810cc7309fb016b88a78f4576", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/f7020a266096ffb810cc7309fb016b88a78f4576", "committedDate": "2020-06-11T15:03:04Z", "message": "Change local variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7309b55d3c2cd0def1959b3b5847ee93a8cde19", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/f7309b55d3c2cd0def1959b3b5847ee93a8cde19", "committedDate": "2020-06-11T15:45:24Z", "message": "Merge branch 'master' into minimiseForkChoiceDependenciesOnStore"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3853, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}