{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODAyMzcz", "number": 1220, "title": "DiscoveryService", "bodyText": "Starts to integrate the https://github.com/PegaSysEng/discovery library by introducing a DiscoveryService API and implementation.  Ultimately this will be hooked into PeerManager but that hasn't yet been done.\nGeneration of the node ID is now done when creating NetworkConfig if needed so the config always contains a concrete node ID that can be shared by libp2p and discovery.\nNote this depends on ConsenSys/discovery#17", "createdAt": "2020-02-24T04:14:16Z", "url": "https://github.com/ConsenSys/teku/pull/1220", "merged": true, "mergeCommit": {"oid": "f4d30c448177fed0ab2241d468a26b26c2a18b9f"}, "closed": true, "closedAt": "2020-02-26T00:47:30Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFDPUWgH2gAyMzc4ODAyMzczOjQ5NTFmMjFkZjc3ZTU1ZDg2YWYwZTViNDJkOTQ0NmM5YWZlZjlkODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH6wVBAH2gAyMzc4ODAyMzczOjAzNTcwNGZjNWZiM2MwY2Y5MDMzN2VlZTg1Yjg0Njc3M2RjOGYyMWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4951f21df77e55d86af0e5b42d9446c9afef9d85", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/4951f21df77e55d86af0e5b42d9446c9afef9d85", "committedDate": "2020-02-17T01:42:09Z", "message": "Generate private key in config so it's available outside LibP2PNetwork."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed9a68d41ba0ebdc159503ef888bbfe7690f4d74", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ed9a68d41ba0ebdc159503ef888bbfe7690f4d74", "committedDate": "2020-02-17T01:45:15Z", "message": "Require private key to be passed into NetworkConfig."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdc340cc8d3723309f075411a56c82935d71838a", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/fdc340cc8d3723309f075411a56c82935d71838a", "committedDate": "2020-02-23T20:51:10Z", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2824a1d94ff8849f79a749f890f7d7fd16acdb49", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/2824a1d94ff8849f79a749f890f7d7fd16acdb49", "committedDate": "2020-02-24T04:11:52Z", "message": "Begin integration of discv5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d2c96a771d08c6cc5c9037db62b1799cddc6378", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/5d2c96a771d08c6cc5c9037db62b1799cddc6378", "committedDate": "2020-02-24T04:14:36Z", "message": "Reduce log levels."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad5ce0b3176f56ba322049a33cd00dae8588a72", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1ad5ce0b3176f56ba322049a33cd00dae8588a72", "committedDate": "2020-02-24T04:14:54Z", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/f513ddd146cdc9501e0f85d710dc4bd05df649c5", "committedDate": "2020-02-24T04:17:53Z", "message": "Spotless."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTM2MjYw", "url": "https://github.com/ConsenSys/teku/pull/1220#pullrequestreview-363536260", "createdAt": "2020-02-24T16:43:57Z", "commit": {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjo0Mzo1N1rOFtnuhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzowNDowOVrOFtoeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4MTEyNw==", "bodyText": "This shouldn't be committed should it?", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383381127", "createdAt": "2020-02-24T16:43:57Z", "author": {"login": "mbaxter"}, "path": "build.gradle", "diffHunk": "@@ -60,9 +60,11 @@ allprojects {\n   targetCompatibility = '11'\n \n   repositories {\n+    mavenLocal()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4ODgwMQ==", "bodyText": "Should we use the generic Service interface?:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface DiscoveryService {\n          \n          \n            \n            public interface DiscoveryService implements Service {", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383388801", "createdAt": "2020-02-24T16:56:36Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/libp2p/discovery/DiscoveryService.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.libp2p.discovery;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Stream;\n+\n+public interface DiscoveryService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5MzI5Mg==", "bodyText": "Looks like the \"TCP_V4\" field can be interpreted as applying to both ipv4 and ipv6 addresses, so I think this should produce a valid record:\n\nIf no tcp6 / udp6 port is provided, the tcp / udp port applies to both IP addresses.\n\nFrom: https://github.com/ethereum/devp2p/blob/master/enr.md#record-structure", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383393292", "createdAt": "2020-02-24T17:04:09Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/libp2p/discovery/discv5/NodeRecordConverterTest.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.libp2p.discovery.discv5;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.networking.p2p.libp2p.discovery.discv5.NodeRecordConverter.convertToDiscoveryPeer;\n+\n+import io.libp2p.core.multiformats.Multiaddr;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt64;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.IdentitySchema;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import org.ethereum.beacon.discovery.schema.NodeRecordFactory;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.networking.p2p.libp2p.discovery.DiscoveryPeer;\n+\n+class NodeRecordConverterTest {\n+\n+  private static final DiscoveryNodeId NODE_ID =\n+      new DiscoveryNodeId(\n+          Bytes.fromHexString(\n+              \"0x833246C198388F1B5E06EF1950B0A6705FBF6370E002656CDA2C6C803C06258D\"));\n+  private static final Bytes PUB_KEY =\n+      Bytes.fromHexString(\"0x0295A5A50F083697FF8557F3C6FE0CDF8E8EC2141D15F19A5A45571ED9C38CE181\");\n+  private static final Bytes IPV6_LOCALHOST =\n+      Bytes.fromHexString(\"0x00000000000000000000000000000001\");\n+\n+  @Test\n+  public void shouldNotConvertRecordWithNoIp() {\n+    assertThat(convertNodeRecordWithFields()).isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpButNoPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1}))))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpAndUdpPortButNoTcpPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.UDP_V4, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithV4IpAndV6Port() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.TCP_V6, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithV6IpAndV4Port() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V6, IPV6_LOCALHOST), new EnrField(EnrField.TCP_V4, 30303)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f513ddd146cdc9501e0f85d710dc4bd05df649c5"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df121ee47110ceca20eb721fa1310b7048c2c39f", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/df121ee47110ceca20eb721fa1310b7048c2c39f", "committedDate": "2020-02-25T02:03:36Z", "message": "Merge branch 'master' of github.com:PegaSysEng/artemis into discovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf554d3fe6739edc632e008ad34be7e5df9e8664", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/bf554d3fe6739edc632e008ad34be7e5df9e8664", "committedDate": "2020-02-25T02:10:41Z", "message": "Use 0.3 release of discovery.\nExtend Service."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cae13720d26374e188bf8f352e9c80a9a3bd16e", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/6cae13720d26374e188bf8f352e9c80a9a3bd16e", "committedDate": "2020-02-25T03:26:43Z", "message": "Record InetSocketAddress in DiscoveryPeer instead of a Multiaddr."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2408d78c2cb0b79fcc9a607269f5b74b5e28baf", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/b2408d78c2cb0b79fcc9a607269f5b74b5e28baf", "committedDate": "2020-02-25T03:34:11Z", "message": "Rearrange packages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7670dddb2e050f20a806fb3a6e6b4a3da65e8191", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/7670dddb2e050f20a806fb3a6e6b4a3da65e8191", "committedDate": "2020-02-25T04:01:14Z", "message": "DiscoveryNodeId isn't discv5 specific."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/7cab83c90fccbec8c8ceafbee3a0d546b6814834", "committedDate": "2020-02-25T04:09:44Z", "message": "Spotless."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MjMwNTQ4", "url": "https://github.com/ConsenSys/teku/pull/1220#pullrequestreview-364230548", "createdAt": "2020-02-25T15:25:46Z", "commit": {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToyNTo0NlrOFuKbTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTozOTo1MFrOFuLAXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0OTY0NQ==", "bodyText": "I think this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .or(() -> addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V6))\n          \n          \n            \n                    .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V4))", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383949645", "createdAt": "2020-02-25T15:25:46Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/discovery/discv5/NodeRecordConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.discovery.discv5;\n+\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.UnknownHostException;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryNodeId;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryPeer;\n+\n+public class NodeRecordConverter {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  static Optional<DiscoveryPeer> convertToDiscoveryPeer(final NodeRecord nodeRecord) {\n+    return addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V4)\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V6))\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V6))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1NDk0NA==", "bodyText": "We should probably rename TCP_V4 -> TCP and UDP_V4 -> UDP", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383954944", "createdAt": "2020-02-25T15:33:33Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/main/java/tech/pegasys/artemis/networking/p2p/discovery/discv5/NodeRecordConverter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.discovery.discv5;\n+\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.UnknownHostException;\n+import java.util.Optional;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryNodeId;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryPeer;\n+\n+public class NodeRecordConverter {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  static Optional<DiscoveryPeer> convertToDiscoveryPeer(final NodeRecord nodeRecord) {\n+    return addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V4)\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V6, EnrField.TCP_V6))\n+        .or(() -> addressFromFields(nodeRecord, EnrField.IP_V4, EnrField.TCP_V6))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0OTY0NQ=="}, "originalCommit": {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1OTEzNQ==", "bodyText": "Is this valid - should we catch this?  If an IP_V4 field contains and IPV6 address?", "url": "https://github.com/ConsenSys/teku/pull/1220#discussion_r383959135", "createdAt": "2020-02-25T15:39:50Z", "author": {"login": "mbaxter"}, "path": "networking/p2p/src/test/java/tech/pegasys/artemis/networking/p2p/discovery/discv5/NodeRecordConverterTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.networking.p2p.discovery.discv5;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.networking.p2p.discovery.discv5.NodeRecordConverter.convertToDiscoveryPeer;\n+\n+import java.net.InetSocketAddress;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt64;\n+import org.ethereum.beacon.discovery.schema.EnrField;\n+import org.ethereum.beacon.discovery.schema.IdentitySchema;\n+import org.ethereum.beacon.discovery.schema.NodeRecord;\n+import org.ethereum.beacon.discovery.schema.NodeRecordFactory;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryNodeId;\n+import tech.pegasys.artemis.networking.p2p.discovery.DiscoveryPeer;\n+\n+class NodeRecordConverterTest {\n+\n+  private static final DiscoveryNodeId NODE_ID =\n+      new DiscoveryNodeId(\n+          Bytes.fromHexString(\n+              \"0x833246C198388F1B5E06EF1950B0A6705FBF6370E002656CDA2C6C803C06258D\"));\n+  private static final Bytes PUB_KEY =\n+      Bytes.fromHexString(\"0x0295A5A50F083697FF8557F3C6FE0CDF8E8EC2141D15F19A5A45571ED9C38CE181\");\n+  private static final Bytes IPV6_LOCALHOST =\n+      Bytes.fromHexString(\"0x00000000000000000000000000000001\");\n+\n+  @Test\n+  public void shouldNotConvertRecordWithNoIp() {\n+    assertThat(convertNodeRecordWithFields()).isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpButNoPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1}))))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldNotConvertRecordWithIpAndUdpPortButNoTcpPort() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, Bytes.wrap(new byte[] {127, 0, 0, 1})),\n+                new EnrField(EnrField.UDP_V4, 30303)))\n+        .isEmpty();\n+  }\n+\n+  @Test\n+  public void shouldUseV4IpIfV6PortSpecifiedWithNoV6Ip() {\n+    assertThat(\n+            convertNodeRecordWithFields(\n+                new EnrField(EnrField.IP_V4, IPV6_LOCALHOST), new EnrField(EnrField.TCP_V6, 30303)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cab83c90fccbec8c8ceafbee3a0d546b6814834"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69c3f2d82c488668a2dcc25a50cfcd7316fe8c8c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/69c3f2d82c488668a2dcc25a50cfcd7316fe8c8c", "committedDate": "2020-02-25T21:44:43Z", "message": "Fallback to V4 port not IP."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01d8ba43904fb48e7413f6bb9a63524a649ea3ce", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/01d8ba43904fb48e7413f6bb9a63524a649ea3ce", "committedDate": "2020-02-25T21:57:45Z", "message": "Merge branch 'master' into discovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "035704fc5fb3c0cf90337eee85b846773dc8f21c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/035704fc5fb3c0cf90337eee85b846773dc8f21c", "committedDate": "2020-02-25T23:30:50Z", "message": "Merge branch 'master' into discovery"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4099, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}