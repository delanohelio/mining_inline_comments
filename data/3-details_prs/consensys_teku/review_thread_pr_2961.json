{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNzI0MzM2", "number": 2961, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDoxNzozNVrOEtpYFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDoyNzo1NVrOEtplzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mjk5Mjg3OnYy", "diffSide": "RIGHT", "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/block/BlockManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDoxNzozNVrOHhjhew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowOTozMlrOHhlJaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0NzA2Nw==", "bodyText": "I don't think I'd expose this - just have callers use importBlock and then the caller should decide how they want to handle the result. I know it will mean a bunch of extra .reportExceptions() calls in places that otherwise could use a method reference, but I'm always very nervous about methods that automatically ignore results.", "url": "https://github.com/ConsenSys/teku/pull/2961#discussion_r504947067", "createdAt": "2020-10-14T20:17:35Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/block/BlockManager.java", "diffHunk": "@@ -121,12 +118,12 @@ void onBlockImported(ImportedBlockEvent blockImportedEvent) {\n     children.forEach(this::importBlockIgnoringResult);\n   }\n \n-  private void importBlockIgnoringResult(final SignedBeaconBlock block) {\n+  public void importBlockIgnoringResult(final SignedBeaconBlock block) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d037d8699fd9be71852eed810e0bedd383fb04d"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MzY3Mg==", "bodyText": "Sounds good.", "url": "https://github.com/ConsenSys/teku/pull/2961#discussion_r504973672", "createdAt": "2020-10-14T21:09:32Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/block/BlockManager.java", "diffHunk": "@@ -121,12 +118,12 @@ void onBlockImported(ImportedBlockEvent blockImportedEvent) {\n     children.forEach(this::importBlockIgnoringResult);\n   }\n \n-  private void importBlockIgnoringResult(final SignedBeaconBlock block) {\n+  public void importBlockIgnoringResult(final SignedBeaconBlock block) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk0NzA2Nw=="}, "originalCommit": {"oid": "3d037d8699fd9be71852eed810e0bedd383fb04d"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzAyNzk4OnYy", "diffSide": "RIGHT", "path": "sync/src/integration-test/java/tech/pegasys/teku/sync/BlockPropagationIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMDoyNzo1NlrOHhj2zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTozMTo1NVrOHhlypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk1MjUyNw==", "bodyText": "Stray println.", "url": "https://github.com/ConsenSys/teku/pull/2961#discussion_r504952527", "createdAt": "2020-10-14T20:27:56Z", "author": {"login": "ajsutton"}, "path": "sync/src/integration-test/java/tech/pegasys/teku/sync/BlockPropagationIntegrationTest.java", "diffHunk": "@@ -103,19 +103,20 @@ public void shouldFetchUnknownAncestorsOfPropagatedBlock(\n \n     // Propagate new block\n     final SignedBeaconBlock newBlock = node1.chainUtil().createBlockAtSlot(currentSlot);\n+    System.out.println(newBlock.getSlot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d037d8699fd9be71852eed810e0bedd383fb04d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk4NDIzMQ==", "bodyText": "Removed.", "url": "https://github.com/ConsenSys/teku/pull/2961#discussion_r504984231", "createdAt": "2020-10-14T21:31:55Z", "author": {"login": "cemozerr"}, "path": "sync/src/integration-test/java/tech/pegasys/teku/sync/BlockPropagationIntegrationTest.java", "diffHunk": "@@ -103,19 +103,20 @@ public void shouldFetchUnknownAncestorsOfPropagatedBlock(\n \n     // Propagate new block\n     final SignedBeaconBlock newBlock = node1.chainUtil().createBlockAtSlot(currentSlot);\n+    System.out.println(newBlock.getSlot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk1MjUyNw=="}, "originalCommit": {"oid": "3d037d8699fd9be71852eed810e0bedd383fb04d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3193, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}