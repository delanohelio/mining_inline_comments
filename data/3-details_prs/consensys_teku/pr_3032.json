{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDA3NjIy", "number": 3032, "title": "Reduce BeaconState backing tree memory footprint by ~25% ", "bodyText": "PR Description\nThat's a quick and easy way to reduce state memory by 25%. Validator container has a number of small types (UInt64 and a Boolean) which are stored unpacked in the tree and each occupies 32 bytes.\nCompressedLeafNodeImpl holds just required number of bytes\nRough benchmarking even shows small performance gain with this change ~34slots/sec -> ~35slots/sec\nFixed Issue(s)\nPartially address #3031\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-10-20T18:25:38Z", "url": "https://github.com/ConsenSys/teku/pull/3032", "merged": true, "mergeCommit": {"oid": "bfbbbc417ea9d8a5330c076affbe2c6a60f14e98"}, "closed": true, "closedAt": "2020-10-22T15:19:57Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUc7d6gH2gAyNTA3MDA3NjIyOjAwZjdkMzM1YjhmMzNjMjhkNzlmOWRlODJhMjNlMDc1YzM0NjVlNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVC3hbAH2gAyNTA3MDA3NjIyOmU0MmY5M2ViZGZkMWU1YjYwZTk4ODAzMWY5NmIyMzIzYWQzYmEzOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00f7d335b8f33c28d79f9de82a23e075c3465e44", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/00f7d335b8f33c28d79f9de82a23e075c3465e44", "committedDate": "2020-10-20T18:18:01Z", "message": "Add compressed backing LeafNode implementation to save memory for container members with types < 32bytes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492ed79ee007933f5eec1a7ac13bdfb98ea24b59", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/492ed79ee007933f5eec1a7ac13bdfb98ea24b59", "committedDate": "2020-10-20T18:35:35Z", "message": "Fix LeafNode equals() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e83ae3db39b0a48968c34ec25ed8ce0d43722b44", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/e83ae3db39b0a48968c34ec25ed8ce0d43722b44", "committedDate": "2020-10-21T14:38:22Z", "message": "Update blocks dump"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MDkwNzMx", "url": "https://github.com/ConsenSys/teku/pull/3032#pullrequestreview-514090731", "createdAt": "2020-10-21T19:01:36Z", "commit": {"oid": "e83ae3db39b0a48968c34ec25ed8ce0d43722b44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTowMTozNlrOHl-7Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTowMTozNlrOHl-7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5MDM3MQ==", "bodyText": "Why are we appling this only when the byteIndex is zero? Can we not use a compressed tree node even when the byte index is not 0?", "url": "https://github.com/ConsenSys/teku/pull/3032#discussion_r509590371", "createdAt": "2020-10-21T19:01:36Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/type/BasicViewTypes.java", "diffHunk": "@@ -31,27 +31,35 @@\n \n /** The collection of commonly used basic types */\n public class BasicViewTypes {\n+  private static final TreeNode SINGLE_FALSE_NODE = TreeNode.createCompressedLeafNode(Bytes.of(0));\n+  private static final TreeNode SINGLE_TRUE_NODE = TreeNode.createCompressedLeafNode(Bytes.of(1));\n \n   public static final BasicViewType<BitView> BIT_TYPE =\n       new BasicViewType<>(1) {\n         @Override\n         public BitView createFromBackingNode(TreeNode node, int idx) {\n-          return new BitView((node.hashTreeRoot().get(idx / 8) & (1 << (idx % 8))) != 0);\n+          return BitView.viewOf((node.hashTreeRoot().get(idx / 8) & (1 << (idx % 8))) != 0);\n         }\n \n         @Override\n         public TreeNode updateBackingNode(TreeNode srcNode, int idx, ViewRead newValue) {\n-          MutableBytes32 dest = srcNode.hashTreeRoot().mutableCopy();\n           int byteIndex = idx / 8;\n           int bitIndex = idx % 8;\n-          byte b = dest.get(byteIndex);\n-          if (((BitView) newValue).get()) {\n+          Bytes32 originalBytes = srcNode.hashTreeRoot();\n+          byte b = originalBytes.get(byteIndex);\n+          boolean bit = ((BitView) newValue).get();\n+          if (bit) {\n             b = (byte) (b | (1 << bitIndex));\n           } else {\n             b = (byte) (b & ~(1 << bitIndex));\n           }\n-          dest.set(byteIndex, b);\n-          return TreeNode.createLeafNode(dest);\n+          if (srcNode.isZero() && byteIndex == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e83ae3db39b0a48968c34ec25ed8ce0d43722b44"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MDkyNTYw", "url": "https://github.com/ConsenSys/teku/pull/3032#pullrequestreview-514092560", "createdAt": "2020-10-21T19:03:23Z", "commit": {"oid": "e83ae3db39b0a48968c34ec25ed8ce0d43722b44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42f93ebdfd1e5b60e988031f96b2323ad3ba399", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/e42f93ebdfd1e5b60e988031f96b2323ad3ba399", "committedDate": "2020-10-22T14:30:06Z", "message": "Merge branch 'master' into feature/optimize-mem-backing-tree"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3227, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}