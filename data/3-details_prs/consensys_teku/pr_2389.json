{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMDQwMDUw", "number": 2389, "title": "add and maintain state by state root table in hot database.", "bodyText": "added tests to show slots missing blocks get added\n\n\nupdate getState to allow search by state root, currently will only work for hot states.\n\n\nstate by state root table is cleaned up periodically.\n\n\nSigned-off-by: Paul Harris paul.harris@consensys.net\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-07-20T04:34:56Z", "url": "https://github.com/ConsenSys/teku/pull/2389", "merged": true, "mergeCommit": {"oid": "43e04799453985d5a125d2a83b6bec48abf405ea"}, "closed": true, "closedAt": "2020-07-22T06:16:40Z", "author": {"login": "rolfyone"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2qAWJgH2gAyNDUzMDQwMDUwOjZiMzUyYTViOTExNzhlZGY5MzBkMWNiM2NjMDgwNzZkZDIxYjUzYmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3UfekAH2gAyNDUzMDQwMDUwOmMzYWIwNjZiMTliMGNkNTI0ZDVmMzNlNDUwZTYyY2ExMTUyNjEwMzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/6b352a5b91178edf930d1cb3cc08076dd21b53bb", "committedDate": "2020-07-20T04:34:23Z", "message": "add and maintain state by state root table in hot database.\n\n - added tests to show slots missing blocks get added\n\n - update getState to allow search by state root, currently will only work for hot states.\n\n - state by state root table is cleaned up periodically.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjkzNjA5", "url": "https://github.com/ConsenSys/teku/pull/2389#pullrequestreview-451293609", "createdAt": "2020-07-20T04:49:16Z", "commit": {"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNDo0OToxNlrOGz37hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNDo1NjoyN1rOGz4IDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0NjkxOQ==", "bodyText": "nit: Probably not the most accurate name.  Maybe just putStateRoot?", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457046919", "createdAt": "2020-07-20T04:49:16Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/forkchoice/MutableStore.java", "diffHunk": "@@ -27,6 +29,8 @@ default void putBlockAndState(SignedBlockAndState blockAndState) {\n     putBlockAndState(blockAndState.getBlock(), blockAndState.getState());\n   }\n \n+  void putStateRootToBlockRoot(Bytes32 stateRoot, SlotAndBlockRoot slotAndBlockRoot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0NzgyOA==", "bodyText": "nit: inline variable.", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457047828", "createdAt": "2020-07-20T04:51:26Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -187,6 +202,45 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public SafeFuture<Optional<BeaconState>> getStateByStateRoot(final Bytes32 stateRoot) {\n+    final UpdatableStore store = getStore();\n+    if (store == null) {\n+      LOG.trace(\"No state at stateRoot {} because the store is not set\", stateRoot);\n+      return STATE_NOT_AVAILABLE;\n+    }\n+    return historicalChainData\n+        .getSlotAndBlockRootByStateRoot(stateRoot)\n+        .thenCompose(\n+            maybeSlotAndBlockRoot -> {\n+              if (maybeSlotAndBlockRoot.isEmpty()) {\n+                return STATE_NOT_AVAILABLE;\n+              }\n+              return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n+            });\n+  }\n+\n+  private SafeFuture<Optional<BeaconState>> getStateFromSlotAndBlock(\n+      final SlotAndBlockRoot slotAndBlockRoot) {\n+    return getStateByBlockRoot(slotAndBlockRoot.getBlockRoot())\n+        .thenApply(\n+            maybeState ->\n+                maybeState.map(\n+                    preState -> regenerateBeaconState(preState, slotAndBlockRoot.getSlot())));\n+  }\n+\n+  private BeaconState regenerateBeaconState(final BeaconState preState, final UnsignedLong slot) {\n+    if (preState.getSlot().equals(slot)) {\n+      return preState;\n+    }\n+    try {\n+      final BeaconState desiredState = stateTransition.process_slots(preState, slot);\n+      return desiredState;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1MDEyNQ==", "bodyText": "We should probably either name this to be clear that it only contains state roots for empty slots or update StateTransition to also put the state root after each processed block. I kind of like the idea of StateTransition putting all states and then you can avoid iterating through the hot blocks in RocksDbDatabase to record their state roots.  Either way is fine though - not sure if there are potential issues with doing it in StateTransition.", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r457050125", "createdAt": "2020-07-20T04:56:27Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/events/StorageUpdate.java", "diffHunk": "@@ -106,4 +110,8 @@ public boolean isEmpty() {\n   public Map<UnsignedLong, VoteTracker> getVotes() {\n     return votes;\n   }\n+\n+  public Map<Bytes32, SlotAndBlockRoot> getStateRootsToBlockRoots() {\n+    return stateRootsToBlockRoots;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b352a5b91178edf930d1cb3cc08076dd21b53bb"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b3b586d27fa71b4111bbce3d0a44fd0cda63255", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/2b3b586d27fa71b4111bbce3d0a44fd0cda63255", "committedDate": "2020-07-21T20:10:37Z", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9cca5442541aa7316976199dc82bd9b2a08009f", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/b9cca5442541aa7316976199dc82bd9b2a08009f", "committedDate": "2020-07-22T03:25:47Z", "message": "hot state roots now map to the correct block root.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52d81500c9894f530d7c5577e83b00de076dfe20", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/52d81500c9894f530d7c5577e83b00de076dfe20", "committedDate": "2020-07-22T03:38:25Z", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/b73552155ce9b04055a83cfdc55a301b52097f14", "committedDate": "2020-07-22T03:50:33Z", "message": "these test cases are covered fairly easily at the ChainDataProvider layer, so i'm removing these to cut down on duplication.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTc4NDU0", "url": "https://github.com/ConsenSys/teku/pull/2389#pullrequestreview-452978454", "createdAt": "2020-07-22T04:01:05Z", "commit": {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDowMTowNVrOG1R23Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoyNjoxOVrOG1SPQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDI4NQ==", "bodyText": "Mocking BeaconChainUtil is unexpected given its a test util class. I think I'd just always use the real BeaconChainUtil. The only place it's used is for the non-mock version anyway.", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458520285", "createdAt": "2020-07-22T04:01:05Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractDataBackedRestAPIIntegrationTest.java", "diffHunk": "@@ -109,10 +112,13 @@ private void setupStorage(final StorageSystem storageSystem, final boolean useMo\n     recentChainData = storageSystem.recentChainData();\n     chainBuilder = ChainBuilder.create(VALIDATOR_KEYS);\n     chainUpdater = new ChainUpdater(recentChainData, chainBuilder);\n-    this.forkChoice =\n-        useMockForkChoice\n-            ? mock(ForkChoice.class)\n-            : new ForkChoice(recentChainData, stateTransition);\n+    if (useMockForkChoice) {\n+      beaconChainUtil = mock(BeaconChainUtil.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNDMwMA==", "bodyText": "I don't think we should have this dependency.  I suspect SlotAndBlockRoot should just be in :ethereum:datastructures", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458524300", "createdAt": "2020-07-22T04:17:25Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/build.gradle", "diffHunk": "@@ -7,6 +7,7 @@ dependencies {\n   implementation project(':logging')\n   implementation project(':pow')\n   implementation project(':util')\n+  implementation project(':storage:api')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNjUzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        maybeSlotAndBlockRoot -> {\n          \n          \n            \n                          if (maybeSlotAndBlockRoot.isEmpty()) {\n          \n          \n            \n                            return STATE_NOT_AVAILABLE;\n          \n          \n            \n                          }\n          \n          \n            \n                          return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n          \n          \n            \n                        });\n          \n          \n            \n                        maybeSlotAndBlockRoot ->\n          \n          \n            \n                            maybeSlotAndBlockRoot\n          \n          \n            \n                                .map(this::getStateFromSlotAndBlock)\n          \n          \n            \n                                .orElse(STATE_NOT_AVAILABLE));\n          \n          \n            \n                        });", "url": "https://github.com/ConsenSys/teku/pull/2389#discussion_r458526531", "createdAt": "2020-07-22T04:26:19Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/client/CombinedChainDataClient.java", "diffHunk": "@@ -205,6 +206,32 @@ public boolean isFinalizedEpoch(final UnsignedLong epoch) {\n     return historicalChainData.getFinalizedStateByBlockRoot(blockRoot);\n   }\n \n+  public SafeFuture<Optional<BeaconState>> getStateByStateRoot(final Bytes32 stateRoot) {\n+    final UpdatableStore store = getStore();\n+    if (store == null) {\n+      LOG.trace(\"No state at stateRoot {} because the store is not set\", stateRoot);\n+      return STATE_NOT_AVAILABLE;\n+    }\n+    return historicalChainData\n+        .getSlotAndBlockRootByStateRoot(stateRoot)\n+        .thenCompose(\n+            maybeSlotAndBlockRoot -> {\n+              if (maybeSlotAndBlockRoot.isEmpty()) {\n+                return STATE_NOT_AVAILABLE;\n+              }\n+              return getStateFromSlotAndBlock(maybeSlotAndBlockRoot.get());\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73552155ce9b04055a83cfdc55a301b52097f14"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f89f9ccebbcc29bc3021967c9c46e7c24c97fe", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/95f89f9ccebbcc29bc3021967c9c46e7c24c97fe", "committedDate": "2020-07-22T05:06:01Z", "message": "moved SlotAndBlockRoot to :ethereum:datastructures to remove the dependency on :storage:api\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f265c7bd7caf8300f72d1b911e5061b7f0de7b9", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/1f265c7bd7caf8300f72d1b911e5061b7f0de7b9", "committedDate": "2020-07-22T05:52:52Z", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3ab066b19b0cd524d5f33e450e62ca115261030", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/c3ab066b19b0cd524d5f33e450e62ca115261030", "committedDate": "2020-07-22T06:04:24Z", "message": "Merge remote-tracking branch 'upstream/master' into 2184-hotblock-stateroot-lookups"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3656, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}