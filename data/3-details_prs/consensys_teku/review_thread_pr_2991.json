{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDkzMDU2", "number": 2991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjo1Mjo1NlrOEuRX5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjo1Mjo1NlrOEuRX5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTU0NTk3OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/PostSubscribeToBeaconCommitteeSubnet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjo1Mjo1NlrOHikTtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzowMTozOVrOHikmNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAwODUwMQ==", "bodyText": "i know this is from standard api, but its long :(\nmaybe \"Subscribe to committee subnet\"?", "url": "https://github.com/ConsenSys/teku/pull/2991#discussion_r506008501", "createdAt": "2020-10-16T02:52:56Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/PostSubscribeToBeaconCommitteeSubnet.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.validator;\n+\n+import static java.util.Arrays.asList;\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_VALIDATOR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.http.Context;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.request.v1.validator.BeaconCommitteeSubscriptionRequest;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class PostSubscribeToBeaconCommitteeSubnet extends AbstractHandler {\n+\n+  public static final String ROUTE = \"/eth/v1/validator/beacon_committee_subscriptions\";\n+\n+  private final ValidatorDataProvider provider;\n+\n+  public PostSubscribeToBeaconCommitteeSubnet(\n+      final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getValidatorDataProvider(), jsonProvider);\n+  }\n+\n+  public PostSubscribeToBeaconCommitteeSubnet(\n+      final ValidatorDataProvider provider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = provider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Signal beacon node to prepare for a committee subnet\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0aa689c061271e64eb5cefc40389918a5056f10"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAxMzIzNw==", "bodyText": "We really must find a more forgiving stylesheet...\nChanged.", "url": "https://github.com/ConsenSys/teku/pull/2991#discussion_r506013237", "createdAt": "2020-10-16T03:01:39Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/validator/PostSubscribeToBeaconCommitteeSubnet.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.validator;\n+\n+import static java.util.Arrays.asList;\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.SERVICE_UNAVAILABLE;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_VALIDATOR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.http.Context;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.request.v1.validator.BeaconCommitteeSubscriptionRequest;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class PostSubscribeToBeaconCommitteeSubnet extends AbstractHandler {\n+\n+  public static final String ROUTE = \"/eth/v1/validator/beacon_committee_subscriptions\";\n+\n+  private final ValidatorDataProvider provider;\n+\n+  public PostSubscribeToBeaconCommitteeSubnet(\n+      final DataProvider dataProvider, final JsonProvider jsonProvider) {\n+    this(dataProvider.getValidatorDataProvider(), jsonProvider);\n+  }\n+\n+  public PostSubscribeToBeaconCommitteeSubnet(\n+      final ValidatorDataProvider provider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = provider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Signal beacon node to prepare for a committee subnet\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAwODUwMQ=="}, "originalCommit": {"oid": "c0aa689c061271e64eb5cefc40389918a5056f10"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3210, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}