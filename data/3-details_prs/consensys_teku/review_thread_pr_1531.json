{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MzI2MDQ1", "number": 1531, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDo0MTo0MVrODvTBmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDo0MTo0MVrODvTBmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTIxMzY5OnYy", "diffSide": "RIGHT", "path": "ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDo0MTo0MVrOGBpF5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDo0MTo0MVrOGBpF5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3NTAxNA==", "bodyText": "Are you accounting for the 0 index being set here?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for (int i = data.nextSetBit(0); i > 0; i = data.nextSetBit(i + 1)) {\n          \n          \n            \n                for (int i = data.nextSetBit(0); i >= 0; i = data.nextSetBit(i + 1)) {", "url": "https://github.com/ConsenSys/teku/pull/1531#discussion_r404375014", "createdAt": "2020-04-06T20:41:41Z", "author": {"login": "cemozerr"}, "path": "ssz/src/main/java/tech/pegasys/artemis/util/SSZTypes/Bitlist.java", "diffHunk": "@@ -13,41 +13,63 @@\n \n package tech.pegasys.artemis.util.SSZTypes;\n \n-import static java.util.Objects.isNull;\n+import static com.google.common.base.Preconditions.checkElementIndex;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n+import java.util.BitSet;\n+import java.util.List;\n+import java.util.Objects;\n import java.util.stream.IntStream;\n import org.apache.tuweni.bytes.Bytes;\n \n public class Bitlist {\n \n-  private byte[] byteArray;\n-  private long maxSize;\n+  private final BitSet data;\n+  private final int size;\n+  private final long maxSize;\n \n   public Bitlist(int arraySize, long maxSize) {\n-    this.byteArray = new byte[arraySize];\n+    this.size = arraySize;\n+    this.data = new BitSet(arraySize);\n     this.maxSize = maxSize;\n   }\n \n   public Bitlist(Bitlist bitlist) {\n-    this.byteArray = new byte[bitlist.getByteArray().length];\n-    for (int i = 0; i < bitlist.getByteArray().length; i++) {\n-      this.byteArray[i] = bitlist.getByteArray()[i];\n-    }\n+    this.size = bitlist.size;\n+    this.data = (BitSet) bitlist.data.clone();\n     this.maxSize = bitlist.getMaxSize();\n   }\n \n-  public Bitlist(byte[] bitlist, long maxSize) {\n-    this.byteArray = bitlist;\n+  private Bitlist(int size, BitSet data, long maxSize) {\n+    this.size = size;\n+    this.data = data;\n     this.maxSize = maxSize;\n   }\n \n   public void setBit(int i) {\n-    this.byteArray[i] = 1;\n+    checkElementIndex(i, size);\n+    data.set(i);\n+  }\n+\n+  public boolean getBit(int i) {\n+    checkElementIndex(i, size);\n+    return data.get(i);\n+  }\n+\n+  public boolean intersects(Bitlist other) {\n+    return data.intersects(other.data);\n   }\n \n-  public int getBit(int i) {\n-    return byteArray[i];\n+  public List<Integer> getAllSetBits() {\n+    final List<Integer> setBits = new ArrayList<>();\n+    for (int i = data.nextSetBit(0); i > 0; i = data.nextSetBit(i + 1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6645498064bee459abbbbe0d354e29212f78219"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3811, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}