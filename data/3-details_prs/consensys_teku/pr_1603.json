{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDg2OTc3", "number": 1603, "title": "1356 smaller 1", "bodyText": "PR Description\nImplementation for validator/block POST endpoint.\nFixed Issue(s)\nAddresses #1356", "createdAt": "2020-04-16T02:51:48Z", "url": "https://github.com/ConsenSys/teku/pull/1603", "merged": true, "mergeCommit": {"oid": "f2df0a451fc7ca82ad07e12b1d0075d7469565b7"}, "closed": true, "closedAt": "2020-04-19T11:30:06Z", "author": {"login": "mark-terry"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYHwO6gFqTM5NDM3NDQ3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZH7bRAH2gAyNDA0MDg2OTc3OmFmMzBhNmJlYzgyNDhlOTc1NTk2ZWJkNGUxZTU1MWExNTYwODc2NTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mzc0NDc3", "url": "https://github.com/ConsenSys/teku/pull/1603#pullrequestreview-394374477", "createdAt": "2020-04-16T07:42:16Z", "commit": {"oid": "011cbf446ec9b397e5b57a3bae04611709ff80e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo0MjoxNlrOGGYikw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo0MjoxNlrOGGYikw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM0NjcwNw==", "bodyText": "is this return actually required? i would have thought it to be redundant..", "url": "https://github.com/ConsenSys/teku/pull/1603#discussion_r409346707", "createdAt": "2020-04-16T07:42:16Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/PostBlock.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.validator;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR;\n+import static javax.servlet.http.HttpServletResponse.SC_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_ACCEPTED;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_SERVICE_UNAVAILABLE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_VALIDATOR;\n+\n+import com.fasterxml.jackson.core.JsonParseException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.artemis.api.SyncDataProvider;\n+import tech.pegasys.artemis.api.ValidatorDataProvider;\n+import tech.pegasys.artemis.api.schema.SignedBeaconBlock;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class PostBlock implements Handler {\n+  public static final String ROUTE = \"/validator/block\";\n+\n+  private final JsonProvider jsonProvider;\n+  private final ValidatorDataProvider validatorDataProvider;\n+  private final SyncDataProvider syncDataProvider;\n+\n+  public PostBlock(\n+      final ValidatorDataProvider validatorDataProvider,\n+      final SyncDataProvider syncDataProvider,\n+      final JsonProvider jsonProvider) {\n+    this.jsonProvider = jsonProvider;\n+    this.validatorDataProvider = validatorDataProvider;\n+    this.syncDataProvider = syncDataProvider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Submit a signed transaction to be imported.\",\n+      tags = {TAG_VALIDATOR},\n+      requestBody =\n+          @OpenApiRequestBody(content = {@OpenApiContent(from = SignedBeaconBlock.class)}),\n+      description =\n+          \"Submit a signed beacon block to the beacon node to be imported.\"\n+              + \" Validation is expected to be performed by the beacon node.\",\n+      responses = {\n+        @OpenApiResponse(\n+            status = RES_OK,\n+            description = \"Block has been successfully broadcast, validated and imported.\"),\n+        @OpenApiResponse(\n+            status = RES_ACCEPTED,\n+            description =\n+                \"Block has been successfully broadcast, but failed validation and has not been imported.\"),\n+        @OpenApiResponse(status = RES_BAD_REQUEST, description = \"Unable to parse request body.\"),\n+        @OpenApiResponse(\n+            status = RES_INTERNAL_ERROR,\n+            description = \"Beacon node experienced an internal error.\"),\n+        @OpenApiResponse(\n+            status = RES_SERVICE_UNAVAILABLE,\n+            description = \"Beacon node is currently syncing.\")\n+      })\n+  @SuppressWarnings(\"FutureReturnValueIgnored\")\n+  @Override\n+  public void handle(final Context ctx) throws Exception {\n+    try {\n+      if (syncDataProvider.getSyncStatus().isSyncing()) {\n+        ctx.status(SC_SERVICE_UNAVAILABLE);\n+        return;\n+      }\n+\n+      final SignedBeaconBlock signedBeaconBlock =\n+          jsonProvider.jsonToObject(ctx.body(), SignedBeaconBlock.class);\n+\n+      validatorDataProvider\n+          .submitSignedBlock(signedBeaconBlock)\n+          .thenApplyChecked(\n+              validatorBlockResult -> {\n+                ctx.status(validatorBlockResult.getResponseCode());\n+                if (validatorBlockResult.getFailureReason().isPresent()) {\n+                  ctx.result(\n+                      jsonProvider.objectToJSON(\n+                          validatorBlockResult.getFailureReason().get().getMessage()));\n+                } else {\n+                  ctx.result(jsonProvider.objectToJSON(validatorBlockResult.getHash_tree_root()));\n+                }\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011cbf446ec9b397e5b57a3bae04611709ff80e4"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mzc2ODgx", "url": "https://github.com/ConsenSys/teku/pull/1603#pullrequestreview-394376881", "createdAt": "2020-04-16T07:45:53Z", "commit": {"oid": "011cbf446ec9b397e5b57a3bae04611709ff80e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTM2Mjkx", "url": "https://github.com/ConsenSys/teku/pull/1603#pullrequestreview-395136291", "createdAt": "2020-04-17T03:22:56Z", "commit": {"oid": "d7db916260b4040e9dc1467c959e51c3701d33d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "919145fe71acf1fd9b2261eb91fb796d4c9f8f86", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/919145fe71acf1fd9b2261eb91fb796d4c9f8f86", "committedDate": "2020-04-19T09:42:41Z", "message": "[1356] validator/block endpoint implementation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05aa72661d3a727574ea780ec1a3e6fa0aa4f3cf", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/05aa72661d3a727574ea780ec1a3e6fa0aa4f3cf", "committedDate": "2020-04-19T09:42:42Z", "message": "[1356] Removed non-useful error."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809d16f7fb042fb81ccb3622ab2ffc90413c3c3c", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/809d16f7fb042fb81ccb3622ab2ffc90413c3c3c", "committedDate": "2020-04-19T09:42:42Z", "message": "[1356] Improved OpenAPI definition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e275571b83ae360ef40dca7a648dedd1a5512d3", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/8e275571b83ae360ef40dca7a648dedd1a5512d3", "committedDate": "2020-04-19T09:42:42Z", "message": "[1356] PR fixes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a57e67b4136e6f71ff888b125f08ec552c22f7fc", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/a57e67b4136e6f71ff888b125f08ec552c22f7fc", "committedDate": "2020-04-19T09:42:42Z", "message": "[1356] Small refactoring."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7db916260b4040e9dc1467c959e51c3701d33d3", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/d7db916260b4040e9dc1467c959e51c3701d33d3", "committedDate": "2020-04-17T03:18:39Z", "message": "[1356] Small refactoring."}, "afterCommit": {"oid": "a57e67b4136e6f71ff888b125f08ec552c22f7fc", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/a57e67b4136e6f71ff888b125f08ec552c22f7fc", "committedDate": "2020-04-19T09:42:42Z", "message": "[1356] Small refactoring."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af30a6bec8248e975596ebd4e1e551a156087654", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/af30a6bec8248e975596ebd4e1e551a156087654", "committedDate": "2020-04-19T10:28:26Z", "message": "[1356] Build fix."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4294, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}