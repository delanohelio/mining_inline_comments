{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNjcyMzgz", "number": 1278, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToyNzowMlrODlNXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoyOTo0M1rODlOfRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzQyODM5OnYy", "diffSide": "RIGHT", "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/Sha256Benchmark.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMToyNzowMlrOFx-PBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDo1Njo0MlrOFyj4pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0NDE5OQ==", "bodyText": "Out of interest, do you have any idea on how our Sha256 performance compares to other implementations (particularly native ones)?", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r387944199", "createdAt": "2020-03-04T21:27:02Z", "author": {"login": "ajsutton"}, "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/Sha256Benchmark.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.benchmarks;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.apache.tuweni.bytes.MutableBytes;\n+import org.apache.tuweni.crypto.Hash;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@State(Scope.Thread)\n+public class Sha256Benchmark {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMjI1Nw==", "bodyText": "Here a comparison of java implementations I found:\nhttps://stackoverflow.com/questions/7846841/how-to-calculate-sha256-faster-in-java\nInteresting that Apache implementation is more than 2x faster than Bouncy Castle\nHere is some native implementation wrapped by JCA interface: https://github.com/corretto/amazon-corretto-crypto-provider. Though it is available for Linux only and I couldn't find any benchmark results for it.\nHere I found some Java/Native variants comparison within the same lib, but I'm not sure which Java implementation was used and how good is the native implementation: https://www.nayuki.io/page/native-hash-functions-for-java\nAnyways sha256 is far from being a bottleneck for now, so I don't think it worth spending much time for alternatives investigation", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r388212257", "createdAt": "2020-03-05T10:42:40Z", "author": {"login": "Nashatyrev"}, "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/Sha256Benchmark.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.benchmarks;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.apache.tuweni.bytes.MutableBytes;\n+import org.apache.tuweni.crypto.Hash;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@State(Scope.Thread)\n+public class Sha256Benchmark {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0NDE5OQ=="}, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU1OTE5Mg==", "bodyText": "Agreed - purely asking out of interest. :)", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r388559192", "createdAt": "2020-03-05T20:53:23Z", "author": {"login": "ajsutton"}, "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/Sha256Benchmark.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.benchmarks;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.apache.tuweni.bytes.MutableBytes;\n+import org.apache.tuweni.crypto.Hash;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@State(Scope.Thread)\n+public class Sha256Benchmark {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0NDE5OQ=="}, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU2MTA2Mg==", "bodyText": "On a similar vein, what are your thoughts on switching to a faster BLS implementation (I think it was herumi) @Nashatyrev ?", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r388561062", "createdAt": "2020-03-05T20:56:42Z", "author": {"login": "cemozerr"}, "path": "eth-benchmark-tests/src/jmh/java/tech/pegasys/artemis/benchmarks/Sha256Benchmark.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.benchmarks;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.apache.tuweni.bytes.MutableBytes;\n+import org.apache.tuweni.crypto.Hash;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@State(Scope.Thread)\n+public class Sha256Benchmark {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0NDE5OQ=="}, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzYxMjg2OnYy", "diffSide": "RIGHT", "path": "ethereum/datastructures/src/test/java/tech/pegasys/artemis/datastructures/util/CommitteeUtilTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoyOTo0M1rOFyABuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMDo1MjoxMFrOFyjuzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzU2Mw==", "bodyText": "Given how comprehensive the reference tests are for shuffling, we can probably delete the original implementation and ditch this test.  Maybe hard code one expected shuffle result here just as a quick sanity check as part of unit tests and leave the details to the reference tests.", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r387973563", "createdAt": "2020-03-04T22:29:43Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/test/java/tech/pegasys/artemis/datastructures/util/CommitteeUtilTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.datastructures.util;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.stream.IntStream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.jupiter.api.Test;\n+\n+public class CommitteeUtilTest {\n+\n+  @Test\n+  void testListShuffleAndShuffledIndexCompatibility() {\n+    Bytes32 seed = Bytes32.ZERO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5ODczMQ==", "bodyText": "The original compute_shuffled_index is still actual for computing proposer index. So we should leave it and may leave this simple test", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r388198731", "createdAt": "2020-03-05T10:18:07Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/datastructures/src/test/java/tech/pegasys/artemis/datastructures/util/CommitteeUtilTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.datastructures.util;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.stream.IntStream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.jupiter.api.Test;\n+\n+public class CommitteeUtilTest {\n+\n+  @Test\n+  void testListShuffleAndShuffledIndexCompatibility() {\n+    Bytes32 seed = Bytes32.ZERO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzU2Mw=="}, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU1ODU0Mg==", "bodyText": "ah ok, I thought we'd be able to delete it, so yes testing that they give the same results is definitely the best approach then.  Guess that explains how you got away with only doing backwards search and not forwards...", "url": "https://github.com/ConsenSys/teku/pull/1278#discussion_r388558542", "createdAt": "2020-03-05T20:52:10Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/test/java/tech/pegasys/artemis/datastructures/util/CommitteeUtilTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.datastructures.util;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.stream.IntStream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.jupiter.api.Test;\n+\n+public class CommitteeUtilTest {\n+\n+  @Test\n+  void testListShuffleAndShuffledIndexCompatibility() {\n+    Bytes32 seed = Bytes32.ZERO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzU2Mw=="}, "originalCommit": {"oid": "e88761e2579f3a06300771f2be8131eb2ccb918a"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2726, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}